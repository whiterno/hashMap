
build/main:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x27>
 328:	78 38                	js     362 <__abi_tag-0x1a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	10 00                	adc    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	80 00 c0             	add    BYTE PTR [rax],0xc0
 34c:	04 00                	add    al,0x0
 34e:	00 00                	add    BYTE PTR [rax],al
 350:	01 00                	add    DWORD PTR [rax],eax
 352:	00 00                	add    BYTE PTR [rax],al
 354:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    al,0x0
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	14 00                	adc    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	03 00                	add    eax,DWORD PTR [rax]
 362:	00 00                	add    BYTE PTR [rax],al
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push rbp
 367:	00 b8 d2 d8 8f 77    	add    BYTE PTR [rax+0x778fd8d2],bh
 36d:	73 89                	jae    2f8 <__abi_tag-0x84>
 36f:	b6 d8                	mov    dh,0xd8
 371:	b4 b5                	mov    ah,0xb5
 373:	0f 52 dc             	rsqrtps xmm3,xmm4
 376:	86 83 c4 c8 8e 0b    	xchg   BYTE PTR [rbx+0xb8ec8c4],al

Disassembly of section .note.ABI-tag:

000000000000037c <__abi_tag>:
 37c:	04 00                	add    al,0x0
 37e:	00 00                	add    BYTE PTR [rax],al
 380:	10 00                	adc    BYTE PTR [rax],al
 382:	00 00                	add    BYTE PTR [rax],al
 384:	01 00                	add    DWORD PTR [rax],eax
 386:	00 00                	add    BYTE PTR [rax],al
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push rbp
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 03                	add    BYTE PTR [rbx],al
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 02                	add    BYTE PTR [rdx],al
 395:	00 00                	add    BYTE PTR [rax],al
 397:	00 00                	add    BYTE PTR [rax],al
 399:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    al,BYTE PTR [rax]
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	1e                   	(bad)
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 01                	add    BYTE PTR [rcx],al
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 06                	add    BYTE PTR [rsi],al
 3ad:	00 00                	add    BYTE PTR [rax],al
 3af:	00 00                	add    BYTE PTR [rax],al
 3b1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3b7:	00 1e                	add    BYTE PTR [rsi],bl
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 00                	add    BYTE PTR [rax],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 d1                	add    cl,dl
 3c1:	65 ce                	gs (bad)
 3c3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	87 00                	xchg   DWORD PTR [rax],eax
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 3f6:	00 00                	add    BYTE PTR [rax],al
 3f8:	19 01                	sbb    DWORD PTR [rcx],eax
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	2d 01 00 00 12       	sub    eax,0x12000001
	...
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 b7 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],dh
	...
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 99 00 00 00 12    	add    BYTE PTR [rcx+0x12000000],bl
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 34 01             	add    BYTE PTR [rcx+rax*1],dh
 45a:	00 00                	add    BYTE PTR [rax],al
 45c:	12 00                	adc    al,BYTE PTR [rax]
	...
 46e:	00 00                	add    BYTE PTR [rax],al
 470:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 471:	00 00                	add    BYTE PTR [rax],al
 473:	00 12                	add    BYTE PTR [rdx],dl
	...
 485:	00 00                	add    BYTE PTR [rax],al
 487:	00 0a                	add    BYTE PTR [rdx],cl
 489:	01 00                	add    DWORD PTR [rax],eax
 48b:	00 12                	add    BYTE PTR [rdx],dl
	...
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 eb                	add    bl,ch
 4a1:	00 00                	add    BYTE PTR [rax],al
 4a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4b5:	00 00                	add    BYTE PTR [rax],al
 4b7:	00 a7 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],ah
	...
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 18                	add    BYTE PTR [rax],bl
 4d1:	01 00                	add    DWORD PTR [rax],eax
 4d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4e5:	00 00                	add    BYTE PTR [rax],al
 4e7:	00 3b                	add    BYTE PTR [rbx],bh
 4e9:	01 00                	add    DWORD PTR [rax],eax
 4eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 4fd:	00 00                	add    BYTE PTR [rax],al
 4ff:	00 76 00             	add    BYTE PTR [rsi+0x0],dh
 502:	00 00                	add    BYTE PTR [rax],al
 504:	12 00                	adc    al,BYTE PTR [rax]
	...
 516:	00 00                	add    BYTE PTR [rax],al
 518:	ac                   	lods   al,BYTE PTR ds:[rsi]
 519:	00 00                	add    BYTE PTR [rax],al
 51b:	00 12                	add    BYTE PTR [rdx],dl
	...
 52d:	00 00                	add    BYTE PTR [rax],al
 52f:	00 94 00 00 00 12 00 	add    BYTE PTR [rax+rax*1+0x120000],dl
	...
 546:	00 00                	add    BYTE PTR [rax],al
 548:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 54b:	00 12                	add    BYTE PTR [rdx],dl
	...
 55d:	00 00                	add    BYTE PTR [rax],al
 55f:	00 fd                	add    ch,bh
 561:	00 00                	add    BYTE PTR [rax],al
 563:	00 12                	add    BYTE PTR [rdx],dl
	...
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 49 01             	add    BYTE PTR [rcx+0x1],cl
 57a:	00 00                	add    BYTE PTR [rax],al
 57c:	12 00                	adc    al,BYTE PTR [rax]
	...
 58e:	00 00                	add    BYTE PTR [rax],al
 590:	b2 00                	mov    dl,0x0
 592:	00 00                	add    BYTE PTR [rax],al
 594:	12 00                	adc    al,BYTE PTR [rax]
	...
 5a6:	00 00                	add    BYTE PTR [rax],al
 5a8:	71 00                	jno    5aa <__abi_tag+0x22e>
 5aa:	00 00                	add    BYTE PTR [rax],al
 5ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 5be:	00 00                	add    BYTE PTR [rax],al
 5c0:	d5 00 00 00          	{rex2 0x0} add BYTE PTR [rax],al
 5c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	dd 00                	fld    QWORD PTR [rax]
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	10 00                	adc    BYTE PTR [rax],al
 5f2:	00 00                	add    BYTE PTR [rax],al
 5f4:	20 00                	and    BYTE PTR [rax],al
	...
 606:	00 00                	add    BYTE PTR [rax],al
 608:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
 60b:	00 12                	add    BYTE PTR [rdx],dl
	...
 61d:	00 00                	add    BYTE PTR [rax],al
 61f:	00 01                	add    BYTE PTR [rcx],al
 621:	00 00                	add    BYTE PTR [rax],al
 623:	00 20                	add    BYTE PTR [rax],ah
	...
 635:	00 00                	add    BYTE PTR [rax],al
 637:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 63a:	00 00                	add    BYTE PTR [rax],al
 63c:	20 00                	and    BYTE PTR [rax],al
	...
 64e:	00 00                	add    BYTE PTR [rax],al
 650:	42 01 00             	rex.X add DWORD PTR [rax],eax
 653:	00 12                	add    BYTE PTR [rdx],dl
	...
 665:	00 00                	add    BYTE PTR [rax],al
 667:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
 66a:	00 00                	add    BYTE PTR [rax],al
 66c:	12 00                	adc    al,BYTE PTR [rax]
	...
 67e:	00 00                	add    BYTE PTR [rax],al
 680:	c5 00 00             	(bad)
 683:	00 12                	add    BYTE PTR [rdx],dl
	...
 695:	00 00                	add    BYTE PTR [rax],al
 697:	00 1e                	add    BYTE PTR [rsi],bl
 699:	01 00                	add    DWORD PTR [rax],eax
 69b:	00 22                	add    BYTE PTR [rdx],ah
	...

Disassembly of section .dynstr:

00000000000006b0 <.dynstr>:
 6b0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 6b3:	67 6d                	ins    DWORD PTR es:[edi],dx
 6b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6b7:	5f                   	pop    rdi
 6b8:	73 74                	jae    72e <__abi_tag+0x3b2>
 6ba:	61                   	(bad)
 6bb:	72 74                	jb     731 <__abi_tag+0x3b5>
 6bd:	5f                   	pop    rdi
 6be:	5f                   	pop    rdi
 6bf:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6c2:	54                   	push   rsp
 6c3:	4d 5f                	rex.WRB pop r15
 6c5:	64 65 72 65          	fs gs jb 72e <__abi_tag+0x3b2>
 6c9:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6d0:	4d 
 6d1:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6d5:	65 54                	gs push rsp
 6d7:	61                   	(bad)
 6d8:	62 6c 65             	(bad)
 6db:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6de:	54                   	push   rsp
 6df:	4d 5f                	rex.WRB pop r15
 6e1:	72 65                	jb     748 <__abi_tag+0x3cc>
 6e3:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6ea:	4d 
 6eb:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6ef:	65 54                	gs push rsp
 6f1:	61                   	(bad)
 6f2:	62 6c 65             	(bad)
 6f5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 6f8:	4e 53                	rex.WRX push rbx
 6fa:	74 36                	je     732 <__abi_tag+0x3b6>
 6fc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
 6ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 700:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 701:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 702:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
 705:	32 31                	xor    dh,BYTE PTR [rcx]
 707:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
 70a:	65 61                	gs (bad)
 70c:	64 79 5f             	fs jns 76e <__abi_tag+0x3f2>
 70f:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
 713:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
 716:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 717:	77 45                	ja     75e <__abi_tag+0x3e2>
 719:	76 00                	jbe    71b <__abi_tag+0x39f>
 71b:	73 71                	jae    78e <__abi_tag+0x412>
 71d:	72 74                	jb     793 <__abi_tag+0x417>
 71f:	66 00 70 75          	data16 add BYTE PTR [rax+0x75],dh
 723:	74 73                	je     798 <__abi_tag+0x41c>
 725:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 728:	73 74                	jae    79e <__abi_tag+0x422>
 72a:	61                   	(bad)
 72b:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 72e:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 731:	5f                   	pop    rdi
 732:	66 61                	data16 (bad)
 734:	69 6c 00 5f 5f 70 72 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x6972705f
 73b:	69 
 73c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 73d:	74 66                	je     7a5 <__abi_tag+0x429>
 73f:	5f                   	pop    rdi
 740:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 743:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
 746:	65 65 00 5f 5f       	gs add BYTE PTR gs:[rdi+0x5f],bl
 74b:	61                   	(bad)
 74c:	73 73                	jae    7c1 <__abi_tag+0x445>
 74e:	65 72 74             	gs jb  7c5 <__abi_tag+0x449>
 751:	5f                   	pop    rdi
 752:	66 61                	data16 (bad)
 754:	69 6c 00 73 74 61 74 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x746174
 75b:	00 
 75c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 75e:	70 65                	jo     7c5 <__abi_tag+0x449>
 760:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 761:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 764:	61                   	(bad)
 765:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 769:	73 74                	jae    7df <__abi_tag+0x463>
 76b:	72 6e                	jb     7db <__abi_tag+0x45f>
 76d:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 770:	5f                   	pop    rdi
 771:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 774:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 777:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
 77e:	73 74                	jae    7f4 <__abi_tag+0x478>
 780:	72 74                	jb     7f6 <__abi_tag+0x47a>
 782:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 783:	6c                   	ins    BYTE PTR es:[rdi],dx
 784:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 787:	61                   	(bad)
 788:	6c                   	ins    BYTE PTR es:[rdi],dx
 789:	6c                   	ins    BYTE PTR es:[rdi],dx
 78a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 78b:	63 00                	movsxd eax,DWORD PTR [rax]
 78d:	5f                   	pop    rdi
 78e:	5f                   	pop    rdi
 78f:	66 70 72             	data16 jo 804 <__abi_tag+0x488>
 792:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
 799:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
 79c:	5f                   	pop    rdi
 79d:	6c                   	ins    BYTE PTR es:[rdi],dx
 79e:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 7a5:	72 74                	jb     81b <__abi_tag+0x49f>
 7a7:	5f                   	pop    rdi
 7a8:	6d                   	ins    DWORD PTR es:[rdi],dx
 7a9:	61                   	(bad)
 7aa:	69 6e 00 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x0],0x656d5f5f
 7b1:	6d                   	ins    DWORD PTR es:[rdi],dx
 7b2:	73 65                	jae    819 <__abi_tag+0x49d>
 7b4:	74 5f                	je     815 <__abi_tag+0x499>
 7b6:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 7b9:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
 7bc:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
 7c3:	6c                   	ins    BYTE PTR es:[rdi],dx
 7c4:	6c                   	ins    BYTE PTR es:[rdi],dx
 7c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7c6:	63 00                	movsxd eax,DWORD PTR [rax]
 7c8:	73 72                	jae    83c <__abi_tag+0x4c0>
 7ca:	61                   	(bad)
 7cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7cc:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 7d0:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 7d3:	5f                   	pop    rdi
 7d4:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 7da:	7a 65                	jp     841 <__abi_tag+0x4c5>
 7dc:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 7df:	72 63                	jb     844 <__abi_tag+0x4c8>
 7e1:	68 72 00 63 61       	push   0x61630072
 7e6:	6c                   	ins    BYTE PTR es:[rdi],dx
 7e7:	6c                   	ins    BYTE PTR es:[rdi],dx
 7e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7e9:	63 00                	movsxd eax,DWORD PTR [rax]
 7eb:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 7f0:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
 7f4:	72 69                	jb     85f <__abi_tag+0x4e3>
 7f6:	74 65                	je     85d <__abi_tag+0x4e1>
 7f8:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 7fb:	72 63                	jb     860 <__abi_tag+0x4e4>
 7fd:	6d                   	ins    DWORD PTR es:[rdi],dx
 7fe:	70 00                	jo     800 <__abi_tag+0x484>
 800:	6c                   	ins    BYTE PTR es:[rdi],dx
 801:	69 62 73 74 64 63 2b 	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
 808:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 80a:	73 6f                	jae    87b <__abi_tag+0x4ff>
 80c:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 812:	6d                   	ins    DWORD PTR es:[rdi],dx
 813:	2e 73 6f             	cs jae 885 <__abi_tag+0x509>
 816:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 81c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 81e:	73 6f                	jae    88f <__abi_tag+0x513>
 820:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 825:	49                   	rex.WB
 826:	42                   	rex.X
 827:	43 5f                	rex.XB pop r15
 829:	32 2e                	xor    ch,BYTE PTR [rsi]
 82b:	32 2e                	xor    ch,BYTE PTR [rsi]
 82d:	35 00 47 4c 49       	xor    eax,0x494c4700
 832:	42                   	rex.X
 833:	43 58                	rex.XB pop r8
 835:	58                   	pop    rax
 836:	5f                   	pop    rdi
 837:	33 2e                	xor    ebp,DWORD PTR [rsi]
 839:	34 2e                	xor    al,0x2e
 83b:	31 39                	xor    DWORD PTR [rcx],edi
 83d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 840:	49                   	rex.WB
 841:	42                   	rex.X
 842:	43 5f                	rex.XB pop r15
 844:	32 2e                	xor    ch,BYTE PTR [rsi]
 846:	33 38                	xor    edi,DWORD PTR [rax]
 848:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 84b:	49                   	rex.WB
 84c:	42                   	rex.X
 84d:	43 5f                	rex.XB pop r15
 84f:	32 2e                	xor    ch,BYTE PTR [rsi]
 851:	34 00                	xor    al,0x0
 853:	47                   	rex.RXB
 854:	4c                   	rex.WR
 855:	49                   	rex.WB
 856:	42                   	rex.X
 857:	43 5f                	rex.XB pop r15
 859:	32 2e                	xor    ch,BYTE PTR [rsi]
 85b:	33 33                	xor    esi,DWORD PTR [rbx]
 85d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 860:	49                   	rex.WB
 861:	42                   	rex.X
 862:	43 5f                	rex.XB pop r15
 864:	32 2e                	xor    ch,BYTE PTR [rsi]
 866:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 869:	47                   	rex.RXB
 86a:	4c                   	rex.WR
 86b:	49                   	rex.WB
 86c:	42                   	rex.X
 86d:	43 5f                	rex.XB pop r15
 86f:	32 2e                	xor    ch,BYTE PTR [rsi]
 871:	31 36                	xor    DWORD PTR [rsi],esi
 873:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 876:	49                   	rex.WB
 877:	42                   	rex.X
 878:	43 5f                	rex.XB pop r15
 87a:	32 2e                	xor    ch,BYTE PTR [rsi]
 87c:	33 2e                	xor    ebp,DWORD PTR [rsi]
 87e:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

0000000000000880 <.gnu.version>:
 880:	00 00                	add    BYTE PTR [rax],al
 882:	02 00                	add    al,BYTE PTR [rax]
 884:	03 00                	add    eax,DWORD PTR [rax]
 886:	03 00                	add    eax,DWORD PTR [rax]
 888:	02 00                	add    al,BYTE PTR [rax]
 88a:	03 00                	add    eax,DWORD PTR [rax]
 88c:	03 00                	add    eax,DWORD PTR [rax]
 88e:	03 00                	add    eax,DWORD PTR [rax]
 890:	04 00                	add    al,0x0
 892:	05 00 06 00 03       	add    eax,0x3000600
 897:	00 03                	add    BYTE PTR [rbx],al
 899:	00 07                	add    BYTE PTR [rdi],al
 89b:	00 03                	add    BYTE PTR [rbx],al
 89d:	00 03                	add    BYTE PTR [rbx],al
 89f:	00 08                	add    BYTE PTR [rax],cl
 8a1:	00 02                	add    BYTE PTR [rdx],al
 8a3:	00 03                	add    BYTE PTR [rbx],al
 8a5:	00 03                	add    BYTE PTR [rbx],al
 8a7:	00 03                	add    BYTE PTR [rbx],al
 8a9:	00 03                	add    BYTE PTR [rbx],al
 8ab:	00 02                	add    BYTE PTR [rdx],al
 8ad:	00 01                	add    BYTE PTR [rcx],al
 8af:	00 09                	add    BYTE PTR [rcx],cl
 8b1:	00 01                	add    BYTE PTR [rcx],al
 8b3:	00 01                	add    BYTE PTR [rcx],al
 8b5:	00 03                	add    BYTE PTR [rbx],al
 8b7:	00 03                	add    BYTE PTR [rbx],al
 8b9:	00 0a                	add    BYTE PTR [rdx],cl
 8bb:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

00000000000008c0 <.gnu.version_r>:
 8c0:	01 00                	add    DWORD PTR [rax],eax
 8c2:	01 00                	add    DWORD PTR [rax],eax
 8c4:	5f                   	pop    rdi
 8c5:	01 00                	add    DWORD PTR [rax],eax
 8c7:	00 10                	add    BYTE PTR [rax],dl
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	00 20                	add    BYTE PTR [rax],ah
 8cd:	00 00                	add    BYTE PTR [rax],al
 8cf:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 8d2:	69 09 00 00 09 00    	imul   ecx,DWORD PTR [rcx],0x90000
 8d8:	73 01                	jae    8db <__abi_tag+0x55f>
 8da:	00 00                	add    BYTE PTR [rax],al
 8dc:	00 00                	add    BYTE PTR [rax],al
 8de:	00 00                	add    BYTE PTR [rax],al
 8e0:	01 00                	add    DWORD PTR [rax],eax
 8e2:	01 00                	add    DWORD PTR [rax],eax
 8e4:	50                   	push   rax
 8e5:	01 00                	add    DWORD PTR [rax],eax
 8e7:	00 10                	add    BYTE PTR [rax],dl
 8e9:	00 00                	add    BYTE PTR [rax],al
 8eb:	00 20                	add    BYTE PTR [rax],ah
 8ed:	00 00                	add    BYTE PTR [rax],al
 8ef:	00 69 f8             	add    BYTE PTR [rcx-0x8],ch
 8f2:	97                   	xchg   edi,eax
 8f3:	02 00                	add    al,BYTE PTR [rax]
 8f5:	00 08                	add    BYTE PTR [rax],cl
 8f7:	00 7f 01             	add    BYTE PTR [rdi+0x1],bh
 8fa:	00 00                	add    BYTE PTR [rax],al
 8fc:	00 00                	add    BYTE PTR [rax],al
 8fe:	00 00                	add    BYTE PTR [rax],al
 900:	01 00                	add    DWORD PTR [rax],eax
 902:	07                   	(bad)
 903:	00 69 01             	add    BYTE PTR [rcx+0x1],ch
 906:	00 00                	add    BYTE PTR [rax],al
 908:	10 00                	adc    BYTE PTR [rax],al
 90a:	00 00                	add    BYTE PTR [rax],al
 90c:	00 00                	add    BYTE PTR [rax],al
 90e:	00 00                	add    BYTE PTR [rax],al
 910:	b8 91 96 06 00       	mov    eax,0x69691
 915:	00 0a                	add    BYTE PTR [rdx],cl
 917:	00 8e 01 00 00 10    	add    BYTE PTR [rsi+0x10000001],cl
 91d:	00 00                	add    BYTE PTR [rax],al
 91f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 922:	69 0d 00 00 07 00 99 	imul   ecx,DWORD PTR [rip+0x70000],0x199        # 7092c <_end+0x6a914>
 929:	01 00 00 
 92c:	10 00                	adc    BYTE PTR [rax],al
 92e:	00 00                	add    BYTE PTR [rax],al
 930:	b3 91                	mov    bl,0x91
 932:	96                   	xchg   esi,eax
 933:	06                   	(bad)
 934:	00 00                	add    BYTE PTR [rax],al
 936:	06                   	(bad)
 937:	00 a3 01 00 00 10    	add    BYTE PTR [rbx+0x10000001],ah
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 946:	05 00 ae 01 00       	add    eax,0x1ae00
 94b:	00 10                	add    BYTE PTR [rax],dl
 94d:	00 00                	add    BYTE PTR [rax],al
 94f:	00 96 91 96 06 00    	add    BYTE PTR [rsi+0x69691],dl
 955:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 958:	b9 01 00 00 10       	mov    ecx,0x10000001
 95d:	00 00                	add    BYTE PTR [rax],al
 95f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 962:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 968:	73 01                	jae    96b <__abi_tag+0x5ef>
 96a:	00 00                	add    BYTE PTR [rax],al
 96c:	10 00                	adc    BYTE PTR [rax],al
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	74 19                	je     98b <__abi_tag+0x60f>
 972:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 978:	c4 01 00 00          	(bad)
 97c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000980 <.rela.dyn>:
 980:	d8 5c 00 00          	fcomp  DWORD PTR [rax+rax*1+0x0]
 984:	00 00                	add    BYTE PTR [rax],al
 986:	00 00                	add    BYTE PTR [rax],al
 988:	08 00                	or     BYTE PTR [rax],al
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	00 00                	add    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	f0 12 00             	lock adc al,BYTE PTR [rax]
 993:	00 00                	add    BYTE PTR [rax],al
 995:	00 00                	add    BYTE PTR [rax],al
 997:	00 e0                	add    al,ah
 999:	5c                   	pop    rsp
 99a:	00 00                	add    BYTE PTR [rax],al
 99c:	00 00                	add    BYTE PTR [rax],al
 99e:	00 00                	add    BYTE PTR [rax],al
 9a0:	08 00                	or     BYTE PTR [rax],al
 9a2:	00 00                	add    BYTE PTR [rax],al
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	b0 12                	mov    al,0x12
 9aa:	00 00                	add    BYTE PTR [rax],al
 9ac:	00 00                	add    BYTE PTR [rax],al
 9ae:	00 00                	add    BYTE PTR [rax],al
 9b0:	08 60 00             	or     BYTE PTR [rax+0x0],ah
 9b3:	00 00                	add    BYTE PTR [rax],al
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 08                	add    BYTE PTR [rax],cl
 9b9:	00 00                	add    BYTE PTR [rax],al
 9bb:	00 00                	add    BYTE PTR [rax],al
 9bd:	00 00                	add    BYTE PTR [rax],al
 9bf:	00 08                	add    BYTE PTR [rax],cl
 9c1:	60                   	(bad)
 9c2:	00 00                	add    BYTE PTR [rax],al
 9c4:	00 00                	add    BYTE PTR [rax],al
 9c6:	00 00                	add    BYTE PTR [rax],al
 9c8:	d8 5f 00             	fcomp  DWORD PTR [rdi+0x0]
 9cb:	00 00                	add    BYTE PTR [rax],al
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 06                	add    BYTE PTR [rsi],al
 9d1:	00 00                	add    BYTE PTR [rax],al
 9d3:	00 1e                	add    BYTE PTR [rsi],bl
	...
 9dd:	00 00                	add    BYTE PTR [rax],al
 9df:	00 e0                	add    al,ah
 9e1:	5f                   	pop    rdi
 9e2:	00 00                	add    BYTE PTR [rax],al
 9e4:	00 00                	add    BYTE PTR [rax],al
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	06                   	(bad)
 9e9:	00 00                	add    BYTE PTR [rax],al
 9eb:	00 09                	add    BYTE PTR [rcx],cl
	...
 9f5:	00 00                	add    BYTE PTR [rax],al
 9f7:	00 e8                	add    al,ch
 9f9:	5f                   	pop    rdi
 9fa:	00 00                	add    BYTE PTR [rax],al
 9fc:	00 00                	add    BYTE PTR [rax],al
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	06                   	(bad)
 a01:	00 00                	add    BYTE PTR [rax],al
 a03:	00 17                	add    BYTE PTR [rdi],dl
	...
 a0d:	00 00                	add    BYTE PTR [rax],al
 a0f:	00 f0                	add    al,dh
 a11:	5f                   	pop    rdi
 a12:	00 00                	add    BYTE PTR [rax],al
 a14:	00 00                	add    BYTE PTR [rax],al
 a16:	00 00                	add    BYTE PTR [rax],al
 a18:	06                   	(bad)
 a19:	00 00                	add    BYTE PTR [rax],al
 a1b:	00 19                	add    BYTE PTR [rcx],bl
	...
 a25:	00 00                	add    BYTE PTR [rax],al
 a27:	00 f8                	add    al,bh
 a29:	5f                   	pop    rdi
 a2a:	00 00                	add    BYTE PTR [rax],al
 a2c:	00 00                	add    BYTE PTR [rax],al
 a2e:	00 00                	add    BYTE PTR [rax],al
 a30:	06                   	(bad)
 a31:	00 00                	add    BYTE PTR [rax],al
 a33:	00 1a                	add    BYTE PTR [rdx],bl
	...

Disassembly of section .rela.plt:

0000000000000a40 <.rela.plt>:
 a40:	10 5f 00             	adc    BYTE PTR [rdi+0x0],bl
 a43:	00 00                	add    BYTE PTR [rax],al
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 07                	add    BYTE PTR [rdi],al
 a49:	00 00                	add    BYTE PTR [rax],al
 a4b:	00 01                	add    BYTE PTR [rcx],al
	...
 a55:	00 00                	add    BYTE PTR [rax],al
 a57:	00 18                	add    BYTE PTR [rax],bl
 a59:	5f                   	pop    rdi
 a5a:	00 00                	add    BYTE PTR [rax],al
 a5c:	00 00                	add    BYTE PTR [rax],al
 a5e:	00 00                	add    BYTE PTR [rax],al
 a60:	07                   	(bad)
 a61:	00 00                	add    BYTE PTR [rax],al
 a63:	00 02                	add    BYTE PTR [rdx],al
	...
 a6d:	00 00                	add    BYTE PTR [rax],al
 a6f:	00 20                	add    BYTE PTR [rax],ah
 a71:	5f                   	pop    rdi
 a72:	00 00                	add    BYTE PTR [rax],al
 a74:	00 00                	add    BYTE PTR [rax],al
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	07                   	(bad)
 a79:	00 00                	add    BYTE PTR [rax],al
 a7b:	00 03                	add    BYTE PTR [rbx],al
	...
 a85:	00 00                	add    BYTE PTR [rax],al
 a87:	00 28                	add    BYTE PTR [rax],ch
 a89:	5f                   	pop    rdi
 a8a:	00 00                	add    BYTE PTR [rax],al
 a8c:	00 00                	add    BYTE PTR [rax],al
 a8e:	00 00                	add    BYTE PTR [rax],al
 a90:	07                   	(bad)
 a91:	00 00                	add    BYTE PTR [rax],al
 a93:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 a9e:	00 00                	add    BYTE PTR [rax],al
 aa0:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
 aa3:	00 00                	add    BYTE PTR [rax],al
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 07                	add    BYTE PTR [rdi],al
 aa9:	00 00                	add    BYTE PTR [rax],al
 aab:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # ab1 <__abi_tag+0x735>
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 00                	add    BYTE PTR [rax],al
 ab5:	00 00                	add    BYTE PTR [rax],al
 ab7:	00 38                	add    BYTE PTR [rax],bh
 ab9:	5f                   	pop    rdi
 aba:	00 00                	add    BYTE PTR [rax],al
 abc:	00 00                	add    BYTE PTR [rax],al
 abe:	00 00                	add    BYTE PTR [rax],al
 ac0:	07                   	(bad)
 ac1:	00 00                	add    BYTE PTR [rax],al
 ac3:	00 06                	add    BYTE PTR [rsi],al
	...
 acd:	00 00                	add    BYTE PTR [rax],al
 acf:	00 40 5f             	add    BYTE PTR [rax+0x5f],al
 ad2:	00 00                	add    BYTE PTR [rax],al
 ad4:	00 00                	add    BYTE PTR [rax],al
 ad6:	00 00                	add    BYTE PTR [rax],al
 ad8:	07                   	(bad)
 ad9:	00 00                	add    BYTE PTR [rax],al
 adb:	00 07                	add    BYTE PTR [rdi],al
	...
 ae5:	00 00                	add    BYTE PTR [rax],al
 ae7:	00 48 5f             	add    BYTE PTR [rax+0x5f],cl
 aea:	00 00                	add    BYTE PTR [rax],al
 aec:	00 00                	add    BYTE PTR [rax],al
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	07                   	(bad)
 af1:	00 00                	add    BYTE PTR [rax],al
 af3:	00 08                	add    BYTE PTR [rax],cl
	...
 afd:	00 00                	add    BYTE PTR [rax],al
 aff:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
 b02:	00 00                	add    BYTE PTR [rax],al
 b04:	00 00                	add    BYTE PTR [rax],al
 b06:	00 00                	add    BYTE PTR [rax],al
 b08:	07                   	(bad)
 b09:	00 00                	add    BYTE PTR [rax],al
 b0b:	00 0a                	add    BYTE PTR [rdx],cl
	...
 b15:	00 00                	add    BYTE PTR [rax],al
 b17:	00 58 5f             	add    BYTE PTR [rax+0x5f],bl
 b1a:	00 00                	add    BYTE PTR [rax],al
 b1c:	00 00                	add    BYTE PTR [rax],al
 b1e:	00 00                	add    BYTE PTR [rax],al
 b20:	07                   	(bad)
 b21:	00 00                	add    BYTE PTR [rax],al
 b23:	00 0b                	add    BYTE PTR [rbx],cl
	...
 b2d:	00 00                	add    BYTE PTR [rax],al
 b2f:	00 60 5f             	add    BYTE PTR [rax+0x5f],ah
 b32:	00 00                	add    BYTE PTR [rax],al
 b34:	00 00                	add    BYTE PTR [rax],al
 b36:	00 00                	add    BYTE PTR [rax],al
 b38:	07                   	(bad)
 b39:	00 00                	add    BYTE PTR [rax],al
 b3b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 b46:	00 00                	add    BYTE PTR [rax],al
 b48:	68 5f 00 00 00       	push   0x5f
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 07                	add    BYTE PTR [rdi],al
 b51:	00 00                	add    BYTE PTR [rax],al
 b53:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # b59 <__abi_tag+0x7dd>
 b59:	00 00                	add    BYTE PTR [rax],al
 b5b:	00 00                	add    BYTE PTR [rax],al
 b5d:	00 00                	add    BYTE PTR [rax],al
 b5f:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
 b62:	00 00                	add    BYTE PTR [rax],al
 b64:	00 00                	add    BYTE PTR [rax],al
 b66:	00 00                	add    BYTE PTR [rax],al
 b68:	07                   	(bad)
 b69:	00 00                	add    BYTE PTR [rax],al
 b6b:	00 0e                	add    BYTE PTR [rsi],cl
	...
 b75:	00 00                	add    BYTE PTR [rax],al
 b77:	00 78 5f             	add    BYTE PTR [rax+0x5f],bh
 b7a:	00 00                	add    BYTE PTR [rax],al
 b7c:	00 00                	add    BYTE PTR [rax],al
 b7e:	00 00                	add    BYTE PTR [rax],al
 b80:	07                   	(bad)
 b81:	00 00                	add    BYTE PTR [rax],al
 b83:	00 0f                	add    BYTE PTR [rdi],cl
	...
 b8d:	00 00                	add    BYTE PTR [rax],al
 b8f:	00 80 5f 00 00 00    	add    BYTE PTR [rax+0x5f],al
 b95:	00 00                	add    BYTE PTR [rax],al
 b97:	00 07                	add    BYTE PTR [rdi],al
 b99:	00 00                	add    BYTE PTR [rax],al
 b9b:	00 10                	add    BYTE PTR [rax],dl
	...
 ba5:	00 00                	add    BYTE PTR [rax],al
 ba7:	00 88 5f 00 00 00    	add    BYTE PTR [rax+0x5f],cl
 bad:	00 00                	add    BYTE PTR [rax],al
 baf:	00 07                	add    BYTE PTR [rdi],al
 bb1:	00 00                	add    BYTE PTR [rax],al
 bb3:	00 11                	add    BYTE PTR [rcx],dl
	...
 bbd:	00 00                	add    BYTE PTR [rax],al
 bbf:	00 90 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dl
 bc5:	00 00                	add    BYTE PTR [rax],al
 bc7:	00 07                	add    BYTE PTR [rdi],al
 bc9:	00 00                	add    BYTE PTR [rax],al
 bcb:	00 12                	add    BYTE PTR [rdx],dl
	...
 bd5:	00 00                	add    BYTE PTR [rax],al
 bd7:	00 98 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bl
 bdd:	00 00                	add    BYTE PTR [rax],al
 bdf:	00 07                	add    BYTE PTR [rdi],al
 be1:	00 00                	add    BYTE PTR [rax],al
 be3:	00 13                	add    BYTE PTR [rbx],dl
	...
 bed:	00 00                	add    BYTE PTR [rax],al
 bef:	00 a0 5f 00 00 00    	add    BYTE PTR [rax+0x5f],ah
 bf5:	00 00                	add    BYTE PTR [rax],al
 bf7:	00 07                	add    BYTE PTR [rdi],al
 bf9:	00 00                	add    BYTE PTR [rax],al
 bfb:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 c06:	00 00                	add    BYTE PTR [rax],al
 c08:	a8 5f                	test   al,0x5f
 c0a:	00 00                	add    BYTE PTR [rax],al
 c0c:	00 00                	add    BYTE PTR [rax],al
 c0e:	00 00                	add    BYTE PTR [rax],al
 c10:	07                   	(bad)
 c11:	00 00                	add    BYTE PTR [rax],al
 c13:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # c19 <__abi_tag+0x89d>
 c19:	00 00                	add    BYTE PTR [rax],al
 c1b:	00 00                	add    BYTE PTR [rax],al
 c1d:	00 00                	add    BYTE PTR [rax],al
 c1f:	00 b0 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dh
 c25:	00 00                	add    BYTE PTR [rax],al
 c27:	00 07                	add    BYTE PTR [rdi],al
 c29:	00 00                	add    BYTE PTR [rax],al
 c2b:	00 16                	add    BYTE PTR [rsi],dl
	...
 c35:	00 00                	add    BYTE PTR [rax],al
 c37:	00 b8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bh
 c3d:	00 00                	add    BYTE PTR [rax],al
 c3f:	00 07                	add    BYTE PTR [rdi],al
 c41:	00 00                	add    BYTE PTR [rax],al
 c43:	00 18                	add    BYTE PTR [rax],bl
	...
 c4d:	00 00                	add    BYTE PTR [rax],al
 c4f:	00 c0                	add    al,al
 c51:	5f                   	pop    rdi
 c52:	00 00                	add    BYTE PTR [rax],al
 c54:	00 00                	add    BYTE PTR [rax],al
 c56:	00 00                	add    BYTE PTR [rax],al
 c58:	07                   	(bad)
 c59:	00 00                	add    BYTE PTR [rax],al
 c5b:	00 1b                	add    BYTE PTR [rbx],bl
	...
 c65:	00 00                	add    BYTE PTR [rax],al
 c67:	00 c8                	add    al,cl
 c69:	5f                   	pop    rdi
 c6a:	00 00                	add    BYTE PTR [rax],al
 c6c:	00 00                	add    BYTE PTR [rax],al
 c6e:	00 00                	add    BYTE PTR [rax],al
 c70:	07                   	(bad)
 c71:	00 00                	add    BYTE PTR [rax],al
 c73:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
 c7e:	00 00                	add    BYTE PTR [rax],al
 c80:	d0 5f 00             	rcr    BYTE PTR [rdi+0x0],1
 c83:	00 00                	add    BYTE PTR [rax],al
 c85:	00 00                	add    BYTE PTR [rax],al
 c87:	00 07                	add    BYTE PTR [rdi],al
 c89:	00 00                	add    BYTE PTR [rax],al
 c8b:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # c91 <__abi_tag+0x915>
 c91:	00 00                	add    BYTE PTR [rax],al
 c93:	00 00                	add    BYTE PTR [rax],al
 c95:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 e1 4f 00 00 	mov    rax,QWORD PTR [rip+0x4fe1]        # 5ff0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <__printf_chk@plt-0x10>:
    1020:	ff 35 da 4e 00 00    	push   QWORD PTR [rip+0x4eda]        # 5f00 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 dc 4e 00 00    	jmp    QWORD PTR [rip+0x4edc]        # 5f08 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <__printf_chk@plt>:
    1030:	ff 25 da 4e 00 00    	jmp    QWORD PTR [rip+0x4eda]        # 5f10 <__printf_chk@GLIBC_2.3.4>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <rand@plt>:
    1040:	ff 25 d2 4e 00 00    	jmp    QWORD PTR [rip+0x4ed2]        # 5f18 <rand@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <strchr@plt>:
    1050:	ff 25 ca 4e 00 00    	jmp    QWORD PTR [rip+0x4eca]        # 5f20 <strchr@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__strncpy_chk@plt>:
    1060:	ff 25 c2 4e 00 00    	jmp    QWORD PTR [rip+0x4ec2]        # 5f28 <__strncpy_chk@GLIBC_2.3.4>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <__assert_fail@plt>:
    1070:	ff 25 ba 4e 00 00    	jmp    QWORD PTR [rip+0x4eba]        # 5f30 <__assert_fail@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <calloc@plt>:
    1080:	ff 25 b2 4e 00 00    	jmp    QWORD PTR [rip+0x4eb2]        # 5f38 <calloc@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <open@plt>:
    1090:	ff 25 aa 4e 00 00    	jmp    QWORD PTR [rip+0x4eaa]        # 5f40 <open@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <aligned_alloc@plt>:
    10a0:	ff 25 a2 4e 00 00    	jmp    QWORD PTR [rip+0x4ea2]        # 5f48 <aligned_alloc@GLIBC_2.16>
    10a6:	68 07 00 00 00       	push   0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <stat@plt>:
    10b0:	ff 25 9a 4e 00 00    	jmp    QWORD PTR [rip+0x4e9a]        # 5f50 <stat@GLIBC_2.33>
    10b6:	68 08 00 00 00       	push   0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <srand@plt>:
    10c0:	ff 25 92 4e 00 00    	jmp    QWORD PTR [rip+0x4e92]        # 5f58 <srand@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	push   0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <fclose@plt>:
    10d0:	ff 25 8a 4e 00 00    	jmp    QWORD PTR [rip+0x4e8a]        # 5f60 <fclose@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	push   0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <__stack_chk_fail@plt>:
    10e0:	ff 25 82 4e 00 00    	jmp    QWORD PTR [rip+0x4e82]        # 5f68 <__stack_chk_fail@GLIBC_2.4>
    10e6:	68 0b 00 00 00       	push   0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 7a 4e 00 00    	jmp    QWORD PTR [rip+0x4e7a]        # 5f70 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <free@plt>:
    1100:	ff 25 72 4e 00 00    	jmp    QWORD PTR [rip+0x4e72]        # 5f78 <free@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    1110:	ff 25 6a 4e 00 00    	jmp    QWORD PTR [rip+0x4e6a]        # 5f80 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    1116:	68 0e 00 00 00       	push   0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <__memset_chk@plt>:
    1120:	ff 25 62 4e 00 00    	jmp    QWORD PTR [rip+0x4e62]        # 5f88 <__memset_chk@GLIBC_2.3.4>
    1126:	68 0f 00 00 00       	push   0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <strcmp@plt>:
    1130:	ff 25 5a 4e 00 00    	jmp    QWORD PTR [rip+0x4e5a]        # 5f90 <strcmp@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <read@plt>:
    1140:	ff 25 52 4e 00 00    	jmp    QWORD PTR [rip+0x4e52]        # 5f98 <read@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <puts@plt>:
    1150:	ff 25 4a 4e 00 00    	jmp    QWORD PTR [rip+0x4e4a]        # 5fa0 <puts@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	push   0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001160 <realloc@plt>:
    1160:	ff 25 42 4e 00 00    	jmp    QWORD PTR [rip+0x4e42]        # 5fa8 <realloc@GLIBC_2.2.5>
    1166:	68 13 00 00 00       	push   0x13
    116b:	e9 b0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001170 <__fprintf_chk@plt>:
    1170:	ff 25 3a 4e 00 00    	jmp    QWORD PTR [rip+0x4e3a]        # 5fb0 <__fprintf_chk@GLIBC_2.3.4>
    1176:	68 14 00 00 00       	push   0x14
    117b:	e9 a0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001180 <sqrtf@plt>:
    1180:	ff 25 32 4e 00 00    	jmp    QWORD PTR [rip+0x4e32]        # 5fb8 <sqrtf@GLIBC_2.2.5>
    1186:	68 15 00 00 00       	push   0x15
    118b:	e9 90 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001190 <fwrite@plt>:
    1190:	ff 25 2a 4e 00 00    	jmp    QWORD PTR [rip+0x4e2a]        # 5fc0 <fwrite@GLIBC_2.2.5>
    1196:	68 16 00 00 00       	push   0x16
    119b:	e9 80 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011a0 <close@plt>:
    11a0:	ff 25 22 4e 00 00    	jmp    QWORD PTR [rip+0x4e22]        # 5fc8 <close@GLIBC_2.2.5>
    11a6:	68 17 00 00 00       	push   0x17
    11ab:	e9 70 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011b0 <__isoc23_strtol@plt>:
    11b0:	ff 25 1a 4e 00 00    	jmp    QWORD PTR [rip+0x4e1a]        # 5fd0 <__isoc23_strtol@GLIBC_2.38>
    11b6:	68 18 00 00 00       	push   0x18
    11bb:	e9 60 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000011c0 <__cxa_finalize@plt>:
    11c0:	ff 25 12 4e 00 00    	jmp    QWORD PTR [rip+0x4e12]        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    11c6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000011d0 <main>:
    11d0:	f3 0f 1e fa          	endbr64
    11d4:	53                   	push   rbx
    11d5:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
    11d9:	48 89 f3             	mov    rbx,rsi
    11dc:	ba 0a 00 00 00       	mov    edx,0xa
    11e1:	31 f6                	xor    esi,esi
    11e3:	e8 c8 ff ff ff       	call   11b0 <__isoc23_strtol@plt>
    11e8:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
    11ec:	b9 00 04 00 00       	mov    ecx,0x400
    11f1:	48 8d 3d 14 2e 00 00 	lea    rdi,[rip+0x2e14]        # 400c <_IO_stdin_used+0xc>
    11f8:	89 c6                	mov    esi,eax
    11fa:	e8 71 1b 00 00       	call   2d70 <_Z7testAllPKcjS0_j>
    11ff:	31 c0                	xor    eax,eax
    1201:	5b                   	pop    rbx
    1202:	c3                   	ret
    1203:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    120a:	00 00 00 
    120d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001210 <_start>:
    1210:	f3 0f 1e fa          	endbr64
    1214:	31 ed                	xor    ebp,ebp
    1216:	49 89 d1             	mov    r9,rdx
    1219:	5e                   	pop    rsi
    121a:	48 89 e2             	mov    rdx,rsp
    121d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1221:	50                   	push   rax
    1222:	54                   	push   rsp
    1223:	45 31 c0             	xor    r8d,r8d
    1226:	31 c9                	xor    ecx,ecx
    1228:	48 8d 3d a1 ff ff ff 	lea    rdi,[rip+0xffffffffffffffa1]        # 11d0 <main>
    122f:	ff 15 ab 4d 00 00    	call   QWORD PTR [rip+0x4dab]        # 5fe0 <__libc_start_main@GLIBC_2.34>
    1235:	f4                   	hlt
    1236:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    123d:	00 00 00 

0000000000001240 <deregister_tm_clones>:
    1240:	48 8d 3d c9 4d 00 00 	lea    rdi,[rip+0x4dc9]        # 6010 <__TMC_END__>
    1247:	48 8d 05 c2 4d 00 00 	lea    rax,[rip+0x4dc2]        # 6010 <__TMC_END__>
    124e:	48 39 f8             	cmp    rax,rdi
    1251:	74 15                	je     1268 <deregister_tm_clones+0x28>
    1253:	48 8b 05 8e 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d8e]        # 5fe8 <_ITM_deregisterTMCloneTable@Base>
    125a:	48 85 c0             	test   rax,rax
    125d:	74 09                	je     1268 <deregister_tm_clones+0x28>
    125f:	ff e0                	jmp    rax
    1261:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1268:	c3                   	ret
    1269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001270 <register_tm_clones>:
    1270:	48 8d 3d 99 4d 00 00 	lea    rdi,[rip+0x4d99]        # 6010 <__TMC_END__>
    1277:	48 8d 35 92 4d 00 00 	lea    rsi,[rip+0x4d92]        # 6010 <__TMC_END__>
    127e:	48 29 fe             	sub    rsi,rdi
    1281:	48 89 f0             	mov    rax,rsi
    1284:	48 c1 ee 3f          	shr    rsi,0x3f
    1288:	48 c1 f8 03          	sar    rax,0x3
    128c:	48 01 c6             	add    rsi,rax
    128f:	48 d1 fe             	sar    rsi,1
    1292:	74 14                	je     12a8 <register_tm_clones+0x38>
    1294:	48 8b 05 5d 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d5d]        # 5ff8 <_ITM_registerTMCloneTable@Base>
    129b:	48 85 c0             	test   rax,rax
    129e:	74 08                	je     12a8 <register_tm_clones+0x38>
    12a0:	ff e0                	jmp    rax
    12a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    12a8:	c3                   	ret
    12a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012b0 <__do_global_dtors_aux>:
    12b0:	f3 0f 1e fa          	endbr64
    12b4:	80 3d 55 4d 00 00 00 	cmp    BYTE PTR [rip+0x4d55],0x0        # 6010 <__TMC_END__>
    12bb:	75 2b                	jne    12e8 <__do_global_dtors_aux+0x38>
    12bd:	55                   	push   rbp
    12be:	48 83 3d 12 4d 00 00 	cmp    QWORD PTR [rip+0x4d12],0x0        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    12c5:	00 
    12c6:	48 89 e5             	mov    rbp,rsp
    12c9:	74 0c                	je     12d7 <__do_global_dtors_aux+0x27>
    12cb:	48 8b 3d 36 4d 00 00 	mov    rdi,QWORD PTR [rip+0x4d36]        # 6008 <__dso_handle>
    12d2:	e8 e9 fe ff ff       	call   11c0 <__cxa_finalize@plt>
    12d7:	e8 64 ff ff ff       	call   1240 <deregister_tm_clones>
    12dc:	c6 05 2d 4d 00 00 01 	mov    BYTE PTR [rip+0x4d2d],0x1        # 6010 <__TMC_END__>
    12e3:	5d                   	pop    rbp
    12e4:	c3                   	ret
    12e5:	0f 1f 00             	nop    DWORD PTR [rax]
    12e8:	c3                   	ret
    12e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012f0 <frame_dummy>:
    12f0:	f3 0f 1e fa          	endbr64
    12f4:	e9 77 ff ff ff       	jmp    1270 <register_tm_clones>
    12f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001300 <_Z16buildStringArrayPcj>:
    1300:	f3 0f 1e fa          	endbr64
    1304:	55                   	push   rbp
    1305:	48 89 e5             	mov    rbp,rsp
    1308:	41 57                	push   r15
    130a:	41 56                	push   r14
    130c:	41 55                	push   r13
    130e:	41 54                	push   r12
    1310:	53                   	push   rbx
    1311:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    1315:	48 83 ec 40          	sub    rsp,0x40
    1319:	89 74 24 1c          	mov    DWORD PTR [rsp+0x1c],esi
    131d:	48 85 ff             	test   rdi,rdi
    1320:	0f 84 59 01 00 00    	je     147f <_Z16buildStringArrayPcj+0x17f>
    1326:	49 89 fc             	mov    r12,rdi
    1329:	89 f7                	mov    edi,esi
    132b:	41 89 f7             	mov    r15d,esi
    132e:	be 40 00 00 00       	mov    esi,0x40
    1333:	48 89 fb             	mov    rbx,rdi
    1336:	e8 45 fd ff ff       	call   1080 <calloc@plt>
    133b:	c1 e3 05             	shl    ebx,0x5
    133e:	bf 20 00 00 00       	mov    edi,0x20
    1343:	48 89 de             	mov    rsi,rbx
    1346:	49 89 c5             	mov    r13,rax
    1349:	e8 52 fd ff ff       	call   10a0 <aligned_alloc@plt>
    134e:	49 89 c1             	mov    r9,rax
    1351:	48 85 c0             	test   rax,rax
    1354:	0f 84 44 01 00 00    	je     149e <_Z16buildStringArrayPcj+0x19e>
    135a:	4d 89 e8             	mov    r8,r13
    135d:	45 31 f6             	xor    r14d,r14d
    1360:	45 85 ff             	test   r15d,r15d
    1363:	0f 84 fc 00 00 00    	je     1465 <_Z16buildStringArrayPcj+0x165>
    1369:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    136e:	4c 89 6c 24 10       	mov    QWORD PTR [rsp+0x10],r13
    1373:	eb 06                	jmp    137b <_Z16buildStringArrayPcj+0x7b>
    1375:	0f 1f 00             	nop    DWORD PTR [rax]
    1378:	c5 f8 77             	vzeroupper
    137b:	4c 89 e7             	mov    rdi,r12
    137e:	be 0a 00 00 00       	mov    esi,0xa
    1383:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
    1388:	e8 c3 fc ff ff       	call   1050 <strchr@plt>
    138d:	4c 89 e6             	mov    rsi,r12
    1390:	45 89 f2             	mov    r10d,r14d
    1393:	4c 8d 60 01          	lea    r12,[rax+0x1]
    1397:	41 c1 e2 05          	shl    r10d,0x5
    139b:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    13a0:	4d 89 e5             	mov    r13,r12
    13a3:	4c 89 d1             	mov    rcx,r10
    13a6:	4c 89 54 24 28       	mov    QWORD PTR [rsp+0x28],r10
    13ab:	49 29 f5             	sub    r13,rsi
    13ae:	4c 39 d3             	cmp    rbx,r10
    13b1:	4e 8d 3c 10          	lea    r15,[rax+r10*1]
    13b5:	48 0f 43 cb          	cmovae rcx,rbx
    13b9:	44 89 ea             	mov    edx,r13d
    13bc:	4c 89 ff             	mov    rdi,r15
    13bf:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
    13c4:	4c 29 d1             	sub    rcx,r10
    13c7:	e8 94 fc ff ff       	call   1060 <__strncpy_chk@plt>
    13cc:	4c 8b 54 24 28       	mov    r10,QWORD PTR [rsp+0x28]
    13d1:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    13d6:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    13db:	4a 8d 3c 12          	lea    rdi,[rdx+r10*1]
    13df:	ba 20 00 00 00       	mov    edx,0x20
    13e4:	48 39 fb             	cmp    rbx,rdi
    13e7:	48 89 f9             	mov    rcx,rdi
    13ea:	48 0f 43 cb          	cmovae rcx,rbx
    13ee:	44 29 ea             	sub    edx,r13d
    13f1:	31 f6                	xor    esi,esi
    13f3:	48 29 f9             	sub    rcx,rdi
    13f6:	48 01 c7             	add    rdi,rax
    13f9:	e8 22 fd ff ff       	call   1120 <__memset_chk@plt>
    13fe:	44 89 f2             	mov    edx,r14d
    1401:	bf 02 00 00 00       	mov    edi,0x2
    1406:	31 c0                	xor    eax,eax
    1408:	48 8d 35 13 2c 00 00 	lea    rsi,[rip+0x2c13]        # 4022 <_IO_stdin_used+0x22>
    140f:	41 83 c6 01          	add    r14d,0x1
    1413:	e8 18 fc ff ff       	call   1030 <__printf_chk@plt>
    1418:	4c 89 fa             	mov    rdx,r15
    141b:	bf 02 00 00 00       	mov    edi,0x2
    1420:	31 c0                	xor    eax,eax
    1422:	48 8d 0d 02 2c 00 00 	lea    rcx,[rip+0x2c02]        # 402b <_IO_stdin_used+0x2b>
    1429:	48 8d 35 ff 2b 00 00 	lea    rsi,[rip+0x2bff]        # 402f <_IO_stdin_used+0x2f>
    1430:	e8 fb fb ff ff       	call   1030 <__printf_chk@plt>
    1435:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
    143a:	c4 c1 7d 6f 07       	vmovdqa ymm0,YMMWORD PTR [r15]
    143f:	45 89 68 24          	mov    DWORD PTR [r8+0x24],r13d
    1443:	49 83 c0 40          	add    r8,0x40
    1447:	c4 c1 7d 7f 40 c0    	vmovdqa YMMWORD PTR [r8-0x40],ymm0
    144d:	44 39 74 24 1c       	cmp    DWORD PTR [rsp+0x1c],r14d
    1452:	0f 85 20 ff ff ff    	jne    1378 <_Z16buildStringArrayPcj+0x78>
    1458:	4c 8b 4c 24 38       	mov    r9,QWORD PTR [rsp+0x38]
    145d:	4c 8b 6c 24 10       	mov    r13,QWORD PTR [rsp+0x10]
    1462:	c5 f8 77             	vzeroupper
    1465:	4c 89 cf             	mov    rdi,r9
    1468:	e8 93 fc ff ff       	call   1100 <free@plt>
    146d:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    1471:	4c 89 e8             	mov    rax,r13
    1474:	5b                   	pop    rbx
    1475:	41 5c                	pop    r12
    1477:	41 5d                	pop    r13
    1479:	41 5e                	pop    r14
    147b:	41 5f                	pop    r15
    147d:	5d                   	pop    rbp
    147e:	c3                   	ret
    147f:	48 8d 0d da 2d 00 00 	lea    rcx,[rip+0x2dda]        # 4260 <_IO_stdin_used+0x260>
    1486:	ba 15 00 00 00       	mov    edx,0x15
    148b:	48 8d 35 fe 2d 00 00 	lea    rsi,[rip+0x2dfe]        # 4290 <_IO_stdin_used+0x290>
    1492:	48 8d 3d 84 2b 00 00 	lea    rdi,[rip+0x2b84]        # 401d <_IO_stdin_used+0x1d>
    1499:	e8 d2 fb ff ff       	call   1070 <__assert_fail@plt>
    149e:	48 8d 0d bb 2d 00 00 	lea    rcx,[rip+0x2dbb]        # 4260 <_IO_stdin_used+0x260>
    14a5:	ba 1c 00 00 00       	mov    edx,0x1c
    14aa:	48 8d 35 df 2d 00 00 	lea    rsi,[rip+0x2ddf]        # 4290 <_IO_stdin_used+0x290>
    14b1:	48 8d 3d 5d 2b 00 00 	lea    rdi,[rip+0x2b5d]        # 4015 <_IO_stdin_used+0x15>
    14b8:	e8 b3 fb ff ff       	call   1070 <__assert_fail@plt>
    14bd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000014c0 <_Z11hashMapCtorPFj8string_tEj>:
    14c0:	f3 0f 1e fa          	endbr64
    14c4:	55                   	push   rbp
    14c5:	48 89 e5             	mov    rbp,rsp
    14c8:	41 56                	push   r14
    14ca:	41 89 d6             	mov    r14d,edx
    14cd:	41 55                	push   r13
    14cf:	41 54                	push   r12
    14d1:	49 89 fc             	mov    r12,rdi
    14d4:	53                   	push   rbx
    14d5:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    14d9:	48 83 ec 40          	sub    rsp,0x40
    14dd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    14e4:	00 00 
    14e6:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    14eb:	31 c0                	xor    eax,eax
    14ed:	48 89 77 10          	mov    QWORD PTR [rdi+0x10],rsi
    14f1:	be 18 00 00 00       	mov    esi,0x18
    14f6:	c7 47 0c 00 00 00 00 	mov    DWORD PTR [rdi+0xc],0x0
    14fd:	44 89 77 08          	mov    DWORD PTR [rdi+0x8],r14d
    1501:	4c 89 f7             	mov    rdi,r14
    1504:	e8 77 fb ff ff       	call   1080 <calloc@plt>
    1509:	49 89 04 24          	mov    QWORD PTR [r12],rax
    150d:	45 85 f6             	test   r14d,r14d
    1510:	74 32                	je     1544 <_Z11hashMapCtorPFj8string_tEj+0x84>
    1512:	48 89 c3             	mov    rbx,rax
    1515:	4b 8d 04 76          	lea    rax,[r14+r14*2]
    1519:	49 89 e5             	mov    r13,rsp
    151c:	4c 8d 34 c3          	lea    r14,[rbx+rax*8]
    1520:	4c 89 ef             	mov    rdi,r13
    1523:	48 83 c3 18          	add    rbx,0x18
    1527:	e8 a4 09 00 00       	call   1ed0 <_Z8listCtorv>
    152c:	c5 fa 6f 04 24       	vmovdqu xmm0,XMMWORD PTR [rsp]
    1531:	c5 fa 7f 43 e8       	vmovdqu XMMWORD PTR [rbx-0x18],xmm0
    1536:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    153b:	48 89 43 f8          	mov    QWORD PTR [rbx-0x8],rax
    153f:	4c 39 f3             	cmp    rbx,r14
    1542:	75 dc                	jne    1520 <_Z11hashMapCtorPFj8string_tEj+0x60>
    1544:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    1549:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1550:	00 00 
    1552:	75 10                	jne    1564 <_Z11hashMapCtorPFj8string_tEj+0xa4>
    1554:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    1558:	4c 89 e0             	mov    rax,r12
    155b:	5b                   	pop    rbx
    155c:	41 5c                	pop    r12
    155e:	41 5d                	pop    r13
    1560:	41 5e                	pop    r14
    1562:	5d                   	pop    rbp
    1563:	c3                   	ret
    1564:	e8 77 fb ff ff       	call   10e0 <__stack_chk_fail@plt>
    1569:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001570 <_Z17hashMapAddElementP7HashMap8string_t>:
    1570:	f3 0f 1e fa          	endbr64
    1574:	55                   	push   rbp
    1575:	53                   	push   rbx
    1576:	48 83 ec 08          	sub    rsp,0x8
    157a:	48 85 ff             	test   rdi,rdi
    157d:	0f 84 9b 00 00 00    	je     161e <_Z17hashMapAddElementP7HashMap8string_t+0xae>
    1583:	48 83 ec 40          	sub    rsp,0x40
    1587:	48 89 fb             	mov    rbx,rdi
    158a:	c5 fd 6f 9c 24 80 00 	vmovdqa ymm3,YMMWORD PTR [rsp+0x80]
    1591:	00 00 
    1593:	c5 fd 6f 54 24 60    	vmovdqa ymm2,YMMWORD PTR [rsp+0x60]
    1599:	c5 fd 7f 5c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm3
    159f:	c5 fd 7f 14 24       	vmovdqa YMMWORD PTR [rsp],ymm2
    15a4:	c5 f8 77             	vzeroupper
    15a7:	ff 57 10             	call   QWORD PTR [rdi+0x10]
    15aa:	31 d2                	xor    edx,edx
    15ac:	c5 fd 6f 64 24 60    	vmovdqa ymm4,YMMWORD PTR [rsp+0x60]
    15b2:	89 c1                	mov    ecx,eax
    15b4:	f7 73 08             	div    DWORD PTR [rbx+0x8]
    15b7:	89 8c 24 80 00 00 00 	mov    DWORD PTR [rsp+0x80],ecx
    15be:	c5 fd 6f ac 24 80 00 	vmovdqa ymm5,YMMWORD PTR [rsp+0x80]
    15c5:	00 00 
    15c7:	89 d0                	mov    eax,edx
    15c9:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    15cd:	48 89 c5             	mov    rbp,rax
    15d0:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    15d3:	c5 fd 7f 24 24       	vmovdqa YMMWORD PTR [rsp],ymm4
    15d8:	c5 fd 7f 6c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm5
    15de:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    15e2:	c5 f8 77             	vzeroupper
    15e5:	e8 56 09 00 00       	call   1f40 <_Z12pushListElemP4List8string_t>
    15ea:	48 83 c4 40          	add    rsp,0x40
    15ee:	83 f8 01             	cmp    eax,0x1
    15f1:	75 22                	jne    1615 <_Z17hashMapAddElementP7HashMap8string_t+0xa5>
    15f3:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
    15f6:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    15fa:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    15ff:	c5 fa 59 4b 0c       	vmulss xmm1,xmm0,DWORD PTR [rbx+0xc]
    1604:	c5 f2 58 0d f8 29 00 	vaddss xmm1,xmm1,DWORD PTR [rip+0x29f8]        # 4004 <_IO_stdin_used+0x4>
    160b:	00 
    160c:	c5 f2 5e c0          	vdivss xmm0,xmm1,xmm0
    1610:	c5 fa 11 43 0c       	vmovss DWORD PTR [rbx+0xc],xmm0
    1615:	48 83 c4 08          	add    rsp,0x8
    1619:	89 e8                	mov    eax,ebp
    161b:	5b                   	pop    rbx
    161c:	5d                   	pop    rbp
    161d:	c3                   	ret
    161e:	48 8d 0d 8b 2c 00 00 	lea    rcx,[rip+0x2c8b]        # 42b0 <_IO_stdin_used+0x2b0>
    1625:	ba 52 00 00 00       	mov    edx,0x52
    162a:	48 8d 35 5f 2c 00 00 	lea    rsi,[rip+0x2c5f]        # 4290 <_IO_stdin_used+0x290>
    1631:	48 8d 3d 14 2a 00 00 	lea    rdi,[rip+0x2a14]        # 404c <_IO_stdin_used+0x4c>
    1638:	e8 33 fa ff ff       	call   1070 <__assert_fail@plt>
    163d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001640 <_Z17hashMapPopElementP7HashMap8string_t>:
    1640:	f3 0f 1e fa          	endbr64
    1644:	55                   	push   rbp
    1645:	53                   	push   rbx
    1646:	48 83 ec 08          	sub    rsp,0x8
    164a:	48 85 ff             	test   rdi,rdi
    164d:	0f 84 a9 00 00 00    	je     16fc <_Z17hashMapPopElementP7HashMap8string_t+0xbc>
    1653:	48 83 ec 40          	sub    rsp,0x40
    1657:	48 89 fb             	mov    rbx,rdi
    165a:	c5 fd 6f 9c 24 80 00 	vmovdqa ymm3,YMMWORD PTR [rsp+0x80]
    1661:	00 00 
    1663:	c5 fd 6f 54 24 60    	vmovdqa ymm2,YMMWORD PTR [rsp+0x60]
    1669:	c5 fd 7f 5c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm3
    166f:	c5 fd 7f 14 24       	vmovdqa YMMWORD PTR [rsp],ymm2
    1674:	c5 f8 77             	vzeroupper
    1677:	ff 57 10             	call   QWORD PTR [rdi+0x10]
    167a:	31 d2                	xor    edx,edx
    167c:	c5 fd 6f 64 24 60    	vmovdqa ymm4,YMMWORD PTR [rsp+0x60]
    1682:	89 c1                	mov    ecx,eax
    1684:	f7 73 08             	div    DWORD PTR [rbx+0x8]
    1687:	89 8c 24 80 00 00 00 	mov    DWORD PTR [rsp+0x80],ecx
    168e:	c5 fd 6f ac 24 80 00 	vmovdqa ymm5,YMMWORD PTR [rsp+0x80]
    1695:	00 00 
    1697:	89 d0                	mov    eax,edx
    1699:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    169d:	48 89 c5             	mov    rbp,rax
    16a0:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    16a3:	c5 fd 7f 24 24       	vmovdqa YMMWORD PTR [rsp],ymm4
    16a8:	c5 fd 7f 6c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm5
    16ae:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    16b2:	c5 f8 77             	vzeroupper
    16b5:	e8 26 0a 00 00       	call   20e0 <_Z11popListElemP4List8string_t>
    16ba:	48 83 c4 40          	add    rsp,0x40
    16be:	85 c0                	test   eax,eax
    16c0:	74 2e                	je     16f0 <_Z17hashMapPopElementP7HashMap8string_t+0xb0>
    16c2:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
    16c5:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    16c9:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    16ce:	c5 fa 59 4b 0c       	vmulss xmm1,xmm0,DWORD PTR [rbx+0xc]
    16d3:	89 e8                	mov    eax,ebp
    16d5:	c5 f2 5c 0d 27 29 00 	vsubss xmm1,xmm1,DWORD PTR [rip+0x2927]        # 4004 <_IO_stdin_used+0x4>
    16dc:	00 
    16dd:	c5 f2 5e c0          	vdivss xmm0,xmm1,xmm0
    16e1:	c5 fa 11 43 0c       	vmovss DWORD PTR [rbx+0xc],xmm0
    16e6:	48 83 c4 08          	add    rsp,0x8
    16ea:	5b                   	pop    rbx
    16eb:	5d                   	pop    rbp
    16ec:	c3                   	ret
    16ed:	0f 1f 00             	nop    DWORD PTR [rax]
    16f0:	8b 6b 08             	mov    ebp,DWORD PTR [rbx+0x8]
    16f3:	48 83 c4 08          	add    rsp,0x8
    16f7:	5b                   	pop    rbx
    16f8:	89 e8                	mov    eax,ebp
    16fa:	5d                   	pop    rbp
    16fb:	c3                   	ret
    16fc:	48 8d 0d dd 2b 00 00 	lea    rcx,[rip+0x2bdd]        # 42e0 <_IO_stdin_used+0x2e0>
    1703:	ba 60 00 00 00       	mov    edx,0x60
    1708:	48 8d 35 81 2b 00 00 	lea    rsi,[rip+0x2b81]        # 4290 <_IO_stdin_used+0x290>
    170f:	48 8d 3d 36 29 00 00 	lea    rdi,[rip+0x2936]        # 404c <_IO_stdin_used+0x4c>
    1716:	e8 55 f9 ff ff       	call   1070 <__assert_fail@plt>
    171b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001720 <_Z20hashMapSearchElementP7HashMap8string_t>:
    1720:	f3 0f 1e fa          	endbr64
    1724:	48 83 ec 18          	sub    rsp,0x18
    1728:	c5 fd 6f 44 24 20    	vmovdqa ymm0,YMMWORD PTR [rsp+0x20]
    172e:	48 85 ff             	test   rdi,rdi
    1731:	0f 84 8d 00 00 00    	je     17c4 <_Z20hashMapSearchElementP7HashMap8string_t+0xa4>
    1737:	b9 11 11 11 21       	mov    ecx,0x21111111
    173c:	c4 c1 f9 7e c0       	vmovq  r8,xmm0
    1741:	48 89 fe             	mov    rsi,rdi
    1744:	48 83 ec 40          	sub    rsp,0x40
    1748:	89 c8                	mov    eax,ecx
    174a:	c4 e3 f9 16 c7 01    	vpextrq rdi,xmm0,0x1
    1750:	c4 e3 7d 39 c0 01    	vextracti128 xmm0,ymm0,0x1
    1756:	c5 fd 6f 54 24 60    	vmovdqa ymm2,YMMWORD PTR [rsp+0x60]
    175c:	f2 49 0f 38 f1 c0    	crc32  rax,r8
    1762:	41 89 c8             	mov    r8d,ecx
    1765:	c4 e3 f9 16 c2 01    	vpextrq rdx,xmm0,0x1
    176b:	c5 fd 6f 9c 24 80 00 	vmovdqa ymm3,YMMWORD PTR [rsp+0x80]
    1772:	00 00 
    1774:	c4 c1 f9 7e c1       	vmovq  r9,xmm0
    1779:	f2 4c 0f 38 f1 c7    	crc32  r8,rdi
    177f:	89 cf                	mov    edi,ecx
    1781:	44 01 c0             	add    eax,r8d
    1784:	f2 49 0f 38 f1 f9    	crc32  rdi,r9
    178a:	f2 48 0f 38 f1 ca    	crc32  rcx,rdx
    1790:	8b 56 08             	mov    edx,DWORD PTR [rsi+0x8]
    1793:	01 f8                	add    eax,edi
    1795:	01 c8                	add    eax,ecx
    1797:	83 ea 01             	sub    edx,0x1
    179a:	21 d0                	and    eax,edx
    179c:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    17a0:	48 8b 06             	mov    rax,QWORD PTR [rsi]
    17a3:	c5 fd 7f 14 24       	vmovdqa YMMWORD PTR [rsp],ymm2
    17a8:	c5 fd 7f 5c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm3
    17ae:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    17b2:	c5 f8 77             	vzeroupper
    17b5:	e8 f6 09 00 00       	call   21b0 <_Z13searchElementP4List8string_t>
    17ba:	85 c0                	test   eax,eax
    17bc:	0f 95 c0             	setne  al
    17bf:	48 83 c4 58          	add    rsp,0x58
    17c3:	c3                   	ret
    17c4:	48 8d 0d 45 2b 00 00 	lea    rcx,[rip+0x2b45]        # 4310 <_IO_stdin_used+0x310>
    17cb:	ba 6d 00 00 00       	mov    edx,0x6d
    17d0:	48 8d 35 b9 2a 00 00 	lea    rsi,[rip+0x2ab9]        # 4290 <_IO_stdin_used+0x290>
    17d7:	48 8d 3d 6e 28 00 00 	lea    rdi,[rip+0x286e]        # 404c <_IO_stdin_used+0x4c>
    17de:	c5 f8 77             	vzeroupper
    17e1:	e8 8a f8 ff ff       	call   1070 <__assert_fail@plt>
    17e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    17ed:	00 00 00 

00000000000017f0 <_Z13getLoadFactorP7HashMap>:
    17f0:	f3 0f 1e fa          	endbr64
    17f4:	48 85 ff             	test   rdi,rdi
    17f7:	74 06                	je     17ff <_Z13getLoadFactorP7HashMap+0xf>
    17f9:	c5 fa 10 47 0c       	vmovss xmm0,DWORD PTR [rdi+0xc]
    17fe:	c3                   	ret
    17ff:	50                   	push   rax
    1800:	48 8d 0d 4d 28 00 00 	lea    rcx,[rip+0x284d]        # 4054 <_IO_stdin_used+0x54>
    1807:	ba ab 00 00 00       	mov    edx,0xab
    180c:	48 8d 35 7d 2a 00 00 	lea    rsi,[rip+0x2a7d]        # 4290 <_IO_stdin_used+0x290>
    1813:	48 8d 3d 32 28 00 00 	lea    rdi,[rip+0x2832]        # 404c <_IO_stdin_used+0x4c>
    181a:	e8 51 f8 ff ff       	call   1070 <__assert_fail@plt>
    181f:	90                   	nop

0000000000001820 <_Z11hashMapDtorP7HashMap>:
    1820:	f3 0f 1e fa          	endbr64
    1824:	55                   	push   rbp
    1825:	53                   	push   rbx
    1826:	48 83 ec 08          	sub    rsp,0x8
    182a:	48 85 ff             	test   rdi,rdi
    182d:	74 3a                	je     1869 <_Z11hashMapDtorP7HashMap+0x49>
    182f:	8b 47 08             	mov    eax,DWORD PTR [rdi+0x8]
    1832:	48 89 fd             	mov    rbp,rdi
    1835:	31 db                	xor    ebx,ebx
    1837:	85 c0                	test   eax,eax
    1839:	74 1f                	je     185a <_Z11hashMapDtorP7HashMap+0x3a>
    183b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1840:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    1844:	48 8d 14 5b          	lea    rdx,[rbx+rbx*2]
    1848:	48 83 c3 01          	add    rbx,0x1
    184c:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1850:	e8 bb 09 00 00       	call   2210 <_Z8listDtorP4List>
    1855:	3b 5d 08             	cmp    ebx,DWORD PTR [rbp+0x8]
    1858:	72 e6                	jb     1840 <_Z11hashMapDtorP7HashMap+0x20>
    185a:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    185e:	48 83 c4 08          	add    rsp,0x8
    1862:	5b                   	pop    rbx
    1863:	5d                   	pop    rbp
    1864:	e9 97 f8 ff ff       	jmp    1100 <free@plt>
    1869:	48 8d 0d 02 28 00 00 	lea    rcx,[rip+0x2802]        # 4072 <_IO_stdin_used+0x72>
    1870:	ba b1 00 00 00       	mov    edx,0xb1
    1875:	48 8d 35 14 2a 00 00 	lea    rsi,[rip+0x2a14]        # 4290 <_IO_stdin_used+0x290>
    187c:	48 8d 3d c9 27 00 00 	lea    rdi,[rip+0x27c9]        # 404c <_IO_stdin_used+0x4c>
    1883:	e8 e8 f7 ff ff       	call   1070 <__assert_fail@plt>
    1888:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    188f:	00 

0000000000001890 <_Z6resizeP7HashMapj>:
    1890:	f3 0f 1e fa          	endbr64
    1894:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    1899:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    189d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    18a1:	55                   	push   rbp
    18a2:	48 89 e5             	mov    rbp,rsp
    18a5:	41 57                	push   r15
    18a7:	41 56                	push   r14
    18a9:	41 55                	push   r13
    18ab:	41 54                	push   r12
    18ad:	41 52                	push   r10
    18af:	53                   	push   rbx
    18b0:	48 81 ec a0 00 00 00 	sub    rsp,0xa0
    18b7:	48 89 bd 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rdi
    18be:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    18c5:	00 00 
    18c7:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    18cb:	31 c0                	xor    eax,eax
    18cd:	48 85 f6             	test   rsi,rsi
    18d0:	0f 84 da 01 00 00    	je     1ab0 <_Z6resizeP7HashMapj+0x220>
    18d6:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
    18da:	89 57 08             	mov    DWORD PTR [rdi+0x8],edx
    18dd:	49 89 ff             	mov    r15,rdi
    18e0:	49 89 f4             	mov    r12,rsi
    18e3:	be 18 00 00 00       	mov    esi,0x18
    18e8:	89 d3                	mov    ebx,edx
    18ea:	48 89 47 10          	mov    QWORD PTR [rdi+0x10],rax
    18ee:	89 d0                	mov    eax,edx
    18f0:	48 89 c7             	mov    rdi,rax
    18f3:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    18fa:	e8 81 f7 ff ff       	call   1080 <calloc@plt>
    18ff:	49 89 07             	mov    QWORD PTR [r15],rax
    1902:	49 89 c6             	mov    r14,rax
    1905:	85 db                	test   ebx,ebx
    1907:	74 55                	je     195e <_Z6resizeP7HashMapj+0xce>
    1909:	49 89 c5             	mov    r13,rax
    190c:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    1913:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    1917:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    191e:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    1925:	4d 8d 3c d6          	lea    r15,[r14+rdx*8]
    1929:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1930:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
    1937:	49 83 c5 18          	add    r13,0x18
    193b:	e8 90 05 00 00       	call   1ed0 <_Z8listCtorv>
    1940:	c5 fa 6f a5 50 ff ff 	vmovdqu xmm4,XMMWORD PTR [rbp-0xb0]
    1947:	ff 
    1948:	c4 c1 7a 7f 65 e8    	vmovdqu XMMWORD PTR [r13-0x18],xmm4
    194e:	48 8b 95 60 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa0]
    1955:	49 89 55 f8          	mov    QWORD PTR [r13-0x8],rdx
    1959:	4d 39 ef             	cmp    r15,r13
    195c:	75 d2                	jne    1930 <_Z6resizeP7HashMapj+0xa0>
    195e:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    1962:	c4 c1 7a 10 4c 24 0c 	vmovss xmm1,DWORD PTR [r12+0xc]
    1969:	41 8b 44 24 08       	mov    eax,DWORD PTR [r12+0x8]
    196e:	48 c7 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],0x0
    1975:	00 00 00 00 
    1979:	c4 e1 fa 2a 95 38 ff 	vcvtsi2ss xmm2,xmm0,QWORD PTR [rbp-0xc8]
    1980:	ff ff 
    1982:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1986:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    198b:	48 89 c1             	mov    rcx,rax
    198e:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    1995:	48 89 fe             	mov    rsi,rdi
    1998:	c5 f2 5e ca          	vdivss xmm1,xmm1,xmm2
    199c:	c5 f2 59 c8          	vmulss xmm1,xmm1,xmm0
    19a0:	c5 fa 11 48 0c       	vmovss DWORD PTR [rax+0xc],xmm1
    19a5:	85 c9                	test   ecx,ecx
    19a7:	0f 84 d3 00 00 00    	je     1a80 <_Z6resizeP7HashMapj+0x1f0>
    19ad:	0f 1f 00             	nop    DWORD PTR [rax]
    19b0:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    19b7:	48 8d 04 40          	lea    rax,[rax+rax*2]
    19bb:	48 8b 14 c7          	mov    rdx,QWORD PTR [rdi+rax*8]
    19bf:	4c 8d 2c c5 00 00 00 	lea    r13,[rax*8+0x0]
    19c6:	00 
    19c7:	8b 02                	mov    eax,DWORD PTR [rdx]
    19c9:	85 c0                	test   eax,eax
    19cb:	74 70                	je     1a3d <_Z6resizeP7HashMapj+0x1ad>
    19cd:	0f 1f 00             	nop    DWORD PTR [rax]
    19d0:	48 8d 0c 40          	lea    rcx,[rax+rax*2]
    19d4:	48 83 ec 40          	sub    rsp,0x40
    19d8:	48 c1 e1 05          	shl    rcx,0x5
    19dc:	48 01 ca             	add    rdx,rcx
    19df:	49 89 cf             	mov    r15,rcx
    19e2:	c5 fa 7e 42 40       	vmovq  xmm0,QWORD PTR [rdx+0x40]
    19e7:	c5 fd 6f 4a 20       	vmovdqa ymm1,YMMWORD PTR [rdx+0x20]
    19ec:	31 d2                	xor    edx,edx
    19ee:	c5 f9 7e c0          	vmovd  eax,xmm0
    19f2:	c5 f9 d6 45 90       	vmovq  QWORD PTR [rbp-0x70],xmm0
    19f7:	f7 f3                	div    ebx
    19f9:	c5 fd 7f 8d 70 ff ff 	vmovdqa YMMWORD PTR [rbp-0x90],ymm1
    1a00:	ff 
    1a01:	c5 fd 7f 0c 24       	vmovdqa YMMWORD PTR [rsp],ymm1
    1a06:	c5 fd 6f 5d 90       	vmovdqa ymm3,YMMWORD PTR [rbp-0x70]
    1a0b:	c5 fd 7f 5c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm3
    1a11:	48 8d 04 52          	lea    rax,[rdx+rdx*2]
    1a15:	c5 f8 77             	vzeroupper
    1a18:	49 8d 3c c6          	lea    rdi,[r14+rax*8]
    1a1c:	e8 1f 05 00 00       	call   1f40 <_Z12pushListElemP4List8string_t>
    1a21:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1a25:	48 83 c4 40          	add    rsp,0x40
    1a29:	4a 8b 14 2f          	mov    rdx,QWORD PTR [rdi+r13*1]
    1a2d:	48 89 fe             	mov    rsi,rdi
    1a30:	42 8b 04 3a          	mov    eax,DWORD PTR [rdx+r15*1]
    1a34:	85 c0                	test   eax,eax
    1a36:	75 98                	jne    19d0 <_Z6resizeP7HashMapj+0x140>
    1a38:	41 8b 4c 24 08       	mov    ecx,DWORD PTR [r12+0x8]
    1a3d:	48 83 85 48 ff ff ff 	add    QWORD PTR [rbp-0xb8],0x1
    1a44:	01 
    1a45:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    1a4c:	39 c8                	cmp    eax,ecx
    1a4e:	0f 82 5c ff ff ff    	jb     19b0 <_Z6resizeP7HashMapj+0x120>
    1a54:	85 c9                	test   ecx,ecx
    1a56:	74 28                	je     1a80 <_Z6resizeP7HashMapj+0x1f0>
    1a58:	31 db                	xor    ebx,ebx
    1a5a:	eb 08                	jmp    1a64 <_Z6resizeP7HashMapj+0x1d4>
    1a5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1a60:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    1a64:	48 8d 04 5b          	lea    rax,[rbx+rbx*2]
    1a68:	48 83 c3 01          	add    rbx,0x1
    1a6c:	48 8d 3c c6          	lea    rdi,[rsi+rax*8]
    1a70:	e8 9b 07 00 00       	call   2210 <_Z8listDtorP4List>
    1a75:	41 3b 5c 24 08       	cmp    ebx,DWORD PTR [r12+0x8]
    1a7a:	72 e4                	jb     1a60 <_Z6resizeP7HashMapj+0x1d0>
    1a7c:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1a80:	e8 7b f6 ff ff       	call   1100 <free@plt>
    1a85:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    1a89:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1a90:	00 00 
    1a92:	75 3b                	jne    1acf <_Z6resizeP7HashMapj+0x23f>
    1a94:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    1a9b:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    1a9f:	5b                   	pop    rbx
    1aa0:	41 5a                	pop    r10
    1aa2:	41 5c                	pop    r12
    1aa4:	41 5d                	pop    r13
    1aa6:	41 5e                	pop    r14
    1aa8:	41 5f                	pop    r15
    1aaa:	5d                   	pop    rbp
    1aab:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    1aaf:	c3                   	ret
    1ab0:	48 8d 0d 89 28 00 00 	lea    rcx,[rip+0x2889]        # 4340 <_IO_stdin_used+0x340>
    1ab7:	ba c5 00 00 00       	mov    edx,0xc5
    1abc:	48 8d 35 cd 27 00 00 	lea    rsi,[rip+0x27cd]        # 4290 <_IO_stdin_used+0x290>
    1ac3:	48 8d 3d 82 25 00 00 	lea    rdi,[rip+0x2582]        # 404c <_IO_stdin_used+0x4c>
    1aca:	e8 a1 f5 ff ff       	call   1070 <__assert_fail@plt>
    1acf:	e8 0c f6 ff ff       	call   10e0 <__stack_chk_fail@plt>
    1ad4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1adb:	00 00 00 
    1ade:	66 90                	xchg   ax,ax

0000000000001ae0 <_Z15crc32HashString8string_t>:
    1ae0:	f3 0f 1e fa          	endbr64
    1ae4:	31 c0                	xor    eax,eax
    1ae6:	c3                   	ret
    1ae7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1aee:	00 00 

0000000000001af0 <_Z19_mm_crc32HashString8string_t>:
    1af0:	f3 0f 1e fa          	endbr64
    1af4:	31 c0                	xor    eax,eax
    1af6:	c3                   	ret
    1af7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1afe:	00 00 

0000000000001b00 <_Z25_mm_crc32UnrollHashString8string_t>:
    1b00:	f3 0f 1e fa          	endbr64
    1b04:	c5 f9 6f 44 24 08    	vmovdqa xmm0,XMMWORD PTR [rsp+0x8]
    1b0a:	b9 11 11 11 21       	mov    ecx,0x21111111
    1b0f:	c5 fd 6f 4c 24 08    	vmovdqa ymm1,YMMWORD PTR [rsp+0x8]
    1b15:	89 c8                	mov    eax,ecx
    1b17:	c4 e1 f9 7e c7       	vmovq  rdi,xmm0
    1b1c:	c4 e3 f9 16 c6 01    	vpextrq rsi,xmm0,0x1
    1b22:	c4 e3 7d 39 c8 01    	vextracti128 xmm0,ymm1,0x1
    1b28:	f2 48 0f 38 f1 c7    	crc32  rax,rdi
    1b2e:	89 cf                	mov    edi,ecx
    1b30:	c4 c1 f9 7e c0       	vmovq  r8,xmm0
    1b35:	f2 48 0f 38 f1 fe    	crc32  rdi,rsi
    1b3b:	89 ce                	mov    esi,ecx
    1b3d:	c4 e3 f9 16 c2 01    	vpextrq rdx,xmm0,0x1
    1b43:	01 f8                	add    eax,edi
    1b45:	f2 49 0f 38 f1 f0    	crc32  rsi,r8
    1b4b:	f2 48 0f 38 f1 ca    	crc32  rcx,rdx
    1b51:	01 f0                	add    eax,esi
    1b53:	01 c8                	add    eax,ecx
    1b55:	c5 f8 77             	vzeroupper
    1b58:	c3                   	ret
    1b59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001b60 <_Z17murmur2HashString8string_t>:
    1b60:	f3 0f 1e fa          	endbr64
    1b64:	31 c0                	xor    eax,eax
    1b66:	c3                   	ret
    1b67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1b6e:	00 00 

0000000000001b70 <_Z13sumHashString8string_t>:
    1b70:	f3 0f 1e fa          	endbr64
    1b74:	31 c0                	xor    eax,eax
    1b76:	c3                   	ret
    1b77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1b7e:	00 00 

0000000000001b80 <_Z17adler32HashString8string_t>:
    1b80:	f3 0f 1e fa          	endbr64
    1b84:	8b 7c 24 2c          	mov    edi,DWORD PTR [rsp+0x2c]
    1b88:	85 ff                	test   edi,edi
    1b8a:	0f 84 f0 01 00 00    	je     1d80 <_Z17adler32HashString8string_t+0x200>
    1b90:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    1b95:	41 b9 71 80 07 80    	mov    r9d,0x80078071
    1b9b:	49 b8 e7 e2 97 86 70 	movabs r8,0x800780708697e2e7
    1ba2:	80 07 80 
    1ba5:	48 8d 48 01          	lea    rcx,[rax+0x1]
    1ba9:	48 89 c8             	mov    rax,rcx
    1bac:	49 f7 e8             	imul   r8
    1baf:	48 89 c8             	mov    rax,rcx
    1bb2:	48 c1 f8 3f          	sar    rax,0x3f
    1bb6:	48 01 ca             	add    rdx,rcx
    1bb9:	48 c1 fa 0f          	sar    rdx,0xf
    1bbd:	48 29 c2             	sub    rdx,rax
    1bc0:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1bc7:	48 29 c1             	sub    rcx,rax
    1bca:	89 ce                	mov    esi,ecx
    1bcc:	48 89 ca             	mov    rdx,rcx
    1bcf:	41 89 ca             	mov    r10d,ecx
    1bd2:	48 89 f1             	mov    rcx,rsi
    1bd5:	49 0f af c9          	imul   rcx,r9
    1bd9:	48 c1 e9 2f          	shr    rcx,0x2f
    1bdd:	69 c1 f1 ff 00 00    	imul   eax,ecx,0xfff1
    1be3:	89 d1                	mov    ecx,edx
    1be5:	29 c1                	sub    ecx,eax
    1be7:	83 ff 01             	cmp    edi,0x1
    1bea:	0f 84 86 01 00 00    	je     1d76 <_Z17adler32HashString8string_t+0x1f6>
    1bf0:	48 03 74 24 10       	add    rsi,QWORD PTR [rsp+0x10]
    1bf5:	48 89 f0             	mov    rax,rsi
    1bf8:	49 f7 e8             	imul   r8
    1bfb:	48 89 f0             	mov    rax,rsi
    1bfe:	48 c1 f8 3f          	sar    rax,0x3f
    1c02:	48 01 f2             	add    rdx,rsi
    1c05:	48 c1 fa 0f          	sar    rdx,0xf
    1c09:	48 29 c2             	sub    rdx,rax
    1c0c:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1c13:	48 29 c6             	sub    rsi,rax
    1c16:	01 f1                	add    ecx,esi
    1c18:	48 89 f2             	mov    rdx,rsi
    1c1b:	41 89 f2             	mov    r10d,esi
    1c1e:	89 c9                	mov    ecx,ecx
    1c20:	48 89 c8             	mov    rax,rcx
    1c23:	49 0f af c9          	imul   rcx,r9
    1c27:	48 c1 e9 2f          	shr    rcx,0x2f
    1c2b:	69 f1 f1 ff 00 00    	imul   esi,ecx,0xfff1
    1c31:	29 f0                	sub    eax,esi
    1c33:	89 c1                	mov    ecx,eax
    1c35:	83 ff 02             	cmp    edi,0x2
    1c38:	0f 84 38 01 00 00    	je     1d76 <_Z17adler32HashString8string_t+0x1f6>
    1c3e:	89 d6                	mov    esi,edx
    1c40:	48 03 74 24 18       	add    rsi,QWORD PTR [rsp+0x18]
    1c45:	48 89 f0             	mov    rax,rsi
    1c48:	49 f7 e8             	imul   r8
    1c4b:	48 89 f0             	mov    rax,rsi
    1c4e:	48 c1 f8 3f          	sar    rax,0x3f
    1c52:	48 01 f2             	add    rdx,rsi
    1c55:	48 c1 fa 0f          	sar    rdx,0xf
    1c59:	48 29 c2             	sub    rdx,rax
    1c5c:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1c63:	48 29 c6             	sub    rsi,rax
    1c66:	01 f1                	add    ecx,esi
    1c68:	48 89 f2             	mov    rdx,rsi
    1c6b:	41 89 f2             	mov    r10d,esi
    1c6e:	89 c9                	mov    ecx,ecx
    1c70:	48 89 c8             	mov    rax,rcx
    1c73:	49 0f af c9          	imul   rcx,r9
    1c77:	48 c1 e9 2f          	shr    rcx,0x2f
    1c7b:	69 f1 f1 ff 00 00    	imul   esi,ecx,0xfff1
    1c81:	29 f0                	sub    eax,esi
    1c83:	89 c1                	mov    ecx,eax
    1c85:	83 ff 03             	cmp    edi,0x3
    1c88:	0f 84 e8 00 00 00    	je     1d76 <_Z17adler32HashString8string_t+0x1f6>
    1c8e:	89 d6                	mov    esi,edx
    1c90:	48 03 74 24 20       	add    rsi,QWORD PTR [rsp+0x20]
    1c95:	48 89 f0             	mov    rax,rsi
    1c98:	49 f7 e8             	imul   r8
    1c9b:	48 89 f0             	mov    rax,rsi
    1c9e:	48 c1 f8 3f          	sar    rax,0x3f
    1ca2:	48 01 f2             	add    rdx,rsi
    1ca5:	48 c1 fa 0f          	sar    rdx,0xf
    1ca9:	48 29 c2             	sub    rdx,rax
    1cac:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1cb3:	48 29 c6             	sub    rsi,rax
    1cb6:	01 f1                	add    ecx,esi
    1cb8:	48 89 f2             	mov    rdx,rsi
    1cbb:	41 89 f2             	mov    r10d,esi
    1cbe:	89 c9                	mov    ecx,ecx
    1cc0:	48 89 c8             	mov    rax,rcx
    1cc3:	49 0f af c9          	imul   rcx,r9
    1cc7:	48 c1 e9 2f          	shr    rcx,0x2f
    1ccb:	69 f1 f1 ff 00 00    	imul   esi,ecx,0xfff1
    1cd1:	29 f0                	sub    eax,esi
    1cd3:	89 c1                	mov    ecx,eax
    1cd5:	83 ff 04             	cmp    edi,0x4
    1cd8:	0f 84 98 00 00 00    	je     1d76 <_Z17adler32HashString8string_t+0x1f6>
    1cde:	89 d6                	mov    esi,edx
    1ce0:	48 03 74 24 28       	add    rsi,QWORD PTR [rsp+0x28]
    1ce5:	48 89 f0             	mov    rax,rsi
    1ce8:	49 f7 e8             	imul   r8
    1ceb:	48 8d 04 32          	lea    rax,[rdx+rsi*1]
    1cef:	48 89 f2             	mov    rdx,rsi
    1cf2:	48 c1 f8 0f          	sar    rax,0xf
    1cf6:	48 c1 fa 3f          	sar    rdx,0x3f
    1cfa:	48 29 d0             	sub    rax,rdx
    1cfd:	48 69 c0 f1 ff 00 00 	imul   rax,rax,0xfff1
    1d04:	48 29 c6             	sub    rsi,rax
    1d07:	01 f1                	add    ecx,esi
    1d09:	41 89 f2             	mov    r10d,esi
    1d0c:	48 89 ce             	mov    rsi,rcx
    1d0f:	49 0f af c9          	imul   rcx,r9
    1d13:	48 c1 e9 2f          	shr    rcx,0x2f
    1d17:	69 c1 f1 ff 00 00    	imul   eax,ecx,0xfff1
    1d1d:	29 c6                	sub    esi,eax
    1d1f:	89 f1                	mov    ecx,esi
    1d21:	83 ff 05             	cmp    edi,0x5
    1d24:	74 50                	je     1d76 <_Z17adler32HashString8string_t+0x1f6>
    1d26:	be 05 00 00 00       	mov    esi,0x5
    1d2b:	4c 03 54 f4 08       	add    r10,QWORD PTR [rsp+rsi*8+0x8]
    1d30:	48 83 c6 01          	add    rsi,0x1
    1d34:	4c 89 d0             	mov    rax,r10
    1d37:	49 f7 e8             	imul   r8
    1d3a:	4c 89 d0             	mov    rax,r10
    1d3d:	48 c1 f8 3f          	sar    rax,0x3f
    1d41:	4c 01 d2             	add    rdx,r10
    1d44:	48 c1 fa 0f          	sar    rdx,0xf
    1d48:	48 29 c2             	sub    rdx,rax
    1d4b:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1d52:	4c 89 d2             	mov    rdx,r10
    1d55:	48 29 c2             	sub    rdx,rax
    1d58:	01 d1                	add    ecx,edx
    1d5a:	41 89 d2             	mov    r10d,edx
    1d5d:	48 89 ca             	mov    rdx,rcx
    1d60:	49 0f af c9          	imul   rcx,r9
    1d64:	48 c1 e9 2f          	shr    rcx,0x2f
    1d68:	69 c1 f1 ff 00 00    	imul   eax,ecx,0xfff1
    1d6e:	89 d1                	mov    ecx,edx
    1d70:	29 c1                	sub    ecx,eax
    1d72:	39 fe                	cmp    esi,edi
    1d74:	72 b5                	jb     1d2b <_Z17adler32HashString8string_t+0x1ab>
    1d76:	89 c8                	mov    eax,ecx
    1d78:	c1 e0 10             	shl    eax,0x10
    1d7b:	44 09 d0             	or     eax,r10d
    1d7e:	c3                   	ret
    1d7f:	90                   	nop
    1d80:	b8 01 00 00 00       	mov    eax,0x1
    1d85:	c3                   	ret
    1d86:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1d8d:	00 00 00 

0000000000001d90 <_Z13elfHashString8string_t>:
    1d90:	f3 0f 1e fa          	endbr64
    1d94:	8b 4c 24 2c          	mov    ecx,DWORD PTR [rsp+0x2c]
    1d98:	85 c9                	test   ecx,ecx
    1d9a:	0f 84 ed 00 00 00    	je     1e8d <_Z13elfHashString8string_t+0xfd>
    1da0:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    1da5:	89 c2                	mov    edx,eax
    1da7:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1dad:	89 d6                	mov    esi,edx
    1daf:	c1 ee 18             	shr    esi,0x18
    1db2:	31 c6                	xor    esi,eax
    1db4:	85 d2                	test   edx,edx
    1db6:	f7 d2                	not    edx
    1db8:	0f 45 c6             	cmovne eax,esi
    1dbb:	21 c2                	and    edx,eax
    1dbd:	83 f9 01             	cmp    ecx,0x1
    1dc0:	0f 84 ca 00 00 00    	je     1e90 <_Z13elfHashString8string_t+0x100>
    1dc6:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
    1dca:	c1 e2 04             	shl    edx,0x4
    1dcd:	01 d0                	add    eax,edx
    1dcf:	89 c2                	mov    edx,eax
    1dd1:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1dd7:	89 d6                	mov    esi,edx
    1dd9:	c1 ee 18             	shr    esi,0x18
    1ddc:	31 c6                	xor    esi,eax
    1dde:	85 d2                	test   edx,edx
    1de0:	f7 d2                	not    edx
    1de2:	0f 45 c6             	cmovne eax,esi
    1de5:	21 c2                	and    edx,eax
    1de7:	83 f9 02             	cmp    ecx,0x2
    1dea:	0f 84 a0 00 00 00    	je     1e90 <_Z13elfHashString8string_t+0x100>
    1df0:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
    1df4:	c1 e2 04             	shl    edx,0x4
    1df7:	01 d0                	add    eax,edx
    1df9:	89 c2                	mov    edx,eax
    1dfb:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1e01:	89 d6                	mov    esi,edx
    1e03:	c1 ee 18             	shr    esi,0x18
    1e06:	31 c6                	xor    esi,eax
    1e08:	85 d2                	test   edx,edx
    1e0a:	f7 d2                	not    edx
    1e0c:	0f 45 c6             	cmovne eax,esi
    1e0f:	21 c2                	and    edx,eax
    1e11:	83 f9 03             	cmp    ecx,0x3
    1e14:	74 7a                	je     1e90 <_Z13elfHashString8string_t+0x100>
    1e16:	8b 44 24 20          	mov    eax,DWORD PTR [rsp+0x20]
    1e1a:	c1 e2 04             	shl    edx,0x4
    1e1d:	01 d0                	add    eax,edx
    1e1f:	89 c2                	mov    edx,eax
    1e21:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1e27:	89 d6                	mov    esi,edx
    1e29:	c1 ee 18             	shr    esi,0x18
    1e2c:	31 c6                	xor    esi,eax
    1e2e:	85 d2                	test   edx,edx
    1e30:	f7 d2                	not    edx
    1e32:	0f 45 c6             	cmovne eax,esi
    1e35:	21 c2                	and    edx,eax
    1e37:	83 f9 04             	cmp    ecx,0x4
    1e3a:	74 54                	je     1e90 <_Z13elfHashString8string_t+0x100>
    1e3c:	8b 44 24 28          	mov    eax,DWORD PTR [rsp+0x28]
    1e40:	c1 e2 04             	shl    edx,0x4
    1e43:	01 d0                	add    eax,edx
    1e45:	89 c2                	mov    edx,eax
    1e47:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1e4d:	89 d6                	mov    esi,edx
    1e4f:	c1 ee 18             	shr    esi,0x18
    1e52:	31 c6                	xor    esi,eax
    1e54:	85 d2                	test   edx,edx
    1e56:	f7 d2                	not    edx
    1e58:	0f 45 c6             	cmovne eax,esi
    1e5b:	21 d0                	and    eax,edx
    1e5d:	ba 05 00 00 00       	mov    edx,0x5
    1e62:	83 f9 05             	cmp    ecx,0x5
    1e65:	74 24                	je     1e8b <_Z13elfHashString8string_t+0xfb>
    1e67:	c1 e0 04             	shl    eax,0x4
    1e6a:	03 44 d4 08          	add    eax,DWORD PTR [rsp+rdx*8+0x8]
    1e6e:	89 c6                	mov    esi,eax
    1e70:	81 e6 00 00 00 f0    	and    esi,0xf0000000
    1e76:	74 0b                	je     1e83 <_Z13elfHashString8string_t+0xf3>
    1e78:	89 f7                	mov    edi,esi
    1e7a:	f7 d6                	not    esi
    1e7c:	c1 ef 18             	shr    edi,0x18
    1e7f:	31 f8                	xor    eax,edi
    1e81:	21 f0                	and    eax,esi
    1e83:	48 83 c2 01          	add    rdx,0x1
    1e87:	39 ca                	cmp    edx,ecx
    1e89:	72 dc                	jb     1e67 <_Z13elfHashString8string_t+0xd7>
    1e8b:	89 c1                	mov    ecx,eax
    1e8d:	89 c8                	mov    eax,ecx
    1e8f:	c3                   	ret
    1e90:	89 d1                	mov    ecx,edx
    1e92:	89 c8                	mov    eax,ecx
    1e94:	c3                   	ret
    1e95:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1e9c:	00 00 00 
    1e9f:	90                   	nop

0000000000001ea0 <_Z13searchElementP4List8string_t.part.0>:
    1ea0:	50                   	push   rax
    1ea1:	58                   	pop    rax
    1ea2:	48 8d 0d bf 24 00 00 	lea    rcx,[rip+0x24bf]        # 4368 <_IO_stdin_used+0x368>
    1ea9:	ba 57 00 00 00       	mov    edx,0x57
    1eae:	48 8d 35 d8 21 00 00 	lea    rsi,[rip+0x21d8]        # 408d <_IO_stdin_used+0x8d>
    1eb5:	48 8d 3d ec 21 00 00 	lea    rdi,[rip+0x21ec]        # 40a8 <_IO_stdin_used+0xa8>
    1ebc:	48 83 ec 08          	sub    rsp,0x8
    1ec0:	e8 ab f1 ff ff       	call   1070 <__assert_fail@plt>
    1ec5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1ecc:	00 00 00 00 

0000000000001ed0 <_Z8listCtorv>:
    1ed0:	f3 0f 1e fa          	endbr64
    1ed4:	53                   	push   rbx
    1ed5:	be 60 00 00 00       	mov    esi,0x60
    1eda:	48 89 fb             	mov    rbx,rdi
    1edd:	bf 04 00 00 00       	mov    edi,0x4
    1ee2:	e8 99 f1 ff ff       	call   1080 <calloc@plt>
    1ee7:	48 8b 15 a2 27 00 00 	mov    rdx,QWORD PTR [rip+0x27a2]        # 4690 <_IO_stdin_used+0x690>
    1eee:	48 b9 01 00 00 00 04 	movabs rcx,0x400000001
    1ef5:	00 00 00 
    1ef8:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    1eff:	00 
    1f00:	48 89 03             	mov    QWORD PTR [rbx],rax
    1f03:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    1f07:	48 8b 15 8a 27 00 00 	mov    rdx,QWORD PTR [rip+0x278a]        # 4698 <_IO_stdin_used+0x698>
    1f0e:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    1f15:	48 89 90 c0 00 00 00 	mov    QWORD PTR [rax+0xc0],rdx
    1f1c:	48 8b 15 7d 27 00 00 	mov    rdx,QWORD PTR [rip+0x277d]        # 46a0 <_IO_stdin_used+0x6a0>
    1f23:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
    1f27:	48 89 90 20 01 00 00 	mov    QWORD PTR [rax+0x120],rdx
    1f2e:	48 89 d8             	mov    rax,rbx
    1f31:	5b                   	pop    rbx
    1f32:	c3                   	ret
    1f33:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1f3a:	00 00 00 00 
    1f3e:	66 90                	xchg   ax,ax

0000000000001f40 <_Z12pushListElemP4List8string_t>:
    1f40:	f3 0f 1e fa          	endbr64
    1f44:	41 54                	push   r12
    1f46:	55                   	push   rbp
    1f47:	53                   	push   rbx
    1f48:	48 85 ff             	test   rdi,rdi
    1f4b:	0f 84 66 01 00 00    	je     20b7 <_Z12pushListElemP4List8string_t+0x177>
    1f51:	48 89 fd             	mov    rbp,rdi
    1f54:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    1f57:	c5 fd 6f 5c 24 20    	vmovdqa ymm3,YMMWORD PTR [rsp+0x20]
    1f5d:	8b 07                	mov    eax,DWORD PTR [rdi]
    1f5f:	85 c0                	test   eax,eax
    1f61:	75 17                	jne    1f7a <_Z12pushListElemP4List8string_t+0x3a>
    1f63:	e9 d8 00 00 00       	jmp    2040 <_Z12pushListElemP4List8string_t+0x100>
    1f68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    1f6f:	00 
    1f70:	8b 00                	mov    eax,DWORD PTR [rax]
    1f72:	85 c0                	test   eax,eax
    1f74:	0f 84 c6 00 00 00    	je     2040 <_Z12pushListElemP4List8string_t+0x100>
    1f7a:	48 8d 1c 40          	lea    rbx,[rax+rax*2]
    1f7e:	48 c1 e3 05          	shl    rbx,0x5
    1f82:	48 8d 04 1f          	lea    rax,[rdi+rbx*1]
    1f86:	c5 fd 6f 60 20       	vmovdqa ymm4,YMMWORD PTR [rax+0x20]
    1f8b:	c5 fd 6f c3          	vmovdqa ymm0,ymm3
    1f8f:	c5 fd 6f cc          	vmovdqa ymm1,ymm4
    1f93:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    1f97:	c5 fd d7 d2          	vpmovmskb edx,ymm2
    1f9b:	f7 d2                	not    edx
    1f9d:	85 d2                	test   edx,edx
    1f9f:	75 cf                	jne    1f70 <_Z12pushListElemP4List8string_t+0x30>
    1fa1:	8b 70 08             	mov    esi,DWORD PTR [rax+0x8]
    1fa4:	8b 4d 08             	mov    ecx,DWORD PTR [rbp+0x8]
    1fa7:	8d 56 01             	lea    edx,[rsi+0x1]
    1faa:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
    1fad:	39 4d 0c             	cmp    DWORD PTR [rbp+0xc],ecx
    1fb0:	0f 85 ed 00 00 00    	jne    20a3 <_Z12pushListElemP4List8string_t+0x163>
    1fb6:	01 c9                	add    ecx,ecx
    1fb8:	89 4d 0c             	mov    DWORD PTR [rbp+0xc],ecx
    1fbb:	4c 8d 24 49          	lea    r12,[rcx+rcx*2]
    1fbf:	49 c1 e4 05          	shl    r12,0x5
    1fc3:	4c 89 e6             	mov    rsi,r12
    1fc6:	c5 f8 77             	vzeroupper
    1fc9:	e8 92 f1 ff ff       	call   1160 <realloc@plt>
    1fce:	8b 55 0c             	mov    edx,DWORD PTR [rbp+0xc]
    1fd1:	4c 89 e1             	mov    rcx,r12
    1fd4:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    1fd8:	d1 ea                	shr    edx,1
    1fda:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    1fde:	48 c1 e2 05          	shl    rdx,0x5
    1fe2:	49 39 d4             	cmp    r12,rdx
    1fe5:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
    1fe9:	48 0f 42 ca          	cmovb  rcx,rdx
    1fed:	31 f6                	xor    esi,esi
    1fef:	48 29 d1             	sub    rcx,rdx
    1ff2:	e8 29 f1 ff ff       	call   1120 <__memset_chk@plt>
    1ff7:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    1ffa:	8b 75 0c             	mov    esi,DWORD PTR [rbp+0xc]
    1ffd:	39 f0                	cmp    eax,esi
    1fff:	0f 83 a8 00 00 00    	jae    20ad <_Z12pushListElemP4List8string_t+0x16d>
    2005:	89 c2                	mov    edx,eax
    2007:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    200b:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    200f:	48 c1 e2 05          	shl    rdx,0x5
    2013:	48 01 fa             	add    rdx,rdi
    2016:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    201d:	00 00 00 
    2020:	89 c1                	mov    ecx,eax
    2022:	83 c0 01             	add    eax,0x1
    2025:	48 83 c2 60          	add    rdx,0x60
    2029:	89 42 a0             	mov    DWORD PTR [rdx-0x60],eax
    202c:	89 4a a4             	mov    DWORD PTR [rdx-0x5c],ecx
    202f:	39 c6                	cmp    esi,eax
    2031:	75 ed                	jne    2020 <_Z12pushListElemP4List8string_t+0xe0>
    2033:	8b 54 1f 08          	mov    edx,DWORD PTR [rdi+rbx*1+0x8]
    2037:	5b                   	pop    rbx
    2038:	5d                   	pop    rbp
    2039:	41 5c                	pop    r12
    203b:	89 d0                	mov    eax,edx
    203d:	c3                   	ret
    203e:	66 90                	xchg   ax,ax
    2040:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    2043:	8b 57 04             	mov    edx,DWORD PTR [rdi+0x4]
    2046:	c5 fd 6f 44 24 20    	vmovdqa ymm0,YMMWORD PTR [rsp+0x20]
    204c:	c5 fd 6f 4c 24 40    	vmovdqa ymm1,YMMWORD PTR [rsp+0x40]
    2052:	48 8d 1c 40          	lea    rbx,[rax+rax*2]
    2056:	48 89 c6             	mov    rsi,rax
    2059:	48 c1 e3 05          	shl    rbx,0x5
    205d:	48 8d 04 1f          	lea    rax,[rdi+rbx*1]
    2061:	8b 08                	mov    ecx,DWORD PTR [rax]
    2063:	89 4d 08             	mov    DWORD PTR [rbp+0x8],ecx
    2066:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    2069:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    206d:	48 c1 e2 05          	shl    rdx,0x5
    2071:	c7 40 08 00 00 00 00 	mov    DWORD PTR [rax+0x8],0x0
    2078:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    207e:	c5 fd 7f 40 20       	vmovdqa YMMWORD PTR [rax+0x20],ymm0
    2083:	c5 fd 7f 48 40       	vmovdqa YMMWORD PTR [rax+0x40],ymm1
    2088:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
    208b:	89 34 17             	mov    DWORD PTR [rdi+rdx*1],esi
    208e:	ba 01 00 00 00       	mov    edx,0x1
    2093:	83 45 10 01          	add    DWORD PTR [rbp+0x10],0x1
    2097:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
    209a:	39 4d 0c             	cmp    DWORD PTR [rbp+0xc],ecx
    209d:	0f 84 13 ff ff ff    	je     1fb6 <_Z12pushListElemP4List8string_t+0x76>
    20a3:	c5 f8 77             	vzeroupper
    20a6:	5b                   	pop    rbx
    20a7:	89 d0                	mov    eax,edx
    20a9:	5d                   	pop    rbp
    20aa:	41 5c                	pop    r12
    20ac:	c3                   	ret
    20ad:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    20b1:	8b 54 18 08          	mov    edx,DWORD PTR [rax+rbx*1+0x8]
    20b5:	eb ef                	jmp    20a6 <_Z12pushListElemP4List8string_t+0x166>
    20b7:	48 8d 0d d2 22 00 00 	lea    rcx,[rip+0x22d2]        # 4390 <_IO_stdin_used+0x390>
    20be:	ba 1e 00 00 00       	mov    edx,0x1e
    20c3:	48 8d 35 c3 1f 00 00 	lea    rsi,[rip+0x1fc3]        # 408d <_IO_stdin_used+0x8d>
    20ca:	48 8d 3d d7 1f 00 00 	lea    rdi,[rip+0x1fd7]        # 40a8 <_IO_stdin_used+0xa8>
    20d1:	e8 9a ef ff ff       	call   1070 <__assert_fail@plt>
    20d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    20dd:	00 00 00 

00000000000020e0 <_Z11popListElemP4List8string_t>:
    20e0:	f3 0f 1e fa          	endbr64
    20e4:	48 83 ec 18          	sub    rsp,0x18
    20e8:	48 85 ff             	test   rdi,rdi
    20eb:	0f 84 9d 00 00 00    	je     218e <_Z11popListElemP4List8string_t+0xae>
    20f1:	49 89 f8             	mov    r8,rdi
    20f4:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    20f7:	c5 fd 6f 5c 24 20    	vmovdqa ymm3,YMMWORD PTR [rsp+0x20]
    20fd:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    20ff:	eb 33                	jmp    2134 <_Z11popListElemP4List8string_t+0x54>
    2101:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2108:	89 c8                	mov    eax,ecx
    210a:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    210e:	48 c1 e2 05          	shl    rdx,0x5
    2112:	48 01 fa             	add    rdx,rdi
    2115:	c5 fd 6f 62 20       	vmovdqa ymm4,YMMWORD PTR [rdx+0x20]
    211a:	c5 fd 6f c3          	vmovdqa ymm0,ymm3
    211e:	c5 fd 6f cc          	vmovdqa ymm1,ymm4
    2122:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    2126:	c5 fd d7 f2          	vpmovmskb esi,ymm2
    212a:	f7 d6                	not    esi
    212c:	89 c8                	mov    eax,ecx
    212e:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    2130:	85 f6                	test   esi,esi
    2132:	74 14                	je     2148 <_Z11popListElemP4List8string_t+0x68>
    2134:	85 c9                	test   ecx,ecx
    2136:	75 d0                	jne    2108 <_Z11popListElemP4List8string_t+0x28>
    2138:	31 c0                	xor    eax,eax
    213a:	c5 f8 77             	vzeroupper
    213d:	48 83 c4 18          	add    rsp,0x18
    2141:	c3                   	ret
    2142:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2148:	8b 72 04             	mov    esi,DWORD PTR [rdx+0x4]
    214b:	c4 c1 79 6e 48 08    	vmovd  xmm1,DWORD PTR [r8+0x8]
    2151:	c7 42 40 00 00 00 00 	mov    DWORD PTR [rdx+0x40],0x0
    2158:	49 89 f1             	mov    r9,rsi
    215b:	48 8d 34 76          	lea    rsi,[rsi+rsi*2]
    215f:	c4 e3 71 22 c0 01    	vpinsrd xmm0,xmm1,eax,0x1
    2165:	48 c1 e6 05          	shl    rsi,0x5
    2169:	89 0c 37             	mov    DWORD PTR [rdi+rsi*1],ecx
    216c:	48 8d 0c 49          	lea    rcx,[rcx+rcx*2]
    2170:	48 c1 e1 05          	shl    rcx,0x5
    2174:	44 89 4c 0f 04       	mov    DWORD PTR [rdi+rcx*1+0x4],r9d
    2179:	c5 f9 d6 02          	vmovq  QWORD PTR [rdx],xmm0
    217d:	41 83 68 10 01       	sub    DWORD PTR [r8+0x10],0x1
    2182:	41 89 40 08          	mov    DWORD PTR [r8+0x8],eax
    2186:	c5 f8 77             	vzeroupper
    2189:	48 83 c4 18          	add    rsp,0x18
    218d:	c3                   	ret
    218e:	48 8d 0d 1b 22 00 00 	lea    rcx,[rip+0x221b]        # 43b0 <_IO_stdin_used+0x3b0>
    2195:	ba 3b 00 00 00       	mov    edx,0x3b
    219a:	48 8d 35 ec 1e 00 00 	lea    rsi,[rip+0x1eec]        # 408d <_IO_stdin_used+0x8d>
    21a1:	48 8d 3d 00 1f 00 00 	lea    rdi,[rip+0x1f00]        # 40a8 <_IO_stdin_used+0xa8>
    21a8:	e8 c3 ee ff ff       	call   1070 <__assert_fail@plt>
    21ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000021b0 <_Z13searchElementP4List8string_t>:
    21b0:	f3 0f 1e fa          	endbr64
    21b4:	48 83 ec 18          	sub    rsp,0x18
    21b8:	48 85 ff             	test   rdi,rdi
    21bb:	74 4d                	je     220a <_Z13searchElementP4List8string_t+0x5a>
    21bd:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
    21c0:	8b 06                	mov    eax,DWORD PTR [rsi]
    21c2:	85 c0                	test   eax,eax
    21c4:	74 40                	je     2206 <_Z13searchElementP4List8string_t+0x56>
    21c6:	c5 fd 6f 5c 24 20    	vmovdqa ymm3,YMMWORD PTR [rsp+0x20]
    21cc:	eb 08                	jmp    21d6 <_Z13searchElementP4List8string_t+0x26>
    21ce:	66 90                	xchg   ax,ax
    21d0:	8b 02                	mov    eax,DWORD PTR [rdx]
    21d2:	85 c0                	test   eax,eax
    21d4:	74 28                	je     21fe <_Z13searchElementP4List8string_t+0x4e>
    21d6:	89 c2                	mov    edx,eax
    21d8:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    21dc:	48 c1 e2 05          	shl    rdx,0x5
    21e0:	48 01 f2             	add    rdx,rsi
    21e3:	c5 fd 6f 62 20       	vmovdqa ymm4,YMMWORD PTR [rdx+0x20]
    21e8:	c5 fd 6f c3          	vmovdqa ymm0,ymm3
    21ec:	c5 fd 6f cc          	vmovdqa ymm1,ymm4
    21f0:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    21f4:	c5 fd d7 ca          	vpmovmskb ecx,ymm2
    21f8:	f7 d1                	not    ecx
    21fa:	85 c9                	test   ecx,ecx
    21fc:	75 d2                	jne    21d0 <_Z13searchElementP4List8string_t+0x20>
    21fe:	c5 f8 77             	vzeroupper
    2201:	48 83 c4 18          	add    rsp,0x18
    2205:	c3                   	ret
    2206:	31 c0                	xor    eax,eax
    2208:	eb f7                	jmp    2201 <_Z13searchElementP4List8string_t+0x51>
    220a:	e8 91 fc ff ff       	call   1ea0 <_Z13searchElementP4List8string_t.part.0>
    220f:	90                   	nop

0000000000002210 <_Z8listDtorP4List>:
    2210:	f3 0f 1e fa          	endbr64
    2214:	53                   	push   rbx
    2215:	48 85 ff             	test   rdi,rdi
    2218:	74 15                	je     222f <_Z8listDtorP4List+0x1f>
    221a:	48 89 fb             	mov    rbx,rdi
    221d:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    2220:	e8 db ee ff ff       	call   1100 <free@plt>
    2225:	48 c7 43 08 00 00 00 	mov    QWORD PTR [rbx+0x8],0x0
    222c:	00 
    222d:	5b                   	pop    rbx
    222e:	c3                   	ret
    222f:	48 8d 0d 77 1e 00 00 	lea    rcx,[rip+0x1e77]        # 40ad <_IO_stdin_used+0xad>
    2236:	ba ae 00 00 00       	mov    edx,0xae
    223b:	48 8d 35 4b 1e 00 00 	lea    rsi,[rip+0x1e4b]        # 408d <_IO_stdin_used+0x8d>
    2242:	48 8d 3d 5f 1e 00 00 	lea    rdi,[rip+0x1e5f]        # 40a8 <_IO_stdin_used+0xa8>
    2249:	e8 22 ee ff ff       	call   1070 <__assert_fail@plt>
    224e:	66 90                	xchg   ax,ax

0000000000002250 <_Z8readFilePKcPm>:
    2250:	f3 0f 1e fa          	endbr64
    2254:	55                   	push   rbp
    2255:	48 89 e5             	mov    rbp,rsp
    2258:	41 55                	push   r13
    225a:	41 54                	push   r12
    225c:	53                   	push   rbx
    225d:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
    2264:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    226b:	00 00 
    226d:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    2274:	00 
    2275:	31 c0                	xor    eax,eax
    2277:	48 85 ff             	test   rdi,rdi
    227a:	0f 84 b4 00 00 00    	je     2334 <_Z8readFilePKcPm+0xe4>
    2280:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    2284:	49 89 f4             	mov    r12,rsi
    2287:	48 89 e6             	mov    rsi,rsp
    228a:	48 89 fb             	mov    rbx,rdi
    228d:	c5 fe 7f 04 24       	vmovdqu YMMWORD PTR [rsp],ymm0
    2292:	c5 fe 7f 44 24 20    	vmovdqu YMMWORD PTR [rsp+0x20],ymm0
    2298:	c5 fe 7f 44 24 40    	vmovdqu YMMWORD PTR [rsp+0x40],ymm0
    229e:	c5 fe 7f 44 24 60    	vmovdqu YMMWORD PTR [rsp+0x60],ymm0
    22a4:	c5 f9 7f 84 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm0
    22ab:	00 00 
    22ad:	c5 f8 77             	vzeroupper
    22b0:	e8 fb ed ff ff       	call   10b0 <stat@plt>
    22b5:	83 f8 ff             	cmp    eax,0xffffffff
    22b8:	74 76                	je     2330 <_Z8readFilePKcPm+0xe0>
    22ba:	4c 8b 6c 24 30       	mov    r13,QWORD PTR [rsp+0x30]
    22bf:	31 f6                	xor    esi,esi
    22c1:	48 89 df             	mov    rdi,rbx
    22c4:	31 c0                	xor    eax,eax
    22c6:	4d 89 2c 24          	mov    QWORD PTR [r12],r13
    22ca:	e8 c1 ed ff ff       	call   1090 <open@plt>
    22cf:	41 89 c4             	mov    r12d,eax
    22d2:	83 f8 ff             	cmp    eax,0xffffffff
    22d5:	74 59                	je     2330 <_Z8readFilePKcPm+0xe0>
    22d7:	be 01 00 00 00       	mov    esi,0x1
    22dc:	4c 89 ef             	mov    rdi,r13
    22df:	e8 9c ed ff ff       	call   1080 <calloc@plt>
    22e4:	48 89 c3             	mov    rbx,rax
    22e7:	48 85 c0             	test   rax,rax
    22ea:	74 16                	je     2302 <_Z8readFilePKcPm+0xb2>
    22ec:	44 89 e7             	mov    edi,r12d
    22ef:	4c 89 ea             	mov    rdx,r13
    22f2:	48 89 c6             	mov    rsi,rax
    22f5:	e8 46 ee ff ff       	call   1140 <read@plt>
    22fa:	44 89 e7             	mov    edi,r12d
    22fd:	e8 9e ee ff ff       	call   11a0 <close@plt>
    2302:	48 8b 84 24 98 00 00 	mov    rax,QWORD PTR [rsp+0x98]
    2309:	00 
    230a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2311:	00 00 
    2313:	75 3e                	jne    2353 <_Z8readFilePKcPm+0x103>
    2315:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
    231c:	48 89 d8             	mov    rax,rbx
    231f:	5b                   	pop    rbx
    2320:	41 5c                	pop    r12
    2322:	41 5d                	pop    r13
    2324:	5d                   	pop    rbp
    2325:	c3                   	ret
    2326:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    232d:	00 00 00 
    2330:	31 db                	xor    ebx,ebx
    2332:	eb ce                	jmp    2302 <_Z8readFilePKcPm+0xb2>
    2334:	48 8d 0d 95 20 00 00 	lea    rcx,[rip+0x2095]        # 43d0 <_IO_stdin_used+0x3d0>
    233b:	ba 0c 00 00 00       	mov    edx,0xc
    2340:	48 8d 35 7b 1d 00 00 	lea    rsi,[rip+0x1d7b]        # 40c2 <_IO_stdin_used+0xc2>
    2347:	48 8d 3d 90 1d 00 00 	lea    rdi,[rip+0x1d90]        # 40de <_IO_stdin_used+0xde>
    234e:	e8 1d ed ff ff       	call   1070 <__assert_fail@plt>
    2353:	e8 88 ed ff ff       	call   10e0 <__stack_chk_fail@plt>
    2358:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    235f:	00 

0000000000002360 <_Z10countLinesPcm>:
    2360:	f3 0f 1e fa          	endbr64
    2364:	41 54                	push   r12
    2366:	55                   	push   rbp
    2367:	53                   	push   rbx
    2368:	48 85 ff             	test   rdi,rdi
    236b:	74 36                	je     23a3 <_Z10countLinesPcm+0x43>
    236d:	48 89 fd             	mov    rbp,rdi
    2370:	49 89 f4             	mov    r12,rsi
    2373:	31 db                	xor    ebx,ebx
    2375:	48 85 f6             	test   rsi,rsi
    2378:	74 22                	je     239c <_Z10countLinesPcm+0x3c>
    237a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2380:	be 0a 00 00 00       	mov    esi,0xa
    2385:	83 c3 01             	add    ebx,0x1
    2388:	e8 c3 ec ff ff       	call   1050 <strchr@plt>
    238d:	48 8d 78 01          	lea    rdi,[rax+0x1]
    2391:	48 89 f8             	mov    rax,rdi
    2394:	48 29 e8             	sub    rax,rbp
    2397:	4c 39 e0             	cmp    rax,r12
    239a:	75 e4                	jne    2380 <_Z10countLinesPcm+0x20>
    239c:	89 d8                	mov    eax,ebx
    239e:	5b                   	pop    rbx
    239f:	5d                   	pop    rbp
    23a0:	41 5c                	pop    r12
    23a2:	c3                   	ret
    23a3:	48 8d 0d 4e 20 00 00 	lea    rcx,[rip+0x204e]        # 43f8 <_IO_stdin_used+0x3f8>
    23aa:	ba 22 00 00 00       	mov    edx,0x22
    23af:	48 8d 35 0c 1d 00 00 	lea    rsi,[rip+0x1d0c]        # 40c2 <_IO_stdin_used+0xc2>
    23b6:	48 8d 3d 60 1c 00 00 	lea    rdi,[rip+0x1c60]        # 401d <_IO_stdin_used+0x1d>
    23bd:	e8 ae ec ff ff       	call   1070 <__assert_fail@plt>
    23c2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    23c9:	00 00 00 
    23cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000023d0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj>:
    23d0:	f3 0f 1e fa          	endbr64
    23d4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    23d9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    23dd:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    23e1:	55                   	push   rbp
    23e2:	48 89 e5             	mov    rbp,rsp
    23e5:	41 57                	push   r15
    23e7:	41 56                	push   r14
    23e9:	41 55                	push   r13
    23eb:	41 54                	push   r12
    23ed:	41 52                	push   r10
    23ef:	53                   	push   rbx
    23f0:	48 83 ec 40          	sub    rsp,0x40
    23f4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    23fb:	00 00 
    23fd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    2401:	31 c0                	xor    eax,eax
    2403:	48 85 ff             	test   rdi,rdi
    2406:	0f 84 03 04 00 00    	je     280f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x43f>
    240c:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    2410:	49 89 fd             	mov    r13,rdi
    2413:	48 89 d3             	mov    rbx,rdx
    2416:	49 89 ce             	mov    r14,rcx
    2419:	44 89 c2             	mov    edx,r8d
    241c:	4c 89 e7             	mov    rdi,r12
    241f:	e8 9c f0 ff ff       	call   14c0 <_Z11hashMapCtorPFj8string_tEj>
    2424:	45 85 f6             	test   r14d,r14d
    2427:	74 3f                	je     2468 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x98>
    2429:	45 89 f6             	mov    r14d,r14d
    242c:	49 c1 e6 06          	shl    r14,0x6
    2430:	49 01 de             	add    r14,rbx
    2433:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2438:	c5 fd 6f 23          	vmovdqa ymm4,YMMWORD PTR [rbx]
    243c:	48 83 ec 40          	sub    rsp,0x40
    2440:	4c 89 e7             	mov    rdi,r12
    2443:	c5 fd 7f 24 24       	vmovdqa YMMWORD PTR [rsp],ymm4
    2448:	c5 fd 6f 6b 20       	vmovdqa ymm5,YMMWORD PTR [rbx+0x20]
    244d:	c5 fd 7f 6c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm5
    2453:	c5 f8 77             	vzeroupper
    2456:	e8 15 f1 ff ff       	call   1570 <_Z17hashMapAddElementP7HashMap8string_t>
    245b:	48 83 c3 40          	add    rbx,0x40
    245f:	48 83 c4 40          	add    rsp,0x40
    2463:	49 39 de             	cmp    r14,rbx
    2466:	75 d0                	jne    2438 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x68>
    2468:	4c 89 e9             	mov    rcx,r13
    246b:	ba 19 00 00 00       	mov    edx,0x19
    2470:	be 01 00 00 00       	mov    esi,0x1
    2475:	48 8d 3d 8c 1c 00 00 	lea    rdi,[rip+0x1c8c]        # 4108 <_IO_stdin_used+0x108>
    247c:	e8 0f ed ff ff       	call   1190 <fwrite@plt>
    2481:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    2484:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2488:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    248c:	85 c0                	test   eax,eax
    248e:	74 69                	je     24f9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x129>
    2490:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2494:	31 db                	xor    ebx,ebx
    2496:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    249a:	4c 8d 3d 81 1c 00 00 	lea    r15,[rip+0x1c81]        # 4122 <_IO_stdin_used+0x122>
    24a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    24a8:	4c 8d 34 5b          	lea    r14,[rbx+rbx*2]
    24ac:	89 d9                	mov    ecx,ebx
    24ae:	4c 89 fa             	mov    rdx,r15
    24b1:	be 02 00 00 00       	mov    esi,0x2
    24b6:	49 c1 e6 03          	shl    r14,0x3
    24ba:	4c 89 ef             	mov    rdi,r13
    24bd:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    24c2:	48 83 c3 01          	add    rbx,0x1
    24c6:	46 8b 44 30 10       	mov    r8d,DWORD PTR [rax+r14*1+0x10]
    24cb:	31 c0                	xor    eax,eax
    24cd:	e8 9e ec ff ff       	call   1170 <__fprintf_chk@plt>
    24d2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    24d6:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    24da:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    24df:	42 8b 54 30 10       	mov    edx,DWORD PTR [rax+r14*1+0x10]
    24e4:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    24e9:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    24ec:	c5 ea 58 d0          	vaddss xmm2,xmm2,xmm0
    24f0:	39 d3                	cmp    ebx,edx
    24f2:	72 b4                	jb     24a8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xd8>
    24f4:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    24f9:	c5 ea 5e d0          	vdivss xmm2,xmm2,xmm0
    24fd:	bf 02 00 00 00       	mov    edi,0x2
    2502:	b8 01 00 00 00       	mov    eax,0x1
    2507:	48 8d 35 1b 1c 00 00 	lea    rsi,[rip+0x1c1b]        # 4129 <_IO_stdin_used+0x129>
    250e:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    2513:	c5 ea 5a c2          	vcvtss2sd xmm0,xmm2,xmm2
    2517:	e8 14 eb ff ff       	call   1030 <__printf_chk@plt>
    251c:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    251f:	85 f6                	test   esi,esi
    2521:	0f 84 b9 02 00 00    	je     27e0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x410>
    2527:	8d 46 ff             	lea    eax,[rsi-0x1]
    252a:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    252e:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    2533:	83 f8 06             	cmp    eax,0x6
    2536:	0f 86 b9 02 00 00    	jbe    27f5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x425>
    253c:	48 8d 47 10          	lea    rax,[rdi+0x10]
    2540:	c4 e2 7d 18 ea       	vbroadcastss ymm5,xmm2
    2545:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2549:	89 f2                	mov    edx,esi
    254b:	c4 e2 7d 18 25 b4 1a 	vbroadcastss ymm4,DWORD PTR [rip+0x1ab4]        # 4008 <_IO_stdin_used+0x8>
    2552:	00 00 
    2554:	c1 ea 03             	shr    edx,0x3
    2557:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    255e:	ff ff ff 
    2561:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    2565:	ba ff ff 00 00       	mov    edx,0xffff
    256a:	49 c1 e0 06          	shl    r8,0x6
    256e:	c5 f9 6e da          	vmovd  xmm3,edx
    2572:	49 01 c0             	add    r8,rax
    2575:	c4 e2 7d 58 db       	vpbroadcastd ymm3,xmm3
    257a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2580:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    2583:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    2586:	c5 c9 ef f6          	vpxor  xmm6,xmm6,xmm6
    258a:	48 05 c0 00 00 00    	add    rax,0xc0
    2590:	c5 fd 7f 75 90       	vmovdqa YMMWORD PTR [rbp-0x70],ymm6
    2595:	48 c1 e2 20          	shl    rdx,0x20
    2599:	49 09 d1             	or     r9,rdx
    259c:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    25a0:	4c 89 4d 90          	mov    QWORD PTR [rbp-0x70],r9
    25a4:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    25ab:	48 21 ca             	and    rdx,rcx
    25ae:	4c 09 ca             	or     rdx,r9
    25b1:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    25b5:	89 d2                	mov    edx,edx
    25b7:	49 c1 e1 20          	shl    r9,0x20
    25bb:	4c 09 ca             	or     rdx,r9
    25be:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    25c2:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    25c6:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    25ca:	48 21 ca             	and    rdx,rcx
    25cd:	4c 09 ca             	or     rdx,r9
    25d0:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    25d4:	89 d2                	mov    edx,edx
    25d6:	49 c1 e1 20          	shl    r9,0x20
    25da:	4c 09 ca             	or     rdx,r9
    25dd:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    25e1:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
    25e5:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    25e9:	48 21 ca             	and    rdx,rcx
    25ec:	4c 09 ca             	or     rdx,r9
    25ef:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    25f3:	89 d2                	mov    edx,edx
    25f5:	49 c1 e1 20          	shl    r9,0x20
    25f9:	4c 09 ca             	or     rdx,r9
    25fc:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    2600:	c5 fd 6f 75 90       	vmovdqa ymm6,YMMWORD PTR [rbp-0x70]
    2605:	c5 e5 db 45 90       	vpand  ymm0,ymm3,YMMWORD PTR [rbp-0x70]
    260a:	c5 f5 72 d6 10       	vpsrld ymm1,ymm6,0x10
    260f:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    2613:	c5 f4 59 cc          	vmulps ymm1,ymm1,ymm4
    2617:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    261b:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    261f:	c5 fc 5c c5          	vsubps ymm0,ymm0,ymm5
    2623:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    2627:	c5 c2 58 c8          	vaddss xmm1,xmm7,xmm0
    262b:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    2630:	c5 f8 c6 f0 ff       	vshufps xmm6,xmm0,xmm0,0xff
    2635:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    2639:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    263d:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    2643:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    2647:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    264b:	c5 f8 c6 f0 55       	vshufps xmm6,xmm0,xmm0,0x55
    2650:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    2654:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2658:	c5 f8 15 f0          	vunpckhps xmm6,xmm0,xmm0
    265c:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    2661:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2665:	c5 f2 58 f8          	vaddss xmm7,xmm1,xmm0
    2669:	49 39 c0             	cmp    r8,rax
    266c:	0f 85 0e ff ff ff    	jne    2580 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1b0>
    2672:	89 f0                	mov    eax,esi
    2674:	83 e0 f8             	and    eax,0xfffffff8
    2677:	40 f6 c6 07          	test   sil,0x7
    267b:	0f 84 6f 01 00 00    	je     27f0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x420>
    2681:	c5 f8 77             	vzeroupper
    2684:	89 f1                	mov    ecx,esi
    2686:	29 c1                	sub    ecx,eax
    2688:	8d 51 ff             	lea    edx,[rcx-0x1]
    268b:	83 fa 02             	cmp    edx,0x2
    268e:	0f 86 8b 00 00 00    	jbe    271f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x34f>
    2694:	c4 e2 79 18 1d 6b 19 	vbroadcastss xmm3,DWORD PTR [rip+0x196b]        # 4008 <_IO_stdin_used+0x8>
    269b:	00 00 
    269d:	89 c2                	mov    edx,eax
    269f:	bb ff ff 00 00       	mov    ebx,0xffff
    26a4:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    26a8:	c5 f9 6e cb          	vmovd  xmm1,ebx
    26ac:	c5 f9 6e 44 d7 10    	vmovd  xmm0,DWORD PTR [rdi+rdx*8+0x10]
    26b2:	c4 e3 79 22 44 d7 28 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x28],0x1
    26b9:	01 
    26ba:	c5 f9 70 c9 00       	vpshufd xmm1,xmm1,0x0
    26bf:	c4 e3 79 22 44 d7 40 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x40],0x2
    26c6:	02 
    26c7:	c4 e3 79 22 44 d7 58 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x58],0x3
    26ce:	03 
    26cf:	89 ca                	mov    edx,ecx
    26d1:	83 e2 fc             	and    edx,0xfffffffc
    26d4:	c5 f9 db c9          	vpand  xmm1,xmm0,xmm1
    26d8:	c5 f9 72 d0 10       	vpsrld xmm0,xmm0,0x10
    26dd:	01 d0                	add    eax,edx
    26df:	83 e1 03             	and    ecx,0x3
    26e2:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    26e6:	c5 f8 59 c3          	vmulps xmm0,xmm0,xmm3
    26ea:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    26ee:	c5 f0 58 c8          	vaddps xmm1,xmm1,xmm0
    26f2:	c5 e8 c6 c2 00       	vshufps xmm0,xmm2,xmm2,0x0
    26f7:	c5 f0 5c c8          	vsubps xmm1,xmm1,xmm0
    26fb:	c5 f0 59 c9          	vmulps xmm1,xmm1,xmm1
    26ff:	c5 c2 58 c1          	vaddss xmm0,xmm7,xmm1
    2703:	c5 f0 c6 d9 55       	vshufps xmm3,xmm1,xmm1,0x55
    2708:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    270c:	c5 f0 15 d9          	vunpckhps xmm3,xmm1,xmm1
    2710:	c5 f0 c6 c9 ff       	vshufps xmm1,xmm1,xmm1,0xff
    2715:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    2719:	c5 fa 58 f9          	vaddss xmm7,xmm0,xmm1
    271d:	74 5f                	je     277e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ae>
    271f:	89 c2                	mov    edx,eax
    2721:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    2725:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2729:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    272d:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    2732:	8d 50 01             	lea    edx,[rax+0x1]
    2735:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2739:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    273d:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2741:	39 f2                	cmp    edx,esi
    2743:	73 39                	jae    277e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ae>
    2745:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2749:	83 c0 02             	add    eax,0x2
    274c:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    2750:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    2755:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2759:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    275d:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2761:	39 f0                	cmp    eax,esi
    2763:	73 19                	jae    277e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ae>
    2765:	48 8d 04 40          	lea    rax,[rax+rax*2]
    2769:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    276d:	c4 e1 da 2a c0       	vcvtsi2ss xmm0,xmm4,rax
    2772:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2776:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    277a:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    277e:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    2782:	c4 e1 d2 2a c6       	vcvtsi2ss xmm0,xmm5,rsi
    2787:	c5 c2 5e f8          	vdivss xmm7,xmm7,xmm0
    278b:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    278f:	c5 f8 2e c7          	vucomiss xmm0,xmm7
    2793:	77 6b                	ja     2800 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x430>
    2795:	c5 c2 51 ff          	vsqrtss xmm7,xmm7,xmm7
    2799:	bf 02 00 00 00       	mov    edi,0x2
    279e:	48 8d 35 9e 19 00 00 	lea    rsi,[rip+0x199e]        # 4143 <_IO_stdin_used+0x143>
    27a5:	b8 01 00 00 00       	mov    eax,0x1
    27aa:	c5 c2 5a c7          	vcvtss2sd xmm0,xmm7,xmm7
    27ae:	e8 7d e8 ff ff       	call   1030 <__printf_chk@plt>
    27b3:	4c 89 e7             	mov    rdi,r12
    27b6:	e8 65 f0 ff ff       	call   1820 <_Z11hashMapDtorP7HashMap>
    27bb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    27bf:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    27c6:	00 00 
    27c8:	75 64                	jne    282e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x45e>
    27ca:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    27ce:	5b                   	pop    rbx
    27cf:	41 5a                	pop    r10
    27d1:	41 5c                	pop    r12
    27d3:	41 5d                	pop    r13
    27d5:	41 5e                	pop    r14
    27d7:	41 5f                	pop    r15
    27d9:	5d                   	pop    rbp
    27da:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    27de:	c3                   	ret
    27df:	90                   	nop
    27e0:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    27e4:	c5 c2 5e ff          	vdivss xmm7,xmm7,xmm7
    27e8:	eb ab                	jmp    2795 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3c5>
    27ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    27f0:	c5 f8 77             	vzeroupper
    27f3:	eb 89                	jmp    277e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ae>
    27f5:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    27f9:	31 c0                	xor    eax,eax
    27fb:	e9 84 fe ff ff       	jmp    2684 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2b4>
    2800:	c5 f8 28 c7          	vmovaps xmm0,xmm7
    2804:	e8 77 e9 ff ff       	call   1180 <sqrtf@plt>
    2809:	c5 f8 28 f8          	vmovaps xmm7,xmm0
    280d:	eb 8a                	jmp    2799 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3c9>
    280f:	48 8d 0d 0a 1c 00 00 	lea    rcx,[rip+0x1c0a]        # 4420 <_IO_stdin_used+0x420>
    2816:	ba 48 00 00 00       	mov    edx,0x48
    281b:	48 8d 35 c5 18 00 00 	lea    rsi,[rip+0x18c5]        # 40e7 <_IO_stdin_used+0xe7>
    2822:	48 8d 3d da 18 00 00 	lea    rdi,[rip+0x18da]        # 4103 <_IO_stdin_used+0x103>
    2829:	e8 42 e8 ff ff       	call   1070 <__assert_fail@plt>
    282e:	e8 ad e8 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2833:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    283a:	00 00 00 00 
    283e:	66 90                	xchg   ax,ax

0000000000002840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>:
    2840:	f3 0f 1e fa          	endbr64
    2844:	41 55                	push   r13
    2846:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    284b:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    284f:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    2853:	55                   	push   rbp
    2854:	48 89 e5             	mov    rbp,rsp
    2857:	41 57                	push   r15
    2859:	41 56                	push   r14
    285b:	41 55                	push   r13
    285d:	49 89 d5             	mov    r13,rdx
    2860:	41 54                	push   r12
    2862:	53                   	push   rbx
    2863:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    286a:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    286e:	44 89 85 5c ff ff ff 	mov    DWORD PTR [rbp-0xa4],r8d
    2875:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
    287c:	00 00 
    287e:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2882:	31 d2                	xor    edx,edx
    2884:	48 85 ff             	test   rdi,rdi
    2887:	0f 84 2e 04 00 00    	je     2cbb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x47b>
    288d:	bf 0a 00 00 00       	mov    edi,0xa
    2892:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    2896:	48 89 cb             	mov    rbx,rcx
    2899:	45 89 cf             	mov    r15d,r9d
    289c:	41 89 ce             	mov    r14d,ecx
    289f:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    28a3:	e8 18 e8 ff ff       	call   10c0 <srand@plt>
    28a8:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    28ac:	44 89 fa             	mov    edx,r15d
    28af:	4c 89 e7             	mov    rdi,r12
    28b2:	e8 09 ec ff ff       	call   14c0 <_Z11hashMapCtorPFj8string_tEj>
    28b7:	85 db                	test   ebx,ebx
    28b9:	74 3e                	je     28f9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xb9>
    28bb:	89 db                	mov    ebx,ebx
    28bd:	4d 89 ef             	mov    r15,r13
    28c0:	48 c1 e3 06          	shl    rbx,0x6
    28c4:	4c 01 eb             	add    rbx,r13
    28c7:	c4 c1 7d 6f 2f       	vmovdqa ymm5,YMMWORD PTR [r15]
    28cc:	48 83 ec 40          	sub    rsp,0x40
    28d0:	4c 89 e7             	mov    rdi,r12
    28d3:	c5 fd 7f 2c 24       	vmovdqa YMMWORD PTR [rsp],ymm5
    28d8:	c4 c1 7d 6f 67 20    	vmovdqa ymm4,YMMWORD PTR [r15+0x20]
    28de:	c5 fd 7f 64 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm4
    28e4:	c5 f8 77             	vzeroupper
    28e7:	e8 84 ec ff ff       	call   1570 <_Z17hashMapAddElementP7HashMap8string_t>
    28ec:	49 83 c7 40          	add    r15,0x40
    28f0:	48 83 c4 40          	add    rsp,0x40
    28f4:	49 39 df             	cmp    r15,rbx
    28f7:	75 ce                	jne    28c7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x87>
    28f9:	be 04 00 00 00       	mov    esi,0x4
    28fe:	bf 40 42 0f 00       	mov    edi,0xf4240
    2903:	e8 78 e7 ff ff       	call   1080 <calloc@plt>
    2908:	be 08 00 00 00       	mov    esi,0x8
    290d:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    2914:	49 89 c7             	mov    r15,rax
    2917:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    291d:	4c 89 fb             	mov    rbx,r15
    2920:	48 89 c7             	mov    rdi,rax
    2923:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    2927:	48 81 c3 00 09 3d 00 	add    rbx,0x3d0900
    292e:	e8 4d e7 ff ff       	call   1080 <calloc@plt>
    2933:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    2937:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    293e:	00 00 
    2940:	e8 fb e6 ff ff       	call   1040 <rand@plt>
    2945:	31 d2                	xor    edx,edx
    2947:	49 83 c7 04          	add    r15,0x4
    294b:	41 f7 f6             	div    r14d
    294e:	41 89 57 fc          	mov    DWORD PTR [r15-0x4],edx
    2952:	49 39 df             	cmp    r15,rbx
    2955:	75 e9                	jne    2940 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x100>
    2957:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    295d:	85 c0                	test   eax,eax
    295f:	0f 84 ee 02 00 00    	je     2c53 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x413>
    2965:	4c 8b 75 a8          	mov    r14,QWORD PTR [rbp-0x58]
    2969:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    296d:	49 8d 04 c6          	lea    rax,[r14+rax*8]
    2971:	4c 89 b5 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],r14
    2978:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    297c:	e8 8f e7 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2981:	4c 8b bd 68 ff ff ff 	mov    r15,QWORD PTR [rbp-0x98]
    2988:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    298f:	90                   	nop
    2990:	41 8b 07             	mov    eax,DWORD PTR [r15]
    2993:	48 83 ec 40          	sub    rsp,0x40
    2997:	4c 89 e7             	mov    rdi,r12
    299a:	48 c1 e0 06          	shl    rax,0x6
    299e:	4c 01 e8             	add    rax,r13
    29a1:	c5 fd 6f 30          	vmovdqa ymm6,YMMWORD PTR [rax]
    29a5:	c5 fd 7f 34 24       	vmovdqa YMMWORD PTR [rsp],ymm6
    29aa:	c5 fd 6f 78 20       	vmovdqa ymm7,YMMWORD PTR [rax+0x20]
    29af:	c5 fd 7f 7c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm7
    29b5:	c5 f8 77             	vzeroupper
    29b8:	e8 63 ed ff ff       	call   1720 <_Z20hashMapSearchElementP7HashMap8string_t>
    29bd:	49 83 c7 04          	add    r15,0x4
    29c1:	48 83 c4 40          	add    rsp,0x40
    29c5:	4c 39 fb             	cmp    rbx,r15
    29c8:	75 c6                	jne    2990 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x150>
    29ca:	e8 41 e7 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    29cf:	48 8b 8d 70 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x90]
    29d6:	c5 d1 57 ed          	vxorpd xmm5,xmm5,xmm5
    29da:	49 83 c6 08          	add    r14,0x8
    29de:	48 29 c8             	sub    rax,rcx
    29e1:	48 89 c1             	mov    rcx,rax
    29e4:	48 b8 cf f7 53 e3 a5 	movabs rax,0x20c49ba5e353f7cf
    29eb:	9b c4 20 
    29ee:	48 f7 e9             	imul   rcx
    29f1:	48 c1 f9 3f          	sar    rcx,0x3f
    29f5:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    29f9:	48 c1 fa 07          	sar    rdx,0x7
    29fd:	48 29 ca             	sub    rdx,rcx
    2a00:	c4 e1 d3 2a c2       	vcvtsi2sd xmm0,xmm5,rdx
    2a05:	c4 c1 7b 11 46 f8    	vmovsd QWORD PTR [r14-0x8],xmm0
    2a0b:	49 39 c6             	cmp    r14,rax
    2a0e:	0f 85 68 ff ff ff    	jne    297c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x13c>
    2a14:	4c 89 e7             	mov    rdi,r12
    2a17:	48 8d 1d 5e 17 00 00 	lea    rbx,[rip+0x175e]        # 417c <_IO_stdin_used+0x17c>
    2a1e:	45 31 e4             	xor    r12d,r12d
    2a21:	e8 fa ed ff ff       	call   1820 <_Z11hashMapDtorP7HashMap>
    2a26:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    2a2a:	ba 13 00 00 00       	mov    edx,0x13
    2a2f:	be 01 00 00 00       	mov    esi,0x1
    2a34:	48 8d 3d 22 17 00 00 	lea    rdi,[rip+0x1722]        # 415d <_IO_stdin_used+0x15d>
    2a3b:	e8 50 e7 ff ff       	call   1190 <fwrite@plt>
    2a40:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2a44:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2a48:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    2a4c:	44 89 e1             	mov    ecx,r12d
    2a4f:	48 89 da             	mov    rdx,rbx
    2a52:	be 02 00 00 00       	mov    esi,0x2
    2a57:	c5 fb 11 55 a0       	vmovsd QWORD PTR [rbp-0x60],xmm2
    2a5c:	c4 a1 7b 10 04 e0    	vmovsd xmm0,QWORD PTR [rax+r12*8]
    2a62:	b8 01 00 00 00       	mov    eax,0x1
    2a67:	49 83 c4 01          	add    r12,0x1
    2a6b:	c5 fb 11 85 70 ff ff 	vmovsd QWORD PTR [rbp-0x90],xmm0
    2a72:	ff 
    2a73:	e8 f8 e6 ff ff       	call   1170 <__fprintf_chk@plt>
    2a78:	c5 fb 10 85 70 ff ff 	vmovsd xmm0,QWORD PTR [rbp-0x90]
    2a7f:	ff 
    2a80:	c5 fb 10 55 a0       	vmovsd xmm2,QWORD PTR [rbp-0x60]
    2a85:	c5 eb 58 d0          	vaddsd xmm2,xmm2,xmm0
    2a89:	4c 39 65 90          	cmp    QWORD PTR [rbp-0x70],r12
    2a8d:	75 b5                	jne    2a44 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x204>
    2a8f:	8b b5 5c ff ff ff    	mov    esi,DWORD PTR [rbp-0xa4]
    2a95:	c5 d9 57 e4          	vxorpd xmm4,xmm4,xmm4
    2a99:	c5 db 2a c6          	vcvtsi2sd xmm0,xmm4,esi
    2a9d:	89 f0                	mov    eax,esi
    2a9f:	83 e8 01             	sub    eax,0x1
    2aa2:	c5 eb 5e d0          	vdivsd xmm2,xmm2,xmm0
    2aa6:	83 f8 02             	cmp    eax,0x2
    2aa9:	0f 86 e2 01 00 00    	jbe    2c91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x451>
    2aaf:	89 f0                	mov    eax,esi
    2ab1:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    2ab5:	c4 e2 7d 19 ea       	vbroadcastsd ymm5,xmm2
    2aba:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2abe:	c1 e8 02             	shr    eax,0x2
    2ac1:	48 c1 e0 05          	shl    rax,0x5
    2ac5:	48 01 c8             	add    rax,rcx
    2ac8:	48 8b b5 60 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xa0]
    2acf:	c5 fd 10 26          	vmovupd ymm4,YMMWORD PTR [rsi]
    2ad3:	48 83 c6 20          	add    rsi,0x20
    2ad7:	48 89 b5 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rsi
    2ade:	c5 dd 5c cd          	vsubpd ymm1,ymm4,ymm5
    2ae2:	c5 fd 29 a5 70 ff ff 	vmovapd YMMWORD PTR [rbp-0x90],ymm4
    2ae9:	ff 
    2aea:	c5 f5 59 c9          	vmulpd ymm1,ymm1,ymm1
    2aee:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    2af2:	c5 f1 15 d9          	vunpckhpd xmm3,xmm1,xmm1
    2af6:	c4 e3 7d 19 c9 01    	vextractf128 xmm1,ymm1,0x1
    2afc:	c5 e3 58 d8          	vaddsd xmm3,xmm3,xmm0
    2b00:	c5 f3 58 c3          	vaddsd xmm0,xmm1,xmm3
    2b04:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2b08:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2b0c:	48 39 f0             	cmp    rax,rsi
    2b0f:	75 b7                	jne    2ac8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x288>
    2b11:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    2b17:	a8 03                	test   al,0x3
    2b19:	0f 84 2c 01 00 00    	je     2c4b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x40b>
    2b1f:	83 e0 fc             	and    eax,0xfffffffc
    2b22:	c5 f8 77             	vzeroupper
    2b25:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [rbp-0xa4]
    2b2b:	29 c2                	sub    edx,eax
    2b2d:	83 fa 01             	cmp    edx,0x1
    2b30:	74 2d                	je     2b5f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x31f>
    2b32:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    2b36:	89 c1                	mov    ecx,eax
    2b38:	c5 fb 12 da          	vmovddup xmm3,xmm2
    2b3c:	c5 f9 10 0c ce       	vmovupd xmm1,XMMWORD PTR [rsi+rcx*8]
    2b41:	c5 f1 5c cb          	vsubpd xmm1,xmm1,xmm3
    2b45:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    2b49:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2b4d:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2b51:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    2b55:	f6 c2 01             	test   dl,0x1
    2b58:	74 1a                	je     2b74 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x334>
    2b5a:	83 e2 fe             	and    edx,0xfffffffe
    2b5d:	01 d0                	add    eax,edx
    2b5f:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    2b63:	c5 fb 10 0c c6       	vmovsd xmm1,QWORD PTR [rsi+rax*8]
    2b68:	c5 f3 5c ca          	vsubsd xmm1,xmm1,xmm2
    2b6c:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    2b70:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2b74:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    2b78:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    2b7c:	c5 da 2a 8d 5c ff ff 	vcvtsi2ss xmm1,xmm4,DWORD PTR [rbp-0xa4]
    2b83:	ff 
    2b84:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    2b88:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    2b8c:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    2b90:	0f 87 49 01 00 00    	ja     2cdf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x49f>
    2b96:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    2b9a:	c5 fa 5a e0          	vcvtss2sd xmm4,xmm0,xmm0
    2b9e:	48 8d 35 e0 15 00 00 	lea    rsi,[rip+0x15e0]        # 4185 <_IO_stdin_used+0x185>
    2ba5:	c4 e1 f9 7e e3       	vmovq  rbx,xmm4
    2baa:	c5 eb 10 c2          	vmovsd xmm0,xmm2,xmm2
    2bae:	bf 02 00 00 00       	mov    edi,0x2
    2bb3:	b8 01 00 00 00       	mov    eax,0x1
    2bb8:	c5 fb 11 95 70 ff ff 	vmovsd QWORD PTR [rbp-0x90],xmm2
    2bbf:	ff 
    2bc0:	e8 6b e4 ff ff       	call   1030 <__printf_chk@plt>
    2bc5:	c4 e1 f9 6e c3       	vmovq  xmm0,rbx
    2bca:	bf 02 00 00 00       	mov    edi,0x2
    2bcf:	48 8d 35 cd 15 00 00 	lea    rsi,[rip+0x15cd]        # 41a3 <_IO_stdin_used+0x1a3>
    2bd6:	b8 01 00 00 00       	mov    eax,0x1
    2bdb:	e8 50 e4 ff ff       	call   1030 <__printf_chk@plt>
    2be0:	c4 e1 f9 6e e3       	vmovq  xmm4,rbx
    2be5:	c5 fb 10 95 70 ff ff 	vmovsd xmm2,QWORD PTR [rbp-0x90]
    2bec:	ff 
    2bed:	bf 02 00 00 00       	mov    edi,0x2
    2bf2:	48 8d 35 c8 15 00 00 	lea    rsi,[rip+0x15c8]        # 41c1 <_IO_stdin_used+0x1c1>
    2bf9:	b8 01 00 00 00       	mov    eax,0x1
    2bfe:	c5 db 5e c2          	vdivsd xmm0,xmm4,xmm2
    2c02:	c5 fb 59 05 9e 1a 00 	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1a9e]        # 46a8 <_IO_stdin_used+0x6a8>
    2c09:	00 
    2c0a:	e8 21 e4 ff ff       	call   1030 <__printf_chk@plt>
    2c0f:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    2c13:	e8 e8 e4 ff ff       	call   1100 <free@plt>
    2c18:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2c1c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2c23:	00 00 
    2c25:	0f 85 af 00 00 00    	jne    2cda <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x49a>
    2c2b:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    2c32:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    2c36:	5b                   	pop    rbx
    2c37:	41 5c                	pop    r12
    2c39:	41 5d                	pop    r13
    2c3b:	41 5e                	pop    r14
    2c3d:	41 5f                	pop    r15
    2c3f:	5d                   	pop    rbp
    2c40:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    2c44:	41 5d                	pop    r13
    2c46:	e9 b5 e4 ff ff       	jmp    1100 <free@plt>
    2c4b:	c5 f8 77             	vzeroupper
    2c4e:	e9 21 ff ff ff       	jmp    2b74 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x334>
    2c53:	4c 89 e7             	mov    rdi,r12
    2c56:	e8 c5 eb ff ff       	call   1820 <_Z11hashMapDtorP7HashMap>
    2c5b:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    2c5f:	ba 13 00 00 00       	mov    edx,0x13
    2c64:	be 01 00 00 00       	mov    esi,0x1
    2c69:	48 8d 3d ed 14 00 00 	lea    rdi,[rip+0x14ed]        # 415d <_IO_stdin_used+0x15d>
    2c70:	e8 1b e5 ff ff       	call   1190 <fwrite@plt>
    2c75:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2c79:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    2c7e:	c5 eb 5e d2          	vdivsd xmm2,xmm2,xmm2
    2c82:	74 18                	je     2c9c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x45c>
    2c84:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2c88:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    2c8c:	e9 05 ff ff ff       	jmp    2b96 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x356>
    2c91:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2c95:	31 c0                	xor    eax,eax
    2c97:	e9 89 fe ff ff       	jmp    2b25 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2e5>
    2c9c:	48 8d 0d fd 17 00 00 	lea    rcx,[rip+0x17fd]        # 44a0 <_IO_stdin_used+0x4a0>
    2ca3:	ba ad 00 00 00       	mov    edx,0xad
    2ca8:	48 8d 35 38 14 00 00 	lea    rsi,[rip+0x1438]        # 40e7 <_IO_stdin_used+0xe7>
    2caf:	48 8d 3d bb 14 00 00 	lea    rdi,[rip+0x14bb]        # 4171 <_IO_stdin_used+0x171>
    2cb6:	e8 b5 e3 ff ff       	call   1070 <__assert_fail@plt>
    2cbb:	48 8d 0d 96 17 00 00 	lea    rcx,[rip+0x1796]        # 4458 <_IO_stdin_used+0x458>
    2cc2:	ba 62 00 00 00       	mov    edx,0x62
    2cc7:	48 8d 35 19 14 00 00 	lea    rsi,[rip+0x1419]        # 40e7 <_IO_stdin_used+0xe7>
    2cce:	48 8d 3d 2e 14 00 00 	lea    rdi,[rip+0x142e]        # 4103 <_IO_stdin_used+0x103>
    2cd5:	e8 96 e3 ff ff       	call   1070 <__assert_fail@plt>
    2cda:	e8 01 e4 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2cdf:	c5 fb 11 95 70 ff ff 	vmovsd QWORD PTR [rbp-0x90],xmm2
    2ce6:	ff 
    2ce7:	e8 94 e4 ff ff       	call   1180 <sqrtf@plt>
    2cec:	c5 fb 10 95 70 ff ff 	vmovsd xmm2,QWORD PTR [rbp-0x90]
    2cf3:	ff 
    2cf4:	e9 a1 fe ff ff       	jmp    2b9a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x35a>
    2cf9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002d00 <_Z4testPFj8string_tE9Filenames8TestDatajj>:
    2d00:	f3 0f 1e fa          	endbr64
    2d04:	41 57                	push   r15
    2d06:	48 8d 35 cf 14 00 00 	lea    rsi,[rip+0x14cf]        # 41dc <_IO_stdin_used+0x1dc>
    2d0d:	41 56                	push   r14
    2d0f:	45 89 ce             	mov    r14d,r9d
    2d12:	41 55                	push   r13
    2d14:	49 89 cd             	mov    r13,rcx
    2d17:	41 54                	push   r12
    2d19:	4d 89 c4             	mov    r12,r8
    2d1c:	55                   	push   rbp
    2d1d:	48 89 fd             	mov    rbp,rdi
    2d20:	48 89 d7             	mov    rdi,rdx
    2d23:	53                   	push   rbx
    2d24:	48 83 ec 08          	sub    rsp,0x8
    2d28:	44 8b 7c 24 40       	mov    r15d,DWORD PTR [rsp+0x40]
    2d2d:	e8 be e3 ff ff       	call   10f0 <fopen@plt>
    2d32:	45 89 f0             	mov    r8d,r14d
    2d35:	4c 89 ea             	mov    rdx,r13
    2d38:	4c 89 e1             	mov    rcx,r12
    2d3b:	45 89 f9             	mov    r9d,r15d
    2d3e:	48 89 ee             	mov    rsi,rbp
    2d41:	48 89 c7             	mov    rdi,rax
    2d44:	48 89 c3             	mov    rbx,rax
    2d47:	e8 f4 fa ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    2d4c:	48 83 c4 08          	add    rsp,0x8
    2d50:	48 89 df             	mov    rdi,rbx
    2d53:	5b                   	pop    rbx
    2d54:	5d                   	pop    rbp
    2d55:	41 5c                	pop    r12
    2d57:	41 5d                	pop    r13
    2d59:	41 5e                	pop    r14
    2d5b:	41 5f                	pop    r15
    2d5d:	e9 6e e3 ff ff       	jmp    10d0 <fclose@plt>
    2d62:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2d69:	00 00 00 00 
    2d6d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002d70 <_Z7testAllPKcjS0_j>:
    2d70:	f3 0f 1e fa          	endbr64
    2d74:	41 57                	push   r15
    2d76:	41 56                	push   r14
    2d78:	41 55                	push   r13
    2d7a:	41 54                	push   r12
    2d7c:	55                   	push   rbp
    2d7d:	53                   	push   rbx
    2d7e:	48 83 ec 38          	sub    rsp,0x38
    2d82:	89 4c 24 0c          	mov    DWORD PTR [rsp+0xc],ecx
    2d86:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2d8d:	00 00 
    2d8f:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    2d94:	31 c0                	xor    eax,eax
    2d96:	48 85 ff             	test   rdi,rdi
    2d99:	0f 84 80 07 00 00    	je     351f <_Z7testAllPKcjS0_j+0x7af>
    2d9f:	48 89 d3             	mov    rbx,rdx
    2da2:	48 85 d2             	test   rdx,rdx
    2da5:	0f 84 55 07 00 00    	je     3500 <_Z7testAllPKcjS0_j+0x790>
    2dab:	48 8d 3d 5a 12 00 00 	lea    rdi,[rip+0x125a]        # 400c <_IO_stdin_used+0xc>
    2db2:	41 89 f6             	mov    r14d,esi
    2db5:	48 8d 74 24 20       	lea    rsi,[rsp+0x20]
    2dba:	48 c7 44 24 20 00 00 	mov    QWORD PTR [rsp+0x20],0x0
    2dc1:	00 00 
    2dc3:	e8 88 f4 ff ff       	call   2250 <_Z8readFilePKcPm>
    2dc8:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    2dcd:	48 89 c7             	mov    rdi,rax
    2dd0:	49 89 c7             	mov    r15,rax
    2dd3:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    2dd8:	e8 83 f5 ff ff       	call   2360 <_Z10countLinesPcm>
    2ddd:	4c 89 ff             	mov    rdi,r15
    2de0:	41 89 c4             	mov    r12d,eax
    2de3:	44 89 e6             	mov    esi,r12d
    2de6:	e8 15 e5 ff ff       	call   1300 <_Z16buildStringArrayPcj>
    2deb:	48 8d 35 fa 13 00 00 	lea    rsi,[rip+0x13fa]        # 41ec <_IO_stdin_used+0x1ec>
    2df2:	48 89 df             	mov    rdi,rbx
    2df5:	48 89 c5             	mov    rbp,rax
    2df8:	e8 33 e3 ff ff       	call   1130 <strcmp@plt>
    2dfd:	85 c0                	test   eax,eax
    2dff:	0f 84 db 00 00 00    	je     2ee0 <_Z7testAllPKcjS0_j+0x170>
    2e05:	48 8d 35 dc 13 00 00 	lea    rsi,[rip+0x13dc]        # 41e8 <_IO_stdin_used+0x1e8>
    2e0c:	48 89 df             	mov    rdi,rbx
    2e0f:	e8 1c e3 ff ff       	call   1130 <strcmp@plt>
    2e14:	85 c0                	test   eax,eax
    2e16:	0f 84 6c 06 00 00    	je     3488 <_Z7testAllPKcjS0_j+0x718>
    2e1c:	48 8d 35 cf 13 00 00 	lea    rsi,[rip+0x13cf]        # 41f2 <_IO_stdin_used+0x1f2>
    2e23:	48 89 df             	mov    rdi,rbx
    2e26:	e8 05 e3 ff ff       	call   1130 <strcmp@plt>
    2e2b:	85 c0                	test   eax,eax
    2e2d:	0f 84 dd 05 00 00    	je     3410 <_Z7testAllPKcjS0_j+0x6a0>
    2e33:	48 8d 35 c8 13 00 00 	lea    rsi,[rip+0x13c8]        # 4202 <_IO_stdin_used+0x202>
    2e3a:	48 89 df             	mov    rdi,rbx
    2e3d:	e8 ee e2 ff ff       	call   1130 <strcmp@plt>
    2e42:	85 c0                	test   eax,eax
    2e44:	0f 84 4e 05 00 00    	je     3398 <_Z7testAllPKcjS0_j+0x628>
    2e4a:	48 8d 35 d2 13 00 00 	lea    rsi,[rip+0x13d2]        # 4223 <_IO_stdin_used+0x223>
    2e51:	48 89 df             	mov    rdi,rbx
    2e54:	e8 d7 e2 ff ff       	call   1130 <strcmp@plt>
    2e59:	85 c0                	test   eax,eax
    2e5b:	0f 84 bf 04 00 00    	je     3320 <_Z7testAllPKcjS0_j+0x5b0>
    2e61:	48 8d 35 c3 13 00 00 	lea    rsi,[rip+0x13c3]        # 422b <_IO_stdin_used+0x22b>
    2e68:	48 89 df             	mov    rdi,rbx
    2e6b:	e8 c0 e2 ff ff       	call   1130 <strcmp@plt>
    2e70:	85 c0                	test   eax,eax
    2e72:	0f 84 30 04 00 00    	je     32a8 <_Z7testAllPKcjS0_j+0x538>
    2e78:	4c 8d 2d cd 13 00 00 	lea    r13,[rip+0x13cd]        # 424c <_IO_stdin_used+0x24c>
    2e7f:	48 89 df             	mov    rdi,rbx
    2e82:	4c 89 ee             	mov    rsi,r13
    2e85:	e8 a6 e2 ff ff       	call   1130 <strcmp@plt>
    2e8a:	85 c0                	test   eax,eax
    2e8c:	0f 84 9e 03 00 00    	je     3230 <_Z7testAllPKcjS0_j+0x4c0>
    2e92:	48 8d 35 c3 13 00 00 	lea    rsi,[rip+0x13c3]        # 425c <_IO_stdin_used+0x25c>
    2e99:	48 89 df             	mov    rdi,rbx
    2e9c:	e8 8f e2 ff ff       	call   1130 <strcmp@plt>
    2ea1:	85 c0                	test   eax,eax
    2ea3:	0f 84 af 00 00 00    	je     2f58 <_Z7testAllPKcjS0_j+0x1e8>
    2ea9:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    2eae:	e8 4d e2 ff ff       	call   1100 <free@plt>
    2eb3:	48 89 ef             	mov    rdi,rbp
    2eb6:	e8 45 e2 ff ff       	call   1100 <free@plt>
    2ebb:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    2ec0:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2ec7:	00 00 
    2ec9:	0f 85 2c 06 00 00    	jne    34fb <_Z7testAllPKcjS0_j+0x78b>
    2ecf:	48 83 c4 38          	add    rsp,0x38
    2ed3:	5b                   	pop    rbx
    2ed4:	5d                   	pop    rbp
    2ed5:	41 5c                	pop    r12
    2ed7:	41 5d                	pop    r13
    2ed9:	41 5e                	pop    r14
    2edb:	41 5f                	pop    r15
    2edd:	c3                   	ret
    2ede:	66 90                	xchg   ax,ax
    2ee0:	48 8d 3d 31 16 00 00 	lea    rdi,[rip+0x1631]        # 4518 <_IO_stdin_used+0x518>
    2ee7:	45 89 e5             	mov    r13d,r12d
    2eea:	e8 61 e2 ff ff       	call   1150 <puts@plt>
    2eef:	48 8d 3d f6 12 00 00 	lea    rdi,[rip+0x12f6]        # 41ec <_IO_stdin_used+0x1ec>
    2ef6:	e8 55 e2 ff ff       	call   1150 <puts@plt>
    2efb:	48 8d 3d 36 16 00 00 	lea    rdi,[rip+0x1636]        # 4538 <_IO_stdin_used+0x538>
    2f02:	e8 49 e2 ff ff       	call   1150 <puts@plt>
    2f07:	48 8d 35 ce 12 00 00 	lea    rsi,[rip+0x12ce]        # 41dc <_IO_stdin_used+0x1dc>
    2f0e:	48 8d 3d 43 16 00 00 	lea    rdi,[rip+0x1643]        # 4558 <_IO_stdin_used+0x558>
    2f15:	e8 d6 e1 ff ff       	call   10f0 <fopen@plt>
    2f1a:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    2f1f:	45 89 f0             	mov    r8d,r14d
    2f22:	48 89 ea             	mov    rdx,rbp
    2f25:	48 8d 35 b4 eb ff ff 	lea    rsi,[rip+0xffffffffffffebb4]        # 1ae0 <_Z15crc32HashString8string_t>
    2f2c:	49 89 c7             	mov    r15,rax
    2f2f:	4c 89 e9             	mov    rcx,r13
    2f32:	48 89 c7             	mov    rdi,rax
    2f35:	e8 06 f9 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    2f3a:	4c 89 ff             	mov    rdi,r15
    2f3d:	e8 8e e1 ff ff       	call   10d0 <fclose@plt>
    2f42:	48 8d 3d 37 16 00 00 	lea    rdi,[rip+0x1637]        # 4580 <_IO_stdin_used+0x580>
    2f49:	e8 02 e2 ff ff       	call   1150 <puts@plt>
    2f4e:	e9 b2 fe ff ff       	jmp    2e05 <_Z7testAllPKcjS0_j+0x95>
    2f53:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2f58:	4c 8d 3d b9 15 00 00 	lea    r15,[rip+0x15b9]        # 4518 <_IO_stdin_used+0x518>
    2f5f:	4c 89 ff             	mov    rdi,r15
    2f62:	e8 e9 e1 ff ff       	call   1150 <puts@plt>
    2f67:	48 8d 3d 7e 12 00 00 	lea    rdi,[rip+0x127e]        # 41ec <_IO_stdin_used+0x1ec>
    2f6e:	e8 dd e1 ff ff       	call   1150 <puts@plt>
    2f73:	48 8d 3d be 15 00 00 	lea    rdi,[rip+0x15be]        # 4538 <_IO_stdin_used+0x538>
    2f7a:	e8 d1 e1 ff ff       	call   1150 <puts@plt>
    2f7f:	44 89 e0             	mov    eax,r12d
    2f82:	48 8d 35 53 12 00 00 	lea    rsi,[rip+0x1253]        # 41dc <_IO_stdin_used+0x1dc>
    2f89:	48 8d 3d c8 15 00 00 	lea    rdi,[rip+0x15c8]        # 4558 <_IO_stdin_used+0x558>
    2f90:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    2f95:	e8 56 e1 ff ff       	call   10f0 <fopen@plt>
    2f9a:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    2f9f:	45 89 f0             	mov    r8d,r14d
    2fa2:	48 89 ea             	mov    rdx,rbp
    2fa5:	48 8d 35 34 eb ff ff 	lea    rsi,[rip+0xffffffffffffeb34]        # 1ae0 <_Z15crc32HashString8string_t>
    2fac:	4c 89 e1             	mov    rcx,r12
    2faf:	48 89 c3             	mov    rbx,rax
    2fb2:	48 89 c7             	mov    rdi,rax
    2fb5:	e8 86 f8 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    2fba:	48 89 df             	mov    rdi,rbx
    2fbd:	48 8d 1d bc 15 00 00 	lea    rbx,[rip+0x15bc]        # 4580 <_IO_stdin_used+0x580>
    2fc4:	e8 07 e1 ff ff       	call   10d0 <fclose@plt>
    2fc9:	48 89 df             	mov    rdi,rbx
    2fcc:	e8 7f e1 ff ff       	call   1150 <puts@plt>
    2fd1:	4c 89 ff             	mov    rdi,r15
    2fd4:	e8 77 e1 ff ff       	call   1150 <puts@plt>
    2fd9:	48 8d 3d 08 12 00 00 	lea    rdi,[rip+0x1208]        # 41e8 <_IO_stdin_used+0x1e8>
    2fe0:	e8 6b e1 ff ff       	call   1150 <puts@plt>
    2fe5:	48 8d 3d 4c 15 00 00 	lea    rdi,[rip+0x154c]        # 4538 <_IO_stdin_used+0x538>
    2fec:	e8 5f e1 ff ff       	call   1150 <puts@plt>
    2ff1:	4c 8b 64 24 18       	mov    r12,QWORD PTR [rsp+0x18]
    2ff6:	48 8d 35 df 11 00 00 	lea    rsi,[rip+0x11df]        # 41dc <_IO_stdin_used+0x1dc>
    2ffd:	48 8d 3d 9c 15 00 00 	lea    rdi,[rip+0x159c]        # 45a0 <_IO_stdin_used+0x5a0>
    3004:	e8 e7 e0 ff ff       	call   10f0 <fopen@plt>
    3009:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    300e:	45 89 f0             	mov    r8d,r14d
    3011:	48 89 ea             	mov    rdx,rbp
    3014:	48 8d 35 d5 ea ff ff 	lea    rsi,[rip+0xffffffffffffead5]        # 1af0 <_Z19_mm_crc32HashString8string_t>
    301b:	4c 89 e1             	mov    rcx,r12
    301e:	48 89 c7             	mov    rdi,rax
    3021:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    3026:	e8 15 f8 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    302b:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    3030:	e8 9b e0 ff ff       	call   10d0 <fclose@plt>
    3035:	48 89 df             	mov    rdi,rbx
    3038:	e8 13 e1 ff ff       	call   1150 <puts@plt>
    303d:	4c 89 ff             	mov    rdi,r15
    3040:	e8 0b e1 ff ff       	call   1150 <puts@plt>
    3045:	4c 89 ef             	mov    rdi,r13
    3048:	e8 03 e1 ff ff       	call   1150 <puts@plt>
    304d:	48 8d 3d e4 14 00 00 	lea    rdi,[rip+0x14e4]        # 4538 <_IO_stdin_used+0x538>
    3054:	e8 f7 e0 ff ff       	call   1150 <puts@plt>
    3059:	48 8d 35 7c 11 00 00 	lea    rsi,[rip+0x117c]        # 41dc <_IO_stdin_used+0x1dc>
    3060:	48 8d 3d b9 15 00 00 	lea    rdi,[rip+0x15b9]        # 4620 <_IO_stdin_used+0x620>
    3067:	e8 84 e0 ff ff       	call   10f0 <fopen@plt>
    306c:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    3071:	45 89 f0             	mov    r8d,r14d
    3074:	48 89 ea             	mov    rdx,rbp
    3077:	48 8d 35 82 ea ff ff 	lea    rsi,[rip+0xffffffffffffea82]        # 1b00 <_Z25_mm_crc32UnrollHashString8string_t>
    307e:	4c 89 e1             	mov    rcx,r12
    3081:	49 89 c5             	mov    r13,rax
    3084:	48 89 c7             	mov    rdi,rax
    3087:	e8 b4 f7 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    308c:	4c 89 ef             	mov    rdi,r13
    308f:	e8 3c e0 ff ff       	call   10d0 <fclose@plt>
    3094:	48 89 df             	mov    rdi,rbx
    3097:	e8 b4 e0 ff ff       	call   1150 <puts@plt>
    309c:	4c 89 ff             	mov    rdi,r15
    309f:	e8 ac e0 ff ff       	call   1150 <puts@plt>
    30a4:	48 8d 3d 4f 11 00 00 	lea    rdi,[rip+0x114f]        # 41fa <_IO_stdin_used+0x1fa>
    30ab:	e8 a0 e0 ff ff       	call   1150 <puts@plt>
    30b0:	48 8d 3d 81 14 00 00 	lea    rdi,[rip+0x1481]        # 4538 <_IO_stdin_used+0x538>
    30b7:	e8 94 e0 ff ff       	call   1150 <puts@plt>
    30bc:	48 8d 35 19 11 00 00 	lea    rsi,[rip+0x1119]        # 41dc <_IO_stdin_used+0x1dc>
    30c3:	48 8d 3d 06 15 00 00 	lea    rdi,[rip+0x1506]        # 45d0 <_IO_stdin_used+0x5d0>
    30ca:	e8 21 e0 ff ff       	call   10f0 <fopen@plt>
    30cf:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    30d4:	45 89 f0             	mov    r8d,r14d
    30d7:	48 89 ea             	mov    rdx,rbp
    30da:	48 8d 35 7f ea ff ff 	lea    rsi,[rip+0xffffffffffffea7f]        # 1b60 <_Z17murmur2HashString8string_t>
    30e1:	4c 89 e1             	mov    rcx,r12
    30e4:	49 89 c5             	mov    r13,rax
    30e7:	48 89 c7             	mov    rdi,rax
    30ea:	e8 51 f7 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    30ef:	4c 89 ef             	mov    rdi,r13
    30f2:	e8 d9 df ff ff       	call   10d0 <fclose@plt>
    30f7:	48 89 df             	mov    rdi,rbx
    30fa:	e8 51 e0 ff ff       	call   1150 <puts@plt>
    30ff:	4c 89 ff             	mov    rdi,r15
    3102:	e8 49 e0 ff ff       	call   1150 <puts@plt>
    3107:	48 8d 3d f4 10 00 00 	lea    rdi,[rip+0x10f4]        # 4202 <_IO_stdin_used+0x202>
    310e:	e8 3d e0 ff ff       	call   1150 <puts@plt>
    3113:	48 8d 3d 1e 14 00 00 	lea    rdi,[rip+0x141e]        # 4538 <_IO_stdin_used+0x538>
    311a:	e8 31 e0 ff ff       	call   1150 <puts@plt>
    311f:	48 8d 35 b6 10 00 00 	lea    rsi,[rip+0x10b6]        # 41dc <_IO_stdin_used+0x1dc>
    3126:	48 8d 3d d9 10 00 00 	lea    rdi,[rip+0x10d9]        # 4206 <_IO_stdin_used+0x206>
    312d:	e8 be df ff ff       	call   10f0 <fopen@plt>
    3132:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    3137:	45 89 f0             	mov    r8d,r14d
    313a:	48 89 ea             	mov    rdx,rbp
    313d:	48 8d 35 2c ea ff ff 	lea    rsi,[rip+0xffffffffffffea2c]        # 1b70 <_Z13sumHashString8string_t>
    3144:	4c 89 e1             	mov    rcx,r12
    3147:	49 89 c5             	mov    r13,rax
    314a:	48 89 c7             	mov    rdi,rax
    314d:	e8 ee f6 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    3152:	4c 89 ef             	mov    rdi,r13
    3155:	e8 76 df ff ff       	call   10d0 <fclose@plt>
    315a:	48 89 df             	mov    rdi,rbx
    315d:	e8 ee df ff ff       	call   1150 <puts@plt>
    3162:	4c 89 ff             	mov    rdi,r15
    3165:	e8 e6 df ff ff       	call   1150 <puts@plt>
    316a:	48 8d 3d b2 10 00 00 	lea    rdi,[rip+0x10b2]        # 4223 <_IO_stdin_used+0x223>
    3171:	e8 da df ff ff       	call   1150 <puts@plt>
    3176:	48 8d 3d bb 13 00 00 	lea    rdi,[rip+0x13bb]        # 4538 <_IO_stdin_used+0x538>
    317d:	e8 ce df ff ff       	call   1150 <puts@plt>
    3182:	48 8d 35 53 10 00 00 	lea    rsi,[rip+0x1053]        # 41dc <_IO_stdin_used+0x1dc>
    3189:	48 8d 3d 68 14 00 00 	lea    rdi,[rip+0x1468]        # 45f8 <_IO_stdin_used+0x5f8>
    3190:	e8 5b df ff ff       	call   10f0 <fopen@plt>
    3195:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    319a:	45 89 f0             	mov    r8d,r14d
    319d:	48 89 ea             	mov    rdx,rbp
    31a0:	48 8d 35 d9 e9 ff ff 	lea    rsi,[rip+0xffffffffffffe9d9]        # 1b80 <_Z17adler32HashString8string_t>
    31a7:	4c 89 e1             	mov    rcx,r12
    31aa:	49 89 c5             	mov    r13,rax
    31ad:	48 89 c7             	mov    rdi,rax
    31b0:	e8 8b f6 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    31b5:	4c 89 ef             	mov    rdi,r13
    31b8:	e8 13 df ff ff       	call   10d0 <fclose@plt>
    31bd:	48 89 df             	mov    rdi,rbx
    31c0:	e8 8b df ff ff       	call   1150 <puts@plt>
    31c5:	4c 89 ff             	mov    rdi,r15
    31c8:	e8 83 df ff ff       	call   1150 <puts@plt>
    31cd:	48 8d 3d 57 10 00 00 	lea    rdi,[rip+0x1057]        # 422b <_IO_stdin_used+0x22b>
    31d4:	e8 77 df ff ff       	call   1150 <puts@plt>
    31d9:	48 8d 3d 58 13 00 00 	lea    rdi,[rip+0x1358]        # 4538 <_IO_stdin_used+0x538>
    31e0:	e8 6b df ff ff       	call   1150 <puts@plt>
    31e5:	48 8d 35 f0 0f 00 00 	lea    rsi,[rip+0xff0]        # 41dc <_IO_stdin_used+0x1dc>
    31ec:	48 8d 3d 3c 10 00 00 	lea    rdi,[rip+0x103c]        # 422f <_IO_stdin_used+0x22f>
    31f3:	e8 f8 de ff ff       	call   10f0 <fopen@plt>
    31f8:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    31fd:	45 89 f0             	mov    r8d,r14d
    3200:	48 89 ea             	mov    rdx,rbp
    3203:	48 8d 35 86 eb ff ff 	lea    rsi,[rip+0xffffffffffffeb86]        # 1d90 <_Z13elfHashString8string_t>
    320a:	49 89 c5             	mov    r13,rax
    320d:	4c 89 e1             	mov    rcx,r12
    3210:	48 89 c7             	mov    rdi,rax
    3213:	e8 28 f6 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    3218:	4c 89 ef             	mov    rdi,r13
    321b:	e8 b0 de ff ff       	call   10d0 <fclose@plt>
    3220:	48 89 df             	mov    rdi,rbx
    3223:	e8 28 df ff ff       	call   1150 <puts@plt>
    3228:	e9 7c fc ff ff       	jmp    2ea9 <_Z7testAllPKcjS0_j+0x139>
    322d:	0f 1f 00             	nop    DWORD PTR [rax]
    3230:	48 8d 3d e1 12 00 00 	lea    rdi,[rip+0x12e1]        # 4518 <_IO_stdin_used+0x518>
    3237:	45 89 e7             	mov    r15d,r12d
    323a:	e8 11 df ff ff       	call   1150 <puts@plt>
    323f:	4c 89 ef             	mov    rdi,r13
    3242:	e8 09 df ff ff       	call   1150 <puts@plt>
    3247:	48 8d 3d ea 12 00 00 	lea    rdi,[rip+0x12ea]        # 4538 <_IO_stdin_used+0x538>
    324e:	e8 fd de ff ff       	call   1150 <puts@plt>
    3253:	48 8d 35 82 0f 00 00 	lea    rsi,[rip+0xf82]        # 41dc <_IO_stdin_used+0x1dc>
    325a:	48 8d 3d bf 13 00 00 	lea    rdi,[rip+0x13bf]        # 4620 <_IO_stdin_used+0x620>
    3261:	e8 8a de ff ff       	call   10f0 <fopen@plt>
    3266:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    326b:	45 89 f0             	mov    r8d,r14d
    326e:	48 89 ea             	mov    rdx,rbp
    3271:	48 8d 35 88 e8 ff ff 	lea    rsi,[rip+0xffffffffffffe888]        # 1b00 <_Z25_mm_crc32UnrollHashString8string_t>
    3278:	48 89 c7             	mov    rdi,rax
    327b:	4c 89 f9             	mov    rcx,r15
    327e:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    3283:	e8 b8 f5 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    3288:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    328d:	e8 3e de ff ff       	call   10d0 <fclose@plt>
    3292:	48 8d 3d e7 12 00 00 	lea    rdi,[rip+0x12e7]        # 4580 <_IO_stdin_used+0x580>
    3299:	e8 b2 de ff ff       	call   1150 <puts@plt>
    329e:	e9 ef fb ff ff       	jmp    2e92 <_Z7testAllPKcjS0_j+0x122>
    32a3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    32a8:	48 8d 3d 69 12 00 00 	lea    rdi,[rip+0x1269]        # 4518 <_IO_stdin_used+0x518>
    32af:	45 89 e5             	mov    r13d,r12d
    32b2:	e8 99 de ff ff       	call   1150 <puts@plt>
    32b7:	48 8d 3d 6d 0f 00 00 	lea    rdi,[rip+0xf6d]        # 422b <_IO_stdin_used+0x22b>
    32be:	e8 8d de ff ff       	call   1150 <puts@plt>
    32c3:	48 8d 3d 6e 12 00 00 	lea    rdi,[rip+0x126e]        # 4538 <_IO_stdin_used+0x538>
    32ca:	e8 81 de ff ff       	call   1150 <puts@plt>
    32cf:	48 8d 35 06 0f 00 00 	lea    rsi,[rip+0xf06]        # 41dc <_IO_stdin_used+0x1dc>
    32d6:	48 8d 3d 52 0f 00 00 	lea    rdi,[rip+0xf52]        # 422f <_IO_stdin_used+0x22f>
    32dd:	e8 0e de ff ff       	call   10f0 <fopen@plt>
    32e2:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    32e7:	45 89 f0             	mov    r8d,r14d
    32ea:	48 89 ea             	mov    rdx,rbp
    32ed:	48 8d 35 9c ea ff ff 	lea    rsi,[rip+0xffffffffffffea9c]        # 1d90 <_Z13elfHashString8string_t>
    32f4:	49 89 c7             	mov    r15,rax
    32f7:	4c 89 e9             	mov    rcx,r13
    32fa:	48 89 c7             	mov    rdi,rax
    32fd:	e8 3e f5 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    3302:	4c 89 ff             	mov    rdi,r15
    3305:	e8 c6 dd ff ff       	call   10d0 <fclose@plt>
    330a:	48 8d 3d 6f 12 00 00 	lea    rdi,[rip+0x126f]        # 4580 <_IO_stdin_used+0x580>
    3311:	e8 3a de ff ff       	call   1150 <puts@plt>
    3316:	e9 5d fb ff ff       	jmp    2e78 <_Z7testAllPKcjS0_j+0x108>
    331b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3320:	48 8d 3d f1 11 00 00 	lea    rdi,[rip+0x11f1]        # 4518 <_IO_stdin_used+0x518>
    3327:	45 89 e5             	mov    r13d,r12d
    332a:	e8 21 de ff ff       	call   1150 <puts@plt>
    332f:	48 8d 3d ed 0e 00 00 	lea    rdi,[rip+0xeed]        # 4223 <_IO_stdin_used+0x223>
    3336:	e8 15 de ff ff       	call   1150 <puts@plt>
    333b:	48 8d 3d f6 11 00 00 	lea    rdi,[rip+0x11f6]        # 4538 <_IO_stdin_used+0x538>
    3342:	e8 09 de ff ff       	call   1150 <puts@plt>
    3347:	48 8d 35 8e 0e 00 00 	lea    rsi,[rip+0xe8e]        # 41dc <_IO_stdin_used+0x1dc>
    334e:	48 8d 3d a3 12 00 00 	lea    rdi,[rip+0x12a3]        # 45f8 <_IO_stdin_used+0x5f8>
    3355:	e8 96 dd ff ff       	call   10f0 <fopen@plt>
    335a:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    335f:	45 89 f0             	mov    r8d,r14d
    3362:	48 89 ea             	mov    rdx,rbp
    3365:	48 8d 35 14 e8 ff ff 	lea    rsi,[rip+0xffffffffffffe814]        # 1b80 <_Z17adler32HashString8string_t>
    336c:	49 89 c7             	mov    r15,rax
    336f:	4c 89 e9             	mov    rcx,r13
    3372:	48 89 c7             	mov    rdi,rax
    3375:	e8 c6 f4 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    337a:	4c 89 ff             	mov    rdi,r15
    337d:	e8 4e dd ff ff       	call   10d0 <fclose@plt>
    3382:	48 8d 3d f7 11 00 00 	lea    rdi,[rip+0x11f7]        # 4580 <_IO_stdin_used+0x580>
    3389:	e8 c2 dd ff ff       	call   1150 <puts@plt>
    338e:	e9 ce fa ff ff       	jmp    2e61 <_Z7testAllPKcjS0_j+0xf1>
    3393:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3398:	48 8d 3d 79 11 00 00 	lea    rdi,[rip+0x1179]        # 4518 <_IO_stdin_used+0x518>
    339f:	45 89 e5             	mov    r13d,r12d
    33a2:	e8 a9 dd ff ff       	call   1150 <puts@plt>
    33a7:	48 8d 3d 54 0e 00 00 	lea    rdi,[rip+0xe54]        # 4202 <_IO_stdin_used+0x202>
    33ae:	e8 9d dd ff ff       	call   1150 <puts@plt>
    33b3:	48 8d 3d 7e 11 00 00 	lea    rdi,[rip+0x117e]        # 4538 <_IO_stdin_used+0x538>
    33ba:	e8 91 dd ff ff       	call   1150 <puts@plt>
    33bf:	48 8d 35 16 0e 00 00 	lea    rsi,[rip+0xe16]        # 41dc <_IO_stdin_used+0x1dc>
    33c6:	48 8d 3d 39 0e 00 00 	lea    rdi,[rip+0xe39]        # 4206 <_IO_stdin_used+0x206>
    33cd:	e8 1e dd ff ff       	call   10f0 <fopen@plt>
    33d2:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    33d7:	45 89 f0             	mov    r8d,r14d
    33da:	48 89 ea             	mov    rdx,rbp
    33dd:	48 8d 35 8c e7 ff ff 	lea    rsi,[rip+0xffffffffffffe78c]        # 1b70 <_Z13sumHashString8string_t>
    33e4:	49 89 c7             	mov    r15,rax
    33e7:	4c 89 e9             	mov    rcx,r13
    33ea:	48 89 c7             	mov    rdi,rax
    33ed:	e8 4e f4 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    33f2:	4c 89 ff             	mov    rdi,r15
    33f5:	e8 d6 dc ff ff       	call   10d0 <fclose@plt>
    33fa:	48 8d 3d 7f 11 00 00 	lea    rdi,[rip+0x117f]        # 4580 <_IO_stdin_used+0x580>
    3401:	e8 4a dd ff ff       	call   1150 <puts@plt>
    3406:	e9 3f fa ff ff       	jmp    2e4a <_Z7testAllPKcjS0_j+0xda>
    340b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3410:	48 8d 3d 01 11 00 00 	lea    rdi,[rip+0x1101]        # 4518 <_IO_stdin_used+0x518>
    3417:	45 89 e5             	mov    r13d,r12d
    341a:	e8 31 dd ff ff       	call   1150 <puts@plt>
    341f:	48 8d 3d d4 0d 00 00 	lea    rdi,[rip+0xdd4]        # 41fa <_IO_stdin_used+0x1fa>
    3426:	e8 25 dd ff ff       	call   1150 <puts@plt>
    342b:	48 8d 3d 06 11 00 00 	lea    rdi,[rip+0x1106]        # 4538 <_IO_stdin_used+0x538>
    3432:	e8 19 dd ff ff       	call   1150 <puts@plt>
    3437:	48 8d 35 9e 0d 00 00 	lea    rsi,[rip+0xd9e]        # 41dc <_IO_stdin_used+0x1dc>
    343e:	48 8d 3d 8b 11 00 00 	lea    rdi,[rip+0x118b]        # 45d0 <_IO_stdin_used+0x5d0>
    3445:	e8 a6 dc ff ff       	call   10f0 <fopen@plt>
    344a:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    344f:	45 89 f0             	mov    r8d,r14d
    3452:	48 89 ea             	mov    rdx,rbp
    3455:	48 8d 35 04 e7 ff ff 	lea    rsi,[rip+0xffffffffffffe704]        # 1b60 <_Z17murmur2HashString8string_t>
    345c:	49 89 c7             	mov    r15,rax
    345f:	4c 89 e9             	mov    rcx,r13
    3462:	48 89 c7             	mov    rdi,rax
    3465:	e8 d6 f3 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    346a:	4c 89 ff             	mov    rdi,r15
    346d:	e8 5e dc ff ff       	call   10d0 <fclose@plt>
    3472:	48 8d 3d 07 11 00 00 	lea    rdi,[rip+0x1107]        # 4580 <_IO_stdin_used+0x580>
    3479:	e8 d2 dc ff ff       	call   1150 <puts@plt>
    347e:	e9 b0 f9 ff ff       	jmp    2e33 <_Z7testAllPKcjS0_j+0xc3>
    3483:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3488:	48 8d 3d 89 10 00 00 	lea    rdi,[rip+0x1089]        # 4518 <_IO_stdin_used+0x518>
    348f:	45 89 e5             	mov    r13d,r12d
    3492:	e8 b9 dc ff ff       	call   1150 <puts@plt>
    3497:	48 8d 3d 4a 0d 00 00 	lea    rdi,[rip+0xd4a]        # 41e8 <_IO_stdin_used+0x1e8>
    349e:	e8 ad dc ff ff       	call   1150 <puts@plt>
    34a3:	48 8d 3d 8e 10 00 00 	lea    rdi,[rip+0x108e]        # 4538 <_IO_stdin_used+0x538>
    34aa:	e8 a1 dc ff ff       	call   1150 <puts@plt>
    34af:	48 8d 35 26 0d 00 00 	lea    rsi,[rip+0xd26]        # 41dc <_IO_stdin_used+0x1dc>
    34b6:	48 8d 3d e3 10 00 00 	lea    rdi,[rip+0x10e3]        # 45a0 <_IO_stdin_used+0x5a0>
    34bd:	e8 2e dc ff ff       	call   10f0 <fopen@plt>
    34c2:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    34c7:	45 89 f0             	mov    r8d,r14d
    34ca:	48 89 ea             	mov    rdx,rbp
    34cd:	48 8d 35 1c e6 ff ff 	lea    rsi,[rip+0xffffffffffffe61c]        # 1af0 <_Z19_mm_crc32HashString8string_t>
    34d4:	49 89 c7             	mov    r15,rax
    34d7:	4c 89 e9             	mov    rcx,r13
    34da:	48 89 c7             	mov    rdi,rax
    34dd:	e8 5e f3 ff ff       	call   2840 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    34e2:	4c 89 ff             	mov    rdi,r15
    34e5:	e8 e6 db ff ff       	call   10d0 <fclose@plt>
    34ea:	48 8d 3d 8f 10 00 00 	lea    rdi,[rip+0x108f]        # 4580 <_IO_stdin_used+0x580>
    34f1:	e8 5a dc ff ff       	call   1150 <puts@plt>
    34f6:	e9 21 f9 ff ff       	jmp    2e1c <_Z7testAllPKcjS0_j+0xac>
    34fb:	e8 e0 db ff ff       	call   10e0 <__stack_chk_fail@plt>
    3500:	48 8d 0d d1 0f 00 00 	lea    rcx,[rip+0xfd1]        # 44d8 <_IO_stdin_used+0x4d8>
    3507:	ba 13 00 00 00       	mov    edx,0x13
    350c:	48 8d 35 d4 0b 00 00 	lea    rsi,[rip+0xbd4]        # 40e7 <_IO_stdin_used+0xe7>
    3513:	48 8d 3d c4 0c 00 00 	lea    rdi,[rip+0xcc4]        # 41de <_IO_stdin_used+0x1de>
    351a:	e8 51 db ff ff       	call   1070 <__assert_fail@plt>
    351f:	48 8d 0d b2 0f 00 00 	lea    rcx,[rip+0xfb2]        # 44d8 <_IO_stdin_used+0x4d8>
    3526:	ba 12 00 00 00       	mov    edx,0x12
    352b:	48 8d 35 b5 0b 00 00 	lea    rsi,[rip+0xbb5]        # 40e7 <_IO_stdin_used+0xe7>
    3532:	48 8d 3d a5 0b 00 00 	lea    rdi,[rip+0xba5]        # 40de <_IO_stdin_used+0xde>
    3539:	e8 32 db ff ff       	call   1070 <__assert_fail@plt>
    353e:	66 90                	xchg   ax,ax

0000000000003540 <_Z21standartDeviationTimePdjd>:
    3540:	f3 0f 1e fa          	endbr64
    3544:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    3549:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    354d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    3551:	55                   	push   rbp
    3552:	48 89 e5             	mov    rbp,rsp
    3555:	41 52                	push   r10
    3557:	48 83 ec 08          	sub    rsp,0x8
    355b:	48 85 ff             	test   rdi,rdi
    355e:	0f 84 18 01 00 00    	je     367c <_Z21standartDeviationTimePdjd+0x13c>
    3564:	89 f1                	mov    ecx,esi
    3566:	85 c9                	test   ecx,ecx
    3568:	0f 84 f2 00 00 00    	je     3660 <_Z21standartDeviationTimePdjd+0x120>
    356e:	8d 41 ff             	lea    eax,[rcx-0x1]
    3571:	48 89 fa             	mov    rdx,rdi
    3574:	c5 fb 10 d8          	vmovsd xmm3,xmm0,xmm0
    3578:	83 f8 02             	cmp    eax,0x2
    357b:	0f 86 e9 00 00 00    	jbe    366a <_Z21standartDeviationTimePdjd+0x12a>
    3581:	89 ce                	mov    esi,ecx
    3583:	c4 e2 7d 19 e8       	vbroadcastsd ymm5,xmm0
    3588:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    358c:	48 89 f8             	mov    rax,rdi
    358f:	c1 ee 02             	shr    esi,0x2
    3592:	48 c1 e6 05          	shl    rsi,0x5
    3596:	48 01 fe             	add    rsi,rdi
    3599:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    35a0:	c5 fd 10 30          	vmovupd ymm6,YMMWORD PTR [rax]
    35a4:	48 83 c0 20          	add    rax,0x20
    35a8:	c5 cd 5c cd          	vsubpd ymm1,ymm6,ymm5
    35ac:	c5 f5 59 c9          	vmulpd ymm1,ymm1,ymm1
    35b0:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    35b4:	c5 f1 15 d1          	vunpckhpd xmm2,xmm1,xmm1
    35b8:	c4 e3 7d 19 c9 01    	vextractf128 xmm1,ymm1,0x1
    35be:	c5 fb 58 c2          	vaddsd xmm0,xmm0,xmm2
    35c2:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    35c6:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    35ca:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    35ce:	48 39 f0             	cmp    rax,rsi
    35d1:	75 cd                	jne    35a0 <_Z21standartDeviationTimePdjd+0x60>
    35d3:	89 c8                	mov    eax,ecx
    35d5:	83 e0 fc             	and    eax,0xfffffffc
    35d8:	f6 c1 03             	test   cl,0x3
    35db:	74 7b                	je     3658 <_Z21standartDeviationTimePdjd+0x118>
    35dd:	c5 f8 77             	vzeroupper
    35e0:	89 ce                	mov    esi,ecx
    35e2:	29 c6                	sub    esi,eax
    35e4:	83 fe 01             	cmp    esi,0x1
    35e7:	74 2a                	je     3613 <_Z21standartDeviationTimePdjd+0xd3>
    35e9:	89 c7                	mov    edi,eax
    35eb:	c5 fb 12 d3          	vmovddup xmm2,xmm3
    35ef:	c5 f9 10 0c fa       	vmovupd xmm1,XMMWORD PTR [rdx+rdi*8]
    35f4:	c5 f1 5c ca          	vsubpd xmm1,xmm1,xmm2
    35f8:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    35fc:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3600:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    3604:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    3608:	40 f6 c6 01          	test   sil,0x1
    360c:	74 16                	je     3624 <_Z21standartDeviationTimePdjd+0xe4>
    360e:	83 e6 fe             	and    esi,0xfffffffe
    3611:	01 f0                	add    eax,esi
    3613:	c5 fb 10 0c c2       	vmovsd xmm1,QWORD PTR [rdx+rax*8]
    3618:	c5 f3 5c cb          	vsubsd xmm1,xmm1,xmm3
    361c:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    3620:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3624:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    3628:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    362c:	c4 e1 f2 2a c9       	vcvtsi2ss xmm1,xmm1,rcx
    3631:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    3635:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    3639:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    363d:	77 36                	ja     3675 <_Z21standartDeviationTimePdjd+0x135>
    363f:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    3643:	4c 8b 55 f8          	mov    r10,QWORD PTR [rbp-0x8]
    3647:	c5 fa 5a c0          	vcvtss2sd xmm0,xmm0,xmm0
    364b:	c9                   	leave
    364c:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    3650:	c3                   	ret
    3651:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3658:	c5 f8 77             	vzeroupper
    365b:	eb c7                	jmp    3624 <_Z21standartDeviationTimePdjd+0xe4>
    365d:	0f 1f 00             	nop    DWORD PTR [rax]
    3660:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3664:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    3668:	eb d5                	jmp    363f <_Z21standartDeviationTimePdjd+0xff>
    366a:	31 c0                	xor    eax,eax
    366c:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    3670:	e9 6b ff ff ff       	jmp    35e0 <_Z21standartDeviationTimePdjd+0xa0>
    3675:	e8 06 db ff ff       	call   1180 <sqrtf@plt>
    367a:	eb c7                	jmp    3643 <_Z21standartDeviationTimePdjd+0x103>
    367c:	48 8d 0d 1d 0e 00 00 	lea    rcx,[rip+0xe1d]        # 44a0 <_IO_stdin_used+0x4a0>
    3683:	ba ad 00 00 00       	mov    edx,0xad
    3688:	48 8d 35 58 0a 00 00 	lea    rsi,[rip+0xa58]        # 40e7 <_IO_stdin_used+0xe7>
    368f:	48 8d 3d db 0a 00 00 	lea    rdi,[rip+0xadb]        # 4171 <_IO_stdin_used+0x171>
    3696:	e8 d5 d9 ff ff       	call   1070 <__assert_fail@plt>
    369b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000036a0 <_Z27standartDeviationCollisionsP7HashMapf>:
    36a0:	f3 0f 1e fa          	endbr64
    36a4:	41 55                	push   r13
    36a6:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    36ab:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    36af:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    36b3:	55                   	push   rbp
    36b4:	48 89 e5             	mov    rbp,rsp
    36b7:	41 55                	push   r13
    36b9:	48 83 ec 28          	sub    rsp,0x28
    36bd:	48 85 ff             	test   rdi,rdi
    36c0:	0f 84 d7 02 00 00    	je     399d <_Z27standartDeviationCollisionsP7HashMapf+0x2fd>
    36c6:	8b 77 08             	mov    esi,DWORD PTR [rdi+0x8]
    36c9:	85 f6                	test   esi,esi
    36cb:	0f 84 87 02 00 00    	je     3958 <_Z27standartDeviationCollisionsP7HashMapf+0x2b8>
    36d1:	8d 46 ff             	lea    eax,[rsi-0x1]
    36d4:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    36d7:	c5 f8 28 e0          	vmovaps xmm4,xmm0
    36db:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    36df:	83 f8 06             	cmp    eax,0x6
    36e2:	0f 86 95 02 00 00    	jbe    397d <_Z27standartDeviationCollisionsP7HashMapf+0x2dd>
    36e8:	48 8d 47 10          	lea    rax,[rdi+0x10]
    36ec:	c4 e2 7d 18 f0       	vbroadcastss ymm6,xmm0
    36f1:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    36f6:	89 f2                	mov    edx,esi
    36f8:	c4 e2 7d 18 2d 07 09 	vbroadcastss ymm5,DWORD PTR [rip+0x907]        # 4008 <_IO_stdin_used+0x8>
    36ff:	00 00 
    3701:	c1 ea 03             	shr    edx,0x3
    3704:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    370b:	ff ff ff 
    370e:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    3712:	ba ff ff 00 00       	mov    edx,0xffff
    3717:	49 c1 e0 06          	shl    r8,0x6
    371b:	c5 f9 6e d2          	vmovd  xmm2,edx
    371f:	49 01 c0             	add    r8,rax
    3722:	c4 e2 7d 58 d2       	vpbroadcastd ymm2,xmm2
    3727:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    372e:	00 00 
    3730:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    3733:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    3736:	c5 c1 ef ff          	vpxor  xmm7,xmm7,xmm7
    373a:	48 05 c0 00 00 00    	add    rax,0xc0
    3740:	c5 fd 7f 7d d0       	vmovdqa YMMWORD PTR [rbp-0x30],ymm7
    3745:	48 c1 e2 20          	shl    rdx,0x20
    3749:	49 09 d1             	or     r9,rdx
    374c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    3750:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    3754:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    375b:	48 21 ca             	and    rdx,rcx
    375e:	4c 09 ca             	or     rdx,r9
    3761:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    3765:	89 d2                	mov    edx,edx
    3767:	49 c1 e1 20          	shl    r9,0x20
    376b:	4c 09 ca             	or     rdx,r9
    376e:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    3772:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    3776:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    377a:	48 21 ca             	and    rdx,rcx
    377d:	4c 09 ca             	or     rdx,r9
    3780:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    3784:	89 d2                	mov    edx,edx
    3786:	49 c1 e1 20          	shl    r9,0x20
    378a:	4c 09 ca             	or     rdx,r9
    378d:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    3791:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    3795:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    3799:	48 21 ca             	and    rdx,rcx
    379c:	4c 09 ca             	or     rdx,r9
    379f:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    37a3:	89 d2                	mov    edx,edx
    37a5:	49 c1 e1 20          	shl    r9,0x20
    37a9:	4c 09 ca             	or     rdx,r9
    37ac:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    37b0:	c5 fd 6f 7d d0       	vmovdqa ymm7,YMMWORD PTR [rbp-0x30]
    37b5:	c5 ed db 45 d0       	vpand  ymm0,ymm2,YMMWORD PTR [rbp-0x30]
    37ba:	c5 f5 72 d7 10       	vpsrld ymm1,ymm7,0x10
    37bf:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    37c3:	c5 f4 59 cd          	vmulps ymm1,ymm1,ymm5
    37c7:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    37cb:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    37cf:	c5 fc 5c c6          	vsubps ymm0,ymm0,ymm6
    37d3:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    37d7:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    37db:	c5 78 c6 c0 55       	vshufps xmm8,xmm0,xmm0,0x55
    37e0:	c5 f8 c6 f8 ff       	vshufps xmm7,xmm0,xmm0,0xff
    37e5:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    37ea:	c5 78 15 c0          	vunpckhps xmm8,xmm0,xmm0
    37ee:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    37f4:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    37f9:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    37fd:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    3802:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    3806:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    380a:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    380e:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    3813:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    3817:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    381b:	49 39 c0             	cmp    r8,rax
    381e:	0f 85 0c ff ff ff    	jne    3730 <_Z27standartDeviationCollisionsP7HashMapf+0x90>
    3824:	89 f0                	mov    eax,esi
    3826:	83 e0 f8             	and    eax,0xfffffff8
    3829:	40 f6 c6 07          	test   sil,0x7
    382d:	0f 84 45 01 00 00    	je     3978 <_Z27standartDeviationCollisionsP7HashMapf+0x2d8>
    3833:	c5 f8 77             	vzeroupper
    3836:	89 f1                	mov    ecx,esi
    3838:	29 c1                	sub    ecx,eax
    383a:	8d 51 ff             	lea    edx,[rcx-0x1]
    383d:	83 fa 02             	cmp    edx,0x2
    3840:	0f 86 8b 00 00 00    	jbe    38d1 <_Z27standartDeviationCollisionsP7HashMapf+0x231>
    3846:	c4 e2 79 18 15 b9 07 	vbroadcastss xmm2,DWORD PTR [rip+0x7b9]        # 4008 <_IO_stdin_used+0x8>
    384d:	00 00 
    384f:	89 c2                	mov    edx,eax
    3851:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3855:	c5 f9 6e 4c d7 10    	vmovd  xmm1,DWORD PTR [rdi+rdx*8+0x10]
    385b:	c4 e3 71 22 4c d7 28 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x28],0x1
    3862:	01 
    3863:	c4 e3 71 22 4c d7 40 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x40],0x2
    386a:	02 
    386b:	c4 e3 71 22 4c d7 58 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x58],0x3
    3872:	03 
    3873:	ba ff ff 00 00       	mov    edx,0xffff
    3878:	c5 f9 6e c2          	vmovd  xmm0,edx
    387c:	89 ca                	mov    edx,ecx
    387e:	c5 f9 70 c0 00       	vpshufd xmm0,xmm0,0x0
    3883:	83 e2 fc             	and    edx,0xfffffffc
    3886:	c5 f1 db c0          	vpand  xmm0,xmm1,xmm0
    388a:	c5 f1 72 d1 10       	vpsrld xmm1,xmm1,0x10
    388f:	01 d0                	add    eax,edx
    3891:	83 e1 03             	and    ecx,0x3
    3894:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    3898:	c5 f0 59 ca          	vmulps xmm1,xmm1,xmm2
    389c:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    38a0:	c5 f8 58 c1          	vaddps xmm0,xmm0,xmm1
    38a4:	c5 d8 c6 cc 00       	vshufps xmm1,xmm4,xmm4,0x0
    38a9:	c5 f8 5c c1          	vsubps xmm0,xmm0,xmm1
    38ad:	c5 f8 59 c0          	vmulps xmm0,xmm0,xmm0
    38b1:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    38b5:	c5 f8 c6 d0 55       	vshufps xmm2,xmm0,xmm0,0x55
    38ba:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    38be:	c5 f8 15 d0          	vunpckhps xmm2,xmm0,xmm0
    38c2:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    38c7:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    38cb:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    38cf:	74 5b                	je     392c <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    38d1:	89 c2                	mov    edx,eax
    38d3:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    38d7:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    38db:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    38e0:	8d 50 01             	lea    edx,[rax+0x1]
    38e3:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    38e7:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    38eb:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    38ef:	39 f2                	cmp    edx,esi
    38f1:	73 39                	jae    392c <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    38f3:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    38f7:	83 c0 02             	add    eax,0x2
    38fa:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    38fe:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    3903:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3907:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    390b:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    390f:	39 f0                	cmp    eax,esi
    3911:	73 19                	jae    392c <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3913:	48 8d 04 40          	lea    rax,[rax+rax*2]
    3917:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    391b:	c4 e1 e2 2a c0       	vcvtsi2ss xmm0,xmm3,rax
    3920:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3924:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3928:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    392c:	c4 e1 e2 2a de       	vcvtsi2ss xmm3,xmm3,rsi
    3931:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3935:	c5 3a 5e c3          	vdivss xmm8,xmm8,xmm3
    3939:	c4 c1 78 2e c0       	vucomiss xmm0,xmm8
    393e:	77 49                	ja     3989 <_Z27standartDeviationCollisionsP7HashMapf+0x2e9>
    3940:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3944:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3949:	c9                   	leave
    394a:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    394e:	41 5d                	pop    r13
    3950:	c3                   	ret
    3951:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3958:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    395d:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3961:	c4 41 3a 5e c0       	vdivss xmm8,xmm8,xmm8
    3966:	c9                   	leave
    3967:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    396b:	41 5d                	pop    r13
    396d:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3972:	c3                   	ret
    3973:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3978:	c5 f8 77             	vzeroupper
    397b:	eb af                	jmp    392c <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    397d:	31 c0                	xor    eax,eax
    397f:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3984:	e9 ad fe ff ff       	jmp    3836 <_Z27standartDeviationCollisionsP7HashMapf+0x196>
    3989:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    398d:	c5 78 29 c0          	vmovaps xmm0,xmm8
    3991:	c9                   	leave
    3992:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3996:	41 5d                	pop    r13
    3998:	e9 e3 d7 ff ff       	jmp    1180 <sqrtf@plt>
    399d:	48 8d 0d b4 0c 00 00 	lea    rcx,[rip+0xcb4]        # 4658 <_IO_stdin_used+0x658>
    39a4:	ba b9 00 00 00       	mov    edx,0xb9
    39a9:	48 8d 35 37 07 00 00 	lea    rsi,[rip+0x737]        # 40e7 <_IO_stdin_used+0xe7>
    39b0:	48 8d 3d 95 06 00 00 	lea    rdi,[rip+0x695]        # 404c <_IO_stdin_used+0x4c>
    39b7:	e8 b4 d6 ff ff       	call   1070 <__assert_fail@plt>
    39bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000039c0 <my_strcmp>:
    39c0:	c5 fd 6f 07          	vmovdqa ymm0,YMMWORD PTR [rdi]
    39c4:	c5 fd 6f 0e          	vmovdqa ymm1,YMMWORD PTR [rsi]
    39c8:	c4 e2 7d 29 d1       	vpcmpeqq ymm2,ymm0,ymm1
    39cd:	c5 fd d7 c2          	vpmovmskb eax,ymm2
    39d1:	f7 d0                	not    eax
    39d3:	c3                   	ret

Disassembly of section .fini:

00000000000039d4 <_fini>:
    39d4:	f3 0f 1e fa          	endbr64
    39d8:	48 83 ec 08          	sub    rsp,0x8
    39dc:	48 83 c4 08          	add    rsp,0x8
    39e0:	c3                   	ret

Disassembly of section .rodata:

0000000000004000 <_IO_stdin_used>:
    4000:	01 00                	add    DWORD PTR [rax],eax
    4002:	02 00                	add    al,BYTE PTR [rax]
    4004:	00 00                	add    BYTE PTR [rax],al
    4006:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    4009:	00 80 47 62 6f 6f    	add    BYTE PTR [rax+0x6f6f6247],al
    400f:	6b 2e 74             	imul   ebp,DWORD PTR [rsi],0x74
    4012:	78 74                	js     4088 <_IO_stdin_used+0x88>
    4014:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    4017:	69 67 6e 65 64 5f 74 	imul   esp,DWORD PTR [rdi+0x6e],0x745f6465
    401e:	65 78 74             	gs js  4095 <_IO_stdin_used+0x95>
    4021:	00 48 45             	add    BYTE PTR [rax+0x45],cl
    4024:	52                   	push   rdx
    4025:	45 20 25 64 0a 00 59 	and    BYTE PTR [rip+0x59000a64],r12b        # 59004a90 <_end+0x58ffea78>
    402c:	45 53                	rex.RB push r11
    402e:	00 41 63             	add    BYTE PTR [rcx+0x63],al
    4031:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    4034:	73 69                	jae    409f <_IO_stdin_used+0x9f>
    4036:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4037:	67 3a 20             	cmp    ah,BYTE PTR [eax]
    403a:	25 70 20 28 61       	and    eax,0x61282070
    403f:	6c                   	ins    BYTE PTR es:[rdi],dx
    4040:	69 67 6e 65 64 3a 20 	imul   esp,DWORD PTR [rdi+0x6e],0x203a6465
    4047:	25 73 29 0a 00       	and    eax,0xa2973
    404c:	68 61 73 68 4d       	push   0x4d687361
    4051:	61                   	(bad)
    4052:	70 00                	jo     4054 <_IO_stdin_used+0x54>
    4054:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    4056:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4057:	61                   	(bad)
    4058:	74 20                	je     407a <_IO_stdin_used+0x7a>
    405a:	67 65 74 4c          	addr32 gs je 40aa <_IO_stdin_used+0xaa>
    405e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    405f:	61                   	(bad)
    4060:	64 46 61             	fs rex.RX (bad)
    4063:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    4067:	28 48 61             	sub    BYTE PTR [rax+0x61],cl
    406a:	73 68                	jae    40d4 <_IO_stdin_used+0xd4>
    406c:	4d 61                	rex.WRB (bad)
    406e:	70 2a                	jo     409a <_IO_stdin_used+0x9a>
    4070:	29 00                	sub    DWORD PTR [rax],eax
    4072:	76 6f                	jbe    40e3 <_IO_stdin_used+0xe3>
    4074:	69 64 20 68 61 73 68 	imul   esp,DWORD PTR [rax+riz*1+0x68],0x4d687361
    407b:	4d 
    407c:	61                   	(bad)
    407d:	70 44                	jo     40c3 <_IO_stdin_used+0xc3>
    407f:	74 6f                	je     40f0 <_IO_stdin_used+0xf0>
    4081:	72 28                	jb     40ab <_IO_stdin_used+0xab>
    4083:	48 61                	rex.W (bad)
    4085:	73 68                	jae    40ef <_IO_stdin_used+0xef>
    4087:	4d 61                	rex.WRB (bad)
    4089:	70 2a                	jo     40b5 <_IO_stdin_used+0xb5>
    408b:	29 00                	sub    DWORD PTR [rax],eax
    408d:	2f                   	(bad)
    408e:	72 6f                	jb     40ff <_IO_stdin_used+0xff>
    4090:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4091:	74 2f                	je     40c2 <_IO_stdin_used+0xc2>
    4093:	68 61 73 68 4d       	push   0x4d687361
    4098:	61                   	(bad)
    4099:	70 2f                	jo     40ca <_IO_stdin_used+0xca>
    409b:	73 72                	jae    410f <_IO_stdin_used+0x10f>
    409d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    409f:	6c                   	ins    BYTE PTR es:[rdi],dx
    40a0:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
    40a7:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
    40ab:	74 00                	je     40ad <_IO_stdin_used+0xad>
    40ad:	76 6f                	jbe    411e <_IO_stdin_used+0x11e>
    40af:	69 64 20 6c 69 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x44747369
    40b6:	44 
    40b7:	74 6f                	je     4128 <_IO_stdin_used+0x128>
    40b9:	72 28                	jb     40e3 <_IO_stdin_used+0xe3>
    40bb:	4c 69 73 74 2a 29 00 	imul   r14,QWORD PTR [rbx+0x74],0x2f00292a
    40c2:	2f 
    40c3:	72 6f                	jb     4134 <_IO_stdin_used+0x134>
    40c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40c6:	74 2f                	je     40f7 <_IO_stdin_used+0xf7>
    40c8:	68 61 73 68 4d       	push   0x4d687361
    40cd:	61                   	(bad)
    40ce:	70 2f                	jo     40ff <_IO_stdin_used+0xff>
    40d0:	73 72                	jae    4144 <_IO_stdin_used+0x144>
    40d2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    40d4:	75 74                	jne    414a <_IO_stdin_used+0x14a>
    40d6:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
    40dd:	00 
    40de:	66 69 6c 65 6e 61 6d 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
    40e5:	65 00 2f             	add    BYTE PTR gs:[rdi],ch
    40e8:	72 6f                	jb     4159 <_IO_stdin_used+0x159>
    40ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40eb:	74 2f                	je     411c <_IO_stdin_used+0x11c>
    40ed:	68 61 73 68 4d       	push   0x4d687361
    40f2:	61                   	(bad)
    40f3:	70 2f                	jo     4124 <_IO_stdin_used+0x124>
    40f5:	73 72                	jae    4169 <_IO_stdin_used+0x169>
    40f7:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    40f9:	74 65                	je     4160 <_IO_stdin_used+0x160>
    40fb:	73 74                	jae    4171 <_IO_stdin_used+0x171>
    40fd:	73 2e                	jae    412d <_IO_stdin_used+0x12d>
    40ff:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    4102:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    4105:	6c                   	ins    BYTE PTR es:[rdi],dx
    4106:	65 00 42 75          	add    BYTE PTR gs:[rdx+0x75],al
    410a:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    410d:	74 20                	je     412f <_IO_stdin_used+0x12f>
    410f:	69 6e 64 65 78 2c 42 	imul   ebp,DWORD PTR [rsi+0x64],0x422c7865
    4116:	75 63                	jne    417b <_IO_stdin_used+0x17b>
    4118:	6b 65 74 20          	imul   esp,DWORD PTR [rbp+0x74],0x20
    411c:	73 69                	jae    4187 <_IO_stdin_used+0x187>
    411e:	7a 65                	jp     4185 <_IO_stdin_used+0x185>
    4120:	0a 00                	or     al,BYTE PTR [rax]
    4122:	25 75 2c 25 75       	and    eax,0x75252c75
    4127:	0a 00                	or     al,BYTE PTR [rax]
    4129:	41 56                	push   r14
    412b:	45 52                	rex.RB push r10
    412d:	41                   	rex.B
    412e:	47                   	rex.RXB
    412f:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    4133:	4c                   	rex.WR
    4134:	4c                   	rex.WR
    4135:	49 53                	rex.WB push r11
    4137:	49                   	rex.WB
    4138:	4f                   	rex.WRXB
    4139:	4e 53                	rex.WRX push rbx
    413b:	3a 20                	cmp    ah,BYTE PTR [rax]
    413d:	25 2e 32 66 0a       	and    eax,0xa66322e
    4142:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    4145:	41                   	rex.B
    4146:	4e                   	rex.WRX
    4147:	44                   	rex.R
    4148:	41 52                	push   r10
    414a:	54                   	push   rsp
    414b:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    414f:	49                   	rex.WB
    4150:	41 54                	push   r12
    4152:	49                   	rex.WB
    4153:	4f                   	rex.WRXB
    4154:	4e 3a 20             	rex.WRX cmp r12b,BYTE PTR [rax]
    4157:	25 2e 32 66 0a       	and    eax,0xa66322e
    415c:	00 54 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dl
    4160:	74 20                	je     4182 <_IO_stdin_used+0x182>
    4162:	69 6e 64 65 78 2c 54 	imul   ebp,DWORD PTR [rsi+0x64],0x542c7865
    4169:	69 6d 65 20 6d 73 0a 	imul   ebp,DWORD PTR [rbp+0x65],0xa736d20
    4170:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    4174:	65 5f                	gs pop rdi
    4176:	61                   	(bad)
    4177:	72 72                	jb     41eb <_IO_stdin_used+0x1eb>
    4179:	61                   	(bad)
    417a:	79 00                	jns    417c <_IO_stdin_used+0x17c>
    417c:	25 75 2c 25 2e       	and    eax,0x2e252c75
    4181:	32 66 0a             	xor    ah,BYTE PTR [rsi+0xa]
    4184:	00 41 56             	add    BYTE PTR [rcx+0x56],al
    4187:	45 52                	rex.RB push r10
    4189:	41                   	rex.B
    418a:	47                   	rex.RXB
    418b:	45 20 53 45          	and    BYTE PTR [r11+0x45],r10b
    418f:	41 52                	push   r10
    4191:	43                   	rex.XB
    4192:	48 20 54 49 4d       	rex.W and BYTE PTR [rcx+rcx*2+0x4d],dl
    4197:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    419a:	25 2e 32 66 20       	and    eax,0x2066322e
    419f:	6d                   	ins    DWORD PTR es:[rdi],dx
    41a0:	73 0a                	jae    41ac <_IO_stdin_used+0x1ac>
    41a2:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    41a5:	41                   	rex.B
    41a6:	4e                   	rex.WRX
    41a7:	44                   	rex.R
    41a8:	41 52                	push   r10
    41aa:	54                   	push   rsp
    41ab:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    41af:	49                   	rex.WB
    41b0:	41 54                	push   r12
    41b2:	49                   	rex.WB
    41b3:	4f                   	rex.WRXB
    41b4:	4e 20 3a             	rex.WRX and BYTE PTR [rdx],r15b
    41b7:	20 25 2e 32 66 20    	and    BYTE PTR [rip+0x2066322e],ah        # 206673eb <_end+0x206613d3>
    41bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    41be:	73 0a                	jae    41ca <_IO_stdin_used+0x1ca>
    41c0:	00 50 45             	add    BYTE PTR [rax+0x45],dl
    41c3:	52                   	push   rdx
    41c4:	43                   	rex.XB
    41c5:	45                   	rex.RB
    41c6:	4e 54                	rex.WRX push rsp
    41c8:	41                   	rex.B
    41c9:	47                   	rex.RXB
    41ca:	45 20 4f 46          	and    BYTE PTR [r15+0x46],r9b
    41ce:	20 45 52             	and    BYTE PTR [rbp+0x52],al
    41d1:	52                   	push   rdx
    41d2:	4f 52                	rex.WRXB push r10
    41d4:	3a 20                	cmp    ah,BYTE PTR [rax]
    41d6:	25 2e 32 66 0a       	and    eax,0xa66322e
    41db:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    41de:	74 65                	je     4245 <_IO_stdin_used+0x245>
    41e0:	73 74                	jae    4256 <_IO_stdin_used+0x256>
    41e2:	5f                   	pop    rdi
    41e3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    41e4:	61                   	(bad)
    41e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    41e6:	65 00 5f 6d          	add    BYTE PTR gs:[rdi+0x6d],bl
    41ea:	6d                   	ins    DWORD PTR es:[rdi],dx
    41eb:	5f                   	pop    rdi
    41ec:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    41ef:	33 32                	xor    esi,DWORD PTR [rdx]
    41f1:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    41f4:	72 6d                	jb     4263 <_IO_stdin_used+0x263>
    41f6:	75 72                	jne    426a <_IO_stdin_used+0x26a>
    41f8:	33 00                	xor    eax,DWORD PTR [rax]
    41fa:	6d                   	ins    DWORD PTR es:[rdi],dx
    41fb:	75 72                	jne    426f <_IO_stdin_used+0x26f>
    41fd:	6d                   	ins    DWORD PTR es:[rdi],dx
    41fe:	75 72                	jne    4272 <_IO_stdin_used+0x272>
    4200:	32 00                	xor    al,BYTE PTR [rax]
    4202:	73 75                	jae    4279 <_IO_stdin_used+0x279>
    4204:	6d                   	ins    DWORD PTR es:[rdi],dx
    4205:	00 70 6c             	add    BYTE PTR [rax+0x6c],dh
    4208:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4209:	74 2f                	je     423a <_IO_stdin_used+0x23a>
    420b:	73 75                	jae    4282 <_IO_stdin_used+0x282>
    420d:	6d                   	ins    DWORD PTR es:[rdi],dx
    420e:	2f                   	(bad)
    420f:	73 75                	jae    4286 <_IO_stdin_used+0x286>
    4211:	6d                   	ins    DWORD PTR es:[rdi],dx
    4212:	5f                   	pop    rdi
    4213:	73 65                	jae    427a <_IO_stdin_used+0x27a>
    4215:	61                   	(bad)
    4216:	72 63                	jb     427b <_IO_stdin_used+0x27b>
    4218:	68 5f 74 69 6d       	push   0x6d69745f
    421d:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4222:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
    4225:	6c                   	ins    BYTE PTR es:[rdi],dx
    4226:	65 72 33             	gs jb  425c <_IO_stdin_used+0x25c>
    4229:	32 00                	xor    al,BYTE PTR [rax]
    422b:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    422d:	66 00 70 6c          	data16 add BYTE PTR [rax+0x6c],dh
    4231:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4232:	74 2f                	je     4263 <_IO_stdin_used+0x263>
    4234:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    4236:	66 2f                	data16 (bad)
    4238:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    423a:	66 5f                	pop    di
    423c:	73 65                	jae    42a3 <_IO_stdin_used+0x2a3>
    423e:	61                   	(bad)
    423f:	72 63                	jb     42a4 <_IO_stdin_used+0x2a4>
    4241:	68 5f 74 69 6d       	push   0x6d69745f
    4246:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    424b:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    424e:	6d                   	ins    DWORD PTR es:[rdi],dx
    424f:	5f                   	pop    rdi
    4250:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4253:	33 32                	xor    esi,DWORD PTR [rdx]
    4255:	55                   	push   rbp
    4256:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4257:	72 6f                	jb     42c8 <_IO_stdin_used+0x2c8>
    4259:	6c                   	ins    BYTE PTR es:[rdi],dx
    425a:	6c                   	ins    BYTE PTR es:[rdi],dx
    425b:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    425e:	6c                   	ins    BYTE PTR es:[rdi],dx
    425f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    4262:	72 69                	jb     42cd <_IO_stdin_used+0x2cd>
    4264:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4265:	67 5f                	addr32 pop rdi
    4267:	74 2a                	je     4293 <_IO_stdin_used+0x293>
    4269:	20 62 75             	and    BYTE PTR [rdx+0x75],ah
    426c:	69 6c 64 53 74 72 69 	imul   ebp,DWORD PTR [rsp+riz*2+0x53],0x6e697274
    4273:	6e 
    4274:	67 41 72 72          	addr32 rex.B jb 42ea <_IO_stdin_used+0x2ea>
    4278:	61                   	(bad)
    4279:	79 28                	jns    42a3 <_IO_stdin_used+0x2a3>
    427b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    427e:	72 2a                	jb     42aa <_IO_stdin_used+0x2aa>
    4280:	2c 20                	sub    al,0x20
    4282:	75 69                	jne    42ed <_IO_stdin_used+0x2ed>
    4284:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4285:	74 33                	je     42ba <_IO_stdin_used+0x2ba>
    4287:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    428a:	29 00                	sub    DWORD PTR [rax],eax
    428c:	00 00                	add    BYTE PTR [rax],al
    428e:	00 00                	add    BYTE PTR [rax],al
    4290:	2f                   	(bad)
    4291:	72 6f                	jb     4302 <_IO_stdin_used+0x302>
    4293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4294:	74 2f                	je     42c5 <_IO_stdin_used+0x2c5>
    4296:	68 61 73 68 4d       	push   0x4d687361
    429b:	61                   	(bad)
    429c:	70 2f                	jo     42cd <_IO_stdin_used+0x2cd>
    429e:	73 72                	jae    4312 <_IO_stdin_used+0x312>
    42a0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    42a2:	68 61 73 68 5f       	push   0x5f687361
    42a7:	6d                   	ins    DWORD PTR es:[rdi],dx
    42a8:	61                   	(bad)
    42a9:	70 2e                	jo     42d9 <_IO_stdin_used+0x2d9>
    42ab:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    42ae:	00 00                	add    BYTE PTR [rax],al
    42b0:	75 69                	jne    431b <_IO_stdin_used+0x31b>
    42b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42b3:	74 33                	je     42e8 <_IO_stdin_used+0x2e8>
    42b5:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    42b8:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    42bb:	73 68                	jae    4325 <_IO_stdin_used+0x325>
    42bd:	4d 61                	rex.WRB (bad)
    42bf:	70 41                	jo     4302 <_IO_stdin_used+0x302>
    42c1:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
    42c5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    42c7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    42c9:	74 28                	je     42f3 <_IO_stdin_used+0x2f3>
    42cb:	48 61                	rex.W (bad)
    42cd:	73 68                	jae    4337 <_IO_stdin_used+0x337>
    42cf:	4d 61                	rex.WRB (bad)
    42d1:	70 2a                	jo     42fd <_IO_stdin_used+0x2fd>
    42d3:	2c 20                	sub    al,0x20
    42d5:	64 61                	fs (bad)
    42d7:	74 61                	je     433a <_IO_stdin_used+0x33a>
    42d9:	5f                   	pop    rdi
    42da:	74 29                	je     4305 <_IO_stdin_used+0x305>
    42dc:	00 00                	add    BYTE PTR [rax],al
    42de:	00 00                	add    BYTE PTR [rax],al
    42e0:	75 69                	jne    434b <_IO_stdin_used+0x34b>
    42e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42e3:	74 33                	je     4318 <_IO_stdin_used+0x318>
    42e5:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    42e8:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    42eb:	73 68                	jae    4355 <_IO_stdin_used+0x355>
    42ed:	4d 61                	rex.WRB (bad)
    42ef:	70 50                	jo     4341 <_IO_stdin_used+0x341>
    42f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    42f2:	70 45                	jo     4339 <_IO_stdin_used+0x339>
    42f4:	6c                   	ins    BYTE PTR es:[rdi],dx
    42f5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    42f7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    42f9:	74 28                	je     4323 <_IO_stdin_used+0x323>
    42fb:	48 61                	rex.W (bad)
    42fd:	73 68                	jae    4367 <_IO_stdin_used+0x367>
    42ff:	4d 61                	rex.WRB (bad)
    4301:	70 2a                	jo     432d <_IO_stdin_used+0x32d>
    4303:	2c 20                	sub    al,0x20
    4305:	64 61                	fs (bad)
    4307:	74 61                	je     436a <_IO_stdin_used+0x36a>
    4309:	5f                   	pop    rdi
    430a:	74 29                	je     4335 <_IO_stdin_used+0x335>
    430c:	00 00                	add    BYTE PTR [rax],al
    430e:	00 00                	add    BYTE PTR [rax],al
    4310:	62 6f 6f 6c 20       	(bad)
    4315:	68 61 73 68 4d       	push   0x4d687361
    431a:	61                   	(bad)
    431b:	70 53                	jo     4370 <_IO_stdin_used+0x370>
    431d:	65 61                	gs (bad)
    431f:	72 63                	jb     4384 <_IO_stdin_used+0x384>
    4321:	68 45 6c 65 6d       	push   0x6d656c45
    4326:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4328:	74 28                	je     4352 <_IO_stdin_used+0x352>
    432a:	48 61                	rex.W (bad)
    432c:	73 68                	jae    4396 <_IO_stdin_used+0x396>
    432e:	4d 61                	rex.WRB (bad)
    4330:	70 2a                	jo     435c <_IO_stdin_used+0x35c>
    4332:	2c 20                	sub    al,0x20
    4334:	64 61                	fs (bad)
    4336:	74 61                	je     4399 <_IO_stdin_used+0x399>
    4338:	5f                   	pop    rdi
    4339:	74 29                	je     4364 <_IO_stdin_used+0x364>
    433b:	00 00                	add    BYTE PTR [rax],al
    433d:	00 00                	add    BYTE PTR [rax],al
    433f:	00 48 61             	add    BYTE PTR [rax+0x61],cl
    4342:	73 68                	jae    43ac <_IO_stdin_used+0x3ac>
    4344:	4d 61                	rex.WRB (bad)
    4346:	70 20                	jo     4368 <_IO_stdin_used+0x368>
    4348:	72 65                	jb     43af <_IO_stdin_used+0x3af>
    434a:	73 69                	jae    43b5 <_IO_stdin_used+0x3b5>
    434c:	7a 65                	jp     43b3 <_IO_stdin_used+0x3b3>
    434e:	28 48 61             	sub    BYTE PTR [rax+0x61],cl
    4351:	73 68                	jae    43bb <_IO_stdin_used+0x3bb>
    4353:	4d 61                	rex.WRB (bad)
    4355:	70 2a                	jo     4381 <_IO_stdin_used+0x381>
    4357:	2c 20                	sub    al,0x20
    4359:	75 69                	jne    43c4 <_IO_stdin_used+0x3c4>
    435b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    435c:	74 33                	je     4391 <_IO_stdin_used+0x391>
    435e:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4361:	29 00                	sub    DWORD PTR [rax],eax
    4363:	00 00                	add    BYTE PTR [rax],al
    4365:	00 00                	add    BYTE PTR [rax],al
    4367:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    436a:	74 20                	je     438c <_IO_stdin_used+0x38c>
    436c:	73 65                	jae    43d3 <_IO_stdin_used+0x3d3>
    436e:	61                   	(bad)
    436f:	72 63                	jb     43d4 <_IO_stdin_used+0x3d4>
    4371:	68 45 6c 65 6d       	push   0x6d656c45
    4376:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4378:	74 28                	je     43a2 <_IO_stdin_used+0x3a2>
    437a:	4c 69 73 74 2a 2c 20 	imul   r14,QWORD PTR [rbx+0x74],0x64202c2a
    4381:	64 
    4382:	61                   	(bad)
    4383:	74 61                	je     43e6 <_IO_stdin_used+0x3e6>
    4385:	5f                   	pop    rdi
    4386:	74 29                	je     43b1 <_IO_stdin_used+0x3b1>
	...
    4390:	69 6e 74 20 70 75 73 	imul   ebp,DWORD PTR [rsi+0x74],0x73757020
    4397:	68 4c 69 73 74       	push   0x7473694c
    439c:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    439e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    43a0:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    43a4:	74 2a                	je     43d0 <_IO_stdin_used+0x3d0>
    43a6:	2c 20                	sub    al,0x20
    43a8:	64 61                	fs (bad)
    43aa:	74 61                	je     440d <_IO_stdin_used+0x40d>
    43ac:	5f                   	pop    rdi
    43ad:	74 29                	je     43d8 <_IO_stdin_used+0x3d8>
    43af:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    43b2:	74 20                	je     43d4 <_IO_stdin_used+0x3d4>
    43b4:	70 6f                	jo     4425 <_IO_stdin_used+0x425>
    43b6:	70 4c                	jo     4404 <_IO_stdin_used+0x404>
    43b8:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
    43bf:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    43c3:	74 2a                	je     43ef <_IO_stdin_used+0x3ef>
    43c5:	2c 20                	sub    al,0x20
    43c7:	64 61                	fs (bad)
    43c9:	74 61                	je     442c <_IO_stdin_used+0x42c>
    43cb:	5f                   	pop    rdi
    43cc:	74 29                	je     43f7 <_IO_stdin_used+0x3f7>
    43ce:	00 00                	add    BYTE PTR [rax],al
    43d0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    43d3:	72 2a                	jb     43ff <_IO_stdin_used+0x3ff>
    43d5:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    43d8:	61                   	(bad)
    43d9:	64 46 69 6c 65 28 63 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x736e6f63
    43e0:	6f 6e 73 
    43e3:	74 20                	je     4405 <_IO_stdin_used+0x405>
    43e5:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    43e8:	72 2a                	jb     4414 <_IO_stdin_used+0x414>
    43ea:	2c 20                	sub    al,0x20
    43ec:	73 69                	jae    4457 <_IO_stdin_used+0x457>
    43ee:	7a 65                	jp     4455 <_IO_stdin_used+0x455>
    43f0:	5f                   	pop    rdi
    43f1:	74 2a                	je     441d <_IO_stdin_used+0x41d>
    43f3:	29 00                	sub    DWORD PTR [rax],eax
    43f5:	00 00                	add    BYTE PTR [rax],al
    43f7:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    43fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    43fb:	74 33                	je     4430 <_IO_stdin_used+0x430>
    43fd:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4400:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    4403:	75 6e                	jne    4473 <_IO_stdin_used+0x473>
    4405:	74 4c                	je     4453 <_IO_stdin_used+0x453>
    4407:	69 6e 65 73 28 63 68 	imul   ebp,DWORD PTR [rsi+0x65],0x68632873
    440e:	61                   	(bad)
    440f:	72 2a                	jb     443b <_IO_stdin_used+0x43b>
    4411:	2c 20                	sub    al,0x20
    4413:	73 69                	jae    447e <_IO_stdin_used+0x47e>
    4415:	7a 65                	jp     447c <_IO_stdin_used+0x47c>
    4417:	5f                   	pop    rdi
    4418:	74 29                	je     4443 <_IO_stdin_used+0x443>
    441a:	00 00                	add    BYTE PTR [rax],al
    441c:	00 00                	add    BYTE PTR [rax],al
    441e:	00 00                	add    BYTE PTR [rax],al
    4420:	76 6f                	jbe    4491 <_IO_stdin_used+0x491>
    4422:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x43747365
    4429:	43 
    442a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    442b:	6c                   	ins    BYTE PTR es:[rdi],dx
    442c:	6c                   	ins    BYTE PTR es:[rdi],dx
    442d:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    4434:	46                   	rex.RX
    4435:	49                   	rex.WB
    4436:	4c                   	rex.WR
    4437:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    443b:	68 61 73 68 5f       	push   0x5f687361
    4440:	74 2c                	je     446e <_IO_stdin_used+0x46e>
    4442:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    4446:	74 44                	je     448c <_IO_stdin_used+0x48c>
    4448:	61                   	(bad)
    4449:	74 61                	je     44ac <_IO_stdin_used+0x4ac>
    444b:	2c 20                	sub    al,0x20
    444d:	75 69                	jne    44b8 <_IO_stdin_used+0x4b8>
    444f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4450:	74 33                	je     4485 <_IO_stdin_used+0x485>
    4452:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4455:	29 00                	sub    DWORD PTR [rax],eax
    4457:	00 76 6f             	add    BYTE PTR [rsi+0x6f],dh
    445a:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x53747365
    4461:	53 
    4462:	65 61                	gs (bad)
    4464:	72 63                	jb     44c9 <_IO_stdin_used+0x4c9>
    4466:	68 54 69 6d 65       	push   0x656d6954
    446b:	28 46 49             	sub    BYTE PTR [rsi+0x49],al
    446e:	4c                   	rex.WR
    446f:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    4473:	68 61 73 68 5f       	push   0x5f687361
    4478:	74 2c                	je     44a6 <_IO_stdin_used+0x4a6>
    447a:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    447e:	74 44                	je     44c4 <_IO_stdin_used+0x4c4>
    4480:	61                   	(bad)
    4481:	74 61                	je     44e4 <_IO_stdin_used+0x4e4>
    4483:	2c 20                	sub    al,0x20
    4485:	75 69                	jne    44f0 <_IO_stdin_used+0x4f0>
    4487:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4488:	74 33                	je     44bd <_IO_stdin_used+0x4bd>
    448a:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    448d:	2c 20                	sub    al,0x20
    448f:	75 69                	jne    44fa <_IO_stdin_used+0x4fa>
    4491:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4492:	74 33                	je     44c7 <_IO_stdin_used+0x4c7>
    4494:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4497:	29 00                	sub    DWORD PTR [rax],eax
    4499:	00 00                	add    BYTE PTR [rax],al
    449b:	00 00                	add    BYTE PTR [rax],al
    449d:	00 00                	add    BYTE PTR [rax],al
    449f:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    44a3:	62 6c 65             	(bad)
    44a6:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    44a9:	61                   	(bad)
    44aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44ab:	64 61                	fs (bad)
    44ad:	72 74                	jb     4523 <_IO_stdin_used+0x523>
    44af:	44                   	rex.R
    44b0:	65 76 69             	gs jbe 451c <_IO_stdin_used+0x51c>
    44b3:	61                   	(bad)
    44b4:	74 69                	je     451f <_IO_stdin_used+0x51f>
    44b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    44b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44b8:	54                   	push   rsp
    44b9:	69 6d 65 28 64 6f 75 	imul   ebp,DWORD PTR [rbp+0x65],0x756f6428
    44c0:	62 6c 65             	(bad)  {k2}
    44c3:	2a 2c 20             	sub    ch,BYTE PTR [rax+riz*1]
    44c6:	75 69                	jne    4531 <_IO_stdin_used+0x531>
    44c8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44c9:	74 33                	je     44fe <_IO_stdin_used+0x4fe>
    44cb:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    44ce:	2c 20                	sub    al,0x20
    44d0:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    44d2:	75 62                	jne    4536 <_IO_stdin_used+0x536>
    44d4:	6c                   	ins    BYTE PTR es:[rdi],dx
    44d5:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    44d8:	76 6f                	jbe    4549 <_IO_stdin_used+0x549>
    44da:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x41747365
    44e1:	41 
    44e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    44e3:	6c                   	ins    BYTE PTR es:[rdi],dx
    44e4:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    44e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44e8:	73 74                	jae    455e <_IO_stdin_used+0x55e>
    44ea:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    44ed:	61                   	(bad)
    44ee:	72 2a                	jb     451a <_IO_stdin_used+0x51a>
    44f0:	2c 20                	sub    al,0x20
    44f2:	75 69                	jne    455d <_IO_stdin_used+0x55d>
    44f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44f5:	74 33                	je     452a <_IO_stdin_used+0x52a>
    44f7:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    44fa:	2c 20                	sub    al,0x20
    44fc:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    44ff:	73 74                	jae    4575 <_IO_stdin_used+0x575>
    4501:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    4504:	61                   	(bad)
    4505:	72 2a                	jb     4531 <_IO_stdin_used+0x531>
    4507:	2c 20                	sub    al,0x20
    4509:	75 69                	jne    4574 <_IO_stdin_used+0x574>
    450b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    450c:	74 33                	je     4541 <_IO_stdin_used+0x541>
    450e:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4511:	29 00                	sub    DWORD PTR [rax],eax
    4513:	00 00                	add    BYTE PTR [rax],al
    4515:	00 00                	add    BYTE PTR [rax],al
    4517:	00 0a                	add    BYTE PTR [rdx],cl
    4519:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    451e:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4523:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4528:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    452d:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4532:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4537:	00 2d 2d 2d 2d 2d    	add    BYTE PTR [rip+0x2d2d2d2d],ch        # 2d2d726a <_end+0x2d2d1252>
    453d:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4542:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4547:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    454c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4551:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4556:	00 00                	add    BYTE PTR [rax],al
    4558:	70 6c                	jo     45c6 <_IO_stdin_used+0x5c6>
    455a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    455b:	74 2f                	je     458c <_IO_stdin_used+0x58c>
    455d:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4560:	33 32                	xor    esi,DWORD PTR [rdx]
    4562:	2f                   	(bad)
    4563:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4566:	33 32                	xor    esi,DWORD PTR [rdx]
    4568:	5f                   	pop    rdi
    4569:	73 65                	jae    45d0 <_IO_stdin_used+0x5d0>
    456b:	61                   	(bad)
    456c:	72 63                	jb     45d1 <_IO_stdin_used+0x5d1>
    456e:	68 5f 74 69 6d       	push   0x6d69745f
    4573:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    4580:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4585:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    458a:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    458f:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4594:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4599:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    459e:	00 00                	add    BYTE PTR [rax],al
    45a0:	70 6c                	jo     460e <_IO_stdin_used+0x60e>
    45a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45a3:	74 2f                	je     45d4 <_IO_stdin_used+0x5d4>
    45a5:	5f                   	pop    rdi
    45a6:	6d                   	ins    DWORD PTR es:[rdi],dx
    45a7:	6d                   	ins    DWORD PTR es:[rdi],dx
    45a8:	5f                   	pop    rdi
    45a9:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45ac:	33 32                	xor    esi,DWORD PTR [rdx]
    45ae:	2f                   	(bad)
    45af:	5f                   	pop    rdi
    45b0:	6d                   	ins    DWORD PTR es:[rdi],dx
    45b1:	6d                   	ins    DWORD PTR es:[rdi],dx
    45b2:	5f                   	pop    rdi
    45b3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45b6:	33 32                	xor    esi,DWORD PTR [rdx]
    45b8:	5f                   	pop    rdi
    45b9:	73 65                	jae    4620 <_IO_stdin_used+0x620>
    45bb:	61                   	(bad)
    45bc:	72 63                	jb     4621 <_IO_stdin_used+0x621>
    45be:	68 5f 74 69 6d       	push   0x6d69745f
    45c3:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    45d0:	70 6c                	jo     463e <_IO_stdin_used+0x63e>
    45d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45d3:	74 2f                	je     4604 <_IO_stdin_used+0x604>
    45d5:	6d                   	ins    DWORD PTR es:[rdi],dx
    45d6:	75 72                	jne    464a <_IO_stdin_used+0x64a>
    45d8:	6d                   	ins    DWORD PTR es:[rdi],dx
    45d9:	75 72                	jne    464d <_IO_stdin_used+0x64d>
    45db:	32 2f                	xor    ch,BYTE PTR [rdi]
    45dd:	6d                   	ins    DWORD PTR es:[rdi],dx
    45de:	75 72                	jne    4652 <_IO_stdin_used+0x652>
    45e0:	6d                   	ins    DWORD PTR es:[rdi],dx
    45e1:	75 72                	jne    4655 <_IO_stdin_used+0x655>
    45e3:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    45e6:	65 61                	gs (bad)
    45e8:	72 63                	jb     464d <_IO_stdin_used+0x64d>
    45ea:	68 5f 74 69 6d       	push   0x6d69745f
    45ef:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    45f4:	00 00                	add    BYTE PTR [rax],al
    45f6:	00 00                	add    BYTE PTR [rax],al
    45f8:	70 6c                	jo     4666 <_IO_stdin_used+0x666>
    45fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45fb:	74 2f                	je     462c <_IO_stdin_used+0x62c>
    45fd:	61                   	(bad)
    45fe:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    4600:	65 72 33             	gs jb  4636 <_IO_stdin_used+0x636>
    4603:	32 2f                	xor    ch,BYTE PTR [rdi]
    4605:	61                   	(bad)
    4606:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    4608:	65 72 33             	gs jb  463e <_IO_stdin_used+0x63e>
    460b:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    460e:	65 61                	gs (bad)
    4610:	72 63                	jb     4675 <_IO_stdin_used+0x675>
    4612:	68 5f 74 69 6d       	push   0x6d69745f
    4617:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    461c:	00 00                	add    BYTE PTR [rax],al
    461e:	00 00                	add    BYTE PTR [rax],al
    4620:	70 6c                	jo     468e <_IO_stdin_used+0x68e>
    4622:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4623:	74 2f                	je     4654 <_IO_stdin_used+0x654>
    4625:	5f                   	pop    rdi
    4626:	6d                   	ins    DWORD PTR es:[rdi],dx
    4627:	6d                   	ins    DWORD PTR es:[rdi],dx
    4628:	5f                   	pop    rdi
    4629:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    462c:	33 32                	xor    esi,DWORD PTR [rdx]
    462e:	55                   	push   rbp
    462f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4630:	72 6f                	jb     46a1 <_IO_stdin_used+0x6a1>
    4632:	6c                   	ins    BYTE PTR es:[rdi],dx
    4633:	6c                   	ins    BYTE PTR es:[rdi],dx
    4634:	2f                   	(bad)
    4635:	5f                   	pop    rdi
    4636:	6d                   	ins    DWORD PTR es:[rdi],dx
    4637:	6d                   	ins    DWORD PTR es:[rdi],dx
    4638:	5f                   	pop    rdi
    4639:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    463c:	33 32                	xor    esi,DWORD PTR [rdx]
    463e:	55                   	push   rbp
    463f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4640:	72 6f                	jb     46b1 <__GNU_EH_FRAME_HDR+0x1>
    4642:	6c                   	ins    BYTE PTR es:[rdi],dx
    4643:	6c                   	ins    BYTE PTR es:[rdi],dx
    4644:	5f                   	pop    rdi
    4645:	73 65                	jae    46ac <_IO_stdin_used+0x6ac>
    4647:	61                   	(bad)
    4648:	72 63                	jb     46ad <_IO_stdin_used+0x6ad>
    464a:	68 5f 74 69 6d       	push   0x6d69745f
    464f:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4654:	00 00                	add    BYTE PTR [rax],al
    4656:	00 00                	add    BYTE PTR [rax],al
    4658:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    465a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    465b:	61                   	(bad)
    465c:	74 20                	je     467e <_IO_stdin_used+0x67e>
    465e:	73 74                	jae    46d4 <__GNU_EH_FRAME_HDR+0x24>
    4660:	61                   	(bad)
    4661:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4662:	64 61                	fs (bad)
    4664:	72 74                	jb     46da <__GNU_EH_FRAME_HDR+0x2a>
    4666:	44                   	rex.R
    4667:	65 76 69             	gs jbe 46d3 <__GNU_EH_FRAME_HDR+0x23>
    466a:	61                   	(bad)
    466b:	74 69                	je     46d6 <__GNU_EH_FRAME_HDR+0x26>
    466d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    466e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    466f:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    4671:	6c                   	ins    BYTE PTR es:[rdi],dx
    4672:	6c                   	ins    BYTE PTR es:[rdi],dx
    4673:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    467a:	48 61                	rex.W (bad)
    467c:	73 68                	jae    46e6 <__GNU_EH_FRAME_HDR+0x36>
    467e:	4d 61                	rex.WRB (bad)
    4680:	70 2a                	jo     46ac <_IO_stdin_used+0x6ac>
    4682:	2c 20                	sub    al,0x20
    4684:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    4686:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4687:	61                   	(bad)
    4688:	74 29                	je     46b3 <__GNU_EH_FRAME_HDR+0x3>
    468a:	00 00                	add    BYTE PTR [rax],al
    468c:	00 00                	add    BYTE PTR [rax],al
    468e:	00 00                	add    BYTE PTR [rax],al
    4690:	02 00                	add    al,BYTE PTR [rax]
    4692:	00 00                	add    BYTE PTR [rax],al
    4694:	01 00                	add    DWORD PTR [rax],eax
    4696:	00 00                	add    BYTE PTR [rax],al
    4698:	03 00                	add    eax,DWORD PTR [rax]
    469a:	00 00                	add    BYTE PTR [rax],al
    469c:	02 00                	add    al,BYTE PTR [rax]
    469e:	00 00                	add    BYTE PTR [rax],al
    46a0:	04 00                	add    al,0x0
    46a2:	00 00                	add    BYTE PTR [rax],al
    46a4:	03 00                	add    eax,DWORD PTR [rax]
	...
    46ae:	59                   	pop    rcx
    46af:	40                   	rex

Disassembly of section .eh_frame_hdr:

00000000000046b0 <__GNU_EH_FRAME_HDR>:
    46b0:	01 1b                	add    DWORD PTR [rbx],ebx
    46b2:	03 3b                	add    edi,DWORD PTR [rbx]
    46b4:	14 01                	adc    al,0x1
    46b6:	00 00                	add    BYTE PTR [rax],al
    46b8:	21 00                	and    DWORD PTR [rax],eax
    46ba:	00 00                	add    BYTE PTR [rax],al
    46bc:	70 c9                	jo     4687 <_IO_stdin_used+0x687>
    46be:	ff                   	(bad)
    46bf:	ff 48 01             	dec    DWORD PTR [rax+0x1]
    46c2:	00 00                	add    BYTE PTR [rax],al
    46c4:	10 cb                	adc    bl,cl
    46c6:	ff                   	(bad)
    46c7:	ff 70 01             	push   QWORD PTR [rax+0x1]
    46ca:	00 00                	add    BYTE PTR [rax],al
    46cc:	20 cb                	and    bl,cl
    46ce:	ff                   	(bad)
    46cf:	ff 88 01 00 00 60    	dec    DWORD PTR [rax+0x60000001]
    46d5:	cb                   	retf
    46d6:	ff                   	(bad)
    46d7:	ff 30                	push   QWORD PTR [rax]
    46d9:	01 00                	add    DWORD PTR [rax],eax
    46db:	00 50 cc             	add    BYTE PTR [rax-0x34],dl
    46de:	ff                   	(bad)
    46df:	ff a8 01 00 00 10    	jmp    FWORD PTR [rax+0x10000001]
    46e5:	ce                   	(bad)
    46e6:	ff                   	(bad)
    46e7:	ff                   	call   (bad)
    46e8:	d8 01                	fadd   DWORD PTR [rcx]
    46ea:	00 00                	add    BYTE PTR [rax],al
    46ec:	c0 ce ff             	ror    dh,0xff
    46ef:	ff 04 02             	inc    DWORD PTR [rdx+rax*1]
    46f2:	00 00                	add    BYTE PTR [rax],al
    46f4:	90                   	nop
    46f5:	cf                   	iret
    46f6:	ff                   	(bad)
    46f7:	ff                   	(bad)
    46f8:	38 02                	cmp    BYTE PTR [rdx],al
    46fa:	00 00                	add    BYTE PTR [rax],al
    46fc:	70 d0                	jo     46ce <__GNU_EH_FRAME_HDR+0x1e>
    46fe:	ff                   	(bad)
    46ff:	ff                   	(bad)
    4700:	78 02                	js     4704 <__GNU_EH_FRAME_HDR+0x54>
    4702:	00 00                	add    BYTE PTR [rax],al
    4704:	40 d1 ff             	rex sar edi,1
    4707:	ff 98 02 00 00 70    	call   FWORD PTR [rax+0x70000002]
    470d:	d1 ff                	sar    edi,1
    470f:	ff ac 02 00 00 e0 d1 	jmp    FWORD PTR [rdx+rax*1-0x2e200000]
    4716:	ff                   	(bad)
    4717:	ff                   	call   (bad)
    4718:	d8 02                	fadd   DWORD PTR [rdx]
    471a:	00 00                	add    BYTE PTR [rax],al
    471c:	30 d4                	xor    ah,dl
    471e:	ff                   	(bad)
    471f:	ff 20                	jmp    QWORD PTR [rax]
    4721:	03 00                	add    eax,DWORD PTR [rax]
    4723:	00 40 d4             	add    BYTE PTR [rax-0x2c],al
    4726:	ff                   	(bad)
    4727:	ff 34 03             	push   QWORD PTR [rbx+rax*1]
    472a:	00 00                	add    BYTE PTR [rax],al
    472c:	50                   	push   rax
    472d:	d4                   	(bad)
    472e:	ff                   	(bad)
    472f:	ff 48 03             	dec    DWORD PTR [rax+0x3]
    4732:	00 00                	add    BYTE PTR [rax],al
    4734:	b0 d4                	mov    al,0xd4
    4736:	ff                   	(bad)
    4737:	ff 5c 03 00          	call   FWORD PTR [rbx+rax*1+0x0]
    473b:	00 c0                	add    al,al
    473d:	d4                   	(bad)
    473e:	ff                   	(bad)
    473f:	ff 70 03             	push   QWORD PTR [rax+0x3]
    4742:	00 00                	add    BYTE PTR [rax],al
    4744:	d0 d4                	rcl    ah,1
    4746:	ff                   	(bad)
    4747:	ff 84 03 00 00 e0 d6 	inc    DWORD PTR [rbx+rax*1-0x29200000]
    474e:	ff                   	(bad)
    474f:	ff 98 03 00 00 f0    	call   FWORD PTR [rax-0xffffffd]
    4755:	d7                   	xlat   BYTE PTR ds:[rbx]
    4756:	ff                   	(bad)
    4757:	ff b0 03 00 00 20    	push   QWORD PTR [rax+0x20000003]
    475d:	d8 ff                	fdivr  st,st(7)
    475f:	ff cc                	dec    esp
    4761:	03 00                	add    eax,DWORD PTR [rax]
    4763:	00 90 d8 ff ff e8    	add    BYTE PTR [rax-0x17000028],dl
    4769:	03 00                	add    eax,DWORD PTR [rax]
    476b:	00 30                	add    BYTE PTR [rax],dh
    476d:	da ff                	(bad)
    476f:	ff 24 04             	jmp    QWORD PTR [rsp+rax*1]
    4772:	00 00                	add    BYTE PTR [rax],al
    4774:	00 db                	add    bl,bl
    4776:	ff                   	(bad)
    4777:	ff 48 04             	dec    DWORD PTR [rax+0x4]
    477a:	00 00                	add    BYTE PTR [rax],al
    477c:	60                   	(bad)
    477d:	db ff                	(bad)
    477f:	ff 64 04 00          	jmp    QWORD PTR [rsp+rax*1+0x0]
    4783:	00 a0 db ff ff 80    	add    BYTE PTR [rax-0x7f000025],ah
    4789:	04 00                	add    al,0x0
    478b:	00 b0 dc ff ff a8    	add    BYTE PTR [rax-0x57000024],dh
    4791:	04 00                	add    al,0x0
    4793:	00 20                	add    BYTE PTR [rax],ah
    4795:	dd ff                	(bad)
    4797:	ff                   	call   (bad)
    4798:	d8 04 00             	fadd   DWORD PTR [rax+rax*1]
    479b:	00 90 e1 ff ff 20    	add    BYTE PTR [rax+0x20ffffe1],dl
    47a1:	05 00 00 50 e6       	add    eax,0xe6500000
    47a6:	ff                   	(bad)
    47a7:	ff 6c 05 00          	jmp    FWORD PTR [rbp+rax*1+0x0]
    47ab:	00 c0                	add    al,al
    47ad:	e6 ff                	out    0xff,al
    47af:	ff b4 05 00 00 90 ee 	push   QWORD PTR [rbp+rax*1-0x11700000]
    47b6:	ff                   	(bad)
    47b7:	ff 00                	inc    DWORD PTR [rax]
    47b9:	06                   	(bad)
    47ba:	00 00                	add    BYTE PTR [rax],al
    47bc:	f0 ef                	lock out dx,eax
    47be:	ff                   	(bad)
    47bf:	ff 30                	push   QWORD PTR [rax]
    47c1:	06                   	(bad)
	...

Disassembly of section .eh_frame:

00000000000047c8 <__FRAME_END__-0x56c>:
    47c8:	14 00                	adc    al,0x0
    47ca:	00 00                	add    BYTE PTR [rax],al
    47cc:	00 00                	add    BYTE PTR [rax],al
    47ce:	00 00                	add    BYTE PTR [rax],al
    47d0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    47d3:	00 01                	add    BYTE PTR [rcx],al
    47d5:	78 10                	js     47e7 <__GNU_EH_FRAME_HDR+0x137>
    47d7:	01 1b                	add    DWORD PTR [rbx],ebx
    47d9:	0c 07                	or     al,0x7
    47db:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    47e1:	00 00                	add    BYTE PTR [rax],al
    47e3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    47e6:	00 00                	add    BYTE PTR [rax],al
    47e8:	28 ca                	sub    dl,cl
    47ea:	ff                   	(bad)
    47eb:	ff 26                	jmp    QWORD PTR [rsi]
    47ed:	00 00                	add    BYTE PTR [rax],al
    47ef:	00 00                	add    BYTE PTR [rax],al
    47f1:	44 07                	rex.R (bad)
    47f3:	10 00                	adc    BYTE PTR [rax],al
    47f5:	00 00                	add    BYTE PTR [rax],al
    47f7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    47fa:	00 00                	add    BYTE PTR [rax],al
    47fc:	34 00                	xor    al,0x0
    47fe:	00 00                	add    BYTE PTR [rax],al
    4800:	20 c8                	and    al,cl
    4802:	ff                   	(bad)
    4803:	ff a0 01 00 00 00    	jmp    QWORD PTR [rax+0x1]
    4809:	0e                   	(bad)
    480a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    480d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    4810:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    4813:	80 00 3f             	add    BYTE PTR [rax],0x3f
    4816:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    4818:	2a 33                	sub    dh,BYTE PTR [rbx]
    481a:	24 22                	and    al,0x22
    481c:	00 00                	add    BYTE PTR [rax],al
    481e:	00 00                	add    BYTE PTR [rax],al
    4820:	14 00                	adc    al,0x0
    4822:	00 00                	add    BYTE PTR [rax],al
    4824:	5c                   	pop    rsp
    4825:	00 00                	add    BYTE PTR [rax],al
    4827:	00 98 c9 ff ff 08    	add    BYTE PTR [rax+0x8ffffc9],bl
	...
    4835:	00 00                	add    BYTE PTR [rax],al
    4837:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    483a:	00 00                	add    BYTE PTR [rax],al
    483c:	74 00                	je     483e <__GNU_EH_FRAME_HDR+0x18e>
    483e:	00 00                	add    BYTE PTR [rax],al
    4840:	90                   	nop
    4841:	c9                   	leave
    4842:	ff                   	(bad)
    4843:	ff 33                	push   QWORD PTR [rbx]
    4845:	00 00                	add    BYTE PTR [rax],al
    4847:	00 00                	add    BYTE PTR [rax],al
    4849:	45 0e                	rex.RB (bad)
    484b:	10 83 02 6d 0e 08    	adc    BYTE PTR [rbx+0x80e6d02],al
    4851:	00 00                	add    BYTE PTR [rax],al
    4853:	00 00                	add    BYTE PTR [rax],al
    4855:	00 00                	add    BYTE PTR [rax],al
    4857:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
    485a:	00 00                	add    BYTE PTR [rax],al
    485c:	94                   	xchg   esp,eax
    485d:	00 00                	add    BYTE PTR [rax],al
    485f:	00 a0 ca ff ff bd    	add    BYTE PTR [rax-0x42000036],ah
    4865:	01 00                	add    DWORD PTR [rax],eax
    4867:	00 00                	add    BYTE PTR [rax],al
    4869:	45 0e                	rex.RB (bad)
    486b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4871:	51                   	push   rcx
    4872:	8f 03                	pop    QWORD PTR [rbx]
    4874:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    487b:	07                   	(bad)
    487c:	03 65 01             	add    esp,DWORD PTR [rbp+0x1]
    487f:	0a 0c 07             	or     cl,BYTE PTR [rdi+rax*1]
    4882:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4885:	00 00                	add    BYTE PTR [rax],al
    4887:	00 28                	add    BYTE PTR [rax],ch
    4889:	00 00                	add    BYTE PTR [rax],al
    488b:	00 c4                	add    ah,al
    488d:	00 00                	add    BYTE PTR [rax],al
    488f:	00 30                	add    BYTE PTR [rax],dh
    4891:	cc                   	int3
    4892:	ff                   	(bad)
    4893:	ff a9 00 00 00 00    	jmp    FWORD PTR [rcx+0x0]
    4899:	45 0e                	rex.RB (bad)
    489b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    48a1:	42 8e 03             	rex.X mov es,WORD PTR [rbx]
    48a4:	47 8d 04 8c          	lea    r8d,[r12+r9*4]
    48a8:	05 4c 83 06 02       	add    eax,0x206834c
    48ad:	86 0a                	xchg   BYTE PTR [rdx],cl
    48af:	0c 07                	or     al,0x7
    48b1:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    48b4:	30 00                	xor    BYTE PTR [rax],al
    48b6:	00 00                	add    BYTE PTR [rax],al
    48b8:	f0 00 00             	lock add BYTE PTR [rax],al
    48bb:	00 b4 cc ff ff cd 00 	add    BYTE PTR [rsp+rcx*8+0xcdffff],dh
    48c2:	00 00                	add    BYTE PTR [rax],al
    48c4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    48c7:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    48cd:	83 03 44             	add    DWORD PTR [rbx],0x44
    48d0:	0e                   	(bad)
    48d1:	20 4d 0e             	and    BYTE PTR [rbp+0xe],cl
    48d4:	60                   	(bad)
    48d5:	02 67 0e             	add    ah,BYTE PTR [rdi+0xe]
    48d8:	20 6b 0a             	and    BYTE PTR [rbx+0xa],ch
    48db:	0e                   	(bad)
    48dc:	18 43 0e             	sbb    BYTE PTR [rbx+0xe],al
    48df:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    48e2:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    48e5:	00 00                	add    BYTE PTR [rax],al
    48e7:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
    48ea:	00 00                	add    BYTE PTR [rax],al
    48ec:	24 01                	and    al,0x1
    48ee:	00 00                	add    BYTE PTR [rax],al
    48f0:	50                   	push   rax
    48f1:	cd ff                	int    0xff
    48f3:	ff                   	call   (bad)
    48f4:	db 00                	fild   DWORD PTR [rax]
    48f6:	00 00                	add    BYTE PTR [rax],al
    48f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    48fb:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    4901:	83 03 44             	add    DWORD PTR [rbx],0x44
    4904:	0e                   	(bad)
    4905:	20 4d 0e             	and    BYTE PTR [rbp+0xe],cl
    4908:	60                   	(bad)
    4909:	02 67 0e             	add    ah,BYTE PTR [rdi+0xe]
    490c:	20 6c 0a 0e          	and    BYTE PTR [rdx+rcx*1+0xe],ch
    4910:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4913:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    4916:	08 44 0b 47          	or     BYTE PTR [rbx+rcx*1+0x47],al
    491a:	0a 0e                	or     cl,BYTE PTR [rsi]
    491c:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    491f:	10 43 0e             	adc    BYTE PTR [rbx+0xe],al
    4922:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4925:	00 00                	add    BYTE PTR [rax],al
    4927:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    492a:	00 00                	add    BYTE PTR [rax],al
    492c:	64 01 00             	add    DWORD PTR fs:[rax],eax
    492f:	00 f0                	add    al,dh
    4931:	cd ff                	int    0xff
    4933:	ff c6                	inc    esi
    4935:	00 00                	add    BYTE PTR [rax],al
    4937:	00 00                	add    BYTE PTR [rax],al
    4939:	48 0e                	rex.W (bad)
    493b:	20 60 0e             	and    BYTE PTR [rax+0xe],ah
    493e:	60                   	(bad)
    493f:	02 7b 0e             	add    bh,BYTE PTR [rbx+0xe]
    4942:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
    4945:	20 00                	and    BYTE PTR [rax],al
    4947:	00 10                	add    BYTE PTR [rax],dl
    4949:	00 00                	add    BYTE PTR [rax],al
    494b:	00 84 01 00 00 a0 ce 	add    BYTE PTR [rcx+rax*1-0x31600000],al
    4952:	ff                   	(bad)
    4953:	ff 2f                	jmp    FWORD PTR [rdi]
    4955:	00 00                	add    BYTE PTR [rax],al
    4957:	00 00                	add    BYTE PTR [rax],al
    4959:	50                   	push   rax
    495a:	0e                   	(bad)
    495b:	10 28                	adc    BYTE PTR [rax],ch
    495d:	00 00                	add    BYTE PTR [rax],al
    495f:	00 98 01 00 00 bc    	add    BYTE PTR [rax-0x43ffffff],bl
    4965:	ce                   	(bad)
    4966:	ff                   	(bad)
    4967:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    496a:	00 00                	add    BYTE PTR [rax],al
    496c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    496f:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    4975:	83 03 44             	add    DWORD PTR [rbx],0x44
    4978:	0e                   	(bad)
    4979:	20 78 0a             	and    BYTE PTR [rax+0xa],bh
    497c:	0e                   	(bad)
    497d:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4980:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    4983:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4986:	00 00                	add    BYTE PTR [rax],al
    4988:	44 00 00             	add    BYTE PTR [rax],r8b
    498b:	00 c4                	add    ah,al
    498d:	01 00                	add    DWORD PTR [rax],eax
    498f:	00 00                	add    BYTE PTR [rax],al
    4991:	cf                   	iret
    4992:	ff                   	(bad)
    4993:	ff 44 02 00          	inc    DWORD PTR [rdx+rax*1+0x0]
    4997:	00 00                	add    BYTE PTR [rax],al
    4999:	49 0c 0a             	rex.WB or al,0xa
    499c:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    49a0:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    49a3:	4a 0f 03 76 58       	rex.WX lsl rsi,WORD PTR [rsi+0x58]
    49a8:	06                   	(bad)
    49a9:	10 0f                	adc    BYTE PTR [rdi],cl
    49ab:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    49ae:	10 0e                	adc    BYTE PTR [rsi],cl
    49b0:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    49b3:	10 0d 02 76 68 10    	adc    BYTE PTR [rip+0x10687602],cl        # 1068bfbb <_end+0x10685fa3>
    49b9:	0c 02                	or     al,0x2
    49bb:	76 60                	jbe    4a1d <__GNU_EH_FRAME_HDR+0x36d>
    49bd:	48 10 03             	rex.W adc BYTE PTR [rbx],al
    49c0:	02 76 50             	add    dh,BYTE PTR [rsi+0x50]
    49c3:	03 eb                	add    ebp,ebx
    49c5:	01 0a                	add    DWORD PTR [rdx],ecx
    49c7:	0c 0a                	or     al,0xa
    49c9:	00 4d 0c             	add    BYTE PTR [rbp+0xc],cl
    49cc:	07                   	(bad)
    49cd:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    49d0:	10 00                	adc    BYTE PTR [rax],al
    49d2:	00 00                	add    BYTE PTR [rax],al
    49d4:	0c 02                	or     al,0x2
    49d6:	00 00                	add    BYTE PTR [rax],al
    49d8:	08 d1                	or     cl,dl
    49da:	ff                   	(bad)
    49db:	ff 07                	inc    DWORD PTR [rdi]
    49dd:	00 00                	add    BYTE PTR [rax],al
    49df:	00 00                	add    BYTE PTR [rax],al
    49e1:	00 00                	add    BYTE PTR [rax],al
    49e3:	00 10                	add    BYTE PTR [rax],dl
    49e5:	00 00                	add    BYTE PTR [rax],al
    49e7:	00 20                	add    BYTE PTR [rax],ah
    49e9:	02 00                	add    al,BYTE PTR [rax]
    49eb:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    49ee:	ff                   	(bad)
    49ef:	ff 07                	inc    DWORD PTR [rdi]
    49f1:	00 00                	add    BYTE PTR [rax],al
    49f3:	00 00                	add    BYTE PTR [rax],al
    49f5:	00 00                	add    BYTE PTR [rax],al
    49f7:	00 10                	add    BYTE PTR [rax],dl
    49f9:	00 00                	add    BYTE PTR [rax],al
    49fb:	00 34 02             	add    BYTE PTR [rdx+rax*1],dh
    49fe:	00 00                	add    BYTE PTR [rax],al
    4a00:	00 d1                	add    cl,dl
    4a02:	ff                   	(bad)
    4a03:	ff 59 00             	call   FWORD PTR [rcx+0x0]
    4a06:	00 00                	add    BYTE PTR [rax],al
    4a08:	00 00                	add    BYTE PTR [rax],al
    4a0a:	00 00                	add    BYTE PTR [rax],al
    4a0c:	10 00                	adc    BYTE PTR [rax],al
    4a0e:	00 00                	add    BYTE PTR [rax],al
    4a10:	48 02 00             	rex.W add al,BYTE PTR [rax]
    4a13:	00 4c d1 ff          	add    BYTE PTR [rcx+rdx*8-0x1],cl
    4a17:	ff 07                	inc    DWORD PTR [rdi]
    4a19:	00 00                	add    BYTE PTR [rax],al
    4a1b:	00 00                	add    BYTE PTR [rax],al
    4a1d:	00 00                	add    BYTE PTR [rax],al
    4a1f:	00 10                	add    BYTE PTR [rax],dl
    4a21:	00 00                	add    BYTE PTR [rax],al
    4a23:	00 5c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],bl
    4a27:	00 48 d1             	add    BYTE PTR [rax-0x2f],cl
    4a2a:	ff                   	(bad)
    4a2b:	ff 07                	inc    DWORD PTR [rdi]
    4a2d:	00 00                	add    BYTE PTR [rax],al
    4a2f:	00 00                	add    BYTE PTR [rax],al
    4a31:	00 00                	add    BYTE PTR [rax],al
    4a33:	00 10                	add    BYTE PTR [rax],dl
    4a35:	00 00                	add    BYTE PTR [rax],al
    4a37:	00 70 02             	add    BYTE PTR [rax+0x2],dh
    4a3a:	00 00                	add    BYTE PTR [rax],al
    4a3c:	44 d1 ff             	rex.R sar edi,1
    4a3f:	ff 06                	inc    DWORD PTR [rsi]
    4a41:	02 00                	add    al,BYTE PTR [rax]
    4a43:	00 00                	add    BYTE PTR [rax],al
    4a45:	00 00                	add    BYTE PTR [rax],al
    4a47:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    4a4a:	00 00                	add    BYTE PTR [rax],al
    4a4c:	84 02                	test   BYTE PTR [rdx],al
    4a4e:	00 00                	add    BYTE PTR [rax],al
    4a50:	40 d3 ff             	rex sar edi,cl
    4a53:	ff 05 01 00 00 00    	inc    DWORD PTR [rip+0x1]        # 4a5a <__GNU_EH_FRAME_HDR+0x3aa>
    4a59:	00 00                	add    BYTE PTR [rax],al
    4a5b:	00 00                	add    BYTE PTR [rax],al
    4a5d:	00 00                	add    BYTE PTR [rax],al
    4a5f:	00 18                	add    BYTE PTR [rax],bl
    4a61:	00 00                	add    BYTE PTR [rax],al
    4a63:	00 9c 02 00 00 38 d4 	add    BYTE PTR [rdx+rax*1-0x2bc80000],bl
    4a6a:	ff                   	(bad)
    4a6b:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 4a71 <__GNU_EH_FRAME_HDR+0x3c1>
    4a71:	41 0e                	rex.B (bad)
    4a73:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    4a76:	08 5e 0e             	or     BYTE PTR [rsi+0xe],bl
    4a79:	10 00                	adc    BYTE PTR [rax],al
    4a7b:	00 18                	add    BYTE PTR [rax],bl
    4a7d:	00 00                	add    BYTE PTR [rax],al
    4a7f:	00 b8 02 00 00 4c    	add    BYTE PTR [rax+0x4c000002],bh
    4a85:	d4                   	(bad)
    4a86:	ff                   	(bad)
    4a87:	ff 63 00             	jmp    QWORD PTR [rbx+0x0]
    4a8a:	00 00                	add    BYTE PTR [rax],al
    4a8c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    4a8f:	10 83 02 02 5d 0e    	adc    BYTE PTR [rbx+0xe5d0202],al
    4a95:	08 00                	or     BYTE PTR [rax],al
    4a97:	00 38                	add    BYTE PTR [rax],bh
    4a99:	00 00                	add    BYTE PTR [rax],al
    4a9b:	00 d4                	add    ah,dl
    4a9d:	02 00                	add    al,BYTE PTR [rax]
    4a9f:	00 a0 d4 ff ff 96    	add    BYTE PTR [rax-0x6900002c],ah
    4aa5:	01 00                	add    DWORD PTR [rax],eax
    4aa7:	00 00                	add    BYTE PTR [rax],al
    4aa9:	46 0e                	rex.RX (bad)
    4aab:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4ab2:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4ab5:	20 83 04 02 f0 0a    	and    BYTE PTR [rbx+0xaf00204],al
    4abb:	0e                   	(bad)
    4abc:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4abf:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4ac2:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4ac5:	02 67 0a             	add    ah,BYTE PTR [rdi+0xa]
    4ac8:	0e                   	(bad)
    4ac9:	18 43 0e             	sbb    BYTE PTR [rbx+0xe],al
    4acc:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4acf:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4ad2:	00 00                	add    BYTE PTR [rax],al
    4ad4:	20 00                	and    BYTE PTR [rax],al
    4ad6:	00 00                	add    BYTE PTR [rax],al
    4ad8:	10 03                	adc    BYTE PTR [rbx],al
    4ada:	00 00                	add    BYTE PTR [rax],al
    4adc:	04 d6                	add    al,0xd6
    4ade:	ff                   	(bad)
    4adf:	ff cd                	dec    ebp
    4ae1:	00 00                	add    BYTE PTR [rax],al
    4ae3:	00 00                	add    BYTE PTR [rax],al
    4ae5:	48 0e                	rex.W (bad)
    4ae7:	20 02                	and    BYTE PTR [rdx],al
    4ae9:	59                   	pop    rcx
    4aea:	0a 0e                	or     cl,BYTE PTR [rsi]
    4aec:	08 47 0b             	or     BYTE PTR [rdi+0xb],al
    4aef:	02 45 0a             	add    al,BYTE PTR [rbp+0xa]
    4af2:	0e                   	(bad)
    4af3:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4af6:	00 00                	add    BYTE PTR [rax],al
    4af8:	18 00                	sbb    BYTE PTR [rax],al
    4afa:	00 00                	add    BYTE PTR [rax],al
    4afc:	34 03                	xor    al,0x3
    4afe:	00 00                	add    BYTE PTR [rax],al
    4b00:	b0 d6                	mov    al,0xd6
    4b02:	ff                   	(bad)
    4b03:	ff 5f 00             	call   FWORD PTR [rdi+0x0]
    4b06:	00 00                	add    BYTE PTR [rax],al
    4b08:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    4b0b:	20 02                	and    BYTE PTR [rdx],al
    4b0d:	4d 0a 0e             	rex.WRB or r9b,BYTE PTR [r14]
    4b10:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b13:	00 18                	add    BYTE PTR [rax],bl
    4b15:	00 00                	add    BYTE PTR [rax],al
    4b17:	00 50 03             	add    BYTE PTR [rax+0x3],dl
    4b1a:	00 00                	add    BYTE PTR [rax],al
    4b1c:	f4                   	hlt
    4b1d:	d6                   	(bad)
    4b1e:	ff                   	(bad)
    4b1f:	ff                   	(bad)
    4b20:	3e 00 00             	ds add BYTE PTR [rax],al
    4b23:	00 00                	add    BYTE PTR [rax],al
    4b25:	45 0e                	rex.RB (bad)
    4b27:	10 83 02 59 0a 0e    	adc    BYTE PTR [rbx+0xe0a5902],al
    4b2d:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b30:	24 00                	and    al,0x0
    4b32:	00 00                	add    BYTE PTR [rax],al
    4b34:	6c                   	ins    BYTE PTR es:[rdi],dx
    4b35:	03 00                	add    eax,DWORD PTR [rax]
    4b37:	00 18                	add    BYTE PTR [rax],bl
    4b39:	d7                   	xlat   BYTE PTR ds:[rbx]
    4b3a:	ff                   	(bad)
    4b3b:	ff 08                	dec    DWORD PTR [rax]
    4b3d:	01 00                	add    DWORD PTR [rax],eax
    4b3f:	00 00                	add    BYTE PTR [rax],al
    4b41:	45 0e                	rex.RB (bad)
    4b43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4b49:	4c 8d 03             	lea    r8,[rbx]
    4b4c:	8c 04 83             	mov    WORD PTR [rbx+rax*4],es
    4b4f:	05 02 c1 0a 0c       	add    eax,0xc0ac102
    4b54:	07                   	(bad)
    4b55:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4b58:	2c 00                	sub    al,0x0
    4b5a:	00 00                	add    BYTE PTR [rax],al
    4b5c:	94                   	xchg   esp,eax
    4b5d:	03 00                	add    eax,DWORD PTR [rax]
    4b5f:	00 00                	add    BYTE PTR [rax],al
    4b61:	d8 ff                	fdivr  st,st(7)
    4b63:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    4b66:	00 00                	add    BYTE PTR [rax],al
    4b68:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4b6b:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4b72:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4b75:	20 83 04 77 0a 0e    	and    BYTE PTR [rbx+0xe0a7704],al
    4b7b:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4b7e:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b81:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b84:	00 00                	add    BYTE PTR [rax],al
    4b86:	00 00                	add    BYTE PTR [rax],al
    4b88:	44 00 00             	add    BYTE PTR [rax],r8b
    4b8b:	00 c4                	add    ah,al
    4b8d:	03 00                	add    eax,DWORD PTR [rax]
    4b8f:	00 40 d8             	add    BYTE PTR [rax-0x28],al
    4b92:	ff                   	(bad)
    4b93:	ff 63 04             	jmp    QWORD PTR [rbx+0x4]
    4b96:	00 00                	add    BYTE PTR [rax],al
    4b98:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4b9b:	0a 00                	or     al,BYTE PTR [rax]
    4b9d:	4c 10 06             	rex.WR adc BYTE PTR [rsi],r8b
    4ba0:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4ba3:	4a 0f 03 76 58       	rex.WX lsl rsi,WORD PTR [rsi+0x58]
    4ba8:	06                   	(bad)
    4ba9:	10 0f                	adc    BYTE PTR [rdi],cl
    4bab:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4bae:	10 0e                	adc    BYTE PTR [rsi],cl
    4bb0:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4bb3:	10 0d 02 76 68 10    	adc    BYTE PTR [rip+0x10687602],cl        # 1068c1bb <_end+0x106861a3>
    4bb9:	0c 02                	or     al,0x2
    4bbb:	76 60                	jbe    4c1d <__GNU_EH_FRAME_HDR+0x56d>
    4bbd:	45 10 03             	adc    BYTE PTR [r11],r8b
    4bc0:	02 76 50             	add    dh,BYTE PTR [rsi+0x50]
    4bc3:	03 dd                	add    ebx,ebp
    4bc5:	03 0a                	add    ecx,DWORD PTR [rdx]
    4bc7:	0c 0a                	or     al,0xa
    4bc9:	00 4d 0c             	add    BYTE PTR [rbp+0xc],cl
    4bcc:	07                   	(bad)
    4bcd:	08 42 0b             	or     BYTE PTR [rdx+0xb],al
    4bd0:	48 00 00             	rex.W add BYTE PTR [rax],al
    4bd3:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
    4bd6:	00 00                	add    BYTE PTR [rax],al
    4bd8:	68 dc ff ff b9       	push   0xffffffffb9ffffdc
    4bdd:	04 00                	add    al,0x0
    4bdf:	00 00                	add    BYTE PTR [rax],al
    4be1:	46 0e                	rex.RX (bad)
    4be3:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4be9:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4bed:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4bf0:	46 0f 03 76 68       	rex.RX lsl r14d,WORD PTR [rsi+0x68]
    4bf5:	06                   	(bad)
    4bf6:	10 0f                	adc    BYTE PTR [rdi],cl
    4bf8:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4bfb:	10 0e                	adc    BYTE PTR [rsi],cl
    4bfd:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4c00:	4d 10 0c 02          	rex.WRB adc BYTE PTR [r10+rax*1],r9b
    4c04:	76 60                	jbe    4c66 <__GNU_EH_FRAME_HDR+0x5b6>
    4c06:	10 03                	adc    BYTE PTR [rbx],al
    4c08:	02 76 58             	add    dh,BYTE PTR [rsi+0x58]
    4c0b:	03 d1                	add    edx,ecx
    4c0d:	03 0a                	add    ecx,DWORD PTR [rdx]
    4c0f:	0c 0d                	or     al,0xd
    4c11:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4c14:	07                   	(bad)
    4c15:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c18:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4c1b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    4c1f:	00 58 04             	add    BYTE PTR [rax+0x4],bl
    4c22:	00 00                	add    BYTE PTR [rax],al
    4c24:	dc e0                	fsubr  st(0),st
    4c26:	ff                   	(bad)
    4c27:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    4c2a:	00 00                	add    BYTE PTR [rax],al
    4c2c:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4c2f:	10 8f 02 49 0e 18    	adc    BYTE PTR [rdi+0x180e4902],cl
    4c35:	8e 03                	mov    es,WORD PTR [rbx]
    4c37:	45 0e                	rex.RB (bad)
    4c39:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    4c3f:	8c 05 44 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e44],es        # ffffffff86305a89 <_end+0xffffffff862ffa71>
    4c45:	06                   	(bad)
    4c46:	47 0e                	rex.RXB (bad)
    4c48:	38 83 07 44 0e 40    	cmp    BYTE PTR [rbx+0x400e4407],al
    4c4e:	68 0e 38 44 0e       	push   0xe44380e
    4c53:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4c56:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4c59:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4c5c:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4c5f:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c62:	08 00                	or     BYTE PTR [rax],al
    4c64:	48 00 00             	rex.W add BYTE PTR [rax],al
    4c67:	00 a0 04 00 00 04    	add    BYTE PTR [rax+0x4000004],ah
    4c6d:	e1 ff                	loope  4c6e <__GNU_EH_FRAME_HDR+0x5be>
    4c6f:	ff ce                	dec    esi
    4c71:	07                   	(bad)
    4c72:	00 00                	add    BYTE PTR [rax],al
    4c74:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4c77:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    4c7d:	8e 03                	mov    es,WORD PTR [rbx]
    4c7f:	42 0e                	rex.X (bad)
    4c81:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    4c87:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86305ace <_end+0xffffffff862ffab6>
    4c8d:	06                   	(bad)
    4c8e:	41 0e                	rex.B (bad)
    4c90:	38 83 07 44 0e 70    	cmp    BYTE PTR [rbx+0x700e4407],al
    4c96:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    4c99:	0a 0e                	or     cl,BYTE PTR [rsi]
    4c9b:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    4c9e:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4ca1:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4ca4:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4ca7:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4caa:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4cad:	08 43 0b             	or     BYTE PTR [rbx+0xb],al
    4cb0:	2c 00                	sub    al,0x0
    4cb2:	00 00                	add    BYTE PTR [rax],al
    4cb4:	ec                   	in     al,dx
    4cb5:	04 00                	add    al,0x0
    4cb7:	00 88 e8 ff ff 5b    	add    BYTE PTR [rax+0x5bffffe8],cl
    4cbd:	01 00                	add    DWORD PTR [rax],eax
    4cbf:	00 00                	add    BYTE PTR [rax],al
    4cc1:	49 0c 0a             	rex.WB or al,0xa
    4cc4:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4cc8:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4ccb:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4cd0:	06                   	(bad)
    4cd1:	02 f0                	add    dh,al
    4cd3:	0a 0c 0a             	or     cl,BYTE PTR [rdx+rcx*1]
    4cd6:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4cd9:	07                   	(bad)
    4cda:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4cdd:	00 00                	add    BYTE PTR [rax],al
    4cdf:	00 50 00             	add    BYTE PTR [rax+0x0],dl
    4ce2:	00 00                	add    BYTE PTR [rax],al
    4ce4:	1c 05                	sbb    al,0x5
    4ce6:	00 00                	add    BYTE PTR [rax],al
    4ce8:	b8 e9 ff ff 1c       	mov    eax,0x1cffffe9
    4ced:	03 00                	add    eax,DWORD PTR [rax]
    4cef:	00 00                	add    BYTE PTR [rax],al
    4cf1:	46 0e                	rex.RX (bad)
    4cf3:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4cf9:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4cfd:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4d00:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4d05:	06                   	(bad)
    4d06:	03 8b 02 0a 0c 0d    	add    ecx,DWORD PTR [rbx+0xd0c0a02]
    4d0c:	00 4a 0c             	add    BYTE PTR [rdx+0xc],cl
    4d0f:	07                   	(bad)
    4d10:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d13:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4d16:	49 0a 0c 0d 00 4a 0c 	rex.WB or cl,BYTE PTR [rcx*1+0x70c4a00]
    4d1d:	07 
    4d1e:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d21:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4d24:	55                   	push   rbp
    4d25:	0a 0c 0d 00 49 0c 07 	or     cl,BYTE PTR [rcx*1+0x70c4900]
    4d2c:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d2f:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
	...

0000000000004d34 <__FRAME_END__>:
    4d34:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000005cd8 <__frame_dummy_init_array_entry>:
    5cd8:	f0 12 00             	lock adc al,BYTE PTR [rax]
    5cdb:	00 00                	add    BYTE PTR [rax],al
    5cdd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000005ce0 <__do_global_dtors_aux_fini_array_entry>:
    5ce0:	b0 12                	mov    al,0x12
    5ce2:	00 00                	add    BYTE PTR [rax],al
    5ce4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000005ce8 <_DYNAMIC>:
    5ce8:	01 00                	add    DWORD PTR [rax],eax
    5cea:	00 00                	add    BYTE PTR [rax],al
    5cec:	00 00                	add    BYTE PTR [rax],al
    5cee:	00 00                	add    BYTE PTR [rax],al
    5cf0:	50                   	push   rax
    5cf1:	01 00                	add    DWORD PTR [rax],eax
    5cf3:	00 00                	add    BYTE PTR [rax],al
    5cf5:	00 00                	add    BYTE PTR [rax],al
    5cf7:	00 01                	add    BYTE PTR [rcx],al
    5cf9:	00 00                	add    BYTE PTR [rax],al
    5cfb:	00 00                	add    BYTE PTR [rax],al
    5cfd:	00 00                	add    BYTE PTR [rax],al
    5cff:	00 5f 01             	add    BYTE PTR [rdi+0x1],bl
    5d02:	00 00                	add    BYTE PTR [rax],al
    5d04:	00 00                	add    BYTE PTR [rax],al
    5d06:	00 00                	add    BYTE PTR [rax],al
    5d08:	01 00                	add    DWORD PTR [rax],eax
    5d0a:	00 00                	add    BYTE PTR [rax],al
    5d0c:	00 00                	add    BYTE PTR [rax],al
    5d0e:	00 00                	add    BYTE PTR [rax],al
    5d10:	69 01 00 00 00 00    	imul   eax,DWORD PTR [rcx],0x0
    5d16:	00 00                	add    BYTE PTR [rax],al
    5d18:	0c 00                	or     al,0x0
    5d1a:	00 00                	add    BYTE PTR [rax],al
    5d1c:	00 00                	add    BYTE PTR [rax],al
    5d1e:	00 00                	add    BYTE PTR [rax],al
    5d20:	00 10                	add    BYTE PTR [rax],dl
    5d22:	00 00                	add    BYTE PTR [rax],al
    5d24:	00 00                	add    BYTE PTR [rax],al
    5d26:	00 00                	add    BYTE PTR [rax],al
    5d28:	0d 00 00 00 00       	or     eax,0x0
    5d2d:	00 00                	add    BYTE PTR [rax],al
    5d2f:	00 d4                	add    ah,dl
    5d31:	39 00                	cmp    DWORD PTR [rax],eax
    5d33:	00 00                	add    BYTE PTR [rax],al
    5d35:	00 00                	add    BYTE PTR [rax],al
    5d37:	00 19                	add    BYTE PTR [rcx],bl
    5d39:	00 00                	add    BYTE PTR [rax],al
    5d3b:	00 00                	add    BYTE PTR [rax],al
    5d3d:	00 00                	add    BYTE PTR [rax],al
    5d3f:	00 d8                	add    al,bl
    5d41:	5c                   	pop    rsp
    5d42:	00 00                	add    BYTE PTR [rax],al
    5d44:	00 00                	add    BYTE PTR [rax],al
    5d46:	00 00                	add    BYTE PTR [rax],al
    5d48:	1b 00                	sbb    eax,DWORD PTR [rax]
    5d4a:	00 00                	add    BYTE PTR [rax],al
    5d4c:	00 00                	add    BYTE PTR [rax],al
    5d4e:	00 00                	add    BYTE PTR [rax],al
    5d50:	08 00                	or     BYTE PTR [rax],al
    5d52:	00 00                	add    BYTE PTR [rax],al
    5d54:	00 00                	add    BYTE PTR [rax],al
    5d56:	00 00                	add    BYTE PTR [rax],al
    5d58:	1a 00                	sbb    al,BYTE PTR [rax]
    5d5a:	00 00                	add    BYTE PTR [rax],al
    5d5c:	00 00                	add    BYTE PTR [rax],al
    5d5e:	00 00                	add    BYTE PTR [rax],al
    5d60:	e0 5c                	loopne 5dbe <_DYNAMIC+0xd6>
    5d62:	00 00                	add    BYTE PTR [rax],al
    5d64:	00 00                	add    BYTE PTR [rax],al
    5d66:	00 00                	add    BYTE PTR [rax],al
    5d68:	1c 00                	sbb    al,0x0
    5d6a:	00 00                	add    BYTE PTR [rax],al
    5d6c:	00 00                	add    BYTE PTR [rax],al
    5d6e:	00 00                	add    BYTE PTR [rax],al
    5d70:	08 00                	or     BYTE PTR [rax],al
    5d72:	00 00                	add    BYTE PTR [rax],al
    5d74:	00 00                	add    BYTE PTR [rax],al
    5d76:	00 00                	add    BYTE PTR [rax],al
    5d78:	f5                   	cmc
    5d79:	fe                   	(bad)
    5d7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5d7d:	00 00                	add    BYTE PTR [rax],al
    5d7f:	00 a0 03 00 00 00    	add    BYTE PTR [rax+0x3],ah
    5d85:	00 00                	add    BYTE PTR [rax],al
    5d87:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5d8d <_DYNAMIC+0xa5>
    5d8d:	00 00                	add    BYTE PTR [rax],al
    5d8f:	00 b0 06 00 00 00    	add    BYTE PTR [rax+0x6],dh
    5d95:	00 00                	add    BYTE PTR [rax],al
    5d97:	00 06                	add    BYTE PTR [rsi],al
    5d99:	00 00                	add    BYTE PTR [rax],al
    5d9b:	00 00                	add    BYTE PTR [rax],al
    5d9d:	00 00                	add    BYTE PTR [rax],al
    5d9f:	00 c8                	add    al,cl
    5da1:	03 00                	add    eax,DWORD PTR [rax]
    5da3:	00 00                	add    BYTE PTR [rax],al
    5da5:	00 00                	add    BYTE PTR [rax],al
    5da7:	00 0a                	add    BYTE PTR [rdx],cl
    5da9:	00 00                	add    BYTE PTR [rax],al
    5dab:	00 00                	add    BYTE PTR [rax],al
    5dad:	00 00                	add    BYTE PTR [rax],al
    5daf:	00 d0                	add    al,dl
    5db1:	01 00                	add    DWORD PTR [rax],eax
    5db3:	00 00                	add    BYTE PTR [rax],al
    5db5:	00 00                	add    BYTE PTR [rax],al
    5db7:	00 0b                	add    BYTE PTR [rbx],cl
    5db9:	00 00                	add    BYTE PTR [rax],al
    5dbb:	00 00                	add    BYTE PTR [rax],al
    5dbd:	00 00                	add    BYTE PTR [rax],al
    5dbf:	00 18                	add    BYTE PTR [rax],bl
    5dc1:	00 00                	add    BYTE PTR [rax],al
    5dc3:	00 00                	add    BYTE PTR [rax],al
    5dc5:	00 00                	add    BYTE PTR [rax],al
    5dc7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 5dcd <_DYNAMIC+0xe5>
	...
    5dd5:	00 00                	add    BYTE PTR [rax],al
    5dd7:	00 03                	add    BYTE PTR [rbx],al
    5dd9:	00 00                	add    BYTE PTR [rax],al
    5ddb:	00 00                	add    BYTE PTR [rax],al
    5ddd:	00 00                	add    BYTE PTR [rax],al
    5ddf:	00 f8                	add    al,bh
    5de1:	5e                   	pop    rsi
    5de2:	00 00                	add    BYTE PTR [rax],al
    5de4:	00 00                	add    BYTE PTR [rax],al
    5de6:	00 00                	add    BYTE PTR [rax],al
    5de8:	02 00                	add    al,BYTE PTR [rax]
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	00 00                	add    BYTE PTR [rax],al
    5dee:	00 00                	add    BYTE PTR [rax],al
    5df0:	58                   	pop    rax
    5df1:	02 00                	add    al,BYTE PTR [rax]
    5df3:	00 00                	add    BYTE PTR [rax],al
    5df5:	00 00                	add    BYTE PTR [rax],al
    5df7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    5dfa:	00 00                	add    BYTE PTR [rax],al
    5dfc:	00 00                	add    BYTE PTR [rax],al
    5dfe:	00 00                	add    BYTE PTR [rax],al
    5e00:	07                   	(bad)
    5e01:	00 00                	add    BYTE PTR [rax],al
    5e03:	00 00                	add    BYTE PTR [rax],al
    5e05:	00 00                	add    BYTE PTR [rax],al
    5e07:	00 17                	add    BYTE PTR [rdi],dl
    5e09:	00 00                	add    BYTE PTR [rax],al
    5e0b:	00 00                	add    BYTE PTR [rax],al
    5e0d:	00 00                	add    BYTE PTR [rax],al
    5e0f:	00 40 0a             	add    BYTE PTR [rax+0xa],al
    5e12:	00 00                	add    BYTE PTR [rax],al
    5e14:	00 00                	add    BYTE PTR [rax],al
    5e16:	00 00                	add    BYTE PTR [rax],al
    5e18:	07                   	(bad)
    5e19:	00 00                	add    BYTE PTR [rax],al
    5e1b:	00 00                	add    BYTE PTR [rax],al
    5e1d:	00 00                	add    BYTE PTR [rax],al
    5e1f:	00 80 09 00 00 00    	add    BYTE PTR [rax+0x9],al
    5e25:	00 00                	add    BYTE PTR [rax],al
    5e27:	00 08                	add    BYTE PTR [rax],cl
    5e29:	00 00                	add    BYTE PTR [rax],al
    5e2b:	00 00                	add    BYTE PTR [rax],al
    5e2d:	00 00                	add    BYTE PTR [rax],al
    5e2f:	00 c0                	add    al,al
    5e31:	00 00                	add    BYTE PTR [rax],al
    5e33:	00 00                	add    BYTE PTR [rax],al
    5e35:	00 00                	add    BYTE PTR [rax],al
    5e37:	00 09                	add    BYTE PTR [rcx],cl
    5e39:	00 00                	add    BYTE PTR [rax],al
    5e3b:	00 00                	add    BYTE PTR [rax],al
    5e3d:	00 00                	add    BYTE PTR [rax],al
    5e3f:	00 18                	add    BYTE PTR [rax],bl
    5e41:	00 00                	add    BYTE PTR [rax],al
    5e43:	00 00                	add    BYTE PTR [rax],al
    5e45:	00 00                	add    BYTE PTR [rax],al
    5e47:	00 1e                	add    BYTE PTR [rsi],bl
    5e49:	00 00                	add    BYTE PTR [rax],al
    5e4b:	00 00                	add    BYTE PTR [rax],al
    5e4d:	00 00                	add    BYTE PTR [rax],al
    5e4f:	00 08                	add    BYTE PTR [rax],cl
    5e51:	00 00                	add    BYTE PTR [rax],al
    5e53:	00 00                	add    BYTE PTR [rax],al
    5e55:	00 00                	add    BYTE PTR [rax],al
    5e57:	00 fb                	add    bl,bh
    5e59:	ff                   	(bad)
    5e5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e5d:	00 00                	add    BYTE PTR [rax],al
    5e5f:	00 01                	add    BYTE PTR [rcx],al
    5e61:	00 00                	add    BYTE PTR [rax],al
    5e63:	08 00                	or     BYTE PTR [rax],al
    5e65:	00 00                	add    BYTE PTR [rax],al
    5e67:	00 fe                	add    dh,bh
    5e69:	ff                   	(bad)
    5e6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e6d:	00 00                	add    BYTE PTR [rax],al
    5e6f:	00 c0                	add    al,al
    5e71:	08 00                	or     BYTE PTR [rax],al
    5e73:	00 00                	add    BYTE PTR [rax],al
    5e75:	00 00                	add    BYTE PTR [rax],al
    5e77:	00 ff                	add    bh,bh
    5e79:	ff                   	(bad)
    5e7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e7d:	00 00                	add    BYTE PTR [rax],al
    5e7f:	00 03                	add    BYTE PTR [rbx],al
    5e81:	00 00                	add    BYTE PTR [rax],al
    5e83:	00 00                	add    BYTE PTR [rax],al
    5e85:	00 00                	add    BYTE PTR [rax],al
    5e87:	00 f0                	add    al,dh
    5e89:	ff                   	(bad)
    5e8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e8d:	00 00                	add    BYTE PTR [rax],al
    5e8f:	00 80 08 00 00 00    	add    BYTE PTR [rax+0x8],al
    5e95:	00 00                	add    BYTE PTR [rax],al
    5e97:	00 f9                	add    cl,bh
    5e99:	ff                   	(bad)
    5e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e9d:	00 00                	add    BYTE PTR [rax],al
    5e9f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000005ef8 <_GLOBAL_OFFSET_TABLE_>:
    5ef8:	e8 5c 00 00 00       	call   5f59 <_GLOBAL_OFFSET_TABLE_+0x61>
	...
    5f0d:	00 00                	add    BYTE PTR [rax],al
    5f0f:	00 36                	add    BYTE PTR [rsi],dh
    5f11:	10 00                	adc    BYTE PTR [rax],al
    5f13:	00 00                	add    BYTE PTR [rax],al
    5f15:	00 00                	add    BYTE PTR [rax],al
    5f17:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    5f1a:	00 00                	add    BYTE PTR [rax],al
    5f1c:	00 00                	add    BYTE PTR [rax],al
    5f1e:	00 00                	add    BYTE PTR [rax],al
    5f20:	56                   	push   rsi
    5f21:	10 00                	adc    BYTE PTR [rax],al
    5f23:	00 00                	add    BYTE PTR [rax],al
    5f25:	00 00                	add    BYTE PTR [rax],al
    5f27:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
    5f2a:	00 00                	add    BYTE PTR [rax],al
    5f2c:	00 00                	add    BYTE PTR [rax],al
    5f2e:	00 00                	add    BYTE PTR [rax],al
    5f30:	76 10                	jbe    5f42 <_GLOBAL_OFFSET_TABLE_+0x4a>
    5f32:	00 00                	add    BYTE PTR [rax],al
    5f34:	00 00                	add    BYTE PTR [rax],al
    5f36:	00 00                	add    BYTE PTR [rax],al
    5f38:	86 10                	xchg   BYTE PTR [rax],dl
    5f3a:	00 00                	add    BYTE PTR [rax],al
    5f3c:	00 00                	add    BYTE PTR [rax],al
    5f3e:	00 00                	add    BYTE PTR [rax],al
    5f40:	96                   	xchg   esi,eax
    5f41:	10 00                	adc    BYTE PTR [rax],al
    5f43:	00 00                	add    BYTE PTR [rax],al
    5f45:	00 00                	add    BYTE PTR [rax],al
    5f47:	00 a6 10 00 00 00    	add    BYTE PTR [rsi+0x10],ah
    5f4d:	00 00                	add    BYTE PTR [rax],al
    5f4f:	00 b6 10 00 00 00    	add    BYTE PTR [rsi+0x10],dh
    5f55:	00 00                	add    BYTE PTR [rax],al
    5f57:	00 c6                	add    dh,al
    5f59:	10 00                	adc    BYTE PTR [rax],al
    5f5b:	00 00                	add    BYTE PTR [rax],al
    5f5d:	00 00                	add    BYTE PTR [rax],al
    5f5f:	00 d6                	add    dh,dl
    5f61:	10 00                	adc    BYTE PTR [rax],al
    5f63:	00 00                	add    BYTE PTR [rax],al
    5f65:	00 00                	add    BYTE PTR [rax],al
    5f67:	00 e6                	add    dh,ah
    5f69:	10 00                	adc    BYTE PTR [rax],al
    5f6b:	00 00                	add    BYTE PTR [rax],al
    5f6d:	00 00                	add    BYTE PTR [rax],al
    5f6f:	00 f6                	add    dh,dh
    5f71:	10 00                	adc    BYTE PTR [rax],al
    5f73:	00 00                	add    BYTE PTR [rax],al
    5f75:	00 00                	add    BYTE PTR [rax],al
    5f77:	00 06                	add    BYTE PTR [rsi],al
    5f79:	11 00                	adc    DWORD PTR [rax],eax
    5f7b:	00 00                	add    BYTE PTR [rax],al
    5f7d:	00 00                	add    BYTE PTR [rax],al
    5f7f:	00 16                	add    BYTE PTR [rsi],dl
    5f81:	11 00                	adc    DWORD PTR [rax],eax
    5f83:	00 00                	add    BYTE PTR [rax],al
    5f85:	00 00                	add    BYTE PTR [rax],al
    5f87:	00 26                	add    BYTE PTR [rsi],ah
    5f89:	11 00                	adc    DWORD PTR [rax],eax
    5f8b:	00 00                	add    BYTE PTR [rax],al
    5f8d:	00 00                	add    BYTE PTR [rax],al
    5f8f:	00 36                	add    BYTE PTR [rsi],dh
    5f91:	11 00                	adc    DWORD PTR [rax],eax
    5f93:	00 00                	add    BYTE PTR [rax],al
    5f95:	00 00                	add    BYTE PTR [rax],al
    5f97:	00 46 11             	add    BYTE PTR [rsi+0x11],al
    5f9a:	00 00                	add    BYTE PTR [rax],al
    5f9c:	00 00                	add    BYTE PTR [rax],al
    5f9e:	00 00                	add    BYTE PTR [rax],al
    5fa0:	56                   	push   rsi
    5fa1:	11 00                	adc    DWORD PTR [rax],eax
    5fa3:	00 00                	add    BYTE PTR [rax],al
    5fa5:	00 00                	add    BYTE PTR [rax],al
    5fa7:	00 66 11             	add    BYTE PTR [rsi+0x11],ah
    5faa:	00 00                	add    BYTE PTR [rax],al
    5fac:	00 00                	add    BYTE PTR [rax],al
    5fae:	00 00                	add    BYTE PTR [rax],al
    5fb0:	76 11                	jbe    5fc3 <_GLOBAL_OFFSET_TABLE_+0xcb>
    5fb2:	00 00                	add    BYTE PTR [rax],al
    5fb4:	00 00                	add    BYTE PTR [rax],al
    5fb6:	00 00                	add    BYTE PTR [rax],al
    5fb8:	86 11                	xchg   BYTE PTR [rcx],dl
    5fba:	00 00                	add    BYTE PTR [rax],al
    5fbc:	00 00                	add    BYTE PTR [rax],al
    5fbe:	00 00                	add    BYTE PTR [rax],al
    5fc0:	96                   	xchg   esi,eax
    5fc1:	11 00                	adc    DWORD PTR [rax],eax
    5fc3:	00 00                	add    BYTE PTR [rax],al
    5fc5:	00 00                	add    BYTE PTR [rax],al
    5fc7:	00 a6 11 00 00 00    	add    BYTE PTR [rsi+0x11],ah
    5fcd:	00 00                	add    BYTE PTR [rax],al
    5fcf:	00 b6 11 00 00 00    	add    BYTE PTR [rsi+0x11],dh
	...

Disassembly of section .data:

0000000000006000 <__data_start>:
	...

0000000000006008 <__dso_handle>:
    6008:	08 60 00             	or     BYTE PTR [rax+0x0],ah
    600b:	00 00                	add    BYTE PTR [rax],al
    600d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x304>
   a:	74 75                	je     81 <__abi_tag-0x2fb>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	33 2e                	xor    ebp,DWORD PTR [rsi]
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 36 75 62 75    	xor    BYTE PTR [rip+0x75627536],ch        # 7562754e <_end+0x75621536>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2ec>
  1b:	32 7e 32             	xor    bh,BYTE PTR [rsi+0x32]
  1e:	34 2e                	xor    al,0x2e
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	33 2e                	xor    ebp,DWORD PTR [rsi]
  27:	33 2e                	xor    ebp,DWORD PTR [rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	d0 11                	rcl    BYTE PTR [rcx],1
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	33 00                	xor    eax,DWORD PTR [rax]
	...
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	2c 00                	sub    al,0x0
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 00                	add    al,BYTE PTR [rax]
  36:	1b 09                	sbb    ecx,DWORD PTR [rcx]
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	08 00                	or     BYTE PTR [rax],al
  3c:	00 00                	add    BYTE PTR [rax],al
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 13                	add    BYTE PTR [rbx],dl
  42:	00 00                	add    BYTE PTR [rax],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	d4                   	(bad)
  49:	07                   	(bad)
	...
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	2c 00                	sub    al,0x0
  62:	00 00                	add    BYTE PTR [rax],al
  64:	02 00                	add    al,BYTE PTR [rax]
  66:	a9 25 00 00 08       	test   eax,0x8000025
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 e0                	add    al,ah
  71:	1a 00                	sbb    al,BYTE PTR [rax]
  73:	00 00                	add    BYTE PTR [rax],al
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 b5 03 00 00 00    	add    BYTE PTR [rbp+0x3],dh
	...
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  92:	00 00                	add    BYTE PTR [rax],al
  94:	02 00                	add    al,BYTE PTR [rax]
  96:	ac                   	lods   al,BYTE PTR ds:[rsi]
  97:	34 00                	xor    al,0x0
  99:	00 08                	add    BYTE PTR [rax],cl
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 a0 1e 00 00 00    	add    BYTE PTR [rax+0x1e],ah
  a5:	00 00                	add    BYTE PTR [rax],al
  a7:	00 ae 03 00 00 00    	add    BYTE PTR [rsi+0x3],ch
	...
  bd:	00 00                	add    BYTE PTR [rax],al
  bf:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	02 00                	add    al,BYTE PTR [rax]
  c6:	1b 45 00             	sbb    eax,DWORD PTR [rbp+0x0]
  c9:	00 08                	add    BYTE PTR [rax],cl
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 50 22             	add    BYTE PTR [rax+0x22],dl
  d2:	00 00                	add    BYTE PTR [rax],al
  d4:	00 00                	add    BYTE PTR [rax],al
  d6:	00 00                	add    BYTE PTR [rax],al
  d8:	72 01                	jb     db <__abi_tag-0x2a1>
	...
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	2c 00                	sub    al,0x0
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	02 00                	add    al,BYTE PTR [rax]
  f6:	c5 53 00             	(bad)
  f9:	00 08                	add    BYTE PTR [rax],cl
  fb:	00 00                	add    BYTE PTR [rax],al
  fd:	00 00                	add    BYTE PTR [rax],al
  ff:	00 d0                	add    al,dl
 101:	23 00                	and    eax,DWORD PTR [rax]
 103:	00 00                	add    BYTE PTR [rax],al
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 ec                	add    ah,ch
 109:	15 00 00 00 00       	adc    eax,0x0
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	17                   	(bad)
       1:	09 00                	or     DWORD PTR [rax],eax
       3:	00 05 00 01 08 00    	add    BYTE PTR [rip+0x80100],al        # 80109 <_end+0x7a0f1>
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 15 33 00 00 00    	add    BYTE PTR [rip+0x33],dl        # 44 <__abi_tag-0x338>
      11:	21 14 00             	and    DWORD PTR [rax+rax*1],edx
      14:	00 00                	add    BYTE PTR [rax],al
      16:	00 00                	add    BYTE PTR [rax],al
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	1f                   	(bad)
	...
      27:	00 00                	add    BYTE PTR [rax],al
      29:	00 08                	add    BYTE PTR [rax],cl
      2b:	37                   	(bad)
      2c:	0b 00                	or     eax,DWORD PTR [rax]
      2e:	00 03                	add    BYTE PTR [rbx],al
      30:	d6                   	(bad)
      31:	17                   	(bad)
      32:	36 00 00             	ss add BYTE PTR [rax],al
      35:	00 03                	add    BYTE PTR [rbx],al
      37:	08 07                	or     BYTE PTR [rdi],al
      39:	a0 01 00 00 03 04 07 	movabs al,ds:0x1a5070403000001
      40:	a5 01 
      42:	00 00                	add    BYTE PTR [rax],al
      44:	16                   	(bad)
      45:	08 03                	or     BYTE PTR [rbx],al
      47:	01 08                	add    DWORD PTR [rax],ecx
      49:	24 02                	and    al,0x2
      4b:	00 00                	add    BYTE PTR [rax],al
      4d:	03 02                	add    eax,DWORD PTR [rdx]
      4f:	07                   	(bad)
      50:	73 02                	jae    54 <__abi_tag-0x328>
      52:	00 00                	add    BYTE PTR [rax],al
      54:	03 01                	add    eax,DWORD PTR [rcx]
      56:	06                   	(bad)
      57:	26 02 00             	es add al,BYTE PTR [rax]
      5a:	00 03                	add    BYTE PTR [rbx],al
      5c:	02 05 05 01 00 00    	add    al,BYTE PTR [rip+0x105]        # 167 <__abi_tag-0x215>
      62:	17                   	(bad)
      63:	04 05                	add    al,0x5
      65:	69 6e 74 00 09 62 00 	imul   ebp,DWORD PTR [rsi+0x74],0x620900
      6c:	00 00                	add    BYTE PTR [rax],al
      6e:	08 53 01             	or     BYTE PTR [rbx+0x1],dl
      71:	00 00                	add    BYTE PTR [rax],al
      73:	04 2a                	add    al,0x2a
      75:	16                   	(bad)
      76:	3d 00 00 00 03       	cmp    eax,0x3000000
      7b:	08 05 92 01 00 00    	or     BYTE PTR [rip+0x192],al        # 213 <__abi_tag-0x169>
      81:	05 86 00 00 00       	add    eax,0x86
      86:	03 01                	add    eax,DWORD PTR [rcx]
      88:	06                   	(bad)
      89:	2d 02 00 00 09       	sub    eax,0x9000002
      8e:	86 00                	xchg   BYTE PTR [rax],al
      90:	00 00                	add    BYTE PTR [rax],al
      92:	05 8d 00 00 00       	add    eax,0x8d
      97:	03 08                	add    ecx,DWORD PTR [rax]
      99:	05 8d 01 00 00       	add    eax,0x18d
      9e:	03 10                	add    edx,DWORD PTR [rax]
      a0:	04 18                	add    al,0x18
      a2:	02 00                	add    al,BYTE PTR [rax]
      a4:	00 03                	add    BYTE PTR [rbx],al
      a6:	08 07                	or     BYTE PTR [rdi],al
      a8:	9b                   	fwait
      a9:	01 00                	add    DWORD PTR [rax],eax
      ab:	00 03                	add    BYTE PTR [rbx],al
      ad:	04 04                	add    al,0x4
      af:	80 01 00             	add    BYTE PTR [rcx],0x0
      b2:	00 0c 08             	add    BYTE PTR [rax+rcx*1],cl
      b5:	3c e3                	cmp    al,0xe3
      b7:	02 00                	add    al,BYTE PTR [rax]
      b9:	00 d6                	add    dh,dl
      bb:	00 00                	add    BYTE PTR [rax],al
      bd:	00 0d 6e 02 00 00    	add    BYTE PTR [rip+0x26e],cl        # 331 <__abi_tag-0x4b>
      c3:	3d 09 62 00 00       	cmp    eax,0x6209
      c8:	00 0e                	add    BYTE PTR [rsi],cl
      ca:	72 65                	jb     131 <__abi_tag-0x24b>
      cc:	6d                   	ins    DWORD PTR es:[rdi],dx
      cd:	00 3e                	add    BYTE PTR [rsi],bh
      cf:	09 62 00             	or     DWORD PTR [rdx+0x0],esp
      d2:	00 00                	add    BYTE PTR [rax],al
      d4:	04 00                	add    al,0x0
      d6:	08 e4                	or     ah,ah
      d8:	02 00                	add    al,BYTE PTR [rax]
      da:	00 02                	add    BYTE PTR [rdx],al
      dc:	3f                   	(bad)
      dd:	05 b3 00 00 00       	add    eax,0xb3
      e2:	0c 10                	or     al,0x10
      e4:	44 09 00             	or     DWORD PTR [rax],r8d
      e7:	00 00                	add    BYTE PTR [rax],al
      e9:	05 01 00 00 0d       	add    eax,0xd000001
      ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      ef:	02 00                	add    al,BYTE PTR [rax]
      f1:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
      f4:	7a 00                	jp     f6 <__abi_tag-0x286>
      f6:	00 00                	add    BYTE PTR [rax],al
      f8:	0e                   	(bad)
      f9:	72 65                	jb     160 <__abi_tag-0x21c>
      fb:	6d                   	ins    DWORD PTR es:[rdi],dx
      fc:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
      ff:	7a 00                	jp     101 <__abi_tag-0x27b>
     101:	00 00                	add    BYTE PTR [rax],al
     103:	08 00                	or     BYTE PTR [rax],al
     105:	08 0a                	or     BYTE PTR [rdx],cl
     107:	00 00                	add    BYTE PTR [rax],al
     109:	00 02                	add    BYTE PTR [rdx],al
     10b:	47 05 e2 00 00 00    	rex.RXB add eax,0xe2
     111:	0c 10                	or     al,0x10
     113:	4e d4                	rex.WRX (bad)
     115:	01 00                	add    DWORD PTR [rax],eax
     117:	00 34 01             	add    BYTE PTR [rcx+rax*1],dh
     11a:	00 00                	add    BYTE PTR [rax],al
     11c:	0d 6e 02 00 00       	or     eax,0x26e
     121:	4f 13 97 00 00 00 0e 	rex.WRXB adc r10,QWORD PTR [r15+0xe000000]
     128:	72 65                	jb     18f <__abi_tag-0x1ed>
     12a:	6d                   	ins    DWORD PTR es:[rdi],dx
     12b:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     12e:	97                   	xchg   edi,eax
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	00 08                	add    BYTE PTR [rax],cl
     133:	00 08                	add    BYTE PTR [rax],cl
     135:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
     139:	02 51 05             	add    dl,BYTE PTR [rcx+0x5]
     13c:	11 01                	adc    DWORD PTR [rcx],eax
     13e:	00 00                	add    BYTE PTR [rax],al
     140:	18 d5                	sbb    ch,dl
     142:	02 00                	add    al,BYTE PTR [rax]
     144:	00 02                	add    BYTE PTR [rdx],al
     146:	b4 03                	mov    ah,0x3
     148:	0f 4d 01             	cmovge eax,DWORD PTR [rcx]
     14b:	00 00                	add    BYTE PTR [rax],al
     14d:	05 52 01 00 00       	add    eax,0x152
     152:	19 62 00             	sbb    DWORD PTR [rdx+0x0],esp
     155:	00 00                	add    BYTE PTR [rax],al
     157:	66 01 00             	add    WORD PTR [rax],ax
     15a:	00 01                	add    BYTE PTR [rcx],al
     15c:	66 01 00             	add    WORD PTR [rax],ax
     15f:	00 01                	add    BYTE PTR [rcx],al
     161:	66 01 00             	add    WORD PTR [rax],ax
     164:	00 00                	add    BYTE PTR [rax],al
     166:	05 6b 01 00 00       	add    eax,0x16b
     16b:	1a 1b                	sbb    bl,BYTE PTR [rbx]
     16d:	73 74                	jae    1e3 <__abi_tag-0x199>
     16f:	64 00 0e             	add    BYTE PTR fs:[rsi],cl
     172:	32 01                	xor    al,BYTE PTR [rcx]
     174:	0b 3c 03             	or     edi,DWORD PTR [rbx+rax*1]
     177:	00 00                	add    BYTE PTR [rax],al
     179:	02 05 83 0b d6 00    	add    al,BYTE PTR [rip+0xd60b83]        # d60d02 <_end+0xd5acea>
     17f:	00 00                	add    BYTE PTR [rax],al
     181:	02 05 84 0b 05 01    	add    al,BYTE PTR [rip+0x1050b84]        # 1050d0b <_end+0x104acf3>
     187:	00 00                	add    BYTE PTR [rax],al
     189:	02 05 8a 0b 3c 03    	add    al,BYTE PTR [rip+0x33c0b8a]        # 33c0d19 <_end+0x33bad01>
     18f:	00 00                	add    BYTE PTR [rax],al
     191:	02 05 8d 0b 58 03    	add    al,BYTE PTR [rip+0x3580b8d]        # 3580d24 <_end+0x357ad0c>
     197:	00 00                	add    BYTE PTR [rax],al
     199:	02 05 90 0b 73 03    	add    al,BYTE PTR [rip+0x3730b90]        # 3730d2f <_end+0x372ad17>
     19f:	00 00                	add    BYTE PTR [rax],al
     1a1:	02 05 91 0b 90 03    	add    al,BYTE PTR [rip+0x3900b91]        # 3900d38 <_end+0x38fad20>
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	02 05 92 0b b0 03    	add    al,BYTE PTR [rip+0x3b00b92]        # 3b00d41 <_end+0x3afad29>
     1af:	00 00                	add    BYTE PTR [rax],al
     1b1:	02 05 93 0b c6 03    	add    al,BYTE PTR [rip+0x3c60b93]        # 3c60d4a <_end+0x3c5ad32>
     1b7:	00 00                	add    BYTE PTR [rax],al
     1b9:	02 05 95 0b f0 03    	add    al,BYTE PTR [rip+0x3f00b95]        # 3f00d54 <_end+0x3efad3c>
     1bf:	00 00                	add    BYTE PTR [rax],al
     1c1:	02 05 98 0b 0c 04    	add    al,BYTE PTR [rip+0x40c0b98]        # 40c0d5f <_end+0x40bad47>
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	02 05 9a 0b 22 04    	add    al,BYTE PTR [rip+0x4220b9a]        # 4220d69 <_end+0x421ad51>
     1cf:	00 00                	add    BYTE PTR [rax],al
     1d1:	02 05 9d 0b 3d 04    	add    al,BYTE PTR [rip+0x43d0b9d]        # 43d0d74 <_end+0x43cad5c>
     1d7:	00 00                	add    BYTE PTR [rax],al
     1d9:	02 05 9e 0b 58 04    	add    al,BYTE PTR [rip+0x4580b9e]        # 4580d7d <_end+0x457ad65>
     1df:	00 00                	add    BYTE PTR [rax],al
     1e1:	02 05 9f 0b 89 04    	add    al,BYTE PTR [rip+0x4890b9f]        # 4890d86 <_end+0x488ad6e>
     1e7:	00 00                	add    BYTE PTR [rax],al
     1e9:	02 05 a1 0b a9 04    	add    al,BYTE PTR [rip+0x4a90ba1]        # 4a90d90 <_end+0x4a8ad78>
     1ef:	00 00                	add    BYTE PTR [rax],al
     1f1:	02 05 a4 0b c9 04    	add    al,BYTE PTR [rip+0x4c90ba4]        # 4c90d9b <_end+0x4c8ad83>
     1f7:	00 00                	add    BYTE PTR [rax],al
     1f9:	02 05 a7 0b dc 04    	add    al,BYTE PTR [rip+0x4dc0ba7]        # 4dc0da6 <_end+0x4dbad8e>
     1ff:	00 00                	add    BYTE PTR [rax],al
     201:	02 05 a9 0b e9 04    	add    al,BYTE PTR [rip+0x4e90ba9]        # 4e90db0 <_end+0x4e8ad98>
     207:	00 00                	add    BYTE PTR [rax],al
     209:	02 05 aa 0b fa 04    	add    al,BYTE PTR [rip+0x4fa0baa]        # 4fa0db9 <_end+0x4f9ada1>
     20f:	00 00                	add    BYTE PTR [rax],al
     211:	02 05 ab 0b 1a 05    	add    al,BYTE PTR [rip+0x51a0bab]        # 51a0dc2 <_end+0x519adaa>
     217:	00 00                	add    BYTE PTR [rax],al
     219:	02 05 ac 0b 3d 05    	add    al,BYTE PTR [rip+0x53d0bac]        # 53d0dcb <_end+0x53cadb3>
     21f:	00 00                	add    BYTE PTR [rax],al
     221:	02 05 ad 0b 60 05    	add    al,BYTE PTR [rip+0x5600bad]        # 5600dd4 <_end+0x55fadbc>
     227:	00 00                	add    BYTE PTR [rax],al
     229:	02 05 af 0b 76 05    	add    al,BYTE PTR [rip+0x5760baf]        # 5760dde <_end+0x575adc6>
     22f:	00 00                	add    BYTE PTR [rax],al
     231:	02 05 b0 0b 9b 05    	add    al,BYTE PTR [rip+0x59b0bb0]        # 59b0de7 <_end+0x59aadcf>
     237:	00 00                	add    BYTE PTR [rax],al
     239:	02 05 f4 16 34 01    	add    al,BYTE PTR [rip+0x13416f4]        # 1341933 <_end+0x133b91b>
     23f:	00 00                	add    BYTE PTR [rax],al
     241:	02 05 f9 16 fb 05    	add    al,BYTE PTR [rip+0x5fb16f9]        # 5fb1940 <_end+0x5fab928>
     247:	00 00                	add    BYTE PTR [rax],al
     249:	02 05 fa 16 15 06    	add    al,BYTE PTR [rip+0x61516fa]        # 6151949 <_end+0x614b931>
     24f:	00 00                	add    BYTE PTR [rax],al
     251:	02 05 fc 16 30 06    	add    al,BYTE PTR [rip+0x63016fc]        # 6301953 <_end+0x62fb93b>
     257:	00 00                	add    BYTE PTR [rax],al
     259:	02 05 fd 16 8c 06    	add    al,BYTE PTR [rip+0x68c16fd]        # 68c195c <_end+0x68bb944>
     25f:	00 00                	add    BYTE PTR [rax],al
     261:	02 05 fe 16 46 06    	add    al,BYTE PTR [rip+0x64616fe]        # 6461965 <_end+0x645b94d>
     267:	00 00                	add    BYTE PTR [rax],al
     269:	02 05 ff 16 69 06    	add    al,BYTE PTR [rip+0x66916ff]        # 669196e <_end+0x668b956>
     26f:	00 00                	add    BYTE PTR [rax],al
     271:	1c 05                	sbb    al,0x5
     273:	00 01                	add    BYTE PTR [rcx],al
     275:	16                   	(bad)
     276:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     277:	06                   	(bad)
     278:	00 00                	add    BYTE PTR [rax],al
     27a:	07                   	(bad)
     27b:	61                   	(bad)
     27c:	62 73 00 89 15       	(bad)
     281:	03 00                	add    eax,DWORD PTR [rax]
     283:	00 ea                	add    dl,ch
     285:	06                   	(bad)
     286:	00 00                	add    BYTE PTR [rax],al
     288:	92                   	xchg   edx,eax
     289:	02 00                	add    al,BYTE PTR [rax]
     28b:	00 01                	add    BYTE PTR [rcx],al
     28d:	ea                   	(bad)
     28e:	06                   	(bad)
     28f:	00 00                	add    BYTE PTR [rax],al
     291:	00 07                	add    BYTE PTR [rdi],al
     293:	61                   	(bad)
     294:	62 73 00 55 1b       	(bad)
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	00 f9                	add    cl,bh
     29d:	06                   	(bad)
     29e:	00 00                	add    BYTE PTR [rax],al
     2a0:	aa                   	stos   BYTE PTR es:[rdi],al
     2a1:	02 00                	add    al,BYTE PTR [rax]
     2a3:	00 01                	add    BYTE PTR [rcx],al
     2a5:	f9                   	stc
     2a6:	06                   	(bad)
     2a7:	00 00                	add    BYTE PTR [rax],al
     2a9:	00 07                	add    BYTE PTR [rdi],al
     2ab:	61                   	(bad)
     2ac:	62 73 00 4f 01       	(bad)
     2b1:	03 00                	add    eax,DWORD PTR [rax]
     2b3:	00 9e 00 00 00 c2    	add    BYTE PTR [rsi-0x3e000000],bl
     2b9:	02 00                	add    al,BYTE PTR [rax]
     2bb:	00 01                	add    BYTE PTR [rcx],al
     2bd:	9e                   	sahf
     2be:	00 00                	add    BYTE PTR [rax],al
     2c0:	00 00                	add    BYTE PTR [rax],al
     2c2:	07                   	(bad)
     2c3:	61                   	(bad)
     2c4:	62 73 00 4b 0b       	(bad)
     2c9:	03 00                	add    eax,DWORD PTR [rax]
     2cb:	00 ac 00 00 00 da 02 	add    BYTE PTR [rax+rax*1+0x2da0000],ch
     2d2:	00 00                	add    BYTE PTR [rax],al
     2d4:	01 ac 00 00 00 00 07 	add    DWORD PTR [rax+rax*1+0x7000000],ebp
     2db:	61                   	(bad)
     2dc:	62 73 00 47 f7       	(bad)
     2e1:	02 00                	add    al,BYTE PTR [rax]
     2e3:	00 89 03 00 00 f2    	add    BYTE PTR [rcx-0xdfffffd],cl
     2e9:	02 00                	add    al,BYTE PTR [rax]
     2eb:	00 01                	add    BYTE PTR [rcx],al
     2ed:	89 03                	mov    DWORD PTR [rbx],eax
     2ef:	00 00                	add    BYTE PTR [rax],al
     2f1:	00 07                	add    BYTE PTR [rdi],al
     2f3:	61                   	(bad)
     2f4:	62 73 00 3d eb       	(bad)
     2f9:	00 00                	add    BYTE PTR [rax],al
     2fb:	00 97 00 00 00 0a    	add    BYTE PTR [rdi+0xa000000],dl
     301:	03 00                	add    eax,DWORD PTR [rax]
     303:	00 01                	add    BYTE PTR [rcx],al
     305:	97                   	xchg   edi,eax
     306:	00 00                	add    BYTE PTR [rax],al
     308:	00 00                	add    BYTE PTR [rax],al
     30a:	07                   	(bad)
     30b:	61                   	(bad)
     30c:	62 73 00 38 11       	(bad)
     311:	00 00                	add    BYTE PTR [rax],al
     313:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
     316:	00 00                	add    BYTE PTR [rax],al
     318:	22 03                	and    al,BYTE PTR [rbx]
     31a:	00 00                	add    BYTE PTR [rax],al
     31c:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     31f:	00 00                	add    BYTE PTR [rax],al
     321:	00 0f                	add    BYTE PTR [rdi],cl
     323:	64 69 76 00 b5 1e 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x11eb5
     32a:	00 
     32b:	00 05 01 00 00 01    	add    BYTE PTR [rip+0x1000001],al        # 1000332 <_end+0xffa31a>
     331:	7a 00                	jp     333 <__abi_tag-0x49>
     333:	00 00                	add    BYTE PTR [rax],al
     335:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     338:	00 00                	add    BYTE PTR [rax],al
     33a:	00 00                	add    BYTE PTR [rax],al
     33c:	04 17                	add    al,0x17
     33e:	01 00                	add    DWORD PTR [rax],eax
     340:	00 de                	add    dh,bl
     342:	02 0c 62             	add    cl,BYTE PTR [rdx+riz*2]
     345:	00 00                	add    BYTE PTR [rax],al
     347:	00 52 03             	add    BYTE PTR [rdx+0x3],dl
     34a:	00 00                	add    BYTE PTR [rax],al
     34c:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     34f:	00 00                	add    BYTE PTR [rax],al
     351:	00 05 57 03 00 00    	add    BYTE PTR [rip+0x357],al        # 6ae <__abi_tag+0x332>
     357:	1d 1e dd 00 00       	sbb    eax,0xdd1e
     35c:	00 02                	add    BYTE PTR [rdx],al
     35e:	e3 02                	jrcxz  362 <__abi_tag-0x1a>
     360:	12 dd                	adc    bl,ch
     362:	00 00                	add    BYTE PTR [rax],al
     364:	00 62 00             	add    BYTE PTR [rdx+0x0],ah
     367:	00 00                	add    BYTE PTR [rax],al
     369:	73 03                	jae    36e <__abi_tag-0xe>
     36b:	00 00                	add    BYTE PTR [rax],al
     36d:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     370:	00 00                	add    BYTE PTR [rax],al
     372:	00 06                	add    BYTE PTR [rsi],al
     374:	f2 01 00             	repnz add DWORD PTR [rax],eax
     377:	00 07                	add    BYTE PTR [rdi],al
     379:	19 01                	sbb    DWORD PTR [rcx],eax
     37b:	89 03                	mov    DWORD PTR [rbx],eax
     37d:	00 00                	add    BYTE PTR [rax],al
     37f:	89 03                	mov    DWORD PTR [rbx],eax
     381:	00 00                	add    BYTE PTR [rax],al
     383:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     389:	03 08                	add    ecx,DWORD PTR [rax]
     38b:	04 1d                	add    al,0x1d
     38d:	02 00                	add    al,BYTE PTR [rax]
     38f:	00 1f                	add    BYTE PTR [rdi],bl
     391:	f7 01 00 00 02 e1    	test   DWORD PTR [rcx],0xe1020000
     397:	01 01                	add    DWORD PTR [rcx],eax
     399:	62                   	(bad)
     39a:	00 00                	add    BYTE PTR [rax],al
     39c:	00 03                	add    BYTE PTR [rbx],al
     39e:	b0 03                	mov    al,0x3
     3a0:	00 00                	add    BYTE PTR [rax],al
     3a2:	20 ea                	and    dl,ch
     3a4:	02 00                	add    al,BYTE PTR [rax]
     3a6:	00 02                	add    BYTE PTR [rdx],al
     3a8:	e1 01                	loope  3ab <__abi_tag+0x2f>
     3aa:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     3b0:	04 01                	add    al,0x1
     3b2:	02 00                	add    al,BYTE PTR [rax]
     3b4:	00 e6                	add    dh,ah
     3b6:	01 01                	add    DWORD PTR [rcx],eax
     3b8:	7a 00                	jp     3ba <__abi_tag+0x3e>
     3ba:	00 00                	add    BYTE PTR [rax],al
     3bc:	c6 03 00             	mov    BYTE PTR [rbx],0x0
     3bf:	00 01                	add    BYTE PTR [rcx],al
     3c1:	92                   	xchg   edx,eax
     3c2:	00 00                	add    BYTE PTR [rax],al
     3c4:	00 00                	add    BYTE PTR [rax],al
     3c6:	06                   	(bad)
     3c7:	0f 01 00             	sgdt   [rax]
     3ca:	00 08                	add    BYTE PTR [rax],cl
     3cc:	14 01                	adc    al,0x1
     3ce:	44 00 00             	add    BYTE PTR [rax],r8b
     3d1:	00 f0                	add    al,dh
     3d3:	03 00                	add    eax,DWORD PTR [rax]
     3d5:	00 01                	add    BYTE PTR [rcx],al
     3d7:	66 01 00             	add    WORD PTR [rax],ax
     3da:	00 01                	add    BYTE PTR [rcx],al
     3dc:	66 01 00             	add    WORD PTR [rax],ax
     3df:	00 01                	add    BYTE PTR [rcx],al
     3e1:	2a 00                	sub    al,BYTE PTR [rax]
     3e3:	00 00                	add    BYTE PTR [rax],al
     3e5:	01 2a                	add    DWORD PTR [rdx],ebp
     3e7:	00 00                	add    BYTE PTR [rax],al
     3e9:	00 01                	add    BYTE PTR [rcx],al
     3eb:	40 01 00             	rex add DWORD PTR [rax],eax
     3ee:	00 00                	add    BYTE PTR [rax],al
     3f0:	21 64 69 76          	and    DWORD PTR [rcx+rbp*2+0x76],esp
     3f4:	00 02                	add    BYTE PTR [rdx],al
     3f6:	e0 03                	loopne 3fb <__abi_tag+0x7f>
     3f8:	0e                   	(bad)
     3f9:	d6                   	(bad)
     3fa:	00 00                	add    BYTE PTR [rax],al
     3fc:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
     3ff:	00 00                	add    BYTE PTR [rax],al
     401:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     404:	00 00                	add    BYTE PTR [rax],al
     406:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     409:	00 00                	add    BYTE PTR [rax],al
     40b:	00 04 6a             	add    BYTE PTR [rdx+rbp*2],al
     40e:	01 00                	add    DWORD PTR [rax],eax
     410:	00 05 03 0e 81 00    	add    BYTE PTR [rip+0x810e03],al        # 811219 <_end+0x80b201>
     416:	00 00                	add    BYTE PTR [rax],al
     418:	22 04 00             	and    al,BYTE PTR [rax+rax*1]
     41b:	00 01                	add    BYTE PTR [rcx],al
     41d:	92                   	xchg   edx,eax
     41e:	00 00                	add    BYTE PTR [rax],al
     420:	00 00                	add    BYTE PTR [rax],al
     422:	04 c9                	add    al,0xc9
     424:	02 00                	add    al,BYTE PTR [rax]
     426:	00 e2                	add    dl,ah
     428:	03 0f                	add    ecx,DWORD PTR [rdi]
     42a:	05 01 00 00 3d       	add    eax,0x3d000001
     42f:	04 00                	add    al,0x0
     431:	00 01                	add    BYTE PTR [rcx],al
     433:	7a 00                	jp     435 <__abi_tag+0xb9>
     435:	00 00                	add    BYTE PTR [rax],al
     437:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     43a:	00 00                	add    BYTE PTR [rax],al
     43c:	00 04 58             	add    BYTE PTR [rax+rbx*2],al
     43f:	02 00                	add    al,BYTE PTR [rax]
     441:	00 26                	add    BYTE PTR [rsi],ah
     443:	04 0c                	add    al,0xc
     445:	62                   	(bad)
     446:	00 00                	add    BYTE PTR [rax],al
     448:	00 58 04             	add    BYTE PTR [rax+0x4],bl
     44b:	00 00                	add    BYTE PTR [rax],al
     44d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     453:	2a 00                	sub    al,BYTE PTR [rax]
     455:	00 00                	add    BYTE PTR [rax],al
     457:	00 06                	add    BYTE PTR [rsi],al
     459:	5e                   	pop    rsi
     45a:	02 00                	add    al,BYTE PTR [rax]
     45c:	00 09                	add    BYTE PTR [rcx],cl
     45e:	75 01                	jne    461 <__abi_tag+0xe5>
     460:	2a 00                	sub    al,BYTE PTR [rax]
     462:	00 00                	add    BYTE PTR [rax],al
     464:	78 04                	js     46a <__abi_tag+0xee>
     466:	00 00                	add    BYTE PTR [rax],al
     468:	01 78 04             	add    DWORD PTR [rax+0x4],edi
     46b:	00 00                	add    BYTE PTR [rax],al
     46d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     473:	2a 00                	sub    al,BYTE PTR [rax]
     475:	00 00                	add    BYTE PTR [rax],al
     477:	00 05 7d 04 00 00    	add    BYTE PTR [rip+0x47d],al        # 8fa <__abi_tag+0x57e>
     47d:	03 04 05 86 02 00 00 	add    eax,DWORD PTR [rax*1+0x286]
     484:	09 7d 04             	or     DWORD PTR [rbp+0x4],edi
     487:	00 00                	add    BYTE PTR [rax],al
     489:	04 86                	add    al,0x86
     48b:	01 00                	add    DWORD PTR [rax],eax
     48d:	00 29                	add    BYTE PTR [rcx],ch
     48f:	04 0c                	add    al,0xc
     491:	62                   	(bad)
     492:	00 00                	add    BYTE PTR [rax],al
     494:	00 a9 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],ch
     49a:	78 04                	js     4a0 <__abi_tag+0x124>
     49c:	00 00                	add    BYTE PTR [rax],al
     49e:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     4a4:	2a 00                	sub    al,BYTE PTR [rax]
     4a6:	00 00                	add    BYTE PTR [rax],al
     4a8:	00 10                	add    BYTE PTR [rax],dl
     4aa:	25 00 00 00 ca       	and    eax,0xca000000
     4af:	03 c9                	add    ecx,ecx
     4b1:	04 00                	add    al,0x0
     4b3:	00 01                	add    BYTE PTR [rcx],al
     4b5:	44 00 00             	add    BYTE PTR [rax],r8b
     4b8:	00 01                	add    BYTE PTR [rcx],al
     4ba:	2a 00                	sub    al,BYTE PTR [rax]
     4bc:	00 00                	add    BYTE PTR [rax],al
     4be:	01 2a                	add    DWORD PTR [rdx],ebp
     4c0:	00 00                	add    BYTE PTR [rax],al
     4c2:	00 01                	add    BYTE PTR [rcx],al
     4c4:	40 01 00             	rex add DWORD PTR [rax],eax
     4c7:	00 00                	add    BYTE PTR [rax],al
     4c9:	22 e0                	and    ah,al
     4cb:	00 00                	add    BYTE PTR [rax],al
     4cd:	00 02                	add    BYTE PTR [rdx],al
     4cf:	fa                   	cli
     4d0:	02 0d dc 04 00 00    	add    cl,BYTE PTR [rip+0x4dc]        # 9b2 <__abi_tag+0x636>
     4d6:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     4d9:	00 00                	add    BYTE PTR [rax],al
     4db:	00 23                	add    BYTE PTR [rbx],ah
     4dd:	f2 02 00             	repnz add al,BYTE PTR [rax]
     4e0:	00 02                	add    BYTE PTR [rdx],al
     4e2:	3d 02 0c 62 00       	cmp    eax,0x620c02
     4e7:	00 00                	add    BYTE PTR [rax],al
     4e9:	10 f1                	adc    cl,dh
     4eb:	02 00                	add    al,BYTE PTR [rax]
     4ed:	00 3f                	add    BYTE PTR [rdi],bh
     4ef:	02 fa                	add    bh,dl
     4f1:	04 00                	add    al,0x0
     4f3:	00 01                	add    BYTE PTR [rcx],al
     4f5:	3d 00 00 00 00       	cmp    eax,0x0
     4fa:	06                   	(bad)
     4fb:	c5 01 00             	(bad)
     4fe:	00 02                	add    BYTE PTR [rdx],al
     500:	76 0f                	jbe    511 <__abi_tag+0x195>
     502:	89 03                	mov    DWORD PTR [rbx],eax
     504:	00 00                	add    BYTE PTR [rax],al
     506:	15 05 00 00 01       	adc    eax,0x1000005
     50b:	92                   	xchg   edx,eax
     50c:	00 00                	add    BYTE PTR [rax],al
     50e:	00 01                	add    BYTE PTR [rcx],al
     510:	15 05 00 00 00       	adc    eax,0x5
     515:	05 81 00 00 00       	add    eax,0x81
     51a:	0a fe                	or     bh,dh
     51c:	00 00                	add    BYTE PTR [rax],al
     51e:	00 d7                	add    bh,dl
     520:	11 f5                	adc    ebp,esi
     522:	00 00                	add    BYTE PTR [rax],al
     524:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
     527:	00 00                	add    BYTE PTR [rax],al
     529:	3d 05 00 00 01       	cmp    eax,0x1000005
     52e:	92                   	xchg   edx,eax
     52f:	00 00                	add    BYTE PTR [rax],al
     531:	00 01                	add    BYTE PTR [rcx],al
     533:	15 05 00 00 01       	adc    eax,0x1000005
     538:	62                   	(bad)
     539:	00 00                	add    BYTE PTR [rax],al
     53b:	00 00                	add    BYTE PTR [rax],al
     53d:	0a 4a 02             	or     cl,BYTE PTR [rdx+0x2]
     540:	00 00                	add    BYTE PTR [rax],al
     542:	db 1a                	fistp  DWORD PTR [rdx]
     544:	41 02 00             	add    al,BYTE PTR [r8]
     547:	00 36                	add    BYTE PTR [rsi],dh
     549:	00 00                	add    BYTE PTR [rax],al
     54b:	00 60 05             	add    BYTE PTR [rax+0x5],ah
     54e:	00 00                	add    BYTE PTR [rax],al
     550:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     556:	15 05 00 00 01       	adc    eax,0x1000005
     55b:	62                   	(bad)
     55c:	00 00                	add    BYTE PTR [rax],al
     55e:	00 00                	add    BYTE PTR [rax],al
     560:	04 64                	add    al,0x64
     562:	26 00 00             	es add BYTE PTR [rax],al
     565:	9b                   	fwait
     566:	03 0c 62             	add    ecx,DWORD PTR [rdx+riz*2]
     569:	00 00                	add    BYTE PTR [rax],al
     56b:	00 76 05             	add    BYTE PTR [rsi+0x5],dh
     56e:	00 00                	add    BYTE PTR [rax],al
     570:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     576:	06                   	(bad)
     577:	06                   	(bad)
     578:	02 00                	add    al,BYTE PTR [rax]
     57a:	00 09                	add    BYTE PTR [rcx],cl
     57c:	8f 01                	pop    QWORD PTR [rcx]
     57e:	2a 00                	sub    al,BYTE PTR [rax]
     580:	00 00                	add    BYTE PTR [rax],al
     582:	96                   	xchg   esi,eax
     583:	05 00 00 01 81       	add    eax,0x81010000
     588:	00 00                	add    BYTE PTR [rax],al
     58a:	00 01                	add    BYTE PTR [rcx],al
     58c:	96                   	xchg   esi,eax
     58d:	05 00 00 01 2a       	add    eax,0x2a010000
     592:	00 00                	add    BYTE PTR [rax],al
     594:	00 00                	add    BYTE PTR [rax],al
     596:	05 84 04 00 00       	add    eax,0x484
     59b:	06                   	(bad)
     59c:	67 02 00             	add    al,BYTE PTR [eax]
     59f:	00 09                	add    BYTE PTR [rcx],cl
     5a1:	4f 01 62 00          	rex.WRXB add QWORD PTR [r10+0x0],r12
     5a5:	00 00                	add    BYTE PTR [rax],al
     5a7:	b6 05                	mov    dh,0x5
     5a9:	00 00                	add    BYTE PTR [rax],al
     5ab:	01 81 00 00 00 01    	add    DWORD PTR [rcx+0x1000000],eax
     5b1:	7d 04                	jge    5b7 <__abi_tag+0x23b>
     5b3:	00 00                	add    BYTE PTR [rax],al
     5b5:	00 24 37             	add    BYTE PTR [rdi+rsi*1],ah
     5b8:	02 00                	add    al,BYTE PTR [rax]
     5ba:	00 0e                	add    BYTE PTR [rsi],cl
     5bc:	57                   	push   rdi
     5bd:	01 0b                	add    DWORD PTR [rbx],ecx
     5bf:	15 06 00 00 02       	adc    eax,0x2000006
     5c4:	05 cc 0b 34 01       	add    eax,0x1340bcc
     5c9:	00 00                	add    BYTE PTR [rax],al
     5cb:	02 05 dc 0b 15 06    	add    al,BYTE PTR [rip+0x6150bdc]        # 61511ad <_end+0x614b195>
     5d1:	00 00                	add    BYTE PTR [rax],al
     5d3:	02 05 e7 0b 30 06    	add    al,BYTE PTR [rip+0x6300be7]        # 63011c0 <_end+0x62fb1a8>
     5d9:	00 00                	add    BYTE PTR [rax],al
     5db:	02 05 e8 0b 46 06    	add    al,BYTE PTR [rip+0x6460be8]        # 64611c9 <_end+0x645b1b1>
     5e1:	00 00                	add    BYTE PTR [rax],al
     5e3:	02 05 e9 0b 69 06    	add    al,BYTE PTR [rip+0x6690be9]        # 66911d2 <_end+0x668b1ba>
     5e9:	00 00                	add    BYTE PTR [rax],al
     5eb:	02 05 eb 0b 8c 06    	add    al,BYTE PTR [rip+0x68c0beb]        # 68c11dc <_end+0x68bb1c4>
     5f1:	00 00                	add    BYTE PTR [rax],al
     5f3:	02 05 ec 0b a7 06    	add    al,BYTE PTR [rip+0x6a70bec]        # 6a711e5 <_end+0x6a6b1cd>
     5f9:	00 00                	add    BYTE PTR [rax],al
     5fb:	0f 64 69 76          	pcmpgtb mm5,QWORD PTR [rcx+0x76]
     5ff:	00 d9                	add    cl,bl
     601:	dd 01                	fld    QWORD PTR [rcx]
     603:	00 00                	add    BYTE PTR [rax],al
     605:	34 01                	xor    al,0x1
     607:	00 00                	add    BYTE PTR [rax],al
     609:	01 97 00 00 00 01    	add    DWORD PTR [rdi+0x1000000],edx
     60f:	97                   	xchg   edi,eax
     610:	00 00                	add    BYTE PTR [rax],al
     612:	00 00                	add    BYTE PTR [rax],al
     614:	00 04 c8             	add    BYTE PTR [rax+rcx*8],al
     617:	02 00                	add    al,BYTE PTR [rax]
     619:	00 e6                	add    dh,ah
     61b:	03 1e                	add    ebx,DWORD PTR [rsi]
     61d:	34 01                	xor    al,0x1
     61f:	00 00                	add    BYTE PTR [rax],al
     621:	30 06                	xor    BYTE PTR [rsi],al
     623:	00 00                	add    BYTE PTR [rax],al
     625:	01 97 00 00 00 01    	add    DWORD PTR [rdi+0x1000000],edx
     62b:	97                   	xchg   edi,eax
     62c:	00 00                	add    BYTE PTR [rax],al
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	04 52                	add    al,0x52
     632:	02 00                	add    al,BYTE PTR [rax]
     634:	00 ed                	add    ch,ch
     636:	01 01                	add    DWORD PTR [rcx],eax
     638:	97                   	xchg   edi,eax
     639:	00 00                	add    BYTE PTR [rax],al
     63b:	00 46 06             	add    BYTE PTR [rsi+0x6],al
     63e:	00 00                	add    BYTE PTR [rax],al
     640:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     646:	0a 32                	or     dh,BYTE PTR [rdx]
     648:	01 00                	add    DWORD PTR [rax],eax
     64a:	00 ee                	add    dh,ch
     64c:	16                   	(bad)
     64d:	29 01                	sub    DWORD PTR [rcx],eax
     64f:	00 00                	add    BYTE PTR [rax],al
     651:	97                   	xchg   edi,eax
     652:	00 00                	add    BYTE PTR [rax],al
     654:	00 69 06             	add    BYTE PTR [rcx+0x6],ch
     657:	00 00                	add    BYTE PTR [rax],al
     659:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     65f:	15 05 00 00 01       	adc    eax,0x1000005
     664:	62                   	(bad)
     665:	00 00                	add    BYTE PTR [rax],al
     667:	00 00                	add    BYTE PTR [rax],al
     669:	0a bf 02 00 00 f3    	or     bh,BYTE PTR [rdi-0xcfffffe]
     66f:	1f                   	(bad)
     670:	b6 02                	mov    dh,0x2
     672:	00 00                	add    BYTE PTR [rax],al
     674:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     675:	00 00                	add    BYTE PTR [rax],al
     677:	00 8c 06 00 00 01 92 	add    BYTE PTR [rsi+rax*1-0x6dff0000],cl
     67e:	00 00                	add    BYTE PTR [rax],al
     680:	00 01                	add    BYTE PTR [rcx],al
     682:	15 05 00 00 01       	adc    eax,0x1000005
     687:	62                   	(bad)
     688:	00 00                	add    BYTE PTR [rax],al
     68a:	00 00                	add    BYTE PTR [rax],al
     68c:	06                   	(bad)
     68d:	af                   	scas   eax,DWORD PTR es:[rdi]
     68e:	02 00                	add    al,BYTE PTR [rax]
     690:	00 02                	add    BYTE PTR [rdx],al
     692:	7c 0e                	jl     6a2 <__abi_tag+0x326>
     694:	ac                   	lods   al,BYTE PTR ds:[rsi]
     695:	00 00                	add    BYTE PTR [rax],al
     697:	00 a7 06 00 00 01    	add    BYTE PTR [rdi+0x1000006],ah
     69d:	92                   	xchg   edx,eax
     69e:	00 00                	add    BYTE PTR [rax],al
     6a0:	00 01                	add    BYTE PTR [rcx],al
     6a2:	15 05 00 00 00       	adc    eax,0x5
     6a7:	06                   	(bad)
     6a8:	2b 00                	sub    eax,DWORD PTR [rax]
     6aa:	00 00                	add    BYTE PTR [rax],al
     6ac:	02 7f 14             	add    bh,BYTE PTR [rdi+0x14]
     6af:	9e                   	sahf
     6b0:	00 00                	add    BYTE PTR [rax],al
     6b2:	00 c2                	add    dl,al
     6b4:	06                   	(bad)
     6b5:	00 00                	add    BYTE PTR [rax],al
     6b7:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     6bd:	15 05 00 00 00       	adc    eax,0x5
     6c2:	02 0a                	add    cl,BYTE PTR [rdx]
     6c4:	27                   	(bad)
     6c5:	0c 3c                	or     al,0x3c
     6c7:	03 00                	add    eax,DWORD PTR [rax]
     6c9:	00 02                	add    BYTE PTR [rdx],al
     6cb:	0a 2b                	or     ch,BYTE PTR [rbx]
     6cd:	0e                   	(bad)
     6ce:	58                   	pop    rax
     6cf:	03 00                	add    eax,DWORD PTR [rax]
     6d1:	00 02                	add    BYTE PTR [rdx],al
     6d3:	0a 2e                	or     ch,BYTE PTR [rsi]
     6d5:	0e                   	(bad)
     6d6:	c9                   	leave
     6d7:	04 00                	add    al,0x0
     6d9:	00 02                	add    BYTE PTR [rdx],al
     6db:	0a 36                	or     dh,BYTE PTR [rsi]
     6dd:	0c d6                	or     al,0xd6
     6df:	00 00                	add    BYTE PTR [rax],al
     6e1:	00 02                	add    BYTE PTR [rdx],al
     6e3:	0a 37                	or     dh,BYTE PTR [rdi]
     6e5:	0c 05                	or     al,0x5
     6e7:	01 00                	add    DWORD PTR [rax],eax
     6e9:	00 03                	add    BYTE PTR [rbx],al
     6eb:	10 04 a4             	adc    BYTE PTR [rsp+riz*4],al
     6ee:	02 00                	add    al,BYTE PTR [rax]
     6f0:	00 02                	add    BYTE PTR [rdx],al
     6f2:	0a 39                	or     bh,BYTE PTR [rcx]
     6f4:	0c 7a                	or     al,0x7a
     6f6:	02 00                	add    al,BYTE PTR [rax]
     6f8:	00 03                	add    BYTE PTR [rbx],al
     6fa:	10 05 0f 02 00 00    	adc    BYTE PTR [rip+0x20f],al        # 90f <__abi_tag+0x593>
     700:	02 0a                	add    cl,BYTE PTR [rdx]
     702:	39 0c 92             	cmp    DWORD PTR [rdx+rdx*4],ecx
     705:	02 00                	add    al,BYTE PTR [rax]
     707:	00 02                	add    BYTE PTR [rdx],al
     709:	0a 39                	or     bh,BYTE PTR [rcx]
     70b:	0c aa                	or     al,0xaa
     70d:	02 00                	add    al,BYTE PTR [rax]
     70f:	00 02                	add    BYTE PTR [rdx],al
     711:	0a 39                	or     bh,BYTE PTR [rcx]
     713:	0c c2                	or     al,0xc2
     715:	02 00                	add    al,BYTE PTR [rax]
     717:	00 02                	add    BYTE PTR [rdx],al
     719:	0a 39                	or     bh,BYTE PTR [rcx]
     71b:	0c da                	or     al,0xda
     71d:	02 00                	add    al,BYTE PTR [rax]
     71f:	00 02                	add    BYTE PTR [rdx],al
     721:	0a 39                	or     bh,BYTE PTR [rcx]
     723:	0c f2                	or     al,0xf2
     725:	02 00                	add    al,BYTE PTR [rax]
     727:	00 02                	add    BYTE PTR [rdx],al
     729:	0a 39                	or     bh,BYTE PTR [rcx]
     72b:	0c 0a                	or     al,0xa
     72d:	03 00                	add    eax,DWORD PTR [rax]
     72f:	00 02                	add    BYTE PTR [rdx],al
     731:	0a 3a                	or     bh,BYTE PTR [rdx]
     733:	0c 73                	or     al,0x73
     735:	03 00                	add    eax,DWORD PTR [rax]
     737:	00 02                	add    BYTE PTR [rdx],al
     739:	0a 3b                	or     bh,BYTE PTR [rbx]
     73b:	0c 90                	or     al,0x90
     73d:	03 00                	add    eax,DWORD PTR [rax]
     73f:	00 02                	add    BYTE PTR [rdx],al
     741:	0a 3c 0c             	or     bh,BYTE PTR [rsp+rcx*1]
     744:	b0 03                	mov    al,0x3
     746:	00 00                	add    BYTE PTR [rax],al
     748:	02 0a                	add    cl,BYTE PTR [rdx]
     74a:	3d 0c c6 03 00       	cmp    eax,0x3c60c
     74f:	00 02                	add    BYTE PTR [rdx],al
     751:	0a 3f                	or     bh,BYTE PTR [rdi]
     753:	0c fb                	or     al,0xfb
     755:	05 00 00 02 0a       	add    eax,0xa020000
     75a:	3f                   	(bad)
     75b:	0c 22                	or     al,0x22
     75d:	03 00                	add    eax,DWORD PTR [rax]
     75f:	00 02                	add    BYTE PTR [rdx],al
     761:	0a 3f                	or     bh,BYTE PTR [rdi]
     763:	0c f0                	or     al,0xf0
     765:	03 00                	add    eax,DWORD PTR [rax]
     767:	00 02                	add    BYTE PTR [rdx],al
     769:	0a 41 0c             	or     al,BYTE PTR [rcx+0xc]
     76c:	0c 04                	or     al,0x4
     76e:	00 00                	add    BYTE PTR [rax],al
     770:	02 0a                	add    cl,BYTE PTR [rdx]
     772:	43 0c 22             	rex.XB or al,0x22
     775:	04 00                	add    al,0x0
     777:	00 02                	add    BYTE PTR [rdx],al
     779:	0a 46 0c             	or     al,BYTE PTR [rsi+0xc]
     77c:	3d 04 00 00 02       	cmp    eax,0x2000004
     781:	0a 47 0c             	or     al,BYTE PTR [rdi+0xc]
     784:	58                   	pop    rax
     785:	04 00                	add    al,0x0
     787:	00 02                	add    BYTE PTR [rdx],al
     789:	0a 48 0c             	or     cl,BYTE PTR [rax+0xc]
     78c:	89 04 00             	mov    DWORD PTR [rax+rax*1],eax
     78f:	00 02                	add    BYTE PTR [rdx],al
     791:	0a 4a 0c             	or     cl,BYTE PTR [rdx+0xc]
     794:	a9 04 00 00 02       	test   eax,0x2000004
     799:	0a 4b 0c             	or     cl,BYTE PTR [rbx+0xc]
     79c:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
     79f:	00 02                	add    BYTE PTR [rdx],al
     7a1:	0a 4d 0c             	or     cl,BYTE PTR [rbp+0xc]
     7a4:	e9 04 00 00 02       	jmp    20007ad <_end+0x1ffa795>
     7a9:	0a 4e 0c             	or     cl,BYTE PTR [rsi+0xc]
     7ac:	fa                   	cli
     7ad:	04 00                	add    al,0x0
     7af:	00 02                	add    BYTE PTR [rdx],al
     7b1:	0a 4f 0c             	or     cl,BYTE PTR [rdi+0xc]
     7b4:	1a 05 00 00 02 0a    	sbb    al,BYTE PTR [rip+0xa020000]        # a0207ba <_end+0xa01a7a2>
     7ba:	50                   	push   rax
     7bb:	0c 3d                	or     al,0x3d
     7bd:	05 00 00 02 0a       	add    eax,0xa020000
     7c2:	51                   	push   rcx
     7c3:	0c 60                	or     al,0x60
     7c5:	05 00 00 02 0a       	add    eax,0xa020000
     7ca:	53                   	push   rbx
     7cb:	0c 76                	or     al,0x76
     7cd:	05 00 00 02 0a       	add    eax,0xa020000
     7d2:	54                   	push   rsp
     7d3:	0c 9b                	or     al,0x9b
     7d5:	05 00 00 03 02       	add    eax,0x2030000
     7da:	04 00                	add    al,0x0
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	00 03                	add    BYTE PTR [rbx],al
     7e0:	02 04 ce             	add    al,BYTE PTR [rsi+rcx*8]
     7e3:	02 00                	add    al,BYTE PTR [rax]
     7e5:	00 08                	add    BYTE PTR [rax],cl
     7e7:	55                   	push   rbp
     7e8:	01 00                	add    DWORD PTR [rax],eax
     7ea:	00 0b                	add    BYTE PTR [rbx],cl
     7ec:	1a 14 6e             	sbb    dl,BYTE PTR [rsi+rbp*2]
     7ef:	00 00                	add    BYTE PTR [rax],al
     7f1:	00 09                	add    BYTE PTR [rcx],cl
     7f3:	e6 07                	out    0x7,al
     7f5:	00 00                	add    BYTE PTR [rax],al
     7f7:	11 8e 02 00 00 0a    	adc    DWORD PTR [rsi+0xa000002],ecx
     7fd:	69 00 00 00 0f 11    	imul   eax,DWORD PTR [rax],0x110f0000
     803:	71 01                	jno    806 <__abi_tag+0x48a>
     805:	00 00                	add    BYTE PTR [rax],al
     807:	0e                   	(bad)
     808:	69 00 00 00 20 25    	imul   eax,DWORD PTR [rax],0x25200000
     80e:	3a 01                	cmp    al,BYTE PTR [rcx]
     810:	00 00                	add    BYTE PTR [rax],al
     812:	0d 06 10 f2 07       	or     eax,0x7f21006
     817:	00 00                	add    BYTE PTR [rax],al
     819:	40                   	rex
     81a:	42 0f 00 26          	rex.X verr WORD PTR [rsi]
     81e:	cc                   	int3
     81f:	01 00                	add    DWORD PTR [rax],eax
     821:	00 0d 1d 06 b2 01    	add    BYTE PTR [rip+0x1b2061d],cl        # 1b20e44 <_end+0x1b1ae2c>
     827:	00 00                	add    BYTE PTR [rax],al
     829:	42 08 00             	rex.X or BYTE PTR [rax],al
     82c:	00 01                	add    BYTE PTR [rcx],al
     82e:	92                   	xchg   edx,eax
     82f:	00 00                	add    BYTE PTR [rax],al
     831:	00 01                	add    BYTE PTR [rcx],al
     833:	e6 07                	out    0x7,al
     835:	00 00                	add    BYTE PTR [rax],al
     837:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     83d:	e6 07                	out    0x7,al
     83f:	00 00                	add    BYTE PTR [rax],al
     841:	00 27                	add    BYTE PTR [rdi],ah
     843:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
     846:	00 01                	add    BYTE PTR [rcx],al
     848:	08 05 62 00 00 00    	or     BYTE PTR [rip+0x62],al        # 8b0 <__abi_tag+0x534>
     84e:	d0 11                	rcl    BYTE PTR [rcx],1
     850:	00 00                	add    BYTE PTR [rax],al
     852:	00 00                	add    BYTE PTR [rax],al
     854:	00 00                	add    BYTE PTR [rax],al
     856:	33 00                	xor    eax,DWORD PTR [rax]
     858:	00 00                	add    BYTE PTR [rax],al
     85a:	00 00                	add    BYTE PTR [rax],al
     85c:	00 00                	add    BYTE PTR [rax],al
     85e:	01 9c 12 32 02 00 00 	add    DWORD PTR [rdx+rdx*1+0x232],ebx
     865:	0e                   	(bad)
     866:	62                   	(bad)
     867:	00 00                	add    BYTE PTR [rax],al
     869:	00 10                	add    BYTE PTR [rax],dl
     86b:	00 00                	add    BYTE PTR [rax],al
     86d:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
     870:	00 00                	add    BYTE PTR [rax],al
     872:	12 fc                	adc    bh,ah
     874:	01 00                	add    DWORD PTR [rax],eax
     876:	00 1a                	add    BYTE PTR [rdx],bl
     878:	15 05 00 00 2d       	adc    eax,0x2d000005
     87d:	00 00                	add    BYTE PTR [rax],al
     87f:	00 27                	add    BYTE PTR [rdi],ah
     881:	00 00                	add    BYTE PTR [rax],al
     883:	00 13                	add    BYTE PTR [rbx],dl
     885:	5e                   	pop    rsi
     886:	01 00                	add    DWORD PTR [rax],eax
     888:	00 0a                	add    BYTE PTR [rdx],cl
     88a:	0e                   	(bad)
     88b:	e6 07                	out    0x7,al
     88d:	00 00                	add    BYTE PTR [rax],al
     88f:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
     892:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
     895:	00 00                	add    BYTE PTR [rax],al
     897:	13 9a 02 00 00 0b    	adc    ebx,DWORD PTR [rdx+0xb000002]
     89d:	0b 81 00 00 00 5a    	or     eax,DWORD PTR [rcx+0x5a000000]
     8a3:	00 00                	add    BYTE PTR [rax],al
     8a5:	00 58 00             	add    BYTE PTR [rax+0x0],bl
     8a8:	00 00                	add    BYTE PTR [rax],al
     8aa:	28 28                	sub    BYTE PTR [rax],ch
     8ac:	08 00                	or     BYTE PTR [rax],al
     8ae:	00 01                	add    BYTE PTR [rcx],al
     8b0:	0e                   	(bad)
     8b1:	0e                   	(bad)
     8b2:	e6 07                	out    0x7,al
     8b4:	00 00                	add    BYTE PTR [rax],al
     8b6:	00 04 29             	add    BYTE PTR [rcx+rbp*1],al
     8b9:	90                   	nop
     8ba:	03 00                	add    eax,DWORD PTR [rax]
     8bc:	00 d4                	add    ah,dl
     8be:	11 00                	adc    DWORD PTR [rax],eax
     8c0:	00 00                	add    BYTE PTR [rax],al
     8c2:	00 00                	add    BYTE PTR [rax],al
     8c4:	00 01                	add    BYTE PTR [rcx],al
     8c6:	0c 00                	or     al,0x0
     8c8:	00 00                	add    BYTE PTR [rax],al
     8ca:	01 0a                	add    DWORD PTR [rdx],ecx
     8cc:	21 f7                	and    edi,esi
     8ce:	08 00                	or     BYTE PTR [rax],al
     8d0:	00 2a                	add    BYTE PTR [rdx],ch
     8d2:	a2 03 00 00 6a 00 00 	movabs ds:0x680000006a000003,al
     8d9:	00 68 
     8db:	00 00                	add    BYTE PTR [rax],al
     8dd:	00 14 e8             	add    BYTE PTR [rax+rbp*8],dl
     8e0:	11 00                	adc    DWORD PTR [rax],eax
     8e2:	00 00                	add    BYTE PTR [rax],al
     8e4:	00 00                	add    BYTE PTR [rax],al
     8e6:	00 1a                	add    BYTE PTR [rdx],bl
     8e8:	05 00 00 0b 01       	add    eax,0x10b0000
     8ed:	54                   	push   rsp
     8ee:	01 30                	add    DWORD PTR [rax],esi
     8f0:	0b 01                	or     eax,DWORD PTR [rcx]
     8f2:	51                   	push   rcx
     8f3:	01 3a                	add    DWORD PTR [rdx],edi
     8f5:	00 00                	add    BYTE PTR [rax],al
     8f7:	14 ff                	adc    al,0xff
     8f9:	11 00                	adc    DWORD PTR [rax],eax
     8fb:	00 00                	add    BYTE PTR [rax],al
     8fd:	00 00                	add    BYTE PTR [rax],al
     8ff:	00 1d 08 00 00 0b    	add    BYTE PTR [rip+0xb000008],bl        # b00090d <_end+0xaffa8f5>
     905:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
     908:	03 0c 40             	add    ecx,DWORD PTR [rax+rax*2]
     90b:	00 00                	add    BYTE PTR [rax],al
     90d:	00 00                	add    BYTE PTR [rax],al
     90f:	00 00                	add    BYTE PTR [rax],al
     911:	0b 01                	or     eax,DWORD PTR [rcx]
     913:	52                   	push   rdx
     914:	03 0a                	add    ecx,DWORD PTR [rdx]
     916:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     919:	00 00                	add    BYTE PTR [rax],al
     91b:	8a 1c 00             	mov    bl,BYTE PTR [rax+rax*1]
     91e:	00 05 00 01 08 ad    	add    BYTE PTR [rip+0xffffffffad080100],al        # ffffffffad080a24 <_end+0xffffffffad07aa0c>
     924:	02 00                	add    al,BYTE PTR [rax]
     926:	00 3b                	add    BYTE PTR [rbx],bh
     928:	33 00                	xor    eax,DWORD PTR [rax]
     92a:	00 00                	add    BYTE PTR [rax],al
     92c:	21 81 01 00 00 00    	and    DWORD PTR [rcx+0x1],eax
     932:	00 00                	add    BYTE PTR [rax],al
     934:	00 00                	add    BYTE PTR [rax],al
     936:	13 00                	adc    eax,DWORD PTR [rax]
     938:	00 00                	add    BYTE PTR [rax],al
     93a:	00 00                	add    BYTE PTR [rax],al
     93c:	00 d4                	add    ah,dl
     93e:	07                   	(bad)
     93f:	00 00                	add    BYTE PTR [rax],al
     941:	00 00                	add    BYTE PTR [rax],al
     943:	00 00                	add    BYTE PTR [rax],al
     945:	f3 00 00             	repz add BYTE PTR [rax],al
     948:	00 06                	add    BYTE PTR [rsi],al
     94a:	37                   	(bad)
     94b:	0b 00                	or     eax,DWORD PTR [rax]
     94d:	00 07                	add    BYTE PTR [rdi],al
     94f:	d6                   	(bad)
     950:	17                   	(bad)
     951:	3a 00                	cmp    al,BYTE PTR [rax]
     953:	00 00                	add    BYTE PTR [rax],al
     955:	05 08 07 a0 01       	add    eax,0x1a00708
     95a:	00 00                	add    BYTE PTR [rax],al
     95c:	23 08                	and    ecx,DWORD PTR [rax]
     95e:	3c e3                	cmp    al,0xe3
     960:	02 00                	add    al,BYTE PTR [rax]
     962:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     965:	00 00                	add    BYTE PTR [rax],al
     967:	07                   	(bad)
     968:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     969:	02 00                	add    al,BYTE PTR [rax]
     96b:	00 08                	add    BYTE PTR [rax],cl
     96d:	3d 09 66 00 00       	cmp    eax,0x6609
     972:	00 00                	add    BYTE PTR [rax],al
     974:	24 72                	and    al,0x72
     976:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     978:	00 3e                	add    BYTE PTR [rsi],bh
     97a:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
     97d:	00 00                	add    BYTE PTR [rax],al
     97f:	04 00                	add    al,0x0
     981:	3c 04                	cmp    al,0x4
     983:	05 69 6e 74 00       	add    eax,0x746e69
     988:	10 66 00             	adc    BYTE PTR [rsi+0x0],ah
     98b:	00 00                	add    BYTE PTR [rax],al
     98d:	06                   	(bad)
     98e:	e4 02                	in     al,0x2
     990:	00 00                	add    BYTE PTR [rax],al
     992:	08 3f                	or     BYTE PTR [rdi],bh
     994:	05 41 00 00 00       	add    eax,0x41
     999:	23 10                	and    edx,DWORD PTR [rax]
     99b:	44 09 00             	or     DWORD PTR [rax],r8d
     99e:	00 00                	add    BYTE PTR [rax],al
     9a0:	a3 00 00 00 07 6e 02 	movabs ds:0x26e07000000,eax
     9a7:	00 00 
     9a9:	08 45 0e             	or     BYTE PTR [rbp+0xe],al
     9ac:	a3 00 00 00 00 24 72 	movabs ds:0x6d65722400000000,eax
     9b3:	65 6d 
     9b5:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
     9b8:	a3 00 00 00 08 00 05 	movabs ds:0x508050008000000,eax
     9bf:	08 05 
     9c1:	92                   	xchg   edx,eax
     9c2:	01 00                	add    DWORD PTR [rax],eax
     9c4:	00 06                	add    BYTE PTR [rsi],al
     9c6:	0a 00                	or     al,BYTE PTR [rax]
     9c8:	00 00                	add    BYTE PTR [rax],al
     9ca:	08 47 05             	or     BYTE PTR [rdi+0x5],al
     9cd:	7e 00                	jle    9cf <__abi_tag+0x653>
     9cf:	00 00                	add    BYTE PTR [rax],al
     9d1:	23 10                	and    edx,DWORD PTR [rax]
     9d3:	4e d4                	rex.WRX (bad)
     9d5:	01 00                	add    DWORD PTR [rax],eax
     9d7:	00 db                	add    bl,bl
     9d9:	00 00                	add    BYTE PTR [rax],al
     9db:	00 07                	add    BYTE PTR [rdi],al
     9dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9de:	02 00                	add    al,BYTE PTR [rax]
     9e0:	00 08                	add    BYTE PTR [rax],cl
     9e2:	4f 13 db             	rex.WRXB adc r11,r11
     9e5:	00 00                	add    BYTE PTR [rax],al
     9e7:	00 00                	add    BYTE PTR [rax],al
     9e9:	24 72                	and    al,0x72
     9eb:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     9ed:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     9f0:	db 00                	fild   DWORD PTR [rax]
     9f2:	00 00                	add    BYTE PTR [rax],al
     9f4:	08 00                	or     BYTE PTR [rax],al
     9f6:	05 08 05 8d 01       	add    eax,0x18d0508
     9fb:	00 00                	add    BYTE PTR [rax],al
     9fd:	06                   	(bad)
     9fe:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
     a02:	08 51 05             	or     BYTE PTR [rcx+0x5],dl
     a05:	b6 00                	mov    dh,0x0
     a07:	00 00                	add    BYTE PTR [rax],al
     a09:	05 02 07 73 02       	add    eax,0x2730702
     a0e:	00 00                	add    BYTE PTR [rax],al
     a10:	08 06                	or     BYTE PTR [rsi],al
     a12:	01 00                	add    DWORD PTR [rax],eax
     a14:	00 2d f5 00 00 00    	add    BYTE PTR [rip+0xf5],ch        # b0f <__abi_tag+0x793>
     a1a:	05 01 06 2d 02       	add    eax,0x22d0601
     a1f:	00 00                	add    BYTE PTR [rax],al
     a21:	10 ff                	adc    bh,bh
     a23:	00 00                	add    BYTE PTR [rax],al
     a25:	00 05 01 08 24 02    	add    BYTE PTR [rip+0x2240801],al        # 224122c <_end+0x223b214>
     a2b:	00 00                	add    BYTE PTR [rax],al
     a2d:	05 04 07 a5 01       	add    eax,0x1a50704
     a32:	00 00                	add    BYTE PTR [rax],al
     a34:	05 01 06 26 02       	add    eax,0x2260601
     a39:	00 00                	add    BYTE PTR [rax],al
     a3b:	05 02 05 05 01       	add    eax,0x1050502
     a40:	00 00                	add    BYTE PTR [rax],al
     a42:	06                   	(bad)
     a43:	53                   	push   rbx
     a44:	01 00                	add    DWORD PTR [rax],eax
     a46:	00 09                	add    BYTE PTR [rcx],cl
     a48:	2a 16                	sub    dl,BYTE PTR [rsi]
     a4a:	12 01                	adc    al,BYTE PTR [rcx]
     a4c:	00 00                	add    BYTE PTR [rax],al
     a4e:	06                   	(bad)
     a4f:	bd 05 00 00 09       	mov    ebp,0x9000005
     a54:	2d 1b 3a 00 00       	sub    eax,0x3a1b
     a59:	00 3d 08 08 ff 00    	add    BYTE PTR [rip+0xff0808],bh        # ff1267 <_end+0xfeb24f>
     a5f:	00 00                	add    BYTE PTR [rax],al
     a61:	2d 41 01 00 00       	sub    eax,0x141
     a66:	05 08 07 9b 01       	add    eax,0x19b0708
     a6b:	00 00                	add    BYTE PTR [rax],al
     a6d:	3e d5 02 00 00       	ds {rex2 0x2} add BYTE PTR [rax],al
     a72:	08 b4 03 0f 5f 01 00 	or     BYTE PTR [rbx+rax*1+0x15f0f],dh
     a79:	00 08                	add    BYTE PTR [rax],cl
     a7b:	64 01 00             	add    DWORD PTR fs:[rax],eax
     a7e:	00 2e                	add    BYTE PTR [rsi],ch
     a80:	66 00 00             	data16 add BYTE PTR [rax],al
     a83:	00 78 01             	add    BYTE PTR [rax+0x1],bh
     a86:	00 00                	add    BYTE PTR [rax],al
     a88:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     a8b:	00 00                	add    BYTE PTR [rax],al
     a8d:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     a90:	00 00                	add    BYTE PTR [rax],al
     a92:	00 08                	add    BYTE PTR [rax],cl
     a94:	7d 01                	jge    a97 <__abi_tag+0x71b>
     a96:	00 00                	add    BYTE PTR [rax],al
     a98:	3f                   	(bad)
     a99:	40 73 74             	rex jae b10 <__abi_tag+0x794>
     a9c:	64 00 18             	add    BYTE PTR fs:[rax],bl
     a9f:	32 01                	xor    al,BYTE PTR [rcx]
     aa1:	0b 4e 03             	or     ecx,DWORD PTR [rsi+0x3]
     aa4:	00 00                	add    BYTE PTR [rax],al
     aa6:	02 0a                	add    cl,BYTE PTR [rdx]
     aa8:	83 0b 72             	or     DWORD PTR [rbx],0x72
     aab:	00 00                	add    BYTE PTR [rax],al
     aad:	00 02                	add    BYTE PTR [rdx],al
     aaf:	0a 84 0b aa 00 00 00 	or     al,BYTE PTR [rbx+rcx*1+0xaa]
     ab6:	02 0a                	add    cl,BYTE PTR [rdx]
     ab8:	8a 0b                	mov    cl,BYTE PTR [rbx]
     aba:	4e 03 00             	rex.WRX add r8,QWORD PTR [rax]
     abd:	00 02                	add    BYTE PTR [rdx],al
     abf:	0a 8d 0b 6a 03 00    	or     cl,BYTE PTR [rbp+0x36a0b]
     ac5:	00 02                	add    BYTE PTR [rdx],al
     ac7:	0a 90 0b 85 03 00    	or     dl,BYTE PTR [rax+0x3850b]
     acd:	00 02                	add    BYTE PTR [rdx],al
     acf:	0a 91 0b a2 03 00    	or     dl,BYTE PTR [rcx+0x3a20b]
     ad5:	00 02                	add    BYTE PTR [rdx],al
     ad7:	0a 92 0b b8 03 00    	or     dl,BYTE PTR [rdx+0x3b80b]
     add:	00 02                	add    BYTE PTR [rdx],al
     adf:	0a 93 0b ce 03 00    	or     dl,BYTE PTR [rbx+0x3ce0b]
     ae5:	00 02                	add    BYTE PTR [rdx],al
     ae7:	0a 95 0b f8 03 00    	or     dl,BYTE PTR [rbp+0x3f80b]
     aed:	00 02                	add    BYTE PTR [rdx],al
     aef:	0a 98 0b 14 04 00    	or     bl,BYTE PTR [rax+0x4140b]
     af5:	00 02                	add    BYTE PTR [rdx],al
     af7:	0a 9a 0b 2a 04 00    	or     bl,BYTE PTR [rdx+0x42a0b]
     afd:	00 02                	add    BYTE PTR [rdx],al
     aff:	0a 9d 0b 45 04 00    	or     bl,BYTE PTR [rbp+0x4450b]
     b05:	00 02                	add    BYTE PTR [rdx],al
     b07:	0a 9e 0b 60 04 00    	or     bl,BYTE PTR [rsi+0x4600b]
     b0d:	00 02                	add    BYTE PTR [rdx],al
     b0f:	0a 9f 0b 91 04 00    	or     bl,BYTE PTR [rdi+0x4910b]
     b15:	00 02                	add    BYTE PTR [rdx],al
     b17:	0a a1 0b b1 04 00    	or     ah,BYTE PTR [rcx+0x4b10b]
     b1d:	00 02                	add    BYTE PTR [rdx],al
     b1f:	0a a4 0b d1 04 00 00 	or     ah,BYTE PTR [rbx+rcx*1+0x4d1]
     b26:	02 0a                	add    cl,BYTE PTR [rdx]
     b28:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     b29:	0b e4                	or     esp,esp
     b2b:	04 00                	add    al,0x0
     b2d:	00 02                	add    BYTE PTR [rdx],al
     b2f:	0a a9 0b f1 04 00    	or     ch,BYTE PTR [rcx+0x4f10b]
     b35:	00 02                	add    BYTE PTR [rdx],al
     b37:	0a aa 0b 02 05 00    	or     ch,BYTE PTR [rdx+0x5020b]
     b3d:	00 02                	add    BYTE PTR [rdx],al
     b3f:	0a ab 0b 22 05 00    	or     ch,BYTE PTR [rbx+0x5220b]
     b45:	00 02                	add    BYTE PTR [rdx],al
     b47:	0a ac 0b 46 05 00 00 	or     ch,BYTE PTR [rbx+rcx*1+0x546]
     b4e:	02 0a                	add    cl,BYTE PTR [rdx]
     b50:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     b51:	0b 6a 05             	or     ebp,DWORD PTR [rdx+0x5]
     b54:	00 00                	add    BYTE PTR [rax],al
     b56:	02 0a                	add    cl,BYTE PTR [rdx]
     b58:	af                   	scas   eax,DWORD PTR es:[rdi]
     b59:	0b 80 05 00 00 02    	or     eax,DWORD PTR [rax+0x2000005]
     b5f:	0a b0 0b a5 05 00    	or     dh,BYTE PTR [rax+0x5a50b]
     b65:	00 02                	add    BYTE PTR [rdx],al
     b67:	0a f4                	or     dh,ah
     b69:	16                   	(bad)
     b6a:	e2 00                	loop   b6c <__abi_tag+0x7f0>
     b6c:	00 00                	add    BYTE PTR [rax],al
     b6e:	02 0a                	add    cl,BYTE PTR [rdx]
     b70:	f9                   	stc
     b71:	16                   	(bad)
     b72:	05 06 00 00 02       	add    eax,0x2000006
     b77:	0a fa                	or     bh,dl
     b79:	16                   	(bad)
     b7a:	1f                   	(bad)
     b7b:	06                   	(bad)
     b7c:	00 00                	add    BYTE PTR [rax],al
     b7e:	02 0a                	add    cl,BYTE PTR [rdx]
     b80:	fc                   	cld
     b81:	16                   	(bad)
     b82:	3a 06                	cmp    al,BYTE PTR [rsi]
     b84:	00 00                	add    BYTE PTR [rax],al
     b86:	02 0a                	add    cl,BYTE PTR [rdx]
     b88:	fd                   	std
     b89:	16                   	(bad)
     b8a:	98                   	cwde
     b8b:	06                   	(bad)
     b8c:	00 00                	add    BYTE PTR [rax],al
     b8e:	02 0a                	add    cl,BYTE PTR [rdx]
     b90:	fe                   	(bad)
     b91:	16                   	(bad)
     b92:	50                   	push   rax
     b93:	06                   	(bad)
     b94:	00 00                	add    BYTE PTR [rax],al
     b96:	02 0a                	add    cl,BYTE PTR [rdx]
     b98:	ff 16                	call   QWORD PTR [rsi]
     b9a:	74 06                	je     ba2 <__abi_tag+0x826>
     b9c:	00 00                	add    BYTE PTR [rax],al
     b9e:	41 0a 00             	or     al,BYTE PTR [r8]
     ba1:	01 16                	add    DWORD PTR [rsi],edx
     ba3:	ba 06 00 00 16       	mov    edx,0x16000006
     ba8:	61                   	(bad)
     ba9:	62 73 00 89 15       	(bad)
     bae:	03 00                	add    eax,DWORD PTR [rax]
     bb0:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     bb3:	00 00                	add    BYTE PTR [rax],al
     bb5:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     bb6:	02 00                	add    al,BYTE PTR [rax]
     bb8:	00 01                	add    BYTE PTR [rcx],al
     bba:	04 07                	add    al,0x7
     bbc:	00 00                	add    BYTE PTR [rax],al
     bbe:	00 16                	add    BYTE PTR [rsi],dl
     bc0:	61                   	(bad)
     bc1:	62 73 00 55 1b       	(bad)
     bc6:	00 00                	add    BYTE PTR [rax],al
     bc8:	00 13                	add    BYTE PTR [rbx],dl
     bca:	07                   	(bad)
     bcb:	00 00                	add    BYTE PTR [rax],al
     bcd:	bc 02 00 00 01       	mov    esp,0x1000002
     bd2:	13 07                	adc    eax,DWORD PTR [rdi]
     bd4:	00 00                	add    BYTE PTR [rax],al
     bd6:	00 16                	add    BYTE PTR [rsi],dl
     bd8:	61                   	(bad)
     bd9:	62 73 00 4f 01       	(bad)
     bde:	03 00                	add    eax,DWORD PTR [rax]
     be0:	00 d5                	add    ch,dl
     be2:	06                   	(bad)
     be3:	00 00                	add    BYTE PTR [rax],al
     be5:	d4                   	(bad)
     be6:	02 00                	add    al,BYTE PTR [rax]
     be8:	00 01                	add    BYTE PTR [rcx],al
     bea:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     bee:	00 16                	add    BYTE PTR [rsi],dl
     bf0:	61                   	(bad)
     bf1:	62 73 00 4b 0b       	(bad)
     bf6:	03 00                	add    eax,DWORD PTR [rax]
     bf8:	00 b3 06 00 00 ec    	add    BYTE PTR [rbx-0x13fffffa],dh
     bfe:	02 00                	add    al,BYTE PTR [rax]
     c00:	00 01                	add    BYTE PTR [rcx],al
     c02:	b3 06                	mov    bl,0x6
     c04:	00 00                	add    BYTE PTR [rax],al
     c06:	00 16                	add    BYTE PTR [rsi],dl
     c08:	61                   	(bad)
     c09:	62 73 00 47 f7       	(bad)
     c0e:	02 00                	add    al,BYTE PTR [rax]
     c10:	00 9b 03 00 00 04    	add    BYTE PTR [rbx+0x4000003],bl
     c16:	03 00                	add    eax,DWORD PTR [rax]
     c18:	00 01                	add    BYTE PTR [rcx],al
     c1a:	9b                   	fwait
     c1b:	03 00                	add    eax,DWORD PTR [rax]
     c1d:	00 00                	add    BYTE PTR [rax],al
     c1f:	16                   	(bad)
     c20:	61                   	(bad)
     c21:	62 73 00 3d eb       	(bad)
     c26:	00 00                	add    BYTE PTR [rax],al
     c28:	00 db                	add    bl,bl
     c2a:	00 00                	add    BYTE PTR [rax],al
     c2c:	00 1c 03             	add    BYTE PTR [rbx+rax*1],bl
     c2f:	00 00                	add    BYTE PTR [rax],al
     c31:	01 db                	add    ebx,ebx
     c33:	00 00                	add    BYTE PTR [rax],al
     c35:	00 00                	add    BYTE PTR [rax],al
     c37:	16                   	(bad)
     c38:	61                   	(bad)
     c39:	62 73 00 38 11       	(bad)
     c3e:	00 00                	add    BYTE PTR [rax],al
     c40:	00 a3 00 00 00 34    	add    BYTE PTR [rbx+0x34000000],ah
     c46:	03 00                	add    eax,DWORD PTR [rax]
     c48:	00 01                	add    BYTE PTR [rcx],al
     c4a:	a3 00 00 00 00 2f 64 	movabs ds:0x7669642f00000000,eax
     c51:	69 76 
     c53:	00 b5 1e 01 00 00    	add    BYTE PTR [rbp+0x11e],dh
     c59:	aa                   	stos   BYTE PTR es:[rdi],al
     c5a:	00 00                	add    BYTE PTR [rax],al
     c5c:	00 01                	add    BYTE PTR [rcx],al
     c5e:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
     c65:	00 00 
     c67:	00 00                	add    BYTE PTR [rax],al
     c69:	0b 17                	or     edx,DWORD PTR [rdi]
     c6b:	01 00                	add    DWORD PTR [rax],eax
     c6d:	00 de                	add    dh,bl
     c6f:	02 0c 66             	add    cl,BYTE PTR [rsi+riz*2]
     c72:	00 00                	add    BYTE PTR [rax],al
     c74:	00 64 03 00          	add    BYTE PTR [rbx+rax*1+0x0],ah
     c78:	00 01                	add    BYTE PTR [rcx],al
     c7a:	64 03 00             	add    eax,DWORD PTR fs:[rax]
     c7d:	00 00                	add    BYTE PTR [rax],al
     c7f:	08 69 03             	or     BYTE PTR [rcx+0x3],ch
     c82:	00 00                	add    BYTE PTR [rax],al
     c84:	42                   	rex.X
     c85:	43 dd 00             	rex.XB fld QWORD PTR [r8]
     c88:	00 00                	add    BYTE PTR [rax],al
     c8a:	08 e3                	or     bl,ah
     c8c:	02 12                	add    dl,BYTE PTR [rdx]
     c8e:	dd 00                	fld    QWORD PTR [rax]
     c90:	00 00                	add    BYTE PTR [rax],al
     c92:	66 00 00             	data16 add BYTE PTR [rax],al
     c95:	00 85 03 00 00 01    	add    BYTE PTR [rbp+0x1000003],al
     c9b:	64 03 00             	add    eax,DWORD PTR fs:[rax]
     c9e:	00 00                	add    BYTE PTR [rax],al
     ca0:	11 f2                	adc    edx,esi
     ca2:	01 00                	add    DWORD PTR [rax],eax
     ca4:	00 0c 19             	add    BYTE PTR [rcx+rbx*1],cl
     ca7:	01 9b 03 00 00 9b    	add    DWORD PTR [rbx-0x64fffffd],ebx
     cad:	03 00                	add    eax,DWORD PTR [rax]
     caf:	00 01                	add    BYTE PTR [rcx],al
     cb1:	f5                   	cmc
     cb2:	00 00                	add    BYTE PTR [rax],al
     cb4:	00 00                	add    BYTE PTR [rax],al
     cb6:	05 08 04 1d 02       	add    eax,0x21d0408
     cbb:	00 00                	add    BYTE PTR [rax],al
     cbd:	0b f7                	or     esi,edi
     cbf:	01 00                	add    DWORD PTR [rax],eax
     cc1:	00 e1                	add    cl,ah
     cc3:	01 01                	add    DWORD PTR [rcx],eax
     cc5:	66 00 00             	data16 add BYTE PTR [rax],al
     cc8:	00 b8 03 00 00 01    	add    BYTE PTR [rax+0x1000003],bh
     cce:	f5                   	cmc
     ccf:	00 00                	add    BYTE PTR [rax],al
     cd1:	00 00                	add    BYTE PTR [rax],al
     cd3:	0b 01                	or     eax,DWORD PTR [rcx]
     cd5:	02 00                	add    al,BYTE PTR [rax]
     cd7:	00 e6                	add    dh,ah
     cd9:	01 01                	add    DWORD PTR [rcx],eax
     cdb:	a3 00 00 00 ce 03 00 	movabs ds:0x1000003ce000000,eax
     ce2:	00 01 
     ce4:	f5                   	cmc
     ce5:	00 00                	add    BYTE PTR [rax],al
     ce7:	00 00                	add    BYTE PTR [rax],al
     ce9:	11 0f                	adc    DWORD PTR [rdi],ecx
     ceb:	01 00                	add    DWORD PTR [rax],eax
     ced:	00 0d 14 01 3f 01    	add    BYTE PTR [rip+0x13f0114],cl        # 13f0e07 <_end+0x13eadef>
     cf3:	00 00                	add    BYTE PTR [rax],al
     cf5:	f8                   	clc
     cf6:	03 00                	add    eax,DWORD PTR [rax]
     cf8:	00 01                	add    BYTE PTR [rcx],al
     cfa:	78 01                	js     cfd <__abi_tag+0x981>
     cfc:	00 00                	add    BYTE PTR [rax],al
     cfe:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     d01:	00 00                	add    BYTE PTR [rax],al
     d03:	01 2e                	add    DWORD PTR [rsi],ebp
     d05:	00 00                	add    BYTE PTR [rax],al
     d07:	00 01                	add    BYTE PTR [rcx],al
     d09:	2e 00 00             	cs add BYTE PTR [rax],al
     d0c:	00 01                	add    BYTE PTR [rcx],al
     d0e:	52                   	push   rdx
     d0f:	01 00                	add    DWORD PTR [rax],eax
     d11:	00 00                	add    BYTE PTR [rax],al
     d13:	44                   	rex.R
     d14:	64 69 76 00 08 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e008
     d1b:	0e 
     d1c:	72 00                	jb     d1e <__abi_tag+0x9a2>
     d1e:	00 00                	add    BYTE PTR [rax],al
     d20:	14 04                	adc    al,0x4
     d22:	00 00                	add    BYTE PTR [rax],al
     d24:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     d27:	00 00                	add    BYTE PTR [rax],al
     d29:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     d2c:	00 00                	add    BYTE PTR [rax],al
     d2e:	00 0b                	add    BYTE PTR [rbx],cl
     d30:	6a 01                	push   0x1
     d32:	00 00                	add    BYTE PTR [rax],al
     d34:	05 03 0e 41 01       	add    eax,0x1410e03
     d39:	00 00                	add    BYTE PTR [rax],al
     d3b:	2a 04 00             	sub    al,BYTE PTR [rax+rax*1]
     d3e:	00 01                	add    BYTE PTR [rcx],al
     d40:	f5                   	cmc
     d41:	00 00                	add    BYTE PTR [rax],al
     d43:	00 00                	add    BYTE PTR [rax],al
     d45:	0b c9                	or     ecx,ecx
     d47:	02 00                	add    al,BYTE PTR [rax]
     d49:	00 e2                	add    dl,ah
     d4b:	03 0f                	add    ecx,DWORD PTR [rdi]
     d4d:	aa                   	stos   BYTE PTR es:[rdi],al
     d4e:	00 00                	add    BYTE PTR [rax],al
     d50:	00 45 04             	add    BYTE PTR [rbp+0x4],al
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	01 a3 00 00 00 01    	add    DWORD PTR [rbx+0x1000000],esp
     d5b:	a3 00 00 00 00 0b 58 	movabs ds:0x2580b00000000,eax
     d62:	02 00 
     d64:	00 26                	add    BYTE PTR [rsi],ah
     d66:	04 0c                	add    al,0xc
     d68:	66 00 00             	data16 add BYTE PTR [rax],al
     d6b:	00 60 04             	add    BYTE PTR [rax+0x4],ah
     d6e:	00 00                	add    BYTE PTR [rax],al
     d70:	01 f5                	add    ebp,esi
     d72:	00 00                	add    BYTE PTR [rax],al
     d74:	00 01                	add    BYTE PTR [rcx],al
     d76:	2e 00 00             	cs add BYTE PTR [rax],al
     d79:	00 00                	add    BYTE PTR [rax],al
     d7b:	11 5e 02             	adc    DWORD PTR [rsi+0x2],ebx
     d7e:	00 00                	add    BYTE PTR [rax],al
     d80:	0e                   	(bad)
     d81:	75 01                	jne    d84 <__abi_tag+0xa08>
     d83:	2e 00 00             	cs add BYTE PTR [rax],al
     d86:	00 80 04 00 00 01    	add    BYTE PTR [rax+0x1000004],al
     d8c:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
     d90:	01 f5                	add    ebp,esi
     d92:	00 00                	add    BYTE PTR [rax],al
     d94:	00 01                	add    BYTE PTR [rcx],al
     d96:	2e 00 00             	cs add BYTE PTR [rax],al
     d99:	00 00                	add    BYTE PTR [rax],al
     d9b:	08 85 04 00 00 05    	or     BYTE PTR [rbp+0x5000004],al
     da1:	04 05                	add    al,0x5
     da3:	86 02                	xchg   BYTE PTR [rdx],al
     da5:	00 00                	add    BYTE PTR [rax],al
     da7:	10 85 04 00 00 0b    	adc    BYTE PTR [rbp+0xb000004],al
     dad:	86 01                	xchg   BYTE PTR [rcx],al
     daf:	00 00                	add    BYTE PTR [rax],al
     db1:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
     db4:	66 00 00             	data16 add BYTE PTR [rax],al
     db7:	00 b1 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],dh
     dbd:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
     dc1:	01 f5                	add    ebp,esi
     dc3:	00 00                	add    BYTE PTR [rax],al
     dc5:	00 01                	add    BYTE PTR [rcx],al
     dc7:	2e 00 00             	cs add BYTE PTR [rax],al
     dca:	00 00                	add    BYTE PTR [rax],al
     dcc:	25 25 00 00 00       	and    eax,0x25
     dd1:	ca 03 d1             	retf   0xd103
     dd4:	04 00                	add    al,0x0
     dd6:	00 01                	add    BYTE PTR [rcx],al
     dd8:	3f                   	(bad)
     dd9:	01 00                	add    DWORD PTR [rax],eax
     ddb:	00 01                	add    BYTE PTR [rcx],al
     ddd:	2e 00 00             	cs add BYTE PTR [rax],al
     de0:	00 01                	add    BYTE PTR [rcx],al
     de2:	2e 00 00             	cs add BYTE PTR [rax],al
     de5:	00 01                	add    BYTE PTR [rcx],al
     de7:	52                   	push   rdx
     de8:	01 00                	add    DWORD PTR [rax],eax
     dea:	00 00                	add    BYTE PTR [rax],al
     dec:	45 e0 00             	rex.RB loopne def <__abi_tag+0xa73>
     def:	00 00                	add    BYTE PTR [rax],al
     df1:	08 fa                	or     dl,bh
     df3:	02 0d e4 04 00 00    	add    cl,BYTE PTR [rip+0x4e4]        # 12dd <__do_global_dtors_aux+0x2d>
     df9:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     dfc:	00 00                	add    BYTE PTR [rax],al
     dfe:	00 46 f2             	add    BYTE PTR [rsi-0xe],al
     e01:	02 00                	add    al,BYTE PTR [rax]
     e03:	00 08                	add    BYTE PTR [rax],cl
     e05:	3d 02 0c 66 00       	cmp    eax,0x660c02
     e0a:	00 00                	add    BYTE PTR [rax],al
     e0c:	25 f1 02 00 00       	and    eax,0x2f1
     e11:	3f                   	(bad)
     e12:	02 02                	add    al,BYTE PTR [rdx]
     e14:	05 00 00 01 12       	add    eax,0x12010000
     e19:	01 00                	add    DWORD PTR [rax],eax
     e1b:	00 00                	add    BYTE PTR [rax],al
     e1d:	11 c5                	adc    ebp,eax
     e1f:	01 00                	add    DWORD PTR [rax],eax
     e21:	00 08                	add    BYTE PTR [rax],cl
     e23:	76 0f                	jbe    e34 <__abi_tag+0xab8>
     e25:	9b                   	fwait
     e26:	03 00                	add    eax,DWORD PTR [rax]
     e28:	00 1d 05 00 00 01    	add    BYTE PTR [rip+0x1000005],bl        # 1000e33 <_end+0xffae1b>
     e2e:	f5                   	cmc
     e2f:	00 00                	add    BYTE PTR [rax],al
     e31:	00 01                	add    BYTE PTR [rcx],al
     e33:	1d 05 00 00 00       	sbb    eax,0x5
     e38:	08 41 01             	or     BYTE PTR [rcx+0x1],al
     e3b:	00 00                	add    BYTE PTR [rax],al
     e3d:	17                   	(bad)
     e3e:	fe 00                	inc    BYTE PTR [rax]
     e40:	00 00                	add    BYTE PTR [rax],al
     e42:	08 d7                	or     bh,dl
     e44:	11 f5                	adc    ebp,esi
     e46:	00 00                	add    BYTE PTR [rax],al
     e48:	00 a3 00 00 00 46    	add    BYTE PTR [rbx+0x46000000],ah
     e4e:	05 00 00 01 f5       	add    eax,0xf5010000
     e53:	00 00                	add    BYTE PTR [rax],al
     e55:	00 01                	add    BYTE PTR [rcx],al
     e57:	1d 05 00 00 01       	sbb    eax,0x1000005
     e5c:	66 00 00             	data16 add BYTE PTR [rax],al
     e5f:	00 00                	add    BYTE PTR [rax],al
     e61:	17                   	(bad)
     e62:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
     e65:	00 08                	add    BYTE PTR [rax],cl
     e67:	db 1a                	fistp  DWORD PTR [rdx]
     e69:	41 02 00             	add    al,BYTE PTR [r8]
     e6c:	00 3a                	add    BYTE PTR [rdx],bh
     e6e:	00 00                	add    BYTE PTR [rax],al
     e70:	00 6a 05             	add    BYTE PTR [rdx+0x5],ch
     e73:	00 00                	add    BYTE PTR [rax],al
     e75:	01 f5                	add    ebp,esi
     e77:	00 00                	add    BYTE PTR [rax],al
     e79:	00 01                	add    BYTE PTR [rcx],al
     e7b:	1d 05 00 00 01       	sbb    eax,0x1000005
     e80:	66 00 00             	data16 add BYTE PTR [rax],al
     e83:	00 00                	add    BYTE PTR [rax],al
     e85:	0b 64 26 00          	or     esp,DWORD PTR [rsi+riz*1+0x0]
     e89:	00 9b 03 0c 66 00    	add    BYTE PTR [rbx+0x660c03],bl
     e8f:	00 00                	add    BYTE PTR [rax],al
     e91:	80 05 00 00 01 f5 00 	add    BYTE PTR [rip+0xfffffffff5010000],0x0        # fffffffff5010e98 <_end+0xfffffffff500ae80>
     e98:	00 00                	add    BYTE PTR [rax],al
     e9a:	00 11                	add    BYTE PTR [rcx],dl
     e9c:	06                   	(bad)
     e9d:	02 00                	add    al,BYTE PTR [rax]
     e9f:	00 0e                	add    BYTE PTR [rsi],cl
     ea1:	8f 01                	pop    QWORD PTR [rcx]
     ea3:	2e 00 00             	cs add BYTE PTR [rax],al
     ea6:	00 a0 05 00 00 01    	add    BYTE PTR [rax+0x1000005],ah
     eac:	41 01 00             	add    DWORD PTR [r8],eax
     eaf:	00 01                	add    BYTE PTR [rcx],al
     eb1:	a0 05 00 00 01 2e 00 	movabs al,ds:0x2e01000005
     eb8:	00 00 
     eba:	00 08                	add    BYTE PTR [rax],cl
     ebc:	8c 04 00             	mov    WORD PTR [rax+rax*1],es
     ebf:	00 11                	add    BYTE PTR [rcx],dl
     ec1:	67 02 00             	add    al,BYTE PTR [eax]
     ec4:	00 0e                	add    BYTE PTR [rsi],cl
     ec6:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
     eca:	00 00                	add    BYTE PTR [rax],al
     ecc:	c0 05 00 00 01 41 01 	rol    BYTE PTR [rip+0x41010000],0x1        # 41010ed3 <_end+0x4100aebb>
     ed3:	00 00                	add    BYTE PTR [rax],al
     ed5:	01 85 04 00 00 00    	add    DWORD PTR [rbp+0x4],eax
     edb:	47 37                	rex.RXB (bad)
     edd:	02 00                	add    al,BYTE PTR [rax]
     edf:	00 18                	add    BYTE PTR [rax],bl
     ee1:	57                   	push   rdi
     ee2:	01 0b                	add    DWORD PTR [rbx],ecx
     ee4:	1f                   	(bad)
     ee5:	06                   	(bad)
     ee6:	00 00                	add    BYTE PTR [rax],al
     ee8:	02 0a                	add    cl,BYTE PTR [rdx]
     eea:	cc                   	int3
     eeb:	0b e2                	or     esp,edx
     eed:	00 00                	add    BYTE PTR [rax],al
     eef:	00 02                	add    BYTE PTR [rdx],al
     ef1:	0a dc                	or     bl,ah
     ef3:	0b 1f                	or     ebx,DWORD PTR [rdi]
     ef5:	06                   	(bad)
     ef6:	00 00                	add    BYTE PTR [rax],al
     ef8:	02 0a                	add    cl,BYTE PTR [rdx]
     efa:	e7 0b                	out    0xb,eax
     efc:	3a 06                	cmp    al,BYTE PTR [rsi]
     efe:	00 00                	add    BYTE PTR [rax],al
     f00:	02 0a                	add    cl,BYTE PTR [rdx]
     f02:	e8 0b 50 06 00       	call   65f12 <_end+0x5fefa>
     f07:	00 02                	add    BYTE PTR [rdx],al
     f09:	0a e9                	or     ch,cl
     f0b:	0b 74 06 00          	or     esi,DWORD PTR [rsi+rax*1+0x0]
     f0f:	00 02                	add    BYTE PTR [rdx],al
     f11:	0a eb                	or     ch,bl
     f13:	0b 98 06 00 00 02    	or     ebx,DWORD PTR [rax+0x2000006]
     f19:	0a ec                	or     ch,ah
     f1b:	0b ba 06 00 00 2f    	or     edi,DWORD PTR [rdx+0x2f000006]
     f21:	64 69 76 00 d9 dd 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1ddd9
     f28:	00 
     f29:	00 e2                	add    dl,ah
     f2b:	00 00                	add    BYTE PTR [rax],al
     f2d:	00 01                	add    BYTE PTR [rcx],al
     f2f:	db 00                	fild   DWORD PTR [rax]
     f31:	00 00                	add    BYTE PTR [rax],al
     f33:	01 db                	add    ebx,ebx
     f35:	00 00                	add    BYTE PTR [rax],al
     f37:	00 00                	add    BYTE PTR [rax],al
     f39:	00 0b                	add    BYTE PTR [rbx],cl
     f3b:	c8 02 00 00          	enter  0x2,0x0
     f3f:	e6 03                	out    0x3,al
     f41:	1e                   	(bad)
     f42:	e2 00                	loop   f44 <__abi_tag+0xbc8>
     f44:	00 00                	add    BYTE PTR [rax],al
     f46:	3a 06                	cmp    al,BYTE PTR [rsi]
     f48:	00 00                	add    BYTE PTR [rax],al
     f4a:	01 db                	add    ebx,ebx
     f4c:	00 00                	add    BYTE PTR [rax],al
     f4e:	00 01                	add    BYTE PTR [rcx],al
     f50:	db 00                	fild   DWORD PTR [rax]
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	00 0b                	add    BYTE PTR [rbx],cl
     f56:	52                   	push   rdx
     f57:	02 00                	add    al,BYTE PTR [rax]
     f59:	00 ed                	add    ch,ch
     f5b:	01 01                	add    DWORD PTR [rcx],eax
     f5d:	db 00                	fild   DWORD PTR [rax]
     f5f:	00 00                	add    BYTE PTR [rax],al
     f61:	50                   	push   rax
     f62:	06                   	(bad)
     f63:	00 00                	add    BYTE PTR [rax],al
     f65:	01 f5                	add    ebp,esi
     f67:	00 00                	add    BYTE PTR [rax],al
     f69:	00 00                	add    BYTE PTR [rax],al
     f6b:	17                   	(bad)
     f6c:	32 01                	xor    al,BYTE PTR [rcx]
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	08 ee                	or     dh,ch
     f72:	16                   	(bad)
     f73:	29 01                	sub    DWORD PTR [rcx],eax
     f75:	00 00                	add    BYTE PTR [rax],al
     f77:	db 00                	fild   DWORD PTR [rax]
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	74 06                	je     f83 <__abi_tag+0xc07>
     f7d:	00 00                	add    BYTE PTR [rax],al
     f7f:	01 f5                	add    ebp,esi
     f81:	00 00                	add    BYTE PTR [rax],al
     f83:	00 01                	add    BYTE PTR [rcx],al
     f85:	1d 05 00 00 01       	sbb    eax,0x1000005
     f8a:	66 00 00             	data16 add BYTE PTR [rax],al
     f8d:	00 00                	add    BYTE PTR [rax],al
     f8f:	17                   	(bad)
     f90:	bf 02 00 00 08       	mov    edi,0x8000002
     f95:	f3 1f                	repz (bad)
     f97:	b6 02                	mov    dh,0x2
     f99:	00 00                	add    BYTE PTR [rax],al
     f9b:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
     f9e:	00 98 06 00 00 01    	add    BYTE PTR [rax+0x1000006],bl
     fa4:	f5                   	cmc
     fa5:	00 00                	add    BYTE PTR [rax],al
     fa7:	00 01                	add    BYTE PTR [rcx],al
     fa9:	1d 05 00 00 01       	sbb    eax,0x1000005
     fae:	66 00 00             	data16 add BYTE PTR [rax],al
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	11 af 02 00 00 08    	adc    DWORD PTR [rdi+0x8000002],ebp
     fb9:	7c 0e                	jl     fc9 <__abi_tag+0xc4d>
     fbb:	b3 06                	mov    bl,0x6
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	b3 06                	mov    bl,0x6
     fc1:	00 00                	add    BYTE PTR [rax],al
     fc3:	01 f5                	add    ebp,esi
     fc5:	00 00                	add    BYTE PTR [rax],al
     fc7:	00 01                	add    BYTE PTR [rcx],al
     fc9:	1d 05 00 00 00       	sbb    eax,0x5
     fce:	05 04 04 80 01       	add    eax,0x1800404
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	11 2b                	adc    DWORD PTR [rbx],ebp
     fd7:	00 00                	add    BYTE PTR [rax],al
     fd9:	00 08                	add    BYTE PTR [rax],cl
     fdb:	7f 14                	jg     ff1 <__abi_tag+0xc75>
     fdd:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     fe1:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     fe5:	01 f5                	add    ebp,esi
     fe7:	00 00                	add    BYTE PTR [rax],al
     fe9:	00 01                	add    BYTE PTR [rcx],al
     feb:	1d 05 00 00 00       	sbb    eax,0x5
     ff0:	05 10 04 18 02       	add    eax,0x2180410
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	02 0f                	add    cl,BYTE PTR [rdi]
     ff9:	27                   	(bad)
     ffa:	0c 4e                	or     al,0x4e
     ffc:	03 00                	add    eax,DWORD PTR [rax]
     ffe:	00 02                	add    BYTE PTR [rdx],al
    1000:	0f 2b 0e             	movntps XMMWORD PTR [rsi],xmm1
    1003:	6a 03                	push   0x3
    1005:	00 00                	add    BYTE PTR [rax],al
    1007:	02 0f                	add    cl,BYTE PTR [rdi]
    1009:	2e 0e                	cs (bad)
    100b:	d1 04 00             	rol    DWORD PTR [rax+rax*1],1
    100e:	00 02                	add    BYTE PTR [rdx],al
    1010:	0f 36                	(bad)
    1012:	0c 72                	or     al,0x72
    1014:	00 00                	add    BYTE PTR [rax],al
    1016:	00 02                	add    BYTE PTR [rdx],al
    1018:	0f 37                	getsec
    101a:	0c aa                	or     al,0xaa
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 05 10 04 a4 02    	add    BYTE PTR [rip+0x2a40410],al        # 2a41434 <_end+0x2a3b41c>
    1024:	00 00                	add    BYTE PTR [rax],al
    1026:	02 0f                	add    cl,BYTE PTR [rdi]
    1028:	39 0c 8c             	cmp    DWORD PTR [rsp+rcx*4],ecx
    102b:	02 00                	add    al,BYTE PTR [rax]
    102d:	00 05 10 05 0f 02    	add    BYTE PTR [rip+0x20f0510],al        # 20f1543 <_end+0x20eb52b>
    1033:	00 00                	add    BYTE PTR [rax],al
    1035:	02 0f                	add    cl,BYTE PTR [rdi]
    1037:	39 0c a4             	cmp    DWORD PTR [rsp+riz*4],ecx
    103a:	02 00                	add    al,BYTE PTR [rax]
    103c:	00 02                	add    BYTE PTR [rdx],al
    103e:	0f 39                	(bad)
    1040:	0c bc                	or     al,0xbc
    1042:	02 00                	add    al,BYTE PTR [rax]
    1044:	00 02                	add    BYTE PTR [rdx],al
    1046:	0f 39                	(bad)
    1048:	0c d4                	or     al,0xd4
    104a:	02 00                	add    al,BYTE PTR [rax]
    104c:	00 02                	add    BYTE PTR [rdx],al
    104e:	0f 39                	(bad)
    1050:	0c ec                	or     al,0xec
    1052:	02 00                	add    al,BYTE PTR [rax]
    1054:	00 02                	add    BYTE PTR [rdx],al
    1056:	0f 39                	(bad)
    1058:	0c 04                	or     al,0x4
    105a:	03 00                	add    eax,DWORD PTR [rax]
    105c:	00 02                	add    BYTE PTR [rdx],al
    105e:	0f 39                	(bad)
    1060:	0c 1c                	or     al,0x1c
    1062:	03 00                	add    eax,DWORD PTR [rax]
    1064:	00 02                	add    BYTE PTR [rdx],al
    1066:	0f 3a 0c             	(bad)
    1069:	85 03                	test   DWORD PTR [rbx],eax
    106b:	00 00                	add    BYTE PTR [rax],al
    106d:	02 0f                	add    cl,BYTE PTR [rdi]
    106f:	3b 0c a2             	cmp    ecx,DWORD PTR [rdx+riz*4]
    1072:	03 00                	add    eax,DWORD PTR [rax]
    1074:	00 02                	add    BYTE PTR [rdx],al
    1076:	0f 3c                	(bad)
    1078:	0c b8                	or     al,0xb8
    107a:	03 00                	add    eax,DWORD PTR [rax]
    107c:	00 02                	add    BYTE PTR [rdx],al
    107e:	0f 3d                	(bad)
    1080:	0c ce                	or     al,0xce
    1082:	03 00                	add    eax,DWORD PTR [rax]
    1084:	00 02                	add    BYTE PTR [rdx],al
    1086:	0f 3f                	(bad)
    1088:	0c 05                	or     al,0x5
    108a:	06                   	(bad)
    108b:	00 00                	add    BYTE PTR [rax],al
    108d:	02 0f                	add    cl,BYTE PTR [rdi]
    108f:	3f                   	(bad)
    1090:	0c 34                	or     al,0x34
    1092:	03 00                	add    eax,DWORD PTR [rax]
    1094:	00 02                	add    BYTE PTR [rdx],al
    1096:	0f 3f                	(bad)
    1098:	0c f8                	or     al,0xf8
    109a:	03 00                	add    eax,DWORD PTR [rax]
    109c:	00 02                	add    BYTE PTR [rdx],al
    109e:	0f 41 0c 14          	cmovno ecx,DWORD PTR [rsp+rdx*1]
    10a2:	04 00                	add    al,0x0
    10a4:	00 02                	add    BYTE PTR [rdx],al
    10a6:	0f 43 0c 2a          	cmovae ecx,DWORD PTR [rdx+rbp*1]
    10aa:	04 00                	add    al,0x0
    10ac:	00 02                	add    BYTE PTR [rdx],al
    10ae:	0f 46 0c 45 04 00 00 	cmovbe ecx,DWORD PTR [rax*2+0x2000004]
    10b5:	02 
    10b6:	0f 47 0c 60          	cmova  ecx,DWORD PTR [rax+riz*2]
    10ba:	04 00                	add    al,0x0
    10bc:	00 02                	add    BYTE PTR [rdx],al
    10be:	0f 48 0c 91          	cmovs  ecx,DWORD PTR [rcx+rdx*4]
    10c2:	04 00                	add    al,0x0
    10c4:	00 02                	add    BYTE PTR [rdx],al
    10c6:	0f 4a 0c b1          	cmovp  ecx,DWORD PTR [rcx+rsi*4]
    10ca:	04 00                	add    al,0x0
    10cc:	00 02                	add    BYTE PTR [rdx],al
    10ce:	0f 4b 0c e4          	cmovnp ecx,DWORD PTR [rsp+riz*8]
    10d2:	04 00                	add    al,0x0
    10d4:	00 02                	add    BYTE PTR [rdx],al
    10d6:	0f 4d 0c f1          	cmovge ecx,DWORD PTR [rcx+rsi*8]
    10da:	04 00                	add    al,0x0
    10dc:	00 02                	add    BYTE PTR [rdx],al
    10de:	0f 4e 0c 02          	cmovle ecx,DWORD PTR [rdx+rax*1]
    10e2:	05 00 00 02 0f       	add    eax,0xf020000
    10e7:	4f 0c 22             	rex.WRXB or al,0x22
    10ea:	05 00 00 02 0f       	add    eax,0xf020000
    10ef:	50                   	push   rax
    10f0:	0c 46                	or     al,0x46
    10f2:	05 00 00 02 0f       	add    eax,0xf020000
    10f7:	51                   	push   rcx
    10f8:	0c 6a                	or     al,0x6a
    10fa:	05 00 00 02 0f       	add    eax,0xf020000
    10ff:	53                   	push   rbx
    1100:	0c 80                	or     al,0x80
    1102:	05 00 00 02 0f       	add    eax,0xf020000
    1107:	54                   	push   rsp
    1108:	0c a5                	or     al,0xa5
    110a:	05 00 00 05 10       	add    eax,0x10050000
    110f:	07                   	(bad)
    1110:	4d 08 00             	rex.WRB or BYTE PTR [r8],r8b
    1113:	00 06                	add    BYTE PTR [rsi],al
    1115:	61                   	(bad)
    1116:	06                   	(bad)
    1117:	00 00                	add    BYTE PTR [rax],al
    1119:	10 29                	adc    BYTE PTR [rcx],ch
    111b:	13 05 08 00 00 1e    	adc    eax,DWORD PTR [rip+0x1e000008]        # 1e001129 <_end+0x1dffb111>
    1121:	db 00                	fild   DWORD PTR [rax]
    1123:	00 00                	add    BYTE PTR [rax],al
    1125:	11 08                	adc    DWORD PTR [rax],ecx
    1127:	00 00                	add    BYTE PTR [rax],al
    1129:	1f                   	(bad)
    112a:	01 00                	add    DWORD PTR [rax],eax
    112c:	06                   	(bad)
    112d:	83 06 00             	add    DWORD PTR [rsi],0x0
    1130:	00 10                	add    BYTE PTR [rax],dl
    1132:	35 13 1d 08 00       	xor    eax,0x81d13
    1137:	00 1e                	add    BYTE PTR [rsi],bl
    1139:	db 00                	fild   DWORD PTR [rax]
    113b:	00 00                	add    BYTE PTR [rax],al
    113d:	29 08                	sub    DWORD PTR [rax],ecx
    113f:	00 00                	add    BYTE PTR [rax],al
    1141:	1f                   	(bad)
    1142:	01 00                	add    DWORD PTR [rax],eax
    1144:	06                   	(bad)
    1145:	3e 06                	ds (bad)
    1147:	00 00                	add    BYTE PTR [rax],al
    1149:	05 2d 0d 35 08       	add    eax,0x8350d2d
    114e:	00 00                	add    BYTE PTR [rax],al
    1150:	1e                   	(bad)
    1151:	66 00 00             	data16 add BYTE PTR [rax],al
    1154:	00 41 08             	add    BYTE PTR [rcx+0x8],al
    1157:	00 00                	add    BYTE PTR [rax],al
    1159:	1f                   	(bad)
    115a:	07                   	(bad)
    115b:	00 06                	add    BYTE PTR [rsi],al
    115d:	68 04 00 00 05       	push   0x5000004
    1162:	39 13                	cmp    DWORD PTR [rbx],edx
    1164:	4d 08 00             	rex.WRB or BYTE PTR [r8],r8b
    1167:	00 1e                	add    BYTE PTR [rsi],bl
    1169:	db 00                	fild   DWORD PTR [rax]
    116b:	00 00                	add    BYTE PTR [rax],al
    116d:	59                   	pop    rcx
    116e:	08 00                	or     BYTE PTR [rax],al
    1170:	00 1f                	add    BYTE PTR [rdi],bl
    1172:	03 00                	add    eax,DWORD PTR [rax]
    1174:	48 02 08             	rex.W add cl,BYTE PTR [rax]
    1177:	00 00                	add    BYTE PTR [rax],al
    1179:	05 42 13 4d 08       	add    eax,0x84d1342
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	01 10                	add    DWORD PTR [rax],edx
    1182:	59                   	pop    rcx
    1183:	08 00                	or     BYTE PTR [rax],al
    1185:	00 05 02 04 00 00    	add    BYTE PTR [rip+0x402],al        # 158d <_Z17hashMapAddElementP7HashMap8string_t+0x1d>
    118b:	00 00                	add    BYTE PTR [rax],al
    118d:	05 02 04 ce 02       	add    eax,0x2ce0402
    1192:	00 00                	add    BYTE PTR [rax],al
    1194:	06                   	(bad)
    1195:	55                   	push   rbp
    1196:	01 00                	add    DWORD PTR [rax],eax
    1198:	00 11                	add    BYTE PTR [rcx],dl
    119a:	1a 14 27             	sbb    dl,BYTE PTR [rdi+riz*1]
    119d:	01 00                	add    DWORD PTR [rax],eax
    119f:	00 06                	add    BYTE PTR [rsi],al
    11a1:	bf 05 00 00 11       	mov    edi,0x11000005
    11a6:	1b 14 33             	sbb    edx,DWORD PTR [rbx+rsi*1]
    11a9:	01 00                	add    DWORD PTR [rax],eax
    11ab:	00 06                	add    BYTE PTR [rsi],al
    11ad:	1f                   	(bad)
    11ae:	03 00                	add    eax,DWORD PTR [rax]
    11b0:	00 12                	add    BYTE PTR [rdx],dl
    11b2:	4f 1b 3a             	rex.WRXB sbb r15,QWORD PTR [r10]
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 20                	add    BYTE PTR [rax],ah
    11b9:	94                   	xchg   esp,eax
    11ba:	08 00                	or     BYTE PTR [rax],al
    11bc:	00 40 13             	add    BYTE PTR [rax+0x13],al
    11bf:	11 d1                	adc    ecx,edx
    11c1:	08 00                	or     BYTE PTR [rax],al
    11c3:	00 07                	add    BYTE PTR [rdi],al
    11c5:	95                   	xchg   ebp,eax
    11c6:	03 00                	add    eax,DWORD PTR [rax]
    11c8:	00 13                	add    BYTE PTR [rbx],dl
    11ca:	12 0d 41 08 00 00    	adc    cl,BYTE PTR [rip+0x841]        # 1a11 <_Z6resizeP7HashMapj+0x181>
    11d0:	00 07                	add    BYTE PTR [rdi],al
    11d2:	70 04                	jo     11d8 <main+0x8>
    11d4:	00 00                	add    BYTE PTR [rax],al
    11d6:	13 13                	adc    edx,DWORD PTR [rbx]
    11d8:	0e                   	(bad)
    11d9:	79 08                	jns    11e3 <main+0x13>
    11db:	00 00                	add    BYTE PTR [rax],al
    11dd:	20 07                	and    BYTE PTR [rdi],al
    11df:	45 06                	rex.RB (bad)
    11e1:	00 00                	add    BYTE PTR [rax],al
    11e3:	13 14 0e             	adc    edx,DWORD PTR [rsi+rcx*1]
    11e6:	79 08                	jns    11f0 <main+0x20>
    11e8:	00 00                	add    BYTE PTR [rax],al
    11ea:	24 00                	and    al,0x0
    11ec:	06                   	(bad)
    11ed:	94                   	xchg   esp,eax
    11ee:	08 00                	or     BYTE PTR [rax],al
    11f0:	00 13                	add    BYTE PTR [rbx],dl
    11f2:	15 03 9d 08 00       	adc    eax,0x89d03
    11f7:	00 26                	add    BYTE PTR [rsi],ah
    11f9:	8e 02                	mov    es,WORD PTR [rdx]
    11fb:	00 00                	add    BYTE PTR [rax],al
    11fd:	14 0a                	adc    al,0xa
    11ff:	6d                   	ins    DWORD PTR es:[rdi],dx
    1200:	00 00                	add    BYTE PTR [rax],al
    1202:	00 0f                	add    BYTE PTR [rdi],cl
    1204:	26 71 01             	es jno 1208 <main+0x38>
    1207:	00 00                	add    BYTE PTR [rax],al
    1209:	14 0e                	adc    al,0xe
    120b:	6d                   	ins    DWORD PTR es:[rdi],dx
    120c:	00 00                	add    BYTE PTR [rax],al
    120e:	00 20                	add    BYTE PTR [rax],ah
    1210:	06                   	(bad)
    1211:	3d 03 00 00 14       	cmp    eax,0x14000003
    1216:	10 12                	adc    BYTE PTR [rdx],dl
    1218:	d1 08                	ror    DWORD PTR [rax],1
    121a:	00 00                	add    BYTE PTR [rax],al
    121c:	06                   	(bad)
    121d:	46 08 00             	rex.RX or BYTE PTR [rax],r8b
    1220:	00 14 11             	add    BYTE PTR [rcx+rdx*1],dl
    1223:	14 0d                	adc    al,0xd
    1225:	09 00                	or     DWORD PTR [rax],eax
    1227:	00 08                	add    BYTE PTR [rax],cl
    1229:	12 09                	adc    cl,BYTE PTR [rcx]
    122b:	00 00                	add    BYTE PTR [rax],al
    122d:	2e 79 08             	cs jns 1238 <_start+0x28>
    1230:	00 00                	add    BYTE PTR [rax],al
    1232:	21 09                	and    DWORD PTR [rcx],ecx
    1234:	00 00                	add    BYTE PTR [rax],al
    1236:	01 f5                	add    ebp,esi
    1238:	08 00                	or     BYTE PTR [rax],al
    123a:	00 00                	add    BYTE PTR [rax],al
    123c:	20 8c 05 00 00 60 14 	and    BYTE PTR [rbp+rax*1+0x14600000],cl
    1243:	13 62 09             	adc    esp,DWORD PTR [rdx+0x9]
    1246:	00 00                	add    BYTE PTR [rax],al
    1248:	07                   	(bad)
    1249:	7a 06                	jp     1251 <deregister_tm_clones+0x11>
    124b:	00 00                	add    BYTE PTR [rax],al
    124d:	14 14                	adc    al,0x14
    124f:	0e                   	(bad)
    1250:	79 08                	jns    125a <deregister_tm_clones+0x1a>
    1252:	00 00                	add    BYTE PTR [rax],al
    1254:	00 07                	add    BYTE PTR [rdi],al
    1256:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1257:	04 00                	add    al,0x0
    1259:	00 14 15 0e 79 08 00 	add    BYTE PTR [rdx*1+0x8790e],dl
    1260:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
    1263:	2b 06                	sub    eax,DWORD PTR [rsi]
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	14 17                	adc    al,0x17
    1269:	0e                   	(bad)
    126a:	79 08                	jns    1274 <register_tm_clones+0x4>
    126c:	00 00                	add    BYTE PTR [rax],al
    126e:	08 07                	or     BYTE PTR [rdi],al
    1270:	42 15 00 00 14 19    	rex.X adc eax,0x19140000
    1276:	0c f5                	or     al,0xf5
    1278:	08 00                	or     BYTE PTR [rax],al
    127a:	00 20                	add    BYTE PTR [rax],ah
    127c:	00 06                	add    BYTE PTR [rsi],al
    127e:	8c 05 00 00 14 1a    	mov    WORD PTR [rip+0x1a140000],es        # 1a141284 <_end+0x1a13b26c>
    1284:	03 21                	add    esp,DWORD PTR [rcx]
    1286:	09 00                	or     DWORD PTR [rax],eax
    1288:	00 20                	add    BYTE PTR [rax],ah
    128a:	63 04 00             	movsxd eax,DWORD PTR [rax+rax*1]
    128d:	00 18                	add    BYTE PTR [rax],bl
    128f:	14 1c                	adc    al,0x1c
    1291:	af                   	scas   eax,DWORD PTR es:[rdi]
    1292:	09 00                	or     DWORD PTR [rax],eax
    1294:	00 07                	add    BYTE PTR [rdi],al
    1296:	33 06                	xor    eax,DWORD PTR [rsi]
    1298:	00 00                	add    BYTE PTR [rax],al
    129a:	14 1d                	adc    al,0x1d
    129c:	0f af 09             	imul   ecx,DWORD PTR [rcx]
    129f:	00 00                	add    BYTE PTR [rax],al
    12a1:	00 07                	add    BYTE PTR [rdi],al
    12a3:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    12a4:	05 00 00 14 1e       	add    eax,0x1e140000
    12a9:	0e                   	(bad)
    12aa:	79 08                	jns    12b4 <__do_global_dtors_aux+0x4>
    12ac:	00 00                	add    BYTE PTR [rax],al
    12ae:	08 07                	or     BYTE PTR [rdi],al
    12b0:	28 08                	sub    BYTE PTR [rax],cl
    12b2:	00 00                	add    BYTE PTR [rax],al
    12b4:	14 1f                	adc    al,0x1f
    12b6:	0e                   	(bad)
    12b7:	79 08                	jns    12c1 <__do_global_dtors_aux+0x11>
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	0c 07                	or     al,0x7
    12bd:	5b                   	pop    rbx
    12be:	03 00                	add    eax,DWORD PTR [rax]
    12c0:	00 14 20             	add    BYTE PTR [rax+riz*1],dl
    12c3:	0e                   	(bad)
    12c4:	79 08                	jns    12ce <__do_global_dtors_aux+0x1e>
    12c6:	00 00                	add    BYTE PTR [rax],al
    12c8:	10 00                	adc    BYTE PTR [rax],al
    12ca:	08 62 09             	or     BYTE PTR [rdx+0x9],ah
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	06                   	(bad)
    12d0:	63 04 00             	movsxd eax,DWORD PTR [rax+rax*1]
    12d3:	00 14 21             	add    BYTE PTR [rcx+riz*1],dl
    12d6:	03 6e 09             	add    ebp,DWORD PTR [rsi+0x9]
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	20 9d 04 00 00 18    	and    BYTE PTR [rbp+0x18000004],bl
    12e1:	14 23                	adc    al,0x23
    12e3:	01 0a                	add    DWORD PTR [rdx],ecx
    12e5:	00 00                	add    BYTE PTR [rax],al
    12e7:	07                   	(bad)
    12e8:	44 05 00 00 14 24    	rex.R add eax,0x24140000
    12ee:	0b 01                	or     eax,DWORD PTR [rcx]
    12f0:	0a 00                	or     al,BYTE PTR [rax]
    12f2:	00 00                	add    BYTE PTR [rax],al
    12f4:	07                   	(bad)
    12f5:	28 08                	sub    BYTE PTR [rax],cl
    12f7:	00 00                	add    BYTE PTR [rax],al
    12f9:	14 25                	adc    al,0x25
    12fb:	0e                   	(bad)
    12fc:	79 08                	jns    1306 <_Z16buildStringArrayPcj+0x6>
    12fe:	00 00                	add    BYTE PTR [rax],al
    1300:	08 07                	or     BYTE PTR [rdi],al
    1302:	18 08                	sbb    BYTE PTR [rax],cl
    1304:	00 00                	add    BYTE PTR [rax],al
    1306:	14 26                	adc    al,0x26
    1308:	0b b3 06 00 00 0c    	or     esi,DWORD PTR [rbx+0xc000006]
    130e:	07                   	(bad)
    130f:	3d 04 00 00 14       	cmp    eax,0x14000004
    1314:	27                   	(bad)
    1315:	0c 01                	or     al,0x1
    1317:	09 00                	or     DWORD PTR [rax],eax
    1319:	00 10                	add    BYTE PTR [rax],dl
    131b:	00 08                	add    BYTE PTR [rax],cl
    131d:	b4 09                	mov    ah,0x9
    131f:	00 00                	add    BYTE PTR [rax],al
    1321:	06                   	(bad)
    1322:	9d                   	popf
    1323:	04 00                	add    al,0x0
    1325:	00 14 28             	add    BYTE PTR [rax+rbp*1],dl
    1328:	03 c0                	add    eax,eax
    132a:	09 00                	or     DWORD PTR [rax],eax
    132c:	00 26                	add    BYTE PTR [rsi],ah
    132e:	b4 07                	mov    ah,0x7
    1330:	00 00                	add    BYTE PTR [rax],al
    1332:	15 06 6d 00 00       	adc    eax,0x6d06
    1337:	00 04 49             	add    BYTE PTR [rcx+rcx*2],al
    133a:	ae                   	scas   al,BYTE PTR es:[rdi]
    133b:	04 00                	add    al,0x0
    133d:	00 15 0c 06 56 04    	add    BYTE PTR [rip+0x456060c],dl        # 456194f <_end+0x455b937>
    1343:	00 00                	add    BYTE PTR [rax],al
    1345:	34 0a                	xor    al,0xa
    1347:	00 00                	add    BYTE PTR [rax],al
    1349:	01 01                	add    DWORD PTR [rcx],eax
    134b:	0a 00                	or     al,BYTE PTR [rax]
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	17                   	(bad)
    1350:	af                   	scas   eax,DWORD PTR es:[rdi]
    1351:	05 00 00 15 0b       	add    eax,0xb150000
    1356:	05 60 05 00 00       	add    eax,0x560
    135b:	66 00 00             	data16 add BYTE PTR [rax],al
    135e:	00 53 0a             	add    BYTE PTR [rbx+0xa],dl
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	01 01                	add    DWORD PTR [rcx],eax
    1365:	0a 00                	or     al,BYTE PTR [rax]
    1367:	00 01                	add    BYTE PTR [rcx],al
    1369:	f5                   	cmc
    136a:	08 00                	or     BYTE PTR [rax],al
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	17                   	(bad)
    136f:	31 04 00             	xor    DWORD PTR [rax+rax*1],eax
    1372:	00 15 0a 05 df 06    	add    BYTE PTR [rip+0x6df050a],dl        # 6df1882 <_end+0x6deb86a>
    1378:	00 00                	add    BYTE PTR [rax],al
    137a:	66 00 00             	data16 add BYTE PTR [rax],al
    137d:	00 72 0a             	add    BYTE PTR [rdx+0xa],dh
    1380:	00 00                	add    BYTE PTR [rax],al
    1382:	01 01                	add    DWORD PTR [rcx],eax
    1384:	0a 00                	or     al,BYTE PTR [rax]
    1386:	00 01                	add    BYTE PTR [rcx],al
    1388:	f5                   	cmc
    1389:	08 00                	or     BYTE PTR [rax],al
    138b:	00 00                	add    BYTE PTR [rax],al
    138d:	17                   	(bad)
    138e:	88 05 00 00 15 09    	mov    BYTE PTR [rip+0x9150000],al        # 9151394 <_end+0x914b37c>
    1394:	05 fe 06 00 00       	add    eax,0x6fe
    1399:	66 00 00             	data16 add BYTE PTR [rax],al
    139c:	00 91 0a 00 00 01    	add    BYTE PTR [rcx+0x100000a],dl
    13a2:	01 0a                	add    DWORD PTR [rdx],ecx
    13a4:	00 00                	add    BYTE PTR [rax],al
    13a6:	01 f5                	add    ebp,esi
    13a8:	08 00                	or     BYTE PTR [rax],al
    13aa:	00 00                	add    BYTE PTR [rax],al
    13ac:	4a                   	rex.WX
    13ad:	4a 05 00 00 15 08    	rex.WX add rax,0x8150000
    13b3:	06                   	(bad)
    13b4:	53                   	push   rbx
    13b5:	05 00 00 b4 09       	add    eax,0x9b40000
    13ba:	00 00                	add    BYTE PTR [rax],al
    13bc:	11 0b                	adc    DWORD PTR [rbx],ecx
    13be:	04 00                	add    al,0x0
    13c0:	00 16                	add    BYTE PTR [rsi],dl
    13c2:	34 0c                	xor    al,0xc
    13c4:	66 00 00             	data16 add BYTE PTR [rax],al
    13c7:	00 bd 0a 00 00 01    	add    BYTE PTR [rbp+0x100000a],bh
    13cd:	66 00 00             	data16 add BYTE PTR [rax],al
    13d0:	00 01                	add    BYTE PTR [rcx],al
    13d2:	f5                   	cmc
    13d3:	00 00                	add    BYTE PTR [rax],al
    13d5:	00 30                	add    BYTE PTR [rax],dh
    13d7:	00 25 a2 03 00 00    	add    BYTE PTR [rip+0x3a2],ah        # 177f <_Z20hashMapSearchElementP7HashMap8string_t+0x5f>
    13dd:	af                   	scas   eax,DWORD PTR es:[rdi]
    13de:	02 ce                	add    cl,dh
    13e0:	0a 00                	or     al,BYTE PTR [rax]
    13e2:	00 01                	add    BYTE PTR [rcx],al
    13e4:	3f                   	(bad)
    13e5:	01 00                	add    DWORD PTR [rax],eax
    13e7:	00 00                	add    BYTE PTR [rax],al
    13e9:	0b 36                	or     esi,DWORD PTR [rsi]
    13eb:	05 00 00 d4 02       	add    eax,0x2d40000
    13f0:	0e                   	(bad)
    13f1:	3f                   	(bad)
    13f2:	01 00                	add    DWORD PTR [rax],eax
    13f4:	00 e9                	add    cl,ch
    13f6:	0a 00                	or     al,BYTE PTR [rax]
    13f8:	00 01                	add    BYTE PTR [rcx],al
    13fa:	2e 00 00             	cs add BYTE PTR [rax],al
    13fd:	00 01                	add    BYTE PTR [rcx],al
    13ff:	2e 00 00             	cs add BYTE PTR [rax],al
    1402:	00 00                	add    BYTE PTR [rax],al
    1404:	0b 2f                	or     ebp,DWORD PTR [rdi]
    1406:	07                   	(bad)
    1407:	00 00                	add    BYTE PTR [rax],al
    1409:	a3 02 0e 3f 01 00 00 	movabs ds:0xb040000013f0e02,eax
    1410:	04 0b 
    1412:	00 00                	add    BYTE PTR [rax],al
    1414:	01 2e                	add    DWORD PTR [rsi],ebp
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	00 01                	add    BYTE PTR [rcx],al
    141a:	2e 00 00             	cs add BYTE PTR [rax],al
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	4b 08 06             	rex.WXB or BYTE PTR [r14],al
    1422:	00 00                	add    BYTE PTR [rax],al
    1424:	17                   	(bad)
    1425:	45 0d 25 0b 00 00    	rex.RB or eax,0xb25
    142b:	01 f5                	add    ebp,esi
    142d:	00 00                	add    BYTE PTR [rax],al
    142f:	00 01                	add    BYTE PTR [rcx],al
    1431:	f5                   	cmc
    1432:	00 00                	add    BYTE PTR [rax],al
    1434:	00 01                	add    BYTE PTR [rcx],al
    1436:	12 01                	adc    al,BYTE PTR [rcx]
    1438:	00 00                	add    BYTE PTR [rax],al
    143a:	01 f5                	add    ebp,esi
    143c:	00 00                	add    BYTE PTR [rax],al
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	21 31                	and    DWORD PTR [rcx],esi
    1442:	08 00                	or     BYTE PTR [rax],al
    1444:	00 c4                	add    ah,al
    1446:	09 bf 03 00 00 06    	or     DWORD PTR [rdi+0x6000003],edi
    144c:	0a 00                	or     al,BYTE PTR [rax]
    144e:	00 90 18 00 00 00    	add    BYTE PTR [rax+0x18],dl
    1454:	00 00                	add    BYTE PTR [rax],al
    1456:	00 44 02 00          	add    BYTE PTR [rdx+rax*1+0x0],al
    145a:	00 00                	add    BYTE PTR [rax],al
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	00 01                	add    BYTE PTR [rcx],al
    1460:	9c                   	pushf
    1461:	6b 0d 00 00 12 ef 05 	imul   ecx,DWORD PTR [rip+0xffffffffef120000],0x5        # ffffffffef121468 <_end+0xffffffffef11b450>
    1468:	00 00                	add    BYTE PTR [rax],al
    146a:	c4                   	(bad)
    146b:	19 6b 0d             	sbb    DWORD PTR [rbx+0xd],ebp
    146e:	00 00                	add    BYTE PTR [rax],al
    1470:	90                   	nop
    1471:	00 00                	add    BYTE PTR [rax],al
    1473:	00 84 00 00 00 12 24 	add    BYTE PTR [rax+rax*1+0x24120000],al
    147a:	08 00                	or     BYTE PTR [rax],al
    147c:	00 c4                	add    ah,al
    147e:	2b 79 08             	sub    edi,DWORD PTR [rcx+0x8]
    1481:	00 00                	add    BYTE PTR [rax],al
    1483:	cf                   	iret
    1484:	00 00                	add    BYTE PTR [rax],al
    1486:	00 c1                	add    cl,al
    1488:	00 00                	add    BYTE PTR [rax],al
    148a:	00 18                	add    BYTE PTR [rax],bl
    148c:	d3 03                	rol    DWORD PTR [rbx],cl
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	80 0d 00 00 09 03 40 	or     BYTE PTR [rip+0x3090000],0x40        # 3091497 <_end+0x308b47f>
    1497:	43 00 00             	rex.XB add BYTE PTR [r8],al
    149a:	00 00                	add    BYTE PTR [rax],al
    149c:	00 00                	add    BYTE PTR [rax],al
    149e:	0a eb                	or     ch,bl
    14a0:	05 00 00 c7 0d       	add    eax,0xdc70000
    14a5:	06                   	(bad)
    14a6:	0a 00                	or     al,BYTE PTR [rax]
    14a8:	00 1d 01 00 00 0f    	add    BYTE PTR [rip+0xf000001],bl        # f0014af <_end+0xeffb497>
    14ae:	01 00                	add    DWORD PTR [rax],eax
    14b0:	00 4c f8 00          	add    BYTE PTR [rax+rdi*8+0x0],cl
    14b4:	00 00                	add    BYTE PTR [rax],al
    14b6:	43 0c 00             	rex.XB or al,0x0
    14b9:	00 19                	add    BYTE PTR [rcx],bl
    14bb:	69 00 ca 13 79 08    	imul   eax,DWORD PTR [rax],0x87913ca
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	69 01 00 00 63 01    	imul   eax,DWORD PTR [rcx],0x1630000
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	4d b0 19             	rex.WRB mov r8b,0x19
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	00 00                	add    BYTE PTR [rax],al
    14d2:	00 00                	add    BYTE PTR [rax],al
    14d4:	88 00                	mov    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	00 00                	add    BYTE PTR [rax],al
    14da:	00 00                	add    BYTE PTR [rax],al
    14dc:	0a 75 04             	or     dh,BYTE PTR [rbp+0x4]
    14df:	00 00                	add    BYTE PTR [rax],al
    14e1:	cb                   	retf
    14e2:	12 79 08             	adc    bh,BYTE PTR [rcx+0x8]
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	8d 01                	lea    eax,[rcx]
    14e9:	00 00                	add    BYTE PTR [rax],al
    14eb:	89 01                	mov    DWORD PTR [rcx],eax
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	15 03 01 00 00       	adc    eax,0x103
    14f4:	0a 42 15             	or     al,BYTE PTR [rdx+0x15]
    14f7:	00 00                	add    BYTE PTR [rax],al
    14f9:	ce                   	(bad)
    14fa:	14 f5                	adc    al,0xf5
    14fc:	08 00                	or     BYTE PTR [rax],al
    14fe:	00 a2 01 00 00 9c    	add    BYTE PTR [rdx-0x63ffffff],ah
    1504:	01 00                	add    DWORD PTR [rax],eax
    1506:	00 4e 85             	add    BYTE PTR [rsi-0x7b],cl
    1509:	0d 00 00 f7 19       	or     eax,0x19f70000
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	00 00                	add    BYTE PTR [rax],al
    1512:	00 00                	add    BYTE PTR [rax],al
    1514:	00 0e                	add    BYTE PTR [rsi],cl
    1516:	01 00                	add    DWORD PTR [rax],eax
    1518:	00 01                	add    BYTE PTR [rcx],al
    151a:	cf                   	iret
    151b:	1d 4f a2 0d 00       	sbb    eax,0xda24f
    1520:	00 03                	add    BYTE PTR [rbx],al
    1522:	76 f0                	jbe    1514 <_Z11hashMapCtorPFj8string_tEj+0x54>
    1524:	7e 27                	jle    154d <_Z11hashMapCtorPFj8string_tEj+0x8d>
    1526:	96                   	xchg   esi,eax
    1527:	0d 00 00 15 19       	or     eax,0x19150000
    152c:	01 00                	add    DWORD PTR [rax],eax
    152e:	00 0e                	add    BYTE PTR [rsi],cl
    1530:	b7 0d                	mov    bh,0xd
    1532:	00 00                	add    BYTE PTR [rax],al
    1534:	cb                   	retf
    1535:	01 00                	add    DWORD PTR [rax],eax
    1537:	00 c7                	add    bh,al
    1539:	01 00                	add    DWORD PTR [rax],eax
    153b:	00 31                	add    BYTE PTR [rcx],dh
    153d:	c2 0d 00             	ret    0xd
    1540:	00 13                	add    BYTE PTR [rbx],dl
    1542:	18 1a                	sbb    BYTE PTR [rdx],bl
    1544:	00 00                	add    BYTE PTR [rax],al
    1546:	00 00                	add    BYTE PTR [rax],al
    1548:	00 00                	add    BYTE PTR [rax],al
    154a:	01 30                	add    DWORD PTR [rax],esi
    154c:	0f 21 1a             	mov    rdx,dr3
    154f:	00 00                	add    BYTE PTR [rax],al
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 00                	add    BYTE PTR [rax],al
    1555:	72 0a                	jb     1561 <_Z11hashMapCtorPFj8string_tEj+0xa1>
    1557:	00 00                	add    BYTE PTR [rax],al
    1559:	00 00                	add    BYTE PTR [rax],al
    155b:	00 00                	add    BYTE PTR [rax],al
    155d:	00 0c 03             	add    BYTE PTR [rbx+rax*1],cl
    1560:	15 00 00 e0 18       	adc    eax,0x18e00000
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	00 00                	add    BYTE PTR [rax],al
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	01 e2                	add    edx,esp
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	00 c7                	add    bh,al
    1571:	26 cd 0c             	es int 0xc
    1574:	00 00                	add    BYTE PTR [rax],al
    1576:	04 24                	add    al,0x24
    1578:	15 00 00 e8 01       	adc    eax,0x1e80000
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	e4 01                	in     al,0x1
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	04 18                	add    al,0x18
    1585:	15 00 00 fb 01       	adc    eax,0x1fb0000
    158a:	00 00                	add    BYTE PTR [rax],al
    158c:	f7 01 00 00 15 e2    	test   DWORD PTR [rcx],0xe2150000
    1592:	00 00                	add    BYTE PTR [rax],al
    1594:	00 31                	add    BYTE PTR [rcx],dh
    1596:	30 15 00 00 32 3b    	xor    BYTE PTR [rip+0x3b320000],dl        # 3b32159c <_end+0x3b31b584>
    159c:	15 00 00 ed 00       	adc    eax,0xed0000
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	b0 0c                	mov    al,0xc
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	0e                   	(bad)
    15a8:	3c 15                	cmp    al,0x15
    15aa:	00 00                	add    BYTE PTR [rax],al
    15ac:	0d 02 00 00 0b       	or     eax,0xb000002
    15b1:	02 00                	add    al,BYTE PTR [rax]
    15b3:	00 09                	add    BYTE PTR [rcx],cl
    15b5:	40 19 00             	rex sbb DWORD PTR [rax],eax
    15b8:	00 00                	add    BYTE PTR [rax],al
    15ba:	00 00                	add    BYTE PTR [rax],al
    15bc:	00 91 0a 00 00 03    	add    BYTE PTR [rcx+0x300000a],dl
    15c2:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    15c5:	76 c8                	jbe    158f <_Z17hashMapAddElementP7HashMap8string_t+0x1f>
    15c7:	7e 06                	jle    15cf <_Z17hashMapAddElementP7HashMap8string_t+0x5f>
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	09 ff                	or     edi,edi
    15cd:	18 00                	sbb    BYTE PTR [rax],al
    15cf:	00 00                	add    BYTE PTR [rax],al
    15d1:	00 00                	add    BYTE PTR [rax],al
    15d3:	00 e9                	add    cl,ch
    15d5:	0a 00                	or     al,BYTE PTR [rax]
    15d7:	00 03                	add    BYTE PTR [rbx],al
    15d9:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    15dc:	76 b8                	jbe    1596 <_Z17hashMapAddElementP7HashMap8string_t+0x26>
    15de:	7e 06                	jle    15e6 <_Z17hashMapAddElementP7HashMap8string_t+0x76>
    15e0:	03 01                	add    eax,DWORD PTR [rcx]
    15e2:	54                   	push   rsp
    15e3:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	50                   	push   rax
    15e9:	e3 0d                	jrcxz  15f8 <_Z17hashMapAddElementP7HashMap8string_t+0x88>
    15eb:	00 00                	add    BYTE PTR [rax],al
    15ed:	29 01                	sub    DWORD PTR [rcx],eax
    15ef:	00 00                	add    BYTE PTR [rax],al
    15f1:	01 d5                	add    ebp,edx
    15f3:	10 1e                	adc    BYTE PTR [rsi],bl
    15f5:	0d 00 00 27 f4       	or     eax,0xf4270000
    15fa:	0d 00 00 15 29       	or     eax,0x29150000
    15ff:	01 00                	add    DWORD PTR [rax],eax
    1601:	00 32                	add    BYTE PTR [rdx],dh
    1603:	09 0e                	or     DWORD PTR [rsi],ecx
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	39 01                	cmp    DWORD PTR [rcx],eax
    1609:	00 00                	add    BYTE PTR [rax],al
    160b:	0f 0d 00             	prefetch BYTE PTR [rax]
    160e:	00 0e                	add    BYTE PTR [rsi],cl
    1610:	0a 0e                	or     cl,BYTE PTR [rsi]
    1612:	00 00                	add    BYTE PTR [rax],al
    1614:	1c 02                	sbb    al,0x2
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	16                   	(bad)
    1619:	02 00                	add    al,BYTE PTR [rax]
    161b:	00 0f                	add    BYTE PTR [rdi],cl
    161d:	75 1a                	jne    1639 <_Z17hashMapAddElementP7HashMap8string_t+0xc9>
    161f:	00 00                	add    BYTE PTR [rax],al
    1621:	00 00                	add    BYTE PTR [rax],al
    1623:	00 00                	add    BYTE PTR [rax],al
    1625:	1e                   	(bad)
    1626:	0a 00                	or     al,BYTE PTR [rax]
    1628:	00 00                	add    BYTE PTR [rax],al
    162a:	0f 85 1a 00 00 00    	jne    164a <_Z17hashMapPopElementP7HashMap8string_t+0xa>
    1630:	00 00                	add    BYTE PTR [rax],al
    1632:	00 bd 0a 00 00 00    	add    BYTE PTR [rbp+0xa],bh
    1638:	00 1a                	add    BYTE PTR [rdx],bl
    163a:	cf                   	iret
    163b:	1a 00                	sbb    al,BYTE PTR [rax]
    163d:	00 00                	add    BYTE PTR [rax],al
    163f:	00 00                	add    BYTE PTR [rax],al
    1641:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
    1644:	00 00                	add    BYTE PTR [rax],al
    1646:	5d                   	pop    rbp
    1647:	0d 00 00 03 01       	or     eax,0x1030000
    164c:	55                   	push   rbp
    164d:	09 03                	or     DWORD PTR [rbx],eax
    164f:	4c                   	rex.WR
    1650:	40 00 00             	rex add BYTE PTR [rax],al
    1653:	00 00                	add    BYTE PTR [rax],al
    1655:	00 00                	add    BYTE PTR [rax],al
    1657:	03 01                	add    eax,DWORD PTR [rcx]
    1659:	54                   	push   rsp
    165a:	09 03                	or     DWORD PTR [rbx],eax
    165c:	90                   	nop
    165d:	42 00 00             	rex.X add BYTE PTR [rax],al
    1660:	00 00                	add    BYTE PTR [rax],al
    1662:	00 00                	add    BYTE PTR [rax],al
    1664:	03 01                	add    eax,DWORD PTR [rcx]
    1666:	51                   	push   rcx
    1667:	02 08                	add    cl,BYTE PTR [rax]
    1669:	c5 03 01             	(bad)
    166c:	52                   	push   rdx
    166d:	09 03                	or     DWORD PTR [rbx],eax
    166f:	40                   	rex
    1670:	43 00 00             	rex.XB add BYTE PTR [r8],al
    1673:	00 00                	add    BYTE PTR [rax],al
    1675:	00 00                	add    BYTE PTR [rax],al
    1677:	00 0f                	add    BYTE PTR [rdi],cl
    1679:	d4                   	(bad)
    167a:	1a 00                	sbb    al,BYTE PTR [rax]
    167c:	00 00                	add    BYTE PTR [rax],al
    167e:	00 00                	add    BYTE PTR [rax],al
    1680:	00 69 1c             	add    BYTE PTR [rcx+0x1c],ch
    1683:	00 00                	add    BYTE PTR [rax],al
    1685:	00 08                	add    BYTE PTR [rax],cl
    1687:	06                   	(bad)
    1688:	0a 00                	or     al,BYTE PTR [rax]
    168a:	00 1b                	add    BYTE PTR [rbx],bl
    168c:	06                   	(bad)
    168d:	01 00                	add    DWORD PTR [rax],eax
    168f:	00 80 0d 00 00 1c    	add    BYTE PTR [rax+0x1c00000d],al
    1695:	3a 00                	cmp    al,BYTE PTR [rax]
    1697:	00 00                	add    BYTE PTR [rax],al
    1699:	22 00                	and    al,BYTE PTR [rax]
    169b:	10 70 0d             	adc    BYTE PTR [rax+0xd],dh
    169e:	00 00                	add    BYTE PTR [rax],al
    16a0:	51                   	push   rcx
    16a1:	f7 05 00 00 01 ba 11 	test   DWORD PTR [rip+0xffffffffba010000],0x87911        # ffffffffba0116ab <_end+0xffffffffba00b693>
    16a8:	79 08 00 
    16ab:	00 01                	add    BYTE PTR [rcx],al
    16ad:	ce                   	(bad)
    16ae:	0d 00 00 0d ef       	or     eax,0xef0d0000
    16b3:	05 00 00 01 ba       	add    eax,0xba010000
    16b8:	2b 6b 0d             	sub    ebp,DWORD PTR [rbx+0xd]
    16bb:	00 00                	add    BYTE PTR [rax],al
    16bd:	0d 42 15 00 00       	or     eax,0x1542
    16c2:	01 ba 3b f5 08 00    	add    DWORD PTR [rdx+0x8f53b],edi
    16c8:	00 33                	add    BYTE PTR [rbx],dh
    16ca:	d3 03                	rol    DWORD PTR [rbx],cl
    16cc:	00 00                	add    BYTE PTR [rax],al
    16ce:	de 0d 00 00 28 69    	fimul  WORD PTR [rip+0x69280000]        # 692816d4 <_end+0x6927b6bc>
    16d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16d5:	78 00                	js     16d7 <_Z17hashMapPopElementP7HashMap8string_t+0x97>
    16d7:	bd 0e 79 08 00       	mov    ebp,0x8790e
    16dc:	00 29                	add    BYTE PTR [rcx],ch
    16de:	2b 06                	sub    eax,DWORD PTR [rsi]
    16e0:	00 00                	add    BYTE PTR [rax],al
    16e2:	bf 0e 79 08 00       	mov    edi,0x8790e
    16e7:	00 00                	add    BYTE PTR [rax],al
    16e9:	1b 06                	sbb    eax,DWORD PTR [rsi]
    16eb:	01 00                	add    DWORD PTR [rax],eax
    16ed:	00 de                	add    dh,bl
    16ef:	0d 00 00 1c 3a       	or     eax,0x3a1c0000
    16f4:	00 00                	add    BYTE PTR [rax],al
    16f6:	00 2b                	add    BYTE PTR [rbx],ch
    16f8:	00 10                	add    BYTE PTR [rax],dl
    16fa:	ce                   	(bad)
    16fb:	0d 00 00 52 0c       	or     eax,0xc520000
    1700:	08 00                	or     BYTE PTR [rax],al
    1702:	00 01                	add    BYTE PTR [rcx],al
    1704:	b0 06                	mov    al,0x6
    1706:	8c 04 00             	mov    WORD PTR [rax+rax*1],es
    1709:	00 01                	add    BYTE PTR [rcx],al
    170b:	22 0e                	and    cl,BYTE PTR [rsi]
    170d:	00 00                	add    BYTE PTR [rax],al
    170f:	0d ef 05 00 00       	or     eax,0x5ef
    1714:	01 b0 1b 6b 0d 00    	add    DWORD PTR [rax+0xd6b1b],esi
    171a:	00 33                	add    BYTE PTR [rbx],dh
    171c:	d3 03                	rol    DWORD PTR [rbx],cl
    171e:	00 00                	add    BYTE PTR [rax],al
    1720:	32 0e                	xor    cl,BYTE PTR [rsi]
    1722:	00 00                	add    BYTE PTR [rax],al
    1724:	34 28                	xor    al,0x28
    1726:	69 00 b3 13 79 08    	imul   eax,DWORD PTR [rax],0x87913b3
    172c:	00 00                	add    BYTE PTR [rax],al
    172e:	0f 55 18             	andnps xmm3,XMMWORD PTR [rax]
    1731:	00 00                	add    BYTE PTR [rax],al
    1733:	00 00                	add    BYTE PTR [rax],al
    1735:	00 00                	add    BYTE PTR [rax],al
    1737:	1e                   	(bad)
    1738:	0a 00                	or     al,BYTE PTR [rax]
    173a:	00 00                	add    BYTE PTR [rax],al
    173c:	00 1b                	add    BYTE PTR [rbx],bl
    173e:	06                   	(bad)
    173f:	01 00                	add    DWORD PTR [rax],eax
    1741:	00 32                	add    BYTE PTR [rdx],dh
    1743:	0e                   	(bad)
    1744:	00 00                	add    BYTE PTR [rax],al
    1746:	1c 3a                	sbb    al,0x3a
    1748:	00 00                	add    BYTE PTR [rax],al
    174a:	00 1a                	add    BYTE PTR [rdx],bl
    174c:	00 10                	add    BYTE PTR [rax],dl
    174e:	22 0e                	and    cl,BYTE PTR [rsi]
    1750:	00 00                	add    BYTE PTR [rax],al
    1752:	21 ee                	and    esi,ebp
    1754:	04 00                	add    al,0x0
    1756:	00 aa 07 d3 04 00    	add    BYTE PTR [rdx+0x4d307],ch
    175c:	00 b3 06 00 00 f0    	add    BYTE PTR [rbx-0xffffffa],dh
    1762:	17                   	(bad)
    1763:	00 00                	add    BYTE PTR [rax],al
    1765:	00 00                	add    BYTE PTR [rax],al
    1767:	00 00                	add    BYTE PTR [rax],al
    1769:	2f                   	(bad)
    176a:	00 00                	add    BYTE PTR [rax],al
    176c:	00 00                	add    BYTE PTR [rax],al
    176e:	00 00                	add    BYTE PTR [rax],al
    1770:	00 01                	add    BYTE PTR [rcx],al
    1772:	9c                   	pushf
    1773:	be 0e 00 00 12       	mov    esi,0x1200000e
    1778:	ef                   	out    dx,eax
    1779:	05 00 00 aa 1e       	add    eax,0x1eaa0000
    177e:	6b 0d 00 00 39 02 00 	imul   ecx,DWORD PTR [rip+0x2390000],0x0        # 2391785 <_end+0x238b76d>
    1785:	00 35 02 00 00 18    	add    BYTE PTR [rip+0x18000002],dh        # 1800178d <_end+0x17ffb775>
    178b:	d3 03                	rol    DWORD PTR [rbx],cl
    178d:	00 00                	add    BYTE PTR [rax],al
    178f:	ce                   	(bad)
    1790:	0e                   	(bad)
    1791:	00 00                	add    BYTE PTR [rax],al
    1793:	09 03                	or     DWORD PTR [rbx],eax
    1795:	54                   	push   rsp
    1796:	40 00 00             	rex add BYTE PTR [rax],al
    1799:	00 00                	add    BYTE PTR [rax],al
    179b:	00 00                	add    BYTE PTR [rax],al
    179d:	09 1f                	or     DWORD PTR [rdi],ebx
    179f:	18 00                	sbb    BYTE PTR [rax],al
    17a1:	00 00                	add    BYTE PTR [rax],al
    17a3:	00 00                	add    BYTE PTR [rax],al
    17a5:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
    17a8:	00 00                	add    BYTE PTR [rax],al
    17aa:	03 01                	add    eax,DWORD PTR [rcx]
    17ac:	55                   	push   rbp
    17ad:	09 03                	or     DWORD PTR [rbx],eax
    17af:	4c                   	rex.WR
    17b0:	40 00 00             	rex add BYTE PTR [rax],al
    17b3:	00 00                	add    BYTE PTR [rax],al
    17b5:	00 00                	add    BYTE PTR [rax],al
    17b7:	03 01                	add    eax,DWORD PTR [rcx]
    17b9:	54                   	push   rsp
    17ba:	09 03                	or     DWORD PTR [rbx],eax
    17bc:	90                   	nop
    17bd:	42 00 00             	rex.X add BYTE PTR [rax],al
    17c0:	00 00                	add    BYTE PTR [rax],al
    17c2:	00 00                	add    BYTE PTR [rax],al
    17c4:	03 01                	add    eax,DWORD PTR [rcx]
    17c6:	51                   	push   rcx
    17c7:	02 08                	add    cl,BYTE PTR [rax]
    17c9:	ab                   	stos   DWORD PTR es:[rdi],eax
    17ca:	03 01                	add    eax,DWORD PTR [rcx]
    17cc:	52                   	push   rdx
    17cd:	09 03                	or     DWORD PTR [rbx],eax
    17cf:	54                   	push   rsp
    17d0:	40 00 00             	rex add BYTE PTR [rax],al
    17d3:	00 00                	add    BYTE PTR [rax],al
    17d5:	00 00                	add    BYTE PTR [rax],al
    17d7:	00 00                	add    BYTE PTR [rax],al
    17d9:	1b 06                	sbb    eax,DWORD PTR [rsi]
    17db:	01 00                	add    DWORD PTR [rax],eax
    17dd:	00 ce                	add    dh,cl
    17df:	0e                   	(bad)
    17e0:	00 00                	add    BYTE PTR [rax],al
    17e2:	1c 3a                	sbb    al,0x3a
    17e4:	00 00                	add    BYTE PTR [rax],al
    17e6:	00 1d 00 10 be 0e    	add    BYTE PTR [rip+0xebe1000],bl        # ebe27ec <_end+0xebdc7d4>
    17ec:	00 00                	add    BYTE PTR [rax],al
    17ee:	21 16                	and    DWORD PTR [rsi],edx
    17f0:	06                   	(bad)
    17f1:	00 00                	add    BYTE PTR [rax],al
    17f3:	6c                   	ins    BYTE PTR es:[rdi],dx
    17f4:	06                   	(bad)
    17f5:	36 07                	ss (bad)
    17f7:	00 00                	add    BYTE PTR [rax],al
    17f9:	42 13 00             	rex.X adc eax,DWORD PTR [rax]
    17fc:	00 20                	add    BYTE PTR [rax],ah
    17fe:	17                   	(bad)
    17ff:	00 00                	add    BYTE PTR [rax],al
    1801:	00 00                	add    BYTE PTR [rax],al
    1803:	00 00                	add    BYTE PTR [rax],al
    1805:	c6 00 00             	mov    BYTE PTR [rax],0x0
    1808:	00 00                	add    BYTE PTR [rax],al
    180a:	00 00                	add    BYTE PTR [rax],al
    180c:	00 01                	add    BYTE PTR [rcx],al
    180e:	9c                   	pushf
    180f:	42 13 00             	rex.X adc eax,DWORD PTR [rax]
    1812:	00 12                	add    BYTE PTR [rdx],dl
    1814:	ef                   	out    dx,eax
    1815:	05 00 00 6c 24       	add    eax,0x246c0000
    181a:	6b 0d 00 00 55 02 00 	imul   ecx,DWORD PTR [rip+0x2550000],0x0        # 2551821 <_end+0x254b809>
    1821:	00 4b 02             	add    BYTE PTR [rbx+0x2],cl
    1824:	00 00                	add    BYTE PTR [rax],al
    1826:	12 42 15             	adc    al,BYTE PTR [rdx+0x15]
    1829:	00 00                	add    BYTE PTR [rax],al
    182b:	6c                   	ins    BYTE PTR es:[rdi],dx
    182c:	34 f5                	xor    al,0xf5
    182e:	08 00                	or     BYTE PTR [rax],al
    1830:	00 87 02 00 00 7f    	add    BYTE PTR [rdi+0x7f000002],al
    1836:	02 00                	add    al,BYTE PTR [rax]
    1838:	00 18                	add    BYTE PTR [rax],bl
    183a:	d3 03                	rol    DWORD PTR [rbx],cl
    183c:	00 00                	add    BYTE PTR [rax],al
    183e:	de 0d 00 00 09 03    	fimul  WORD PTR [rip+0x3090000]        # 3091844 <_end+0x308b82c>
    1844:	10 43 00             	adc    BYTE PTR [rbx+0x0],al
    1847:	00 00                	add    BYTE PTR [rax],al
    1849:	00 00                	add    BYTE PTR [rax],al
    184b:	00 0a                	add    BYTE PTR [rdx],cl
    184d:	70 04                	jo     1853 <_Z11hashMapDtorP7HashMap+0x33>
    184f:	00 00                	add    BYTE PTR [rax],al
    1851:	7d 12                	jge    1865 <_Z11hashMapDtorP7HashMap+0x45>
    1853:	79 08                	jns    185d <_Z11hashMapDtorP7HashMap+0x3d>
    1855:	00 00                	add    BYTE PTR [rax],al
    1857:	b8 02 00 00 b6       	mov    eax,0xb6000002
    185c:	02 00                	add    al,BYTE PTR [rax]
    185e:	00 19                	add    BYTE PTR [rcx],bl
    1860:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    1863:	00 7e 12             	add    BYTE PTR [rsi+0x12],bh
    1866:	85 08                	test   DWORD PTR [rax],ecx
    1868:	00 00                	add    BYTE PTR [rax],al
    186a:	c3                   	ret
    186b:	02 00                	add    al,BYTE PTR [rax]
    186d:	00 c1                	add    cl,al
    186f:	02 00                	add    al,BYTE PTR [rax]
    1871:	00 0a                	add    BYTE PTR [rdx],cl
    1873:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1874:	03 00                	add    eax,DWORD PTR [rax]
    1876:	00 89 16 85 08 00    	add    BYTE PTR [rcx+0x88516],cl
    187c:	00 da                	add    dl,bl
    187e:	02 00                	add    al,BYTE PTR [rax]
    1880:	00 d4                	add    ah,dl
    1882:	02 00                	add    al,BYTE PTR [rax]
    1884:	00 0a                	add    BYTE PTR [rdx],cl
    1886:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1887:	03 00                	add    eax,DWORD PTR [rax]
    1889:	00 8a 16 85 08 00    	add    BYTE PTR [rdx+0x88516],cl
    188f:	00 f4                	add    ah,dh
    1891:	02 00                	add    al,BYTE PTR [rax]
    1893:	00 f0                	add    al,dh
    1895:	02 00                	add    al,BYTE PTR [rax]
    1897:	00 0a                	add    BYTE PTR [rdx],cl
    1899:	b3 03                	mov    bl,0x3
    189b:	00 00                	add    BYTE PTR [rax],al
    189d:	8b 16                	mov    edx,DWORD PTR [rsi]
    189f:	85 08                	test   DWORD PTR [rax],ecx
    18a1:	00 00                	add    BYTE PTR [rax],al
    18a3:	07                   	(bad)
    18a4:	03 00                	add    eax,DWORD PTR [rax]
    18a6:	00 03                	add    BYTE PTR [rbx],al
    18a8:	03 00                	add    eax,DWORD PTR [rax]
    18aa:	00 0a                	add    BYTE PTR [rdx],cl
    18ac:	b9 03 00 00 8c       	mov    ecx,0x8c000003
    18b1:	16                   	(bad)
    18b2:	85 08                	test   DWORD PTR [rax],ecx
    18b4:	00 00                	add    BYTE PTR [rax],al
    18b6:	1a 03                	sbb    al,BYTE PTR [rbx]
    18b8:	00 00                	add    BYTE PTR [rax],al
    18ba:	16                   	(bad)
    18bb:	03 00                	add    eax,DWORD PTR [rax]
    18bd:	00 29                	add    BYTE PTR [rcx],ch
    18bf:	47 04 00             	rex.RXB add al,0x0
    18c2:	00 9d 16 79 08 00    	add    BYTE PTR [rbp+0x87916],bl
    18c8:	00 19                	add    BYTE PTR [rcx],bl
    18ca:	69 6e 78 00 a3 0e 79 	imul   ebp,DWORD PTR [rsi+0x78],0x790ea300
    18d1:	08 00                	or     BYTE PTR [rax],al
    18d3:	00 2b                	add    BYTE PTR [rbx],ch
    18d5:	03 00                	add    eax,DWORD PTR [rax]
    18d7:	00 29                	add    BYTE PTR [rcx],ch
    18d9:	03 00                	add    eax,DWORD PTR [rax]
    18db:	00 0c fb             	add    BYTE PTR [rbx+rdi*8],cl
    18de:	19 00                	sbb    DWORD PTR [rax],eax
    18e0:	00 79 17             	add    BYTE PTR [rcx+0x17],bh
    18e3:	00 00                	add    BYTE PTR [rax],al
    18e5:	00 00                	add    BYTE PTR [rax],al
    18e7:	00 00                	add    BYTE PTR [rax],al
    18e9:	09 75 00             	or     DWORD PTR [rbp+0x0],esi
    18ec:	00 00                	add    BYTE PTR [rax],al
    18ee:	90                   	nop
    18ef:	1e                   	(bad)
    18f0:	ec                   	in     al,dx
    18f1:	0f 00 00             	sldt   WORD PTR [rax]
    18f4:	27                   	(bad)
    18f5:	1c 1a                	sbb    al,0x1a
    18f7:	00 00                	add    BYTE PTR [rax],al
    18f9:	04 0f                	add    al,0xf
    18fb:	1a 00                	sbb    al,BYTE PTR [rax]
    18fd:	00 35 03 00 00 33    	add    BYTE PTR [rip+0x33000003],dh        # 33001906 <_end+0x32ffb8ee>
    1903:	03 00                	add    eax,DWORD PTR [rax]
    1905:	00 00                	add    BYTE PTR [rax],al
    1907:	0c 90                	or     al,0x90
    1909:	19 00                	sbb    DWORD PTR [rax],eax
    190b:	00 44 17 00          	add    BYTE PTR [rdi+rdx*1+0x0],al
    190f:	00 00                	add    BYTE PTR [rax],al
    1911:	00 00                	add    BYTE PTR [rax],al
    1913:	00 03                	add    BYTE PTR [rbx],al
    1915:	8a 00                	mov    al,BYTE PTR [rax]
    1917:	00 00                	add    BYTE PTR [rax],al
    1919:	89 32                	mov    DWORD PTR [rdx],esi
    191b:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    191c:	10 00                	adc    BYTE PTR [rax],al
    191e:	00 04 b1             	add    BYTE PTR [rcx+rsi*4],al
    1921:	19 00                	sbb    DWORD PTR [rax],eax
    1923:	00 48 03             	add    BYTE PTR [rax+0x3],cl
    1926:	00 00                	add    BYTE PTR [rax],al
    1928:	46 03 00             	rex.RX add r8d,DWORD PTR [rax]
    192b:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
    192e:	19 00                	sbb    DWORD PTR [rax],eax
    1930:	00 53 03             	add    BYTE PTR [rbx+0x3],dl
    1933:	00 00                	add    BYTE PTR [rax],al
    1935:	51                   	push   rcx
    1936:	03 00                	add    eax,DWORD PTR [rax]
    1938:	00 15 8a 00 00 00    	add    BYTE PTR [rip+0x8a],dl        # 19c8 <_Z6resizeP7HashMapj+0x138>
    193e:	0e                   	(bad)
    193f:	be 19 00 00 5d       	mov    esi,0x5d000019
    1944:	03 00                	add    eax,DWORD PTR [rax]
    1946:	00 5b 03             	add    BYTE PTR [rbx+0x3],bl
    1949:	00 00                	add    BYTE PTR [rax],al
    194b:	53                   	push   rbx
    194c:	2a 1a                	sub    bl,BYTE PTR [rdx]
    194e:	00 00                	add    BYTE PTR [rax],al
    1950:	44 17                	rex.R (bad)
    1952:	00 00                	add    BYTE PTR [rax],al
    1954:	00 00                	add    BYTE PTR [rax],al
    1956:	00 00                	add    BYTE PTR [rax],al
    1958:	09 95 00 00 00 05    	or     DWORD PTR [rbp+0x5000000],edx
    195e:	31 02                	xor    DWORD PTR [rdx],eax
    1960:	1c 65                	sbb    al,0x65
    1962:	10 00                	adc    BYTE PTR [rax],al
    1964:	00 04 4b             	add    BYTE PTR [rbx+rcx*2],al
    1967:	1a 00                	sbb    al,BYTE PTR [rax]
    1969:	00 67 03             	add    BYTE PTR [rdi+0x3],ah
    196c:	00 00                	add    BYTE PTR [rax],al
    196e:	65 03 00             	add    eax,DWORD PTR gs:[rax]
    1971:	00 04 3e             	add    BYTE PTR [rsi+rdi*1],al
    1974:	1a 00                	sbb    al,BYTE PTR [rax]
    1976:	00 72 03             	add    BYTE PTR [rdx+0x3],dh
    1979:	00 00                	add    BYTE PTR [rax],al
    197b:	70 03                	jo     1980 <_Z6resizeP7HashMapj+0xf0>
    197d:	00 00                	add    BYTE PTR [rax],al
    197f:	00 54 cc 19          	add    BYTE PTR [rsp+rcx*8+0x19],dl
    1983:	00 00                	add    BYTE PTR [rax],al
    1985:	44 17                	rex.R (bad)
    1987:	00 00                	add    BYTE PTR [rax],al
    1989:	00 00                	add    BYTE PTR [rax],al
    198b:	00 00                	add    BYTE PTR [rax],al
    198d:	05 44 17 00 00       	add    eax,0x1744
	...
    199e:	05 30 02 2a 04       	add    eax,0x42a0230
    19a3:	ed                   	in     eax,dx
    19a4:	19 00                	sbb    DWORD PTR [rax],eax
    19a6:	00 7c 03 00          	add    BYTE PTR [rbx+rax*1+0x0],bh
    19aa:	00 7a 03             	add    BYTE PTR [rdx+0x3],bh
    19ad:	00 00                	add    BYTE PTR [rax],al
    19af:	04 e0                	add    al,0xe0
    19b1:	19 00                	sbb    DWORD PTR [rax],eax
    19b3:	00 87 03 00 00 85    	add    BYTE PTR [rdi-0x7afffffd],al
    19b9:	03 00                	add    eax,DWORD PTR [rax]
    19bb:	00 00                	add    BYTE PTR [rax],al
    19bd:	00 00                	add    BYTE PTR [rax],al
    19bf:	0c 90                	or     al,0x90
    19c1:	19 00                	sbb    DWORD PTR [rax],eax
    19c3:	00 44 17 00          	add    BYTE PTR [rdi+rdx*1+0x0],al
    19c7:	00 00                	add    BYTE PTR [rax],al
    19c9:	00 00                	add    BYTE PTR [rax],al
    19cb:	00 0d a0 00 00 00    	add    BYTE PTR [rip+0xa0],cl        # 1a71 <_Z6resizeP7HashMapj+0x1e1>
    19d1:	8a 32                	mov    dh,BYTE PTR [rdx]
    19d3:	17                   	(bad)
    19d4:	11 00                	adc    DWORD PTR [rax],eax
    19d6:	00 04 b1             	add    BYTE PTR [rcx+rsi*4],al
    19d9:	19 00                	sbb    DWORD PTR [rax],eax
    19db:	00 91 03 00 00 8f    	add    BYTE PTR [rcx-0x70fffffd],dl
    19e1:	03 00                	add    eax,DWORD PTR [rax]
    19e3:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
    19e6:	19 00                	sbb    DWORD PTR [rax],eax
    19e8:	00 9c 03 00 00 9a 03 	add    BYTE PTR [rbx+rax*1+0x39a0000],bl
    19ef:	00 00                	add    BYTE PTR [rax],al
    19f1:	15 a0 00 00 00       	adc    eax,0xa0
    19f6:	0e                   	(bad)
    19f7:	be 19 00 00 a6       	mov    esi,0xa6000019
    19fc:	03 00                	add    eax,DWORD PTR [rax]
    19fe:	00 a4 03 00 00 2a 2a 	add    BYTE PTR [rbx+rax*1+0x2a2a0000],ah
    1a05:	1a 00                	sbb    al,BYTE PTR [rax]
    1a07:	00 44 17 00          	add    BYTE PTR [rdi+rdx*1+0x0],al
    1a0b:	00 00                	add    BYTE PTR [rax],al
    1a0d:	00 00                	add    BYTE PTR [rax],al
    1a0f:	00 10                	add    BYTE PTR [rax],dl
    1a11:	a0 00 00 00 04 4b 1a 	movabs al,ds:0x1a4b04000000
    1a18:	00 00 
    1a1a:	b0 03                	mov    al,0x3
    1a1c:	00 00                	add    BYTE PTR [rax],al
    1a1e:	ae                   	scas   al,BYTE PTR es:[rdi]
    1a1f:	03 00                	add    eax,DWORD PTR [rax]
    1a21:	00 04 3e             	add    BYTE PTR [rsi+rdi*1],al
    1a24:	1a 00                	sbb    al,BYTE PTR [rax]
    1a26:	00 bb 03 00 00 b9    	add    BYTE PTR [rbx-0x46fffffd],bh
    1a2c:	03 00                	add    eax,DWORD PTR [rax]
    1a2e:	00 00                	add    BYTE PTR [rax],al
    1a30:	00 00                	add    BYTE PTR [rax],al
    1a32:	0c 90                	or     al,0x90
    1a34:	19 00                	sbb    DWORD PTR [rax],eax
    1a36:	00 50 17             	add    BYTE PTR [rax+0x17],dl
    1a39:	00 00                	add    BYTE PTR [rax],al
    1a3b:	00 00                	add    BYTE PTR [rax],al
    1a3d:	00 00                	add    BYTE PTR [rax],al
    1a3f:	02 ab 00 00 00 8b    	add    ch,BYTE PTR [rbx-0x75000000]
    1a45:	32 cb                	xor    cl,bl
    1a47:	11 00                	adc    DWORD PTR [rax],eax
    1a49:	00 04 b1             	add    BYTE PTR [rcx+rsi*4],al
    1a4c:	19 00                	sbb    DWORD PTR [rax],eax
    1a4e:	00 c5                	add    ch,al
    1a50:	03 00                	add    eax,DWORD PTR [rax]
    1a52:	00 c3                	add    bl,al
    1a54:	03 00                	add    eax,DWORD PTR [rax]
    1a56:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
    1a59:	19 00                	sbb    DWORD PTR [rax],eax
    1a5b:	00 d2                	add    dl,dl
    1a5d:	03 00                	add    eax,DWORD PTR [rax]
    1a5f:	00 ce                	add    dh,cl
    1a61:	03 00                	add    eax,DWORD PTR [rax]
    1a63:	00 15 ab 00 00 00    	add    BYTE PTR [rip+0xab],dl        # 1b14 <_Z25_mm_crc32UnrollHashString8string_t+0x14>
    1a69:	0e                   	(bad)
    1a6a:	be 19 00 00 e4       	mov    esi,0xe4000019
    1a6f:	03 00                	add    eax,DWORD PTR [rax]
    1a71:	00 e2                	add    dl,ah
    1a73:	03 00                	add    eax,DWORD PTR [rax]
    1a75:	00 55 cc             	add    BYTE PTR [rbp-0x34],dl
    1a78:	19 00                	sbb    DWORD PTR [rax],eax
    1a7a:	00 50 17             	add    BYTE PTR [rax+0x17],dl
    1a7d:	00 00                	add    BYTE PTR [rax],al
    1a7f:	00 00                	add    BYTE PTR [rax],al
    1a81:	00 00                	add    BYTE PTR [rax],al
    1a83:	04 50                	add    al,0x50
    1a85:	17                   	(bad)
    1a86:	00 00                	add    BYTE PTR [rax],al
    1a88:	00 00                	add    BYTE PTR [rax],al
    1a8a:	00 00                	add    BYTE PTR [rax],al
    1a8c:	06                   	(bad)
    1a8d:	00 00                	add    BYTE PTR [rax],al
    1a8f:	00 00                	add    BYTE PTR [rax],al
    1a91:	00 00                	add    BYTE PTR [rax],al
    1a93:	00 05 30 02 2a 9c    	add    BYTE PTR [rip+0xffffffff9c2a0230],al        # ffffffff9c2a1cc9 <_end+0xffffffff9c29bcb1>
    1a99:	11 00                	adc    DWORD PTR [rax],eax
    1a9b:	00 04 ed 19 00 00 ee 	add    BYTE PTR [rbp*8-0x11ffffe7],al
    1aa2:	03 00                	add    eax,DWORD PTR [rax]
    1aa4:	00 ec                	add    ah,ch
    1aa6:	03 00                	add    eax,DWORD PTR [rax]
    1aa8:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    1aab:	19 00                	sbb    DWORD PTR [rax],eax
    1aad:	00 f9                	add    cl,bh
    1aaf:	03 00                	add    eax,DWORD PTR [rax]
    1ab1:	00 f7                	add    bh,dh
    1ab3:	03 00                	add    eax,DWORD PTR [rax]
    1ab5:	00 00                	add    BYTE PTR [rax],al
    1ab7:	2a 2a                	sub    ch,BYTE PTR [rdx]
    1ab9:	1a 00                	sbb    al,BYTE PTR [rax]
    1abb:	00 56 17             	add    BYTE PTR [rsi+0x17],dl
    1abe:	00 00                	add    BYTE PTR [rax],al
    1ac0:	00 00                	add    BYTE PTR [rax],al
    1ac2:	00 00                	add    BYTE PTR [rax],al
    1ac4:	02 b6 00 00 00 04    	add    dh,BYTE PTR [rsi+0x4000000]
    1aca:	4b 1a 00             	rex.WXB sbb al,BYTE PTR [r8]
    1acd:	00 03                	add    BYTE PTR [rbx],al
    1acf:	04 00                	add    al,0x0
    1ad1:	00 01                	add    BYTE PTR [rcx],al
    1ad3:	04 00                	add    al,0x0
    1ad5:	00 04 3e             	add    BYTE PTR [rsi+rdi*1],al
    1ad8:	1a 00                	sbb    al,BYTE PTR [rax]
    1ada:	00 0e                	add    BYTE PTR [rsi],cl
    1adc:	04 00                	add    al,0x0
    1ade:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
    1ae1:	00 00                	add    BYTE PTR [rax],al
    1ae3:	00 00                	add    BYTE PTR [rax],al
    1ae5:	00 0c fb             	add    BYTE PTR [rbx+rdi*8],cl
    1ae8:	19 00                	sbb    DWORD PTR [rax],eax
    1aea:	00 79 17             	add    BYTE PTR [rcx+0x17],bh
    1aed:	00 00                	add    BYTE PTR [rax],al
    1aef:	00 00                	add    BYTE PTR [rax],al
    1af1:	00 00                	add    BYTE PTR [rax],al
    1af3:	0d c1 00 00 00       	or     eax,0xc1
    1af8:	91                   	xchg   ecx,eax
    1af9:	1e                   	(bad)
    1afa:	fe                   	(bad)
    1afb:	11 00                	adc    DWORD PTR [rax],eax
    1afd:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
    1b00:	1a 00                	sbb    al,BYTE PTR [rax]
    1b02:	00 18                	add    BYTE PTR [rax],bl
    1b04:	04 00                	add    al,0x0
    1b06:	00 16                	add    BYTE PTR [rsi],dl
    1b08:	04 00                	add    al,0x0
    1b0a:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
    1b0d:	1a 00                	sbb    al,BYTE PTR [rax]
    1b0f:	00 22                	add    BYTE PTR [rdx],ah
    1b11:	04 00                	add    al,0x0
    1b13:	00 20                	add    BYTE PTR [rax],ah
    1b15:	04 00                	add    al,0x0
    1b17:	00 00                	add    BYTE PTR [rax],al
    1b19:	0c 90                	or     al,0x90
    1b1b:	19 00                	sbb    DWORD PTR [rax],eax
    1b1d:	00 79 17             	add    BYTE PTR [rcx+0x17],bh
    1b20:	00 00                	add    BYTE PTR [rax],al
    1b22:	00 00                	add    BYTE PTR [rax],al
    1b24:	00 00                	add    BYTE PTR [rax],al
    1b26:	02 cc                	add    cl,ah
    1b28:	00 00                	add    BYTE PTR [rax],al
    1b2a:	00 8c 32 71 12 00 00 	add    BYTE PTR [rdx+rsi*1+0x1271],cl
    1b31:	04 b1                	add    al,0xb1
    1b33:	19 00                	sbb    DWORD PTR [rax],eax
    1b35:	00 35 04 00 00 33    	add    BYTE PTR [rip+0x33000004],dh        # 33001b3f <_end+0x32ffbb27>
    1b3b:	04 00                	add    al,0x0
    1b3d:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
    1b40:	19 00                	sbb    DWORD PTR [rax],eax
    1b42:	00 40 04             	add    BYTE PTR [rax+0x4],al
    1b45:	00 00                	add    BYTE PTR [rax],al
    1b47:	3e 04 00             	ds add al,0x0
    1b4a:	00 15 cc 00 00 00    	add    BYTE PTR [rip+0xcc],dl        # 1c1c <_Z17adler32HashString8string_t+0x9c>
    1b50:	0e                   	(bad)
    1b51:	be 19 00 00 4b       	mov    esi,0x4b000019
    1b56:	04 00                	add    al,0x0
    1b58:	00 49 04             	add    BYTE PTR [rcx+0x4],cl
    1b5b:	00 00                	add    BYTE PTR [rax],al
    1b5d:	2a 2a                	sub    ch,BYTE PTR [rdx]
    1b5f:	1a 00                	sbb    al,BYTE PTR [rax]
    1b61:	00 79 17             	add    BYTE PTR [rcx+0x17],bh
    1b64:	00 00                	add    BYTE PTR [rax],al
    1b66:	00 00                	add    BYTE PTR [rax],al
    1b68:	00 00                	add    BYTE PTR [rax],al
    1b6a:	05 cc 00 00 00       	add    eax,0xcc
    1b6f:	04 4b                	add    al,0x4b
    1b71:	1a 00                	sbb    al,BYTE PTR [rax]
    1b73:	00 55 04             	add    BYTE PTR [rbp+0x4],dl
    1b76:	00 00                	add    BYTE PTR [rax],al
    1b78:	53                   	push   rbx
    1b79:	04 00                	add    al,0x0
    1b7b:	00 04 3e             	add    BYTE PTR [rsi+rdi*1],al
    1b7e:	1a 00                	sbb    al,BYTE PTR [rax]
    1b80:	00 60 04             	add    BYTE PTR [rax+0x4],ah
    1b83:	00 00                	add    BYTE PTR [rax],al
    1b85:	5e                   	pop    rsi
    1b86:	04 00                	add    al,0x0
    1b88:	00 00                	add    BYTE PTR [rax],al
    1b8a:	00 00                	add    BYTE PTR [rax],al
    1b8c:	0c fb                	or     al,0xfb
    1b8e:	19 00                	sbb    DWORD PTR [rax],eax
    1b90:	00 7f 17             	add    BYTE PTR [rdi+0x17],bh
    1b93:	00 00                	add    BYTE PTR [rax],al
    1b95:	00 00                	add    BYTE PTR [rax],al
    1b97:	00 00                	add    BYTE PTR [rax],al
    1b99:	02 d7                	add    dl,bh
    1b9b:	00 00                	add    BYTE PTR [rax],al
    1b9d:	00 92 1e a4 12 00    	add    BYTE PTR [rdx+0x12a41e],dl
    1ba3:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
    1ba6:	1a 00                	sbb    al,BYTE PTR [rax]
    1ba8:	00 6a 04             	add    BYTE PTR [rdx+0x4],ch
    1bab:	00 00                	add    BYTE PTR [rax],al
    1bad:	68 04 00 00 04       	push   0x4000004
    1bb2:	0f 1a 00             	bndldx bnd0,[rax]
    1bb5:	00 74 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dh
    1bb9:	00 72 04             	add    BYTE PTR [rdx+0x4],dh
    1bbc:	00 00                	add    BYTE PTR [rax],al
    1bbe:	00 2b                	add    BYTE PTR [rbx],ch
    1bc0:	fb                   	sti
    1bc1:	19 00                	sbb    DWORD PTR [rax],eax
    1bc3:	00 8a 17 00 00 00    	add    BYTE PTR [rdx+0x17],cl
    1bc9:	00 00                	add    BYTE PTR [rax],al
    1bcb:	00 02                	add    BYTE PTR [rdx],al
    1bcd:	8a 17                	mov    dl,BYTE PTR [rdi]
    1bcf:	00 00                	add    BYTE PTR [rax],al
    1bd1:	00 00                	add    BYTE PTR [rax],al
    1bd3:	00 00                	add    BYTE PTR [rax],al
    1bd5:	06                   	(bad)
    1bd6:	00 00                	add    BYTE PTR [rax],al
    1bd8:	00 00                	add    BYTE PTR [rax],al
    1bda:	00 00                	add    BYTE PTR [rax],al
    1bdc:	00 93 1e e3 12 00    	add    BYTE PTR [rbx+0x12e31e],dl
    1be2:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
    1be5:	1a 00                	sbb    al,BYTE PTR [rax]
    1be7:	00 87 04 00 00 85    	add    BYTE PTR [rdi-0x7afffffc],al
    1bed:	04 00                	add    al,0x0
    1bef:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
    1bf2:	1a 00                	sbb    al,BYTE PTR [rax]
    1bf4:	00 91 04 00 00 8f    	add    BYTE PTR [rcx-0x70fffffc],dl
    1bfa:	04 00                	add    al,0x0
    1bfc:	00 00                	add    BYTE PTR [rax],al
    1bfe:	13 b5 17 00 00 00    	adc    esi,DWORD PTR [rbp+0x17]
    1c04:	00 00                	add    BYTE PTR [rax],al
    1c06:	00 01                	add    BYTE PTR [rcx],al
    1c08:	30 0f                	xor    BYTE PTR [rdi],cl
    1c0a:	ba 17 00 00 00       	mov    edx,0x17
    1c0f:	00 00                	add    BYTE PTR [rax],al
    1c11:	00 34 0a             	add    BYTE PTR [rdx+rcx*1],dh
    1c14:	00 00                	add    BYTE PTR [rax],al
    1c16:	13 e1                	adc    esp,ecx
    1c18:	17                   	(bad)
    1c19:	00 00                	add    BYTE PTR [rax],al
    1c1b:	00 00                	add    BYTE PTR [rax],al
    1c1d:	00 00                	add    BYTE PTR [rax],al
    1c1f:	01 30                	add    DWORD PTR [rax],esi
    1c21:	09 e6                	or     esi,esp
    1c23:	17                   	(bad)
    1c24:	00 00                	add    BYTE PTR [rax],al
    1c26:	00 00                	add    BYTE PTR [rax],al
    1c28:	00 00                	add    BYTE PTR [rax],al
    1c2a:	04 0b                	add    al,0xb
    1c2c:	00 00                	add    BYTE PTR [rax],al
    1c2e:	03 01                	add    eax,DWORD PTR [rcx]
    1c30:	55                   	push   rbp
    1c31:	09 03                	or     DWORD PTR [rbx],eax
    1c33:	4c                   	rex.WR
    1c34:	40 00 00             	rex add BYTE PTR [rax],al
    1c37:	00 00                	add    BYTE PTR [rax],al
    1c39:	00 00                	add    BYTE PTR [rax],al
    1c3b:	03 01                	add    eax,DWORD PTR [rcx]
    1c3d:	54                   	push   rsp
    1c3e:	09 03                	or     DWORD PTR [rbx],eax
    1c40:	90                   	nop
    1c41:	42 00 00             	rex.X add BYTE PTR [rax],al
    1c44:	00 00                	add    BYTE PTR [rax],al
    1c46:	00 00                	add    BYTE PTR [rax],al
    1c48:	03 01                	add    eax,DWORD PTR [rcx]
    1c4a:	51                   	push   rcx
    1c4b:	02 08                	add    cl,BYTE PTR [rax]
    1c4d:	6d                   	ins    DWORD PTR es:[rdi],dx
    1c4e:	03 01                	add    eax,DWORD PTR [rcx]
    1c50:	52                   	push   rdx
    1c51:	09 03                	or     DWORD PTR [rbx],eax
    1c53:	10 43 00             	adc    BYTE PTR [rbx+0x0],al
    1c56:	00 00                	add    BYTE PTR [rax],al
    1c58:	00 00                	add    BYTE PTR [rax],al
    1c5a:	00 00                	add    BYTE PTR [rax],al
    1c5c:	00 05 01 02 31 05    	add    BYTE PTR [rip+0x5310201],al        # 5311e63 <_end+0x530be4b>
    1c62:	00 00                	add    BYTE PTR [rax],al
    1c64:	35 68 06 00 00       	xor    eax,0x668
    1c69:	5f                   	pop    rdi
    1c6a:	c7 07 00 00 79 08    	mov    DWORD PTR [rdi],0x8790000
    1c70:	00 00                	add    BYTE PTR [rax],al
    1c72:	40 16                	rex (bad)
    1c74:	00 00                	add    BYTE PTR [rax],al
    1c76:	00 00                	add    BYTE PTR [rax],al
    1c78:	00 00                	add    BYTE PTR [rax],al
    1c7a:	db 00                	fild   DWORD PTR [rax]
    1c7c:	00 00                	add    BYTE PTR [rax],al
    1c7e:	00 00                	add    BYTE PTR [rax],al
    1c80:	00 00                	add    BYTE PTR [rax],al
    1c82:	01 9c 12 14 00 00 12 	add    DWORD PTR [rdx+rdx*1+0x12000014],ebx
    1c89:	ef                   	out    dx,eax
    1c8a:	05 00 00 5f 25       	add    eax,0x255f0000
    1c8f:	6b 0d 00 00 b0 04 00 	imul   ecx,DWORD PTR [rip+0x4b00000],0x0        # 4b01c96 <_end+0x4afbc7e>
    1c96:	00 a2 04 00 00 36    	add    BYTE PTR [rdx+0x36000004],ah
    1c9c:	42 15 00 00 5f f5    	rex.X adc eax,0xf55f0000
    1ca2:	08 00                	or     BYTE PTR [rax],al
    1ca4:	00 02                	add    BYTE PTR [rdx],al
    1ca6:	91                   	xchg   ecx,eax
    1ca7:	00 18                	add    BYTE PTR [rax],bl
    1ca9:	d3 03                	rol    DWORD PTR [rbx],cl
    1cab:	00 00                	add    BYTE PTR [rax],al
    1cad:	22 14 00             	and    dl,BYTE PTR [rax+rax*1]
    1cb0:	00 09                	add    BYTE PTR [rcx],cl
    1cb2:	03 e0                	add    esp,eax
    1cb4:	42 00 00             	rex.X add BYTE PTR [rax],al
    1cb7:	00 00                	add    BYTE PTR [rax],al
    1cb9:	00 00                	add    BYTE PTR [rax],al
    1cbb:	19 69 6e             	sbb    DWORD PTR [rcx+0x6e],ebp
    1cbe:	78 00                	js     1cc0 <_Z17adler32HashString8string_t+0x140>
    1cc0:	63 0e                	movsxd ecx,DWORD PTR [rsi]
    1cc2:	79 08                	jns    1ccc <_Z17adler32HashString8string_t+0x14c>
    1cc4:	00 00                	add    BYTE PTR [rax],al
    1cc6:	f1                   	int1
    1cc7:	04 00                	add    al,0x0
    1cc9:	00 eb                	add    bl,ch
    1ccb:	04 00                	add    al,0x0
    1ccd:	00 13                	add    BYTE PTR [rbx],dl
    1ccf:	77 16                	ja     1ce7 <_Z17adler32HashString8string_t+0x167>
    1cd1:	00 00                	add    BYTE PTR [rax],al
    1cd3:	00 00                	add    BYTE PTR [rax],al
    1cd5:	00 00                	add    BYTE PTR [rax],al
    1cd7:	01 30                	add    DWORD PTR [rax],esi
    1cd9:	13 b5 16 00 00 00    	adc    esi,DWORD PTR [rbp+0x16]
    1cdf:	00 00                	add    BYTE PTR [rax],al
    1ce1:	00 01                	add    BYTE PTR [rcx],al
    1ce3:	30 0f                	xor    BYTE PTR [rdi],cl
    1ce5:	ba 16 00 00 00       	mov    edx,0x16
    1cea:	00 00                	add    BYTE PTR [rax],al
    1cec:	00 53 0a             	add    BYTE PTR [rbx+0xa],dl
    1cef:	00 00                	add    BYTE PTR [rax],al
    1cf1:	09 1b                	or     DWORD PTR [rbx],ebx
    1cf3:	17                   	(bad)
    1cf4:	00 00                	add    BYTE PTR [rax],al
    1cf6:	00 00                	add    BYTE PTR [rax],al
    1cf8:	00 00                	add    BYTE PTR [rax],al
    1cfa:	04 0b                	add    al,0xb
    1cfc:	00 00                	add    BYTE PTR [rax],al
    1cfe:	03 01                	add    eax,DWORD PTR [rcx]
    1d00:	55                   	push   rbp
    1d01:	09 03                	or     DWORD PTR [rbx],eax
    1d03:	4c                   	rex.WR
    1d04:	40 00 00             	rex add BYTE PTR [rax],al
    1d07:	00 00                	add    BYTE PTR [rax],al
    1d09:	00 00                	add    BYTE PTR [rax],al
    1d0b:	03 01                	add    eax,DWORD PTR [rcx]
    1d0d:	54                   	push   rsp
    1d0e:	09 03                	or     DWORD PTR [rbx],eax
    1d10:	90                   	nop
    1d11:	42 00 00             	rex.X add BYTE PTR [rax],al
    1d14:	00 00                	add    BYTE PTR [rax],al
    1d16:	00 00                	add    BYTE PTR [rax],al
    1d18:	03 01                	add    eax,DWORD PTR [rcx]
    1d1a:	51                   	push   rcx
    1d1b:	02 08                	add    cl,BYTE PTR [rax]
    1d1d:	60                   	(bad)
    1d1e:	03 01                	add    eax,DWORD PTR [rcx]
    1d20:	52                   	push   rdx
    1d21:	09 03                	or     DWORD PTR [rbx],eax
    1d23:	e0 42                	loopne 1d67 <_Z17adler32HashString8string_t+0x1e7>
	...
    1d2d:	1b 06                	sbb    eax,DWORD PTR [rsi]
    1d2f:	01 00                	add    DWORD PTR [rax],eax
    1d31:	00 22                	add    BYTE PTR [rdx],ah
    1d33:	14 00                	adc    al,0x0
    1d35:	00 1c 3a             	add    BYTE PTR [rdx+rdi*1],bl
    1d38:	00 00                	add    BYTE PTR [rax],al
    1d3a:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
    1d3d:	10 12                	adc    BYTE PTR [rdx],dl
    1d3f:	14 00                	adc    al,0x0
    1d41:	00 35 f9 03 00 00    	add    BYTE PTR [rip+0x3f9],dh        # 2140 <_Z11popListElemP4List8string_t+0x60>
    1d47:	51                   	push   rcx
    1d48:	8c 07                	mov    WORD PTR [rdi],es
    1d4a:	00 00                	add    BYTE PTR [rax],al
    1d4c:	79 08                	jns    1d56 <_Z17adler32HashString8string_t+0x1d6>
    1d4e:	00 00                	add    BYTE PTR [rax],al
    1d50:	70 15                	jo     1d67 <_Z17adler32HashString8string_t+0x1e7>
    1d52:	00 00                	add    BYTE PTR [rax],al
    1d54:	00 00                	add    BYTE PTR [rax],al
    1d56:	00 00                	add    BYTE PTR [rax],al
    1d58:	cd 00                	int    0x0
    1d5a:	00 00                	add    BYTE PTR [rax],al
    1d5c:	00 00                	add    BYTE PTR [rax],al
    1d5e:	00 00                	add    BYTE PTR [rax],al
    1d60:	01 9c 03 15 00 00 12 	add    DWORD PTR [rbx+rax*1+0x12000015],ebx
    1d67:	ef                   	out    dx,eax
    1d68:	05 00 00 51 25       	add    eax,0x25510000
    1d6d:	6b 0d 00 00 11 05 00 	imul   ecx,DWORD PTR [rip+0x5110000],0x0        # 5111d74 <_end+0x510bd5c>
    1d74:	00 07                	add    BYTE PTR [rdi],al
    1d76:	05 00 00 36 42       	add    eax,0x42360000
    1d7b:	15 00 00 51 f5       	adc    eax,0xf5510000
    1d80:	08 00                	or     BYTE PTR [rax],al
    1d82:	00 02                	add    BYTE PTR [rdx],al
    1d84:	91                   	xchg   ecx,eax
    1d85:	00 18                	add    BYTE PTR [rax],bl
    1d87:	d3 03                	rol    DWORD PTR [rbx],cl
    1d89:	00 00                	add    BYTE PTR [rax],al
    1d8b:	22 14 00             	and    dl,BYTE PTR [rax+rax*1]
    1d8e:	00 09                	add    BYTE PTR [rcx],cl
    1d90:	03 b0 42 00 00 00    	add    esi,DWORD PTR [rax+0x42]
    1d96:	00 00                	add    BYTE PTR [rax],al
    1d98:	00 19                	add    BYTE PTR [rcx],bl
    1d9a:	69 6e 78 00 55 0e 79 	imul   ebp,DWORD PTR [rsi+0x78],0x790e5500
    1da1:	08 00                	or     BYTE PTR [rax],al
    1da3:	00 3f                	add    BYTE PTR [rdi],bh
    1da5:	05 00 00 3b 05       	add    eax,0x53b0000
    1daa:	00 00                	add    BYTE PTR [rax],al
    1dac:	0a 2b                	or     ch,BYTE PTR [rbx]
    1dae:	06                   	(bad)
    1daf:	00 00                	add    BYTE PTR [rax],al
    1db1:	57                   	push   rdi
    1db2:	0e                   	(bad)
    1db3:	79 08                	jns    1dbd <_Z13elfHashString8string_t+0x2d>
    1db5:	00 00                	add    BYTE PTR [rax],al
    1db7:	50                   	push   rax
    1db8:	05 00 00 4e 05       	add    eax,0x54e0000
    1dbd:	00 00                	add    BYTE PTR [rax],al
    1dbf:	13 a7 15 00 00 00    	adc    esp,DWORD PTR [rdi+0x15]
    1dc5:	00 00                	add    BYTE PTR [rax],al
    1dc7:	00 01                	add    BYTE PTR [rcx],al
    1dc9:	30 13                	xor    BYTE PTR [rbx],dl
    1dcb:	e5 15                	in     eax,0x15
    1dcd:	00 00                	add    BYTE PTR [rax],al
    1dcf:	00 00                	add    BYTE PTR [rax],al
    1dd1:	00 00                	add    BYTE PTR [rax],al
    1dd3:	01 30                	add    DWORD PTR [rax],esi
    1dd5:	0f ea 15 00 00 00 00 	pminsw mm2,QWORD PTR [rip+0x0]        # 1ddc <_Z13elfHashString8string_t+0x4c>
    1ddc:	00 00                	add    BYTE PTR [rax],al
    1dde:	72 0a                	jb     1dea <_Z13elfHashString8string_t+0x5a>
    1de0:	00 00                	add    BYTE PTR [rax],al
    1de2:	09 3d 16 00 00 00    	or     DWORD PTR [rip+0x16],edi        # 1dfe <_Z13elfHashString8string_t+0x6e>
    1de8:	00 00                	add    BYTE PTR [rax],al
    1dea:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
    1ded:	00 00                	add    BYTE PTR [rax],al
    1def:	03 01                	add    eax,DWORD PTR [rcx]
    1df1:	55                   	push   rbp
    1df2:	09 03                	or     DWORD PTR [rbx],eax
    1df4:	4c                   	rex.WR
    1df5:	40 00 00             	rex add BYTE PTR [rax],al
    1df8:	00 00                	add    BYTE PTR [rax],al
    1dfa:	00 00                	add    BYTE PTR [rax],al
    1dfc:	03 01                	add    eax,DWORD PTR [rcx]
    1dfe:	54                   	push   rsp
    1dff:	09 03                	or     DWORD PTR [rbx],eax
    1e01:	90                   	nop
    1e02:	42 00 00             	rex.X add BYTE PTR [rax],al
    1e05:	00 00                	add    BYTE PTR [rax],al
    1e07:	00 00                	add    BYTE PTR [rax],al
    1e09:	03 01                	add    eax,DWORD PTR [rcx]
    1e0b:	51                   	push   rcx
    1e0c:	02 08                	add    cl,BYTE PTR [rax]
    1e0e:	52                   	push   rdx
    1e0f:	03 01                	add    eax,DWORD PTR [rcx]
    1e11:	52                   	push   rdx
    1e12:	09 03                	or     DWORD PTR [rbx],eax
    1e14:	b0 42                	mov    al,0x42
	...
    1e1e:	37                   	(bad)
    1e1f:	44 03 00             	add    r8d,DWORD PTR [rax]
    1e22:	00 01                	add    BYTE PTR [rcx],al
    1e24:	42 09 8b 06 00 00 06 	rex.X or DWORD PTR [rbx+0x6000006],ecx
    1e2b:	0a 00                	or     al,BYTE PTR [rax]
    1e2d:	00 01                	add    BYTE PTR [rcx],al
    1e2f:	5b                   	pop    rbx
    1e30:	15 00 00 0d 3d       	adc    eax,0x3d0d0000
    1e35:	04 00                	add    al,0x0
    1e37:	00 01                	add    BYTE PTR [rcx],al
    1e39:	42 1c 01             	rex.X sbb al,0x1
    1e3c:	09 00                	or     DWORD PTR [rax],eax
    1e3e:	00 0d 28 08 00 00    	add    BYTE PTR [rip+0x828],cl        # 266c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x29c>
    1e44:	01 42 30             	add    DWORD PTR [rdx+0x30],eax
    1e47:	79 08                	jns    1e51 <_Z13elfHashString8string_t+0xc1>
    1e49:	00 00                	add    BYTE PTR [rax],al
    1e4b:	29 ef                	sub    edi,ebp
    1e4d:	05 00 00 43 0d       	add    eax,0xd430000
    1e52:	06                   	(bad)
    1e53:	0a 00                	or     al,BYTE PTR [rax]
    1e55:	00 34 28             	add    BYTE PTR [rax+rbp*1],dh
    1e58:	69 00 4a 13 79 08    	imul   eax,DWORD PTR [rax],0x879134a
    1e5e:	00 00                	add    BYTE PTR [rax],al
    1e60:	09 2c 15 00 00 00 00 	or     DWORD PTR [rdx*1+0x0],ebp
    1e67:	00 00                	add    BYTE PTR [rax],al
    1e69:	91                   	xchg   ecx,eax
    1e6a:	0a 00                	or     al,BYTE PTR [rax]
    1e6c:	00 03                	add    BYTE PTR [rbx],al
    1e6e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    1e71:	77 00                	ja     1e73 <_Z13elfHashString8string_t+0xe3>
    1e73:	00 00                	add    BYTE PTR [rax],al
    1e75:	00 21                	add    BYTE PTR [rcx],ah
    1e77:	ce                   	(bad)
    1e78:	06                   	(bad)
    1e79:	00 00                	add    BYTE PTR [rax],al
    1e7b:	14 0b                	adc    al,0xb
    1e7d:	70 03                	jo     1e82 <_Z13elfHashString8string_t+0xf2>
    1e7f:	00 00                	add    BYTE PTR [rax],al
    1e81:	64 19 00             	sbb    DWORD PTR fs:[rax],eax
    1e84:	00 00                	add    BYTE PTR [rax],al
    1e86:	13 00                	adc    eax,DWORD PTR [rax]
    1e88:	00 00                	add    BYTE PTR [rax],al
    1e8a:	00 00                	add    BYTE PTR [rax],al
    1e8c:	00 bd 01 00 00 00    	add    BYTE PTR [rbp+0x1],bh
    1e92:	00 00                	add    BYTE PTR [rax],al
    1e94:	00 01                	add    BYTE PTR [rcx],al
    1e96:	9c                   	pushf
    1e97:	64 19 00             	sbb    DWORD PTR fs:[rax],eax
    1e9a:	00 12                	add    BYTE PTR [rdx],dl
    1e9c:	90                   	nop
    1e9d:	03 00                	add    eax,DWORD PTR [rax]
    1e9f:	00 14 22             	add    BYTE PTR [rdx+riz*1],dl
    1ea2:	41 01 00             	add    DWORD PTR [r8],eax
    1ea5:	00 6a 05             	add    BYTE PTR [rdx+0x5],ch
    1ea8:	00 00                	add    BYTE PTR [rax],al
    1eaa:	58                   	pop    rax
    1eab:	05 00 00 12 13       	add    eax,0x13120000
    1eb0:	05 00 00 14 31       	add    eax,0x31140000
    1eb5:	79 08                	jns    1ebf <_Z13searchElementP4List8string_t.part.0+0x1f>
    1eb7:	00 00                	add    BYTE PTR [rax],al
    1eb9:	ba 05 00 00 aa       	mov    edx,0xaa000005
    1ebe:	05 00 00 18 d3       	add    eax,0xd3180000
    1ec3:	03 00                	add    eax,DWORD PTR [rax]
    1ec5:	00 de                	add    dh,bl
    1ec7:	0d 00 00 09 03       	or     eax,0x3090000
    1ecc:	60                   	(bad)
    1ecd:	42 00 00             	rex.X add BYTE PTR [rax],al
    1ed0:	00 00                	add    BYTE PTR [rax],al
    1ed2:	00 00                	add    BYTE PTR [rax],al
    1ed4:	0a 61 07             	or     ah,BYTE PTR [rcx+0x7]
    1ed7:	00 00                	add    BYTE PTR [rax],al
    1ed9:	17                   	(bad)
    1eda:	0f 64 19             	pcmpgtb mm3,QWORD PTR [rcx]
    1edd:	00 00                	add    BYTE PTR [rax],al
    1edf:	06                   	(bad)
    1ee0:	06                   	(bad)
    1ee1:	00 00                	add    BYTE PTR [rax],al
    1ee3:	fe 05 00 00 0a 88    	inc    BYTE PTR [rip+0xffffffff880a0000]        # ffffffff880a1ee9 <_end+0xffffffff8809bed1>
    1ee9:	03 00                	add    eax,DWORD PTR [rax]
    1eeb:	00 18                	add    BYTE PTR [rax],bl
    1eed:	0b 41 01             	or     eax,DWORD PTR [rcx+0x1]
    1ef0:	00 00                	add    BYTE PTR [rax],al
    1ef2:	25 06 00 00 1f       	and    eax,0x1f000006
    1ef7:	06                   	(bad)
    1ef8:	00 00                	add    BYTE PTR [rax],al
    1efa:	0a 50 03             	or     dl,BYTE PTR [rax+0x3]
    1efd:	00 00                	add    BYTE PTR [rax],al
    1eff:	19 0b                	sbb    DWORD PTR [rbx],ecx
    1f01:	41 01 00             	add    DWORD PTR [r8],eax
    1f04:	00 43 06             	add    BYTE PTR [rbx+0x6],al
    1f07:	00 00                	add    BYTE PTR [rax],al
    1f09:	39 06                	cmp    DWORD PTR [rsi],eax
    1f0b:	00 00                	add    BYTE PTR [rax],al
    1f0d:	0a 45 06             	or     al,BYTE PTR [rbp+0x6]
    1f10:	00 00                	add    BYTE PTR [rax],al
    1f12:	1a 0e                	sbb    cl,BYTE PTR [rsi]
    1f14:	79 08                	jns    1f1e <_Z8listCtorv+0x4e>
    1f16:	00 00                	add    BYTE PTR [rax],al
    1f18:	73 06                	jae    1f20 <_Z8listCtorv+0x50>
    1f1a:	00 00                	add    BYTE PTR [rax],al
    1f1c:	67 06                	addr32 (bad)
    1f1e:	00 00                	add    BYTE PTR [rax],al
    1f20:	56                   	push   rsi
    1f21:	5a                   	pop    rdx
    1f22:	13 00                	adc    eax,DWORD PTR [rax]
    1f24:	00 00                	add    BYTE PTR [rax],al
    1f26:	00 00                	add    BYTE PTR [rax],al
    1f28:	00 0b                	add    BYTE PTR [rbx],cl
    1f2a:	01 00                	add    DWORD PTR [rax],eax
    1f2c:	00 00                	add    BYTE PTR [rax],al
    1f2e:	00 00                	add    BYTE PTR [rax],al
    1f30:	00 8c 18 00 00 19 69 	add    BYTE PTR [rax+rbx*1+0x69190000],cl
    1f37:	00 1f                	add    BYTE PTR [rdi],bl
    1f39:	13 79 08             	adc    edi,DWORD PTR [rcx+0x8]
    1f3c:	00 00                	add    BYTE PTR [rax],al
    1f3e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1f3f:	06                   	(bad)
    1f40:	00 00                	add    BYTE PTR [rax],al
    1f42:	a1 06 00 00 0c c1 1a 	movabs eax,ds:0x1ac10c000006
    1f49:	00 00 
    1f4b:	88 13                	mov    BYTE PTR [rbx],dl
    1f4d:	00 00                	add    BYTE PTR [rax],al
    1f4f:	00 00                	add    BYTE PTR [rax],al
    1f51:	00 00                	add    BYTE PTR [rax],al
    1f53:	03 36                	add    esi,DWORD PTR [rsi]
    1f55:	00 00                	add    BYTE PTR [rax],al
    1f57:	00 22                	add    BYTE PTR [rdx],ah
    1f59:	17                   	(bad)
    1f5a:	77 16                	ja     1f72 <_Z12pushListElemP4List8string_t+0x32>
    1f5c:	00 00                	add    BYTE PTR [rax],al
    1f5e:	04 e1                	add    al,0xe1
    1f60:	1a 00                	sbb    al,BYTE PTR [rax]
    1f62:	00 d9                	add    cl,bl
    1f64:	06                   	(bad)
    1f65:	00 00                	add    BYTE PTR [rax],al
    1f67:	d7                   	xlat   BYTE PTR ds:[rbx]
    1f68:	06                   	(bad)
    1f69:	00 00                	add    BYTE PTR [rax],al
    1f6b:	04 d6                	add    al,0xd6
    1f6d:	1a 00                	sbb    al,BYTE PTR [rax]
    1f6f:	00 e6                	add    dh,ah
    1f71:	06                   	(bad)
    1f72:	00 00                	add    BYTE PTR [rax],al
    1f74:	e2 06                	loop   1f7c <_Z12pushListElemP4List8string_t+0x3c>
    1f76:	00 00                	add    BYTE PTR [rax],al
    1f78:	09 8d 13 00 00 00    	or     DWORD PTR [rbp+0x13],ecx
    1f7e:	00 00                	add    BYTE PTR [rax],al
    1f80:	00 72 1c             	add    BYTE PTR [rdx+0x1c],dh
    1f83:	00 00                	add    BYTE PTR [rax],al
    1f85:	03 01                	add    eax,DWORD PTR [rcx]
    1f87:	55                   	push   rbp
    1f88:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    1f8c:	01 54 01 3a          	add    DWORD PTR [rcx+rax*1+0x3a],edx
    1f90:	00 00                	add    BYTE PTR [rax],al
    1f92:	0c 59                	or     al,0x59
    1f94:	1a 00                	sbb    al,BYTE PTR [rax]
    1f96:	00 bc 13 00 00 00 00 	add    BYTE PTR [rbx+rdx*1+0x0],bh
    1f9d:	00 00                	add    BYTE PTR [rax],al
    1f9f:	00 40 00             	add    BYTE PTR [rax+0x0],al
    1fa2:	00 00                	add    BYTE PTR [rax],al
    1fa4:	27                   	(bad)
    1fa5:	10 00                	adc    BYTE PTR [rax],al
    1fa7:	17                   	(bad)
    1fa8:	00 00                	add    BYTE PTR [rax],al
    1faa:	04 80                	add    al,0x80
    1fac:	1a 00                	sbb    al,BYTE PTR [rax]
    1fae:	00 f9                	add    cl,bh
    1fb0:	06                   	(bad)
    1fb1:	00 00                	add    BYTE PTR [rax],al
    1fb3:	f5                   	cmc
    1fb4:	06                   	(bad)
    1fb5:	00 00                	add    BYTE PTR [rax],al
    1fb7:	04 74                	add    al,0x74
    1fb9:	1a 00                	sbb    al,BYTE PTR [rax]
    1fbb:	00 0b                	add    BYTE PTR [rbx],cl
    1fbd:	07                   	(bad)
    1fbe:	00 00                	add    BYTE PTR [rax],al
    1fc0:	09 07                	or     DWORD PTR [rdi],eax
    1fc2:	00 00                	add    BYTE PTR [rax],al
    1fc4:	04 68                	add    al,0x68
    1fc6:	1a 00                	sbb    al,BYTE PTR [rax]
    1fc8:	00 15 07 00 00 13    	add    BYTE PTR [rip+0x13000007],dl        # 13001fd5 <_end+0x12ffbfbd>
    1fce:	07                   	(bad)
    1fcf:	00 00                	add    BYTE PTR [rax],al
    1fd1:	09 cc                	or     esp,ecx
    1fd3:	13 00                	adc    eax,DWORD PTR [rax]
    1fd5:	00 00                	add    BYTE PTR [rax],al
    1fd7:	00 00                	add    BYTE PTR [rax],al
    1fd9:	00 7b 1c             	add    BYTE PTR [rbx+0x1c],bh
    1fdc:	00 00                	add    BYTE PTR [rax],al
    1fde:	03 01                	add    eax,DWORD PTR [rcx]
    1fe0:	55                   	push   rbp
    1fe1:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    1fe4:	03 01                	add    eax,DWORD PTR [rcx]
    1fe6:	51                   	push   rcx
    1fe7:	03 77 30             	add    esi,DWORD PTR [rdi+0x30]
    1fea:	06                   	(bad)
    1feb:	03 01                	add    eax,DWORD PTR [rcx]
    1fed:	52                   	push   rdx
    1fee:	2a 73 00             	sub    dh,BYTE PTR [rbx+0x0]
    1ff1:	77 28                	ja     201b <_Z12pushListElemP4List8string_t+0xdb>
    1ff3:	06                   	(bad)
    1ff4:	73 00                	jae    1ff6 <_Z12pushListElemP4List8string_t+0xb6>
    1ff6:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1ffc:	80 80 80 80 01 77 28 	add    BYTE PTR [rax+0x77018080],0x28
    2003:	06                   	(bad)
    2004:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    200a:	80 80 80 80 01 2a 28 	add    BYTE PTR [rax+0x2a018080],0x28
    2011:	01 00                	add    DWORD PTR [rax],eax
    2013:	16                   	(bad)
    2014:	13 77 28             	adc    esi,DWORD PTR [rdi+0x28]
    2017:	06                   	(bad)
    2018:	1c 00                	sbb    al,0x0
    201a:	00 0c 8d 1a 00 00 df 	add    BYTE PTR [rcx*4-0x20ffffe6],cl
    2021:	13 00                	adc    eax,DWORD PTR [rax]
    2023:	00 00                	add    BYTE PTR [rax],al
    2025:	00 00                	add    BYTE PTR [rax],al
    2027:	00 00                	add    BYTE PTR [rax],al
    2029:	55                   	push   rbp
    202a:	00 00                	add    BYTE PTR [rax],al
    202c:	00 28                	add    BYTE PTR [rax],ch
    202e:	0f ab 17             	bts    DWORD PTR [rdi],edx
    2031:	00 00                	add    BYTE PTR [rax],al
    2033:	04 b4                	add    al,0xb4
    2035:	1a 00                	sbb    al,BYTE PTR [rax]
    2037:	00 23                	add    BYTE PTR [rbx],ah
    2039:	07                   	(bad)
    203a:	00 00                	add    BYTE PTR [rax],al
    203c:	1d 07 00 00 04       	sbb    eax,0x4000007
    2041:	a8 1a                	test   al,0x1a
    2043:	00 00                	add    BYTE PTR [rax],al
    2045:	51                   	push   rcx
    2046:	07                   	(bad)
    2047:	00 00                	add    BYTE PTR [rax],al
    2049:	4f 07                	rex.WRXB (bad)
    204b:	00 00                	add    BYTE PTR [rax],al
    204d:	04 9c                	add    al,0x9c
    204f:	1a 00                	sbb    al,BYTE PTR [rax]
    2051:	00 60 07             	add    BYTE PTR [rax+0x7],ah
    2054:	00 00                	add    BYTE PTR [rax],al
    2056:	5a                   	pop    rdx
    2057:	07                   	(bad)
    2058:	00 00                	add    BYTE PTR [rax],al
    205a:	09 fe                	or     esi,edi
    205c:	13 00                	adc    eax,DWORD PTR [rax]
    205e:	00 00                	add    BYTE PTR [rax],al
    2060:	00 00                	add    BYTE PTR [rax],al
    2062:	00 84 1c 00 00 03 01 	add    BYTE PTR [rsp+rbx*1+0x1030000],al
    2069:	55                   	push   rbp
    206a:	0b 77 30             	or     esi,DWORD PTR [rdi+0x30]
    206d:	06                   	(bad)
    206e:	77 38                	ja     20a8 <_Z12pushListElemP4List8string_t+0x168>
    2070:	06                   	(bad)
    2071:	22 77 28             	and    dh,BYTE PTR [rdi+0x28]
    2074:	06                   	(bad)
    2075:	22 03                	and    al,BYTE PTR [rbx]
    2077:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
    207b:	03 01                	add    eax,DWORD PTR [rcx]
    207d:	51                   	push   rcx
    207e:	0b 08                	or     ecx,DWORD PTR [rax]
    2080:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
    2083:	1c 0c                	sbb    al,0xc
    2085:	ff                   	(bad)
    2086:	ff                   	(bad)
    2087:	ff                   	(bad)
    2088:	ff 1a                	call   FWORD PTR [rdx]
    208a:	03 01                	add    eax,DWORD PTR [rcx]
    208c:	52                   	push   rdx
    208d:	36 73 00             	ss jae 2090 <_Z12pushListElemP4List8string_t+0x150>
    2090:	77 30                	ja     20c2 <_Z12pushListElemP4List8string_t+0x182>
    2092:	06                   	(bad)
    2093:	77 28                	ja     20bd <_Z12pushListElemP4List8string_t+0x17d>
    2095:	06                   	(bad)
    2096:	22 73 00             	and    dh,BYTE PTR [rbx+0x0]
    2099:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    209f:	80 80 80 80 01 77 30 	add    BYTE PTR [rax+0x77018080],0x30
    20a6:	06                   	(bad)
    20a7:	77 28                	ja     20d1 <_Z12pushListElemP4List8string_t+0x191>
    20a9:	06                   	(bad)
    20aa:	22 23                	and    ah,BYTE PTR [rbx]
    20ac:	80 80 80 80 80 80 80 	add    BYTE PTR [rax-0x7f7f7f80],0x80
    20b3:	80 80 01 2a 28 01 00 	add    BYTE PTR [rax+0x1282a01],0x0
    20ba:	16                   	(bad)
    20bb:	13 77 30             	adc    esi,DWORD PTR [rdi+0x30]
    20be:	06                   	(bad)
    20bf:	1c 77                	sbb    al,0x77
    20c1:	28 06                	sub    BYTE PTR [rsi],al
    20c3:	1c 00                	sbb    al,0x0
    20c5:	00 0c ed 1a 00 00 fe 	add    BYTE PTR [rbp*8-0x1ffffe6],cl
    20cc:	13 00                	adc    eax,DWORD PTR [rax]
    20ce:	00 00                	add    BYTE PTR [rax],al
    20d0:	00 00                	add    BYTE PTR [rax],al
    20d2:	00 02                	add    BYTE PTR [rdx],al
    20d4:	6a 00                	push   0x0
    20d6:	00 00                	add    BYTE PTR [rax],al
    20d8:	2f                   	(bad)
    20d9:	13 f7                	adc    esi,edi
    20db:	17                   	(bad)
    20dc:	00 00                	add    BYTE PTR [rax],al
    20de:	04 fc                	add    al,0xfc
    20e0:	1a 00                	sbb    al,BYTE PTR [rax]
    20e2:	00 88 07 00 00 86    	add    BYTE PTR [rax-0x79fffff9],cl
    20e8:	07                   	(bad)
    20e9:	00 00                	add    BYTE PTR [rax],al
    20eb:	09 18                	or     DWORD PTR [rax],ebx
    20ed:	14 00                	adc    al,0x0
    20ef:	00 00                	add    BYTE PTR [rax],al
    20f1:	00 00                	add    BYTE PTR [rax],al
    20f3:	00 a1 0a 00 00 03    	add    BYTE PTR [rcx+0x300000a],ah
    20f9:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    20fc:	32 03                	xor    al,BYTE PTR [rbx]
    20fe:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    2102:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    2105:	00 00                	add    BYTE PTR [rax],al
    2107:	00 00                	add    BYTE PTR [rax],al
    2109:	00 03                	add    BYTE PTR [rbx],al
    210b:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    210e:	7e 7f                	jle    218f <_Z11popListElemP4List8string_t+0xaf>
    2110:	00 00                	add    BYTE PTR [rax],al
    2112:	2b ed                	sub    ebp,ebp
    2114:	1a 00                	sbb    al,BYTE PTR [rax]
    2116:	00 18                	add    BYTE PTR [rax],bl
    2118:	14 00                	adc    al,0x0
    211a:	00 00                	add    BYTE PTR [rax],al
    211c:	00 00                	add    BYTE PTR [rax],al
    211e:	00 02                	add    BYTE PTR [rdx],al
    2120:	18 14 00             	sbb    BYTE PTR [rax+rax*1],dl
    2123:	00 00                	add    BYTE PTR [rax],al
    2125:	00 00                	add    BYTE PTR [rax],al
    2127:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 212d <_Z11popListElemP4List8string_t+0x4d>
    212d:	00 00                	add    BYTE PTR [rax],al
    212f:	00 30                	add    BYTE PTR [rax],dh
    2131:	13 5c 18 00          	adc    ebx,DWORD PTR [rax+rbx*1+0x0]
    2135:	00 04 fc             	add    BYTE PTR [rsp+rdi*8],al
    2138:	1a 00                	sbb    al,BYTE PTR [rax]
    213a:	00 9b 07 00 00 99    	add    BYTE PTR [rbx-0x66fffff9],bl
    2140:	07                   	(bad)
    2141:	00 00                	add    BYTE PTR [rax],al
    2143:	09 35 14 00 00 00    	or     DWORD PTR [rip+0x14],esi        # 215d <_Z11popListElemP4List8string_t+0x7d>
    2149:	00 00                	add    BYTE PTR [rax],al
    214b:	00 a1 0a 00 00 03    	add    BYTE PTR [rcx+0x300000a],ah
    2151:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    2154:	32 03                	xor    al,BYTE PTR [rbx]
    2156:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    215a:	2f                   	(bad)
    215b:	40 00 00             	rex add BYTE PTR [rax],al
    215e:	00 00                	add    BYTE PTR [rax],al
    2160:	00 00                	add    BYTE PTR [rax],al
    2162:	03 01                	add    eax,DWORD PTR [rcx]
    2164:	51                   	push   rcx
    2165:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    2168:	03 01                	add    eax,DWORD PTR [rcx]
    216a:	52                   	push   rdx
    216b:	09 03                	or     DWORD PTR [rbx],eax
    216d:	2b 40 00             	sub    eax,DWORD PTR [rax+0x0]
    2170:	00 00                	add    BYTE PTR [rax],al
    2172:	00 00                	add    BYTE PTR [rax],al
    2174:	00 00                	add    BYTE PTR [rax],al
    2176:	00 57 69             	add    BYTE PTR [rdi+0x69],dl
    2179:	19 00                	sbb    DWORD PTR [rax],eax
    217b:	00 35 14 00 00 00    	add    BYTE PTR [rip+0x14],dh        # 2195 <_Z11popListElemP4List8string_t+0xb5>
    2181:	00 00                	add    BYTE PTR [rax],al
    2183:	00 02                	add    BYTE PTR [rdx],al
    2185:	35 14 00 00 00       	xor    eax,0x14
	...
    2192:	00 00                	add    BYTE PTR [rax],al
    2194:	00 01                	add    BYTE PTR [rcx],al
    2196:	33 38                	xor    edi,DWORD PTR [rax]
    2198:	04 7d                	add    al,0x7d
    219a:	19 00                	sbb    DWORD PTR [rax],eax
    219c:	00 ae 07 00 00 ac    	add    BYTE PTR [rsi-0x53fffff9],ch
    21a2:	07                   	(bad)
    21a3:	00 00                	add    BYTE PTR [rax],al
    21a5:	00 00                	add    BYTE PTR [rax],al
    21a7:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    21a9:	13 00                	adc    eax,DWORD PTR [rax]
    21ab:	00 00                	add    BYTE PTR [rax],al
    21ad:	00 00                	add    BYTE PTR [rax],al
    21af:	00 e9                	add    cl,ch
    21b1:	0a 00                	or     al,BYTE PTR [rax]
    21b3:	00 aa 18 00 00 03    	add    BYTE PTR [rdx+0x3000018],ch
    21b9:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    21bc:	73 00                	jae    21be <_Z13searchElementP4List8string_t+0xe>
    21be:	03 01                	add    eax,DWORD PTR [rcx]
    21c0:	54                   	push   rsp
    21c1:	02 08                	add    cl,BYTE PTR [rax]
    21c3:	40 00 1a             	rex add BYTE PTR [rdx],bl
    21c6:	4e 13 00             	rex.WRX adc r8,QWORD PTR [rax]
    21c9:	00 00                	add    BYTE PTR [rax],al
    21cb:	00 00                	add    BYTE PTR [rax],al
    21cd:	00 ce                	add    dh,cl
    21cf:	0a 00                	or     al,BYTE PTR [rax]
    21d1:	00 c8                	add    al,cl
    21d3:	18 00                	sbb    BYTE PTR [rax],al
    21d5:	00 03                	add    BYTE PTR [rbx],al
    21d7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    21da:	08 20                	or     BYTE PTR [rax],ah
    21dc:	03 01                	add    eax,DWORD PTR [rcx]
    21de:	54                   	push   rsp
    21df:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    21e2:	00 13                	add    BYTE PTR [rbx],dl
    21e4:	7b 13                	jnp    21f9 <_Z13searchElementP4List8string_t+0x49>
    21e6:	00 00                	add    BYTE PTR [rax],al
    21e8:	00 00                	add    BYTE PTR [rax],al
    21ea:	00 00                	add    BYTE PTR [rax],al
    21ec:	01 30                	add    DWORD PTR [rax],esi
    21ee:	13 65 14             	adc    esp,DWORD PTR [rbp+0x14]
    21f1:	00 00                	add    BYTE PTR [rax],al
    21f3:	00 00                	add    BYTE PTR [rax],al
    21f5:	00 00                	add    BYTE PTR [rax],al
    21f7:	01 30                	add    DWORD PTR [rax],esi
    21f9:	0f 6d                	(bad)
    21fb:	14 00                	adc    al,0x0
    21fd:	00 00                	add    BYTE PTR [rax],al
    21ff:	00 00                	add    BYTE PTR [rax],al
    2201:	00 bd 0a 00 00 1a    	add    BYTE PTR [rbp+0x1a00000a],bh
    2207:	9e                   	sahf
    2208:	14 00                	adc    al,0x0
    220a:	00 00                	add    BYTE PTR [rax],al
    220c:	00 00                	add    BYTE PTR [rax],al
    220e:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
    2211:	00 00                	add    BYTE PTR [rax],al
    2213:	29 19                	sub    DWORD PTR [rcx],ebx
    2215:	00 00                	add    BYTE PTR [rax],al
    2217:	03 01                	add    eax,DWORD PTR [rcx]
    2219:	55                   	push   rbp
    221a:	09 03                	or     DWORD PTR [rbx],eax
    221c:	1d 40 00 00 00       	sbb    eax,0x40
    2221:	00 00                	add    BYTE PTR [rax],al
    2223:	00 03                	add    BYTE PTR [rbx],al
    2225:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    2229:	90                   	nop
    222a:	42 00 00             	rex.X add BYTE PTR [rax],al
    222d:	00 00                	add    BYTE PTR [rax],al
    222f:	00 00                	add    BYTE PTR [rax],al
    2231:	03 01                	add    eax,DWORD PTR [rcx]
    2233:	51                   	push   rcx
    2234:	01 45 03             	add    DWORD PTR [rbp+0x3],eax
    2237:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    223a:	03 60 42             	add    esp,DWORD PTR [rax+0x42]
    223d:	00 00                	add    BYTE PTR [rax],al
    223f:	00 00                	add    BYTE PTR [rax],al
    2241:	00 00                	add    BYTE PTR [rax],al
    2243:	00 09                	add    BYTE PTR [rcx],cl
    2245:	bd 14 00 00 00       	mov    ebp,0x14
    224a:	00 00                	add    BYTE PTR [rax],al
    224c:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
    224f:	00 00                	add    BYTE PTR [rax],al
    2251:	03 01                	add    eax,DWORD PTR [rcx]
    2253:	55                   	push   rbp
    2254:	09 03                	or     DWORD PTR [rbx],eax
    2256:	15 40 00 00 00       	adc    eax,0x40
    225b:	00 00                	add    BYTE PTR [rax],al
    225d:	00 03                	add    BYTE PTR [rbx],al
    225f:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    2263:	90                   	nop
    2264:	42 00 00             	rex.X add BYTE PTR [rax],al
    2267:	00 00                	add    BYTE PTR [rax],al
    2269:	00 00                	add    BYTE PTR [rax],al
    226b:	03 01                	add    eax,DWORD PTR [rcx]
    226d:	51                   	push   rcx
    226e:	01 4c 03 01          	add    DWORD PTR [rbx+rax*1+0x1],ecx
    2272:	52                   	push   rdx
    2273:	09 03                	or     DWORD PTR [rbx],eax
    2275:	60                   	(bad)
    2276:	42 00 00             	rex.X add BYTE PTR [rax],al
    2279:	00 00                	add    BYTE PTR [rax],al
    227b:	00 00                	add    BYTE PTR [rax],al
    227d:	00 00                	add    BYTE PTR [rax],al
    227f:	08 d1                	or     cl,dl
    2281:	08 00                	or     BYTE PTR [rax],al
    2283:	00 1d ef 07 00 00    	add    BYTE PTR [rip+0x7ef],bl        # 2a78 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x238>
    2289:	05 9f 03 6e 07       	add    eax,0x76e039f
    228e:	00 00                	add    BYTE PTR [rax],al
    2290:	41 08 00             	or     BYTE PTR [r8],al
    2293:	00 8b 19 00 00 14    	add    BYTE PTR [rbx+0x14000019],cl
    2299:	5f                   	pop    rdi
    229a:	5f                   	pop    rdi
    229b:	50                   	push   rax
    229c:	00 05 9f 03 26 8b    	add    BYTE PTR [rip+0xffffffff8b26039f],al        # ffffffff8b262641 <_end+0xffffffff8b25c629>
    22a2:	19 00                	sbb    DWORD PTR [rax],eax
    22a4:	00 00                	add    BYTE PTR [rax],al
    22a6:	08 66 08             	or     BYTE PTR [rsi+0x8],ah
    22a9:	00 00                	add    BYTE PTR [rax],al
    22ab:	1d 4c 06 00 00       	sbb    eax,0x64c
    22b0:	05 2e 02 af 06       	add    eax,0x6af022e
    22b5:	00 00                	add    BYTE PTR [rax],al
    22b7:	db 00                	fild   DWORD PTR [rax]
    22b9:	00 00                	add    BYTE PTR [rax],al
    22bb:	cc                   	int3
    22bc:	19 00                	sbb    DWORD PTR [rax],eax
    22be:	00 14 5f             	add    BYTE PTR [rdi+rbx*2],dl
    22c1:	5f                   	pop    rdi
    22c2:	58                   	pop    rax
    22c3:	00 05 2e 02 1f 41    	add    BYTE PTR [rip+0x411f022e],al        # 411f24f7 <_end+0x411ec4df>
    22c9:	08 00                	or     BYTE PTR [rax],al
    22cb:	00 14 5f             	add    BYTE PTR [rdi+rbx*2],dl
    22ce:	5f                   	pop    rdi
    22cf:	4e 00 05 2e 02 2e 6d 	rex.WRX add BYTE PTR [rip+0x6d2e022e],r8b        # 6d2e2504 <_end+0x6d2dc4ec>
    22d6:	00 00                	add    BYTE PTR [rax],al
    22d8:	00 58 5f             	add    BYTE PTR [rax+0x5f],bl
    22db:	5f                   	pop    rdi
    22dc:	59                   	pop    rcx
    22dd:	00 05 30 02 0b 11    	add    BYTE PTR [rip+0x110b0230],al        # 110b2513 <_end+0x110ac4fb>
    22e3:	08 00                	or     BYTE PTR [rax],al
    22e5:	00 00                	add    BYTE PTR [rax],al
    22e7:	1d 18 04 00 00       	sbb    eax,0x418
    22ec:	05 12 02 c8 05       	add    eax,0x5c80212
    22f1:	00 00                	add    BYTE PTR [rax],al
    22f3:	11 08                	adc    DWORD PTR [rax],ecx
    22f5:	00 00                	add    BYTE PTR [rax],al
    22f7:	fb                   	sti
    22f8:	19 00                	sbb    DWORD PTR [rax],eax
    22fa:	00 14 5f             	add    BYTE PTR [rdi+rbx*2],dl
    22fd:	5f                   	pop    rdi
    22fe:	58                   	pop    rax
    22ff:	00 05 12 02 23 41    	add    BYTE PTR [rip+0x41230212],al        # 41232517 <_end+0x4122c4ff>
    2305:	08 00                	or     BYTE PTR [rax],al
    2307:	00 14 5f             	add    BYTE PTR [rdi+rbx*2],dl
    230a:	5f                   	pop    rdi
    230b:	4e 00 05 12 02 32 6d 	rex.WRX add BYTE PTR [rip+0x6d320212],r8b        # 6d322524 <_end+0x6d31c50c>
    2312:	00 00                	add    BYTE PTR [rax],al
    2314:	00 00                	add    BYTE PTR [rax],al
    2316:	1d 38 08 00 00       	sbb    eax,0x838
    231b:	06                   	(bad)
    231c:	49 03 29             	add    rbp,QWORD PTR [r9]
    231f:	03 00                	add    eax,DWORD PTR [rax]
    2321:	00 4b 01             	add    BYTE PTR [rbx+0x1],cl
    2324:	00 00                	add    BYTE PTR [rax],al
    2326:	2a 1a                	sub    bl,BYTE PTR [rdx]
    2328:	00 00                	add    BYTE PTR [rax],al
    232a:	14 5f                	adc    al,0x5f
    232c:	5f                   	pop    rdi
    232d:	43 00 06             	rex.XB add BYTE PTR [r14],al
    2330:	49 03 23             	add    rsp,QWORD PTR [r11]
    2333:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    2336:	00 14 5f             	add    BYTE PTR [rdi+rbx*2],dl
    2339:	5f                   	pop    rdi
    233a:	56                   	push   rsi
    233b:	00 06                	add    BYTE PTR [rsi],al
    233d:	49 03 3b             	add    rdi,QWORD PTR [r11]
    2340:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    2343:	00 00                	add    BYTE PTR [rax],al
    2345:	1d e7 03 00 00       	sbb    eax,0x3e7
    234a:	06                   	(bad)
    234b:	c7 01 b7 04 00 00    	mov    DWORD PTR [rcx],0x4b7
    2351:	db 00                	fild   DWORD PTR [rax]
    2353:	00 00                	add    BYTE PTR [rax],al
    2355:	59                   	pop    rcx
    2356:	1a 00                	sbb    al,BYTE PTR [rax]
    2358:	00 14 5f             	add    BYTE PTR [rdi+rbx*2],dl
    235b:	5f                   	pop    rdi
    235c:	58                   	pop    rax
    235d:	00 06                	add    BYTE PTR [rsi],al
    235f:	c7 01 1c 11 08 00    	mov    DWORD PTR [rcx],0x8111c
    2365:	00 14 5f             	add    BYTE PTR [rdi+rbx*2],dl
    2368:	5f                   	pop    rdi
    2369:	4e 00 06             	rex.WRX add BYTE PTR [rsi],r8b
    236c:	c7 01 2b 6d 00 00    	mov    DWORD PTR [rcx],0x6d2b
    2372:	00 00                	add    BYTE PTR [rax],al
    2374:	2c 84                	sub    al,0x84
    2376:	04 00                	add    al,0x0
    2378:	00 03                	add    BYTE PTR [rbx],al
    237a:	5c                   	pop    rsp
    237b:	41 01 00             	add    DWORD PTR [r8],eax
    237e:	00 8d 1a 00 00 0d    	add    BYTE PTR [rbp+0xd00001a],cl
    2384:	81 05 00 00 03 5c 01 	add    DWORD PTR [rip+0x5c030000],0x14601        # 5c03238e <_end+0x5c02c376>
    238b:	46 01 00 
    238e:	00 0d 9c 03 00 00    	add    BYTE PTR [rip+0x39c],cl        # 2730 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x360>
    2394:	03 5c 01 fa          	add    ebx,DWORD PTR [rcx+rax*1-0x6]
    2398:	00 00                	add    BYTE PTR [rax],al
    239a:	00 0d 7e 04 00 00    	add    BYTE PTR [rip+0x47e],cl        # 281e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x44e>
    23a0:	03 5c 01 2e          	add    ebx,DWORD PTR [rcx+rax*1+0x2e]
    23a4:	00 00                	add    BYTE PTR [rax],al
    23a6:	00 00                	add    BYTE PTR [rax],al
    23a8:	2c 5f                	sub    al,0x5f
    23aa:	18 00                	sbb    BYTE PTR [rax],al
    23ac:	00 03                	add    BYTE PTR [rbx],al
    23ae:	39 3f                	cmp    DWORD PTR [rdi],edi
    23b0:	01 00                	add    DWORD PTR [rax],eax
    23b2:	00 c1                	add    cl,al
    23b4:	1a 00                	sbb    al,BYTE PTR [rax]
    23b6:	00 0d 81 05 00 00    	add    BYTE PTR [rip+0x581],cl        # 293d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xfd>
    23bc:	03 39                	add    edi,DWORD PTR [rcx]
    23be:	01 3f                	add    DWORD PTR [rdi],edi
    23c0:	01 00                	add    DWORD PTR [rax],eax
    23c2:	00 0d 6b 03 00 00    	add    BYTE PTR [rip+0x36b],cl        # 2733 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x363>
    23c8:	03 39                	add    edi,DWORD PTR [rcx]
    23ca:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    23cd:	00 00                	add    BYTE PTR [rax],al
    23cf:	0d 7e 04 00 00       	or     eax,0x47e
    23d4:	03 39                	add    edi,DWORD PTR [rcx]
    23d6:	01 2e                	add    DWORD PTR [rsi],ebp
    23d8:	00 00                	add    BYTE PTR [rax],al
    23da:	00 00                	add    BYTE PTR [rax],al
    23dc:	37                   	(bad)
    23dd:	9f                   	lahf
    23de:	05 00 00 02 e9       	add    eax,0xe9020000
    23e3:	01 9f 05 00 00 41    	add    DWORD PTR [rdi+0x41000005],ebx
    23e9:	01 00                	add    DWORD PTR [rax],eax
    23eb:	00 03                	add    BYTE PTR [rbx],al
    23ed:	ed                   	in     eax,dx
    23ee:	1a 00                	sbb    al,BYTE PTR [rax]
    23f0:	00 38                	add    BYTE PTR [rax],bh
    23f2:	5f                   	pop    rdi
    23f3:	5f                   	pop    rdi
    23f4:	73 00                	jae    23f6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x26>
    23f6:	e9 0f 41 01 00       	jmp    1650a <_end+0x104f2>
    23fb:	00 38                	add    BYTE PTR [rax],bh
    23fd:	5f                   	pop    rdi
    23fe:	5f                   	pop    rdi
    23ff:	63 00                	movsxd eax,DWORD PTR [rax]
    2401:	e9 18 66 00 00       	jmp    8a1e <_end+0x2a06>
    2406:	00 00                	add    BYTE PTR [rax],al
    2408:	2c 55                	sub    al,0x55
    240a:	2e 00 00             	cs add BYTE PTR [rax],al
    240d:	04 54                	add    al,0x54
    240f:	66 00 00             	data16 add BYTE PTR [rax],al
    2412:	00 0a                	add    BYTE PTR [rdx],cl
    2414:	1b 00                	sbb    eax,DWORD PTR [rax]
    2416:	00 0d a9 06 00 00    	add    BYTE PTR [rip+0x6a9],cl        # 2ac5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x285>
    241c:	04 54                	add    al,0x54
    241e:	20 fa                	and    dl,bh
    2420:	00 00                	add    BYTE PTR [rax],al
    2422:	00 30                	add    BYTE PTR [rax],dh
    2424:	00 39                	add    BYTE PTR [rcx],bh
    2426:	03 15 00 00 8b 06    	add    edx,DWORD PTR [rip+0x68b0000]        # 68b242c <_end+0x68ac414>
    242c:	00 00                	add    BYTE PTR [rax],al
    242e:	c0 14 00 00          	rcl    BYTE PTR [rax+rax*1],0x0
    2432:	00 00                	add    BYTE PTR [rax],al
    2434:	00 00                	add    BYTE PTR [rax],al
    2436:	a9 00 00 00 00       	test   eax,0x0
    243b:	00 00                	add    BYTE PTR [rax],al
    243d:	00 01                	add    BYTE PTR [rcx],al
    243f:	9c                   	pushf
    2440:	a2 1b 00 00 04 18 15 	movabs ds:0x15180400001b,al
    2447:	00 00 
    2449:	be 07 00 00 b6       	mov    esi,0xb6000007
    244e:	07                   	(bad)
    244f:	00 00                	add    BYTE PTR [rax],al
    2451:	04 24                	add    al,0x24
    2453:	15 00 00 e6 07       	adc    eax,0x7e60000
    2458:	00 00                	add    BYTE PTR [rax],al
    245a:	e0 07                	loopne 2463 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x93>
    245c:	00 00                	add    BYTE PTR [rax],al
    245e:	0e                   	(bad)
    245f:	30 15 00 00 07 08    	xor    BYTE PTR [rip+0x8070000],dl        # 8072465 <_end+0x806c44d>
    2465:	00 00                	add    BYTE PTR [rax],al
    2467:	ff 07                	inc    DWORD PTR [rdi]
    2469:	00 00                	add    BYTE PTR [rax],al
    246b:	3a 3b                	cmp    bh,BYTE PTR [rbx]
    246d:	15 00 00 0d 15       	adc    eax,0x150d0000
    2472:	00 00                	add    BYTE PTR [rax],al
    2474:	00 00                	add    BYTE PTR [rax],al
    2476:	00 00                	add    BYTE PTR [rax],al
    2478:	37                   	(bad)
    2479:	00 00                	add    BYTE PTR [rax],al
    247b:	00 00                	add    BYTE PTR [rax],al
    247d:	00 00                	add    BYTE PTR [rax],al
    247f:	00 77 1b             	add    BYTE PTR [rdi+0x1b],dh
    2482:	00 00                	add    BYTE PTR [rax],al
    2484:	0e                   	(bad)
    2485:	3c 15                	cmp    al,0x15
    2487:	00 00                	add    BYTE PTR [rax],al
    2489:	2a 08                	sub    cl,BYTE PTR [rax]
    248b:	00 00                	add    BYTE PTR [rax],al
    248d:	28 08                	sub    BYTE PTR [rax],cl
    248f:	00 00                	add    BYTE PTR [rax],al
    2491:	00 1a                	add    BYTE PTR [rdx],bl
    2493:	09 15 00 00 00 00    	or     DWORD PTR [rip+0x0],edx        # 2499 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xc9>
    2499:	00 00                	add    BYTE PTR [rax],al
    249b:	e9 0a 00 00 94       	jmp    ffffffff940024aa <_end+0xffffffff93ffc492>
    24a0:	1b 00                	sbb    eax,DWORD PTR [rax]
    24a2:	00 03                	add    BYTE PTR [rbx],al
    24a4:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    24a7:	7e 00                	jle    24a9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xd9>
    24a9:	03 01                	add    eax,DWORD PTR [rcx]
    24ab:	54                   	push   rsp
    24ac:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    24af:	0f 69 15 00 00 00 00 	punpckhwd mm2,QWORD PTR [rip+0x0]        # 24b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xe6>
    24b6:	00 00                	add    BYTE PTR [rax],al
    24b8:	69 1c 00 00 00 39 e3 	imul   ebx,DWORD PTR [rax+rax*1],0xe3390000
    24bf:	0d 00 00 8c 04       	or     eax,0x48c0000
    24c4:	00 00                	add    BYTE PTR [rax],al
    24c6:	20 18                	and    BYTE PTR [rax],bl
    24c8:	00 00                	add    BYTE PTR [rax],al
    24ca:	00 00                	add    BYTE PTR [rax],al
    24cc:	00 00                	add    BYTE PTR [rax],al
    24ce:	68 00 00 00 00       	push   0x0
    24d3:	00 00                	add    BYTE PTR [rax],al
    24d5:	00 01                	add    BYTE PTR [rcx],al
    24d7:	9c                   	pushf
    24d8:	69 1c 00 00 04 f4 0d 	imul   ebx,DWORD PTR [rax+rax*1],0xdf40400
    24df:	00 00                	add    BYTE PTR [rax],al
    24e1:	3d 08 00 00 33       	cmp    eax,0x33000008
    24e6:	08 00                	or     BYTE PTR [rax],al
    24e8:	00 3a                	add    BYTE PTR [rdx],bh
    24ea:	09 0e                	or     DWORD PTR [rsi],ecx
    24ec:	00 00                	add    BYTE PTR [rax],al
    24ee:	2f                   	(bad)
    24ef:	18 00                	sbb    BYTE PTR [rax],al
    24f1:	00 00                	add    BYTE PTR [rax],al
    24f3:	00 00                	add    BYTE PTR [rax],al
    24f5:	00 2b                	add    BYTE PTR [rbx],ch
    24f7:	00 00                	add    BYTE PTR [rax],al
    24f9:	00 00                	add    BYTE PTR [rax],al
    24fb:	00 00                	add    BYTE PTR [rax],al
    24fd:	00 f5                	add    ch,dh
    24ff:	1b 00                	sbb    eax,DWORD PTR [rax]
    2501:	00 0e                	add    BYTE PTR [rsi],cl
    2503:	0a 0e                	or     cl,BYTE PTR [rsi]
    2505:	00 00                	add    BYTE PTR [rax],al
    2507:	6d                   	ins    DWORD PTR es:[rdi],dx
    2508:	08 00                	or     BYTE PTR [rax],al
    250a:	00 67 08             	add    BYTE PTR [rdi+0x8],ah
    250d:	00 00                	add    BYTE PTR [rax],al
    250f:	00 2b                	add    BYTE PTR [rbx],ch
    2511:	e3 0d                	jrcxz  2520 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x150>
    2513:	00 00                	add    BYTE PTR [rax],al
    2515:	69 18 00 00 00 00    	imul   ebx,DWORD PTR [rax],0x0
    251b:	00 00                	add    BYTE PTR [rax],al
    251d:	00 69 18             	add    BYTE PTR [rcx+0x18],ch
    2520:	00 00                	add    BYTE PTR [rax],al
    2522:	00 00                	add    BYTE PTR [rax],al
    2524:	00 00                	add    BYTE PTR [rax],al
    2526:	1f                   	(bad)
    2527:	00 00                	add    BYTE PTR [rax],al
    2529:	00 00                	add    BYTE PTR [rax],al
    252b:	00 00                	add    BYTE PTR [rax],al
    252d:	00 b0 06 5b 1c 00    	add    BYTE PTR [rax+0x1c5b06],dh
    2533:	00 59 f4             	add    BYTE PTR [rcx-0xc],bl
    2536:	0d 00 00 00 09       	or     eax,0x9000000
    253b:	88 18                	mov    BYTE PTR [rax],bl
    253d:	00 00                	add    BYTE PTR [rax],al
    253f:	00 00                	add    BYTE PTR [rax],al
    2541:	00 00                	add    BYTE PTR [rax],al
    2543:	04 0b                	add    al,0xb
    2545:	00 00                	add    BYTE PTR [rax],al
    2547:	03 01                	add    eax,DWORD PTR [rcx]
    2549:	55                   	push   rbp
    254a:	09 03                	or     DWORD PTR [rbx],eax
    254c:	4c                   	rex.WR
    254d:	40 00 00             	rex add BYTE PTR [rax],al
    2550:	00 00                	add    BYTE PTR [rax],al
    2552:	00 00                	add    BYTE PTR [rax],al
    2554:	03 01                	add    eax,DWORD PTR [rcx]
    2556:	54                   	push   rsp
    2557:	09 03                	or     DWORD PTR [rbx],eax
    2559:	90                   	nop
    255a:	42 00 00             	rex.X add BYTE PTR [rax],al
    255d:	00 00                	add    BYTE PTR [rax],al
    255f:	00 00                	add    BYTE PTR [rax],al
    2561:	03 01                	add    eax,DWORD PTR [rcx]
    2563:	51                   	push   rcx
    2564:	02 08                	add    cl,BYTE PTR [rax]
    2566:	b1 03                	mov    cl,0x3
    2568:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    256b:	03 72 40             	add    esi,DWORD PTR [rdx+0x40]
	...
    2576:	5a                   	pop    rdx
    2577:	69 18 00 00 00 00    	imul   ebx,DWORD PTR [rax],0x0
    257d:	00 00                	add    BYTE PTR [rax],al
    257f:	bd 0a 00 00 00       	mov    ebp,0xa
    2584:	22 1e                	and    bl,BYTE PTR [rsi]
    2586:	07                   	(bad)
    2587:	00 00                	add    BYTE PTR [rax],al
    2589:	1e                   	(bad)
    258a:	07                   	(bad)
    258b:	00 00                	add    BYTE PTR [rax],al
    258d:	22 9f 05 00 00 95    	and    bl,BYTE PTR [rdi-0x6afffffb]
    2593:	05 00 00 22 23       	add    eax,0x23220000
    2598:	05 00 00 19 05       	add    eax,0x5190000
    259d:	00 00                	add    BYTE PTR [rax],al
    259f:	22 06                	and    al,BYTE PTR [rsi]
    25a1:	05 00 00 fc 04       	add    eax,0x4fc0000
    25a6:	00 00                	add    BYTE PTR [rax],al
    25a8:	00 ff                	add    bh,bh
    25aa:	0e                   	(bad)
    25ab:	00 00                	add    BYTE PTR [rax],al
    25ad:	05 00 01 08 2f       	add    eax,0x2f080100
    25b2:	08 00                	or     BYTE PTR [rax],al
    25b4:	00 22                	add    BYTE PTR [rdx],ah
    25b6:	33 00                	xor    eax,DWORD PTR [rax]
    25b8:	00 00                	add    BYTE PTR [rax],al
    25ba:	21 1b                	and    DWORD PTR [rbx],ebx
    25bc:	02 00                	add    al,BYTE PTR [rax]
    25be:	00 00                	add    BYTE PTR [rax],al
    25c0:	00 00                	add    BYTE PTR [rax],al
    25c2:	00 e0                	add    al,ah
    25c4:	1a 00                	sbb    al,BYTE PTR [rax]
    25c6:	00 00                	add    BYTE PTR [rax],al
    25c8:	00 00                	add    BYTE PTR [rax],al
    25ca:	00 b5 03 00 00 00    	add    BYTE PTR [rbp+0x3],dh
    25d0:	00 00                	add    BYTE PTR [rax],al
    25d2:	00 4f 09             	add    BYTE PTR [rdi+0x9],cl
    25d5:	00 00                	add    BYTE PTR [rax],al
    25d7:	04 01                	add    al,0x1
    25d9:	08 24 02             	or     BYTE PTR [rdx+rax*1],ah
    25dc:	00 00                	add    BYTE PTR [rax],al
    25de:	04 02                	add    al,0x2
    25e0:	07                   	(bad)
    25e1:	73 02                	jae    25e5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x215>
    25e3:	00 00                	add    BYTE PTR [rax],al
    25e5:	04 04                	add    al,0x4
    25e7:	07                   	(bad)
    25e8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    25e9:	01 00                	add    DWORD PTR [rax],eax
    25eb:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    25ee:	07                   	(bad)
    25ef:	a0 01 00 00 04 01 06 	movabs al,ds:0x226060104000001
    25f6:	26 02 
    25f8:	00 00                	add    BYTE PTR [rax],al
    25fa:	04 02                	add    al,0x2
    25fc:	05 05 01 00 00       	add    eax,0x105
    2601:	23 04 05 69 6e 74 00 	and    eax,DWORD PTR [rax*1+0x746e69]
    2608:	17                   	(bad)
    2609:	58                   	pop    rax
    260a:	00 00                	add    BYTE PTR [rax],al
    260c:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 2765 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x395>
    2612:	04 2a                	add    al,0x2a
    2614:	16                   	(bad)
    2615:	3c 00                	cmp    al,0x0
    2617:	00 00                	add    BYTE PTR [rax],al
    2619:	04 08                	add    al,0x8
    261b:	05 92 01 00 00       	add    eax,0x192
    2620:	05 bd 05 00 00       	add    eax,0x5bd
    2625:	04 2d                	add    al,0x2d
    2627:	1b 43 00             	sbb    eax,DWORD PTR [rbx+0x0]
    262a:	00 00                	add    BYTE PTR [rax],al
    262c:	24 08                	and    al,0x8
    262e:	07                   	(bad)
    262f:	8a 00                	mov    al,BYTE PTR [rax]
    2631:	00 00                	add    BYTE PTR [rax],al
    2633:	04 01                	add    al,0x1
    2635:	06                   	(bad)
    2636:	2d 02 00 00 17       	sub    eax,0x17000002
    263b:	8a 00                	mov    al,BYTE PTR [rax]
    263d:	00 00                	add    BYTE PTR [rax],al
    263f:	05 55 01 00 00       	add    eax,0x155
    2644:	05 1a 14 64 00       	add    eax,0x64141a
    2649:	00 00                	add    BYTE PTR [rax],al
    264b:	05 bf 05 00 00       	add    eax,0x5bf
    2650:	05 1b 14 77 00       	add    eax,0x77141b
    2655:	00 00                	add    BYTE PTR [rax],al
    2657:	05 37 0b 00 00       	add    eax,0xb37
    265c:	06                   	(bad)
    265d:	d6                   	(bad)
    265e:	17                   	(bad)
    265f:	43 00 00             	rex.XB add BYTE PTR [r8],al
    2662:	00 07                	add    BYTE PTR [rdi],al
    2664:	91                   	xchg   ecx,eax
    2665:	00 00                	add    BYTE PTR [rax],al
    2667:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    266a:	05 8d 01 00 00       	add    eax,0x18d
    266f:	04 10                	add    al,0x10
    2671:	04 18                	add    al,0x18
    2673:	02 00                	add    al,BYTE PTR [rax]
    2675:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    2678:	07                   	(bad)
    2679:	9b                   	fwait
    267a:	01 00                	add    DWORD PTR [rax],eax
    267c:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    267f:	04 80                	add    al,0x80
    2681:	01 00                	add    DWORD PTR [rax],eax
    2683:	00 18                	add    BYTE PTR [rax],bl
    2685:	08 3c e3             	or     BYTE PTR [rbx+riz*8],bh
    2688:	02 00                	add    al,BYTE PTR [rax]
    268a:	00 00                	add    BYTE PTR [rax],al
    268c:	01 00                	add    DWORD PTR [rax],eax
    268e:	00 0c 6e             	add    BYTE PTR [rsi+rbp*2],cl
    2691:	02 00                	add    al,BYTE PTR [rax]
    2693:	00 07                	add    BYTE PTR [rdi],al
    2695:	3d 09 58 00 00       	cmp    eax,0x5809
    269a:	00 00                	add    BYTE PTR [rax],al
    269c:	19 72 65             	sbb    DWORD PTR [rdx+0x65],esi
    269f:	6d                   	ins    DWORD PTR es:[rdi],dx
    26a0:	00 3e                	add    BYTE PTR [rsi],bh
    26a2:	09 58 00             	or     DWORD PTR [rax+0x0],ebx
    26a5:	00 00                	add    BYTE PTR [rax],al
    26a7:	04 00                	add    al,0x0
    26a9:	05 e4 02 00 00       	add    eax,0x2e4
    26ae:	07                   	(bad)
    26af:	3f                   	(bad)
    26b0:	05 db 00 00 00       	add    eax,0xdb
    26b5:	18 10                	sbb    BYTE PTR [rax],dl
    26b7:	44 09 00             	or     DWORD PTR [rax],r8d
    26ba:	00 00                	add    BYTE PTR [rax],al
    26bc:	31 01                	xor    DWORD PTR [rcx],eax
    26be:	00 00                	add    BYTE PTR [rax],al
    26c0:	0c 6e                	or     al,0x6e
    26c2:	02 00                	add    al,BYTE PTR [rax]
    26c4:	00 07                	add    BYTE PTR [rdi],al
    26c6:	45 0e                	rex.RB (bad)
    26c8:	70 00                	jo     26ca <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2fa>
    26ca:	00 00                	add    BYTE PTR [rax],al
    26cc:	00 19                	add    BYTE PTR [rcx],bl
    26ce:	72 65                	jb     2735 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x365>
    26d0:	6d                   	ins    DWORD PTR es:[rdi],dx
    26d1:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    26d4:	70 00                	jo     26d6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x306>
    26d6:	00 00                	add    BYTE PTR [rax],al
    26d8:	08 00                	or     BYTE PTR [rax],al
    26da:	05 0a 00 00 00       	add    eax,0xa
    26df:	07                   	(bad)
    26e0:	47 05 0c 01 00 00    	rex.RXB add eax,0x10c
    26e6:	18 10                	sbb    BYTE PTR [rax],dl
    26e8:	4e d4                	rex.WRX (bad)
    26ea:	01 00                	add    DWORD PTR [rax],eax
    26ec:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
    26ef:	00 00                	add    BYTE PTR [rax],al
    26f1:	0c 6e                	or     al,0x6e
    26f3:	02 00                	add    al,BYTE PTR [rax]
    26f5:	00 07                	add    BYTE PTR [rdi],al
    26f7:	4f 13 bf 00 00 00 00 	rex.WRXB adc r15,QWORD PTR [r15+0x0]
    26fe:	19 72 65             	sbb    DWORD PTR [rdx+0x65],esi
    2701:	6d                   	ins    DWORD PTR es:[rdi],dx
    2702:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    2705:	bf 00 00 00 08       	mov    edi,0x8000000
    270a:	00 05 d5 01 00 00    	add    BYTE PTR [rip+0x1d5],al        # 28e5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xa5>
    2710:	07                   	(bad)
    2711:	51                   	push   rcx
    2712:	05 3d 01 00 00       	add    eax,0x13d
    2717:	25 d5 02 00 00       	and    eax,0x2d5
    271c:	07                   	(bad)
    271d:	b4 03                	mov    ah,0x3
    271f:	0f 7b                	(bad)
    2721:	01 00                	add    DWORD PTR [rax],eax
    2723:	00 07                	add    BYTE PTR [rdi],al
    2725:	80 01 00             	add    BYTE PTR [rcx],0x0
    2728:	00 26                	add    BYTE PTR [rsi],ah
    272a:	58                   	pop    rax
    272b:	00 00                	add    BYTE PTR [rax],al
    272d:	00 94 01 00 00 02 94 	add    BYTE PTR [rcx+rax*1-0x6bfe0000],dl
    2734:	01 00                	add    DWORD PTR [rax],eax
    2736:	00 02                	add    BYTE PTR [rdx],al
    2738:	94                   	xchg   esp,eax
    2739:	01 00                	add    DWORD PTR [rax],eax
    273b:	00 00                	add    BYTE PTR [rax],al
    273d:	07                   	(bad)
    273e:	99                   	cdq
    273f:	01 00                	add    DWORD PTR [rax],eax
    2741:	00 27                	add    BYTE PTR [rdi],ah
    2743:	28 73 74             	sub    BYTE PTR [rbx+0x74],dh
    2746:	64 00 10             	add    BYTE PTR fs:[rax],dl
    2749:	32 01                	xor    al,BYTE PTR [rcx]
    274b:	0b 6a 03             	or     ebp,DWORD PTR [rdx+0x3]
    274e:	00 00                	add    BYTE PTR [rax],al
    2750:	01 08                	add    DWORD PTR [rax],ecx
    2752:	83 0b 00             	or     DWORD PTR [rbx],0x0
    2755:	01 00                	add    DWORD PTR [rax],eax
    2757:	00 01                	add    BYTE PTR [rcx],al
    2759:	08 84 0b 31 01 00 00 	or     BYTE PTR [rbx+rcx*1+0x131],al
    2760:	01 08                	add    DWORD PTR [rax],ecx
    2762:	8a 0b                	mov    cl,BYTE PTR [rbx]
    2764:	6a 03                	push   0x3
    2766:	00 00                	add    BYTE PTR [rax],al
    2768:	01 08                	add    DWORD PTR [rax],ecx
    276a:	8d 0b                	lea    ecx,[rbx]
    276c:	86 03                	xchg   BYTE PTR [rbx],al
    276e:	00 00                	add    BYTE PTR [rax],al
    2770:	01 08                	add    DWORD PTR [rax],ecx
    2772:	90                   	nop
    2773:	0b a1 03 00 00 01    	or     esp,DWORD PTR [rcx+0x1000003]
    2779:	08 91 0b be 03 00    	or     BYTE PTR [rcx+0x3be0b],dl
    277f:	00 01                	add    BYTE PTR [rcx],al
    2781:	08 92 0b d4 03 00    	or     BYTE PTR [rdx+0x3d40b],dl
    2787:	00 01                	add    BYTE PTR [rcx],al
    2789:	08 93 0b ea 03 00    	or     BYTE PTR [rbx+0x3ea0b],dl
    278f:	00 01                	add    BYTE PTR [rcx],al
    2791:	08 95 0b 14 04 00    	or     BYTE PTR [rbp+0x4140b],dl
    2797:	00 01                	add    BYTE PTR [rcx],al
    2799:	08 98 0b 30 04 00    	or     BYTE PTR [rax+0x4300b],bl
    279f:	00 01                	add    BYTE PTR [rcx],al
    27a1:	08 9a 0b 46 04 00    	or     BYTE PTR [rdx+0x4460b],bl
    27a7:	00 01                	add    BYTE PTR [rcx],al
    27a9:	08 9d 0b 61 04 00    	or     BYTE PTR [rbp+0x4610b],bl
    27af:	00 01                	add    BYTE PTR [rcx],al
    27b1:	08 9e 0b 7c 04 00    	or     BYTE PTR [rsi+0x47c0b],bl
    27b7:	00 01                	add    BYTE PTR [rcx],al
    27b9:	08 9f 0b ad 04 00    	or     BYTE PTR [rdi+0x4ad0b],bl
    27bf:	00 01                	add    BYTE PTR [rcx],al
    27c1:	08 a1 0b cd 04 00    	or     BYTE PTR [rcx+0x4cd0b],ah
    27c7:	00 01                	add    BYTE PTR [rcx],al
    27c9:	08 a4 0b ed 04 00 00 	or     BYTE PTR [rbx+rcx*1+0x4ed],ah
    27d0:	01 08                	add    DWORD PTR [rax],ecx
    27d2:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    27d3:	0b 00                	or     eax,DWORD PTR [rax]
    27d5:	05 00 00 01 08       	add    eax,0x8010000
    27da:	a9 0b 0d 05 00       	test   eax,0x50d0b
    27df:	00 01                	add    BYTE PTR [rcx],al
    27e1:	08 aa 0b 1e 05 00    	or     BYTE PTR [rdx+0x51e0b],ch
    27e7:	00 01                	add    BYTE PTR [rcx],al
    27e9:	08 ab 0b 3e 05 00    	or     BYTE PTR [rbx+0x53e0b],ch
    27ef:	00 01                	add    BYTE PTR [rcx],al
    27f1:	08 ac 0b 61 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x561],ch
    27f8:	01 08                	add    DWORD PTR [rax],ecx
    27fa:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    27fb:	0b 84 05 00 00 01 08 	or     eax,DWORD PTR [rbp+rax*1+0x8010000]
    2802:	af                   	scas   eax,DWORD PTR es:[rdi]
    2803:	0b 9a 05 00 00 01    	or     ebx,DWORD PTR [rdx+0x1000005]
    2809:	08 b0 0b bf 05 00    	or     BYTE PTR [rax+0x5bf0b],dh
    280f:	00 01                	add    BYTE PTR [rcx],al
    2811:	08 f4                	or     ah,dh
    2813:	16                   	(bad)
    2814:	62 01 00 00 01       	(bad)
    2819:	08 f9                	or     cl,bh
    281b:	16                   	(bad)
    281c:	1f                   	(bad)
    281d:	06                   	(bad)
    281e:	00 00                	add    BYTE PTR [rax],al
    2820:	01 08                	add    DWORD PTR [rax],ecx
    2822:	fa                   	cli
    2823:	16                   	(bad)
    2824:	39 06                	cmp    DWORD PTR [rsi],eax
    2826:	00 00                	add    BYTE PTR [rax],al
    2828:	01 08                	add    DWORD PTR [rax],ecx
    282a:	fc                   	cld
    282b:	16                   	(bad)
    282c:	54                   	push   rsp
    282d:	06                   	(bad)
    282e:	00 00                	add    BYTE PTR [rax],al
    2830:	01 08                	add    DWORD PTR [rax],ecx
    2832:	fd                   	std
    2833:	16                   	(bad)
    2834:	b0 06                	mov    al,0x6
    2836:	00 00                	add    BYTE PTR [rax],al
    2838:	01 08                	add    DWORD PTR [rax],ecx
    283a:	fe                   	(bad)
    283b:	16                   	(bad)
    283c:	6a 06                	push   0x6
    283e:	00 00                	add    BYTE PTR [rax],al
    2840:	01 08                	add    DWORD PTR [rax],ecx
    2842:	ff 16                	call   QWORD PTR [rsi]
    2844:	8d 06                	lea    eax,[rsi]
    2846:	00 00                	add    BYTE PTR [rax],al
    2848:	29 08                	sub    DWORD PTR [rax],ecx
    284a:	00 01                	add    BYTE PTR [rcx],al
    284c:	16                   	(bad)
    284d:	cb                   	retf
    284e:	06                   	(bad)
    284f:	00 00                	add    BYTE PTR [rax],al
    2851:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    2854:	73 00                	jae    2856 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x16>
    2856:	89 15 03 00 00 0e    	mov    DWORD PTR [rip+0xe000003],edx        # e00285f <_end+0xdffc847>
    285c:	07                   	(bad)
    285d:	00 00                	add    BYTE PTR [rax],al
    285f:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    2862:	00 02                	add    BYTE PTR [rdx],al
    2864:	0e                   	(bad)
    2865:	07                   	(bad)
    2866:	00 00                	add    BYTE PTR [rax],al
    2868:	00 0a                	add    BYTE PTR [rdx],cl
    286a:	61                   	(bad)
    286b:	62 73 00 55 1b       	(bad)
    2870:	00 00                	add    BYTE PTR [rax],al
    2872:	00 1d 07 00 00 d8    	add    BYTE PTR [rip+0xffffffffd8000007],bl        # ffffffffd800287f <_end+0xffffffffd7ffc867>
    2878:	02 00                	add    al,BYTE PTR [rax]
    287a:	00 02                	add    BYTE PTR [rdx],al
    287c:	1d 07 00 00 00       	sbb    eax,0x7
    2881:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    2884:	73 00                	jae    2886 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x46>
    2886:	4f 01 03             	rex.WRXB add QWORD PTR [r11],r8
    2889:	00 00                	add    BYTE PTR [rax],al
    288b:	c6 00 00             	mov    BYTE PTR [rax],0x0
    288e:	00 f0                	add    al,dh
    2890:	02 00                	add    al,BYTE PTR [rax]
    2892:	00 02                	add    BYTE PTR [rdx],al
    2894:	c6 00 00             	mov    BYTE PTR [rax],0x0
    2897:	00 00                	add    BYTE PTR [rax],al
    2899:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    289c:	73 00                	jae    289e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x5e>
    289e:	4b 0b 03             	rex.WXB or rax,QWORD PTR [r11]
    28a1:	00 00                	add    BYTE PTR [rax],al
    28a3:	d4                   	(bad)
    28a4:	00 00                	add    BYTE PTR [rax],al
    28a6:	00 08                	add    BYTE PTR [rax],cl
    28a8:	03 00                	add    eax,DWORD PTR [rax]
    28aa:	00 02                	add    BYTE PTR [rdx],al
    28ac:	d4                   	(bad)
    28ad:	00 00                	add    BYTE PTR [rax],al
    28af:	00 00                	add    BYTE PTR [rax],al
    28b1:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    28b4:	73 00                	jae    28b6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x76>
    28b6:	47 f7 02 00 00 b7 03 	rex.RXB test DWORD PTR [r10],0x3b70000
    28bd:	00 00                	add    BYTE PTR [rax],al
    28bf:	20 03                	and    BYTE PTR [rbx],al
    28c1:	00 00                	add    BYTE PTR [rax],al
    28c3:	02 b7 03 00 00 00    	add    dh,BYTE PTR [rdi+0x3]
    28c9:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    28cc:	73 00                	jae    28ce <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x8e>
    28ce:	3d eb 00 00 00       	cmp    eax,0xeb
    28d3:	bf 00 00 00 38       	mov    edi,0x38000000
    28d8:	03 00                	add    eax,DWORD PTR [rax]
    28da:	00 02                	add    BYTE PTR [rdx],al
    28dc:	bf 00 00 00 00       	mov    edi,0x0
    28e1:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    28e4:	73 00                	jae    28e6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xa6>
    28e6:	38 11                	cmp    BYTE PTR [rcx],dl
    28e8:	00 00                	add    BYTE PTR [rax],al
    28ea:	00 70 00             	add    BYTE PTR [rax+0x0],dh
    28ed:	00 00                	add    BYTE PTR [rax],al
    28ef:	50                   	push   rax
    28f0:	03 00                	add    eax,DWORD PTR [rax]
    28f2:	00 02                	add    BYTE PTR [rdx],al
    28f4:	70 00                	jo     28f6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xb6>
    28f6:	00 00                	add    BYTE PTR [rax],al
    28f8:	00 1d 64 69 76 00    	add    BYTE PTR [rip+0x766964],bl        # 769262 <_end+0x76324a>
    28fe:	b5 1e                	mov    ch,0x1e
    2900:	01 00                	add    DWORD PTR [rax],eax
    2902:	00 31                	add    BYTE PTR [rcx],dh
    2904:	01 00                	add    DWORD PTR [rax],eax
    2906:	00 02                	add    BYTE PTR [rdx],al
    2908:	70 00                	jo     290a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xca>
    290a:	00 00                	add    BYTE PTR [rax],al
    290c:	02 70 00             	add    dh,BYTE PTR [rax+0x0]
    290f:	00 00                	add    BYTE PTR [rax],al
    2911:	00 00                	add    BYTE PTR [rax],al
    2913:	06                   	(bad)
    2914:	17                   	(bad)
    2915:	01 00                	add    DWORD PTR [rax],eax
    2917:	00 de                	add    dh,bl
    2919:	02 0c 58             	add    cl,BYTE PTR [rax+rbx*2]
    291c:	00 00                	add    BYTE PTR [rax],al
    291e:	00 80 03 00 00 02    	add    BYTE PTR [rax+0x2000003],al
    2924:	80 03 00             	add    BYTE PTR [rbx],0x0
    2927:	00 00                	add    BYTE PTR [rax],al
    2929:	07                   	(bad)
    292a:	85 03                	test   DWORD PTR [rbx],eax
    292c:	00 00                	add    BYTE PTR [rax],al
    292e:	2a 2b                	sub    ch,BYTE PTR [rbx]
    2930:	dd 00                	fld    QWORD PTR [rax]
    2932:	00 00                	add    BYTE PTR [rax],al
    2934:	07                   	(bad)
    2935:	e3 02                	jrcxz  2939 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xf9>
    2937:	12 dd                	adc    bl,ch
    2939:	00 00                	add    BYTE PTR [rax],al
    293b:	00 58 00             	add    BYTE PTR [rax+0x0],bl
    293e:	00 00                	add    BYTE PTR [rax],al
    2940:	a1 03 00 00 02 80 03 	movabs eax,ds:0x38002000003
    2947:	00 00 
    2949:	00 08                	add    BYTE PTR [rax],cl
    294b:	f2 01 00             	repnz add DWORD PTR [rax],eax
    294e:	00 0a                	add    BYTE PTR [rdx],cl
    2950:	19 01                	sbb    DWORD PTR [rcx],eax
    2952:	b7 03                	mov    bh,0x3
    2954:	00 00                	add    BYTE PTR [rax],al
    2956:	b7 03                	mov    bh,0x3
    2958:	00 00                	add    BYTE PTR [rax],al
    295a:	02 ba 00 00 00 00    	add    bh,BYTE PTR [rdx+0x0]
    2960:	04 08                	add    al,0x8
    2962:	04 1d                	add    al,0x1d
    2964:	02 00                	add    al,BYTE PTR [rax]
    2966:	00 06                	add    BYTE PTR [rsi],al
    2968:	f7 01 00 00 e1 01    	test   DWORD PTR [rcx],0x1e10000
    296e:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    2971:	00 00                	add    BYTE PTR [rax],al
    2973:	d4                   	(bad)
    2974:	03 00                	add    eax,DWORD PTR [rax]
    2976:	00 02                	add    BYTE PTR [rdx],al
    2978:	ba 00 00 00 00       	mov    edx,0x0
    297d:	06                   	(bad)
    297e:	01 02                	add    DWORD PTR [rdx],eax
    2980:	00 00                	add    BYTE PTR [rax],al
    2982:	e6 01                	out    0x1,al
    2984:	01 70 00             	add    DWORD PTR [rax+0x0],esi
    2987:	00 00                	add    BYTE PTR [rax],al
    2989:	ea                   	(bad)
    298a:	03 00                	add    eax,DWORD PTR [rax]
    298c:	00 02                	add    BYTE PTR [rdx],al
    298e:	ba 00 00 00 00       	mov    edx,0x0
    2993:	08 0f                	or     BYTE PTR [rdi],cl
    2995:	01 00                	add    DWORD PTR [rax],eax
    2997:	00 0b                	add    BYTE PTR [rbx],cl
    2999:	14 01                	adc    al,0x1
    299b:	83 00 00             	add    DWORD PTR [rax],0x0
    299e:	00 14 04             	add    BYTE PTR [rsp+rax*1],dl
    29a1:	00 00                	add    BYTE PTR [rax],al
    29a3:	02 94 01 00 00 02 94 	add    dl,BYTE PTR [rcx+rax*1-0x6bfe0000]
    29aa:	01 00                	add    DWORD PTR [rax],eax
    29ac:	00 02                	add    BYTE PTR [rdx],al
    29ae:	ae                   	scas   al,BYTE PTR es:[rdi]
    29af:	00 00                	add    BYTE PTR [rax],al
    29b1:	00 02                	add    BYTE PTR [rdx],al
    29b3:	ae                   	scas   al,BYTE PTR es:[rdi]
    29b4:	00 00                	add    BYTE PTR [rax],al
    29b6:	00 02                	add    BYTE PTR [rdx],al
    29b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29b9:	01 00                	add    DWORD PTR [rax],eax
    29bb:	00 00                	add    BYTE PTR [rax],al
    29bd:	2c 64                	sub    al,0x64
    29bf:	69 76 00 07 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e007
    29c6:	00 01                	add    BYTE PTR [rcx],al
    29c8:	00 00                	add    BYTE PTR [rax],al
    29ca:	30 04 00             	xor    BYTE PTR [rax+rax*1],al
    29cd:	00 02                	add    BYTE PTR [rdx],al
    29cf:	58                   	pop    rax
    29d0:	00 00                	add    BYTE PTR [rax],al
    29d2:	00 02                	add    BYTE PTR [rdx],al
    29d4:	58                   	pop    rax
    29d5:	00 00                	add    BYTE PTR [rax],al
    29d7:	00 00                	add    BYTE PTR [rax],al
    29d9:	06                   	(bad)
    29da:	6a 01                	push   0x1
    29dc:	00 00                	add    BYTE PTR [rax],al
    29de:	05 03 0e 85 00       	add    eax,0x850e03
    29e3:	00 00                	add    BYTE PTR [rax],al
    29e5:	46 04 00             	rex.RX add al,0x0
    29e8:	00 02                	add    BYTE PTR [rdx],al
    29ea:	ba 00 00 00 00       	mov    edx,0x0
    29ef:	06                   	(bad)
    29f0:	c9                   	leave
    29f1:	02 00                	add    al,BYTE PTR [rax]
    29f3:	00 e2                	add    dl,ah
    29f5:	03 0f                	add    ecx,DWORD PTR [rdi]
    29f7:	31 01                	xor    DWORD PTR [rcx],eax
    29f9:	00 00                	add    BYTE PTR [rax],al
    29fb:	61                   	(bad)
    29fc:	04 00                	add    al,0x0
    29fe:	00 02                	add    BYTE PTR [rdx],al
    2a00:	70 00                	jo     2a02 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1c2>
    2a02:	00 00                	add    BYTE PTR [rax],al
    2a04:	02 70 00             	add    dh,BYTE PTR [rax+0x0]
    2a07:	00 00                	add    BYTE PTR [rax],al
    2a09:	00 06                	add    BYTE PTR [rsi],al
    2a0b:	58                   	pop    rax
    2a0c:	02 00                	add    al,BYTE PTR [rax]
    2a0e:	00 26                	add    BYTE PTR [rsi],ah
    2a10:	04 0c                	add    al,0xc
    2a12:	58                   	pop    rax
    2a13:	00 00                	add    BYTE PTR [rax],al
    2a15:	00 7c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],bh
    2a19:	00 02                	add    BYTE PTR [rdx],al
    2a1b:	ba 00 00 00 02       	mov    edx,0x2000000
    2a20:	ae                   	scas   al,BYTE PTR es:[rdi]
    2a21:	00 00                	add    BYTE PTR [rax],al
    2a23:	00 00                	add    BYTE PTR [rax],al
    2a25:	08 5e 02             	or     BYTE PTR [rsi+0x2],bl
    2a28:	00 00                	add    BYTE PTR [rax],al
    2a2a:	0c 75                	or     al,0x75
    2a2c:	01 ae 00 00 00 9c    	add    DWORD PTR [rsi-0x64000000],ebp
    2a32:	04 00                	add    al,0x0
    2a34:	00 02                	add    BYTE PTR [rdx],al
    2a36:	9c                   	pushf
    2a37:	04 00                	add    al,0x0
    2a39:	00 02                	add    BYTE PTR [rdx],al
    2a3b:	ba 00 00 00 02       	mov    edx,0x2000000
    2a40:	ae                   	scas   al,BYTE PTR es:[rdi]
    2a41:	00 00                	add    BYTE PTR [rax],al
    2a43:	00 00                	add    BYTE PTR [rax],al
    2a45:	07                   	(bad)
    2a46:	a1 04 00 00 04 04 05 	movabs eax,ds:0x286050404000004
    2a4d:	86 02 
    2a4f:	00 00                	add    BYTE PTR [rax],al
    2a51:	17                   	(bad)
    2a52:	a1 04 00 00 06 86 01 	movabs eax,ds:0x18606000004
    2a59:	00 00 
    2a5b:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    2a5e:	58                   	pop    rax
    2a5f:	00 00                	add    BYTE PTR [rax],al
    2a61:	00 cd                	add    ch,cl
    2a63:	04 00                	add    al,0x0
    2a65:	00 02                	add    BYTE PTR [rdx],al
    2a67:	9c                   	pushf
    2a68:	04 00                	add    al,0x0
    2a6a:	00 02                	add    BYTE PTR [rdx],al
    2a6c:	ba 00 00 00 02       	mov    edx,0x2000000
    2a71:	ae                   	scas   al,BYTE PTR es:[rdi]
    2a72:	00 00                	add    BYTE PTR [rax],al
    2a74:	00 00                	add    BYTE PTR [rax],al
    2a76:	1e                   	(bad)
    2a77:	25 00 00 00 ca       	and    eax,0xca000000
    2a7c:	03 ed                	add    ebp,ebp
    2a7e:	04 00                	add    al,0x0
    2a80:	00 02                	add    BYTE PTR [rdx],al
    2a82:	83 00 00             	add    DWORD PTR [rax],0x0
    2a85:	00 02                	add    BYTE PTR [rdx],al
    2a87:	ae                   	scas   al,BYTE PTR es:[rdi]
    2a88:	00 00                	add    BYTE PTR [rax],al
    2a8a:	00 02                	add    BYTE PTR [rdx],al
    2a8c:	ae                   	scas   al,BYTE PTR es:[rdi]
    2a8d:	00 00                	add    BYTE PTR [rax],al
    2a8f:	00 02                	add    BYTE PTR [rdx],al
    2a91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a92:	01 00                	add    DWORD PTR [rax],eax
    2a94:	00 00                	add    BYTE PTR [rax],al
    2a96:	2d e0 00 00 00       	sub    eax,0xe0
    2a9b:	07                   	(bad)
    2a9c:	fa                   	cli
    2a9d:	02 0d 00 05 00 00    	add    cl,BYTE PTR [rip+0x500]        # 2fa3 <_Z7testAllPKcjS0_j+0x233>
    2aa3:	02 58 00             	add    bl,BYTE PTR [rax+0x0]
    2aa6:	00 00                	add    BYTE PTR [rax],al
    2aa8:	00 2e                	add    BYTE PTR [rsi],ch
    2aaa:	f2 02 00             	repnz add al,BYTE PTR [rax]
    2aad:	00 07                	add    BYTE PTR [rdi],al
    2aaf:	3d 02 0c 58 00       	cmp    eax,0x580c02
    2ab4:	00 00                	add    BYTE PTR [rax],al
    2ab6:	1e                   	(bad)
    2ab7:	f1                   	int1
    2ab8:	02 00                	add    al,BYTE PTR [rax]
    2aba:	00 3f                	add    BYTE PTR [rdi],bh
    2abc:	02 1e                	add    bl,BYTE PTR [rsi]
    2abe:	05 00 00 02 3c       	add    eax,0x3c020000
    2ac3:	00 00                	add    BYTE PTR [rax],al
    2ac5:	00 00                	add    BYTE PTR [rax],al
    2ac7:	08 c5                	or     ch,al
    2ac9:	01 00                	add    DWORD PTR [rax],eax
    2acb:	00 07                	add    BYTE PTR [rdi],al
    2acd:	76 0f                	jbe    2ade <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x29e>
    2acf:	b7 03                	mov    bh,0x3
    2ad1:	00 00                	add    BYTE PTR [rax],al
    2ad3:	39 05 00 00 02 ba    	cmp    DWORD PTR [rip+0xffffffffba020000],eax        # ffffffffba022ad9 <_end+0xffffffffba01cac1>
    2ad9:	00 00                	add    BYTE PTR [rax],al
    2adb:	00 02                	add    BYTE PTR [rdx],al
    2add:	39 05 00 00 00 07    	cmp    DWORD PTR [rip+0x7000000],eax        # 7002ae3 <_end+0x6ffcacb>
    2ae3:	85 00                	test   DWORD PTR [rax],eax
    2ae5:	00 00                	add    BYTE PTR [rax],al
    2ae7:	0f fe 00             	paddd  mm0,QWORD PTR [rax]
    2aea:	00 00                	add    BYTE PTR [rax],al
    2aec:	d7                   	xlat   BYTE PTR ds:[rbx]
    2aed:	11 f5                	adc    ebp,esi
    2aef:	00 00                	add    BYTE PTR [rax],al
    2af1:	00 70 00             	add    BYTE PTR [rax+0x0],dh
    2af4:	00 00                	add    BYTE PTR [rax],al
    2af6:	61                   	(bad)
    2af7:	05 00 00 02 ba       	add    eax,0xba020000
    2afc:	00 00                	add    BYTE PTR [rax],al
    2afe:	00 02                	add    BYTE PTR [rdx],al
    2b00:	39 05 00 00 02 58    	cmp    DWORD PTR [rip+0x58020000],eax        # 58022b06 <_end+0x5801caee>
    2b06:	00 00                	add    BYTE PTR [rax],al
    2b08:	00 00                	add    BYTE PTR [rax],al
    2b0a:	0f 4a 02             	cmovp  eax,DWORD PTR [rdx]
    2b0d:	00 00                	add    BYTE PTR [rax],al
    2b0f:	db 1a                	fistp  DWORD PTR [rdx]
    2b11:	41 02 00             	add    al,BYTE PTR [r8]
    2b14:	00 43 00             	add    BYTE PTR [rbx+0x0],al
    2b17:	00 00                	add    BYTE PTR [rax],al
    2b19:	84 05 00 00 02 ba    	test   BYTE PTR [rip+0xffffffffba020000],al        # ffffffffba022b1f <_end+0xffffffffba01cb07>
    2b1f:	00 00                	add    BYTE PTR [rax],al
    2b21:	00 02                	add    BYTE PTR [rdx],al
    2b23:	39 05 00 00 02 58    	cmp    DWORD PTR [rip+0x58020000],eax        # 58022b29 <_end+0x5801cb11>
    2b29:	00 00                	add    BYTE PTR [rax],al
    2b2b:	00 00                	add    BYTE PTR [rax],al
    2b2d:	06                   	(bad)
    2b2e:	64 26 00 00          	fs add BYTE PTR fs:[rax],al
    2b32:	9b                   	fwait
    2b33:	03 0c 58             	add    ecx,DWORD PTR [rax+rbx*2]
    2b36:	00 00                	add    BYTE PTR [rax],al
    2b38:	00 9a 05 00 00 02    	add    BYTE PTR [rdx+0x2000005],bl
    2b3e:	ba 00 00 00 00       	mov    edx,0x0
    2b43:	08 06                	or     BYTE PTR [rsi],al
    2b45:	02 00                	add    al,BYTE PTR [rax]
    2b47:	00 0c 8f             	add    BYTE PTR [rdi+rcx*4],cl
    2b4a:	01 ae 00 00 00 ba    	add    DWORD PTR [rsi-0x46000000],ebp
    2b50:	05 00 00 02 85       	add    eax,0x85020000
    2b55:	00 00                	add    BYTE PTR [rax],al
    2b57:	00 02                	add    BYTE PTR [rdx],al
    2b59:	ba 05 00 00 02       	mov    edx,0x2000005
    2b5e:	ae                   	scas   al,BYTE PTR es:[rdi]
    2b5f:	00 00                	add    BYTE PTR [rax],al
    2b61:	00 00                	add    BYTE PTR [rax],al
    2b63:	07                   	(bad)
    2b64:	a8 04                	test   al,0x4
    2b66:	00 00                	add    BYTE PTR [rax],al
    2b68:	08 67 02             	or     BYTE PTR [rdi+0x2],ah
    2b6b:	00 00                	add    BYTE PTR [rax],al
    2b6d:	0c 4f                	or     al,0x4f
    2b6f:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    2b72:	00 00                	add    BYTE PTR [rax],al
    2b74:	da 05 00 00 02 85    	fiadd  DWORD PTR [rip+0xffffffff85020000]        # ffffffff85022b7a <_end+0xffffffff8501cb62>
    2b7a:	00 00                	add    BYTE PTR [rax],al
    2b7c:	00 02                	add    BYTE PTR [rdx],al
    2b7e:	a1 04 00 00 00 2f 37 	movabs eax,ds:0x2372f00000004
    2b85:	02 00 
    2b87:	00 10                	add    BYTE PTR [rax],dl
    2b89:	57                   	push   rdi
    2b8a:	01 0b                	add    DWORD PTR [rbx],ecx
    2b8c:	39 06                	cmp    DWORD PTR [rsi],eax
    2b8e:	00 00                	add    BYTE PTR [rax],al
    2b90:	01 08                	add    DWORD PTR [rax],ecx
    2b92:	cc                   	int3
    2b93:	0b 62 01             	or     esp,DWORD PTR [rdx+0x1]
    2b96:	00 00                	add    BYTE PTR [rax],al
    2b98:	01 08                	add    DWORD PTR [rax],ecx
    2b9a:	dc 0b                	fmul   QWORD PTR [rbx]
    2b9c:	39 06                	cmp    DWORD PTR [rsi],eax
    2b9e:	00 00                	add    BYTE PTR [rax],al
    2ba0:	01 08                	add    DWORD PTR [rax],ecx
    2ba2:	e7 0b                	out    0xb,eax
    2ba4:	54                   	push   rsp
    2ba5:	06                   	(bad)
    2ba6:	00 00                	add    BYTE PTR [rax],al
    2ba8:	01 08                	add    DWORD PTR [rax],ecx
    2baa:	e8 0b 6a 06 00       	call   695ba <_end+0x635a2>
    2baf:	00 01                	add    BYTE PTR [rcx],al
    2bb1:	08 e9                	or     cl,ch
    2bb3:	0b 8d 06 00 00 01    	or     ecx,DWORD PTR [rbp+0x1000006]
    2bb9:	08 eb                	or     bl,ch
    2bbb:	0b b0 06 00 00 01    	or     esi,DWORD PTR [rax+0x1000006]
    2bc1:	08 ec                	or     ah,ch
    2bc3:	0b cb                	or     ecx,ebx
    2bc5:	06                   	(bad)
    2bc6:	00 00                	add    BYTE PTR [rax],al
    2bc8:	1d 64 69 76 00       	sbb    eax,0x766964
    2bcd:	d9 dd                	(bad)
    2bcf:	01 00                	add    DWORD PTR [rax],eax
    2bd1:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
    2bd4:	00 00                	add    BYTE PTR [rax],al
    2bd6:	02 bf 00 00 00 02    	add    bh,BYTE PTR [rdi+0x2000000]
    2bdc:	bf 00 00 00 00       	mov    edi,0x0
    2be1:	00 06                	add    BYTE PTR [rsi],al
    2be3:	c8 02 00 00          	enter  0x2,0x0
    2be7:	e6 03                	out    0x3,al
    2be9:	1e                   	(bad)
    2bea:	62 01 00 00 54 06    	vandps xmm24,xmm31,XMMWORD PTR [r14]
    2bf0:	00 00                	add    BYTE PTR [rax],al
    2bf2:	02 bf 00 00 00 02    	add    bh,BYTE PTR [rdi+0x2000000]
    2bf8:	bf 00 00 00 00       	mov    edi,0x0
    2bfd:	06                   	(bad)
    2bfe:	52                   	push   rdx
    2bff:	02 00                	add    al,BYTE PTR [rax]
    2c01:	00 ed                	add    ch,ch
    2c03:	01 01                	add    DWORD PTR [rcx],eax
    2c05:	bf 00 00 00 6a       	mov    edi,0x6a000000
    2c0a:	06                   	(bad)
    2c0b:	00 00                	add    BYTE PTR [rax],al
    2c0d:	02 ba 00 00 00 00    	add    bh,BYTE PTR [rdx+0x0]
    2c13:	0f 32                	rdmsr
    2c15:	01 00                	add    DWORD PTR [rax],eax
    2c17:	00 ee                	add    dh,ch
    2c19:	16                   	(bad)
    2c1a:	29 01                	sub    DWORD PTR [rcx],eax
    2c1c:	00 00                	add    BYTE PTR [rax],al
    2c1e:	bf 00 00 00 8d       	mov    edi,0x8d000000
    2c23:	06                   	(bad)
    2c24:	00 00                	add    BYTE PTR [rax],al
    2c26:	02 ba 00 00 00 02    	add    bh,BYTE PTR [rdx+0x2000000]
    2c2c:	39 05 00 00 02 58    	cmp    DWORD PTR [rip+0x58020000],eax        # 58022c32 <_end+0x5801cc1a>
    2c32:	00 00                	add    BYTE PTR [rax],al
    2c34:	00 00                	add    BYTE PTR [rax],al
    2c36:	0f bf 02             	movsx  eax,WORD PTR [rdx]
    2c39:	00 00                	add    BYTE PTR [rax],al
    2c3b:	f3 1f                	repz (bad)
    2c3d:	b6 02                	mov    dh,0x2
    2c3f:	00 00                	add    BYTE PTR [rax],al
    2c41:	cd 00                	int    0x0
    2c43:	00 00                	add    BYTE PTR [rax],al
    2c45:	b0 06                	mov    al,0x6
    2c47:	00 00                	add    BYTE PTR [rax],al
    2c49:	02 ba 00 00 00 02    	add    bh,BYTE PTR [rdx+0x2000000]
    2c4f:	39 05 00 00 02 58    	cmp    DWORD PTR [rip+0x58020000],eax        # 58022c55 <_end+0x5801cc3d>
    2c55:	00 00                	add    BYTE PTR [rax],al
    2c57:	00 00                	add    BYTE PTR [rax],al
    2c59:	08 af 02 00 00 07    	or     BYTE PTR [rdi+0x7000002],ch
    2c5f:	7c 0e                	jl     2c6f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x42f>
    2c61:	d4                   	(bad)
    2c62:	00 00                	add    BYTE PTR [rax],al
    2c64:	00 cb                	add    bl,cl
    2c66:	06                   	(bad)
    2c67:	00 00                	add    BYTE PTR [rax],al
    2c69:	02 ba 00 00 00 02    	add    bh,BYTE PTR [rdx+0x2000000]
    2c6f:	39 05 00 00 00 08    	cmp    DWORD PTR [rip+0x8000000],eax        # 8002c75 <_end+0x7ffcc5d>
    2c75:	2b 00                	sub    eax,DWORD PTR [rax]
    2c77:	00 00                	add    BYTE PTR [rax],al
    2c79:	07                   	(bad)
    2c7a:	7f 14                	jg     2c90 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x450>
    2c7c:	c6 00 00             	mov    BYTE PTR [rax],0x0
    2c7f:	00 e6                	add    dh,ah
    2c81:	06                   	(bad)
    2c82:	00 00                	add    BYTE PTR [rax],al
    2c84:	02 ba 00 00 00 02    	add    bh,BYTE PTR [rdx+0x2000000]
    2c8a:	39 05 00 00 00 01    	cmp    DWORD PTR [rip+0x1000000],eax        # 1002c90 <_end+0xffcc78>
    2c90:	0d 27 0c 6a 03       	or     eax,0x36a0c27
    2c95:	00 00                	add    BYTE PTR [rax],al
    2c97:	01 0d 2b 0e 86 03    	add    DWORD PTR [rip+0x3860e2b],ecx        # 3863ac8 <_end+0x385dab0>
    2c9d:	00 00                	add    BYTE PTR [rax],al
    2c9f:	01 0d 2e 0e ed 04    	add    DWORD PTR [rip+0x4ed0e2e],ecx        # 4ed3ad3 <_end+0x4ecdabb>
    2ca5:	00 00                	add    BYTE PTR [rax],al
    2ca7:	01 0d 36 0c 00 01    	add    DWORD PTR [rip+0x1000c36],ecx        # 10038e3 <_end+0xffd8cb>
    2cad:	00 00                	add    BYTE PTR [rax],al
    2caf:	01 0d 37 0c 31 01    	add    DWORD PTR [rip+0x1310c37],ecx        # 13138ec <_end+0x130d8d4>
    2cb5:	00 00                	add    BYTE PTR [rax],al
    2cb7:	04 10                	add    al,0x10
    2cb9:	04 a4                	add    al,0xa4
    2cbb:	02 00                	add    al,BYTE PTR [rax]
    2cbd:	00 01                	add    BYTE PTR [rcx],al
    2cbf:	0d 39 0c a8 02       	or     eax,0x2a80c39
    2cc4:	00 00                	add    BYTE PTR [rax],al
    2cc6:	04 10                	add    al,0x10
    2cc8:	05 0f 02 00 00       	add    eax,0x20f
    2ccd:	01 0d 39 0c c0 02    	add    DWORD PTR [rip+0x2c00c39],ecx        # 2c0390c <_end+0x2bfd8f4>
    2cd3:	00 00                	add    BYTE PTR [rax],al
    2cd5:	01 0d 39 0c d8 02    	add    DWORD PTR [rip+0x2d80c39],ecx        # 2d83914 <_end+0x2d7d8fc>
    2cdb:	00 00                	add    BYTE PTR [rax],al
    2cdd:	01 0d 39 0c f0 02    	add    DWORD PTR [rip+0x2f00c39],ecx        # 2f0391c <_end+0x2efd904>
    2ce3:	00 00                	add    BYTE PTR [rax],al
    2ce5:	01 0d 39 0c 08 03    	add    DWORD PTR [rip+0x3080c39],ecx        # 3083924 <_end+0x307d90c>
    2ceb:	00 00                	add    BYTE PTR [rax],al
    2ced:	01 0d 39 0c 20 03    	add    DWORD PTR [rip+0x3200c39],ecx        # 320392c <_end+0x31fd914>
    2cf3:	00 00                	add    BYTE PTR [rax],al
    2cf5:	01 0d 39 0c 38 03    	add    DWORD PTR [rip+0x3380c39],ecx        # 3383934 <_end+0x337d91c>
    2cfb:	00 00                	add    BYTE PTR [rax],al
    2cfd:	01 0d 3a 0c a1 03    	add    DWORD PTR [rip+0x3a10c3a],ecx        # 3a1393d <_end+0x3a0d925>
    2d03:	00 00                	add    BYTE PTR [rax],al
    2d05:	01 0d 3b 0c be 03    	add    DWORD PTR [rip+0x3be0c3b],ecx        # 3be3946 <_end+0x3bdd92e>
    2d0b:	00 00                	add    BYTE PTR [rax],al
    2d0d:	01 0d 3c 0c d4 03    	add    DWORD PTR [rip+0x3d40c3c],ecx        # 3d4394f <_end+0x3d3d937>
    2d13:	00 00                	add    BYTE PTR [rax],al
    2d15:	01 0d 3d 0c ea 03    	add    DWORD PTR [rip+0x3ea0c3d],ecx        # 3ea3958 <_end+0x3e9d940>
    2d1b:	00 00                	add    BYTE PTR [rax],al
    2d1d:	01 0d 3f 0c 1f 06    	add    DWORD PTR [rip+0x61f0c3f],ecx        # 61f3962 <_end+0x61ed94a>
    2d23:	00 00                	add    BYTE PTR [rax],al
    2d25:	01 0d 3f 0c 50 03    	add    DWORD PTR [rip+0x3500c3f],ecx        # 350396a <_end+0x34fd952>
    2d2b:	00 00                	add    BYTE PTR [rax],al
    2d2d:	01 0d 3f 0c 14 04    	add    DWORD PTR [rip+0x4140c3f],ecx        # 4143972 <_end+0x413d95a>
    2d33:	00 00                	add    BYTE PTR [rax],al
    2d35:	01 0d 41 0c 30 04    	add    DWORD PTR [rip+0x4300c41],ecx        # 430397c <_end+0x42fd964>
    2d3b:	00 00                	add    BYTE PTR [rax],al
    2d3d:	01 0d 43 0c 46 04    	add    DWORD PTR [rip+0x4460c43],ecx        # 4463986 <_end+0x445d96e>
    2d43:	00 00                	add    BYTE PTR [rax],al
    2d45:	01 0d 46 0c 61 04    	add    DWORD PTR [rip+0x4610c46],ecx        # 4613991 <_end+0x460d979>
    2d4b:	00 00                	add    BYTE PTR [rax],al
    2d4d:	01 0d 47 0c 7c 04    	add    DWORD PTR [rip+0x47c0c47],ecx        # 47c399a <_end+0x47bd982>
    2d53:	00 00                	add    BYTE PTR [rax],al
    2d55:	01 0d 48 0c ad 04    	add    DWORD PTR [rip+0x4ad0c48],ecx        # 4ad39a3 <_end+0x4acd98b>
    2d5b:	00 00                	add    BYTE PTR [rax],al
    2d5d:	01 0d 4a 0c cd 04    	add    DWORD PTR [rip+0x4cd0c4a],ecx        # 4cd39ad <_end+0x4ccd995>
    2d63:	00 00                	add    BYTE PTR [rax],al
    2d65:	01 0d 4b 0c 00 05    	add    DWORD PTR [rip+0x5000c4b],ecx        # 50039b6 <_end+0x4ffd99e>
    2d6b:	00 00                	add    BYTE PTR [rax],al
    2d6d:	01 0d 4d 0c 0d 05    	add    DWORD PTR [rip+0x50d0c4d],ecx        # 50d39c0 <_end+0x50cd9a8>
    2d73:	00 00                	add    BYTE PTR [rax],al
    2d75:	01 0d 4e 0c 1e 05    	add    DWORD PTR [rip+0x51e0c4e],ecx        # 51e39c9 <_end+0x51dd9b1>
    2d7b:	00 00                	add    BYTE PTR [rax],al
    2d7d:	01 0d 4f 0c 3e 05    	add    DWORD PTR [rip+0x53e0c4f],ecx        # 53e39d2 <_end+0x53dd9ba>
    2d83:	00 00                	add    BYTE PTR [rax],al
    2d85:	01 0d 50 0c 61 05    	add    DWORD PTR [rip+0x5610c50],ecx        # 56139db <_end+0x560d9c3>
    2d8b:	00 00                	add    BYTE PTR [rax],al
    2d8d:	01 0d 51 0c 84 05    	add    DWORD PTR [rip+0x5840c51],ecx        # 58439e4 <_end+0x583d9cc>
    2d93:	00 00                	add    BYTE PTR [rax],al
    2d95:	01 0d 53 0c 9a 05    	add    DWORD PTR [rip+0x59a0c53],ecx        # 59a39ee <_end+0x599d9d6>
    2d9b:	00 00                	add    BYTE PTR [rax],al
    2d9d:	01 0d 54 0c bf 05    	add    DWORD PTR [rip+0x5bf0c54],ecx        # 5bf39f7 <_end+0x5bed9df>
    2da3:	00 00                	add    BYTE PTR [rax],al
    2da5:	05 61 06 00 00       	add    eax,0x661
    2daa:	0e                   	(bad)
    2dab:	29 13                	sub    DWORD PTR [rbx],edx
    2dad:	08 08                	or     BYTE PTR [rax],cl
    2daf:	00 00                	add    BYTE PTR [rax],al
    2db1:	10 bf 00 00 00 14    	adc    BYTE PTR [rdi+0x14000000],bh
    2db7:	08 00                	or     BYTE PTR [rax],al
    2db9:	00 11                	add    BYTE PTR [rcx],dl
    2dbb:	01 00                	add    DWORD PTR [rax],eax
    2dbd:	05 83 06 00 00       	add    eax,0x683
    2dc2:	0e                   	(bad)
    2dc3:	35 13 20 08 00       	xor    eax,0x82013
    2dc8:	00 10                	add    BYTE PTR [rax],dl
    2dca:	bf 00 00 00 2c       	mov    edi,0x2c000000
    2dcf:	08 00                	or     BYTE PTR [rax],al
    2dd1:	00 11                	add    BYTE PTR [rcx],dl
    2dd3:	01 00                	add    DWORD PTR [rax],eax
    2dd5:	05 3e 06 00 00       	add    eax,0x63e
    2dda:	02 2d 0d 38 08 00    	add    ch,BYTE PTR [rip+0x8380d]        # 865ed <_end+0x805d5>
    2de0:	00 10                	add    BYTE PTR [rax],dl
    2de2:	58                   	pop    rax
    2de3:	00 00                	add    BYTE PTR [rax],al
    2de5:	00 44 08 00          	add    BYTE PTR [rax+rcx*1+0x0],al
    2de9:	00 11                	add    BYTE PTR [rcx],dl
    2deb:	07                   	(bad)
    2dec:	00 05 68 04 00 00    	add    BYTE PTR [rip+0x468],al        # 325a <_Z7testAllPKcjS0_j+0x4ea>
    2df2:	02 39                	add    bh,BYTE PTR [rcx]
    2df4:	13 50 08             	adc    edx,DWORD PTR [rax+0x8]
    2df7:	00 00                	add    BYTE PTR [rax],al
    2df9:	10 bf 00 00 00 5c    	adc    BYTE PTR [rdi+0x5c000000],bh
    2dff:	08 00                	or     BYTE PTR [rax],al
    2e01:	00 11                	add    BYTE PTR [rcx],dl
    2e03:	03 00                	add    eax,DWORD PTR [rax]
    2e05:	04 02                	add    al,0x2
    2e07:	04 00                	add    al,0x0
    2e09:	00 00                	add    BYTE PTR [rax],al
    2e0b:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    2e0e:	04 ce                	add    al,0xce
    2e10:	02 00                	add    al,BYTE PTR [rax]
    2e12:	00 30                	add    BYTE PTR [rax],dh
    2e14:	94                   	xchg   esp,eax
    2e15:	08 00                	or     BYTE PTR [rax],al
    2e17:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    2e1a:	11 10                	adc    DWORD PTR [rax],edx
    2e1c:	9f                   	lahf
    2e1d:	08 00                	or     BYTE PTR [rax],al
    2e1f:	00 0c 95 03 00 00 0f 	add    BYTE PTR [rdx*4+0xf000003],cl
    2e26:	12 0d 44 08 00 00    	adc    cl,BYTE PTR [rip+0x844]        # 3670 <_Z21standartDeviationTimePdjd+0x130>
    2e2c:	00 0c 70             	add    BYTE PTR [rax+rsi*2],cl
    2e2f:	04 00                	add    al,0x0
    2e31:	00 0f                	add    BYTE PTR [rdi],cl
    2e33:	13 0e                	adc    ecx,DWORD PTR [rsi]
    2e35:	96                   	xchg   esi,eax
    2e36:	00 00                	add    BYTE PTR [rax],al
    2e38:	00 20                	add    BYTE PTR [rax],ah
    2e3a:	0c 45                	or     al,0x45
    2e3c:	06                   	(bad)
    2e3d:	00 00                	add    BYTE PTR [rax],al
    2e3f:	0f 14 0e             	unpcklps xmm1,XMMWORD PTR [rsi]
    2e42:	96                   	xchg   esi,eax
    2e43:	00 00                	add    BYTE PTR [rax],al
    2e45:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    2e48:	05 94 08 00 00       	add    eax,0x894
    2e4d:	0f 15 03             	unpckhps xmm0,XMMWORD PTR [rbx]
    2e50:	6a 08                	push   0x8
    2e52:	00 00                	add    BYTE PTR [rax],al
    2e54:	1a 40 09             	sbb    al,BYTE PTR [rax+0x9]
    2e57:	00 00                	add    BYTE PTR [rax],al
    2e59:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2e5a:	60                   	(bad)
    2e5b:	09 00                	or     DWORD PTR [rax],eax
    2e5d:	00 96 00 00 00 90    	add    BYTE PTR [rsi-0x70000000],dl
    2e63:	1d 00 00 00 00       	sbb    eax,0x0
    2e68:	00 00                	add    BYTE PTR [rax],al
    2e6a:	05 01 00 00 00       	add    eax,0x1
    2e6f:	00 00                	add    BYTE PTR [rax],al
    2e71:	00 01                	add    BYTE PTR [rcx],al
    2e73:	9c                   	pushf
    2e74:	1a 09                	sbb    cl,BYTE PTR [rcx]
    2e76:	00 00                	add    BYTE PTR [rax],al
    2e78:	1f                   	(bad)
    2e79:	95                   	xchg   ebp,eax
    2e7a:	03 00                	add    eax,DWORD PTR [rax]
    2e7c:	00 ad 21 9f 08 00    	add    BYTE PTR [rbp+0x89f21],ch
    2e82:	00 02                	add    BYTE PTR [rdx],al
    2e84:	91                   	xchg   ecx,eax
    2e85:	00 0b                	add    BYTE PTR [rbx],cl
    2e87:	70 04                	jo     2e8d <_Z7testAllPKcjS0_j+0x11d>
    2e89:	00 00                	add    BYTE PTR [rax],al
    2e8b:	ae                   	scas   al,BYTE PTR es:[rdi]
    2e8c:	0e                   	(bad)
    2e8d:	96                   	xchg   esi,eax
    2e8e:	00 00                	add    BYTE PTR [rax],al
    2e90:	00 b0 08 00 00 92    	add    BYTE PTR [rax-0x6dfffff8],dh
    2e96:	08 00                	or     BYTE PTR [rax],al
    2e98:	00 0b                	add    BYTE PTR [rbx],cl
    2e9a:	13 09                	adc    ecx,DWORD PTR [rcx]
    2e9c:	00 00                	add    BYTE PTR [rax],al
    2e9e:	af                   	scas   eax,DWORD PTR es:[rdi]
    2e9f:	0e                   	(bad)
    2ea0:	96                   	xchg   esi,eax
    2ea1:	00 00                	add    BYTE PTR [rax],al
    2ea3:	00 1e                	add    BYTE PTR [rsi],bl
    2ea5:	0e                   	(bad)
    2ea6:	00 00                	add    BYTE PTR [rax],al
    2ea8:	fa                   	cli
    2ea9:	0d 00 00 0e a9       	or     eax,0xa90e0000
    2eae:	01 00                	add    DWORD PTR [rax],eax
    2eb0:	00 12                	add    BYTE PTR [rdx],dl
    2eb2:	69 00 b0 58 00 00    	imul   eax,DWORD PTR [rax],0x58b0
    2eb8:	00 5f 10             	add    BYTE PTR [rdi+0x10],bl
    2ebb:	00 00                	add    BYTE PTR [rax],al
    2ebd:	4d 10 00             	rex.WRB adc BYTE PTR [r8],r8b
    2ec0:	00 00                	add    BYTE PTR [rax],al
    2ec2:	00 1a                	add    BYTE PTR [rdx],bl
    2ec4:	ce                   	(bad)
    2ec5:	08 00                	or     BYTE PTR [rax],al
    2ec7:	00 9f 7b 09 00 00    	add    BYTE PTR [rdi+0x97b],bl
    2ecd:	96                   	xchg   esi,eax
    2ece:	00 00                	add    BYTE PTR [rax],al
    2ed0:	00 80 1b 00 00 00    	add    BYTE PTR [rax+0x1b],al
    2ed6:	00 00                	add    BYTE PTR [rax],al
    2ed8:	00 06                	add    BYTE PTR [rsi],al
    2eda:	02 00                	add    al,BYTE PTR [rax]
    2edc:	00 00                	add    BYTE PTR [rax],al
    2ede:	00 00                	add    BYTE PTR [rax],al
    2ee0:	00 01                	add    BYTE PTR [rcx],al
    2ee2:	9c                   	pushf
    2ee3:	91                   	xchg   ecx,eax
    2ee4:	09 00                	or     DWORD PTR [rax],eax
    2ee6:	00 1f                	add    BYTE PTR [rdi],bl
    2ee8:	95                   	xchg   ebp,eax
    2ee9:	03 00                	add    eax,DWORD PTR [rax]
    2eeb:	00 9f 25 9f 08 00    	add    BYTE PTR [rdi+0x89f25],bl
    2ef1:	00 02                	add    BYTE PTR [rdx],al
    2ef3:	91                   	xchg   ecx,eax
    2ef4:	00 12                	add    BYTE PTR [rdx],dl
    2ef6:	41 00 a0 96 00 00 00 	add    BYTE PTR [r8+0x96],spl
    2efd:	c3                   	ret
    2efe:	10 00                	adc    BYTE PTR [rax],al
    2f00:	00 a7 10 00 00 12    	add    BYTE PTR [rdi+0x12000010],ah
    2f06:	42 00 a1 96 00 00 00 	rex.X add BYTE PTR [rcx+0x96],spl
    2f0d:	3e 11 00             	ds adc DWORD PTR [rax],eax
    2f10:	00 28                	add    BYTE PTR [rax],ch
    2f12:	11 00                	adc    DWORD PTR [rax],eax
    2f14:	00 31                	add    BYTE PTR [rcx],dh
    2f16:	9d                   	popf
    2f17:	08 00                	or     BYTE PTR [rax],al
    2f19:	00 01                	add    BYTE PTR [rcx],al
    2f1b:	a2 0e 96 00 00 00 f1 	movabs ds:0xefff1000000960e,al
    2f22:	ff 0e 
    2f24:	9e                   	sahf
    2f25:	01 00                	add    DWORD PTR [rax],eax
    2f27:	00 12                	add    BYTE PTR [rdx],dl
    2f29:	69 00 a4 58 00 00    	imul   eax,DWORD PTR [rax],0x58a4
    2f2f:	00 a0 11 00 00 8e    	add    BYTE PTR [rax-0x71ffffef],ah
    2f35:	11 00                	adc    DWORD PTR [rax],eax
    2f37:	00 00                	add    BYTE PTR [rax],al
    2f39:	00 1b                	add    BYTE PTR [rbx],bl
    2f3b:	32 09                	xor    cl,BYTE PTR [rcx]
    2f3d:	00 00                	add    BYTE PTR [rax],al
    2f3f:	84 9a 09 00 00 96    	test   BYTE PTR [rdx-0x69fffff7],bl
    2f45:	00 00                	add    BYTE PTR [rax],al
    2f47:	00 ba 09 00 00 13    	add    BYTE PTR [rdx+0x13000009],bh
    2f4d:	95                   	xchg   ebp,eax
    2f4e:	03 00                	add    eax,DWORD PTR [rax]
    2f50:	00 84 21 9f 08 00 00 	add    BYTE PTR [rcx+riz*1+0x89f],al
    2f57:	14 70                	adc    al,0x70
    2f59:	04 00                	add    al,0x0
    2f5b:	00 85 0e 96 00 00    	add    BYTE PTR [rbp+0x960e],al
    2f61:	00 00                	add    BYTE PTR [rax],al
    2f63:	1b 4e 09             	sbb    ecx,DWORD PTR [rsi+0x9]
    2f66:	00 00                	add    BYTE PTR [rax],al
    2f68:	50                   	push   rax
    2f69:	f4                   	hlt
    2f6a:	08 00                	or     BYTE PTR [rax],al
    2f6c:	00 96 00 00 00 e3    	add    BYTE PTR [rsi-0x1d000000],dl
    2f72:	09 00                	or     DWORD PTR [rax],eax
    2f74:	00 13                	add    BYTE PTR [rbx],dl
    2f76:	95                   	xchg   ebp,eax
    2f77:	03 00                	add    eax,DWORD PTR [rax]
    2f79:	00 50 25             	add    BYTE PTR [rax+0x25],dl
    2f7c:	9f                   	lahf
    2f7d:	08 00                	or     BYTE PTR [rax],al
    2f7f:	00 14 70             	add    BYTE PTR [rax+rsi*2],dl
    2f82:	04 00                	add    al,0x0
    2f84:	00 7d 12             	add    BYTE PTR [rbp+0x12],bh
    2f87:	96                   	xchg   esi,eax
    2f88:	00 00                	add    BYTE PTR [rax],al
    2f8a:	00 00                	add    BYTE PTR [rax],al
    2f8c:	1a 18                	sbb    bl,BYTE PTR [rax]
    2f8e:	09 00                	or     DWORD PTR [rax],eax
    2f90:	00 32                	add    BYTE PTR [rdx],dh
    2f92:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2f93:	08 00                	or     BYTE PTR [rax],al
    2f95:	00 96 00 00 00 00    	add    BYTE PTR [rsi+0x0],dl
    2f9b:	1b 00                	sbb    eax,DWORD PTR [rax]
    2f9d:	00 00                	add    BYTE PTR [rax],al
    2f9f:	00 00                	add    BYTE PTR [rax],al
    2fa1:	00 59 00             	add    BYTE PTR [rcx+0x0],bl
    2fa4:	00 00                	add    BYTE PTR [rax],al
    2fa6:	00 00                	add    BYTE PTR [rax],al
    2fa8:	00 00                	add    BYTE PTR [rax],al
    2faa:	01 9c ba 0d 00 00 32 	add    DWORD PTR [rdx+rdi*4+0x3200000d],ebx
    2fb1:	95                   	xchg   ebp,eax
    2fb2:	03 00                	add    eax,DWORD PTR [rax]
    2fb4:	00 01                	add    BYTE PTR [rcx],al
    2fb6:	32 2d 9f 08 00 00    	xor    ch,BYTE PTR [rip+0x89f]        # 385b <_Z27standartDeviationCollisionsP7HashMapf+0x1bb>
    2fbc:	eb 11                	jmp    2fcf <_Z7testAllPKcjS0_j+0x25f>
    2fbe:	00 00                	add    BYTE PTR [rax],al
    2fc0:	e9 11 00 00 0b       	jmp    b002fd6 <_end+0xaffcfbe>
    2fc5:	70 04                	jo     2fcb <_Z7testAllPKcjS0_j+0x25b>
    2fc7:	00 00                	add    BYTE PTR [rax],al
    2fc9:	33 0e                	xor    ecx,DWORD PTR [rsi]
    2fcb:	96                   	xchg   esi,eax
    2fcc:	00 00                	add    BYTE PTR [rax],al
    2fce:	00 f8                	add    al,bh
    2fd0:	11 00                	adc    DWORD PTR [rax],eax
    2fd2:	00 f6                	add    dh,dh
    2fd4:	11 00                	adc    DWORD PTR [rax],eax
    2fd6:	00 33                	add    BYTE PTR [rbx],dh
    2fd8:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    2fdb:	00 01                	add    BYTE PTR [rcx],al
    2fdd:	34 0e                	xor    al,0xe
    2fdf:	a2 00 00 00 11 11 11 	movabs ds:0x1121111111000000,al
    2fe6:	21 11 
    2fe8:	12 12                	adc    dl,BYTE PTR [rdx]
    2fea:	12 0b                	adc    cl,BYTE PTR [rbx]
    2fec:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2fed:	03 00                	add    eax,DWORD PTR [rax]
    2fef:	00 3f                	add    BYTE PTR [rdi],bh
    2ff1:	12 a2 00 00 00 03    	adc    ah,BYTE PTR [rdx+0x3000000]
    2ff7:	12 00                	adc    al,BYTE PTR [rax]
    2ff9:	00 ff                	add    bh,bh
    2ffb:	11 00                	adc    DWORD PTR [rax],eax
    2ffd:	00 0b                	add    BYTE PTR [rbx],cl
    2fff:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3000:	03 00                	add    eax,DWORD PTR [rax]
    3002:	00 40 12             	add    BYTE PTR [rax+0x12],al
    3005:	a2 00 00 00 12 12 00 	movabs ds:0xe00001212000000,al
    300c:	00 0e 
    300e:	12 00                	adc    al,BYTE PTR [rax]
    3010:	00 0b                	add    BYTE PTR [rbx],cl
    3012:	b3 03                	mov    bl,0x3
    3014:	00 00                	add    BYTE PTR [rax],al
    3016:	41 12 a2 00 00 00 21 	adc    spl,BYTE PTR [r10+0x21000000]
    301d:	12 00                	adc    al,BYTE PTR [rax]
    301f:	00 1d 12 00 00 0b    	add    BYTE PTR [rip+0xb000012],bl        # b003037 <_end+0xaffd01f>
    3025:	b9 03 00 00 42       	mov    ecx,0x42000003
    302a:	12 a2 00 00 00 30    	adc    ah,BYTE PTR [rdx+0x30000000]
    3030:	12 00                	adc    al,BYTE PTR [rax]
    3032:	00 2c 12             	add    BYTE PTR [rdx+rdx*1],ch
    3035:	00 00                	add    BYTE PTR [rax],al
    3037:	0d 0f 0e 00 00       	or     eax,0xe0f
    303c:	04 1b                	add    al,0x1b
    303e:	00 00                	add    BYTE PTR [rax],al
    3040:	00 00                	add    BYTE PTR [rax],al
    3042:	00 00                	add    BYTE PTR [rax],al
    3044:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    3047:	00 00                	add    BYTE PTR [rax],al
    3049:	3f                   	(bad)
    304a:	2e 42 0b 00          	cs rex.X or eax,DWORD PTR [rax]
    304e:	00 03                	add    BYTE PTR [rbx],al
    3050:	30 0e                	xor    BYTE PTR [rsi],cl
    3052:	00 00                	add    BYTE PTR [rax],al
    3054:	3d 12 00 00 3b       	cmp    eax,0x3b000012
    3059:	12 00                	adc    al,BYTE PTR [rax]
    305b:	00 03                	add    BYTE PTR [rbx],al
    305d:	23 0e                	and    ecx,DWORD PTR [rsi]
    305f:	00 00                	add    BYTE PTR [rax],al
    3061:	46 12 00             	rex.RX adc r8b,BYTE PTR [rax]
    3064:	00 44 12 00          	add    BYTE PTR [rdx+rdx*1+0x0],al
    3068:	00 0e                	add    BYTE PTR [rsi],cl
    306a:	50                   	push   rax
    306b:	01 00                	add    DWORD PTR [rax],eax
    306d:	00 15 3d 0e 00 00    	add    BYTE PTR [rip+0xe3d],dl        # 3eb0 <_fini+0x4dc>
    3073:	4f 12 00             	rex.WRXB adc r8b,BYTE PTR [r8]
    3076:	00 4d 12             	add    BYTE PTR [rbp+0x12],cl
    3079:	00 00                	add    BYTE PTR [rax],al
    307b:	34 4b                	xor    al,0x4b
    307d:	0e                   	(bad)
    307e:	00 00                	add    BYTE PTR [rax],al
    3080:	04 1b                	add    al,0x1b
    3082:	00 00                	add    BYTE PTR [rax],al
    3084:	00 00                	add    BYTE PTR [rax],al
    3086:	00 00                	add    BYTE PTR [rax],al
    3088:	05 04 1b 00 00       	add    eax,0x1b04
    308d:	00 00                	add    BYTE PTR [rax],al
    308f:	00 00                	add    BYTE PTR [rax],al
    3091:	06                   	(bad)
    3092:	00 00                	add    BYTE PTR [rax],al
    3094:	00 00                	add    BYTE PTR [rax],al
    3096:	00 00                	add    BYTE PTR [rax],al
    3098:	00 02                	add    BYTE PTR [rdx],al
    309a:	30 02                	xor    BYTE PTR [rdx],al
    309c:	2a 13                	sub    dl,BYTE PTR [rbx]
    309e:	0b 00                	or     eax,DWORD PTR [rax]
    30a0:	00 03                	add    BYTE PTR [rbx],al
    30a2:	6c                   	ins    BYTE PTR es:[rdi],dx
    30a3:	0e                   	(bad)
    30a4:	00 00                	add    BYTE PTR [rax],al
    30a6:	57                   	push   rdi
    30a7:	12 00                	adc    al,BYTE PTR [rax]
    30a9:	00 55 12             	add    BYTE PTR [rbp+0x12],dl
    30ac:	00 00                	add    BYTE PTR [rax],al
    30ae:	03 5f 0e             	add    ebx,DWORD PTR [rdi+0xe]
    30b1:	00 00                	add    BYTE PTR [rax],al
    30b3:	60                   	(bad)
    30b4:	12 00                	adc    al,BYTE PTR [rax]
    30b6:	00 5e 12             	add    BYTE PTR [rsi+0x12],bl
    30b9:	00 00                	add    BYTE PTR [rax],al
    30bb:	00 1c a9             	add    BYTE PTR [rcx+rbp*4],bl
    30be:	0e                   	(bad)
    30bf:	00 00                	add    BYTE PTR [rax],al
    30c1:	0a 1b                	or     bl,BYTE PTR [rbx]
    30c3:	00 00                	add    BYTE PTR [rax],al
    30c5:	00 00                	add    BYTE PTR [rax],al
    30c7:	00 00                	add    BYTE PTR [rax],al
    30c9:	02 57 01             	add    dl,BYTE PTR [rdi+0x1]
    30cc:	00 00                	add    BYTE PTR [rax],al
    30ce:	03 ca                	add    ecx,edx
    30d0:	0e                   	(bad)
    30d1:	00 00                	add    BYTE PTR [rax],al
    30d3:	69 12 00 00 67 12    	imul   edx,DWORD PTR [rdx],0x12670000
    30d9:	00 00                	add    BYTE PTR [rax],al
    30db:	03 bd 0e 00 00 72    	add    edi,DWORD PTR [rbp+0x7200000e]
    30e1:	12 00                	adc    al,BYTE PTR [rax]
    30e3:	00 70 12             	add    BYTE PTR [rax+0x12],dh
    30e6:	00 00                	add    BYTE PTR [rax],al
    30e8:	00 00                	add    BYTE PTR [rax],al
    30ea:	00 0d 7a 0e 00 00    	add    BYTE PTR [rip+0xe7a],cl        # 3f6a <_fini+0x596>
    30f0:	43 1b 00             	rex.XB sbb eax,DWORD PTR [r8]
    30f3:	00 00                	add    BYTE PTR [rax],al
    30f5:	00 00                	add    BYTE PTR [rax],al
    30f7:	00 02                	add    BYTE PTR [rdx],al
    30f9:	5e                   	pop    rsi
    30fa:	01 00                	add    DWORD PTR [rax],eax
    30fc:	00 46 1a             	add    BYTE PTR [rsi+0x1a],al
    30ff:	6d                   	ins    DWORD PTR es:[rdi],dx
    3100:	0b 00                	or     eax,DWORD PTR [rax]
    3102:	00 20                	add    BYTE PTR [rax],ah
    3104:	9b                   	fwait
    3105:	0e                   	(bad)
    3106:	00 00                	add    BYTE PTR [rax],al
    3108:	03 8e 0e 00 00 7a    	add    ecx,DWORD PTR [rsi+0x7a00000e]
    310e:	12 00                	adc    al,BYTE PTR [rax]
    3110:	00 78 12             	add    BYTE PTR [rax+0x12],bh
    3113:	00 00                	add    BYTE PTR [rax],al
    3115:	00 0d 0f 0e 00 00    	add    BYTE PTR [rip+0xe0f],cl        # 3f2a <_fini+0x556>
    311b:	22 1b                	and    bl,BYTE PTR [rbx]
    311d:	00 00                	add    BYTE PTR [rax],al
    311f:	00 00                	add    BYTE PTR [rax],al
    3121:	00 00                	add    BYTE PTR [rax],al
    3123:	02 6b 01             	add    ch,BYTE PTR [rbx+0x1]
    3126:	00 00                	add    BYTE PTR [rax],al
    3128:	41                   	rex.B
    3129:	2e 15 0c 00 00 03    	cs adc eax,0x300000c
    312f:	30 0e                	xor    BYTE PTR [rsi],cl
    3131:	00 00                	add    BYTE PTR [rax],al
    3133:	8b 12                	mov    edx,DWORD PTR [rdx]
    3135:	00 00                	add    BYTE PTR [rax],al
    3137:	89 12                	mov    DWORD PTR [rdx],edx
    3139:	00 00                	add    BYTE PTR [rax],al
    313b:	03 23                	add    esp,DWORD PTR [rbx]
    313d:	0e                   	(bad)
    313e:	00 00                	add    BYTE PTR [rax],al
    3140:	94                   	xchg   esp,eax
    3141:	12 00                	adc    al,BYTE PTR [rax]
    3143:	00 92 12 00 00 0e    	add    BYTE PTR [rdx+0xe000012],dl
    3149:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
    314c:	00 15 3d 0e 00 00    	add    BYTE PTR [rip+0xe3d],dl        # 3f8f <_fini+0x5bb>
    3152:	9d                   	popf
    3153:	12 00                	adc    al,BYTE PTR [rax]
    3155:	00 9b 12 00 00 35    	add    BYTE PTR [rbx+0x35000012],bl
    315b:	4b 0e                	rex.WXB (bad)
    315d:	00 00                	add    BYTE PTR [rax],al
    315f:	22 1b                	and    bl,BYTE PTR [rbx]
    3161:	00 00                	add    BYTE PTR [rax],al
    3163:	00 00                	add    BYTE PTR [rax],al
    3165:	00 00                	add    BYTE PTR [rax],al
    3167:	04 75                	add    al,0x75
    3169:	01 00                	add    DWORD PTR [rax],eax
    316b:	00 02                	add    BYTE PTR [rdx],al
    316d:	30 02                	xor    BYTE PTR [rdx],al
    316f:	2a e6                	sub    ah,dh
    3171:	0b 00                	or     eax,DWORD PTR [rax]
    3173:	00 03                	add    BYTE PTR [rbx],al
    3175:	6c                   	ins    BYTE PTR es:[rdi],dx
    3176:	0e                   	(bad)
    3177:	00 00                	add    BYTE PTR [rax],al
    3179:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    317a:	12 00                	adc    al,BYTE PTR [rax]
    317c:	00 a3 12 00 00 03    	add    BYTE PTR [rbx+0x3000012],ah
    3182:	5f                   	pop    rdi
    3183:	0e                   	(bad)
    3184:	00 00                	add    BYTE PTR [rax],al
    3186:	ae                   	scas   al,BYTE PTR es:[rdi]
    3187:	12 00                	adc    al,BYTE PTR [rax]
    3189:	00 ac 12 00 00 00 1c 	add    BYTE PTR [rdx+rdx*1+0x1c000000],ch
    3190:	a9 0e 00 00 28       	test   eax,0x2800000e
    3195:	1b 00                	sbb    eax,DWORD PTR [rax]
    3197:	00 00                	add    BYTE PTR [rax],al
    3199:	00 00                	add    BYTE PTR [rax],al
    319b:	00 02                	add    BYTE PTR [rdx],al
    319d:	7c 01                	jl     31a0 <_Z7testAllPKcjS0_j+0x430>
    319f:	00 00                	add    BYTE PTR [rax],al
    31a1:	03 ca                	add    ecx,edx
    31a3:	0e                   	(bad)
    31a4:	00 00                	add    BYTE PTR [rax],al
    31a6:	b7 12                	mov    bh,0x12
    31a8:	00 00                	add    BYTE PTR [rax],al
    31aa:	b5 12                	mov    ch,0x12
    31ac:	00 00                	add    BYTE PTR [rax],al
    31ae:	03 bd 0e 00 00 c0    	add    edi,DWORD PTR [rbp-0x3ffffff2]
    31b4:	12 00                	adc    al,BYTE PTR [rax]
    31b6:	00 be 12 00 00 00    	add    BYTE PTR [rsi+0x12],bh
    31bc:	00 00                	add    BYTE PTR [rax],al
    31be:	21 0f                	and    DWORD PTR [rdi],ecx
    31c0:	0e                   	(bad)
    31c1:	00 00                	add    BYTE PTR [rax],al
    31c3:	1c 1b                	sbb    al,0x1b
    31c5:	00 00                	add    BYTE PTR [rax],al
    31c7:	00 00                	add    BYTE PTR [rax],al
    31c9:	00 00                	add    BYTE PTR [rax],al
    31cb:	02 1c 1b             	add    bl,BYTE PTR [rbx+rbx*1]
    31ce:	00 00                	add    BYTE PTR [rax],al
    31d0:	00 00                	add    BYTE PTR [rax],al
    31d2:	00 00                	add    BYTE PTR [rax],al
    31d4:	06                   	(bad)
    31d5:	00 00                	add    BYTE PTR [rax],al
    31d7:	00 00                	add    BYTE PTR [rax],al
    31d9:	00 00                	add    BYTE PTR [rax],al
    31db:	00 40 2e             	add    BYTE PTR [rax+0x2e],al
    31de:	9e                   	sahf
    31df:	0c 00                	or     al,0x0
    31e1:	00 03                	add    BYTE PTR [rbx],al
    31e3:	30 0e                	xor    BYTE PTR [rsi],cl
    31e5:	00 00                	add    BYTE PTR [rax],al
    31e7:	c8 12 00 00          	enter  0x12,0x0
    31eb:	c6                   	(bad)
    31ec:	12 00                	adc    al,BYTE PTR [rax]
    31ee:	00 03                	add    BYTE PTR [rbx],al
    31f0:	23 0e                	and    ecx,DWORD PTR [rsi]
    31f2:	00 00                	add    BYTE PTR [rax],al
    31f4:	d1 12                	rcl    DWORD PTR [rdx],1
    31f6:	00 00                	add    BYTE PTR [rax],al
    31f8:	cf                   	iret
    31f9:	12 00                	adc    al,BYTE PTR [rax]
    31fb:	00 15 3d 0e 00 00    	add    BYTE PTR [rip+0xe3d],dl        # 403e <_IO_stdin_used+0x3e>
    3201:	da 12                	ficom  DWORD PTR [rdx]
    3203:	00 00                	add    BYTE PTR [rax],al
    3205:	d8 12                	fcom   DWORD PTR [rdx]
    3207:	00 00                	add    BYTE PTR [rax],al
    3209:	36 a9 0e 00 00 1c    	ss test eax,0x1c00000e
    320f:	1b 00                	sbb    eax,DWORD PTR [rax]
    3211:	00 00                	add    BYTE PTR [rax],al
    3213:	00 00                	add    BYTE PTR [rax],al
    3215:	00 05 1c 1b 00 00    	add    BYTE PTR [rip+0x1b1c],al        # 4d37 <__FRAME_END__+0x3>
    321b:	00 00                	add    BYTE PTR [rax],al
    321d:	00 00                	add    BYTE PTR [rax],al
    321f:	06                   	(bad)
    3220:	00 00                	add    BYTE PTR [rax],al
    3222:	00 00                	add    BYTE PTR [rax],al
    3224:	00 00                	add    BYTE PTR [rax],al
    3226:	00 02                	add    BYTE PTR [rdx],al
    3228:	31 02                	xor    DWORD PTR [rdx],eax
    322a:	1c 03                	sbb    al,0x3
    322c:	ca 0e 00             	retf   0xe
    322f:	00 e2                	add    dl,ah
    3231:	12 00                	adc    al,BYTE PTR [rax]
    3233:	00 e0                	add    al,ah
    3235:	12 00                	adc    al,BYTE PTR [rax]
    3237:	00 03                	add    BYTE PTR [rbx],al
    3239:	bd 0e 00 00 eb       	mov    ebp,0xeb00000e
    323e:	12 00                	adc    al,BYTE PTR [rax]
    3240:	00 e9                	add    cl,ch
    3242:	12 00                	adc    al,BYTE PTR [rax]
    3244:	00 00                	add    BYTE PTR [rax],al
    3246:	00 0d 7a 0e 00 00    	add    BYTE PTR [rip+0xe7a],cl        # 40c6 <_IO_stdin_used+0xc6>
    324c:	43 1b 00             	rex.XB sbb eax,DWORD PTR [r8]
    324f:	00 00                	add    BYTE PTR [rax],al
    3251:	00 00                	add    BYTE PTR [rax],al
    3253:	00 06                	add    BYTE PTR [rsi],al
    3255:	83 01 00             	add    DWORD PTR [rcx],0x0
    3258:	00 47 1a             	add    BYTE PTR [rdi+0x1a],al
    325b:	c9                   	leave
    325c:	0c 00                	or     al,0x0
    325e:	00 20                	add    BYTE PTR [rax],ah
    3260:	9b                   	fwait
    3261:	0e                   	(bad)
    3262:	00 00                	add    BYTE PTR [rax],al
    3264:	03 8e 0e 00 00 f3    	add    ecx,DWORD PTR [rsi-0xcfffff2]
    326a:	12 00                	adc    al,BYTE PTR [rax]
    326c:	00 f1                	add    cl,dh
    326e:	12 00                	adc    al,BYTE PTR [rax]
    3270:	00 00                	add    BYTE PTR [rax],al
    3272:	0d 0f 0e 00 00       	or     eax,0xe0f
    3277:	35 1b 00 00 00       	xor    eax,0x1b
    327c:	00 00                	add    BYTE PTR [rax],al
    327e:	00 02                	add    BYTE PTR [rdx],al
    3280:	8d 01                	lea    eax,[rcx]
    3282:	00 00                	add    BYTE PTR [rax],al
    3284:	42                   	rex.X
    3285:	2e 3c 0d             	cs cmp al,0xd
    3288:	00 00                	add    BYTE PTR [rax],al
    328a:	03 30                	add    esi,DWORD PTR [rax]
    328c:	0e                   	(bad)
    328d:	00 00                	add    BYTE PTR [rax],al
    328f:	04 13                	add    al,0x13
    3291:	00 00                	add    BYTE PTR [rax],al
    3293:	02 13                	add    dl,BYTE PTR [rbx]
    3295:	00 00                	add    BYTE PTR [rax],al
    3297:	03 23                	add    esp,DWORD PTR [rbx]
    3299:	0e                   	(bad)
    329a:	00 00                	add    BYTE PTR [rax],al
    329c:	0d 13 00 00 0b       	or     eax,0xb000013
    32a1:	13 00                	adc    eax,DWORD PTR [rax]
    32a3:	00 0e                	add    BYTE PTR [rsi],cl
    32a5:	8d 01                	lea    eax,[rcx]
    32a7:	00 00                	add    BYTE PTR [rax],al
    32a9:	15 3d 0e 00 00       	adc    eax,0xe3d
    32ae:	16                   	(bad)
    32af:	13 00                	adc    eax,DWORD PTR [rax]
    32b1:	00 14 13             	add    BYTE PTR [rbx+rdx*1],dl
    32b4:	00 00                	add    BYTE PTR [rax],al
    32b6:	1c a9                	sbb    al,0xa9
    32b8:	0e                   	(bad)
    32b9:	00 00                	add    BYTE PTR [rax],al
    32bb:	35 1b 00 00 00       	xor    eax,0x1b
    32c0:	00 00                	add    BYTE PTR [rax],al
    32c2:	00 05 8d 01 00 00    	add    BYTE PTR [rip+0x18d],al        # 3455 <_Z7testAllPKcjS0_j+0x6e5>
    32c8:	03 ca                	add    ecx,edx
    32ca:	0e                   	(bad)
    32cb:	00 00                	add    BYTE PTR [rax],al
    32cd:	1e                   	(bad)
    32ce:	13 00                	adc    eax,DWORD PTR [rax]
    32d0:	00 1c 13             	add    BYTE PTR [rbx+rdx*1],bl
    32d3:	00 00                	add    BYTE PTR [rax],al
    32d5:	03 bd 0e 00 00 27    	add    edi,DWORD PTR [rbp+0x2700000e]
    32db:	13 00                	adc    eax,DWORD PTR [rax]
    32dd:	00 25 13 00 00 00    	add    BYTE PTR [rip+0x13],ah        # 32f6 <_Z7testAllPKcjS0_j+0x586>
    32e3:	00 00                	add    BYTE PTR [rax],al
    32e5:	0d 7a 0e 00 00       	or     eax,0xe7a
    32ea:	43 1b 00             	rex.XB sbb eax,DWORD PTR [r8]
    32ed:	00 00                	add    BYTE PTR [rax],al
    32ef:	00 00                	add    BYTE PTR [rax],al
    32f1:	00 0a                	add    BYTE PTR [rdx],cl
    32f3:	94                   	xchg   esp,eax
    32f4:	01 00                	add    DWORD PTR [rax],eax
    32f6:	00 48 1a             	add    BYTE PTR [rax+0x1a],cl
    32f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32fa:	0d 00 00 03 9b       	or     eax,0x9b030000
    32ff:	0e                   	(bad)
    3300:	00 00                	add    BYTE PTR [rax],al
    3302:	2f                   	(bad)
    3303:	13 00                	adc    eax,DWORD PTR [rax]
    3305:	00 2d 13 00 00 03    	add    BYTE PTR [rip+0x3000013],ch        # 300331e <_end+0x2ffd306>
    330b:	8e 0e                	mov    cs,WORD PTR [rsi]
    330d:	00 00                	add    BYTE PTR [rax],al
    330f:	37                   	(bad)
    3310:	13 00                	adc    eax,DWORD PTR [rax]
    3312:	00 35 13 00 00 00    	add    BYTE PTR [rip+0x13],dh        # 332b <_Z7testAllPKcjS0_j+0x5bb>
    3318:	21 7a 0e             	and    DWORD PTR [rdx+0xe],edi
    331b:	00 00                	add    BYTE PTR [rax],al
    331d:	4b 1b 00             	rex.WXB sbb rax,QWORD PTR [r8]
    3320:	00 00                	add    BYTE PTR [rax],al
    3322:	00 00                	add    BYTE PTR [rax],al
    3324:	00 02                	add    BYTE PTR [rdx],al
    3326:	4b 1b 00             	rex.WXB sbb rax,QWORD PTR [r8]
    3329:	00 00                	add    BYTE PTR [rax],al
    332b:	00 00                	add    BYTE PTR [rax],al
    332d:	00 06                	add    BYTE PTR [rsi],al
    332f:	00 00                	add    BYTE PTR [rax],al
    3331:	00 00                	add    BYTE PTR [rax],al
    3333:	00 00                	add    BYTE PTR [rax],al
    3335:	00 49 1a             	add    BYTE PTR [rcx+0x1a],cl
    3338:	ae                   	scas   al,BYTE PTR es:[rdi]
    3339:	0d 00 00 03 9b       	or     eax,0x9b030000
    333e:	0e                   	(bad)
    333f:	00 00                	add    BYTE PTR [rax],al
    3341:	48 13 00             	adc    rax,QWORD PTR [rax]
    3344:	00 46 13             	add    BYTE PTR [rsi+0x13],al
    3347:	00 00                	add    BYTE PTR [rax],al
    3349:	03 8e 0e 00 00 50    	add    ecx,DWORD PTR [rsi+0x5000000e]
    334f:	13 00                	adc    eax,DWORD PTR [rax]
    3351:	00 4e 13             	add    BYTE PTR [rsi+0x13],cl
    3354:	00 00                	add    BYTE PTR [rax],al
    3356:	00 37                	add    BYTE PTR [rdi],dh
    3358:	58                   	pop    rax
    3359:	1b 00                	sbb    eax,DWORD PTR [rax]
    335b:	00 00                	add    BYTE PTR [rax],al
    335d:	00 00                	add    BYTE PTR [rax],al
    335f:	00 01                	add    BYTE PTR [rcx],al
    3361:	30 00                	xor    BYTE PTR [rax],al
    3363:	1b e0                	sbb    esp,eax
    3365:	08 00                	or     BYTE PTR [rax],al
    3367:	00 1f                	add    BYTE PTR [rdi],bl
    3369:	5f                   	pop    rdi
    336a:	08 00                	or     BYTE PTR [rax],al
    336c:	00 96 00 00 00 e3    	add    BYTE PTR [rsi-0x1d000000],dl
    3372:	0d 00 00 13 95       	or     eax,0x95130000
    3377:	03 00                	add    eax,DWORD PTR [rax]
    3379:	00 1f                	add    BYTE PTR [rdi],bl
    337b:	27                   	(bad)
    337c:	9f                   	lahf
    337d:	08 00                	or     BYTE PTR [rax],al
    337f:	00 14 70             	add    BYTE PTR [rax+rsi*2],dl
    3382:	04 00                	add    al,0x0
    3384:	00 20                	add    BYTE PTR [rax],ah
    3386:	0e                   	(bad)
    3387:	96                   	xchg   esi,eax
    3388:	00 00                	add    BYTE PTR [rax],al
    338a:	00 00                	add    BYTE PTR [rax],al
    338c:	38 e4                	cmp    ah,ah
    338e:	08 00                	or     BYTE PTR [rax],al
    3390:	00 01                	add    BYTE PTR [rcx],al
    3392:	0b 0a                	or     ecx,DWORD PTR [rdx]
    3394:	80 08 00             	or     BYTE PTR [rax],0x0
    3397:	00 96 00 00 00 01    	add    BYTE PTR [rsi+0x1000000],dl
    339d:	0f 0e                	femms
    339f:	00 00                	add    BYTE PTR [rax],al
    33a1:	13 95 03 00 00 0b    	adc    edx,DWORD PTR [rbp+0xb000003]
    33a7:	23 9f 08 00 00 14    	and    ebx,DWORD PTR [rdi+0x14000008]
    33ad:	70 04                	jo     33b3 <_Z7testAllPKcjS0_j+0x643>
    33af:	00 00                	add    BYTE PTR [rax],al
    33b1:	0c 0e                	or     al,0xe
    33b3:	96                   	xchg   esi,eax
    33b4:	00 00                	add    BYTE PTR [rax],al
    33b6:	00 00                	add    BYTE PTR [rax],al
    33b8:	16                   	(bad)
    33b9:	4c 06                	rex.WR (bad)
    33bb:	00 00                	add    BYTE PTR [rax],al
    33bd:	02 2e                	add    ch,BYTE PTR [rsi]
    33bf:	02 af 06 00 00 bf    	add    ch,BYTE PTR [rdi-0x40fffffa]
    33c5:	00 00                	add    BYTE PTR [rax],al
    33c7:	00 4b 0e             	add    BYTE PTR [rbx+0xe],cl
    33ca:	00 00                	add    BYTE PTR [rax],al
    33cc:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    33cf:	58                   	pop    rax
    33d0:	00 02                	add    BYTE PTR [rdx],al
    33d2:	2e 02 1f             	cs add bl,BYTE PTR [rdi]
    33d5:	44 08 00             	or     BYTE PTR [rax],r8b
    33d8:	00 09                	add    BYTE PTR [rcx],cl
    33da:	5f                   	pop    rdi
    33db:	5f                   	pop    rdi
    33dc:	4e 00 02             	rex.WRX add BYTE PTR [rdx],r8b
    33df:	2e 02 2e             	cs add ch,BYTE PTR [rsi]
    33e2:	5f                   	pop    rdi
    33e3:	00 00                	add    BYTE PTR [rax],al
    33e5:	00 39                	add    BYTE PTR [rcx],bh
    33e7:	5f                   	pop    rdi
    33e8:	5f                   	pop    rdi
    33e9:	59                   	pop    rcx
    33ea:	00 02                	add    BYTE PTR [rdx],al
    33ec:	30 02                	xor    BYTE PTR [rdx],al
    33ee:	0b 14 08             	or     edx,DWORD PTR [rax+rcx*1]
    33f1:	00 00                	add    BYTE PTR [rax],al
    33f3:	00 16                	add    BYTE PTR [rsi],dl
    33f5:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
    33f8:	00 02                	add    BYTE PTR [rdx],al
    33fa:	12 02                	adc    al,BYTE PTR [rdx]
    33fc:	c8 05 00 00          	enter  0x5,0x0
    3400:	14 08                	adc    al,0x8
    3402:	00 00                	add    BYTE PTR [rax],al
    3404:	7a 0e                	jp     3414 <_Z7testAllPKcjS0_j+0x6a4>
    3406:	00 00                	add    BYTE PTR [rax],al
    3408:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    340b:	58                   	pop    rax
    340c:	00 02                	add    BYTE PTR [rdx],al
    340e:	12 02                	adc    al,BYTE PTR [rdx]
    3410:	23 44 08 00          	and    eax,DWORD PTR [rax+rcx*1+0x0]
    3414:	00 09                	add    BYTE PTR [rcx],cl
    3416:	5f                   	pop    rdi
    3417:	5f                   	pop    rdi
    3418:	4e 00 02             	rex.WRX add BYTE PTR [rdx],r8b
    341b:	12 02                	adc    al,BYTE PTR [rdx]
    341d:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    3420:	00 00                	add    BYTE PTR [rax],al
    3422:	00 16                	add    BYTE PTR [rsi],dl
    3424:	38 08                	cmp    BYTE PTR [rax],cl
    3426:	00 00                	add    BYTE PTR [rax],al
    3428:	03 49 03             	add    ecx,DWORD PTR [rcx+0x3]
    342b:	29 03                	sub    DWORD PTR [rbx],eax
    342d:	00 00                	add    BYTE PTR [rax],al
    342f:	cd 00                	int    0x0
    3431:	00 00                	add    BYTE PTR [rax],al
    3433:	a9 0e 00 00 09       	test   eax,0x900000e
    3438:	5f                   	pop    rdi
    3439:	5f                   	pop    rdi
    343a:	43 00 03             	rex.XB add BYTE PTR [r11],al
    343d:	49 03 23             	add    rsp,QWORD PTR [r11]
    3440:	cd 00                	int    0x0
    3442:	00 00                	add    BYTE PTR [rax],al
    3444:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    3447:	56                   	push   rsi
    3448:	00 03                	add    BYTE PTR [rbx],al
    344a:	49 03 3b             	add    rdi,QWORD PTR [r11]
    344d:	cd 00                	int    0x0
    344f:	00 00                	add    BYTE PTR [rax],al
    3451:	00 16                	add    BYTE PTR [rsi],dl
    3453:	e7 03                	out    0x3,eax
    3455:	00 00                	add    BYTE PTR [rax],al
    3457:	03 c7                	add    eax,edi
    3459:	01 b7 04 00 00 bf    	add    DWORD PTR [rdi-0x40fffffc],esi
    345f:	00 00                	add    BYTE PTR [rax],al
    3461:	00 d8                	add    al,bl
    3463:	0e                   	(bad)
    3464:	00 00                	add    BYTE PTR [rax],al
    3466:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    3469:	58                   	pop    rax
    346a:	00 03                	add    BYTE PTR [rbx],al
    346c:	c7 01 1c 14 08 00    	mov    DWORD PTR [rcx],0x8141c
    3472:	00 09                	add    BYTE PTR [rcx],cl
    3474:	5f                   	pop    rdi
    3475:	5f                   	pop    rdi
    3476:	4e 00 03             	rex.WRX add BYTE PTR [rbx],r8b
    3479:	c7 01 2b 5f 00 00    	mov    DWORD PTR [rcx],0x5f2b
    347f:	00 00                	add    BYTE PTR [rax],al
    3481:	3a e3                	cmp    ah,bl
    3483:	0d 00 00 80 08       	or     eax,0x8800000
    3488:	00 00                	add    BYTE PTR [rax],al
    348a:	e0 1a                	loopne 34a6 <_Z7testAllPKcjS0_j+0x736>
    348c:	00 00                	add    BYTE PTR [rax],al
    348e:	00 00                	add    BYTE PTR [rax],al
    3490:	00 00                	add    BYTE PTR [rax],al
    3492:	07                   	(bad)
    3493:	00 00                	add    BYTE PTR [rax],al
    3495:	00 00                	add    BYTE PTR [rax],al
    3497:	00 00                	add    BYTE PTR [rax],al
    3499:	00 01                	add    BYTE PTR [rcx],al
    349b:	9c                   	pushf
    349c:	3b f8                	cmp    edi,eax
    349e:	0d 00 00 02 91       	or     eax,0x91020000
    34a3:	00 3c 03             	add    BYTE PTR [rbx+rax*1],bh
    34a6:	0e                   	(bad)
    34a7:	00 00                	add    BYTE PTR [rax],al
    34a9:	00 00                	add    BYTE PTR [rax],al
    34ab:	00 6b 10             	add    BYTE PTR [rbx+0x10],ch
    34ae:	00 00                	add    BYTE PTR [rax],al
    34b0:	05 00 01 08 10       	add    eax,0x10080100
    34b5:	0c 00                	or     al,0x0
    34b7:	00 26                	add    BYTE PTR [rsi],ah
    34b9:	33 00                	xor    eax,DWORD PTR [rax]
    34bb:	00 00                	add    BYTE PTR [rax],al
    34bd:	21 3c 02             	and    DWORD PTR [rdx+rax*1],edi
    34c0:	00 00                	add    BYTE PTR [rax],al
    34c2:	00 00                	add    BYTE PTR [rax],al
    34c4:	00 00                	add    BYTE PTR [rax],al
    34c6:	a0 1e 00 00 00 00 00 	movabs al,ds:0xae0000000000001e
    34cd:	00 ae 
    34cf:	03 00                	add    eax,DWORD PTR [rax]
    34d1:	00 00                	add    BYTE PTR [rax],al
    34d3:	00 00                	add    BYTE PTR [rax],al
    34d5:	00 96 0e 00 00 08    	add    BYTE PTR [rsi+0x800000e],dl
    34db:	37                   	(bad)
    34dc:	0b 00                	or     eax,DWORD PTR [rax]
    34de:	00 03                	add    BYTE PTR [rbx],al
    34e0:	d6                   	(bad)
    34e1:	17                   	(bad)
    34e2:	3a 00                	cmp    al,BYTE PTR [rax]
    34e4:	00 00                	add    BYTE PTR [rax],al
    34e6:	04 08                	add    al,0x8
    34e8:	07                   	(bad)
    34e9:	a0 01 00 00 14 08 3c 	movabs al,ds:0x2e33c0814000001
    34f0:	e3 02 
    34f2:	00 00                	add    BYTE PTR [rax],al
    34f4:	66 00 00             	data16 add BYTE PTR [rax],al
    34f7:	00 06                	add    BYTE PTR [rsi],al
    34f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34fa:	02 00                	add    al,BYTE PTR [rax]
    34fc:	00 04 3d 09 66 00 00 	add    BYTE PTR [rdi*1+0x6609],al
    3503:	00 00                	add    BYTE PTR [rax],al
    3505:	15 72 65 6d 00       	adc    eax,0x6d6572
    350a:	3e 09 66 00          	ds or  DWORD PTR [rsi+0x0],esp
    350e:	00 00                	add    BYTE PTR [rax],al
    3510:	04 00                	add    al,0x0
    3512:	27                   	(bad)
    3513:	04 05                	add    al,0x5
    3515:	69 6e 74 00 0d 66 00 	imul   ebp,DWORD PTR [rsi+0x74],0x660d00
    351c:	00 00                	add    BYTE PTR [rax],al
    351e:	08 e4                	or     ah,ah
    3520:	02 00                	add    al,BYTE PTR [rax]
    3522:	00 04 3f             	add    BYTE PTR [rdi+rdi*1],al
    3525:	05 41 00 00 00       	add    eax,0x41
    352a:	14 10                	adc    al,0x10
    352c:	44 09 00             	or     DWORD PTR [rax],r8d
    352f:	00 00                	add    BYTE PTR [rax],al
    3531:	a3 00 00 00 06 6e 02 	movabs ds:0x26e06000000,eax
    3538:	00 00 
    353a:	04 45                	add    al,0x45
    353c:	0e                   	(bad)
    353d:	a3 00 00 00 00 15 72 	movabs ds:0x6d65721500000000,eax
    3544:	65 6d 
    3546:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    3549:	a3 00 00 00 08 00 04 	movabs ds:0x508040008000000,eax
    3550:	08 05 
    3552:	92                   	xchg   edx,eax
    3553:	01 00                	add    DWORD PTR [rax],eax
    3555:	00 08                	add    BYTE PTR [rax],cl
    3557:	0a 00                	or     al,BYTE PTR [rax]
    3559:	00 00                	add    BYTE PTR [rax],al
    355b:	04 47                	add    al,0x47
    355d:	05 7e 00 00 00       	add    eax,0x7e
    3562:	14 10                	adc    al,0x10
    3564:	4e d4                	rex.WRX (bad)
    3566:	01 00                	add    DWORD PTR [rax],eax
    3568:	00 db                	add    bl,bl
    356a:	00 00                	add    BYTE PTR [rax],al
    356c:	00 06                	add    BYTE PTR [rsi],al
    356e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    356f:	02 00                	add    al,BYTE PTR [rax]
    3571:	00 04 4f             	add    BYTE PTR [rdi+rcx*2],al
    3574:	13 db                	adc    ebx,ebx
    3576:	00 00                	add    BYTE PTR [rax],al
    3578:	00 00                	add    BYTE PTR [rax],al
    357a:	15 72 65 6d 00       	adc    eax,0x6d6572
    357f:	50                   	push   rax
    3580:	13 db                	adc    ebx,ebx
    3582:	00 00                	add    BYTE PTR [rax],al
    3584:	00 08                	add    BYTE PTR [rax],cl
    3586:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    3589:	05 8d 01 00 00       	add    eax,0x18d
    358e:	08 d5                	or     ch,dl
    3590:	01 00                	add    DWORD PTR [rax],eax
    3592:	00 04 51             	add    BYTE PTR [rcx+rdx*2],al
    3595:	05 b6 00 00 00       	add    eax,0xb6
    359a:	04 02                	add    al,0x2
    359c:	07                   	(bad)
    359d:	73 02                	jae    35a1 <_Z21standartDeviationTimePdjd+0x61>
    359f:	00 00                	add    BYTE PTR [rax],al
    35a1:	09 01                	or     DWORD PTR [rcx],eax
    35a3:	01 00                	add    DWORD PTR [rax],eax
    35a5:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    35a8:	06                   	(bad)
    35a9:	2d 02 00 00 0d       	sub    eax,0xd000002
    35ae:	fa                   	cli
    35af:	00 00                	add    BYTE PTR [rax],al
    35b1:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    35b4:	08 24 02             	or     BYTE PTR [rdx+rax*1],ah
    35b7:	00 00                	add    BYTE PTR [rax],al
    35b9:	04 04                	add    al,0x4
    35bb:	07                   	(bad)
    35bc:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    35bd:	01 00                	add    DWORD PTR [rax],eax
    35bf:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    35c2:	06                   	(bad)
    35c3:	26 02 00             	es add al,BYTE PTR [rax]
    35c6:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    35c9:	05 05 01 00 00       	add    eax,0x105
    35ce:	08 53 01             	or     BYTE PTR [rbx+0x1],dl
    35d1:	00 00                	add    BYTE PTR [rax],al
    35d3:	05 2a 16 0d 01       	add    eax,0x10d162a
    35d8:	00 00                	add    BYTE PTR [rax],al
    35da:	28 08                	sub    BYTE PTR [rax],cl
    35dc:	09 fa                	or     edx,edi
    35de:	00 00                	add    BYTE PTR [rax],al
    35e0:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    35e3:	07                   	(bad)
    35e4:	9b                   	fwait
    35e5:	01 00                	add    DWORD PTR [rax],eax
    35e7:	00 29                	add    BYTE PTR [rcx],ch
    35e9:	d5 02 00 00          	{rex2 0x2} add BYTE PTR [rax],al
    35ed:	04 b4                	add    al,0xb4
    35ef:	03 0f                	add    ecx,DWORD PTR [rdi]
    35f1:	49 01 00             	add    QWORD PTR [r8],rax
    35f4:	00 09                	add    BYTE PTR [rcx],cl
    35f6:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
    35f9:	00 2a                	add    BYTE PTR [rdx],ch
    35fb:	66 00 00             	data16 add BYTE PTR [rax],al
    35fe:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
    3601:	00 00                	add    BYTE PTR [rax],al
    3603:	01 62 01             	add    DWORD PTR [rdx+0x1],esp
    3606:	00 00                	add    BYTE PTR [rax],al
    3608:	01 62 01             	add    DWORD PTR [rdx+0x1],esp
    360b:	00 00                	add    BYTE PTR [rax],al
    360d:	00 09                	add    BYTE PTR [rcx],cl
    360f:	67 01 00             	add    DWORD PTR [eax],eax
    3612:	00 2b                	add    BYTE PTR [rbx],ch
    3614:	2c 73                	sub    al,0x73
    3616:	74 64                	je     367c <_Z21standartDeviationTimePdjd+0x13c>
    3618:	00 12                	add    BYTE PTR [rdx],dl
    361a:	32 01                	xor    al,BYTE PTR [rcx]
    361c:	0b 38                	or     edi,DWORD PTR [rax]
    361e:	03 00                	add    eax,DWORD PTR [rax]
    3620:	00 02                	add    BYTE PTR [rdx],al
    3622:	06                   	(bad)
    3623:	83 0b 72             	or     DWORD PTR [rbx],0x72
    3626:	00 00                	add    BYTE PTR [rax],al
    3628:	00 02                	add    BYTE PTR [rdx],al
    362a:	06                   	(bad)
    362b:	84 0b                	test   BYTE PTR [rbx],cl
    362d:	aa                   	stos   BYTE PTR es:[rdi],al
    362e:	00 00                	add    BYTE PTR [rax],al
    3630:	00 02                	add    BYTE PTR [rdx],al
    3632:	06                   	(bad)
    3633:	8a 0b                	mov    cl,BYTE PTR [rbx]
    3635:	38 03                	cmp    BYTE PTR [rbx],al
    3637:	00 00                	add    BYTE PTR [rax],al
    3639:	02 06                	add    al,BYTE PTR [rsi]
    363b:	8d 0b                	lea    ecx,[rbx]
    363d:	54                   	push   rsp
    363e:	03 00                	add    eax,DWORD PTR [rax]
    3640:	00 02                	add    BYTE PTR [rdx],al
    3642:	06                   	(bad)
    3643:	90                   	nop
    3644:	0b 6f 03             	or     ebp,DWORD PTR [rdi+0x3]
    3647:	00 00                	add    BYTE PTR [rax],al
    3649:	02 06                	add    al,BYTE PTR [rsi]
    364b:	91                   	xchg   ecx,eax
    364c:	0b 8c 03 00 00 02 06 	or     ecx,DWORD PTR [rbx+rax*1+0x6020000]
    3653:	92                   	xchg   edx,eax
    3654:	0b a2 03 00 00 02    	or     esp,DWORD PTR [rdx+0x2000003]
    365a:	06                   	(bad)
    365b:	93                   	xchg   ebx,eax
    365c:	0b b8 03 00 00 02    	or     edi,DWORD PTR [rax+0x2000003]
    3662:	06                   	(bad)
    3663:	95                   	xchg   ebp,eax
    3664:	0b e2                	or     esp,edx
    3666:	03 00                	add    eax,DWORD PTR [rax]
    3668:	00 02                	add    BYTE PTR [rdx],al
    366a:	06                   	(bad)
    366b:	98                   	cwde
    366c:	0b fe                	or     edi,esi
    366e:	03 00                	add    eax,DWORD PTR [rax]
    3670:	00 02                	add    BYTE PTR [rdx],al
    3672:	06                   	(bad)
    3673:	9a                   	(bad)
    3674:	0b 14 04             	or     edx,DWORD PTR [rsp+rax*1]
    3677:	00 00                	add    BYTE PTR [rax],al
    3679:	02 06                	add    al,BYTE PTR [rsi]
    367b:	9d                   	popf
    367c:	0b 2f                	or     ebp,DWORD PTR [rdi]
    367e:	04 00                	add    al,0x0
    3680:	00 02                	add    BYTE PTR [rdx],al
    3682:	06                   	(bad)
    3683:	9e                   	sahf
    3684:	0b 4a 04             	or     ecx,DWORD PTR [rdx+0x4]
    3687:	00 00                	add    BYTE PTR [rax],al
    3689:	02 06                	add    al,BYTE PTR [rsi]
    368b:	9f                   	lahf
    368c:	0b 7b 04             	or     edi,DWORD PTR [rbx+0x4]
    368f:	00 00                	add    BYTE PTR [rax],al
    3691:	02 06                	add    al,BYTE PTR [rsi]
    3693:	a1 0b 9b 04 00 00 02 	movabs eax,ds:0xa406020000049b0b
    369a:	06 a4 
    369c:	0b bb 04 00 00 02    	or     edi,DWORD PTR [rbx+0x2000004]
    36a2:	06                   	(bad)
    36a3:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    36a4:	0b ce                	or     ecx,esi
    36a6:	04 00                	add    al,0x0
    36a8:	00 02                	add    BYTE PTR [rdx],al
    36aa:	06                   	(bad)
    36ab:	a9 0b db 04 00       	test   eax,0x4db0b
    36b0:	00 02                	add    BYTE PTR [rdx],al
    36b2:	06                   	(bad)
    36b3:	aa                   	stos   BYTE PTR es:[rdi],al
    36b4:	0b ec                	or     ebp,esp
    36b6:	04 00                	add    al,0x0
    36b8:	00 02                	add    BYTE PTR [rdx],al
    36ba:	06                   	(bad)
    36bb:	ab                   	stos   DWORD PTR es:[rdi],eax
    36bc:	0b 0c 05 00 00 02 06 	or     ecx,DWORD PTR [rax*1+0x6020000]
    36c3:	ac                   	lods   al,BYTE PTR ds:[rsi]
    36c4:	0b 2f                	or     ebp,DWORD PTR [rdi]
    36c6:	05 00 00 02 06       	add    eax,0x6020000
    36cb:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    36cc:	0b 52 05             	or     edx,DWORD PTR [rdx+0x5]
    36cf:	00 00                	add    BYTE PTR [rax],al
    36d1:	02 06                	add    al,BYTE PTR [rsi]
    36d3:	af                   	scas   eax,DWORD PTR es:[rdi]
    36d4:	0b 68 05             	or     ebp,DWORD PTR [rax+0x5]
    36d7:	00 00                	add    BYTE PTR [rax],al
    36d9:	02 06                	add    al,BYTE PTR [rsi]
    36db:	b0 0b                	mov    al,0xb
    36dd:	8d 05 00 00 02 06    	lea    eax,[rip+0x6020000]        # 60236e3 <_end+0x601d6cb>
    36e3:	f4                   	hlt
    36e4:	16                   	(bad)
    36e5:	e2 00                	loop   36e7 <_Z27standartDeviationCollisionsP7HashMapf+0x47>
    36e7:	00 00                	add    BYTE PTR [rax],al
    36e9:	02 06                	add    al,BYTE PTR [rsi]
    36eb:	f9                   	stc
    36ec:	16                   	(bad)
    36ed:	ed                   	in     eax,dx
    36ee:	05 00 00 02 06       	add    eax,0x6020000
    36f3:	fa                   	cli
    36f4:	16                   	(bad)
    36f5:	07                   	(bad)
    36f6:	06                   	(bad)
    36f7:	00 00                	add    BYTE PTR [rax],al
    36f9:	02 06                	add    al,BYTE PTR [rsi]
    36fb:	fc                   	cld
    36fc:	16                   	(bad)
    36fd:	22 06                	and    al,BYTE PTR [rsi]
    36ff:	00 00                	add    BYTE PTR [rax],al
    3701:	02 06                	add    al,BYTE PTR [rsi]
    3703:	fd                   	std
    3704:	16                   	(bad)
    3705:	7e 06                	jle    370d <_Z27standartDeviationCollisionsP7HashMapf+0x6d>
    3707:	00 00                	add    BYTE PTR [rax],al
    3709:	02 06                	add    al,BYTE PTR [rsi]
    370b:	fe                   	(bad)
    370c:	16                   	(bad)
    370d:	38 06                	cmp    BYTE PTR [rsi],al
    370f:	00 00                	add    BYTE PTR [rax],al
    3711:	02 06                	add    al,BYTE PTR [rsi]
    3713:	ff 16                	call   QWORD PTR [rsi]
    3715:	5b                   	pop    rbx
    3716:	06                   	(bad)
    3717:	00 00                	add    BYTE PTR [rax],al
    3719:	2d 06 00 01 16       	sub    eax,0x16010006
    371e:	a0 06 00 00 0e 61 62 	movabs al,ds:0x7362610e000006
    3725:	73 00 
    3727:	89 15 03 00 00 ea    	mov    DWORD PTR [rip+0xffffffffea000003],edx        # ffffffffea003730 <_end+0xffffffffe9ffd718>
    372d:	06                   	(bad)
    372e:	00 00                	add    BYTE PTR [rax],al
    3730:	8e 02                	mov    es,WORD PTR [rdx]
    3732:	00 00                	add    BYTE PTR [rax],al
    3734:	01 ea                	add    edx,ebp
    3736:	06                   	(bad)
    3737:	00 00                	add    BYTE PTR [rax],al
    3739:	00 0e                	add    BYTE PTR [rsi],cl
    373b:	61                   	(bad)
    373c:	62 73 00 55 1b       	(bad)
    3741:	00 00                	add    BYTE PTR [rax],al
    3743:	00 f9                	add    cl,bh
    3745:	06                   	(bad)
    3746:	00 00                	add    BYTE PTR [rax],al
    3748:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3749:	02 00                	add    al,BYTE PTR [rax]
    374b:	00 01                	add    BYTE PTR [rcx],al
    374d:	f9                   	stc
    374e:	06                   	(bad)
    374f:	00 00                	add    BYTE PTR [rax],al
    3751:	00 0e                	add    BYTE PTR [rsi],cl
    3753:	61                   	(bad)
    3754:	62 73 00 4f 01       	(bad)
    3759:	03 00                	add    eax,DWORD PTR [rax]
    375b:	00 bb 06 00 00 be    	add    BYTE PTR [rbx-0x41fffffa],bh
    3761:	02 00                	add    al,BYTE PTR [rax]
    3763:	00 01                	add    BYTE PTR [rcx],al
    3765:	bb 06 00 00 00       	mov    ebx,0x6
    376a:	0e                   	(bad)
    376b:	61                   	(bad)
    376c:	62 73 00 4b 0b       	(bad)
    3771:	03 00                	add    eax,DWORD PTR [rax]
    3773:	00 99 06 00 00 d6    	add    BYTE PTR [rcx-0x29fffffa],bl
    3779:	02 00                	add    al,BYTE PTR [rax]
    377b:	00 01                	add    BYTE PTR [rcx],al
    377d:	99                   	cdq
    377e:	06                   	(bad)
    377f:	00 00                	add    BYTE PTR [rax],al
    3781:	00 0e                	add    BYTE PTR [rsi],cl
    3783:	61                   	(bad)
    3784:	62 73 00 47 f7       	(bad)
    3789:	02 00                	add    al,BYTE PTR [rax]
    378b:	00 85 03 00 00 ee    	add    BYTE PTR [rbp-0x11fffffd],al
    3791:	02 00                	add    al,BYTE PTR [rax]
    3793:	00 01                	add    BYTE PTR [rcx],al
    3795:	85 03                	test   DWORD PTR [rbx],eax
    3797:	00 00                	add    BYTE PTR [rax],al
    3799:	00 0e                	add    BYTE PTR [rsi],cl
    379b:	61                   	(bad)
    379c:	62 73 00 3d eb       	(bad)
    37a1:	00 00                	add    BYTE PTR [rax],al
    37a3:	00 db                	add    bl,bl
    37a5:	00 00                	add    BYTE PTR [rax],al
    37a7:	00 06                	add    BYTE PTR [rsi],al
    37a9:	03 00                	add    eax,DWORD PTR [rax]
    37ab:	00 01                	add    BYTE PTR [rcx],al
    37ad:	db 00                	fild   DWORD PTR [rax]
    37af:	00 00                	add    BYTE PTR [rax],al
    37b1:	00 0e                	add    BYTE PTR [rsi],cl
    37b3:	61                   	(bad)
    37b4:	62 73 00 38 11       	(bad)
    37b9:	00 00                	add    BYTE PTR [rax],al
    37bb:	00 a3 00 00 00 1e    	add    BYTE PTR [rbx+0x1e000000],ah
    37c1:	03 00                	add    eax,DWORD PTR [rax]
    37c3:	00 01                	add    BYTE PTR [rcx],al
    37c5:	a3 00 00 00 00 20 64 	movabs ds:0x7669642000000000,eax
    37cc:	69 76 
    37ce:	00 b5 1e 01 00 00    	add    BYTE PTR [rbp+0x11e],dh
    37d4:	aa                   	stos   BYTE PTR es:[rdi],al
    37d5:	00 00                	add    BYTE PTR [rax],al
    37d7:	00 01                	add    BYTE PTR [rcx],al
    37d9:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
    37e0:	00 00 
    37e2:	00 00                	add    BYTE PTR [rax],al
    37e4:	07                   	(bad)
    37e5:	17                   	(bad)
    37e6:	01 00                	add    DWORD PTR [rax],eax
    37e8:	00 de                	add    dh,bl
    37ea:	02 0c 66             	add    cl,BYTE PTR [rsi+riz*2]
    37ed:	00 00                	add    BYTE PTR [rax],al
    37ef:	00 4e 03             	add    BYTE PTR [rsi+0x3],cl
    37f2:	00 00                	add    BYTE PTR [rax],al
    37f4:	01 4e 03             	add    DWORD PTR [rsi+0x3],ecx
    37f7:	00 00                	add    BYTE PTR [rax],al
    37f9:	00 09                	add    BYTE PTR [rcx],cl
    37fb:	53                   	push   rbx
    37fc:	03 00                	add    eax,DWORD PTR [rax]
    37fe:	00 2e                	add    BYTE PTR [rsi],ch
    3800:	2f                   	(bad)
    3801:	dd 00                	fld    QWORD PTR [rax]
    3803:	00 00                	add    BYTE PTR [rax],al
    3805:	04 e3                	add    al,0xe3
    3807:	02 12                	add    dl,BYTE PTR [rdx]
    3809:	dd 00                	fld    QWORD PTR [rax]
    380b:	00 00                	add    BYTE PTR [rax],al
    380d:	66 00 00             	data16 add BYTE PTR [rax],al
    3810:	00 6f 03             	add    BYTE PTR [rdi+0x3],ch
    3813:	00 00                	add    BYTE PTR [rax],al
    3815:	01 4e 03             	add    DWORD PTR [rsi+0x3],ecx
    3818:	00 00                	add    BYTE PTR [rax],al
    381a:	00 0a                	add    BYTE PTR [rdx],cl
    381c:	f2 01 00             	repnz add DWORD PTR [rax],eax
    381f:	00 08                	add    BYTE PTR [rax],cl
    3821:	19 01                	sbb    DWORD PTR [rcx],eax
    3823:	85 03                	test   DWORD PTR [rbx],eax
    3825:	00 00                	add    BYTE PTR [rax],al
    3827:	85 03                	test   DWORD PTR [rbx],eax
    3829:	00 00                	add    BYTE PTR [rax],al
    382b:	01 f5                	add    ebp,esi
    382d:	00 00                	add    BYTE PTR [rax],al
    382f:	00 00                	add    BYTE PTR [rax],al
    3831:	04 08                	add    al,0x8
    3833:	04 1d                	add    al,0x1d
    3835:	02 00                	add    al,BYTE PTR [rax]
    3837:	00 07                	add    BYTE PTR [rdi],al
    3839:	f7 01 00 00 e1 01    	test   DWORD PTR [rcx],0x1e10000
    383f:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    3842:	00 00                	add    BYTE PTR [rax],al
    3844:	a2 03 00 00 01 f5 00 	movabs ds:0xf501000003,al
    384b:	00 00 
    384d:	00 07                	add    BYTE PTR [rdi],al
    384f:	01 02                	add    DWORD PTR [rdx],eax
    3851:	00 00                	add    BYTE PTR [rax],al
    3853:	e6 01                	out    0x1,al
    3855:	01 a3 00 00 00 b8    	add    DWORD PTR [rbx-0x48000000],esp
    385b:	03 00                	add    eax,DWORD PTR [rax]
    385d:	00 01                	add    BYTE PTR [rcx],al
    385f:	f5                   	cmc
    3860:	00 00                	add    BYTE PTR [rax],al
    3862:	00 00                	add    BYTE PTR [rax],al
    3864:	0a 0f                	or     cl,BYTE PTR [rdi]
    3866:	01 00                	add    DWORD PTR [rax],eax
    3868:	00 09                	add    BYTE PTR [rcx],cl
    386a:	14 01                	adc    al,0x1
    386c:	2e 01 00             	cs add DWORD PTR [rax],eax
    386f:	00 e2                	add    dl,ah
    3871:	03 00                	add    eax,DWORD PTR [rax]
    3873:	00 01                	add    BYTE PTR [rcx],al
    3875:	62 01 00 00 01       	(bad)
    387a:	62 01 00 00 01       	(bad)
    387f:	2e 00 00             	cs add BYTE PTR [rax],al
    3882:	00 01                	add    BYTE PTR [rcx],al
    3884:	2e 00 00             	cs add BYTE PTR [rax],al
    3887:	00 01                	add    BYTE PTR [rcx],al
    3889:	3c 01                	cmp    al,0x1
    388b:	00 00                	add    BYTE PTR [rax],al
    388d:	00 30                	add    BYTE PTR [rax],dh
    388f:	64 69 76 00 04 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e004
    3896:	0e 
    3897:	72 00                	jb     3899 <_Z27standartDeviationCollisionsP7HashMapf+0x1f9>
    3899:	00 00                	add    BYTE PTR [rax],al
    389b:	fe 03                	inc    BYTE PTR [rbx]
    389d:	00 00                	add    BYTE PTR [rax],al
    389f:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    38a2:	00 00                	add    BYTE PTR [rax],al
    38a4:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    38a7:	00 00                	add    BYTE PTR [rax],al
    38a9:	00 07                	add    BYTE PTR [rdi],al
    38ab:	6a 01                	push   0x1
    38ad:	00 00                	add    BYTE PTR [rax],al
    38af:	05 03 0e 30 01       	add    eax,0x1300e03
    38b4:	00 00                	add    BYTE PTR [rax],al
    38b6:	14 04                	adc    al,0x4
    38b8:	00 00                	add    BYTE PTR [rax],al
    38ba:	01 f5                	add    ebp,esi
    38bc:	00 00                	add    BYTE PTR [rax],al
    38be:	00 00                	add    BYTE PTR [rax],al
    38c0:	07                   	(bad)
    38c1:	c9                   	leave
    38c2:	02 00                	add    al,BYTE PTR [rax]
    38c4:	00 e2                	add    dl,ah
    38c6:	03 0f                	add    ecx,DWORD PTR [rdi]
    38c8:	aa                   	stos   BYTE PTR es:[rdi],al
    38c9:	00 00                	add    BYTE PTR [rax],al
    38cb:	00 2f                	add    BYTE PTR [rdi],ch
    38cd:	04 00                	add    al,0x0
    38cf:	00 01                	add    BYTE PTR [rcx],al
    38d1:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
    38d8:	00 00 
    38da:	00 07                	add    BYTE PTR [rdi],al
    38dc:	58                   	pop    rax
    38dd:	02 00                	add    al,BYTE PTR [rax]
    38df:	00 26                	add    BYTE PTR [rsi],ah
    38e1:	04 0c                	add    al,0xc
    38e3:	66 00 00             	data16 add BYTE PTR [rax],al
    38e6:	00 4a 04             	add    BYTE PTR [rdx+0x4],cl
    38e9:	00 00                	add    BYTE PTR [rax],al
    38eb:	01 f5                	add    ebp,esi
    38ed:	00 00                	add    BYTE PTR [rax],al
    38ef:	00 01                	add    BYTE PTR [rcx],al
    38f1:	2e 00 00             	cs add BYTE PTR [rax],al
    38f4:	00 00                	add    BYTE PTR [rax],al
    38f6:	0a 5e 02             	or     bl,BYTE PTR [rsi+0x2]
    38f9:	00 00                	add    BYTE PTR [rax],al
    38fb:	0a 75 01             	or     dh,BYTE PTR [rbp+0x1]
    38fe:	2e 00 00             	cs add BYTE PTR [rax],al
    3901:	00 6a 04             	add    BYTE PTR [rdx+0x4],ch
    3904:	00 00                	add    BYTE PTR [rax],al
    3906:	01 6a 04             	add    DWORD PTR [rdx+0x4],ebp
    3909:	00 00                	add    BYTE PTR [rax],al
    390b:	01 f5                	add    ebp,esi
    390d:	00 00                	add    BYTE PTR [rax],al
    390f:	00 01                	add    BYTE PTR [rcx],al
    3911:	2e 00 00             	cs add BYTE PTR [rax],al
    3914:	00 00                	add    BYTE PTR [rax],al
    3916:	09 6f 04             	or     DWORD PTR [rdi+0x4],ebp
    3919:	00 00                	add    BYTE PTR [rax],al
    391b:	04 04                	add    al,0x4
    391d:	05 86 02 00 00       	add    eax,0x286
    3922:	0d 6f 04 00 00       	or     eax,0x46f
    3927:	07                   	(bad)
    3928:	86 01                	xchg   BYTE PTR [rcx],al
    392a:	00 00                	add    BYTE PTR [rax],al
    392c:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    392f:	66 00 00             	data16 add BYTE PTR [rax],al
    3932:	00 9b 04 00 00 01    	add    BYTE PTR [rbx+0x1000004],bl
    3938:	6a 04                	push   0x4
    393a:	00 00                	add    BYTE PTR [rax],al
    393c:	01 f5                	add    ebp,esi
    393e:	00 00                	add    BYTE PTR [rax],al
    3940:	00 01                	add    BYTE PTR [rcx],al
    3942:	2e 00 00             	cs add BYTE PTR [rax],al
    3945:	00 00                	add    BYTE PTR [rax],al
    3947:	16                   	(bad)
    3948:	25 00 00 00 ca       	and    eax,0xca000000
    394d:	03 bb 04 00 00 01    	add    edi,DWORD PTR [rbx+0x1000004]
    3953:	2e 01 00             	cs add DWORD PTR [rax],eax
    3956:	00 01                	add    BYTE PTR [rcx],al
    3958:	2e 00 00             	cs add BYTE PTR [rax],al
    395b:	00 01                	add    BYTE PTR [rcx],al
    395d:	2e 00 00             	cs add BYTE PTR [rax],al
    3960:	00 01                	add    BYTE PTR [rcx],al
    3962:	3c 01                	cmp    al,0x1
    3964:	00 00                	add    BYTE PTR [rax],al
    3966:	00 31                	add    BYTE PTR [rcx],dh
    3968:	e0 00                	loopne 396a <_Z27standartDeviationCollisionsP7HashMapf+0x2ca>
    396a:	00 00                	add    BYTE PTR [rax],al
    396c:	04 fa                	add    al,0xfa
    396e:	02 0d ce 04 00 00    	add    cl,BYTE PTR [rip+0x4ce]        # 3e42 <_fini+0x46e>
    3974:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    3977:	00 00                	add    BYTE PTR [rax],al
    3979:	00 32                	add    BYTE PTR [rdx],dh
    397b:	f2 02 00             	repnz add al,BYTE PTR [rax]
    397e:	00 04 3d 02 0c 66 00 	add    BYTE PTR [rdi*1+0x660c02],al
    3985:	00 00                	add    BYTE PTR [rax],al
    3987:	16                   	(bad)
    3988:	f1                   	int1
    3989:	02 00                	add    al,BYTE PTR [rax]
    398b:	00 3f                	add    BYTE PTR [rdi],bh
    398d:	02 ec                	add    ch,ah
    398f:	04 00                	add    al,0x0
    3991:	00 01                	add    BYTE PTR [rcx],al
    3993:	0d 01 00 00 00       	or     eax,0x1
    3998:	0a c5                	or     al,ch
    399a:	01 00                	add    DWORD PTR [rax],eax
    399c:	00 04 76             	add    BYTE PTR [rsi+rsi*2],al
    399f:	0f 85 03 00 00 07    	jne    70039a8 <_end+0x6ffd990>
    39a5:	05 00 00 01 f5       	add    eax,0xf5010000
    39aa:	00 00                	add    BYTE PTR [rax],al
    39ac:	00 01                	add    BYTE PTR [rcx],al
    39ae:	07                   	(bad)
    39af:	05 00 00 00 09       	add    eax,0x9000000
    39b4:	30 01                	xor    BYTE PTR [rcx],al
    39b6:	00 00                	add    BYTE PTR [rax],al
    39b8:	11 fe                	adc    esi,edi
    39ba:	00 00                	add    BYTE PTR [rax],al
    39bc:	00 d7                	add    bh,dl
    39be:	11 f5                	adc    ebp,esi
    39c0:	00 00                	add    BYTE PTR [rax],al
    39c2:	00 a3 00 00 00 2f    	add    BYTE PTR [rbx+0x2f000000],ah
    39c8:	05 00 00 01 f5       	add    eax,0xf5010000
    39cd:	00 00                	add    BYTE PTR [rax],al
    39cf:	00 01                	add    BYTE PTR [rcx],al
    39d1:	07                   	(bad)
    39d2:	05 00 00 01 66       	add    eax,0x66010000
    39d7:	00 00                	add    BYTE PTR [rax],al
    39d9:	00 00                	add    BYTE PTR [rax],al
    39db:	11 4a 02             	adc    DWORD PTR [rdx+0x2],ecx
    39de:	00 00                	add    BYTE PTR [rax],al
    39e0:	db 1a                	fistp  DWORD PTR [rdx]
    39e2:	41 02 00             	add    al,BYTE PTR [r8]
    39e5:	00 3a                	add    BYTE PTR [rdx],bh
    39e7:	00 00                	add    BYTE PTR [rax],al
    39e9:	00 52 05             	add    BYTE PTR [rdx+0x5],dl
    39ec:	00 00                	add    BYTE PTR [rax],al
    39ee:	01 f5                	add    ebp,esi
    39f0:	00 00                	add    BYTE PTR [rax],al
    39f2:	00 01                	add    BYTE PTR [rcx],al
    39f4:	07                   	(bad)
    39f5:	05 00 00 01 66       	add    eax,0x66010000
    39fa:	00 00                	add    BYTE PTR [rax],al
    39fc:	00 00                	add    BYTE PTR [rax],al
    39fe:	07                   	(bad)
    39ff:	64 26 00 00          	fs add BYTE PTR fs:[rax],al
    3a03:	9b                   	fwait
    3a04:	03 0c 66             	add    ecx,DWORD PTR [rsi+riz*2]
    3a07:	00 00                	add    BYTE PTR [rax],al
    3a09:	00 68 05             	add    BYTE PTR [rax+0x5],ch
    3a0c:	00 00                	add    BYTE PTR [rax],al
    3a0e:	01 f5                	add    ebp,esi
    3a10:	00 00                	add    BYTE PTR [rax],al
    3a12:	00 00                	add    BYTE PTR [rax],al
    3a14:	0a 06                	or     al,BYTE PTR [rsi]
    3a16:	02 00                	add    al,BYTE PTR [rax]
    3a18:	00 0a                	add    BYTE PTR [rdx],cl
    3a1a:	8f 01                	pop    QWORD PTR [rcx]
    3a1c:	2e 00 00             	cs add BYTE PTR [rax],al
    3a1f:	00 88 05 00 00 01    	add    BYTE PTR [rax+0x1000005],cl
    3a25:	30 01                	xor    BYTE PTR [rcx],al
    3a27:	00 00                	add    BYTE PTR [rax],al
    3a29:	01 88 05 00 00 01    	add    DWORD PTR [rax+0x1000005],ecx
    3a2f:	2e 00 00             	cs add BYTE PTR [rax],al
    3a32:	00 00                	add    BYTE PTR [rax],al
    3a34:	09 76 04             	or     DWORD PTR [rsi+0x4],esi
    3a37:	00 00                	add    BYTE PTR [rax],al
    3a39:	0a 67 02             	or     ah,BYTE PTR [rdi+0x2]
    3a3c:	00 00                	add    BYTE PTR [rax],al
    3a3e:	0a 4f 01             	or     cl,BYTE PTR [rdi+0x1]
    3a41:	66 00 00             	data16 add BYTE PTR [rax],al
    3a44:	00 a8 05 00 00 01    	add    BYTE PTR [rax+0x1000005],ch
    3a4a:	30 01                	xor    BYTE PTR [rcx],al
    3a4c:	00 00                	add    BYTE PTR [rax],al
    3a4e:	01 6f 04             	add    DWORD PTR [rdi+0x4],ebp
    3a51:	00 00                	add    BYTE PTR [rax],al
    3a53:	00 33                	add    BYTE PTR [rbx],dh
    3a55:	37                   	(bad)
    3a56:	02 00                	add    al,BYTE PTR [rax]
    3a58:	00 12                	add    BYTE PTR [rdx],dl
    3a5a:	57                   	push   rdi
    3a5b:	01 0b                	add    DWORD PTR [rbx],ecx
    3a5d:	07                   	(bad)
    3a5e:	06                   	(bad)
    3a5f:	00 00                	add    BYTE PTR [rax],al
    3a61:	02 06                	add    al,BYTE PTR [rsi]
    3a63:	cc                   	int3
    3a64:	0b e2                	or     esp,edx
    3a66:	00 00                	add    BYTE PTR [rax],al
    3a68:	00 02                	add    BYTE PTR [rdx],al
    3a6a:	06                   	(bad)
    3a6b:	dc 0b                	fmul   QWORD PTR [rbx]
    3a6d:	07                   	(bad)
    3a6e:	06                   	(bad)
    3a6f:	00 00                	add    BYTE PTR [rax],al
    3a71:	02 06                	add    al,BYTE PTR [rsi]
    3a73:	e7 0b                	out    0xb,eax
    3a75:	22 06                	and    al,BYTE PTR [rsi]
    3a77:	00 00                	add    BYTE PTR [rax],al
    3a79:	02 06                	add    al,BYTE PTR [rsi]
    3a7b:	e8 0b 38 06 00       	call   6728b <_end+0x61273>
    3a80:	00 02                	add    BYTE PTR [rdx],al
    3a82:	06                   	(bad)
    3a83:	e9 0b 5b 06 00       	jmp    69593 <_end+0x6357b>
    3a88:	00 02                	add    BYTE PTR [rdx],al
    3a8a:	06                   	(bad)
    3a8b:	eb 0b                	jmp    3a98 <_fini+0xc4>
    3a8d:	7e 06                	jle    3a95 <_fini+0xc1>
    3a8f:	00 00                	add    BYTE PTR [rax],al
    3a91:	02 06                	add    al,BYTE PTR [rsi]
    3a93:	ec                   	in     al,dx
    3a94:	0b a0 06 00 00 20    	or     esp,DWORD PTR [rax+0x20000006]
    3a9a:	64 69 76 00 d9 dd 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1ddd9
    3aa1:	00 
    3aa2:	00 e2                	add    dl,ah
    3aa4:	00 00                	add    BYTE PTR [rax],al
    3aa6:	00 01                	add    BYTE PTR [rcx],al
    3aa8:	db 00                	fild   DWORD PTR [rax]
    3aaa:	00 00                	add    BYTE PTR [rax],al
    3aac:	01 db                	add    ebx,ebx
    3aae:	00 00                	add    BYTE PTR [rax],al
    3ab0:	00 00                	add    BYTE PTR [rax],al
    3ab2:	00 07                	add    BYTE PTR [rdi],al
    3ab4:	c8 02 00 00          	enter  0x2,0x0
    3ab8:	e6 03                	out    0x3,al
    3aba:	1e                   	(bad)
    3abb:	e2 00                	loop   3abd <_fini+0xe9>
    3abd:	00 00                	add    BYTE PTR [rax],al
    3abf:	22 06                	and    al,BYTE PTR [rsi]
    3ac1:	00 00                	add    BYTE PTR [rax],al
    3ac3:	01 db                	add    ebx,ebx
    3ac5:	00 00                	add    BYTE PTR [rax],al
    3ac7:	00 01                	add    BYTE PTR [rcx],al
    3ac9:	db 00                	fild   DWORD PTR [rax]
    3acb:	00 00                	add    BYTE PTR [rax],al
    3acd:	00 07                	add    BYTE PTR [rdi],al
    3acf:	52                   	push   rdx
    3ad0:	02 00                	add    al,BYTE PTR [rax]
    3ad2:	00 ed                	add    ch,ch
    3ad4:	01 01                	add    DWORD PTR [rcx],eax
    3ad6:	db 00                	fild   DWORD PTR [rax]
    3ad8:	00 00                	add    BYTE PTR [rax],al
    3ada:	38 06                	cmp    BYTE PTR [rsi],al
    3adc:	00 00                	add    BYTE PTR [rax],al
    3ade:	01 f5                	add    ebp,esi
    3ae0:	00 00                	add    BYTE PTR [rax],al
    3ae2:	00 00                	add    BYTE PTR [rax],al
    3ae4:	11 32                	adc    DWORD PTR [rdx],esi
    3ae6:	01 00                	add    DWORD PTR [rax],eax
    3ae8:	00 ee                	add    dh,ch
    3aea:	16                   	(bad)
    3aeb:	29 01                	sub    DWORD PTR [rcx],eax
    3aed:	00 00                	add    BYTE PTR [rax],al
    3aef:	db 00                	fild   DWORD PTR [rax]
    3af1:	00 00                	add    BYTE PTR [rax],al
    3af3:	5b                   	pop    rbx
    3af4:	06                   	(bad)
    3af5:	00 00                	add    BYTE PTR [rax],al
    3af7:	01 f5                	add    ebp,esi
    3af9:	00 00                	add    BYTE PTR [rax],al
    3afb:	00 01                	add    BYTE PTR [rcx],al
    3afd:	07                   	(bad)
    3afe:	05 00 00 01 66       	add    eax,0x66010000
    3b03:	00 00                	add    BYTE PTR [rax],al
    3b05:	00 00                	add    BYTE PTR [rax],al
    3b07:	11 bf 02 00 00 f3    	adc    DWORD PTR [rdi-0xcfffffe],edi
    3b0d:	1f                   	(bad)
    3b0e:	b6 02                	mov    dh,0x2
    3b10:	00 00                	add    BYTE PTR [rax],al
    3b12:	35 01 00 00 7e       	xor    eax,0x7e000001
    3b17:	06                   	(bad)
    3b18:	00 00                	add    BYTE PTR [rax],al
    3b1a:	01 f5                	add    ebp,esi
    3b1c:	00 00                	add    BYTE PTR [rax],al
    3b1e:	00 01                	add    BYTE PTR [rcx],al
    3b20:	07                   	(bad)
    3b21:	05 00 00 01 66       	add    eax,0x66010000
    3b26:	00 00                	add    BYTE PTR [rax],al
    3b28:	00 00                	add    BYTE PTR [rax],al
    3b2a:	0a af 02 00 00 04    	or     ch,BYTE PTR [rdi+0x4000002]
    3b30:	7c 0e                	jl     3b40 <_fini+0x16c>
    3b32:	99                   	cdq
    3b33:	06                   	(bad)
    3b34:	00 00                	add    BYTE PTR [rax],al
    3b36:	99                   	cdq
    3b37:	06                   	(bad)
    3b38:	00 00                	add    BYTE PTR [rax],al
    3b3a:	01 f5                	add    ebp,esi
    3b3c:	00 00                	add    BYTE PTR [rax],al
    3b3e:	00 01                	add    BYTE PTR [rcx],al
    3b40:	07                   	(bad)
    3b41:	05 00 00 00 04       	add    eax,0x4000000
    3b46:	04 04                	add    al,0x4
    3b48:	80 01 00             	add    BYTE PTR [rcx],0x0
    3b4b:	00 0a                	add    BYTE PTR [rdx],cl
    3b4d:	2b 00                	sub    eax,DWORD PTR [rax]
    3b4f:	00 00                	add    BYTE PTR [rax],al
    3b51:	04 7f                	add    al,0x7f
    3b53:	14 bb                	adc    al,0xbb
    3b55:	06                   	(bad)
    3b56:	00 00                	add    BYTE PTR [rax],al
    3b58:	bb 06 00 00 01       	mov    ebx,0x1000006
    3b5d:	f5                   	cmc
    3b5e:	00 00                	add    BYTE PTR [rax],al
    3b60:	00 01                	add    BYTE PTR [rcx],al
    3b62:	07                   	(bad)
    3b63:	05 00 00 00 04       	add    eax,0x4000000
    3b68:	10 04 18             	adc    BYTE PTR [rax+rbx*1],al
    3b6b:	02 00                	add    al,BYTE PTR [rax]
    3b6d:	00 02                	add    BYTE PTR [rdx],al
    3b6f:	0b 27                	or     esp,DWORD PTR [rdi]
    3b71:	0c 38                	or     al,0x38
    3b73:	03 00                	add    eax,DWORD PTR [rax]
    3b75:	00 02                	add    BYTE PTR [rdx],al
    3b77:	0b 2b                	or     ebp,DWORD PTR [rbx]
    3b79:	0e                   	(bad)
    3b7a:	54                   	push   rsp
    3b7b:	03 00                	add    eax,DWORD PTR [rax]
    3b7d:	00 02                	add    BYTE PTR [rdx],al
    3b7f:	0b 2e                	or     ebp,DWORD PTR [rsi]
    3b81:	0e                   	(bad)
    3b82:	bb 04 00 00 02       	mov    ebx,0x2000004
    3b87:	0b 36                	or     esi,DWORD PTR [rsi]
    3b89:	0c 72                	or     al,0x72
    3b8b:	00 00                	add    BYTE PTR [rax],al
    3b8d:	00 02                	add    BYTE PTR [rdx],al
    3b8f:	0b 37                	or     esi,DWORD PTR [rdi]
    3b91:	0c aa                	or     al,0xaa
    3b93:	00 00                	add    BYTE PTR [rax],al
    3b95:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
    3b98:	04 a4                	add    al,0xa4
    3b9a:	02 00                	add    al,BYTE PTR [rax]
    3b9c:	00 02                	add    BYTE PTR [rdx],al
    3b9e:	0b 39                	or     edi,DWORD PTR [rcx]
    3ba0:	0c 76                	or     al,0x76
    3ba2:	02 00                	add    al,BYTE PTR [rax]
    3ba4:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
    3ba7:	05 0f 02 00 00       	add    eax,0x20f
    3bac:	02 0b                	add    cl,BYTE PTR [rbx]
    3bae:	39 0c 8e             	cmp    DWORD PTR [rsi+rcx*4],ecx
    3bb1:	02 00                	add    al,BYTE PTR [rax]
    3bb3:	00 02                	add    BYTE PTR [rdx],al
    3bb5:	0b 39                	or     edi,DWORD PTR [rcx]
    3bb7:	0c a6                	or     al,0xa6
    3bb9:	02 00                	add    al,BYTE PTR [rax]
    3bbb:	00 02                	add    BYTE PTR [rdx],al
    3bbd:	0b 39                	or     edi,DWORD PTR [rcx]
    3bbf:	0c be                	or     al,0xbe
    3bc1:	02 00                	add    al,BYTE PTR [rax]
    3bc3:	00 02                	add    BYTE PTR [rdx],al
    3bc5:	0b 39                	or     edi,DWORD PTR [rcx]
    3bc7:	0c d6                	or     al,0xd6
    3bc9:	02 00                	add    al,BYTE PTR [rax]
    3bcb:	00 02                	add    BYTE PTR [rdx],al
    3bcd:	0b 39                	or     edi,DWORD PTR [rcx]
    3bcf:	0c ee                	or     al,0xee
    3bd1:	02 00                	add    al,BYTE PTR [rax]
    3bd3:	00 02                	add    BYTE PTR [rdx],al
    3bd5:	0b 39                	or     edi,DWORD PTR [rcx]
    3bd7:	0c 06                	or     al,0x6
    3bd9:	03 00                	add    eax,DWORD PTR [rax]
    3bdb:	00 02                	add    BYTE PTR [rdx],al
    3bdd:	0b 3a                	or     edi,DWORD PTR [rdx]
    3bdf:	0c 6f                	or     al,0x6f
    3be1:	03 00                	add    eax,DWORD PTR [rax]
    3be3:	00 02                	add    BYTE PTR [rdx],al
    3be5:	0b 3b                	or     edi,DWORD PTR [rbx]
    3be7:	0c 8c                	or     al,0x8c
    3be9:	03 00                	add    eax,DWORD PTR [rax]
    3beb:	00 02                	add    BYTE PTR [rdx],al
    3bed:	0b 3c 0c             	or     edi,DWORD PTR [rsp+rcx*1]
    3bf0:	a2 03 00 00 02 0b 3d 	movabs ds:0xb80c3d0b02000003,al
    3bf7:	0c b8 
    3bf9:	03 00                	add    eax,DWORD PTR [rax]
    3bfb:	00 02                	add    BYTE PTR [rdx],al
    3bfd:	0b 3f                	or     edi,DWORD PTR [rdi]
    3bff:	0c ed                	or     al,0xed
    3c01:	05 00 00 02 0b       	add    eax,0xb020000
    3c06:	3f                   	(bad)
    3c07:	0c 1e                	or     al,0x1e
    3c09:	03 00                	add    eax,DWORD PTR [rax]
    3c0b:	00 02                	add    BYTE PTR [rdx],al
    3c0d:	0b 3f                	or     edi,DWORD PTR [rdi]
    3c0f:	0c e2                	or     al,0xe2
    3c11:	03 00                	add    eax,DWORD PTR [rax]
    3c13:	00 02                	add    BYTE PTR [rdx],al
    3c15:	0b 41 0c             	or     eax,DWORD PTR [rcx+0xc]
    3c18:	fe 03                	inc    BYTE PTR [rbx]
    3c1a:	00 00                	add    BYTE PTR [rax],al
    3c1c:	02 0b                	add    cl,BYTE PTR [rbx]
    3c1e:	43 0c 14             	rex.XB or al,0x14
    3c21:	04 00                	add    al,0x0
    3c23:	00 02                	add    BYTE PTR [rdx],al
    3c25:	0b 46 0c             	or     eax,DWORD PTR [rsi+0xc]
    3c28:	2f                   	(bad)
    3c29:	04 00                	add    al,0x0
    3c2b:	00 02                	add    BYTE PTR [rdx],al
    3c2d:	0b 47 0c             	or     eax,DWORD PTR [rdi+0xc]
    3c30:	4a 04 00             	rex.WX add al,0x0
    3c33:	00 02                	add    BYTE PTR [rdx],al
    3c35:	0b 48 0c             	or     ecx,DWORD PTR [rax+0xc]
    3c38:	7b 04                	jnp    3c3e <_fini+0x26a>
    3c3a:	00 00                	add    BYTE PTR [rax],al
    3c3c:	02 0b                	add    cl,BYTE PTR [rbx]
    3c3e:	4a 0c 9b             	rex.WX or al,0x9b
    3c41:	04 00                	add    al,0x0
    3c43:	00 02                	add    BYTE PTR [rdx],al
    3c45:	0b 4b 0c             	or     ecx,DWORD PTR [rbx+0xc]
    3c48:	ce                   	(bad)
    3c49:	04 00                	add    al,0x0
    3c4b:	00 02                	add    BYTE PTR [rdx],al
    3c4d:	0b 4d 0c             	or     ecx,DWORD PTR [rbp+0xc]
    3c50:	db 04 00             	fild   DWORD PTR [rax+rax*1]
    3c53:	00 02                	add    BYTE PTR [rdx],al
    3c55:	0b 4e 0c             	or     ecx,DWORD PTR [rsi+0xc]
    3c58:	ec                   	in     al,dx
    3c59:	04 00                	add    al,0x0
    3c5b:	00 02                	add    BYTE PTR [rdx],al
    3c5d:	0b 4f 0c             	or     ecx,DWORD PTR [rdi+0xc]
    3c60:	0c 05                	or     al,0x5
    3c62:	00 00                	add    BYTE PTR [rax],al
    3c64:	02 0b                	add    cl,BYTE PTR [rbx]
    3c66:	50                   	push   rax
    3c67:	0c 2f                	or     al,0x2f
    3c69:	05 00 00 02 0b       	add    eax,0xb020000
    3c6e:	51                   	push   rcx
    3c6f:	0c 52                	or     al,0x52
    3c71:	05 00 00 02 0b       	add    eax,0xb020000
    3c76:	53                   	push   rbx
    3c77:	0c 68                	or     al,0x68
    3c79:	05 00 00 02 0b       	add    eax,0xb020000
    3c7e:	54                   	push   rsp
    3c7f:	0c 8d                	or     al,0x8d
    3c81:	05 00 00 08 55       	add    eax,0x55080000
    3c86:	01 00                	add    DWORD PTR [rax],eax
    3c88:	00 0c 1a             	add    BYTE PTR [rdx+rbx*1],cl
    3c8b:	14 22                	adc    al,0x22
    3c8d:	01 00                	add    DWORD PTR [rax],eax
    3c8f:	00 08                	add    BYTE PTR [rax],cl
    3c91:	68 04 00 00 0d       	push   0xd000004
    3c96:	39 13                	cmp    DWORD PTR [rbx],edx
    3c98:	f0 07                	lock (bad)
    3c9a:	00 00                	add    BYTE PTR [rax],al
    3c9c:	34 db                	xor    al,0xdb
    3c9e:	00 00                	add    BYTE PTR [rax],al
    3ca0:	00 fc                	add    ah,bh
    3ca2:	07                   	(bad)
    3ca3:	00 00                	add    BYTE PTR [rax],al
    3ca5:	35 03 00 04 02       	xor    eax,0x2040003
    3caa:	04 00                	add    al,0x0
    3cac:	00 00                	add    BYTE PTR [rax],al
    3cae:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    3cb1:	04 ce                	add    al,0xce
    3cb3:	02 00                	add    al,BYTE PTR [rax]
    3cb5:	00 17                	add    BYTE PTR [rdi],dl
    3cb7:	94                   	xchg   esp,eax
    3cb8:	08 00                	or     BYTE PTR [rax],al
    3cba:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    3cbd:	11 3e                	adc    DWORD PTR [rsi],edi
    3cbf:	08 00                	or     BYTE PTR [rax],al
    3cc1:	00 06                	add    BYTE PTR [rsi],al
    3cc3:	95                   	xchg   ebp,eax
    3cc4:	03 00                	add    eax,DWORD PTR [rax]
    3cc6:	00 0e                	add    BYTE PTR [rsi],cl
    3cc8:	12 0d e4 07 00 00    	adc    cl,BYTE PTR [rip+0x7e4]        # 44b2 <_IO_stdin_used+0x4b2>
    3cce:	00 06                	add    BYTE PTR [rsi],al
    3cd0:	70 04                	jo     3cd6 <_fini+0x302>
    3cd2:	00 00                	add    BYTE PTR [rax],al
    3cd4:	0e                   	(bad)
    3cd5:	13 0e                	adc    ecx,DWORD PTR [rsi]
    3cd7:	d8 07                	fadd   DWORD PTR [rdi]
    3cd9:	00 00                	add    BYTE PTR [rax],al
    3cdb:	20 06                	and    BYTE PTR [rsi],al
    3cdd:	45 06                	rex.RB (bad)
    3cdf:	00 00                	add    BYTE PTR [rax],al
    3ce1:	0e                   	(bad)
    3ce2:	14 0e                	adc    al,0xe
    3ce4:	d8 07                	fadd   DWORD PTR [rdi]
    3ce6:	00 00                	add    BYTE PTR [rax],al
    3ce8:	24 00                	and    al,0x0
    3cea:	08 94 08 00 00 0e 15 	or     BYTE PTR [rax+rcx*1+0x150e0000],dl
    3cf1:	03 0a                	add    ecx,DWORD PTR [rdx]
    3cf3:	08 00                	or     BYTE PTR [rax],al
    3cf5:	00 18                	add    BYTE PTR [rax],bl
    3cf7:	8e 02                	mov    es,WORD PTR [rdx]
    3cf9:	00 00                	add    BYTE PTR [rax],al
    3cfb:	0f 0a                	(bad)
    3cfd:	6d                   	ins    DWORD PTR es:[rdi],dx
    3cfe:	00 00                	add    BYTE PTR [rax],al
    3d00:	00 0f                	add    BYTE PTR [rdi],cl
    3d02:	18 71 01             	sbb    BYTE PTR [rcx+0x1],dh
    3d05:	00 00                	add    BYTE PTR [rax],al
    3d07:	0f 0e                	femms
    3d09:	6d                   	ins    DWORD PTR es:[rdi],dx
    3d0a:	00 00                	add    BYTE PTR [rax],al
    3d0c:	00 20                	add    BYTE PTR [rax],ah
    3d0e:	08 3d 03 00 00 0f    	or     BYTE PTR [rip+0xf000003],bh        # f003d17 <_end+0xeffdcff>
    3d14:	10 12                	adc    BYTE PTR [rdx],dl
    3d16:	3e 08 00             	ds or  BYTE PTR [rax],al
    3d19:	00 17                	add    BYTE PTR [rdi],dl
    3d1b:	8c 05 00 00 60 0f    	mov    WORD PTR [rip+0xf600000],es        # f603d21 <_end+0xf5fdd09>
    3d21:	13 af 08 00 00 06    	adc    ebp,DWORD PTR [rdi+0x6000008]
    3d27:	7a 06                	jp     3d2f <_fini+0x35b>
    3d29:	00 00                	add    BYTE PTR [rax],al
    3d2b:	0f 14 0e             	unpcklps xmm1,XMMWORD PTR [rsi]
    3d2e:	d8 07                	fadd   DWORD PTR [rdi]
    3d30:	00 00                	add    BYTE PTR [rax],al
    3d32:	00 06                	add    BYTE PTR [rsi],al
    3d34:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3d35:	04 00                	add    al,0x0
    3d37:	00 0f                	add    BYTE PTR [rdi],cl
    3d39:	15 0e d8 07 00       	adc    eax,0x7d80e
    3d3e:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    3d41:	2b 06                	sub    eax,DWORD PTR [rsi]
    3d43:	00 00                	add    BYTE PTR [rax],al
    3d45:	0f 17 0e             	movhps QWORD PTR [rsi],xmm1
    3d48:	d8 07                	fadd   DWORD PTR [rdi]
    3d4a:	00 00                	add    BYTE PTR [rax],al
    3d4c:	08 06                	or     BYTE PTR [rsi],al
    3d4e:	42 15 00 00 0f 19    	rex.X adc eax,0x190f0000
    3d54:	0c 62                	or     al,0x62
    3d56:	08 00                	or     BYTE PTR [rax],al
    3d58:	00 20                	add    BYTE PTR [rax],ah
    3d5a:	00 08                	add    BYTE PTR [rax],cl
    3d5c:	8c 05 00 00 0f 1a    	mov    WORD PTR [rip+0x1a0f0000],es        # 1a0f3d62 <_end+0x1a0edd4a>
    3d62:	03 6e 08             	add    ebp,DWORD PTR [rsi+0x8]
    3d65:	00 00                	add    BYTE PTR [rax],al
    3d67:	17                   	(bad)
    3d68:	63 04 00             	movsxd eax,DWORD PTR [rax+rax*1]
    3d6b:	00 18                	add    BYTE PTR [rax],bl
    3d6d:	0f 1c fc             	nop    esp
    3d70:	08 00                	or     BYTE PTR [rax],al
    3d72:	00 06                	add    BYTE PTR [rsi],al
    3d74:	33 06                	xor    eax,DWORD PTR [rsi]
    3d76:	00 00                	add    BYTE PTR [rax],al
    3d78:	0f 1d 0f             	nop    DWORD PTR [rdi]
    3d7b:	fc                   	cld
    3d7c:	08 00                	or     BYTE PTR [rax],al
    3d7e:	00 00                	add    BYTE PTR [rax],al
    3d80:	06                   	(bad)
    3d81:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3d82:	05 00 00 0f 1e       	add    eax,0x1e0f0000
    3d87:	0e                   	(bad)
    3d88:	d8 07                	fadd   DWORD PTR [rdi]
    3d8a:	00 00                	add    BYTE PTR [rax],al
    3d8c:	08 06                	or     BYTE PTR [rsi],al
    3d8e:	28 08                	sub    BYTE PTR [rax],cl
    3d90:	00 00                	add    BYTE PTR [rax],al
    3d92:	0f 1f 0e             	nop    DWORD PTR [rsi]
    3d95:	d8 07                	fadd   DWORD PTR [rdi]
    3d97:	00 00                	add    BYTE PTR [rax],al
    3d99:	0c 06                	or     al,0x6
    3d9b:	5b                   	pop    rbx
    3d9c:	03 00                	add    eax,DWORD PTR [rax]
    3d9e:	00 0f                	add    BYTE PTR [rdi],cl
    3da0:	20 0e                	and    BYTE PTR [rsi],cl
    3da2:	d8 07                	fadd   DWORD PTR [rdi]
    3da4:	00 00                	add    BYTE PTR [rax],al
    3da6:	10 00                	adc    BYTE PTR [rax],al
    3da8:	09 af 08 00 00 08    	or     DWORD PTR [rdi+0x8000008],ebp
    3dae:	63 04 00             	movsxd eax,DWORD PTR [rax+rax*1]
    3db1:	00 0f                	add    BYTE PTR [rdi],cl
    3db3:	21 03                	and    DWORD PTR [rbx],eax
    3db5:	bb 08 00 00 09       	mov    ebx,0x9000008
    3dba:	01 09                	add    DWORD PTR [rcx],ecx
    3dbc:	00 00                	add    BYTE PTR [rax],al
    3dbe:	18 b4 07 00 00 10 06 	sbb    BYTE PTR [rdi+rax*1+0x6100000],dh
    3dc5:	6d                   	ins    DWORD PTR es:[rdi],dx
    3dc6:	00 00                	add    BYTE PTR [rax],al
    3dc8:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    3dcb:	a2 03 00 00 af 02 2f 	movabs ds:0x92f02af000003,al
    3dd2:	09 00 
    3dd4:	00 01                	add    BYTE PTR [rcx],al
    3dd6:	2e 01 00             	cs add DWORD PTR [rax],eax
    3dd9:	00 00                	add    BYTE PTR [rax],al
    3ddb:	07                   	(bad)
    3ddc:	d6                   	(bad)
    3ddd:	09 00                	or     DWORD PTR [rax],eax
    3ddf:	00 ab 02 0e 2e 01    	add    BYTE PTR [rbx+0x12e0e02],ch
    3de5:	00 00                	add    BYTE PTR [rax],al
    3de7:	4a 09 00             	rex.WX or QWORD PTR [rax],rax
    3dea:	00 01                	add    BYTE PTR [rcx],al
    3dec:	2e 01 00             	cs add DWORD PTR [rax],eax
    3def:	00 01                	add    BYTE PTR [rcx],al
    3df1:	2e 00 00             	cs add BYTE PTR [rax],al
    3df4:	00 00                	add    BYTE PTR [rax],al
    3df6:	36 08 06             	ss or  BYTE PTR [rsi],al
    3df9:	00 00                	add    BYTE PTR [rax],al
    3dfb:	11 45 0d             	adc    DWORD PTR [rbp+0xd],eax
    3dfe:	6b 09 00             	imul   ecx,DWORD PTR [rcx],0x0
    3e01:	00 01                	add    BYTE PTR [rcx],al
    3e03:	f5                   	cmc
    3e04:	00 00                	add    BYTE PTR [rax],al
    3e06:	00 01                	add    BYTE PTR [rcx],al
    3e08:	f5                   	cmc
    3e09:	00 00                	add    BYTE PTR [rax],al
    3e0b:	00 01                	add    BYTE PTR [rcx],al
    3e0d:	0d 01 00 00 01       	or     eax,0x1000001
    3e12:	f5                   	cmc
    3e13:	00 00                	add    BYTE PTR [rax],al
    3e15:	00 00                	add    BYTE PTR [rax],al
    3e17:	07                   	(bad)
    3e18:	2f                   	(bad)
    3e19:	07                   	(bad)
    3e1a:	00 00                	add    BYTE PTR [rax],al
    3e1c:	a3 02 0e 2e 01 00 00 	movabs ds:0x9860000012e0e02,eax
    3e23:	86 09 
    3e25:	00 00                	add    BYTE PTR [rax],al
    3e27:	01 2e                	add    DWORD PTR [rsi],ebp
    3e29:	00 00                	add    BYTE PTR [rax],al
    3e2b:	00 01                	add    BYTE PTR [rcx],al
    3e2d:	2e 00 00             	cs add BYTE PTR [rax],al
    3e30:	00 00                	add    BYTE PTR [rax],al
    3e32:	37                   	(bad)
    3e33:	ae                   	scas   al,BYTE PTR es:[rdi]
    3e34:	04 00                	add    al,0x0
    3e36:	00 01                	add    BYTE PTR [rcx],al
    3e38:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3e39:	06                   	(bad)
    3e3a:	56                   	push   rsi
    3e3b:	04 00                	add    al,0x0
    3e3d:	00 10                	add    BYTE PTR [rax],dl
    3e3f:	22 00                	and    al,BYTE PTR [rax]
    3e41:	00 00                	add    BYTE PTR [rax],al
    3e43:	00 00                	add    BYTE PTR [rax],al
    3e45:	00 3e                	add    BYTE PTR [rsi],bh
    3e47:	00 00                	add    BYTE PTR [rax],al
    3e49:	00 00                	add    BYTE PTR [rax],al
    3e4b:	00 00                	add    BYTE PTR [rax],al
    3e4d:	00 01                	add    BYTE PTR [rcx],al
    3e4f:	9c                   	pushf
    3e50:	17                   	(bad)
    3e51:	0a 00                	or     al,BYTE PTR [rax]
    3e53:	00 19                	add    BYTE PTR [rcx],bl
    3e55:	0e                   	(bad)
    3e56:	22 00                	and    al,BYTE PTR [rax]
    3e58:	00 ad 15 0d 09 00    	add    BYTE PTR [rbp+0x90d15],ch
    3e5e:	00 75 13             	add    BYTE PTR [rbp+0x13],dh
    3e61:	00 00                	add    BYTE PTR [rax],al
    3e63:	6b 13 00             	imul   edx,DWORD PTR [rbx],0x0
    3e66:	00 1a                	add    BYTE PTR [rdx],bl
    3e68:	d3 03                	rol    DWORD PTR [rbx],cl
    3e6a:	00 00                	add    BYTE PTR [rax],al
    3e6c:	27                   	(bad)
    3e6d:	0a 00                	or     al,BYTE PTR [rax]
    3e6f:	00 09                	add    BYTE PTR [rcx],cl
    3e71:	03 ad 40 00 00 00    	add    ebp,DWORD PTR [rbp+0x40]
    3e77:	00 00                	add    BYTE PTR [rax],al
    3e79:	00 38                	add    BYTE PTR [rax],bh
    3e7b:	25 22 00 00 00       	and    eax,0x22
    3e80:	00 00                	add    BYTE PTR [rax],al
    3e82:	00 1e                	add    BYTE PTR [rsi],bl
    3e84:	09 00                	or     DWORD PTR [rax],eax
    3e86:	00 0b                	add    BYTE PTR [rbx],cl
    3e88:	4e 22 00             	rex.WRX and r8b,BYTE PTR [rax]
    3e8b:	00 00                	add    BYTE PTR [rax],al
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 4a 09             	add    BYTE PTR [rdx+0x9],cl
    3e92:	00 00                	add    BYTE PTR [rax],al
    3e94:	03 01                	add    eax,DWORD PTR [rcx]
    3e96:	55                   	push   rbp
    3e97:	09 03                	or     DWORD PTR [rbx],eax
    3e99:	a8 40                	test   al,0x40
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 00                	add    BYTE PTR [rax],al
    3ea1:	03 01                	add    eax,DWORD PTR [rcx]
    3ea3:	54                   	push   rsp
    3ea4:	09 03                	or     DWORD PTR [rbx],eax
    3ea6:	8d 40 00             	lea    eax,[rax+0x0]
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	00 03                	add    BYTE PTR [rbx],al
    3eaf:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    3eb2:	08 ae 03 01 52 09    	or     BYTE PTR [rsi+0x9520103],ch
    3eb8:	03 ad 40 00 00 00    	add    ebp,DWORD PTR [rbp+0x40]
    3ebe:	00 00                	add    BYTE PTR [rax],al
    3ec0:	00 00                	add    BYTE PTR [rax],al
    3ec2:	00 12                	add    BYTE PTR [rdx],dl
    3ec4:	01 01                	add    DWORD PTR [rcx],eax
    3ec6:	00 00                	add    BYTE PTR [rax],al
    3ec8:	27                   	(bad)
    3ec9:	0a 00                	or     al,BYTE PTR [rax]
    3ecb:	00 13                	add    BYTE PTR [rbx],dl
    3ecd:	3a 00                	cmp    al,BYTE PTR [rax]
    3ecf:	00 00                	add    BYTE PTR [rax],al
    3ed1:	14 00                	adc    al,0x0
    3ed3:	0d 17 0a 00 00       	or     eax,0xa17
    3ed8:	39 c9                	cmp    ecx,ecx
    3eda:	09 00                	or     DWORD PTR [rax],eax
    3edc:	00 01                	add    BYTE PTR [rcx],al
    3ede:	72 0c                	jb     3eec <_fini+0x518>
    3ee0:	66 00 00             	data16 add BYTE PTR [rax],al
    3ee3:	00 01                	add    BYTE PTR [rcx],al
    3ee5:	62 0a 00 00 0c       	(bad)
    3eea:	e7 09                	out    0x9,eax
    3eec:	00 00                	add    BYTE PTR [rax],al
    3eee:	01 72 21             	add    DWORD PTR [rdx+0x21],esi
    3ef1:	62 0a 00 00 0c       	(bad)
    3ef6:	ed                   	in     eax,dx
    3ef7:	09 00                	or     DWORD PTR [rax],eax
    3ef9:	00 01                	add    BYTE PTR [rcx],al
    3efb:	72 30                	jb     3f2d <_fini+0x559>
    3efd:	62 0a 00 00 3a       	(bad)
    3f02:	c2 09 00             	ret    0x9
    3f05:	00 01                	add    BYTE PTR [rcx],al
    3f07:	74 0e                	je     3f17 <_fini+0x543>
    3f09:	d8 07                	fadd   DWORD PTR [rdi]
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 09                	add    BYTE PTR [rcx],cl
    3f0f:	62                   	(bad)
    3f10:	08 00                	or     BYTE PTR [rax],al
    3f12:	00 3b                	add    BYTE PTR [rbx],bh
    3f14:	de 09                	fimul  WORD PTR [rcx]
    3f16:	00 00                	add    BYTE PTR [rax],al
    3f18:	01 64 0d 01          	add    DWORD PTR [rbp+rcx*1+0x1],esp
    3f1c:	8c 0a                	mov    WORD PTR [rdx],cs
    3f1e:	00 00                	add    BYTE PTR [rax],al
    3f20:	0c 0e                	or     al,0xe
    3f22:	22 00                	and    al,BYTE PTR [rax]
    3f24:	00 01                	add    BYTE PTR [rcx],al
    3f26:	64 1c 0d             	fs sbb al,0xd
    3f29:	09 00                	or     DWORD PTR [rax],eax
    3f2b:	00 3c 21             	add    BYTE PTR [rcx+riz*1],bh
    3f2e:	69 00 68 13 d8 07    	imul   eax,DWORD PTR [rax],0x7d81368
    3f34:	00 00                	add    BYTE PTR [rax],al
    3f36:	00 00                	add    BYTE PTR [rax],al
    3f38:	3d af 05 00 00       	cmp    eax,0x5af
    3f3d:	01 56 05             	add    DWORD PTR [rsi+0x5],edx
    3f40:	60                   	(bad)
    3f41:	05 00 00 66 00       	add    eax,0x660000
    3f46:	00 00                	add    BYTE PTR [rax],al
    3f48:	01 ce                	add    esi,ecx
    3f4a:	0a 00                	or     al,BYTE PTR [rax]
    3f4c:	00 0c 0e             	add    BYTE PTR [rsi+rcx*1],cl
    3f4f:	22 00                	and    al,BYTE PTR [rax]
    3f51:	00 01                	add    BYTE PTR [rcx],al
    3f53:	56                   	push   rsi
    3f54:	19 0d 09 00 00 0c    	sbb    DWORD PTR [rip+0xc000009],ecx        # c003f63 <_end+0xbffdf4b>
    3f5a:	42 15 00 00 01 56    	rex.X adc eax,0x56010000
    3f60:	26 62                	es (bad)
    3f62:	08 00                	or     BYTE PTR [rax],al
    3f64:	00 3e                	add    BYTE PTR [rsi],bh
    3f66:	d3 03                	rol    DWORD PTR [rbx],cl
    3f68:	00 00                	add    BYTE PTR [rax],al
    3f6a:	de 0a                	fimul  WORD PTR [rdx]
    3f6c:	00 00                	add    BYTE PTR [rax],al
    3f6e:	21 69 6e             	and    DWORD PTR [rcx+0x6e],ebp
    3f71:	78 00                	js     3f73 <_fini+0x59f>
    3f73:	59                   	pop    rcx
    3f74:	0e                   	(bad)
    3f75:	d8 07                	fadd   DWORD PTR [rdi]
    3f77:	00 00                	add    BYTE PTR [rax],al
    3f79:	00 12                	add    BYTE PTR [rdx],dl
    3f7b:	01 01                	add    DWORD PTR [rcx],eax
    3f7d:	00 00                	add    BYTE PTR [rax],al
    3f7f:	de 0a                	fimul  WORD PTR [rdx]
    3f81:	00 00                	add    BYTE PTR [rax],al
    3f83:	13 3a                	adc    edi,DWORD PTR [rdx]
    3f85:	00 00                	add    BYTE PTR [rax],al
    3f87:	00 20                	add    BYTE PTR [rax],ah
    3f89:	00 0d ce 0a 00 00    	add    BYTE PTR [rip+0xace],cl        # 4a5d <__GNU_EH_FRAME_HDR+0x3ad>
    3f8f:	1b 31                	sbb    esi,DWORD PTR [rcx]
    3f91:	04 00                	add    al,0x0
    3f93:	00 3a                	add    BYTE PTR [rdx],bh
    3f95:	05 df 06 00 00       	add    eax,0x6df
    3f9a:	66 00 00             	data16 add BYTE PTR [rax],al
    3f9d:	00 e0                	add    al,ah
    3f9f:	20 00                	and    BYTE PTR [rax],al
    3fa1:	00 00                	add    BYTE PTR [rax],al
    3fa3:	00 00                	add    BYTE PTR [rax],al
    3fa5:	00 cd                	add    ch,cl
    3fa7:	00 00                	add    BYTE PTR [rax],al
    3fa9:	00 00                	add    BYTE PTR [rax],al
    3fab:	00 00                	add    BYTE PTR [rax],al
    3fad:	00 01                	add    BYTE PTR [rcx],al
    3faf:	9c                   	pushf
    3fb0:	54                   	push   rsp
    3fb1:	0c 00                	or     al,0x0
    3fb3:	00 19                	add    BYTE PTR [rcx],bl
    3fb5:	0e                   	(bad)
    3fb6:	22 00                	and    al,BYTE PTR [rax]
    3fb8:	00 3a                	add    BYTE PTR [rdx],bh
    3fba:	17                   	(bad)
    3fbb:	0d 09 00 00 a7       	or     eax,0xa7000009
    3fc0:	13 00                	adc    eax,DWORD PTR [rax]
    3fc2:	00 9f 13 00 00 22    	add    BYTE PTR [rdi+0x22000013],bl
    3fc8:	42 15 00 00 3a 24    	rex.X adc eax,0x243a0000
    3fce:	62                   	(bad)
    3fcf:	08 00                	or     BYTE PTR [rax],al
    3fd1:	00 02                	add    BYTE PTR [rdx],al
    3fd3:	91                   	xchg   ecx,eax
    3fd4:	00 1a                	add    BYTE PTR [rdx],bl
    3fd6:	d3 03                	rol    DWORD PTR [rbx],cl
    3fd8:	00 00                	add    BYTE PTR [rax],al
    3fda:	64 0c 00             	fs or  al,0x0
    3fdd:	00 09                	add    BYTE PTR [rcx],cl
    3fdf:	03 b0 43 00 00 00    	add    esi,DWORD PTR [rax+0x43]
    3fe5:	00 00                	add    BYTE PTR [rax],al
    3fe7:	00 1c 69             	add    BYTE PTR [rcx+rbp*2],bl
    3fea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3feb:	78 00                	js     3fed <_fini+0x619>
    3fed:	3d 0e d8 07 00       	cmp    eax,0x7d80e
    3ff2:	00 cb                	add    bl,cl
    3ff4:	13 00                	adc    eax,DWORD PTR [rax]
    3ff6:	00 c7                	add    bh,al
    3ff8:	13 00                	adc    eax,DWORD PTR [rax]
    3ffa:	00 1d a5 04 00 00    	add    BYTE PTR [rip+0x4a5],bl        # 44a5 <_IO_stdin_used+0x4a5>
    4000:	47 0e                	rex.RXB (bad)
    4002:	d8 07                	fadd   DWORD PTR [rdi]
    4004:	00 00                	add    BYTE PTR [rax],al
    4006:	df 13                	fist   WORD PTR [rbx]
    4008:	00 00                	add    BYTE PTR [rax],al
    400a:	db 13                	fist   DWORD PTR [rbx]
    400c:	00 00                	add    BYTE PTR [rax],al
    400e:	1d 7a 06 00 00       	sbb    eax,0x67a
    4013:	48 0e                	rex.W (bad)
    4015:	d8 07                	fadd   DWORD PTR [rdi]
    4017:	00 00                	add    BYTE PTR [rax],al
    4019:	f0 13 00             	lock adc eax,DWORD PTR [rax]
    401c:	00 ee                	add    dh,ch
    401e:	13 00                	adc    eax,DWORD PTR [rax]
    4020:	00 1e                	add    BYTE PTR [rsi],bl
    4022:	8c 0a                	mov    WORD PTR [rdx],cs
    4024:	00 00                	add    BYTE PTR [rax],al
    4026:	fd                   	std
    4027:	20 00                	and    BYTE PTR [rax],al
    4029:	00 00                	add    BYTE PTR [rax],al
    402b:	00 00                	add    BYTE PTR [rax],al
    402d:	00 01                	add    BYTE PTR [rcx],al
    402f:	f6 01 00             	test   BYTE PTR [rcx],0x0
    4032:	00 3d 21 02 0c 00    	add    BYTE PTR [rip+0xc0221],bh        # c4259 <_end+0xbe241>
    4038:	00 05 ad 0a 00 00    	add    BYTE PTR [rip+0xaad],al        # 4aeb <__GNU_EH_FRAME_HDR+0x43b>
    403e:	fd                   	std
    403f:	13 00                	adc    eax,DWORD PTR [rax]
    4041:	00 f9                	add    cl,bh
    4043:	13 00                	adc    eax,DWORD PTR [rax]
    4045:	00 05 a1 0a 00 00    	add    BYTE PTR [rip+0xaa1],al        # 4aec <__GNU_EH_FRAME_HDR+0x43c>
    404b:	1a 14 00             	sbb    dl,BYTE PTR [rax+rax*1]
    404e:	00 14 14             	add    BYTE PTR [rsp+rdx*1],dl
    4051:	00 00                	add    BYTE PTR [rax],al
    4053:	1f                   	(bad)
    4054:	06                   	(bad)
    4055:	02 00                	add    al,BYTE PTR [rax]
    4057:	00 0f                	add    BYTE PTR [rdi],cl
    4059:	c2 0a 00             	ret    0xa
    405c:	00 38                	add    BYTE PTR [rax],bh
    405e:	14 00                	adc    al,0x0
    4060:	00 30                	add    BYTE PTR [rax],dh
    4062:	14 00                	adc    al,0x0
    4064:	00 23                	add    BYTE PTR [rbx],ah
    4066:	2c 0a                	sub    al,0xa
    4068:	00 00                	add    BYTE PTR [rax],al
    406a:	15 21 00 00 00       	adc    eax,0x21
    406f:	00 00                	add    BYTE PTR [rax],al
    4071:	00 00                	add    BYTE PTR [rax],al
    4073:	15 21 00 00 00       	adc    eax,0x21
    4078:	00 00                	add    BYTE PTR [rax],al
    407a:	00 19                	add    BYTE PTR [rcx],bl
    407c:	00 00                	add    BYTE PTR [rax],al
    407e:	00 00                	add    BYTE PTR [rax],al
    4080:	00 00                	add    BYTE PTR [rax],al
    4082:	00 5c 05 49          	add    BYTE PTR [rbp+rax*1+0x49],bl
    4086:	0a 00                	or     al,BYTE PTR [rax]
    4088:	00 57 14             	add    BYTE PTR [rdi+0x14],dl
    408b:	00 00                	add    BYTE PTR [rax],al
    408d:	55                   	push   rbp
    408e:	14 00                	adc    al,0x0
    4090:	00 05 3d 0a 00 00    	add    BYTE PTR [rip+0xa3d],al        # 4ad3 <__GNU_EH_FRAME_HDR+0x423>
    4096:	63 14 00             	movsxd edx,DWORD PTR [rax+rax*1]
    4099:	00 61 14             	add    BYTE PTR [rcx+0x14],ah
    409c:	00 00                	add    BYTE PTR [rax],al
    409e:	0f 55 0a             	andnps xmm1,XMMWORD PTR [rdx]
    40a1:	00 00                	add    BYTE PTR [rax],al
    40a3:	74 14                	je     40b9 <_IO_stdin_used+0xb9>
    40a5:	00 00                	add    BYTE PTR [rax],al
    40a7:	70 14                	jo     40bd <_IO_stdin_used+0xbd>
    40a9:	00 00                	add    BYTE PTR [rax],al
    40ab:	00 00                	add    BYTE PTR [rax],al
    40ad:	00 10                	add    BYTE PTR [rax],dl
    40af:	3d 21 00 00 00       	cmp    eax,0x21
    40b4:	00 00                	add    BYTE PTR [rax],al
    40b6:	00 01                	add    BYTE PTR [rcx],al
    40b8:	30 10                	xor    BYTE PTR [rax],dl
    40ba:	89 21                	mov    DWORD PTR [rcx],esp
    40bc:	00 00                	add    BYTE PTR [rax],al
    40be:	00 00                	add    BYTE PTR [rax],al
    40c0:	00 00                	add    BYTE PTR [rax],al
    40c2:	01 30                	add    DWORD PTR [rax],esi
    40c4:	0b ad 21 00 00 00    	or     ebp,DWORD PTR [rbp+0x21]
    40ca:	00 00                	add    BYTE PTR [rax],al
    40cc:	00 4a 09             	add    BYTE PTR [rdx+0x9],cl
    40cf:	00 00                	add    BYTE PTR [rax],al
    40d1:	03 01                	add    eax,DWORD PTR [rcx]
    40d3:	55                   	push   rbp
    40d4:	09 03                	or     DWORD PTR [rbx],eax
    40d6:	a8 40                	test   al,0x40
    40d8:	00 00                	add    BYTE PTR [rax],al
    40da:	00 00                	add    BYTE PTR [rax],al
    40dc:	00 00                	add    BYTE PTR [rax],al
    40de:	03 01                	add    eax,DWORD PTR [rcx]
    40e0:	54                   	push   rsp
    40e1:	09 03                	or     DWORD PTR [rbx],eax
    40e3:	8d 40 00             	lea    eax,[rax+0x0]
    40e6:	00 00                	add    BYTE PTR [rax],al
    40e8:	00 00                	add    BYTE PTR [rax],al
    40ea:	00 03                	add    BYTE PTR [rbx],al
    40ec:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    40ef:	08 3b                	or     BYTE PTR [rbx],bh
    40f1:	03 01                	add    eax,DWORD PTR [rcx]
    40f3:	52                   	push   rdx
    40f4:	09 03                	or     DWORD PTR [rbx],eax
    40f6:	b0 43                	mov    al,0x43
	...
    4100:	12 01                	adc    al,BYTE PTR [rcx]
    4102:	01 00                	add    DWORD PTR [rax],eax
    4104:	00 64 0c 00          	add    BYTE PTR [rsp+rcx*1+0x0],ah
    4108:	00 13                	add    BYTE PTR [rbx],dl
    410a:	3a 00                	cmp    al,BYTE PTR [rax]
    410c:	00 00                	add    BYTE PTR [rax],al
    410e:	1e                   	(bad)
    410f:	00 0d 54 0c 00 00    	add    BYTE PTR [rip+0xc54],cl        # 4d69 <__FRAME_END__+0x35>
    4115:	1b 88 05 00 00 1d    	sbb    ecx,DWORD PTR [rax+0x1d000005]
    411b:	05 fe 06 00 00       	add    eax,0x6fe
    4120:	66 00 00             	data16 add BYTE PTR [rax],al
    4123:	00 40 1f             	add    BYTE PTR [rax+0x1f],al
    4126:	00 00                	add    BYTE PTR [rax],al
    4128:	00 00                	add    BYTE PTR [rax],al
    412a:	00 00                	add    BYTE PTR [rax],al
    412c:	96                   	xchg   esi,eax
    412d:	01 00                	add    DWORD PTR [rax],eax
    412f:	00 00                	add    BYTE PTR [rax],al
    4131:	00 00                	add    BYTE PTR [rax],al
    4133:	00 01                	add    BYTE PTR [rcx],al
    4135:	9c                   	pushf
    4136:	97                   	xchg   edi,eax
    4137:	0e                   	(bad)
    4138:	00 00                	add    BYTE PTR [rax],al
    413a:	19 0e                	sbb    DWORD PTR [rsi],ecx
    413c:	22 00                	and    al,BYTE PTR [rax]
    413e:	00 1d 18 0d 09 00    	add    BYTE PTR [rip+0x90d18],bl        # 94e5c <_end+0x8ee44>
    4144:	00 94 14 00 00 84 14 	add    BYTE PTR [rsp+rdx*1+0x14840000],dl
    414b:	00 00                	add    BYTE PTR [rax],al
    414d:	22 42 15             	and    al,BYTE PTR [rdx+0x15]
    4150:	00 00                	add    BYTE PTR [rax],al
    4152:	1d 25 62 08 00       	sbb    eax,0x86225
    4157:	00 02                	add    BYTE PTR [rdx],al
    4159:	91                   	xchg   ecx,eax
    415a:	00 1a                	add    BYTE PTR [rdx],bl
    415c:	d3 03                	rol    DWORD PTR [rbx],cl
    415e:	00 00                	add    BYTE PTR [rax],al
    4160:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    4161:	0e                   	(bad)
    4162:	00 00                	add    BYTE PTR [rax],al
    4164:	09 03                	or     DWORD PTR [rbx],eax
    4166:	90                   	nop
    4167:	43 00 00             	rex.XB add BYTE PTR [r8],al
    416a:	00 00                	add    BYTE PTR [rax],al
    416c:	00 00                	add    BYTE PTR [rax],al
    416e:	1c 69                	sbb    al,0x69
    4170:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4171:	78 00                	js     4173 <_IO_stdin_used+0x173>
    4173:	20 0e                	and    BYTE PTR [rsi],cl
    4175:	d8 07                	fadd   DWORD PTR [rdi]
    4177:	00 00                	add    BYTE PTR [rax],al
    4179:	dc 14 00             	fcom   QWORD PTR [rax+rax*1]
    417c:	00 d6                	add    dh,dl
    417e:	14 00                	adc    al,0x0
    4180:	00 24 eb             	add    BYTE PTR [rbx+rbp*8],ah
    4183:	01 00                	add    DWORD PTR [rax],eax
    4185:	00 ed                	add    ch,ch
    4187:	0c 00                	or     al,0x0
    4189:	00 3f                	add    BYTE PTR [rdi],bh
    418b:	b5 09                	mov    ch,0x9
    418d:	00 00                	add    BYTE PTR [rax],al
    418f:	01 28                	add    DWORD PTR [rax],ebp
    4191:	12 d8                	adc    bl,al
    4193:	07                   	(bad)
    4194:	00 00                	add    BYTE PTR [rax],al
    4196:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
    4199:	25 8c 0a 00 00       	and    eax,0xa8c
    419e:	5d                   	pop    rbp
    419f:	1f                   	(bad)
    41a0:	00 00                	add    BYTE PTR [rax],al
    41a2:	00 00                	add    BYTE PTR [rax],al
    41a4:	00 00                	add    BYTE PTR [rax],al
    41a6:	01 54 1f 00          	add    DWORD PTR [rdi+rbx*1+0x0],edx
    41aa:	00 00                	add    BYTE PTR [rax],al
    41ac:	00 00                	add    BYTE PTR [rax],al
    41ae:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
    41b1:	00 00                	add    BYTE PTR [rax],al
    41b3:	00 00                	add    BYTE PTR [rax],al
    41b5:	00 00                	add    BYTE PTR [rax],al
    41b7:	20 21                	and    BYTE PTR [rcx],ah
    41b9:	86 0d 00 00 05 ad    	xchg   BYTE PTR [rip+0xffffffffad050000],cl        # ffffffffad0541bf <_end+0xffffffffad04e1a7>
    41bf:	0a 00                	or     al,BYTE PTR [rax]
    41c1:	00 f5                	add    ch,dh
    41c3:	14 00                	adc    al,0x0
    41c5:	00 f3                	add    bl,dh
    41c7:	14 00                	adc    al,0x0
    41c9:	00 05 a1 0a 00 00    	add    BYTE PTR [rip+0xaa1],al        # 4c70 <__GNU_EH_FRAME_HDR+0x5c0>
    41cf:	05 15 00 00 01       	add    eax,0x1000015
    41d4:	15 00 00 1f d0       	adc    eax,0xd01f0000
    41d9:	01 00                	add    DWORD PTR [rax],eax
    41db:	00 0f                	add    BYTE PTR [rdi],cl
    41dd:	c2 0a 00             	ret    0xa
    41e0:	00 1a                	add    BYTE PTR [rdx],bl
    41e2:	15 00 00 14 15       	adc    eax,0x15140000
    41e7:	00 00                	add    BYTE PTR [rax],al
    41e9:	23 2c 0a             	and    ebp,DWORD PTR [rdx+rcx*1]
    41ec:	00 00                	add    BYTE PTR [rax],al
    41ee:	86 1f                	xchg   BYTE PTR [rdi],bl
    41f0:	00 00                	add    BYTE PTR [rax],al
    41f2:	00 00                	add    BYTE PTR [rax],al
    41f4:	00 00                	add    BYTE PTR [rax],al
    41f6:	00 86 1f 00 00 00    	add    BYTE PTR [rsi+0x1f],al
    41fc:	00 00                	add    BYTE PTR [rax],al
    41fe:	00 17                	add    BYTE PTR [rdi],dl
    4200:	00 00                	add    BYTE PTR [rax],al
    4202:	00 00                	add    BYTE PTR [rax],al
    4204:	00 00                	add    BYTE PTR [rax],al
    4206:	00 5c 05 49          	add    BYTE PTR [rbp+rax*1+0x49],bl
    420a:	0a 00                	or     al,BYTE PTR [rax]
    420c:	00 38                	add    BYTE PTR [rax],bh
    420e:	15 00 00 36 15       	adc    eax,0x15360000
    4213:	00 00                	add    BYTE PTR [rax],al
    4215:	05 3d 0a 00 00       	add    eax,0xa3d
    421a:	44 15 00 00 42 15    	rex.R adc eax,0x15420000
    4220:	00 00                	add    BYTE PTR [rax],al
    4222:	0f 55 0a             	andnps xmm1,XMMWORD PTR [rdx]
    4225:	00 00                	add    BYTE PTR [rax],al
    4227:	55                   	push   rbp
    4228:	15 00 00 51 15       	adc    eax,0x15510000
    422d:	00 00                	add    BYTE PTR [rax],al
    422f:	00 00                	add    BYTE PTR [rax],al
    4231:	00 25 67 0a 00 00    	add    BYTE PTR [rip+0xa67],ah        # 4c9e <__GNU_EH_FRAME_HDR+0x5ee>
    4237:	b6 1f                	mov    dh,0x1f
    4239:	00 00                	add    BYTE PTR [rax],al
    423b:	00 00                	add    BYTE PTR [rax],al
    423d:	00 00                	add    BYTE PTR [rax],al
    423f:	01 b6 1f 00 00 00    	add    DWORD PTR [rsi+0x1f],esi
    4245:	00 00                	add    BYTE PTR [rax],al
    4247:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
    424a:	00 00                	add    BYTE PTR [rax],al
    424c:	00 00                	add    BYTE PTR [rax],al
    424e:	00 00                	add    BYTE PTR [rax],al
    4250:	35 33 51 0e 00       	xor    eax,0xe5133
    4255:	00 05 74 0a 00 00    	add    BYTE PTR [rip+0xa74],al        # 4ccf <__GNU_EH_FRAME_HDR+0x61f>
    425b:	69 15 00 00 65 15 00 	imul   edx,DWORD PTR [rip+0x15650000],0x191e0000        # 15654265 <_end+0x1564e24d>
    4262:	00 1e 19 
    4265:	0f 00 00             	sldt   WORD PTR [rax]
    4268:	e2 1f                	loop   4289 <_IO_stdin_used+0x289>
    426a:	00 00                	add    BYTE PTR [rax],al
    426c:	00 00                	add    BYTE PTR [rax],al
    426e:	00 00                	add    BYTE PTR [rax],al
    4270:	00 db                	add    bl,bl
    4272:	01 00                	add    DWORD PTR [rax],eax
    4274:	00 67 0b             	add    BYTE PTR [rdi+0xb],ah
    4277:	0a 0e                	or     cl,BYTE PTR [rsi]
    4279:	00 00                	add    BYTE PTR [rax],al
    427b:	05 42 0f 00 00       	add    eax,0xf42
    4280:	7a 15                	jp     4297 <_IO_stdin_used+0x297>
    4282:	00 00                	add    BYTE PTR [rax],al
    4284:	78 15                	js     429b <_IO_stdin_used+0x29b>
    4286:	00 00                	add    BYTE PTR [rax],al
    4288:	05 36 0f 00 00       	add    eax,0xf36
    428d:	84 15 00 00 82 15    	test   BYTE PTR [rip+0x15820000],dl        # 15824293 <_end+0x1581e27b>
    4293:	00 00                	add    BYTE PTR [rax],al
    4295:	05 2a 0f 00 00       	add    eax,0xf2a
    429a:	91                   	xchg   ecx,eax
    429b:	15 00 00 8d 15       	adc    eax,0x158d0000
    42a0:	00 00                	add    BYTE PTR [rax],al
    42a2:	0b f7                	or     esi,edi
    42a4:	1f                   	(bad)
    42a5:	00 00                	add    BYTE PTR [rax],al
    42a7:	00 00                	add    BYTE PTR [rax],al
    42a9:	00 00                	add    BYTE PTR [rax],al
    42ab:	65 10 00             	adc    BYTE PTR gs:[rax],al
    42ae:	00 03                	add    BYTE PTR [rbx],al
    42b0:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
    42b4:	00 00                	add    BYTE PTR [rax],al
    42b6:	40 80 0a 00          	rex or BYTE PTR [rdx],0x0
    42ba:	00 f7                	add    bh,dh
    42bc:	1f                   	(bad)
    42bd:	00 00                	add    BYTE PTR [rax],al
    42bf:	00 00                	add    BYTE PTR [rax],al
    42c1:	00 00                	add    BYTE PTR [rax],al
    42c3:	3c 00                	cmp    al,0x0
    42c5:	00 00                	add    BYTE PTR [rax],al
    42c7:	00 00                	add    BYTE PTR [rax],al
    42c9:	00 00                	add    BYTE PTR [rax],al
    42cb:	31 0e                	xor    DWORD PTR [rsi],ecx
    42cd:	00 00                	add    BYTE PTR [rax],al
    42cf:	0f 81 0a 00 00 af    	jno    ffffffffaf0042df <_end+0xffffffffaeffe2c7>
    42d5:	15 00 00 a5 15       	adc    eax,0x15a50000
    42da:	00 00                	add    BYTE PTR [rax],al
    42dc:	00 10                	add    BYTE PTR [rax],dl
    42de:	c9                   	leave
    42df:	1f                   	(bad)
    42e0:	00 00                	add    BYTE PTR [rax],al
    42e2:	00 00                	add    BYTE PTR [rax],al
    42e4:	00 00                	add    BYTE PTR [rax],al
    42e6:	01 30                	add    DWORD PTR [rax],esi
    42e8:	0b ce                	or     ecx,esi
    42ea:	1f                   	(bad)
    42eb:	00 00                	add    BYTE PTR [rax],al
    42ed:	00 00                	add    BYTE PTR [rax],al
    42ef:	00 00                	add    BYTE PTR [rax],al
    42f1:	2f                   	(bad)
    42f2:	09 00                	or     DWORD PTR [rax],eax
    42f4:	00 03                	add    BYTE PTR [rbx],al
    42f6:	01 54 02 7c          	add    DWORD PTR [rdx+rax*1+0x7c],edx
    42fa:	00 00                	add    BYTE PTR [rax],al
    42fc:	00 10                	add    BYTE PTR [rax],dl
    42fe:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    42ff:	20 00                	and    BYTE PTR [rax],al
    4301:	00 00                	add    BYTE PTR [rax],al
    4303:	00 00                	add    BYTE PTR [rax],al
    4305:	00 01                	add    BYTE PTR [rcx],al
    4307:	30 0b                	xor    BYTE PTR [rbx],cl
    4309:	d6                   	(bad)
    430a:	20 00                	and    BYTE PTR [rax],al
    430c:	00 00                	add    BYTE PTR [rax],al
    430e:	00 00                	add    BYTE PTR [rax],al
    4310:	00 4a 09             	add    BYTE PTR [rdx+0x9],cl
    4313:	00 00                	add    BYTE PTR [rax],al
    4315:	03 01                	add    eax,DWORD PTR [rcx]
    4317:	55                   	push   rbp
    4318:	09 03                	or     DWORD PTR [rbx],eax
    431a:	a8 40                	test   al,0x40
    431c:	00 00                	add    BYTE PTR [rax],al
    431e:	00 00                	add    BYTE PTR [rax],al
    4320:	00 00                	add    BYTE PTR [rax],al
    4322:	03 01                	add    eax,DWORD PTR [rcx]
    4324:	54                   	push   rsp
    4325:	09 03                	or     DWORD PTR [rbx],eax
    4327:	8d 40 00             	lea    eax,[rax+0x0]
    432a:	00 00                	add    BYTE PTR [rax],al
    432c:	00 00                	add    BYTE PTR [rax],al
    432e:	00 03                	add    BYTE PTR [rbx],al
    4330:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    4333:	4e 03 01             	rex.WRX add r8,QWORD PTR [rcx]
    4336:	52                   	push   rdx
    4337:	09 03                	or     DWORD PTR [rbx],eax
    4339:	90                   	nop
    433a:	43 00 00             	rex.XB add BYTE PTR [r8],al
    433d:	00 00                	add    BYTE PTR [rax],al
    433f:	00 00                	add    BYTE PTR [rax],al
    4341:	00 00                	add    BYTE PTR [rax],al
    4343:	12 01                	adc    al,BYTE PTR [rcx]
    4345:	01 00                	add    DWORD PTR [rax],eax
    4347:	00 a7 0e 00 00 13    	add    BYTE PTR [rdi+0x1300000e],ah
    434d:	3a 00                	cmp    al,BYTE PTR [rax]
    434f:	00 00                	add    BYTE PTR [rax],al
    4351:	1f                   	(bad)
    4352:	00 0d 97 0e 00 00    	add    BYTE PTR [rip+0xe97],cl        # 51ef <__FRAME_END__+0x4bb>
    4358:	1b 4a 05             	sbb    ecx,DWORD PTR [rdx+0x5]
    435b:	00 00                	add    BYTE PTR [rax],al
    435d:	0d 06 53 05 00       	or     eax,0x55306
    4362:	00 01                	add    BYTE PTR [rcx],al
    4364:	09 00                	or     DWORD PTR [rax],eax
    4366:	00 d0                	add    al,dl
    4368:	1e                   	(bad)
    4369:	00 00                	add    BYTE PTR [rax],al
    436b:	00 00                	add    BYTE PTR [rax],al
    436d:	00 00                	add    BYTE PTR [rax],al
    436f:	63 00                	movsxd eax,DWORD PTR [rax]
    4371:	00 00                	add    BYTE PTR [rax],al
    4373:	00 00                	add    BYTE PTR [rax],al
    4375:	00 00                	add    BYTE PTR [rax],al
    4377:	01 9c 19 0f 00 00 1d 	add    DWORD PTR [rcx+rbx*1+0x1d00000f],ebx
    437e:	0e                   	(bad)
    437f:	22 00                	and    al,BYTE PTR [rax]
    4381:	00 0e                	add    BYTE PTR [rsi],cl
    4383:	0a 01                	or     al,BYTE PTR [rcx]
    4385:	09 00                	or     DWORD PTR [rax],eax
    4387:	00 da                	add    dl,bl
    4389:	15 00 00 d4 15       	adc    eax,0x15d40000
    438e:	00 00                	add    BYTE PTR [rax],al
    4390:	24 c0                	and    al,0xc0
    4392:	01 00                	add    DWORD PTR [rax],eax
    4394:	00 ff                	add    bh,bh
    4396:	0e                   	(bad)
    4397:	00 00                	add    BYTE PTR [rax],al
    4399:	1c 69                	sbb    al,0x69
    439b:	00 15 13 d8 07 00    	add    BYTE PTR [rip+0x7d813],dl        # 81bb4 <_end+0x7bb9c>
    43a1:	00 f8                	add    al,bh
    43a3:	15 00 00 f0 15       	adc    eax,0x15f00000
    43a8:	00 00                	add    BYTE PTR [rax],al
    43aa:	00 0b                	add    BYTE PTR [rbx],cl
    43ac:	e7 1e                	out    0x1e,eax
    43ae:	00 00                	add    BYTE PTR [rax],al
    43b0:	00 00                	add    BYTE PTR [rax],al
    43b2:	00 00                	add    BYTE PTR [rax],al
    43b4:	6b 09 00             	imul   ecx,DWORD PTR [rcx],0x0
    43b7:	00 03                	add    BYTE PTR [rbx],al
    43b9:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    43bc:	34 03                	xor    al,0x3
    43be:	01 54 02 08          	add    DWORD PTR [rdx+rax*1+0x8],edx
    43c2:	60                   	(bad)
    43c3:	00 00                	add    BYTE PTR [rax],al
    43c5:	41 5f                	pop    r15
    43c7:	18 00                	sbb    BYTE PTR [rax],al
    43c9:	00 02                	add    BYTE PTR [rdx],al
    43cb:	39 01                	cmp    DWORD PTR [rcx],eax
    43cd:	2e 01 00             	cs add DWORD PTR [rax],eax
    43d0:	00 03                	add    BYTE PTR [rbx],al
    43d2:	4f 0f 00 00          	rex.WRXB sldt WORD PTR [r8]
    43d6:	0c 81                	or     al,0x81
    43d8:	05 00 00 02 39       	add    eax,0x39020000
    43dd:	01 2e                	add    DWORD PTR [rsi],ebp
    43df:	01 00                	add    DWORD PTR [rax],eax
    43e1:	00 0c 6b             	add    BYTE PTR [rbx+rbp*2],cl
    43e4:	03 00                	add    eax,DWORD PTR [rax]
    43e6:	00 02                	add    BYTE PTR [rdx],al
    43e8:	39 01                	cmp    DWORD PTR [rcx],eax
    43ea:	66 00 00             	data16 add BYTE PTR [rax],al
    43ed:	00 0c 7e             	add    BYTE PTR [rsi+rdi*2],cl
    43f0:	04 00                	add    al,0x0
    43f2:	00 02                	add    BYTE PTR [rdx],al
    43f4:	39 01                	cmp    DWORD PTR [rcx],eax
    43f6:	2e 00 00             	cs add BYTE PTR [rax],al
    43f9:	00 00                	add    BYTE PTR [rax],al
    43fb:	42 8c 0a             	rex.X mov WORD PTR [rdx],cs
    43fe:	00 00                	add    BYTE PTR [rax],al
    4400:	a0 1e 00 00 00 00 00 	movabs al,ds:0x250000000000001e
    4407:	00 25 
    4409:	00 00                	add    BYTE PTR [rax],al
    440b:	00 00                	add    BYTE PTR [rax],al
    440d:	00 00                	add    BYTE PTR [rax],al
    440f:	00 01                	add    BYTE PTR [rcx],al
    4411:	9c                   	pushf
    4412:	bd 0f 00 00 43       	mov    ebp,0x4300000f
    4417:	c2 0a 00             	ret    0xa
    441a:	00 44 ad 0a          	add    BYTE PTR [rbp+rbp*4+0xa],al
    441e:	00 00                	add    BYTE PTR [rax],al
    4420:	05 a1 0a 00 00       	add    eax,0xaa1
    4425:	16                   	(bad)
    4426:	16                   	(bad)
    4427:	00 00                	add    BYTE PTR [rax],al
    4429:	14 16                	adc    al,0x16
    442b:	00 00                	add    BYTE PTR [rax],al
    442d:	0b c5                	or     eax,ebp
    442f:	1e                   	(bad)
    4430:	00 00                	add    BYTE PTR [rax],al
    4432:	00 00                	add    BYTE PTR [rax],al
    4434:	00 00                	add    BYTE PTR [rax],al
    4436:	4a 09 00             	rex.WX or QWORD PTR [rax],rax
    4439:	00 03                	add    BYTE PTR [rbx],al
    443b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    443e:	03 a8 40 00 00 00    	add    ebp,DWORD PTR [rax+0x40]
    4444:	00 00                	add    BYTE PTR [rax],al
    4446:	00 03                	add    BYTE PTR [rbx],al
    4448:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    444c:	8d 40 00             	lea    eax,[rax+0x0]
    444f:	00 00                	add    BYTE PTR [rax],al
    4451:	00 00                	add    BYTE PTR [rax],al
    4453:	00 03                	add    BYTE PTR [rbx],al
    4455:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    4458:	08 57 03             	or     BYTE PTR [rdi+0x3],dl
    445b:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    445e:	03 68 43             	add    ebp,DWORD PTR [rax+0x43]
	...
    4469:	45 8c 0a             	rex.RB mov WORD PTR [r10],cs
    446c:	00 00                	add    BYTE PTR [rax],al
    446e:	60                   	(bad)
    446f:	05 00 00 b0 21       	add    eax,0x21b00000
    4474:	00 00                	add    BYTE PTR [rax],al
    4476:	00 00                	add    BYTE PTR [rax],al
    4478:	00 00                	add    BYTE PTR [rax],al
    447a:	5f                   	pop    rdi
    447b:	00 00                	add    BYTE PTR [rax],al
    447d:	00 00                	add    BYTE PTR [rax],al
    447f:	00 00                	add    BYTE PTR [rax],al
    4481:	00 01                	add    BYTE PTR [rcx],al
    4483:	9c                   	pushf
    4484:	65 10 00             	adc    BYTE PTR gs:[rax],al
    4487:	00 05 a1 0a 00 00    	add    BYTE PTR [rip+0xaa1],al        # 4f2e <__FRAME_END__+0x1fa>
    448d:	25 16 00 00 21       	and    eax,0x21000016
    4492:	16                   	(bad)
    4493:	00 00                	add    BYTE PTR [rax],al
    4495:	46 ad                	rex.RX lods eax,DWORD PTR ds:[rsi]
    4497:	0a 00                	or     al,BYTE PTR [rax]
    4499:	00 02                	add    BYTE PTR [rdx],al
    449b:	91                   	xchg   ecx,eax
    449c:	00 0f                	add    BYTE PTR [rdi],cl
    449e:	c2 0a 00             	ret    0xa
    44a1:	00 3d 16 00 00 37    	add    BYTE PTR [rip+0x37000016],bh        # 370044bd <_end+0x36ffe4a5>
    44a7:	16                   	(bad)
    44a8:	00 00                	add    BYTE PTR [rax],al
    44aa:	1e                   	(bad)
    44ab:	2c 0a                	sub    al,0xa
    44ad:	00 00                	add    BYTE PTR [rax],al
    44af:	e3 21                	jrcxz  44d2 <_IO_stdin_used+0x4d2>
    44b1:	00 00                	add    BYTE PTR [rax],al
    44b3:	00 00                	add    BYTE PTR [rax],al
    44b5:	00 00                	add    BYTE PTR [rax],al
    44b7:	00 1b                	add    BYTE PTR [rbx],bl
    44b9:	02 00                	add    al,BYTE PTR [rax]
    44bb:	00 5c 19 44          	add    BYTE PTR [rcx+rbx*1+0x44],bl
    44bf:	10 00                	adc    BYTE PTR [rax],al
    44c1:	00 05 49 0a 00 00    	add    BYTE PTR [rip+0xa49],al        # 4f10 <__FRAME_END__+0x1dc>
    44c7:	56                   	push   rsi
    44c8:	16                   	(bad)
    44c9:	00 00                	add    BYTE PTR [rax],al
    44cb:	54                   	push   rsp
    44cc:	16                   	(bad)
    44cd:	00 00                	add    BYTE PTR [rax],al
    44cf:	05 3d 0a 00 00       	add    eax,0xa3d
    44d4:	62 16 00 00 60       	(bad)
    44d9:	16                   	(bad)
    44da:	00 00                	add    BYTE PTR [rax],al
    44dc:	1f                   	(bad)
    44dd:	1b 02                	sbb    eax,DWORD PTR [rdx]
    44df:	00 00                	add    BYTE PTR [rax],al
    44e1:	0f 55 0a             	andnps xmm1,XMMWORD PTR [rdx]
    44e4:	00 00                	add    BYTE PTR [rax],al
    44e6:	70 16                	jo     44fe <_IO_stdin_used+0x4fe>
    44e8:	00 00                	add    BYTE PTR [rax],al
    44ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    44eb:	16                   	(bad)
    44ec:	00 00                	add    BYTE PTR [rax],al
    44ee:	00 00                	add    BYTE PTR [rax],al
    44f0:	10 01                	adc    BYTE PTR [rcx],al
    44f2:	22 00                	and    al,BYTE PTR [rax]
    44f4:	00 00                	add    BYTE PTR [rax],al
    44f6:	00 00                	add    BYTE PTR [rax],al
    44f8:	00 01                	add    BYTE PTR [rcx],al
    44fa:	30 0b                	xor    BYTE PTR [rbx],cl
    44fc:	0f 22 00             	mov    cr0,rax
    44ff:	00 00                	add    BYTE PTR [rax],al
    4501:	00 00                	add    BYTE PTR [rax],al
    4503:	00 4f 0f             	add    BYTE PTR [rdi+0xf],cl
    4506:	00 00                	add    BYTE PTR [rax],al
    4508:	47 a1 0a 00 00 01 30 	rex.RXB movabs eax,ds:0x480000300100000a
    450f:	00 00 48 
    4512:	06                   	(bad)
    4513:	05 00 00 fc 04       	add    eax,0x4fc0000
    4518:	00 00                	add    BYTE PTR [rax],al
    451a:	00 a6 0e 00 00 05    	add    BYTE PTR [rsi+0x500000e],ah
    4520:	00 01                	add    BYTE PTR [rcx],al
    4522:	08 64 10 00          	or     BYTE PTR [rax+rdx*1+0x0],ah
    4526:	00 22                	add    BYTE PTR [rdx],ah
    4528:	33 00                	xor    eax,DWORD PTR [rax]
    452a:	00 00                	add    BYTE PTR [rax],al
    452c:	21 57 02             	and    DWORD PTR [rdi+0x2],edx
    452f:	00 00                	add    BYTE PTR [rax],al
    4531:	00 00                	add    BYTE PTR [rax],al
    4533:	00 00                	add    BYTE PTR [rax],al
    4535:	50                   	push   rax
    4536:	22 00                	and    al,BYTE PTR [rax]
    4538:	00 00                	add    BYTE PTR [rax],al
    453a:	00 00                	add    BYTE PTR [rax],al
    453c:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
    453f:	00 00                	add    BYTE PTR [rax],al
    4541:	00 00                	add    BYTE PTR [rax],al
    4543:	00 00                	add    BYTE PTR [rax],al
    4545:	4a 13 00             	rex.WX adc rax,QWORD PTR [rax]
    4548:	00 04 37             	add    BYTE PTR [rdi+rsi*1],al
    454b:	0b 00                	or     eax,DWORD PTR [rax]
    454d:	00 05 d6 17 3a 00    	add    BYTE PTR [rip+0x3a17d6],al        # 3a5d29 <_end+0x39fd11>
    4553:	00 00                	add    BYTE PTR [rax],al
    4555:	06                   	(bad)
    4556:	08 07                	or     BYTE PTR [rdi],al
    4558:	a0 01 00 00 13 08 3c 	movabs al,ds:0x2e33c0813000001
    455f:	e3 02 
    4561:	00 00                	add    BYTE PTR [rax],al
    4563:	66 00 00             	data16 add BYTE PTR [rax],al
    4566:	00 03                	add    BYTE PTR [rbx],al
    4568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4569:	02 00                	add    al,BYTE PTR [rax]
    456b:	00 06                	add    BYTE PTR [rsi],al
    456d:	3d 09 66 00 00       	cmp    eax,0x6609
    4572:	00 00                	add    BYTE PTR [rax],al
    4574:	14 72                	adc    al,0x72
    4576:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4578:	00 3e                	add    BYTE PTR [rsi],bh
    457a:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    457d:	00 00                	add    BYTE PTR [rax],al
    457f:	04 00                	add    al,0x0
    4581:	23 04 05 69 6e 74 00 	and    eax,DWORD PTR [rax*1+0x746e69]
    4588:	04 e4                	add    al,0xe4
    458a:	02 00                	add    al,BYTE PTR [rax]
    458c:	00 06                	add    BYTE PTR [rsi],al
    458e:	3f                   	(bad)
    458f:	05 41 00 00 00       	add    eax,0x41
    4594:	13 10                	adc    edx,DWORD PTR [rax]
    4596:	44 09 00             	or     DWORD PTR [rax],r8d
    4599:	00 00                	add    BYTE PTR [rax],al
    459b:	9e                   	sahf
    459c:	00 00                	add    BYTE PTR [rax],al
    459e:	00 03                	add    BYTE PTR [rbx],al
    45a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    45a1:	02 00                	add    al,BYTE PTR [rax]
    45a3:	00 06                	add    BYTE PTR [rsi],al
    45a5:	45 0e                	rex.RB (bad)
    45a7:	9e                   	sahf
    45a8:	00 00                	add    BYTE PTR [rax],al
    45aa:	00 00                	add    BYTE PTR [rax],al
    45ac:	14 72                	adc    al,0x72
    45ae:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    45b0:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    45b3:	9e                   	sahf
    45b4:	00 00                	add    BYTE PTR [rax],al
    45b6:	00 08                	add    BYTE PTR [rax],cl
    45b8:	00 06                	add    BYTE PTR [rsi],al
    45ba:	08 05 92 01 00 00    	or     BYTE PTR [rip+0x192],al        # 4752 <__GNU_EH_FRAME_HDR+0xa2>
    45c0:	04 0a                	add    al,0xa
    45c2:	00 00                	add    BYTE PTR [rax],al
    45c4:	00 06                	add    BYTE PTR [rsi],al
    45c6:	47 05 79 00 00 00    	rex.RXB add eax,0x79
    45cc:	13 10                	adc    edx,DWORD PTR [rax]
    45ce:	4e d4                	rex.WRX (bad)
    45d0:	01 00                	add    DWORD PTR [rax],eax
    45d2:	00 d6                	add    dh,dl
    45d4:	00 00                	add    BYTE PTR [rax],al
    45d6:	00 03                	add    BYTE PTR [rbx],al
    45d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    45d9:	02 00                	add    al,BYTE PTR [rax]
    45db:	00 06                	add    BYTE PTR [rsi],al
    45dd:	4f 13 d6             	rex.WRXB adc r10,r14
    45e0:	00 00                	add    BYTE PTR [rax],al
    45e2:	00 00                	add    BYTE PTR [rax],al
    45e4:	14 72                	adc    al,0x72
    45e6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    45e8:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    45eb:	d6                   	(bad)
    45ec:	00 00                	add    BYTE PTR [rax],al
    45ee:	00 08                	add    BYTE PTR [rax],cl
    45f0:	00 06                	add    BYTE PTR [rsi],al
    45f2:	08 05 8d 01 00 00    	or     BYTE PTR [rip+0x18d],al        # 4785 <__GNU_EH_FRAME_HDR+0xd5>
    45f8:	04 d5                	add    al,0xd5
    45fa:	01 00                	add    DWORD PTR [rax],eax
    45fc:	00 06                	add    BYTE PTR [rsi],al
    45fe:	51                   	push   rcx
    45ff:	05 b1 00 00 00       	add    eax,0xb1
    4604:	06                   	(bad)
    4605:	02 07                	add    al,BYTE PTR [rdi]
    4607:	73 02                	jae    460b <_IO_stdin_used+0x60b>
    4609:	00 00                	add    BYTE PTR [rax],al
    460b:	09 fc                	or     esp,edi
    460d:	00 00                	add    BYTE PTR [rax],al
    460f:	00 06                	add    BYTE PTR [rsi],al
    4611:	01 06                	add    DWORD PTR [rsi],eax
    4613:	2d 02 00 00 0f       	sub    eax,0xf000002
    4618:	f5                   	cmc
    4619:	00 00                	add    BYTE PTR [rax],al
    461b:	00 06                	add    BYTE PTR [rsi],al
    461d:	01 08                	add    DWORD PTR [rax],ecx
    461f:	24 02                	and    al,0x2
    4621:	00 00                	add    BYTE PTR [rax],al
    4623:	06                   	(bad)
    4624:	04 07                	add    al,0x7
    4626:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    4627:	01 00                	add    DWORD PTR [rax],eax
    4629:	00 06                	add    BYTE PTR [rsi],al
    462b:	01 06                	add    DWORD PTR [rsi],eax
    462d:	26 02 00             	es add al,BYTE PTR [rax]
    4630:	00 06                	add    BYTE PTR [rsi],al
    4632:	02 05 05 01 00 00    	add    al,BYTE PTR [rip+0x105]        # 473d <__GNU_EH_FRAME_HDR+0x8d>
    4638:	04 53                	add    al,0x53
    463a:	01 00                	add    DWORD PTR [rax],eax
    463c:	00 07                	add    BYTE PTR [rdi],al
    463e:	2a 16                	sub    dl,BYTE PTR [rsi]
    4640:	08 01                	or     BYTE PTR [rcx],al
    4642:	00 00                	add    BYTE PTR [rax],al
    4644:	04 07                	add    al,0x7
    4646:	0b 00                	or     eax,DWORD PTR [rax]
    4648:	00 07                	add    BYTE PTR [rdi],al
    464a:	91                   	xchg   ecx,eax
    464b:	19 3a                	sbb    DWORD PTR [rdx],edi
    464d:	00 00                	add    BYTE PTR [rax],al
    464f:	00 04 94             	add    BYTE PTR [rsp+rdx*4],al
    4652:	0b 00                	or     eax,DWORD PTR [rax]
    4654:	00 07                	add    BYTE PTR [rdi],al
    4656:	92                   	xchg   edx,eax
    4657:	19 08                	sbb    DWORD PTR [rax],ecx
    4659:	01 00                	add    DWORD PTR [rax],eax
    465b:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    465e:	09 00                	or     DWORD PTR [rax],eax
    4660:	00 07                	add    BYTE PTR [rdi],al
    4662:	93                   	xchg   ebx,eax
    4663:	19 08                	sbb    DWORD PTR [rax],ecx
    4665:	01 00                	add    DWORD PTR [rax],eax
    4667:	00 04 79             	add    BYTE PTR [rcx+rdi*2],al
    466a:	0b 00                	or     eax,DWORD PTR [rax]
    466c:	00 07                	add    BYTE PTR [rdi],al
    466e:	94                   	xchg   esp,eax
    466f:	19 3a                	sbb    DWORD PTR [rdx],edi
    4671:	00 00                	add    BYTE PTR [rax],al
    4673:	00 04 67             	add    BYTE PTR [rdi+riz*2],al
    4676:	0a 00                	or     al,BYTE PTR [rax]
    4678:	00 07                	add    BYTE PTR [rdi],al
    467a:	96                   	xchg   esi,eax
    467b:	1a 08                	sbb    cl,BYTE PTR [rax]
    467d:	01 00                	add    DWORD PTR [rax],eax
    467f:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
    4682:	0a 00                	or     al,BYTE PTR [rax]
    4684:	00 07                	add    BYTE PTR [rdi],al
    4686:	97                   	xchg   edi,eax
    4687:	1b 3a                	sbb    edi,DWORD PTR [rdx]
    4689:	00 00                	add    BYTE PTR [rax],al
    468b:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
    468e:	0b 00                	or     eax,DWORD PTR [rax]
    4690:	00 07                	add    BYTE PTR [rdi],al
    4692:	98                   	cwde
    4693:	19 9e 00 00 00 04    	sbb    DWORD PTR [rsi+0x4000000],ebx
    4699:	a3 0b 00 00 07 a0 1a 	movabs ds:0x9e1aa00700000b,eax
    46a0:	9e 00 
    46a2:	00 00                	add    BYTE PTR [rax],al
    46a4:	24 08                	and    al,0x8
    46a6:	04 32                	add    al,0x32
    46a8:	0b 00                	or     eax,DWORD PTR [rax]
    46aa:	00 07                	add    BYTE PTR [rdi],al
    46ac:	af                   	scas   eax,DWORD PTR es:[rdi]
    46ad:	1d 9e 00 00 00       	sbb    eax,0x9e
    46b2:	04 70                	add    al,0x70
    46b4:	0a 00                	or     al,BYTE PTR [rax]
    46b6:	00 07                	add    BYTE PTR [rdi],al
    46b8:	b4 1c                	mov    ah,0x1c
    46ba:	9e                   	sahf
    46bb:	00 00                	add    BYTE PTR [rax],al
    46bd:	00 04 7b             	add    BYTE PTR [rbx+rdi*2],al
    46c0:	0a 00                	or     al,BYTE PTR [rax]
    46c2:	00 07                	add    BYTE PTR [rdi],al
    46c4:	c2 1b 9e             	ret    0x9e1b
    46c7:	00 00                	add    BYTE PTR [rax],al
    46c9:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    46cc:	0b 00                	or     eax,DWORD PTR [rax]
    46ce:	00 07                	add    BYTE PTR [rdi],al
    46d0:	c5 21 9e             	(bad)
    46d3:	00 00                	add    BYTE PTR [rax],al
    46d5:	00 09                	add    BYTE PTR [rcx],cl
    46d7:	f5                   	cmc
    46d8:	00 00                	add    BYTE PTR [rax],al
    46da:	00 04 7d 0a 00 00 08 	add    BYTE PTR [rdi*2+0x800000a],al
    46e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    46e2:	13 a3 01 00 00 17    	adc    esp,DWORD PTR [rbx+0x17000001]
    46e8:	70 0b                	jo     46f5 <__GNU_EH_FRAME_HDR+0x45>
    46ea:	00 00                	add    BYTE PTR [rax],al
    46ec:	10 09                	adc    BYTE PTR [rcx],cl
    46ee:	0b f3                	or     esi,ebx
    46f0:	01 00                	add    DWORD PTR [rax],eax
    46f2:	00 03                	add    BYTE PTR [rbx],al
    46f4:	0f 0b                	ud2
    46f6:	00 00                	add    BYTE PTR [rax],al
    46f8:	09 10                	or     DWORD PTR [rax],edx
    46fa:	0c 7d                	or     al,0x7d
    46fc:	01 00                	add    DWORD PTR [rax],eax
    46fe:	00 00                	add    BYTE PTR [rax],al
    4700:	03 ff                	add    edi,edi
    4702:	0a 00                	or     al,BYTE PTR [rax]
    4704:	00 09                	add    BYTE PTR [rcx],cl
    4706:	15 15 af 01 00       	adc    eax,0x1af15
    470b:	00 08                	add    BYTE PTR [rax],cl
    470d:	00 06                	add    BYTE PTR [rsi],al
    470f:	08 07                	or     BYTE PTR [rdi],al
    4711:	9b                   	fwait
    4712:	01 00                	add    DWORD PTR [rax],eax
    4714:	00 25 d5 02 00 00    	add    BYTE PTR [rip+0x2d5],ah        # 49ef <__GNU_EH_FRAME_HDR+0x33f>
    471a:	06                   	(bad)
    471b:	b4 03                	mov    ah,0x3
    471d:	0f 07                	sysretd
    471f:	02 00                	add    al,BYTE PTR [rax]
    4721:	00 09                	add    BYTE PTR [rcx],cl
    4723:	0c 02                	or     al,0x2
    4725:	00 00                	add    BYTE PTR [rax],al
    4727:	26 66 00 00          	es data16 add BYTE PTR [rax],al
    472b:	00 20                	add    BYTE PTR [rax],ah
    472d:	02 00                	add    al,BYTE PTR [rax]
    472f:	00 01                	add    BYTE PTR [rcx],al
    4731:	20 02                	and    BYTE PTR [rdx],al
    4733:	00 00                	add    BYTE PTR [rax],al
    4735:	01 20                	add    DWORD PTR [rax],esp
    4737:	02 00                	add    al,BYTE PTR [rax]
    4739:	00 00                	add    BYTE PTR [rax],al
    473b:	09 25 02 00 00 27    	or     DWORD PTR [rip+0x27000002],esp        # 27004743 <_end+0x26ffe72b>
    4741:	28 73 74             	sub    BYTE PTR [rbx+0x74],dh
    4744:	64 00 16             	add    BYTE PTR fs:[rsi],dl
    4747:	32 01                	xor    al,BYTE PTR [rcx]
    4749:	0b f6                	or     esi,esi
    474b:	03 00                	add    eax,DWORD PTR [rax]
    474d:	00 02                	add    BYTE PTR [rdx],al
    474f:	0a 83 0b 6d 00 00    	or     al,BYTE PTR [rbx+0x6d0b]
    4755:	00 02                	add    BYTE PTR [rdx],al
    4757:	0a 84 0b a5 00 00 00 	or     al,BYTE PTR [rbx+rcx*1+0xa5]
    475e:	02 0a                	add    cl,BYTE PTR [rdx]
    4760:	8a 0b                	mov    cl,BYTE PTR [rbx]
    4762:	f6 03 00             	test   BYTE PTR [rbx],0x0
    4765:	00 02                	add    BYTE PTR [rdx],al
    4767:	0a 8d 0b 13 04 00    	or     cl,BYTE PTR [rbp+0x4130b]
    476d:	00 02                	add    BYTE PTR [rdx],al
    476f:	0a 90 0b 2e 04 00    	or     dl,BYTE PTR [rax+0x42e0b]
    4775:	00 02                	add    BYTE PTR [rdx],al
    4777:	0a 91 0b 4b 04 00    	or     dl,BYTE PTR [rcx+0x44b0b]
    477d:	00 02                	add    BYTE PTR [rdx],al
    477f:	0a 92 0b 62 04 00    	or     dl,BYTE PTR [rdx+0x4620b]
    4785:	00 02                	add    BYTE PTR [rdx],al
    4787:	0a 93 0b 79 04 00    	or     dl,BYTE PTR [rbx+0x4790b]
    478d:	00 02                	add    BYTE PTR [rdx],al
    478f:	0a 95 0b a3 04 00    	or     dl,BYTE PTR [rbp+0x4a30b]
    4795:	00 02                	add    BYTE PTR [rdx],al
    4797:	0a 98 0b bf 04 00    	or     bl,BYTE PTR [rax+0x4bf0b]
    479d:	00 02                	add    BYTE PTR [rdx],al
    479f:	0a 9a 0b d6 04 00    	or     bl,BYTE PTR [rdx+0x4d60b]
    47a5:	00 02                	add    BYTE PTR [rdx],al
    47a7:	0a 9d 0b f2 04 00    	or     bl,BYTE PTR [rbp+0x4f20b]
    47ad:	00 02                	add    BYTE PTR [rdx],al
    47af:	0a 9e 0b 0e 05 00    	or     bl,BYTE PTR [rsi+0x50e0b]
    47b5:	00 02                	add    BYTE PTR [rdx],al
    47b7:	0a 9f 0b 3f 05 00    	or     bl,BYTE PTR [rdi+0x53f0b]
    47bd:	00 02                	add    BYTE PTR [rdx],al
    47bf:	0a a1 0b 60 05 00    	or     ah,BYTE PTR [rcx+0x5600b]
    47c5:	00 02                	add    BYTE PTR [rdx],al
    47c7:	0a a4 0b 80 05 00 00 	or     ah,BYTE PTR [rbx+rcx*1+0x580]
    47ce:	02 0a                	add    cl,BYTE PTR [rdx]
    47d0:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    47d1:	0b 93 05 00 00 02    	or     edx,DWORD PTR [rbx+0x2000005]
    47d7:	0a a9 0b a0 05 00    	or     ch,BYTE PTR [rcx+0x5a00b]
    47dd:	00 02                	add    BYTE PTR [rdx],al
    47df:	0a aa 0b b1 05 00    	or     ch,BYTE PTR [rdx+0x5b10b]
    47e5:	00 02                	add    BYTE PTR [rdx],al
    47e7:	0a ab 0b d1 05 00    	or     ch,BYTE PTR [rbx+0x5d10b]
    47ed:	00 02                	add    BYTE PTR [rdx],al
    47ef:	0a ac 0b f5 05 00 00 	or     ch,BYTE PTR [rbx+rcx*1+0x5f5]
    47f6:	02 0a                	add    cl,BYTE PTR [rdx]
    47f8:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    47f9:	0b 19                	or     ebx,DWORD PTR [rcx]
    47fb:	06                   	(bad)
    47fc:	00 00                	add    BYTE PTR [rax],al
    47fe:	02 0a                	add    cl,BYTE PTR [rdx]
    4800:	af                   	scas   eax,DWORD PTR es:[rdi]
    4801:	0b 30                	or     esi,DWORD PTR [rax]
    4803:	06                   	(bad)
    4804:	00 00                	add    BYTE PTR [rax],al
    4806:	02 0a                	add    cl,BYTE PTR [rdx]
    4808:	b0 0b                	mov    al,0xb
    480a:	55                   	push   rbp
    480b:	06                   	(bad)
    480c:	00 00                	add    BYTE PTR [rax],al
    480e:	02 0a                	add    cl,BYTE PTR [rdx]
    4810:	f4                   	hlt
    4811:	16                   	(bad)
    4812:	dd 00                	fld    QWORD PTR [rax]
    4814:	00 00                	add    BYTE PTR [rax],al
    4816:	02 0a                	add    cl,BYTE PTR [rdx]
    4818:	f9                   	stc
    4819:	16                   	(bad)
    481a:	b5 06                	mov    ch,0x6
    481c:	00 00                	add    BYTE PTR [rax],al
    481e:	02 0a                	add    cl,BYTE PTR [rdx]
    4820:	fa                   	cli
    4821:	16                   	(bad)
    4822:	cf                   	iret
    4823:	06                   	(bad)
    4824:	00 00                	add    BYTE PTR [rax],al
    4826:	02 0a                	add    cl,BYTE PTR [rdx]
    4828:	fc                   	cld
    4829:	16                   	(bad)
    482a:	eb 06                	jmp    4832 <__GNU_EH_FRAME_HDR+0x182>
    482c:	00 00                	add    BYTE PTR [rax],al
    482e:	02 0a                	add    cl,BYTE PTR [rdx]
    4830:	fd                   	std
    4831:	16                   	(bad)
    4832:	4a 07                	rex.WX (bad)
    4834:	00 00                	add    BYTE PTR [rax],al
    4836:	02 0a                	add    cl,BYTE PTR [rdx]
    4838:	fe                   	(bad)
    4839:	16                   	(bad)
    483a:	02 07                	add    al,BYTE PTR [rdi]
    483c:	00 00                	add    BYTE PTR [rax],al
    483e:	02 0a                	add    cl,BYTE PTR [rdx]
    4840:	ff 16                	call   QWORD PTR [rsi]
    4842:	26 07                	es (bad)
    4844:	00 00                	add    BYTE PTR [rax],al
    4846:	29 0a                	sub    DWORD PTR [rdx],ecx
    4848:	00 01                	add    BYTE PTR [rcx],al
    484a:	16                   	(bad)
    484b:	6c                   	ins    BYTE PTR es:[rdi],dx
    484c:	07                   	(bad)
    484d:	00 00                	add    BYTE PTR [rax],al
    484f:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4852:	73 00                	jae    4854 <__GNU_EH_FRAME_HDR+0x1a4>
    4854:	89 15 03 00 00 b6    	mov    DWORD PTR [rip+0xffffffffb6000003],edx        # ffffffffb600485d <_end+0xffffffffb5ffe845>
    485a:	07                   	(bad)
    485b:	00 00                	add    BYTE PTR [rax],al
    485d:	4c 03 00             	add    r8,QWORD PTR [rax]
    4860:	00 01                	add    BYTE PTR [rcx],al
    4862:	b6 07                	mov    dh,0x7
    4864:	00 00                	add    BYTE PTR [rax],al
    4866:	00 0a                	add    BYTE PTR [rdx],cl
    4868:	61                   	(bad)
    4869:	62 73 00 55 1b       	(bad)
    486e:	00 00                	add    BYTE PTR [rax],al
    4870:	00 c5                	add    ch,al
    4872:	07                   	(bad)
    4873:	00 00                	add    BYTE PTR [rax],al
    4875:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    4878:	00 01                	add    BYTE PTR [rcx],al
    487a:	c5 07 00             	(bad)
    487d:	00 00                	add    BYTE PTR [rax],al
    487f:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4882:	73 00                	jae    4884 <__GNU_EH_FRAME_HDR+0x1d4>
    4884:	4f 01 03             	rex.WRXB add QWORD PTR [r11],r8
    4887:	00 00                	add    BYTE PTR [rax],al
    4889:	87 07                	xchg   DWORD PTR [rdi],eax
    488b:	00 00                	add    BYTE PTR [rax],al
    488d:	7c 03                	jl     4892 <__GNU_EH_FRAME_HDR+0x1e2>
    488f:	00 00                	add    BYTE PTR [rax],al
    4891:	01 87 07 00 00 00    	add    DWORD PTR [rdi+0x7],eax
    4897:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    489a:	73 00                	jae    489c <__GNU_EH_FRAME_HDR+0x1ec>
    489c:	4b 0b 03             	rex.WXB or rax,QWORD PTR [r11]
    489f:	00 00                	add    BYTE PTR [rax],al
    48a1:	65 07                	gs (bad)
    48a3:	00 00                	add    BYTE PTR [rax],al
    48a5:	94                   	xchg   esp,eax
    48a6:	03 00                	add    eax,DWORD PTR [rax]
    48a8:	00 01                	add    BYTE PTR [rcx],al
    48aa:	65 07                	gs (bad)
    48ac:	00 00                	add    BYTE PTR [rax],al
    48ae:	00 0a                	add    BYTE PTR [rdx],cl
    48b0:	61                   	(bad)
    48b1:	62 73 00 47 f7       	(bad)
    48b6:	02 00                	add    al,BYTE PTR [rax]
    48b8:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    48bc:	00 ac 03 00 00 01 44 	add    BYTE PTR [rbx+rax*1+0x44010000],ch
    48c3:	04 00                	add    al,0x0
    48c5:	00 00                	add    BYTE PTR [rax],al
    48c7:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    48ca:	73 00                	jae    48cc <__GNU_EH_FRAME_HDR+0x21c>
    48cc:	3d eb 00 00 00       	cmp    eax,0xeb
    48d1:	d6                   	(bad)
    48d2:	00 00                	add    BYTE PTR [rax],al
    48d4:	00 c4                	add    ah,al
    48d6:	03 00                	add    eax,DWORD PTR [rax]
    48d8:	00 01                	add    BYTE PTR [rcx],al
    48da:	d6                   	(bad)
    48db:	00 00                	add    BYTE PTR [rax],al
    48dd:	00 00                	add    BYTE PTR [rax],al
    48df:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    48e2:	73 00                	jae    48e4 <__GNU_EH_FRAME_HDR+0x234>
    48e4:	38 11                	cmp    BYTE PTR [rcx],dl
    48e6:	00 00                	add    BYTE PTR [rax],al
    48e8:	00 9e 00 00 00 dc    	add    BYTE PTR [rsi-0x24000000],bl
    48ee:	03 00                	add    eax,DWORD PTR [rax]
    48f0:	00 01                	add    BYTE PTR [rcx],al
    48f2:	9e                   	sahf
    48f3:	00 00                	add    BYTE PTR [rax],al
    48f5:	00 00                	add    BYTE PTR [rax],al
    48f7:	18 64 69 76          	sbb    BYTE PTR [rcx+rbp*2+0x76],ah
    48fb:	00 b5 1e 01 00 00    	add    BYTE PTR [rbp+0x11e],dh
    4901:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    4902:	00 00                	add    BYTE PTR [rax],al
    4904:	00 01                	add    BYTE PTR [rcx],al
    4906:	9e                   	sahf
    4907:	00 00                	add    BYTE PTR [rax],al
    4909:	00 01                	add    BYTE PTR [rcx],al
    490b:	9e                   	sahf
    490c:	00 00                	add    BYTE PTR [rax],al
    490e:	00 00                	add    BYTE PTR [rax],al
    4910:	00 07                	add    BYTE PTR [rdi],al
    4912:	17                   	(bad)
    4913:	01 00                	add    DWORD PTR [rax],eax
    4915:	00 06                	add    BYTE PTR [rsi],al
    4917:	de 02                	fiadd  WORD PTR [rdx]
    4919:	0c 66                	or     al,0x66
    491b:	00 00                	add    BYTE PTR [rax],al
    491d:	00 0d 04 00 00 01    	add    BYTE PTR [rip+0x1000004],cl        # 1004927 <_end+0xffe90f>
    4923:	0d 04 00 00 00       	or     eax,0x4
    4928:	09 12                	or     DWORD PTR [rdx],edx
    492a:	04 00                	add    al,0x0
    492c:	00 2a                	add    BYTE PTR [rdx],ch
    492e:	2b dd                	sub    ebx,ebp
    4930:	00 00                	add    BYTE PTR [rax],al
    4932:	00 06                	add    BYTE PTR [rsi],al
    4934:	e3 02                	jrcxz  4938 <__GNU_EH_FRAME_HDR+0x288>
    4936:	12 dd                	adc    bl,ch
    4938:	00 00                	add    BYTE PTR [rax],al
    493a:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    493d:	00 00                	add    BYTE PTR [rax],al
    493f:	2e 04 00             	cs add al,0x0
    4942:	00 01                	add    BYTE PTR [rcx],al
    4944:	0d 04 00 00 00       	or     eax,0x4
    4949:	08 f2                	or     dl,dh
    494b:	01 00                	add    DWORD PTR [rax],eax
    494d:	00 0c 19             	add    BYTE PTR [rcx+rbx*1],cl
    4950:	01 44 04 00          	add    DWORD PTR [rsp+rax*1+0x0],eax
    4954:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    4958:	00 01                	add    BYTE PTR [rcx],al
    495a:	f0 00 00             	lock add BYTE PTR [rax],al
    495d:	00 00                	add    BYTE PTR [rax],al
    495f:	06                   	(bad)
    4960:	08 04 1d 02 00 00 07 	or     BYTE PTR [rbx*1+0x7000002],al
    4967:	f7 01 00 00 06 e1    	test   DWORD PTR [rcx],0xe1060000
    496d:	01 01                	add    DWORD PTR [rcx],eax
    496f:	66 00 00             	data16 add BYTE PTR [rax],al
    4972:	00 62 04             	add    BYTE PTR [rdx+0x4],ah
    4975:	00 00                	add    BYTE PTR [rax],al
    4977:	01 f0                	add    eax,esi
    4979:	00 00                	add    BYTE PTR [rax],al
    497b:	00 00                	add    BYTE PTR [rax],al
    497d:	07                   	(bad)
    497e:	01 02                	add    DWORD PTR [rdx],eax
    4980:	00 00                	add    BYTE PTR [rax],al
    4982:	06                   	(bad)
    4983:	e6 01                	out    0x1,al
    4985:	01 9e 00 00 00 79    	add    DWORD PTR [rsi+0x79000000],ebx
    498b:	04 00                	add    al,0x0
    498d:	00 01                	add    BYTE PTR [rcx],al
    498f:	f0 00 00             	lock add BYTE PTR [rax],al
    4992:	00 00                	add    BYTE PTR [rax],al
    4994:	08 0f                	or     BYTE PTR [rdi],cl
    4996:	01 00                	add    DWORD PTR [rax],eax
    4998:	00 0d 14 01 89 01    	add    BYTE PTR [rip+0x1890114],cl        # 1894ab2 <_end+0x188ea9a>
    499e:	00 00                	add    BYTE PTR [rax],al
    49a0:	a3 04 00 00 01 20 02 	movabs ds:0x22001000004,eax
    49a7:	00 00 
    49a9:	01 20                	add    DWORD PTR [rax],esp
    49ab:	02 00                	add    al,BYTE PTR [rax]
    49ad:	00 01                	add    BYTE PTR [rcx],al
    49af:	2e 00 00             	cs add BYTE PTR [rax],al
    49b2:	00 01                	add    BYTE PTR [rcx],al
    49b4:	2e 00 00             	cs add BYTE PTR [rax],al
    49b7:	00 01                	add    BYTE PTR [rcx],al
    49b9:	fa                   	cli
    49ba:	01 00                	add    DWORD PTR [rax],eax
    49bc:	00 00                	add    BYTE PTR [rax],al
    49be:	2c 64                	sub    al,0x64
    49c0:	69 76 00 06 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e006
    49c7:	6d                   	ins    DWORD PTR es:[rdi],dx
    49c8:	00 00                	add    BYTE PTR [rax],al
    49ca:	00 bf 04 00 00 01    	add    BYTE PTR [rdi+0x1000004],bh
    49d0:	66 00 00             	data16 add BYTE PTR [rax],al
    49d3:	00 01                	add    BYTE PTR [rcx],al
    49d5:	66 00 00             	data16 add BYTE PTR [rax],al
    49d8:	00 00                	add    BYTE PTR [rax],al
    49da:	07                   	(bad)
    49db:	6a 01                	push   0x1
    49dd:	00 00                	add    BYTE PTR [rax],al
    49df:	06                   	(bad)
    49e0:	05 03 0e bb 01       	add    eax,0x1bb0e03
    49e5:	00 00                	add    BYTE PTR [rax],al
    49e7:	d6                   	(bad)
    49e8:	04 00                	add    al,0x0
    49ea:	00 01                	add    BYTE PTR [rcx],al
    49ec:	f0 00 00             	lock add BYTE PTR [rax],al
    49ef:	00 00                	add    BYTE PTR [rax],al
    49f1:	07                   	(bad)
    49f2:	c9                   	leave
    49f3:	02 00                	add    al,BYTE PTR [rax]
    49f5:	00 06                	add    BYTE PTR [rsi],al
    49f7:	e2 03                	loop   49fc <__GNU_EH_FRAME_HDR+0x34c>
    49f9:	0f a5 00             	shld   DWORD PTR [rax],eax,cl
    49fc:	00 00                	add    BYTE PTR [rax],al
    49fe:	f2 04 00             	repnz add al,0x0
    4a01:	00 01                	add    BYTE PTR [rcx],al
    4a03:	9e                   	sahf
    4a04:	00 00                	add    BYTE PTR [rax],al
    4a06:	00 01                	add    BYTE PTR [rcx],al
    4a08:	9e                   	sahf
    4a09:	00 00                	add    BYTE PTR [rax],al
    4a0b:	00 00                	add    BYTE PTR [rax],al
    4a0d:	07                   	(bad)
    4a0e:	58                   	pop    rax
    4a0f:	02 00                	add    al,BYTE PTR [rax]
    4a11:	00 06                	add    BYTE PTR [rsi],al
    4a13:	26 04 0c             	es add al,0xc
    4a16:	66 00 00             	data16 add BYTE PTR [rax],al
    4a19:	00 0e                	add    BYTE PTR [rsi],cl
    4a1b:	05 00 00 01 f0       	add    eax,0xf0010000
    4a20:	00 00                	add    BYTE PTR [rax],al
    4a22:	00 01                	add    BYTE PTR [rcx],al
    4a24:	2e 00 00             	cs add BYTE PTR [rax],al
    4a27:	00 00                	add    BYTE PTR [rax],al
    4a29:	08 5e 02             	or     BYTE PTR [rsi+0x2],bl
    4a2c:	00 00                	add    BYTE PTR [rax],al
    4a2e:	0e                   	(bad)
    4a2f:	75 01                	jne    4a32 <__GNU_EH_FRAME_HDR+0x382>
    4a31:	2e 00 00             	cs add BYTE PTR [rax],al
    4a34:	00 2e                	add    BYTE PTR [rsi],ch
    4a36:	05 00 00 01 2e       	add    eax,0x2e010000
    4a3b:	05 00 00 01 f0       	add    eax,0xf0010000
    4a40:	00 00                	add    BYTE PTR [rax],al
    4a42:	00 01                	add    BYTE PTR [rcx],al
    4a44:	2e 00 00             	cs add BYTE PTR [rax],al
    4a47:	00 00                	add    BYTE PTR [rax],al
    4a49:	09 33                	or     DWORD PTR [rbx],esi
    4a4b:	05 00 00 06 04       	add    eax,0x4060000
    4a50:	05 86 02 00 00       	add    eax,0x286
    4a55:	0f 33                	rdpmc
    4a57:	05 00 00 07 86       	add    eax,0x86070000
    4a5c:	01 00                	add    DWORD PTR [rax],eax
    4a5e:	00 06                	add    BYTE PTR [rsi],al
    4a60:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    4a63:	66 00 00             	data16 add BYTE PTR [rax],al
    4a66:	00 60 05             	add    BYTE PTR [rax+0x5],ah
    4a69:	00 00                	add    BYTE PTR [rax],al
    4a6b:	01 2e                	add    DWORD PTR [rsi],ebp
    4a6d:	05 00 00 01 f0       	add    eax,0xf0010000
    4a72:	00 00                	add    BYTE PTR [rax],al
    4a74:	00 01                	add    BYTE PTR [rcx],al
    4a76:	2e 00 00             	cs add BYTE PTR [rax],al
    4a79:	00 00                	add    BYTE PTR [rax],al
    4a7b:	19 25 00 00 00 ca    	sbb    DWORD PTR [rip+0xffffffffca000000],esp        # ffffffffca004a81 <_end+0xffffffffc9ffea69>
    4a81:	03 80 05 00 00 01    	add    eax,DWORD PTR [rax+0x1000005]
    4a87:	89 01                	mov    DWORD PTR [rcx],eax
    4a89:	00 00                	add    BYTE PTR [rax],al
    4a8b:	01 2e                	add    DWORD PTR [rsi],ebp
    4a8d:	00 00                	add    BYTE PTR [rax],al
    4a8f:	00 01                	add    BYTE PTR [rcx],al
    4a91:	2e 00 00             	cs add BYTE PTR [rax],al
    4a94:	00 01                	add    BYTE PTR [rcx],al
    4a96:	fa                   	cli
    4a97:	01 00                	add    DWORD PTR [rax],eax
    4a99:	00 00                	add    BYTE PTR [rax],al
    4a9b:	2d e0 00 00 00       	sub    eax,0xe0
    4aa0:	06                   	(bad)
    4aa1:	fa                   	cli
    4aa2:	02 0d 93 05 00 00    	add    cl,BYTE PTR [rip+0x593]        # 503b <__FRAME_END__+0x307>
    4aa8:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4aab:	00 00                	add    BYTE PTR [rax],al
    4aad:	00 2e                	add    BYTE PTR [rsi],ch
    4aaf:	f2 02 00             	repnz add al,BYTE PTR [rax]
    4ab2:	00 06                	add    BYTE PTR [rsi],al
    4ab4:	3d 02 0c 66 00       	cmp    eax,0x660c02
    4ab9:	00 00                	add    BYTE PTR [rax],al
    4abb:	19 f1                	sbb    ecx,esi
    4abd:	02 00                	add    al,BYTE PTR [rax]
    4abf:	00 3f                	add    BYTE PTR [rdi],bh
    4ac1:	02 b1 05 00 00 01    	add    dh,BYTE PTR [rcx+0x1000005]
    4ac7:	08 01                	or     BYTE PTR [rcx],al
    4ac9:	00 00                	add    BYTE PTR [rax],al
    4acb:	00 08                	add    BYTE PTR [rax],cl
    4acd:	c5 01 00             	(bad)
    4ad0:	00 06                	add    BYTE PTR [rsi],al
    4ad2:	76 0f                	jbe    4ae3 <__GNU_EH_FRAME_HDR+0x433>
    4ad4:	44 04 00             	rex.R add al,0x0
    4ad7:	00 cc                	add    ah,cl
    4ad9:	05 00 00 01 f0       	add    eax,0xf0010000
    4ade:	00 00                	add    BYTE PTR [rax],al
    4ae0:	00 01                	add    BYTE PTR [rcx],al
    4ae2:	cc                   	int3
    4ae3:	05 00 00 00 09       	add    eax,0x9000000
    4ae8:	bb 01 00 00 0b       	mov    ebx,0xb000001
    4aed:	fe 00                	inc    BYTE PTR [rax]
    4aef:	00 00                	add    BYTE PTR [rax],al
    4af1:	06                   	(bad)
    4af2:	d7                   	xlat   BYTE PTR ds:[rbx]
    4af3:	11 f5                	adc    ebp,esi
    4af5:	00 00                	add    BYTE PTR [rax],al
    4af7:	00 9e 00 00 00 f5    	add    BYTE PTR [rsi-0xb000000],bl
    4afd:	05 00 00 01 f0       	add    eax,0xf0010000
    4b02:	00 00                	add    BYTE PTR [rax],al
    4b04:	00 01                	add    BYTE PTR [rcx],al
    4b06:	cc                   	int3
    4b07:	05 00 00 01 66       	add    eax,0x66010000
    4b0c:	00 00                	add    BYTE PTR [rax],al
    4b0e:	00 00                	add    BYTE PTR [rax],al
    4b10:	0b 4a 02             	or     ecx,DWORD PTR [rdx+0x2]
    4b13:	00 00                	add    BYTE PTR [rax],al
    4b15:	06                   	(bad)
    4b16:	db 1a                	fistp  DWORD PTR [rdx]
    4b18:	41 02 00             	add    al,BYTE PTR [r8]
    4b1b:	00 3a                	add    BYTE PTR [rdx],bh
    4b1d:	00 00                	add    BYTE PTR [rax],al
    4b1f:	00 19                	add    BYTE PTR [rcx],bl
    4b21:	06                   	(bad)
    4b22:	00 00                	add    BYTE PTR [rax],al
    4b24:	01 f0                	add    eax,esi
    4b26:	00 00                	add    BYTE PTR [rax],al
    4b28:	00 01                	add    BYTE PTR [rcx],al
    4b2a:	cc                   	int3
    4b2b:	05 00 00 01 66       	add    eax,0x66010000
    4b30:	00 00                	add    BYTE PTR [rax],al
    4b32:	00 00                	add    BYTE PTR [rax],al
    4b34:	07                   	(bad)
    4b35:	64 26 00 00          	fs add BYTE PTR fs:[rax],al
    4b39:	06                   	(bad)
    4b3a:	9b                   	fwait
    4b3b:	03 0c 66             	add    ecx,DWORD PTR [rsi+riz*2]
    4b3e:	00 00                	add    BYTE PTR [rax],al
    4b40:	00 30                	add    BYTE PTR [rax],dh
    4b42:	06                   	(bad)
    4b43:	00 00                	add    BYTE PTR [rax],al
    4b45:	01 f0                	add    eax,esi
    4b47:	00 00                	add    BYTE PTR [rax],al
    4b49:	00 00                	add    BYTE PTR [rax],al
    4b4b:	08 06                	or     BYTE PTR [rsi],al
    4b4d:	02 00                	add    al,BYTE PTR [rax]
    4b4f:	00 0e                	add    BYTE PTR [rsi],cl
    4b51:	8f 01                	pop    QWORD PTR [rcx]
    4b53:	2e 00 00             	cs add BYTE PTR [rax],al
    4b56:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    4b59:	00 00                	add    BYTE PTR [rax],al
    4b5b:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4b61:	50                   	push   rax
    4b62:	06                   	(bad)
    4b63:	00 00                	add    BYTE PTR [rax],al
    4b65:	01 2e                	add    DWORD PTR [rsi],ebp
    4b67:	00 00                	add    BYTE PTR [rax],al
    4b69:	00 00                	add    BYTE PTR [rax],al
    4b6b:	09 3a                	or     DWORD PTR [rdx],edi
    4b6d:	05 00 00 08 67       	add    eax,0x67080000
    4b72:	02 00                	add    al,BYTE PTR [rax]
    4b74:	00 0e                	add    BYTE PTR [rsi],cl
    4b76:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    4b7a:	00 00                	add    BYTE PTR [rax],al
    4b7c:	70 06                	jo     4b84 <__GNU_EH_FRAME_HDR+0x4d4>
    4b7e:	00 00                	add    BYTE PTR [rax],al
    4b80:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4b86:	33 05 00 00 00 2f    	xor    eax,DWORD PTR [rip+0x2f000000]        # 2f004b8c <_end+0x2effeb74>
    4b8c:	37                   	(bad)
    4b8d:	02 00                	add    al,BYTE PTR [rax]
    4b8f:	00 16                	add    BYTE PTR [rsi],dl
    4b91:	57                   	push   rdi
    4b92:	01 0b                	add    DWORD PTR [rbx],ecx
    4b94:	cf                   	iret
    4b95:	06                   	(bad)
    4b96:	00 00                	add    BYTE PTR [rax],al
    4b98:	02 0a                	add    cl,BYTE PTR [rdx]
    4b9a:	cc                   	int3
    4b9b:	0b dd                	or     ebx,ebp
    4b9d:	00 00                	add    BYTE PTR [rax],al
    4b9f:	00 02                	add    BYTE PTR [rdx],al
    4ba1:	0a dc                	or     bl,ah
    4ba3:	0b cf                	or     ecx,edi
    4ba5:	06                   	(bad)
    4ba6:	00 00                	add    BYTE PTR [rax],al
    4ba8:	02 0a                	add    cl,BYTE PTR [rdx]
    4baa:	e7 0b                	out    0xb,eax
    4bac:	eb 06                	jmp    4bb4 <__GNU_EH_FRAME_HDR+0x504>
    4bae:	00 00                	add    BYTE PTR [rax],al
    4bb0:	02 0a                	add    cl,BYTE PTR [rdx]
    4bb2:	e8 0b 02 07 00       	call   74dc2 <_end+0x6edaa>
    4bb7:	00 02                	add    BYTE PTR [rdx],al
    4bb9:	0a e9                	or     ch,cl
    4bbb:	0b 26                	or     esp,DWORD PTR [rsi]
    4bbd:	07                   	(bad)
    4bbe:	00 00                	add    BYTE PTR [rax],al
    4bc0:	02 0a                	add    cl,BYTE PTR [rdx]
    4bc2:	eb 0b                	jmp    4bcf <__GNU_EH_FRAME_HDR+0x51f>
    4bc4:	4a 07                	rex.WX (bad)
    4bc6:	00 00                	add    BYTE PTR [rax],al
    4bc8:	02 0a                	add    cl,BYTE PTR [rdx]
    4bca:	ec                   	in     al,dx
    4bcb:	0b 6c 07 00          	or     ebp,DWORD PTR [rdi+rax*1+0x0]
    4bcf:	00 18                	add    BYTE PTR [rax],bl
    4bd1:	64 69 76 00 d9 dd 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1ddd9
    4bd8:	00 
    4bd9:	00 dd                	add    ch,bl
    4bdb:	00 00                	add    BYTE PTR [rax],al
    4bdd:	00 01                	add    BYTE PTR [rcx],al
    4bdf:	d6                   	(bad)
    4be0:	00 00                	add    BYTE PTR [rax],al
    4be2:	00 01                	add    BYTE PTR [rcx],al
    4be4:	d6                   	(bad)
    4be5:	00 00                	add    BYTE PTR [rax],al
    4be7:	00 00                	add    BYTE PTR [rax],al
    4be9:	00 07                	add    BYTE PTR [rdi],al
    4beb:	c8 02 00 00          	enter  0x2,0x0
    4bef:	06                   	(bad)
    4bf0:	e6 03                	out    0x3,al
    4bf2:	1e                   	(bad)
    4bf3:	dd 00                	fld    QWORD PTR [rax]
    4bf5:	00 00                	add    BYTE PTR [rax],al
    4bf7:	eb 06                	jmp    4bff <__GNU_EH_FRAME_HDR+0x54f>
    4bf9:	00 00                	add    BYTE PTR [rax],al
    4bfb:	01 d6                	add    esi,edx
    4bfd:	00 00                	add    BYTE PTR [rax],al
    4bff:	00 01                	add    BYTE PTR [rcx],al
    4c01:	d6                   	(bad)
    4c02:	00 00                	add    BYTE PTR [rax],al
    4c04:	00 00                	add    BYTE PTR [rax],al
    4c06:	07                   	(bad)
    4c07:	52                   	push   rdx
    4c08:	02 00                	add    al,BYTE PTR [rax]
    4c0a:	00 06                	add    BYTE PTR [rsi],al
    4c0c:	ed                   	in     eax,dx
    4c0d:	01 01                	add    DWORD PTR [rcx],eax
    4c0f:	d6                   	(bad)
    4c10:	00 00                	add    BYTE PTR [rax],al
    4c12:	00 02                	add    BYTE PTR [rdx],al
    4c14:	07                   	(bad)
    4c15:	00 00                	add    BYTE PTR [rax],al
    4c17:	01 f0                	add    eax,esi
    4c19:	00 00                	add    BYTE PTR [rax],al
    4c1b:	00 00                	add    BYTE PTR [rax],al
    4c1d:	0b 32                	or     esi,DWORD PTR [rdx]
    4c1f:	01 00                	add    DWORD PTR [rax],eax
    4c21:	00 06                	add    BYTE PTR [rsi],al
    4c23:	ee                   	out    dx,al
    4c24:	16                   	(bad)
    4c25:	29 01                	sub    DWORD PTR [rcx],eax
    4c27:	00 00                	add    BYTE PTR [rax],al
    4c29:	d6                   	(bad)
    4c2a:	00 00                	add    BYTE PTR [rax],al
    4c2c:	00 26                	add    BYTE PTR [rsi],ah
    4c2e:	07                   	(bad)
    4c2f:	00 00                	add    BYTE PTR [rax],al
    4c31:	01 f0                	add    eax,esi
    4c33:	00 00                	add    BYTE PTR [rax],al
    4c35:	00 01                	add    BYTE PTR [rcx],al
    4c37:	cc                   	int3
    4c38:	05 00 00 01 66       	add    eax,0x66010000
    4c3d:	00 00                	add    BYTE PTR [rax],al
    4c3f:	00 00                	add    BYTE PTR [rax],al
    4c41:	0b bf 02 00 00 06    	or     edi,DWORD PTR [rdi+0x6000002]
    4c47:	f3 1f                	repz (bad)
    4c49:	b6 02                	mov    dh,0x2
    4c4b:	00 00                	add    BYTE PTR [rax],al
    4c4d:	f3 01 00             	repz add DWORD PTR [rax],eax
    4c50:	00 4a 07             	add    BYTE PTR [rdx+0x7],cl
    4c53:	00 00                	add    BYTE PTR [rax],al
    4c55:	01 f0                	add    eax,esi
    4c57:	00 00                	add    BYTE PTR [rax],al
    4c59:	00 01                	add    BYTE PTR [rcx],al
    4c5b:	cc                   	int3
    4c5c:	05 00 00 01 66       	add    eax,0x66010000
    4c61:	00 00                	add    BYTE PTR [rax],al
    4c63:	00 00                	add    BYTE PTR [rax],al
    4c65:	08 af 02 00 00 06    	or     BYTE PTR [rdi+0x6000002],ch
    4c6b:	7c 0e                	jl     4c7b <__GNU_EH_FRAME_HDR+0x5cb>
    4c6d:	65 07                	gs (bad)
    4c6f:	00 00                	add    BYTE PTR [rax],al
    4c71:	65 07                	gs (bad)
    4c73:	00 00                	add    BYTE PTR [rax],al
    4c75:	01 f0                	add    eax,esi
    4c77:	00 00                	add    BYTE PTR [rax],al
    4c79:	00 01                	add    BYTE PTR [rcx],al
    4c7b:	cc                   	int3
    4c7c:	05 00 00 00 06       	add    eax,0x6000000
    4c81:	04 04                	add    al,0x4
    4c83:	80 01 00             	add    BYTE PTR [rcx],0x0
    4c86:	00 08                	add    BYTE PTR [rax],cl
    4c88:	2b 00                	sub    eax,DWORD PTR [rax]
    4c8a:	00 00                	add    BYTE PTR [rax],al
    4c8c:	06                   	(bad)
    4c8d:	7f 14                	jg     4ca3 <__GNU_EH_FRAME_HDR+0x5f3>
    4c8f:	87 07                	xchg   DWORD PTR [rdi],eax
    4c91:	00 00                	add    BYTE PTR [rax],al
    4c93:	87 07                	xchg   DWORD PTR [rdi],eax
    4c95:	00 00                	add    BYTE PTR [rax],al
    4c97:	01 f0                	add    eax,esi
    4c99:	00 00                	add    BYTE PTR [rax],al
    4c9b:	00 01                	add    BYTE PTR [rcx],al
    4c9d:	cc                   	int3
    4c9e:	05 00 00 00 06       	add    eax,0x6000000
    4ca3:	10 04 18             	adc    BYTE PTR [rax+rbx*1],al
    4ca6:	02 00                	add    al,BYTE PTR [rax]
    4ca8:	00 02                	add    BYTE PTR [rdx],al
    4caa:	0f 27                	(bad)
    4cac:	0c f6                	or     al,0xf6
    4cae:	03 00                	add    eax,DWORD PTR [rax]
    4cb0:	00 02                	add    BYTE PTR [rdx],al
    4cb2:	0f 2b 0e             	movntps XMMWORD PTR [rsi],xmm1
    4cb5:	13 04 00             	adc    eax,DWORD PTR [rax+rax*1]
    4cb8:	00 02                	add    BYTE PTR [rdx],al
    4cba:	0f 2e 0e             	ucomiss xmm1,DWORD PTR [rsi]
    4cbd:	80 05 00 00 02 0f 36 	add    BYTE PTR [rip+0xf020000],0x36        # f024cc4 <_end+0xf01ecac>
    4cc4:	0c 6d                	or     al,0x6d
    4cc6:	00 00                	add    BYTE PTR [rax],al
    4cc8:	00 02                	add    BYTE PTR [rdx],al
    4cca:	0f 37                	getsec
    4ccc:	0c a5                	or     al,0xa5
    4cce:	00 00                	add    BYTE PTR [rax],al
    4cd0:	00 06                	add    BYTE PTR [rsi],al
    4cd2:	10 04 a4             	adc    BYTE PTR [rsp+riz*4],al
    4cd5:	02 00                	add    al,BYTE PTR [rax]
    4cd7:	00 02                	add    BYTE PTR [rdx],al
    4cd9:	0f 39                	(bad)
    4cdb:	0c 34                	or     al,0x34
    4cdd:	03 00                	add    eax,DWORD PTR [rax]
    4cdf:	00 06                	add    BYTE PTR [rsi],al
    4ce1:	10 05 0f 02 00 00    	adc    BYTE PTR [rip+0x20f],al        # 4ef6 <__FRAME_END__+0x1c2>
    4ce7:	02 0f                	add    cl,BYTE PTR [rdi]
    4ce9:	39 0c 4c             	cmp    DWORD PTR [rsp+rcx*2],ecx
    4cec:	03 00                	add    eax,DWORD PTR [rax]
    4cee:	00 02                	add    BYTE PTR [rdx],al
    4cf0:	0f 39                	(bad)
    4cf2:	0c 64                	or     al,0x64
    4cf4:	03 00                	add    eax,DWORD PTR [rax]
    4cf6:	00 02                	add    BYTE PTR [rdx],al
    4cf8:	0f 39                	(bad)
    4cfa:	0c 7c                	or     al,0x7c
    4cfc:	03 00                	add    eax,DWORD PTR [rax]
    4cfe:	00 02                	add    BYTE PTR [rdx],al
    4d00:	0f 39                	(bad)
    4d02:	0c 94                	or     al,0x94
    4d04:	03 00                	add    eax,DWORD PTR [rax]
    4d06:	00 02                	add    BYTE PTR [rdx],al
    4d08:	0f 39                	(bad)
    4d0a:	0c ac                	or     al,0xac
    4d0c:	03 00                	add    eax,DWORD PTR [rax]
    4d0e:	00 02                	add    BYTE PTR [rdx],al
    4d10:	0f 39                	(bad)
    4d12:	0c c4                	or     al,0xc4
    4d14:	03 00                	add    eax,DWORD PTR [rax]
    4d16:	00 02                	add    BYTE PTR [rdx],al
    4d18:	0f 3a 0c             	(bad)
    4d1b:	2e 04 00             	cs add al,0x0
    4d1e:	00 02                	add    BYTE PTR [rdx],al
    4d20:	0f 3b                	(bad)
    4d22:	0c 4b                	or     al,0x4b
    4d24:	04 00                	add    al,0x0
    4d26:	00 02                	add    BYTE PTR [rdx],al
    4d28:	0f 3c                	(bad)
    4d2a:	0c 62                	or     al,0x62
    4d2c:	04 00                	add    al,0x0
    4d2e:	00 02                	add    BYTE PTR [rdx],al
    4d30:	0f 3d                	(bad)
    4d32:	0c 79                	or     al,0x79
    4d34:	04 00                	add    al,0x0
    4d36:	00 02                	add    BYTE PTR [rdx],al
    4d38:	0f 3f                	(bad)
    4d3a:	0c b5                	or     al,0xb5
    4d3c:	06                   	(bad)
    4d3d:	00 00                	add    BYTE PTR [rax],al
    4d3f:	02 0f                	add    cl,BYTE PTR [rdi]
    4d41:	3f                   	(bad)
    4d42:	0c dc                	or     al,0xdc
    4d44:	03 00                	add    eax,DWORD PTR [rax]
    4d46:	00 02                	add    BYTE PTR [rdx],al
    4d48:	0f 3f                	(bad)
    4d4a:	0c a3                	or     al,0xa3
    4d4c:	04 00                	add    al,0x0
    4d4e:	00 02                	add    BYTE PTR [rdx],al
    4d50:	0f 41 0c bf          	cmovno ecx,DWORD PTR [rdi+rdi*4]
    4d54:	04 00                	add    al,0x0
    4d56:	00 02                	add    BYTE PTR [rdx],al
    4d58:	0f 43 0c d6          	cmovae ecx,DWORD PTR [rsi+rdx*8]
    4d5c:	04 00                	add    al,0x0
    4d5e:	00 02                	add    BYTE PTR [rdx],al
    4d60:	0f 46 0c f2          	cmovbe ecx,DWORD PTR [rdx+rsi*8]
    4d64:	04 00                	add    al,0x0
    4d66:	00 02                	add    BYTE PTR [rdx],al
    4d68:	0f 47 0c 0e          	cmova  ecx,DWORD PTR [rsi+rcx*1]
    4d6c:	05 00 00 02 0f       	add    eax,0xf020000
    4d71:	48 0c 3f             	rex.W or al,0x3f
    4d74:	05 00 00 02 0f       	add    eax,0xf020000
    4d79:	4a 0c 60             	rex.WX or al,0x60
    4d7c:	05 00 00 02 0f       	add    eax,0xf020000
    4d81:	4b 0c 93             	rex.WXB or al,0x93
    4d84:	05 00 00 02 0f       	add    eax,0xf020000
    4d89:	4d 0c a0             	rex.WRB or al,0xa0
    4d8c:	05 00 00 02 0f       	add    eax,0xf020000
    4d91:	4e 0c b1             	rex.WRX or al,0xb1
    4d94:	05 00 00 02 0f       	add    eax,0xf020000
    4d99:	4f 0c d1             	rex.WRXB or al,0xd1
    4d9c:	05 00 00 02 0f       	add    eax,0xf020000
    4da1:	50                   	push   rax
    4da2:	0c f5                	or     al,0xf5
    4da4:	05 00 00 02 0f       	add    eax,0xf020000
    4da9:	51                   	push   rcx
    4daa:	0c 19                	or     al,0x19
    4dac:	06                   	(bad)
    4dad:	00 00                	add    BYTE PTR [rax],al
    4daf:	02 0f                	add    cl,BYTE PTR [rdi]
    4db1:	53                   	push   rbx
    4db2:	0c 30                	or     al,0x30
    4db4:	06                   	(bad)
    4db5:	00 00                	add    BYTE PTR [rax],al
    4db7:	02 0f                	add    cl,BYTE PTR [rdi]
    4db9:	54                   	push   rsp
    4dba:	0c 55                	or     al,0x55
    4dbc:	06                   	(bad)
    4dbd:	00 00                	add    BYTE PTR [rax],al
    4dbf:	17                   	(bad)
    4dc0:	2d 0b 00 00 90       	sub    eax,0x9000000b
    4dc5:	10 1a                	adc    BYTE PTR [rdx],bl
    4dc7:	74 09                	je     4dd2 <__FRAME_END__+0x9e>
    4dc9:	00 00                	add    BYTE PTR [rax],al
    4dcb:	03 b4 0b 00 00 10 1f 	add    esi,DWORD PTR [rbx+rcx*1+0x1f100000]
    4dd2:	0d 29 01 00 00       	or     eax,0x129
    4dd7:	00 03                	add    BYTE PTR [rbx],al
    4dd9:	60                   	(bad)
    4dda:	0a 00                	or     al,BYTE PTR [rax]
    4ddc:	00 10                	add    BYTE PTR [rax],dl
    4dde:	24 0d                	and    al,0xd
    4de0:	4d 01 00             	add    QWORD PTR [r8],r8
    4de3:	00 08                	add    BYTE PTR [rax],cl
    4de5:	03 5c 0b 00          	add    ebx,DWORD PTR [rbx+rcx*1+0x0]
    4de9:	00 10                	add    BYTE PTR [rax],dl
    4deb:	2c 0f                	sub    al,0xf
    4ded:	65 01 00             	add    DWORD PTR gs:[rax],eax
    4df0:	00 10                	add    BYTE PTR [rax],dl
    4df2:	03 ef                	add    ebp,edi
    4df4:	0a 00                	or     al,BYTE PTR [rax]
    4df6:	00 10                	add    BYTE PTR [rax],dl
    4df8:	2d 0e 59 01 00       	sub    eax,0x1590e
    4dfd:	00 18                	add    BYTE PTR [rax],bl
    4dff:	03 9e 0a 00 00 10    	add    ebx,DWORD PTR [rsi+0x1000000a]
    4e05:	2f                   	(bad)
    4e06:	0d 35 01 00 00       	or     eax,0x135
    4e0b:	1c 03                	sbb    al,0x3
    4e0d:	9c                   	pushf
    4e0e:	0b 00                	or     eax,DWORD PTR [rax]
    4e10:	00 10                	add    BYTE PTR [rax],dl
    4e12:	30 0d 41 01 00 00    	xor    BYTE PTR [rip+0x141],cl        # 4f59 <__FRAME_END__+0x225>
    4e18:	20 03                	and    BYTE PTR [rbx],al
    4e1a:	44 0b 00             	or     r8d,DWORD PTR [rax]
    4e1d:	00 10                	add    BYTE PTR [rax],dl
    4e1f:	32 09                	xor    cl,BYTE PTR [rcx]
    4e21:	66 00 00             	data16 add BYTE PTR [rax],al
    4e24:	00 24 03             	add    BYTE PTR [rbx+rax*1],ah
    4e27:	8c 0b                	mov    WORD PTR [rbx],cs
    4e29:	00 00                	add    BYTE PTR [rax],al
    4e2b:	10 34 0d 29 01 00 00 	adc    BYTE PTR [rcx*1+0x129],dh
    4e32:	28 03                	sub    BYTE PTR [rbx],al
    4e34:	de 0a                	fimul  WORD PTR [rdx]
    4e36:	00 00                	add    BYTE PTR [rax],al
    4e38:	10 39                	adc    BYTE PTR [rcx],bh
    4e3a:	0d 71 01 00 00       	or     eax,0x171
    4e3f:	30 03                	xor    BYTE PTR [rbx],al
    4e41:	65 0b 00             	or     eax,DWORD PTR gs:[rax]
    4e44:	00 10                	add    BYTE PTR [rax],dl
    4e46:	3d 11 8b 01 00       	cmp    eax,0x18b11
    4e4b:	00 38                	add    BYTE PTR [rax],bh
    4e4d:	03 8b 0a 00 00 10    	add    ecx,DWORD PTR [rbx+0x1000000a]
    4e53:	3f                   	(bad)
    4e54:	10 97 01 00 00 40    	adc    BYTE PTR [rdi+0x40000001],dl
    4e5a:	03 f7                	add    esi,edi
    4e5c:	0a 00                	or     al,BYTE PTR [rax]
    4e5e:	00 10                	add    BYTE PTR [rax],dl
    4e60:	4a 15 cc 01 00 00    	rex.WX adc rax,0x1cc
    4e66:	48 03 d1             	add    rdx,rcx
    4e69:	0b 00                	or     eax,DWORD PTR [rax]
    4e6b:	00 10                	add    BYTE PTR [rax],dl
    4e6d:	4b 15 cc 01 00 00    	rex.WXB adc rax,0x1cc
    4e73:	58                   	pop    rax
    4e74:	03 fb                	add    edi,ebx
    4e76:	09 00                	or     DWORD PTR [rax],eax
    4e78:	00 10                	add    BYTE PTR [rax],dl
    4e7a:	4c 15 cc 01 00 00    	rex.WR adc rax,0x1cc
    4e80:	68 03 4b 0b 00       	push   0xb4b03
    4e85:	00 10                	add    BYTE PTR [rax],dl
    4e87:	59                   	pop    rcx
    4e88:	17                   	(bad)
    4e89:	74 09                	je     4e94 <__FRAME_END__+0x160>
    4e8b:	00 00                	add    BYTE PTR [rax],al
    4e8d:	78 00                	js     4e8f <__FRAME_END__+0x15b>
    4e8f:	15 af 01 00 00       	adc    eax,0x1af
    4e94:	84 09                	test   BYTE PTR [rcx],cl
    4e96:	00 00                	add    BYTE PTR [rax],al
    4e98:	16                   	(bad)
    4e99:	3a 00                	cmp    al,BYTE PTR [rax]
    4e9b:	00 00                	add    BYTE PTR [rax],al
    4e9d:	02 00                	add    al,BYTE PTR [rax]
    4e9f:	06                   	(bad)
    4ea0:	10 07                	adc    BYTE PTR [rdi],al
    4ea2:	4d 08 00             	rex.WRB or BYTE PTR [r8],r8b
    4ea5:	00 04 55 01 00 00 11 	add    BYTE PTR [rdx*2+0x11000001],al
    4eac:	1a 14 1d 01 00 00 08 	sbb    dl,BYTE PTR [rbx*1+0x8000001]
    4eb3:	c3                   	ret
    4eb4:	0a 00                	or     al,BYTE PTR [rax]
    4eb6:	00 12                	add    BYTE PTR [rdx],dl
    4eb8:	1a 10                	sbb    dl,BYTE PTR [rax]
    4eba:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    4ebd:	00 bc 09 00 00 01 66 	add    BYTE PTR [rcx+rcx*1+0x66010000],bh
    4ec4:	00 00                	add    BYTE PTR [rax],al
    4ec6:	00 01                	add    BYTE PTR [rcx],al
    4ec8:	89 01                	mov    DWORD PTR [rcx],eax
    4eca:	00 00                	add    BYTE PTR [rax],al
    4ecc:	01 2e                	add    DWORD PTR [rsi],ebp
    4ece:	00 00                	add    BYTE PTR [rax],al
    4ed0:	00 01                	add    BYTE PTR [rcx],al
    4ed2:	2e 00 00             	cs add BYTE PTR [rax],al
    4ed5:	00 00                	add    BYTE PTR [rax],al
    4ed7:	0b d9                	or     ebx,ecx
    4ed9:	0b 00                	or     eax,DWORD PTR [rax]
    4edb:	00 12                	add    BYTE PTR [rdx],dl
    4edd:	20 10                	and    BYTE PTR [rax],dl
    4edf:	c3                   	ret
    4ee0:	0a 00                	or     al,BYTE PTR [rax]
    4ee2:	00 c0                	add    al,al
    4ee4:	01 00                	add    DWORD PTR [rax],eax
    4ee6:	00 e5                	add    ch,ah
    4ee8:	09 00                	or     DWORD PTR [rax],eax
    4eea:	00 01                	add    BYTE PTR [rcx],al
    4eec:	66 00 00             	data16 add BYTE PTR [rax],al
    4eef:	00 01                	add    BYTE PTR [rcx],al
    4ef1:	89 01                	mov    DWORD PTR [rcx],eax
    4ef3:	00 00                	add    BYTE PTR [rax],al
    4ef5:	01 2e                	add    DWORD PTR [rsi],ebp
    4ef7:	00 00                	add    BYTE PTR [rax],al
    4ef9:	00 01                	add    BYTE PTR [rcx],al
    4efb:	2e 00 00             	cs add BYTE PTR [rax],al
    4efe:	00 00                	add    BYTE PTR [rax],al
    4f00:	0b 03                	or     eax,DWORD PTR [rbx]
    4f02:	0a 00                	or     al,BYTE PTR [rax]
    4f04:	00 12                	add    BYTE PTR [rdx],dl
    4f06:	1d 10 cf 32 00       	sbb    eax,0x32cf10
    4f0b:	00 c0                	add    al,al
    4f0d:	01 00                	add    DWORD PTR [rax],eax
    4f0f:	00 09                	add    BYTE PTR [rcx],cl
    4f11:	0a 00                	or     al,BYTE PTR [rax]
    4f13:	00 01                	add    BYTE PTR [rcx],al
    4f15:	66 00 00             	data16 add BYTE PTR [rax],al
    4f18:	00 01                	add    BYTE PTR [rcx],al
    4f1a:	89 01                	mov    DWORD PTR [rcx],eax
    4f1c:	00 00                	add    BYTE PTR [rax],al
    4f1e:	01 2e                	add    DWORD PTR [rsi],ebp
    4f20:	00 00                	add    BYTE PTR [rax],al
    4f22:	00 00                	add    BYTE PTR [rax],al
    4f24:	0b bb 0b 00 00 02    	or     edi,DWORD PTR [rbx+0x200000b]
    4f2a:	1b 0c 84             	sbb    ecx,DWORD PTR [rsp+rax*4]
    4f2d:	2e 00 00             	cs add BYTE PTR [rax],al
    4f30:	66 00 00             	data16 add BYTE PTR [rax],al
    4f33:	00 29                	add    BYTE PTR [rcx],ch
    4f35:	0a 00                	or     al,BYTE PTR [rax]
    4f37:	00 01                	add    BYTE PTR [rcx],al
    4f39:	f0 00 00             	lock add BYTE PTR [rax],al
    4f3c:	00 01                	add    BYTE PTR [rcx],al
    4f3e:	66 00 00             	data16 add BYTE PTR [rax],al
    4f41:	00 1a                	add    BYTE PTR [rdx],bl
    4f43:	00 08                	add    BYTE PTR [rax],cl
    4f45:	e6 0a                	out    0xa,al
    4f47:	00 00                	add    BYTE PTR [rax],al
    4f49:	02 1a                	add    bl,BYTE PTR [rdx]
    4f4b:	0c 66                	or     al,0x66
    4f4d:	00 00                	add    BYTE PTR [rax],al
    4f4f:	00 44 0a 00          	add    BYTE PTR [rdx+rcx*1+0x0],al
    4f53:	00 01                	add    BYTE PTR [rcx],al
    4f55:	f0 00 00             	lock add BYTE PTR [rax],al
    4f58:	00 01                	add    BYTE PTR [rcx],al
    4f5a:	66 00 00             	data16 add BYTE PTR [rax],al
    4f5d:	00 00                	add    BYTE PTR [rax],al
    4f5f:	1b a5 0a 00 00 25    	sbb    esp,DWORD PTR [rbp+0x2500000a]
    4f65:	1b 43 0a             	sbb    eax,DWORD PTR [rbx+0xa]
    4f68:	00 00                	add    BYTE PTR [rax],al
    4f6a:	23 07                	and    eax,DWORD PTR [rdi]
    4f6c:	f4                   	hlt
    4f6d:	15 00 00 13 66       	adc    eax,0x66130000
    4f72:	01 0c 66             	add    DWORD PTR [rsi+riz*2],ecx
    4f75:	00 00                	add    BYTE PTR [rax],al
    4f77:	00 67 0a             	add    BYTE PTR [rdi+0xa],ah
    4f7a:	00 00                	add    BYTE PTR [rax],al
    4f7c:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4f7f:	00 00                	add    BYTE PTR [rax],al
    4f81:	00 07                	add    BYTE PTR [rdi],al
    4f83:	2f                   	(bad)
    4f84:	07                   	(bad)
    4f85:	00 00                	add    BYTE PTR [rax],al
    4f87:	06                   	(bad)
    4f88:	a3 02 0e 89 01 00 00 	movabs ds:0xa83000001890e02,eax
    4f8f:	83 0a 
    4f91:	00 00                	add    BYTE PTR [rax],al
    4f93:	01 2e                	add    DWORD PTR [rsi],ebp
    4f95:	00 00                	add    BYTE PTR [rax],al
    4f97:	00 01                	add    BYTE PTR [rcx],al
    4f99:	2e 00 00             	cs add BYTE PTR [rax],al
    4f9c:	00 00                	add    BYTE PTR [rax],al
    4f9e:	08 2d 0b 00 00 14    	or     BYTE PTR [rip+0x1400000b],ch        # 14004faf <_end+0x13ffef97>
    4fa4:	cd 0c                	int    0xc
    4fa6:	66 00 00             	data16 add BYTE PTR [rax],al
    4fa9:	00 9e 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],bl
    4faf:	f0 00 00             	lock add BYTE PTR [rax],al
    4fb2:	00 01                	add    BYTE PTR [rcx],al
    4fb4:	9e                   	sahf
    4fb5:	0a 00                	or     al,BYTE PTR [rax]
    4fb7:	00 00                	add    BYTE PTR [rax],al
    4fb9:	09 a4 08 00 00 30 08 	or     DWORD PTR [rax+rcx*1+0x8300000],esp
    4fc0:	06                   	(bad)
    4fc1:	00 00                	add    BYTE PTR [rax],al
    4fc3:	15 45 0d c4 0a       	adc    eax,0xac40d45
    4fc8:	00 00                	add    BYTE PTR [rax],al
    4fca:	01 f0                	add    eax,esi
    4fcc:	00 00                	add    BYTE PTR [rax],al
    4fce:	00 01                	add    BYTE PTR [rcx],al
    4fd0:	f0 00 00             	lock add BYTE PTR [rax],al
    4fd3:	00 01                	add    BYTE PTR [rcx],al
    4fd5:	08 01                	or     BYTE PTR [rcx],al
    4fd7:	00 00                	add    BYTE PTR [rax],al
    4fd9:	01 f0                	add    eax,esi
    4fdb:	00 00                	add    BYTE PTR [rax],al
    4fdd:	00 00                	add    BYTE PTR [rax],al
    4fdf:	1c ce                	sbb    al,0xce
    4fe1:	0a 00                	or     al,BYTE PTR [rax]
    4fe3:	00 21                	add    BYTE PTR [rcx],ah
    4fe5:	0a 17                	or     dl,BYTE PTR [rdi]
    4fe7:	0a 00                	or     al,BYTE PTR [rax]
    4fe9:	00 8b 09 00 00 60    	add    BYTE PTR [rbx+0x60000009],cl
    4fef:	23 00                	and    eax,DWORD PTR [rax]
    4ff1:	00 00                	add    BYTE PTR [rax],al
    4ff3:	00 00                	add    BYTE PTR [rax],al
    4ff5:	00 62 00             	add    BYTE PTR [rdx+0x0],ah
    4ff8:	00 00                	add    BYTE PTR [rax],al
    4ffa:	00 00                	add    BYTE PTR [rax],al
    4ffc:	00 00                	add    BYTE PTR [rax],al
    4ffe:	01 9c ca 0b 00 00 10 	add    DWORD PTR [rdx+rcx*8+0x1000000b],ebx
    5005:	90                   	nop
    5006:	03 00                	add    eax,DWORD PTR [rax]
    5008:	00 21                	add    BYTE PTR [rcx],ah
    500a:	1b bb 01 00 00 96    	sbb    edi,DWORD PTR [rbx-0x69ffffff]
    5010:	16                   	(bad)
    5011:	00 00                	add    BYTE PTR [rax],al
    5013:	8c 16                	mov    WORD PTR [rsi],ss
    5015:	00 00                	add    BYTE PTR [rax],al
    5017:	10 e9                	adc    cl,ch
    5019:	0b 00                	or     eax,DWORD PTR [rax]
    501b:	00 21                	add    BYTE PTR [rcx],ah
    501d:	28 2e                	sub    BYTE PTR [rsi],ch
    501f:	00 00                	add    BYTE PTR [rax],al
    5021:	00 ca                	add    dl,cl
    5023:	16                   	(bad)
    5024:	00 00                	add    BYTE PTR [rax],al
    5026:	c0 16 00             	rcl    BYTE PTR [rsi],0x0
    5029:	00 1d d3 03 00 00    	add    BYTE PTR [rip+0x3d3],bl        # 5402 <__FRAME_END__+0x6ce>
    502f:	da 0b                	fimul  DWORD PTR [rbx]
    5031:	00 00                	add    BYTE PTR [rax],al
    5033:	09 03                	or     DWORD PTR [rbx],eax
    5035:	f8                   	clc
    5036:	43 00 00             	rex.XB add BYTE PTR [r8],al
    5039:	00 00                	add    BYTE PTR [rax],al
    503b:	00 00                	add    BYTE PTR [rax],al
    503d:	0d c8 0b 00 00       	or     eax,0xbc8
    5042:	24 0b                	and    al,0xb
    5044:	bb 01 00 00 f8       	mov    ebx,0xf8000001
    5049:	16                   	(bad)
    504a:	00 00                	add    BYTE PTR [rax],al
    504c:	f4                   	hlt
    504d:	16                   	(bad)
    504e:	00 00                	add    BYTE PTR [rax],al
    5050:	0d 13 05 00 00       	or     eax,0x513
    5055:	25 0e 8b 09 00       	and    eax,0x98b0e
    505a:	00 0b                	add    BYTE PTR [rbx],cl
    505c:	17                   	(bad)
    505d:	00 00                	add    BYTE PTR [rax],al
    505f:	07                   	(bad)
    5060:	17                   	(bad)
    5061:	00 00                	add    BYTE PTR [rax],al
    5063:	1e                   	(bad)
    5064:	6b 0e 00             	imul   ecx,DWORD PTR [rsi],0x0
    5067:	00 88 23 00 00 00    	add    BYTE PTR [rax+0x23],cl
    506d:	00 00                	add    BYTE PTR [rax],al
    506f:	00 01                	add    BYTE PTR [rcx],al
    5071:	3a 02                	cmp    al,BYTE PTR [rdx]
    5073:	00 00                	add    BYTE PTR [rax],al
    5075:	29 1b                	sub    DWORD PTR [rbx],ebx
    5077:	8e 0b                	mov    cs,WORD PTR [rbx]
    5079:	00 00                	add    BYTE PTR [rax],al
    507b:	0c 8b                	or     al,0x8b
    507d:	0e                   	(bad)
    507e:	00 00                	add    BYTE PTR [rax],al
    5080:	1d 17 00 00 1b       	sbb    eax,0x1b000017
    5085:	17                   	(bad)
    5086:	00 00                	add    BYTE PTR [rax],al
    5088:	0c 80                	or     al,0x80
    508a:	0e                   	(bad)
    508b:	00 00                	add    BYTE PTR [rax],al
    508d:	28 17                	sub    BYTE PTR [rdi],dl
    508f:	00 00                	add    BYTE PTR [rax],al
    5091:	26 17                	es (bad)
    5093:	00 00                	add    BYTE PTR [rax],al
    5095:	11 8d 23 00 00 00    	adc    DWORD PTR [rbp+0x23],ecx
    509b:	00 00                	add    BYTE PTR [rax],al
    509d:	00 97 0e 00 00 05    	add    BYTE PTR [rdi+0x500000e],dl
    50a3:	01 54 01 3a          	add    DWORD PTR [rcx+rax*1+0x3a],edx
    50a7:	00 00                	add    BYTE PTR [rax],al
    50a9:	11 c2                	adc    edx,eax
    50ab:	23 00                	and    eax,DWORD PTR [rax]
    50ad:	00 00                	add    BYTE PTR [rax],al
    50af:	00 00                	add    BYTE PTR [rax],al
    50b1:	00 a3 0a 00 00 05    	add    BYTE PTR [rbx+0x500000a],ah
    50b7:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    50ba:	03 1d 40 00 00 00    	add    ebx,DWORD PTR [rip+0x40]        # 5100 <__FRAME_END__+0x3cc>
    50c0:	00 00                	add    BYTE PTR [rax],al
    50c2:	00 05 01 54 09 03    	add    BYTE PTR [rip+0x3095401],al        # 309a4c9 <_end+0x30944b1>
    50c8:	c2 40 00             	ret    0x40
    50cb:	00 00                	add    BYTE PTR [rax],al
    50cd:	00 00                	add    BYTE PTR [rax],al
    50cf:	00 05 01 51 02 08    	add    BYTE PTR [rip+0x8025101],al        # 802a1d6 <_end+0x80241be>
    50d5:	22 05 01 52 09 03    	and    al,BYTE PTR [rip+0x3095201]        # 309a2dc <_end+0x30942c4>
    50db:	f8                   	clc
    50dc:	43 00 00             	rex.XB add BYTE PTR [r8],al
    50df:	00 00                	add    BYTE PTR [rax],al
    50e1:	00 00                	add    BYTE PTR [rax],al
    50e3:	00 00                	add    BYTE PTR [rax],al
    50e5:	15 fc 00 00 00       	adc    eax,0xfc
    50ea:	da 0b                	fimul  DWORD PTR [rbx]
    50ec:	00 00                	add    BYTE PTR [rax],al
    50ee:	16                   	(bad)
    50ef:	3a 00                	cmp    al,BYTE PTR [rax]
    50f1:	00 00                	add    BYTE PTR [rax],al
    50f3:	22 00                	and    al,BYTE PTR [rax]
    50f5:	0f ca                	bswap  edx
    50f7:	0b 00                	or     eax,DWORD PTR [rax]
    50f9:	00 1c 29             	add    BYTE PTR [rcx+rbp*1],bl
    50fc:	0a 00                	or     al,BYTE PTR [rax]
    50fe:	00 0b                	add    BYTE PTR [rbx],cl
    5100:	07                   	(bad)
    5101:	32 0a                	xor    cl,BYTE PTR [rdx]
    5103:	00 00                	add    BYTE PTR [rax],al
    5105:	bb 01 00 00 50       	mov    ebx,0x50000001
    510a:	22 00                	and    al,BYTE PTR [rax]
    510c:	00 00                	add    BYTE PTR [rax],al
    510e:	00 00                	add    BYTE PTR [rax],al
    5110:	00 08                	add    BYTE PTR [rax],cl
    5112:	01 00                	add    DWORD PTR [rax],eax
    5114:	00 00                	add    BYTE PTR [rax],al
    5116:	00 00                	add    BYTE PTR [rax],al
    5118:	00 01                	add    BYTE PTR [rcx],al
    511a:	9c                   	pushf
    511b:	f4                   	hlt
    511c:	0d 00 00 10 b8       	or     eax,0xb8100000
    5121:	0e                   	(bad)
    5122:	00 00                	add    BYTE PTR [rax],al
    5124:	0b 1c f0             	or     ebx,DWORD PTR [rax+rsi*8]
    5127:	00 00                	add    BYTE PTR [rax],al
    5129:	00 3e                	add    BYTE PTR [rsi],bh
    512b:	17                   	(bad)
    512c:	00 00                	add    BYTE PTR [rax],al
    512e:	30 17                	xor    BYTE PTR [rdi],dl
    5130:	00 00                	add    BYTE PTR [rax],al
    5132:	10 ee                	adc    dh,ch
    5134:	0b 00                	or     eax,DWORD PTR [rax]
    5136:	00 0b                	add    BYTE PTR [rbx],cl
    5138:	2e f4                	cs hlt
    513a:	0d 00 00 80 17       	or     eax,0x17800000
    513f:	00 00                	add    BYTE PTR [rax],al
    5141:	76 17                	jbe    515a <__FRAME_END__+0x426>
    5143:	00 00                	add    BYTE PTR [rax],al
    5145:	1d d3 03 00 00       	sbb    eax,0x3d3
    514a:	09 0e                	or     DWORD PTR [rsi],ecx
    514c:	00 00                	add    BYTE PTR [rax],al
    514e:	09 03                	or     DWORD PTR [rbx],eax
    5150:	d0 43 00             	rol    BYTE PTR [rbx+0x0],1
    5153:	00 00                	add    BYTE PTR [rax],al
    5155:	00 00                	add    BYTE PTR [rax],al
    5157:	00 31                	add    BYTE PTR [rcx],dh
    5159:	28 0b                	sub    BYTE PTR [rbx],cl
    515b:	00 00                	add    BYTE PTR [rax],al
    515d:	01 0e                	add    DWORD PTR [rsi],ecx
    515f:	11 a4 08 00 00 02 77 	adc    DWORD PTR [rax+rcx*1+0x77020000],esp
    5166:	00 0d e9 0b 00 00    	add    BYTE PTR [rip+0xbe9],cl        # 5d55 <_DYNAMIC+0x6d>
    516c:	11 0c 2e             	adc    DWORD PTR [rsi+rbp*1],ecx
    516f:	00 00                	add    BYTE PTR [rax],al
    5171:	00 a9 17 00 00 a7    	add    BYTE PTR [rcx-0x58ffffe9],ch
    5177:	17                   	(bad)
    5178:	00 00                	add    BYTE PTR [rax],al
    517a:	0d 81 0b 00 00       	or     eax,0xb81
    517f:	14 09                	adc    al,0x9
    5181:	66 00 00             	data16 add BYTE PTR [rax],al
    5184:	00 b4 17 00 00 b0 17 	add    BYTE PTR [rdi+rdx*1+0x17b00000],dh
    518b:	00 00                	add    BYTE PTR [rax],al
    518d:	0d 90 03 00 00       	or     eax,0x390
    5192:	17                   	(bad)
    5193:	0b bb 01 00 00 c7    	or     edi,DWORD PTR [rbx-0x38ffffff]
    5199:	17                   	(bad)
    519a:	00 00                	add    BYTE PTR [rax],al
    519c:	c3                   	ret
    519d:	17                   	(bad)
    519e:	00 00                	add    BYTE PTR [rax],al
    51a0:	32 85 0a 00 00 01    	xor    al,BYTE PTR [rbp+0x100000a]
    51a6:	1a 0d c0 01 00 00    	sbb    cl,BYTE PTR [rip+0x1c0]        # 536c <__FRAME_END__+0x638>
    51ac:	1e                   	(bad)
    51ad:	0e                   	(bad)
    51ae:	0e                   	(bad)
    51af:	00 00                	add    BYTE PTR [rax],al
    51b1:	ca 22 00             	retf   0x22
    51b4:	00 00                	add    BYTE PTR [rax],al
    51b6:	00 00                	add    BYTE PTR [rax],al
    51b8:	00 01                	add    BYTE PTR [rcx],al
    51ba:	32 02                	xor    al,BYTE PTR [rdx]
    51bc:	00 00                	add    BYTE PTR [rax],al
    51be:	14 1a                	adc    al,0x1a
    51c0:	dd 0c 00             	fisttp QWORD PTR [rax+rax*1]
    51c3:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    51c6:	0e                   	(bad)
    51c7:	00 00                	add    BYTE PTR [rax],al
    51c9:	d8 17                	fcom   DWORD PTR [rdi]
    51cb:	00 00                	add    BYTE PTR [rax],al
    51cd:	d6                   	(bad)
    51ce:	17                   	(bad)
    51cf:	00 00                	add    BYTE PTR [rax],al
    51d1:	0c 1d                	or     al,0x1d
    51d3:	0e                   	(bad)
    51d4:	00 00                	add    BYTE PTR [rax],al
    51d6:	e2 17                	loop   51ef <__FRAME_END__+0x4bb>
    51d8:	00 00                	add    BYTE PTR [rax],al
    51da:	e0 17                	loopne 51f3 <__FRAME_END__+0x4bf>
    51dc:	00 00                	add    BYTE PTR [rax],al
    51de:	11 cf                	adc    edi,ecx
    51e0:	22 00                	and    al,BYTE PTR [rax]
    51e2:	00 00                	add    BYTE PTR [rax],al
    51e4:	00 00                	add    BYTE PTR [rax],al
    51e6:	00 09                	add    BYTE PTR [rcx],cl
    51e8:	0a 00                	or     al,BYTE PTR [rax]
    51ea:	00 05 01 55 02 73    	add    BYTE PTR [rip+0x73025501],al        # 7302a6f1 <_end+0x730246d9>
    51f0:	00 05 01 54 01 30    	add    BYTE PTR [rip+0x30015401],al        # 3001a5f7 <_end+0x300145df>
    51f6:	00 00                	add    BYTE PTR [rax],al
    51f8:	33 37                	xor    esi,DWORD PTR [rdi]
    51fa:	0e                   	(bad)
    51fb:	00 00                	add    BYTE PTR [rax],al
    51fd:	ec                   	in     al,dx
    51fe:	22 00                	and    al,BYTE PTR [rax]
    5200:	00 00                	add    BYTE PTR [rax],al
    5202:	00 00                	add    BYTE PTR [rax],al
    5204:	00 01                	add    BYTE PTR [rcx],al
    5206:	ec                   	in     al,dx
    5207:	22 00                	and    al,BYTE PTR [rax]
    5209:	00 00                	add    BYTE PTR [rax],al
    520b:	00 00                	add    BYTE PTR [rax],al
    520d:	00 0e                	add    BYTE PTR [rsi],cl
    520f:	00 00                	add    BYTE PTR [rax],al
    5211:	00 00                	add    BYTE PTR [rax],al
    5213:	00 00                	add    BYTE PTR [rax],al
    5215:	00 01                	add    BYTE PTR [rcx],al
    5217:	1a 19                	sbb    bl,BYTE PTR [rcx]
    5219:	4a 0d 00 00 0c 5e    	rex.WX or rax,0x5e0c0000
    521f:	0e                   	(bad)
    5220:	00 00                	add    BYTE PTR [rax],al
    5222:	eb 17                	jmp    523b <__FRAME_END__+0x507>
    5224:	00 00                	add    BYTE PTR [rax],al
    5226:	e9 17 00 00 0c       	jmp    c005242 <_end+0xbfff22a>
    522b:	52                   	push   rdx
    522c:	0e                   	(bad)
    522d:	00 00                	add    BYTE PTR [rax],al
    522f:	f7 17                	not    DWORD PTR [rdi]
    5231:	00 00                	add    BYTE PTR [rax],al
    5233:	f3 17                	repz (bad)
    5235:	00 00                	add    BYTE PTR [rax],al
    5237:	0c 46                	or     al,0x46
    5239:	0e                   	(bad)
    523a:	00 00                	add    BYTE PTR [rax],al
    523c:	08 18                	or     BYTE PTR [rax],bl
    523e:	00 00                	add    BYTE PTR [rax],al
    5240:	06                   	(bad)
    5241:	18 00                	sbb    BYTE PTR [rax],al
    5243:	00 11                	add    BYTE PTR [rcx],dl
    5245:	fa                   	cli
    5246:	22 00                	and    al,BYTE PTR [rax]
    5248:	00 00                	add    BYTE PTR [rax],al
    524a:	00 00                	add    BYTE PTR [rax],al
    524c:	00 e5                	add    ch,ah
    524e:	09 00                	or     DWORD PTR [rax],eax
    5250:	00 05 01 55 02 7c    	add    BYTE PTR [rip+0x7c025501],al        # 7c02a757 <_end+0x7c02473f>
    5256:	00 05 01 54 02 73    	add    BYTE PTR [rip+0x73025401],al        # 7302a65d <_end+0x73024645>
    525c:	00 05 01 51 02 7d    	add    BYTE PTR [rip+0x7d025101],al        # 7d02a363 <_end+0x7d02434b>
    5262:	00 00                	add    BYTE PTR [rax],al
    5264:	00 34 b0             	add    BYTE PTR [rax+rsi*4],dh
    5267:	22 00                	and    al,BYTE PTR [rax]
    5269:	00 00                	add    BYTE PTR [rax],al
    526b:	00 00                	add    BYTE PTR [rax],al
    526d:	00 01                	add    BYTE PTR [rcx],al
    526f:	30 12                	xor    BYTE PTR [rdx],dl
    5271:	b5 22                	mov    ch,0x22
    5273:	00 00                	add    BYTE PTR [rax],al
    5275:	00 00                	add    BYTE PTR [rax],al
    5277:	00 00                	add    BYTE PTR [rax],al
    5279:	83 0a 00             	or     DWORD PTR [rdx],0x0
    527c:	00 73 0d             	add    BYTE PTR [rbx+0xd],dh
    527f:	00 00                	add    BYTE PTR [rax],al
    5281:	05 01 55 02 73       	add    eax,0x73025501
    5286:	00 05 01 54 02 77    	add    BYTE PTR [rip+0x77025401],al        # 7702a68d <_end+0x77024675>
    528c:	00 00                	add    BYTE PTR [rax],al
    528e:	12 e4                	adc    ah,ah
    5290:	22 00                	and    al,BYTE PTR [rax]
    5292:	00 00                	add    BYTE PTR [rax],al
    5294:	00 00                	add    BYTE PTR [rax],al
    5296:	00 67 0a             	add    BYTE PTR [rdi+0xa],ah
    5299:	00 00                	add    BYTE PTR [rax],al
    529b:	90                   	nop
    529c:	0d 00 00 05 01       	or     eax,0x1050000
    52a1:	55                   	push   rbp
    52a2:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    52a5:	05 01 54 01 31       	add    eax,0x31015401
    52aa:	00 12                	add    BYTE PTR [rdx],dl
    52ac:	02 23                	add    ah,BYTE PTR [rbx]
    52ae:	00 00                	add    BYTE PTR [rax],al
    52b0:	00 00                	add    BYTE PTR [rax],al
    52b2:	00 00                	add    BYTE PTR [rax],al
    52b4:	50                   	push   rax
    52b5:	0a 00                	or     al,BYTE PTR [rax]
    52b7:	00 a8 0d 00 00 05    	add    BYTE PTR [rax+0x500000d],ch
    52bd:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    52c0:	7c 00                	jl     52c2 <__FRAME_END__+0x58e>
    52c2:	00 12                	add    BYTE PTR [rdx],dl
    52c4:	53                   	push   rbx
    52c5:	23 00                	and    eax,DWORD PTR [rax]
    52c7:	00 00                	add    BYTE PTR [rax],al
    52c9:	00 00                	add    BYTE PTR [rax],al
    52cb:	00 a3 0a 00 00 e6    	add    BYTE PTR [rbx-0x19fffff6],ah
    52d1:	0d 00 00 05 01       	or     eax,0x1050000
    52d6:	55                   	push   rbp
    52d7:	09 03                	or     DWORD PTR [rbx],eax
    52d9:	de 40 00             	fiadd  WORD PTR [rax+0x0]
    52dc:	00 00                	add    BYTE PTR [rax],al
    52de:	00 00                	add    BYTE PTR [rax],al
    52e0:	00 05 01 54 09 03    	add    BYTE PTR [rip+0x3095401],al        # 309a6e7 <_end+0x30946cf>
    52e6:	c2 40 00             	ret    0x40
    52e9:	00 00                	add    BYTE PTR [rax],al
    52eb:	00 00                	add    BYTE PTR [rax],al
    52ed:	00 05 01 51 01 3c    	add    BYTE PTR [rip+0x3c015101],al        # 3c01a3f4 <_end+0x3c0143dc>
    52f3:	05 01 52 09 03       	add    eax,0x3095201
    52f8:	d0 43 00             	rol    BYTE PTR [rbx+0x0],1
    52fb:	00 00                	add    BYTE PTR [rax],al
    52fd:	00 00                	add    BYTE PTR [rax],al
    52ff:	00 00                	add    BYTE PTR [rax],al
    5301:	35 58 23 00 00       	xor    eax,0x2358
    5306:	00 00                	add    BYTE PTR [rax],al
    5308:	00 00                	add    BYTE PTR [rax],al
    530a:	a0 0e 00 00 00 09 2e 	movabs al,ds:0x2e090000000e
    5311:	00 00 
    5313:	00 15 fc 00 00 00    	add    BYTE PTR [rip+0xfc],dl        # 5415 <__FRAME_END__+0x6e1>
    5319:	09 0e                	or     DWORD PTR [rsi],ecx
    531b:	00 00                	add    BYTE PTR [rax],al
    531d:	16                   	(bad)
    531e:	3a 00                	cmp    al,BYTE PTR [rax]
    5320:	00 00                	add    BYTE PTR [rax],al
    5322:	24 00                	and    al,0x0
    5324:	0f f9 0d 00 00 1f 84 	psubw  mm1,QWORD PTR [rip+0xffffffff841f0000]        # ffffffff841f532b <_end+0xffffffff841ef313>
    532b:	2e 00 00             	cs add BYTE PTR [rax],al
    532e:	02 29                	add    ch,BYTE PTR [rcx]
    5330:	66 00 00             	data16 add BYTE PTR [rax],al
    5333:	00 37                	add    BYTE PTR [rdi],dh
    5335:	0e                   	(bad)
    5336:	00 00                	add    BYTE PTR [rax],al
    5338:	0e                   	(bad)
    5339:	10 0a                	adc    BYTE PTR [rdx],cl
    533b:	00 00                	add    BYTE PTR [rax],al
    533d:	02 29                	add    ch,BYTE PTR [rcx]
    533f:	13 f0                	adc    esi,eax
    5341:	00 00                	add    BYTE PTR [rax],al
    5343:	00 0e                	add    BYTE PTR [rsi],cl
    5345:	58                   	pop    rax
    5346:	0a 00                	or     al,BYTE PTR [rax]
    5348:	00 02                	add    BYTE PTR [rdx],al
    534a:	29 1f                	sub    DWORD PTR [rdi],ebx
    534c:	66 00 00             	data16 add BYTE PTR [rax],al
    534f:	00 1a                	add    BYTE PTR [rdx],bl
    5351:	00 1f                	add    BYTE PTR [rdi],bl
    5353:	cf                   	iret
    5354:	32 00                	xor    al,BYTE PTR [rax]
    5356:	00 03                	add    BYTE PTR [rbx],al
    5358:	1a c0                	sbb    al,al
    535a:	01 00                	add    DWORD PTR [rax],eax
    535c:	00 6b 0e             	add    BYTE PTR [rbx+0xe],ch
    535f:	00 00                	add    BYTE PTR [rax],al
    5361:	0e                   	(bad)
    5362:	d9 0a                	(bad)  [rdx]
    5364:	00 00                	add    BYTE PTR [rax],al
    5366:	03 1a                	add    ebx,DWORD PTR [rdx]
    5368:	0b 66 00             	or     esp,DWORD PTR [rsi+0x0]
    536b:	00 00                	add    BYTE PTR [rax],al
    536d:	0e                   	(bad)
    536e:	3e 0b 00             	ds or  eax,DWORD PTR [rax]
    5371:	00 03                	add    BYTE PTR [rbx],al
    5373:	1a 17                	sbb    dl,BYTE PTR [rdi]
    5375:	89 01                	mov    DWORD PTR [rcx],eax
    5377:	00 00                	add    BYTE PTR [rax],al
    5379:	0e                   	(bad)
    537a:	95                   	xchg   ebp,eax
    537b:	0a 00                	or     al,BYTE PTR [rax]
    537d:	00 03                	add    BYTE PTR [rbx],al
    537f:	1a 25 2e 00 00 00    	sbb    ah,BYTE PTR [rip+0x2e]        # 53b3 <__FRAME_END__+0x67f>
    5385:	00 36                	add    BYTE PTR [rsi],dh
    5387:	9f                   	lahf
    5388:	05 00 00 04 e9       	add    eax,0xe9040000
    538d:	01 9f 05 00 00 bb    	add    DWORD PTR [rdi-0x44fffffb],ebx
    5393:	01 00                	add    DWORD PTR [rax],eax
    5395:	00 03                	add    BYTE PTR [rbx],al
    5397:	97                   	xchg   edi,eax
    5398:	0e                   	(bad)
    5399:	00 00                	add    BYTE PTR [rax],al
    539b:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    539e:	73 00                	jae    53a0 <__FRAME_END__+0x66c>
    53a0:	e9 0f bb 01 00       	jmp    20eb4 <_end+0x1ae9c>
    53a5:	00 20                	add    BYTE PTR [rax],ah
    53a7:	5f                   	pop    rdi
    53a8:	5f                   	pop    rdi
    53a9:	63 00                	movsxd eax,DWORD PTR [rax]
    53ab:	e9 18 66 00 00       	jmp    b9c8 <_end+0x59b0>
    53b0:	00 00                	add    BYTE PTR [rax],al
    53b2:	21 9f 05 00 00 95    	and    DWORD PTR [rdi-0x6afffffb],ebx
    53b8:	05 00 00 21 1e       	add    eax,0x1e210000
    53bd:	07                   	(bad)
    53be:	00 00                	add    BYTE PTR [rax],al
    53c0:	1e                   	(bad)
    53c1:	07                   	(bad)
    53c2:	00 00                	add    BYTE PTR [rax],al
    53c4:	00 e9                	add    cl,ch
    53c6:	77 00                	ja     53c8 <__FRAME_END__+0x694>
    53c8:	00 05 00 01 08 b7    	add    BYTE PTR [rip+0xffffffffb7080100],al        # ffffffffb70854ce <_end+0xffffffffb707f4b6>
    53ce:	13 00                	adc    eax,DWORD PTR [rax]
    53d0:	00 66 33             	add    BYTE PTR [rsi+0x33],ah
    53d3:	00 00                	add    BYTE PTR [rax],al
    53d5:	00 21                	add    BYTE PTR [rcx],ah
    53d7:	fe 02                	inc    BYTE PTR [rdx]
    53d9:	00 00                	add    BYTE PTR [rax],al
    53db:	00 00                	add    BYTE PTR [rax],al
    53dd:	00 00                	add    BYTE PTR [rax],al
    53df:	d0 23                	shl    BYTE PTR [rbx],1
    53e1:	00 00                	add    BYTE PTR [rax],al
    53e3:	00 00                	add    BYTE PTR [rax],al
    53e5:	00 00                	add    BYTE PTR [rax],al
    53e7:	ec                   	in     al,dx
    53e8:	15 00 00 00 00       	adc    eax,0x0
    53ed:	00 00                	add    BYTE PTR [rax],al
    53ef:	4d 15 00 00 12 08    	rex.WRB adc rax,0x8120000
    53f5:	04 1d                	add    al,0x1d
    53f7:	02 00                	add    al,BYTE PTR [rax]
    53f9:	00 12                	add    BYTE PTR [rdx],dl
    53fb:	04 04                	add    al,0x4
    53fd:	80 01 00             	add    BYTE PTR [rcx],0x0
    5400:	00 67 73             	add    BYTE PTR [rdi+0x73],ah
    5403:	74 64                	je     5469 <__FRAME_END__+0x735>
    5405:	00 11                	add    BYTE PTR [rcx],dl
    5407:	32 01                	xor    al,BYTE PTR [rcx]
    5409:	0b e3                	or     esp,ebx
    540b:	20 00                	and    BYTE PTR [rax],al
    540d:	00 18                	add    BYTE PTR [rax],bl
    540f:	03 59 07             	add    ebx,DWORD PTR [rcx+0x7]
    5412:	0b ff                	or     edi,edi
    5414:	22 00                	and    al,BYTE PTR [rax]
    5416:	00 18                	add    BYTE PTR [rax],bl
    5418:	03 5a 07             	add    ebx,DWORD PTR [rdx+0x7]
    541b:	0b f3                	or     esi,ebx
    541d:	22 00                	and    al,BYTE PTR [rax]
    541f:	00 4f 6d             	add    BYTE PTR [rdi+0x6d],cl
    5422:	2c 00                	sub    al,0x0
    5424:	00 b0 0a 4f 7f 30    	add    BYTE PTR [rax+0x307f4f0a],dh
    542a:	00 00                	add    BYTE PTR [rax],al
    542c:	06                   	(bad)
    542d:	0b 3c 89             	or     edi,DWORD PTR [rcx+rcx*4]
    5430:	2e 00 00             	cs add BYTE PTR [rax],al
    5433:	06                   	(bad)
    5434:	32 0d 1a 61 62 73    	xor    cl,BYTE PTR [rip+0x7362611a]        # 7362b554 <_end+0x7362553c>
    543a:	00 07                	add    BYTE PTR [rdi],al
    543c:	89 15 03 00 00 cb    	mov    DWORD PTR [rip+0xffffffffcb000003],edx        # ffffffffcb005445 <_end+0xffffffffcafff42d>
    5442:	24 00                	and    al,0x0
    5444:	00 8a 00 00 00 01    	add    BYTE PTR [rdx+0x1000000],cl
    544a:	cb                   	retf
    544b:	24 00                	and    al,0x0
    544d:	00 00                	add    BYTE PTR [rax],al
    544f:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5452:	73 00                	jae    5454 <__FRAME_END__+0x720>
    5454:	07                   	(bad)
    5455:	55                   	push   rbp
    5456:	1b 00                	sbb    eax,DWORD PTR [rax]
    5458:	00 00                	add    BYTE PTR [rax],al
    545a:	95                   	xchg   ebp,eax
    545b:	24 00                	and    al,0x0
    545d:	00 a3 00 00 00 01    	add    BYTE PTR [rbx+0x1000000],ah
    5463:	95                   	xchg   ebp,eax
    5464:	24 00                	and    al,0x0
    5466:	00 00                	add    BYTE PTR [rax],al
    5468:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    546b:	73 00                	jae    546d <__FRAME_END__+0x739>
    546d:	07                   	(bad)
    546e:	4f 01 03             	rex.WRXB add QWORD PTR [r11],r8
    5471:	00 00                	add    BYTE PTR [rax],al
    5473:	c5 21 00             	(bad)
    5476:	00 bc 00 00 00 01 c5 	add    BYTE PTR [rax+rax*1-0x3aff0000],bh
    547d:	21 00                	and    DWORD PTR [rax],eax
    547f:	00 00                	add    BYTE PTR [rax],al
    5481:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5484:	73 00                	jae    5486 <__FRAME_END__+0x752>
    5486:	07                   	(bad)
    5487:	4b 0b 03             	rex.WXB or rax,QWORD PTR [r11]
    548a:	00 00                	add    BYTE PTR [rax],al
    548c:	35 00 00 00 d5       	xor    eax,0xd5000000
    5491:	00 00                	add    BYTE PTR [rax],al
    5493:	00 01                	add    BYTE PTR [rcx],al
    5495:	35 00 00 00 00       	xor    eax,0x0
    549a:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    549d:	73 00                	jae    549f <__FRAME_END__+0x76b>
    549f:	07                   	(bad)
    54a0:	47 f7 02 00 00 2e 00 	rex.RXB test DWORD PTR [r10],0x2e0000
    54a7:	00 00                	add    BYTE PTR [rax],al
    54a9:	ee                   	out    dx,al
    54aa:	00 00                	add    BYTE PTR [rax],al
    54ac:	00 01                	add    BYTE PTR [rcx],al
    54ae:	2e 00 00             	cs add BYTE PTR [rax],al
    54b1:	00 00                	add    BYTE PTR [rax],al
    54b3:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    54b6:	73 00                	jae    54b8 <__FRAME_END__+0x784>
    54b8:	07                   	(bad)
    54b9:	3d eb 00 00 00       	cmp    eax,0xeb
    54be:	be 21 00 00 07       	mov    esi,0x7000021
    54c3:	01 00                	add    DWORD PTR [rax],eax
    54c5:	00 01                	add    BYTE PTR [rcx],al
    54c7:	be 21 00 00 00       	mov    esi,0x21
    54cc:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    54cf:	73 00                	jae    54d1 <__FRAME_END__+0x79d>
    54d1:	07                   	(bad)
    54d2:	38 11                	cmp    BYTE PTR [rcx],dl
    54d4:	00 00                	add    BYTE PTR [rax],al
    54d6:	00 b2 21 00 00 20    	add    BYTE PTR [rdx+0x20000021],dh
    54dc:	01 00                	add    DWORD PTR [rax],eax
    54de:	00 01                	add    BYTE PTR [rcx],al
    54e0:	b2 21                	mov    dl,0x21
    54e2:	00 00                	add    BYTE PTR [rax],al
    54e4:	00 0f                	add    BYTE PTR [rdi],cl
    54e6:	cd 29                	int    0x29
    54e8:	00 00                	add    BYTE PTR [rax],al
    54ea:	03 5d 03             	add    ebx,DWORD PTR [rbp+0x3]
    54ed:	2c 25                	sub    al,0x25
    54ef:	00 00                	add    BYTE PTR [rax],al
    54f1:	c5 21 00             	(bad)
    54f4:	00 3a                	add    BYTE PTR [rdx],bh
    54f6:	01 00                	add    DWORD PTR [rax],eax
    54f8:	00 01                	add    BYTE PTR [rcx],al
    54fa:	c5 21 00             	(bad)
    54fd:	00 00                	add    BYTE PTR [rax],al
    54ff:	0f cd                	bswap  ebp
    5501:	29 00                	sub    DWORD PTR [rax],eax
    5503:	00 03                	add    BYTE PTR [rbx],al
    5505:	59                   	pop    rcx
    5506:	03 37                	add    esi,DWORD PTR [rdi]
    5508:	25 00 00 35 00       	and    eax,0x350000
    550d:	00 00                	add    BYTE PTR [rax],al
    550f:	54                   	push   rsp
    5510:	01 00                	add    DWORD PTR [rax],eax
    5512:	00 01                	add    BYTE PTR [rcx],al
    5514:	35 00 00 00 00       	xor    eax,0x0
    5519:	0f 35                	sysexitd
    551b:	2a 00                	sub    al,BYTE PTR [rax]
    551d:	00 03                	add    BYTE PTR [rbx],al
    551f:	70 03                	jo     5524 <__FRAME_END__+0x7f0>
    5521:	de 18                	ficomp WORD PTR [rax]
    5523:	00 00                	add    BYTE PTR [rax],al
    5525:	c5 21 00             	(bad)
    5528:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
    552b:	00 00                	add    BYTE PTR [rax],al
    552d:	01 c5                	add    ebp,eax
    552f:	21 00                	and    DWORD PTR [rax],eax
    5531:	00 00                	add    BYTE PTR [rax],al
    5533:	0f 35                	sysexitd
    5535:	2a 00                	sub    al,BYTE PTR [rax]
    5537:	00 03                	add    BYTE PTR [rbx],al
    5539:	6c                   	ins    BYTE PTR es:[rdi],dx
    553a:	03 e9                	add    ebp,ecx
    553c:	18 00                	sbb    BYTE PTR [rax],al
    553e:	00 35 00 00 00 88    	add    BYTE PTR [rip+0xffffffff88000000],dh        # ffffffff88005544 <_end+0xffffffff87fff52c>
    5544:	01 00                	add    DWORD PTR [rax],eax
    5546:	00 01                	add    BYTE PTR [rcx],al
    5548:	35 00 00 00 00       	xor    eax,0x0
    554d:	0f 29 27             	movaps XMMWORD PTR [rdi],xmm4
    5550:	00 00                	add    BYTE PTR [rax],al
    5552:	03 83 03 d8 14 00    	add    eax,DWORD PTR [rbx+0x14d803]
    5558:	00 c5                	add    ch,al
    555a:	21 00                	and    DWORD PTR [rax],eax
    555c:	00 a2 01 00 00 01    	add    BYTE PTR [rdx+0x1000001],ah
    5562:	c5 21 00             	(bad)
    5565:	00 00                	add    BYTE PTR [rax],al
    5567:	0f 29 27             	movaps XMMWORD PTR [rdi],xmm4
    556a:	00 00                	add    BYTE PTR [rax],al
    556c:	03 7f 03             	add    edi,DWORD PTR [rdi+0x3]
    556f:	e3 14                	jrcxz  5585 <__FRAME_END__+0x851>
    5571:	00 00                	add    BYTE PTR [rax],al
    5573:	35 00 00 00 bc       	xor    eax,0xbc000000
    5578:	01 00                	add    DWORD PTR [rax],eax
    557a:	00 01                	add    BYTE PTR [rcx],al
    557c:	35 00 00 00 00       	xor    eax,0x0
    5581:	0f a0                	push   fs
    5583:	32 00                	xor    al,BYTE PTR [rax]
    5585:	00 03                	add    BYTE PTR [rbx],al
    5587:	96                   	xchg   esi,eax
    5588:	03 32                	add    esi,DWORD PTR [rdx]
    558a:	24 00                	and    al,0x0
    558c:	00 c5                	add    ch,al
    558e:	21 00                	and    DWORD PTR [rax],eax
    5590:	00 db                	add    bl,bl
    5592:	01 00                	add    DWORD PTR [rax],eax
    5594:	00 01                	add    BYTE PTR [rcx],al
    5596:	c5 21 00             	(bad)
    5599:	00 01                	add    BYTE PTR [rcx],al
    559b:	c5 21 00             	(bad)
    559e:	00 00                	add    BYTE PTR [rax],al
    55a0:	0f a0                	push   fs
    55a2:	32 00                	xor    al,BYTE PTR [rax]
    55a4:	00 03                	add    BYTE PTR [rbx],al
    55a6:	92                   	xchg   edx,eax
    55a7:	03 7d 25             	add    edi,DWORD PTR [rbp+0x25]
    55aa:	00 00                	add    BYTE PTR [rax],al
    55ac:	35 00 00 00 fa       	xor    eax,0xfa000000
    55b1:	01 00                	add    DWORD PTR [rax],eax
    55b3:	00 01                	add    BYTE PTR [rcx],al
    55b5:	35 00 00 00 01       	xor    eax,0x1000000
    55ba:	35 00 00 00 00       	xor    eax,0x0
    55bf:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    55c2:	73 00                	jae    55c4 <__FRAME_END__+0x890>
    55c4:	03 b5 39 26 00 00    	add    esi,DWORD PTR [rbp+0x2639]
    55ca:	c5 21 00             	(bad)
    55cd:	00 13                	add    BYTE PTR [rbx],dl
    55cf:	02 00                	add    al,BYTE PTR [rax]
    55d1:	00 01                	add    BYTE PTR [rcx],al
    55d3:	c5 21 00             	(bad)
    55d6:	00 00                	add    BYTE PTR [rax],al
    55d8:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    55db:	73 00                	jae    55dd <__FRAME_END__+0x8a9>
    55dd:	03 b1 43 26 00 00    	add    esi,DWORD PTR [rcx+0x2643]
    55e3:	35 00 00 00 2c       	xor    eax,0x2c000000
    55e8:	02 00                	add    al,BYTE PTR [rax]
    55ea:	00 01                	add    BYTE PTR [rcx],al
    55ec:	35 00 00 00 00       	xor    eax,0x0
    55f1:	1f                   	(bad)
    55f2:	73 69                	jae    565d <__FRAME_END__+0x929>
    55f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    55f5:	00 94 01 01 1a 00 00 	add    BYTE PTR [rcx+rax*1+0x1a01],dl
    55fc:	c5 21 00             	(bad)
    55ff:	00 45 02             	add    BYTE PTR [rbp+0x2],al
    5602:	00 00                	add    BYTE PTR [rax],al
    5604:	01 c5                	add    ebp,eax
    5606:	21 00                	and    DWORD PTR [rax],eax
    5608:	00 00                	add    BYTE PTR [rax],al
    560a:	1f                   	(bad)
    560b:	73 69                	jae    5676 <__FRAME_END__+0x942>
    560d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    560e:	00 90 01 0b 1a 00    	add    BYTE PTR [rax+0x1a0b01],dl
    5614:	00 35 00 00 00 5e    	add    BYTE PTR [rip+0x5e000000],dh        # 5e00561a <_end+0x5dfff602>
    561a:	02 00                	add    al,BYTE PTR [rax]
    561c:	00 01                	add    BYTE PTR [rcx],al
    561e:	35 00 00 00 00       	xor    eax,0x0
    5623:	1f                   	(bad)
    5624:	74 61                	je     5687 <__FRAME_END__+0x953>
    5626:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5627:	00 cd                	add    ch,cl
    5629:	01 42 32             	add    DWORD PTR [rdx+0x32],eax
    562c:	00 00                	add    BYTE PTR [rax],al
    562e:	c5 21 00             	(bad)
    5631:	00 77 02             	add    BYTE PTR [rdi+0x2],dh
    5634:	00 00                	add    BYTE PTR [rax],al
    5636:	01 c5                	add    ebp,eax
    5638:	21 00                	and    DWORD PTR [rax],eax
    563a:	00 00                	add    BYTE PTR [rax],al
    563c:	1f                   	(bad)
    563d:	74 61                	je     56a0 <__FRAME_END__+0x96c>
    563f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5640:	00 c9                	add    cl,cl
    5642:	01 0b                	add    DWORD PTR [rbx],ecx
    5644:	16                   	(bad)
    5645:	00 00                	add    BYTE PTR [rax],al
    5647:	35 00 00 00 90       	xor    eax,0x90000000
    564c:	02 00                	add    al,BYTE PTR [rax]
    564e:	00 01                	add    BYTE PTR [rcx],al
    5650:	35 00 00 00 00       	xor    eax,0x0
    5655:	0f 9c 2a             	setl   BYTE PTR [rdx]
    5658:	00 00                	add    BYTE PTR [rax],al
    565a:	03 c8                	add    ecx,eax
    565c:	03 3e                	add    edi,DWORD PTR [rsi]
    565e:	2e 00 00             	cs add BYTE PTR [rax],al
    5661:	c5 21 00             	(bad)
    5664:	00 aa 02 00 00 01    	add    BYTE PTR [rdx+0x1000002],ch
    566a:	c5 21 00             	(bad)
    566d:	00 00                	add    BYTE PTR [rax],al
    566f:	0f 9c 2a             	setl   BYTE PTR [rdx]
    5672:	00 00                	add    BYTE PTR [rax],al
    5674:	03 c4                	add    eax,esp
    5676:	03 49 2e             	add    ecx,DWORD PTR [rcx+0x2e]
    5679:	00 00                	add    BYTE PTR [rax],al
    567b:	35 00 00 00 c4       	xor    eax,0xc4000000
    5680:	02 00                	add    al,BYTE PTR [rax]
    5682:	00 01                	add    BYTE PTR [rcx],al
    5684:	35 00 00 00 00       	xor    eax,0x0
    5689:	04 7e                	add    al,0x7e
    568b:	1f                   	(bad)
    568c:	00 00                	add    BYTE PTR [rax],al
    568e:	03 a7 01 03 72 1f    	add    esp,DWORD PTR [rdi+0x1f720301]
    5694:	00 00                	add    BYTE PTR [rax],al
    5696:	c5 21 00             	(bad)
    5699:	00 df                	add    bh,bl
    569b:	02 00                	add    al,BYTE PTR [rax]
    569d:	00 01                	add    BYTE PTR [rcx],al
    569f:	c5 21 00             	(bad)
    56a2:	00 00                	add    BYTE PTR [rax],al
    56a4:	04 7e                	add    al,0x7e
    56a6:	1f                   	(bad)
    56a7:	00 00                	add    BYTE PTR [rax],al
    56a9:	03 a3 01 03 a9 17    	add    esp,DWORD PTR [rbx+0x17a90301]
    56af:	00 00                	add    BYTE PTR [rax],al
    56b1:	35 00 00 00 fa       	xor    eax,0xfa000000
    56b6:	02 00                	add    al,BYTE PTR [rax]
    56b8:	00 01                	add    BYTE PTR [rcx],al
    56ba:	35 00 00 00 00       	xor    eax,0x0
    56bf:	04 a4                	add    al,0xa4
    56c1:	25 00 00 03 e0       	and    eax,0xe0030000
    56c6:	01 03                	add    DWORD PTR [rbx],eax
    56c8:	8d 10                	lea    edx,[rax]
    56ca:	00 00                	add    BYTE PTR [rax],al
    56cc:	c5 21 00             	(bad)
    56cf:	00 15 03 00 00 01    	add    BYTE PTR [rip+0x1000003],dl        # 10056d8 <_end+0xfff6c0>
    56d5:	c5 21 00             	(bad)
    56d8:	00 00                	add    BYTE PTR [rax],al
    56da:	04 a4                	add    al,0xa4
    56dc:	25 00 00 03 dc       	and    eax,0xdc030000
    56e1:	01 03                	add    DWORD PTR [rbx],eax
    56e3:	98                   	cwde
    56e4:	10 00                	adc    BYTE PTR [rax],al
    56e6:	00 35 00 00 00 30    	add    BYTE PTR [rip+0x30000000],dh        # 300056ec <_end+0x2ffff6d4>
    56ec:	03 00                	add    eax,DWORD PTR [rax]
    56ee:	00 01                	add    BYTE PTR [rcx],al
    56f0:	35 00 00 00 00       	xor    eax,0x0
    56f5:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    56f8:	70 00                	jo     56fa <__FRAME_END__+0x9c6>
    56fa:	03 db                	add    ebx,ebx
    56fc:	55                   	push   rbp
    56fd:	0e                   	(bad)
    56fe:	00 00                	add    BYTE PTR [rax],al
    5700:	c5 21 00             	(bad)
    5703:	00 49 03             	add    BYTE PTR [rcx+0x3],cl
    5706:	00 00                	add    BYTE PTR [rax],al
    5708:	01 c5                	add    ebp,eax
    570a:	21 00                	and    DWORD PTR [rax],eax
    570c:	00 00                	add    BYTE PTR [rax],al
    570e:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    5711:	70 00                	jo     5713 <__FRAME_END__+0x9df>
    5713:	03 d7                	add    edx,edi
    5715:	0a 1b                	or     bl,BYTE PTR [rbx]
    5717:	00 00                	add    BYTE PTR [rax],al
    5719:	35 00 00 00 62       	xor    eax,0x62000000
    571e:	03 00                	add    eax,DWORD PTR [rax]
    5720:	00 01                	add    BYTE PTR [rcx],al
    5722:	35 00 00 00 00       	xor    eax,0x0
    5727:	04 39                	add    al,0x39
    5729:	28 00                	sub    BYTE PTR [rax],al
    572b:	00 03                	add    BYTE PTR [rbx],al
    572d:	20 01                	and    BYTE PTR [rcx],al
    572f:	03 32                	add    esi,DWORD PTR [rdx]
    5731:	1d 00 00 c5 21       	sbb    eax,0x21c50000
    5736:	00 00                	add    BYTE PTR [rax],al
    5738:	82                   	(bad)
    5739:	03 00                	add    eax,DWORD PTR [rax]
    573b:	00 01                	add    BYTE PTR [rcx],al
    573d:	c5 21 00             	(bad)
    5740:	00 01                	add    BYTE PTR [rcx],al
    5742:	ba 25 00 00 00       	mov    edx,0x25
    5747:	04 39                	add    al,0x39
    5749:	28 00                	sub    BYTE PTR [rax],al
    574b:	00 03                	add    BYTE PTR [rbx],al
    574d:	1c 01                	sbb    al,0x1
    574f:	03 fc                	add    edi,esp
    5751:	24 00                	and    al,0x0
    5753:	00 35 00 00 00 a2    	add    BYTE PTR [rip+0xffffffffa2000000],dh        # ffffffffa2005759 <_end+0xffffffffa1fff741>
    5759:	03 00                	add    eax,DWORD PTR [rax]
    575b:	00 01                	add    BYTE PTR [rcx],al
    575d:	35 00 00 00 01       	xor    eax,0x1000000
    5762:	ba 25 00 00 00       	mov    edx,0x25
    5767:	04 05                	add    al,0x5
    5769:	12 00                	adc    al,BYTE PTR [rax]
    576b:	00 03                	add    BYTE PTR [rbx],al
    576d:	33 01                	xor    eax,DWORD PTR [rcx]
    576f:	03 5c 32 00          	add    ebx,DWORD PTR [rdx+rsi*1+0x0]
    5773:	00 c5                	add    ch,al
    5775:	21 00                	and    DWORD PTR [rax],eax
    5777:	00 c2                	add    dl,al
    5779:	03 00                	add    eax,DWORD PTR [rax]
    577b:	00 01                	add    BYTE PTR [rcx],al
    577d:	c5 21 00             	(bad)
    5780:	00 01                	add    BYTE PTR [rcx],al
    5782:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5783:	21 00                	and    DWORD PTR [rax],eax
    5785:	00 00                	add    BYTE PTR [rax],al
    5787:	04 05                	add    al,0x5
    5789:	12 00                	adc    al,BYTE PTR [rax]
    578b:	00 03                	add    BYTE PTR [rbx],al
    578d:	2f                   	(bad)
    578e:	01 03                	add    DWORD PTR [rbx],eax
    5790:	ff 1f                	call   FWORD PTR [rdi]
    5792:	00 00                	add    BYTE PTR [rax],al
    5794:	35 00 00 00 e2       	xor    eax,0xe2000000
    5799:	03 00                	add    eax,DWORD PTR [rax]
    579b:	00 01                	add    BYTE PTR [rcx],al
    579d:	35 00 00 00 01       	xor    eax,0x1000000
    57a2:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    57a3:	21 00                	and    DWORD PTR [rax],eax
    57a5:	00 00                	add    BYTE PTR [rax],al
    57a7:	1f                   	(bad)
    57a8:	6c                   	ins    BYTE PTR es:[rdi],dx
    57a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    57aa:	67 00 46 01          	add    BYTE PTR [esi+0x1],al
    57ae:	81 2c 00 00 c5 21 00 	sub    DWORD PTR [rax+rax*1],0x21c500
    57b5:	00 fb                	add    bl,bh
    57b7:	03 00                	add    eax,DWORD PTR [rax]
    57b9:	00 01                	add    BYTE PTR [rcx],al
    57bb:	c5 21 00             	(bad)
    57be:	00 00                	add    BYTE PTR [rax],al
    57c0:	1f                   	(bad)
    57c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    57c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    57c3:	67 00 42 01          	add    BYTE PTR [edx+0x1],al
    57c7:	8b 2c 00             	mov    ebp,DWORD PTR [rax+rax*1]
    57ca:	00 35 00 00 00 14    	add    BYTE PTR [rip+0x14000000],dh        # 140057d0 <_end+0x13fff7b8>
    57d0:	04 00                	add    al,0x0
    57d2:	00 01                	add    BYTE PTR [rcx],al
    57d4:	35 00 00 00 00       	xor    eax,0x0
    57d9:	04 e0                	add    al,0xe0
    57db:	17                   	(bad)
    57dc:	00 00                	add    BYTE PTR [rax],al
    57de:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    57e1:	03 d2                	add    edx,edx
    57e3:	0c 00                	or     al,0x0
    57e5:	00 c5                	add    ch,al
    57e7:	21 00                	and    DWORD PTR [rax],eax
    57e9:	00 2f                	add    BYTE PTR [rdi],ch
    57eb:	04 00                	add    al,0x0
    57ed:	00 01                	add    BYTE PTR [rcx],al
    57ef:	c5 21 00             	(bad)
    57f2:	00 00                	add    BYTE PTR [rax],al
    57f4:	04 e0                	add    al,0xe0
    57f6:	17                   	(bad)
    57f7:	00 00                	add    BYTE PTR [rax],al
    57f9:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    57fc:	03 de                	add    ebx,esi
    57fe:	0c 00                	or     al,0x0
    5800:	00 35 00 00 00 4a    	add    BYTE PTR [rip+0x4a000000],dh        # 4a005806 <_end+0x49fff7ee>
    5806:	04 00                	add    al,0x0
    5808:	00 01                	add    BYTE PTR [rcx],al
    580a:	35 00 00 00 00       	xor    eax,0x0
    580f:	04 f7                	add    al,0xf7
    5811:	14 00                	adc    al,0x0
    5813:	00 03                	add    BYTE PTR [rbx],al
    5815:	6c                   	ins    BYTE PTR es:[rdi],dx
    5816:	01 03                	add    DWORD PTR [rbx],eax
    5818:	e6 15                	out    0x15,al
    581a:	00 00                	add    BYTE PTR [rax],al
    581c:	c5 21 00             	(bad)
    581f:	00 6a 04             	add    BYTE PTR [rdx+0x4],ch
    5822:	00 00                	add    BYTE PTR [rax],al
    5824:	01 c5                	add    ebp,eax
    5826:	21 00                	and    DWORD PTR [rax],eax
    5828:	00 01                	add    BYTE PTR [rcx],al
    582a:	ff 25 00 00 00 04    	jmp    QWORD PTR [rip+0x4000000]        # 4005830 <_end+0x3fff818>
    5830:	f7 14 00             	not    DWORD PTR [rax+rax*1]
    5833:	00 03                	add    BYTE PTR [rbx],al
    5835:	68 01 03 79 1e       	push   0x1e790301
    583a:	00 00                	add    BYTE PTR [rax],al
    583c:	35 00 00 00 8a       	xor    eax,0x8a000000
    5841:	04 00                	add    al,0x0
    5843:	00 01                	add    BYTE PTR [rcx],al
    5845:	35 00 00 00 01       	xor    eax,0x1000000
    584a:	0c 26                	or     al,0x26
    584c:	00 00                	add    BYTE PTR [rax],al
    584e:	00 1f                	add    BYTE PTR [rdi],bl
    5850:	70 6f                	jo     58c1 <__FRAME_END__+0xb8d>
    5852:	77 00                	ja     5854 <__FRAME_END__+0xb20>
    5854:	78 01                	js     5857 <__FRAME_END__+0xb23>
    5856:	f7 30                	div    DWORD PTR [rax]
    5858:	00 00                	add    BYTE PTR [rax],al
    585a:	c5 21 00             	(bad)
    585d:	00 a8 04 00 00 01    	add    BYTE PTR [rax+0x1000004],ch
    5863:	c5 21 00             	(bad)
    5866:	00 01                	add    BYTE PTR [rcx],al
    5868:	c5 21 00             	(bad)
    586b:	00 00                	add    BYTE PTR [rax],al
    586d:	1f                   	(bad)
    586e:	70 6f                	jo     58df <__FRAME_END__+0xbab>
    5870:	77 00                	ja     5872 <__FRAME_END__+0xb3e>
    5872:	74 01                	je     5875 <__FRAME_END__+0xb41>
    5874:	ab                   	stos   DWORD PTR es:[rdi],eax
    5875:	31 00                	xor    DWORD PTR [rax],eax
    5877:	00 35 00 00 00 c6    	add    BYTE PTR [rip+0xffffffffc6000000],dh        # ffffffffc600587d <_end+0xffffffffc5fff865>
    587d:	04 00                	add    al,0x0
    587f:	00 01                	add    BYTE PTR [rcx],al
    5881:	35 00 00 00 01       	xor    eax,0x1000000
    5886:	35 00 00 00 00       	xor    eax,0x0
    588b:	04 50                	add    al,0x50
    588d:	0e                   	(bad)
    588e:	00 00                	add    BYTE PTR [rax],al
    5890:	03 ba 01 03 0f 23    	add    edi,DWORD PTR [rdx+0x230f0301]
    5896:	00 00                	add    BYTE PTR [rax],al
    5898:	c5 21 00             	(bad)
    589b:	00 e1                	add    cl,ah
    589d:	04 00                	add    al,0x0
    589f:	00 01                	add    BYTE PTR [rcx],al
    58a1:	c5 21 00             	(bad)
    58a4:	00 00                	add    BYTE PTR [rax],al
    58a6:	04 50                	add    al,0x50
    58a8:	0e                   	(bad)
    58a9:	00 00                	add    BYTE PTR [rax],al
    58ab:	03 b6 01 03 1a 23    	add    esi,DWORD PTR [rsi+0x231a0301]
    58b1:	00 00                	add    BYTE PTR [rax],al
    58b3:	35 00 00 00 fc       	xor    eax,0xfc000000
    58b8:	04 00                	add    al,0x0
    58ba:	00 01                	add    BYTE PTR [rcx],al
    58bc:	35 00 00 00 00       	xor    eax,0x0
    58c1:	0f 69 32             	punpckhwd mm6,QWORD PTR [rdx]
    58c4:	00 00                	add    BYTE PTR [rax],al
    58c6:	03 a2 03 38 2c 00    	add    esp,DWORD PTR [rdx+0x2c3803]
    58cc:	00 c5                	add    ch,al
    58ce:	21 00                	and    DWORD PTR [rax],eax
    58d0:	00 16                	add    BYTE PTR [rsi],dl
    58d2:	05 00 00 01 c5       	add    eax,0xc5010000
    58d7:	21 00                	and    DWORD PTR [rax],eax
    58d9:	00 00                	add    BYTE PTR [rax],al
    58db:	0f 69 32             	punpckhwd mm6,QWORD PTR [rdx]
    58de:	00 00                	add    BYTE PTR [rax],al
    58e0:	03 9e 03 43 2c 00    	add    ebx,DWORD PTR [rsi+0x2c4303]
    58e6:	00 35 00 00 00 30    	add    BYTE PTR [rip+0x30000000],dh        # 300058ec <_end+0x2ffff8d4>
    58ec:	05 00 00 01 35       	add    eax,0x35010000
    58f1:	00 00                	add    BYTE PTR [rax],al
    58f3:	00 00                	add    BYTE PTR [rax],al
    58f5:	0f 40 1d 00 00 03 ee 	cmovo  ebx,DWORD PTR [rip+0xffffffffee030000]        # ffffffffee0358fc <_end+0xffffffffee02f8e4>
    58fc:	03 f1                	add    esi,ecx
    58fe:	33 00                	xor    eax,DWORD PTR [rax]
    5900:	00 c5                	add    ch,al
    5902:	21 00                	and    DWORD PTR [rax],eax
    5904:	00 4a 05             	add    BYTE PTR [rdx+0x5],cl
    5907:	00 00                	add    BYTE PTR [rax],al
    5909:	01 c5                	add    ebp,eax
    590b:	21 00                	and    DWORD PTR [rax],eax
    590d:	00 00                	add    BYTE PTR [rax],al
    590f:	0f 40 1d 00 00 03 ea 	cmovo  ebx,DWORD PTR [rip+0xffffffffea030000]        # ffffffffea035916 <_end+0xffffffffea02f8fe>
    5916:	03 8d 14 00 00 35    	add    ecx,DWORD PTR [rbp+0x35000014]
    591c:	00 00                	add    BYTE PTR [rax],al
    591e:	00 64 05 00          	add    BYTE PTR [rbp+rax*1+0x0],ah
    5922:	00 01                	add    BYTE PTR [rcx],al
    5924:	35 00 00 00 00       	xor    eax,0x0
    5929:	04 45                	add    al,0x45
    592b:	1c 00                	sbb    al,0x0
    592d:	00 03                	add    BYTE PTR [rbx],al
    592f:	01 01                	add    DWORD PTR [rcx],eax
    5931:	03 f8                	add    edi,eax
    5933:	2f                   	(bad)
    5934:	00 00                	add    BYTE PTR [rax],al
    5936:	c5 21 00             	(bad)
    5939:	00 7f 05             	add    BYTE PTR [rdi+0x5],bh
    593c:	00 00                	add    BYTE PTR [rax],al
    593e:	01 c5                	add    ebp,eax
    5940:	21 00                	and    DWORD PTR [rax],eax
    5942:	00 00                	add    BYTE PTR [rax],al
    5944:	0f 45 1c 00          	cmovne ebx,DWORD PTR [rax+rax*1]
    5948:	00 03                	add    BYTE PTR [rbx],al
    594a:	fd                   	std
    594b:	03 04 30             	add    eax,DWORD PTR [rax+rsi*1]
    594e:	00 00                	add    BYTE PTR [rax],al
    5950:	35 00 00 00 99       	xor    eax,0x99000000
    5955:	05 00 00 01 35       	add    eax,0x35010000
    595a:	00 00                	add    BYTE PTR [rax],al
    595c:	00 00                	add    BYTE PTR [rax],al
    595e:	04 ac                	add    al,0xac
    5960:	16                   	(bad)
    5961:	00 00                	add    BYTE PTR [rax],al
    5963:	03 14 01             	add    edx,DWORD PTR [rcx+rax*1]
    5966:	03 f8                	add    edi,eax
    5968:	0b 00                	or     eax,DWORD PTR [rax]
    596a:	00 c5                	add    ch,al
    596c:	21 00                	and    DWORD PTR [rax],eax
    596e:	00 b9 05 00 00 01    	add    BYTE PTR [rcx+0x1000005],bh
    5974:	c5 21 00             	(bad)
    5977:	00 01                	add    BYTE PTR [rcx],al
    5979:	c5 21 00             	(bad)
    597c:	00 00                	add    BYTE PTR [rax],al
    597e:	04 ac                	add    al,0xac
    5980:	16                   	(bad)
    5981:	00 00                	add    BYTE PTR [rax],al
    5983:	03 10                	add    edx,DWORD PTR [rax]
    5985:	01 03                	add    DWORD PTR [rbx],eax
    5987:	cb                   	retf
    5988:	21 00                	and    DWORD PTR [rax],eax
    598a:	00 35 00 00 00 d9    	add    BYTE PTR [rip+0xffffffffd9000000],dh        # ffffffffd9005990 <_end+0xffffffffd8fff978>
    5990:	05 00 00 01 35       	add    eax,0x35010000
    5995:	00 00                	add    BYTE PTR [rax],al
    5997:	00 01                	add    BYTE PTR [rcx],al
    5999:	35 00 00 00 00       	xor    eax,0x0
    599e:	04 80                	add    al,0x80
    59a0:	15 00 00 03 53       	adc    eax,0x53030000
    59a5:	04 03                	add    al,0x3
    59a7:	0e                   	(bad)
    59a8:	15 00 00 a6 21       	adc    eax,0x21a60000
    59ad:	00 00                	add    BYTE PTR [rax],al
    59af:	f4                   	hlt
    59b0:	05 00 00 01 c5       	add    eax,0xc5010000
    59b5:	21 00                	and    DWORD PTR [rax],eax
    59b7:	00 00                	add    BYTE PTR [rax],al
    59b9:	04 80                	add    al,0x80
    59bb:	15 00 00 03 4e       	adc    eax,0x4e030000
    59c0:	04 03                	add    al,0x3
    59c2:	fc                   	cld
    59c3:	14 00                	adc    al,0x0
    59c5:	00 a6 21 00 00 0f    	add    BYTE PTR [rsi+0xf000021],ah
    59cb:	06                   	(bad)
    59cc:	00 00                	add    BYTE PTR [rax],al
    59ce:	01 2e                	add    DWORD PTR [rsi],ebp
    59d0:	00 00                	add    BYTE PTR [rax],al
    59d2:	00 00                	add    BYTE PTR [rax],al
    59d4:	04 80                	add    al,0x80
    59d6:	15 00 00 03 49       	adc    eax,0x49030000
    59db:	04 03                	add    al,0x3
    59dd:	20 15 00 00 a6 21    	and    BYTE PTR [rip+0x21a60000],dl        # 21a659e3 <_end+0x21a5f9cb>
    59e3:	00 00                	add    BYTE PTR [rax],al
    59e5:	2a 06                	sub    al,BYTE PTR [rsi]
    59e7:	00 00                	add    BYTE PTR [rax],al
    59e9:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 59ef <__FRAME_END__+0xcbb>
    59ef:	04 e3                	add    al,0xe3
    59f1:	2e 00 00             	cs add BYTE PTR [rax],al
    59f4:	03 6a 04             	add    ebp,DWORD PTR [rdx+0x4]
    59f7:	03 f8                	add    edi,eax
    59f9:	26 00 00             	es add BYTE PTR [rax],al
    59fc:	ea                   	(bad)
    59fd:	20 00                	and    BYTE PTR [rax],al
    59ff:	00 45 06             	add    BYTE PTR [rbp+0x6],al
    5a02:	00 00                	add    BYTE PTR [rax],al
    5a04:	01 c5                	add    ebp,eax
    5a06:	21 00                	and    DWORD PTR [rax],eax
    5a08:	00 00                	add    BYTE PTR [rax],al
    5a0a:	04 e3                	add    al,0xe3
    5a0c:	2e 00 00             	cs add BYTE PTR [rax],al
    5a0f:	03 66 04             	add    esp,DWORD PTR [rsi+0x4]
    5a12:	03 f5                	add    esi,ebp
    5a14:	27                   	(bad)
    5a15:	00 00                	add    BYTE PTR [rax],al
    5a17:	ea                   	(bad)
    5a18:	20 00                	and    BYTE PTR [rax],al
    5a1a:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    5a1d:	00 00                	add    BYTE PTR [rax],al
    5a1f:	01 2e                	add    DWORD PTR [rsi],ebp
    5a21:	00 00                	add    BYTE PTR [rax],al
    5a23:	00 00                	add    BYTE PTR [rax],al
    5a25:	04 e3                	add    al,0xe3
    5a27:	2e 00 00             	cs add BYTE PTR [rax],al
    5a2a:	03 62 04             	add    esp,DWORD PTR [rdx+0x4]
    5a2d:	03 16                	add    edx,DWORD PTR [rsi]
    5a2f:	28 00                	sub    BYTE PTR [rax],al
    5a31:	00 ea                	add    dl,ch
    5a33:	20 00                	and    BYTE PTR [rax],al
    5a35:	00 7b 06             	add    BYTE PTR [rbx+0x6],bh
    5a38:	00 00                	add    BYTE PTR [rax],al
    5a3a:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5a40 <__FRAME_END__+0xd0c>
    5a40:	04 7a                	add    al,0x7a
    5a42:	15 00 00 03 85       	adc    eax,0x85030000
    5a47:	04 03                	add    al,0x3
    5a49:	11 2e                	adc    DWORD PTR [rsi],ebp
    5a4b:	00 00                	add    BYTE PTR [rax],al
    5a4d:	ea                   	(bad)
    5a4e:	20 00                	and    BYTE PTR [rax],al
    5a50:	00 96 06 00 00 01    	add    BYTE PTR [rsi+0x1000006],dl
    5a56:	c5 21 00             	(bad)
    5a59:	00 00                	add    BYTE PTR [rax],al
    5a5b:	04 7a                	add    al,0x7a
    5a5d:	15 00 00 03 80       	adc    eax,0x80030000
    5a62:	04 03                	add    al,0x3
    5a64:	05 2e 00 00 ea       	add    eax,0xea00002e
    5a69:	20 00                	and    BYTE PTR [rax],al
    5a6b:	00 b1 06 00 00 01    	add    BYTE PTR [rcx+0x1000006],dh
    5a71:	2e 00 00             	cs add BYTE PTR [rax],al
    5a74:	00 00                	add    BYTE PTR [rax],al
    5a76:	04 7a                	add    al,0x7a
    5a78:	15 00 00 03 78       	adc    eax,0x78030000
    5a7d:	04 03                	add    al,0x3
    5a7f:	9a                   	(bad)
    5a80:	18 00                	sbb    BYTE PTR [rax],al
    5a82:	00 ea                	add    dl,ch
    5a84:	20 00                	and    BYTE PTR [rax],al
    5a86:	00 cc                	add    ah,cl
    5a88:	06                   	(bad)
    5a89:	00 00                	add    BYTE PTR [rax],al
    5a8b:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5a91 <__FRAME_END__+0xd5d>
    5a91:	04 0e                	add    al,0xe
    5a93:	1d 00 00 03 a0       	sbb    eax,0xa0030000
    5a98:	04 03                	add    al,0x3
    5a9a:	b4 20                	mov    ah,0x20
    5a9c:	00 00                	add    BYTE PTR [rax],al
    5a9e:	ea                   	(bad)
    5a9f:	20 00                	and    BYTE PTR [rax],al
    5aa1:	00 e7                	add    bh,ah
    5aa3:	06                   	(bad)
    5aa4:	00 00                	add    BYTE PTR [rax],al
    5aa6:	01 c5                	add    ebp,eax
    5aa8:	21 00                	and    DWORD PTR [rax],eax
    5aaa:	00 00                	add    BYTE PTR [rax],al
    5aac:	04 0e                	add    al,0xe
    5aae:	1d 00 00 03 9b       	sbb    eax,0x9b030000
    5ab3:	04 03                	add    al,0x3
    5ab5:	a8 20                	test   al,0x20
    5ab7:	00 00                	add    BYTE PTR [rax],al
    5ab9:	ea                   	(bad)
    5aba:	20 00                	and    BYTE PTR [rax],al
    5abc:	00 02                	add    BYTE PTR [rdx],al
    5abe:	07                   	(bad)
    5abf:	00 00                	add    BYTE PTR [rax],al
    5ac1:	01 2e                	add    DWORD PTR [rsi],ebp
    5ac3:	00 00                	add    BYTE PTR [rax],al
    5ac5:	00 00                	add    BYTE PTR [rax],al
    5ac7:	04 0e                	add    al,0xe
    5ac9:	1d 00 00 03 93       	sbb    eax,0x93030000
    5ace:	04 03                	add    al,0x3
    5ad0:	c0 20 00             	shl    BYTE PTR [rax],0x0
    5ad3:	00 ea                	add    dl,ch
    5ad5:	20 00                	and    BYTE PTR [rax],al
    5ad7:	00 1d 07 00 00 01    	add    BYTE PTR [rip+0x1000007],bl        # 1005ae4 <_end+0xfffacc>
    5add:	35 00 00 00 00       	xor    eax,0x0
    5ae2:	04 13                	add    al,0x13
    5ae4:	35 00 00 03 b6       	xor    eax,0xb6030000
    5ae9:	04 03                	add    al,0x3
    5aeb:	40 16                	rex (bad)
    5aed:	00 00                	add    BYTE PTR [rax],al
    5aef:	ea                   	(bad)
    5af0:	20 00                	and    BYTE PTR [rax],al
    5af2:	00 38                	add    BYTE PTR [rax],bh
    5af4:	07                   	(bad)
    5af5:	00 00                	add    BYTE PTR [rax],al
    5af7:	01 c5                	add    ebp,eax
    5af9:	21 00                	and    DWORD PTR [rax],eax
    5afb:	00 00                	add    BYTE PTR [rax],al
    5afd:	04 13                	add    al,0x13
    5aff:	35 00 00 03 b2       	xor    eax,0xb2030000
    5b04:	04 03                	add    al,0x3
    5b06:	31 16                	xor    DWORD PTR [rsi],edx
    5b08:	00 00                	add    BYTE PTR [rax],al
    5b0a:	ea                   	(bad)
    5b0b:	20 00                	and    BYTE PTR [rax],al
    5b0d:	00 53 07             	add    BYTE PTR [rbx+0x7],dl
    5b10:	00 00                	add    BYTE PTR [rax],al
    5b12:	01 2e                	add    DWORD PTR [rsi],ebp
    5b14:	00 00                	add    BYTE PTR [rax],al
    5b16:	00 00                	add    BYTE PTR [rax],al
    5b18:	04 13                	add    al,0x13
    5b1a:	35 00 00 03 ae       	xor    eax,0xae030000
    5b1f:	04 03                	add    al,0x3
    5b21:	4f 16                	rex.WRXB (bad)
    5b23:	00 00                	add    BYTE PTR [rax],al
    5b25:	ea                   	(bad)
    5b26:	20 00                	and    BYTE PTR [rax],al
    5b28:	00 6e 07             	add    BYTE PTR [rsi+0x7],ch
    5b2b:	00 00                	add    BYTE PTR [rax],al
    5b2d:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5b33 <__FRAME_END__+0xdff>
    5b33:	04 b4                	add    al,0xb4
    5b35:	33 00                	xor    eax,DWORD PTR [rax]
    5b37:	00 03                	add    BYTE PTR [rbx],al
    5b39:	cd 04                	int    0x4
    5b3b:	03 67 25             	add    esp,DWORD PTR [rdi+0x25]
    5b3e:	00 00                	add    BYTE PTR [rax],al
    5b40:	ea                   	(bad)
    5b41:	20 00                	and    BYTE PTR [rax],al
    5b43:	00 89 07 00 00 01    	add    BYTE PTR [rcx+0x1000007],cl
    5b49:	c5 21 00             	(bad)
    5b4c:	00 00                	add    BYTE PTR [rax],al
    5b4e:	04 b4                	add    al,0xb4
    5b50:	33 00                	xor    eax,DWORD PTR [rax]
    5b52:	00 03                	add    BYTE PTR [rbx],al
    5b54:	c9                   	leave
    5b55:	04 03                	add    al,0x3
    5b57:	50                   	push   rax
    5b58:	0c 00                	or     al,0x0
    5b5a:	00 ea                	add    dl,ch
    5b5c:	20 00                	and    BYTE PTR [rax],al
    5b5e:	00 a4 07 00 00 01 2e 	add    BYTE PTR [rdi+rax*1+0x2e010000],ah
    5b65:	00 00                	add    BYTE PTR [rax],al
    5b67:	00 00                	add    BYTE PTR [rax],al
    5b69:	04 b4                	add    al,0xb4
    5b6b:	33 00                	xor    eax,DWORD PTR [rax]
    5b6d:	00 03                	add    BYTE PTR [rbx],al
    5b6f:	c5 04 03             	(bad)
    5b72:	5e                   	pop    rsi
    5b73:	0c 00                	or     al,0x0
    5b75:	00 ea                	add    dl,ch
    5b77:	20 00                	and    BYTE PTR [rax],al
    5b79:	00 bf 07 00 00 01    	add    BYTE PTR [rdi+0x1000007],bh
    5b7f:	35 00 00 00 00       	xor    eax,0x0
    5b84:	04 61                	add    al,0x61
    5b86:	19 00                	sbb    DWORD PTR [rax],eax
    5b88:	00 03                	add    BYTE PTR [rbx],al
    5b8a:	e3 04                	jrcxz  5b90 <__FRAME_END__+0xe5c>
    5b8c:	03 74 1d 00          	add    esi,DWORD PTR [rbp+rbx*1+0x0]
    5b90:	00 ea                	add    dl,ch
    5b92:	20 00                	and    BYTE PTR [rax],al
    5b94:	00 df                	add    bh,bl
    5b96:	07                   	(bad)
    5b97:	00 00                	add    BYTE PTR [rax],al
    5b99:	01 c5                	add    ebp,eax
    5b9b:	21 00                	and    DWORD PTR [rax],eax
    5b9d:	00 01                	add    BYTE PTR [rcx],al
    5b9f:	c5 21 00             	(bad)
    5ba2:	00 00                	add    BYTE PTR [rax],al
    5ba4:	04 61                	add    al,0x61
    5ba6:	19 00                	sbb    DWORD PTR [rax],eax
    5ba8:	00 03                	add    BYTE PTR [rbx],al
    5baa:	df 04 03             	fild   WORD PTR [rbx+rax*1]
    5bad:	25 1c 00 00 ea       	and    eax,0xea00001c
    5bb2:	20 00                	and    BYTE PTR [rax],al
    5bb4:	00 ff                	add    bh,bh
    5bb6:	07                   	(bad)
    5bb7:	00 00                	add    BYTE PTR [rax],al
    5bb9:	01 2e                	add    DWORD PTR [rsi],ebp
    5bbb:	00 00                	add    BYTE PTR [rax],al
    5bbd:	00 01                	add    BYTE PTR [rcx],al
    5bbf:	2e 00 00             	cs add BYTE PTR [rax],al
    5bc2:	00 00                	add    BYTE PTR [rax],al
    5bc4:	04 61                	add    al,0x61
    5bc6:	19 00                	sbb    DWORD PTR [rax],eax
    5bc8:	00 03                	add    BYTE PTR [rbx],al
    5bca:	db 04 03             	fild   DWORD PTR [rbx+rax*1]
    5bcd:	da 29                	fisubr DWORD PTR [rcx]
    5bcf:	00 00                	add    BYTE PTR [rax],al
    5bd1:	ea                   	(bad)
    5bd2:	20 00                	and    BYTE PTR [rax],al
    5bd4:	00 1f                	add    BYTE PTR [rdi],bl
    5bd6:	08 00                	or     BYTE PTR [rax],al
    5bd8:	00 01                	add    BYTE PTR [rcx],al
    5bda:	35 00 00 00 01       	xor    eax,0x1000000
    5bdf:	35 00 00 00 00       	xor    eax,0x0
    5be4:	04 86                	add    al,0x86
    5be6:	1e                   	(bad)
    5be7:	00 00                	add    BYTE PTR [rax],al
    5be9:	03 fd                	add    edi,ebp
    5beb:	04 03                	add    al,0x3
    5bed:	e1 2f                	loope  5c1e <__FRAME_END__+0xeea>
    5bef:	00 00                	add    BYTE PTR [rax],al
    5bf1:	ea                   	(bad)
    5bf2:	20 00                	and    BYTE PTR [rax],al
    5bf4:	00 3f                	add    BYTE PTR [rdi],bh
    5bf6:	08 00                	or     BYTE PTR [rax],al
    5bf8:	00 01                	add    BYTE PTR [rcx],al
    5bfa:	c5 21 00             	(bad)
    5bfd:	00 01                	add    BYTE PTR [rcx],al
    5bff:	c5 21 00             	(bad)
    5c02:	00 00                	add    BYTE PTR [rax],al
    5c04:	04 86                	add    al,0x86
    5c06:	1e                   	(bad)
    5c07:	00 00                	add    BYTE PTR [rax],al
    5c09:	03 f9                	add    edi,ecx
    5c0b:	04 03                	add    al,0x3
    5c0d:	a8 2e                	test   al,0x2e
    5c0f:	00 00                	add    BYTE PTR [rax],al
    5c11:	ea                   	(bad)
    5c12:	20 00                	and    BYTE PTR [rax],al
    5c14:	00 5f 08             	add    BYTE PTR [rdi+0x8],bl
    5c17:	00 00                	add    BYTE PTR [rax],al
    5c19:	01 2e                	add    DWORD PTR [rsi],ebp
    5c1b:	00 00                	add    BYTE PTR [rax],al
    5c1d:	00 01                	add    BYTE PTR [rcx],al
    5c1f:	2e 00 00             	cs add BYTE PTR [rax],al
    5c22:	00 00                	add    BYTE PTR [rax],al
    5c24:	04 86                	add    al,0x86
    5c26:	1e                   	(bad)
    5c27:	00 00                	add    BYTE PTR [rax],al
    5c29:	03 f5                	add    esi,ebp
    5c2b:	04 03                	add    al,0x3
    5c2d:	1c 31                	sbb    al,0x31
    5c2f:	00 00                	add    BYTE PTR [rax],al
    5c31:	ea                   	(bad)
    5c32:	20 00                	and    BYTE PTR [rax],al
    5c34:	00 7f 08             	add    BYTE PTR [rdi+0x8],bh
    5c37:	00 00                	add    BYTE PTR [rax],al
    5c39:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005c3f <_end+0xfffc27>
    5c3f:	35 00 00 00 00       	xor    eax,0x0
    5c44:	04 c0                	add    al,0xc0
    5c46:	31 00                	xor    DWORD PTR [rax],eax
    5c48:	00 03                	add    BYTE PTR [rbx],al
    5c4a:	17                   	(bad)
    5c4b:	05 03 38 2f 00       	add    eax,0x2f3803
    5c50:	00 ea                	add    dl,ch
    5c52:	20 00                	and    BYTE PTR [rax],al
    5c54:	00 9f 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bl
    5c5a:	c5 21 00             	(bad)
    5c5d:	00 01                	add    BYTE PTR [rcx],al
    5c5f:	c5 21 00             	(bad)
    5c62:	00 00                	add    BYTE PTR [rax],al
    5c64:	04 c0                	add    al,0xc0
    5c66:	31 00                	xor    DWORD PTR [rax],eax
    5c68:	00 03                	add    BYTE PTR [rbx],al
    5c6a:	13 05 03 f7 2d 00    	adc    eax,DWORD PTR [rip+0x2df703]        # 2e5373 <_end+0x2df35b>
    5c70:	00 ea                	add    dl,ch
    5c72:	20 00                	and    BYTE PTR [rax],al
    5c74:	00 bf 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bh
    5c7a:	2e 00 00             	cs add BYTE PTR [rax],al
    5c7d:	00 01                	add    BYTE PTR [rcx],al
    5c7f:	2e 00 00             	cs add BYTE PTR [rax],al
    5c82:	00 00                	add    BYTE PTR [rax],al
    5c84:	04 c0                	add    al,0xc0
    5c86:	31 00                	xor    DWORD PTR [rax],eax
    5c88:	00 03                	add    BYTE PTR [rbx],al
    5c8a:	0f 05                	syscall
    5c8c:	03 d8                	add    ebx,eax
    5c8e:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5c93:	00 00                	add    BYTE PTR [rax],al
    5c95:	df 08                	fisttp WORD PTR [rax]
    5c97:	00 00                	add    BYTE PTR [rax],al
    5c99:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005c9f <_end+0xfffc87>
    5c9f:	35 00 00 00 00       	xor    eax,0x0
    5ca4:	04 25                	add    al,0x25
    5ca6:	16                   	(bad)
    5ca7:	00 00                	add    BYTE PTR [rax],al
    5ca9:	03 31                	add    esi,DWORD PTR [rcx]
    5cab:	05 03 58 27 00       	add    eax,0x275803
    5cb0:	00 ea                	add    dl,ch
    5cb2:	20 00                	and    BYTE PTR [rax],al
    5cb4:	00 ff                	add    bh,bh
    5cb6:	08 00                	or     BYTE PTR [rax],al
    5cb8:	00 01                	add    BYTE PTR [rcx],al
    5cba:	c5 21 00             	(bad)
    5cbd:	00 01                	add    BYTE PTR [rcx],al
    5cbf:	c5 21 00             	(bad)
    5cc2:	00 00                	add    BYTE PTR [rax],al
    5cc4:	04 25                	add    al,0x25
    5cc6:	16                   	(bad)
    5cc7:	00 00                	add    BYTE PTR [rax],al
    5cc9:	03 2d 05 03 79 14    	add    ebp,DWORD PTR [rip+0x14790305]        # 14795fd4 <_end+0x1478ffbc>
    5ccf:	00 00                	add    BYTE PTR [rax],al
    5cd1:	ea                   	(bad)
    5cd2:	20 00                	and    BYTE PTR [rax],al
    5cd4:	00 1f                	add    BYTE PTR [rdi],bl
    5cd6:	09 00                	or     DWORD PTR [rax],eax
    5cd8:	00 01                	add    BYTE PTR [rcx],al
    5cda:	2e 00 00             	cs add BYTE PTR [rax],al
    5cdd:	00 01                	add    BYTE PTR [rcx],al
    5cdf:	2e 00 00             	cs add BYTE PTR [rax],al
    5ce2:	00 00                	add    BYTE PTR [rax],al
    5ce4:	04 25                	add    al,0x25
    5ce6:	16                   	(bad)
    5ce7:	00 00                	add    BYTE PTR [rax],al
    5ce9:	03 29                	add    ebp,DWORD PTR [rcx]
    5ceb:	05 03 76 29 00       	add    eax,0x297603
    5cf0:	00 ea                	add    dl,ch
    5cf2:	20 00                	and    BYTE PTR [rax],al
    5cf4:	00 3f                	add    BYTE PTR [rdi],bh
    5cf6:	09 00                	or     DWORD PTR [rax],eax
    5cf8:	00 01                	add    BYTE PTR [rcx],al
    5cfa:	35 00 00 00 01       	xor    eax,0x1000000
    5cff:	35 00 00 00 00       	xor    eax,0x0
    5d04:	04 b8                	add    al,0xb8
    5d06:	18 00                	sbb    BYTE PTR [rax],al
    5d08:	00 03                	add    BYTE PTR [rbx],al
    5d0a:	4b 05 03 b6 1b 00    	rex.WXB add rax,0x1bb603
    5d10:	00 ea                	add    dl,ch
    5d12:	20 00                	and    BYTE PTR [rax],al
    5d14:	00 5f 09             	add    BYTE PTR [rdi+0x9],bl
    5d17:	00 00                	add    BYTE PTR [rax],al
    5d19:	01 c5                	add    ebp,eax
    5d1b:	21 00                	and    DWORD PTR [rax],eax
    5d1d:	00 01                	add    BYTE PTR [rcx],al
    5d1f:	c5 21 00             	(bad)
    5d22:	00 00                	add    BYTE PTR [rax],al
    5d24:	04 b8                	add    al,0xb8
    5d26:	18 00                	sbb    BYTE PTR [rax],al
    5d28:	00 03                	add    BYTE PTR [rbx],al
    5d2a:	47 05 03 c2 19 00    	rex.RXB add eax,0x19c203
    5d30:	00 ea                	add    dl,ch
    5d32:	20 00                	and    BYTE PTR [rax],al
    5d34:	00 7f 09             	add    BYTE PTR [rdi+0x9],bh
    5d37:	00 00                	add    BYTE PTR [rax],al
    5d39:	01 2e                	add    DWORD PTR [rsi],ebp
    5d3b:	00 00                	add    BYTE PTR [rax],al
    5d3d:	00 01                	add    BYTE PTR [rcx],al
    5d3f:	2e 00 00             	cs add BYTE PTR [rax],al
    5d42:	00 00                	add    BYTE PTR [rax],al
    5d44:	04 b8                	add    al,0xb8
    5d46:	18 00                	sbb    BYTE PTR [rax],al
    5d48:	00 03                	add    BYTE PTR [rbx],al
    5d4a:	43 05 03 1c 1d 00    	rex.XB add eax,0x1d1c03
    5d50:	00 ea                	add    dl,ch
    5d52:	20 00                	and    BYTE PTR [rax],al
    5d54:	00 9f 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],bl
    5d5a:	35 00 00 00 01       	xor    eax,0x1000000
    5d5f:	35 00 00 00 00       	xor    eax,0x0
    5d64:	04 aa                	add    al,0xaa
    5d66:	0f 00 00             	sldt   WORD PTR [rax]
    5d69:	03 65 05             	add    esp,DWORD PTR [rbp+0x5]
    5d6c:	03 25 28 00 00 ea    	add    esp,DWORD PTR [rip+0xffffffffea000028]        # ffffffffea005d9a <_end+0xffffffffe9fffd82>
    5d72:	20 00                	and    BYTE PTR [rax],al
    5d74:	00 bf 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],bh
    5d7a:	c5 21 00             	(bad)
    5d7d:	00 01                	add    BYTE PTR [rcx],al
    5d7f:	c5 21 00             	(bad)
    5d82:	00 00                	add    BYTE PTR [rax],al
    5d84:	04 aa                	add    al,0xaa
    5d86:	0f 00 00             	sldt   WORD PTR [rax]
    5d89:	03 61 05             	add    esp,DWORD PTR [rcx+0x5]
    5d8c:	03 3b                	add    edi,DWORD PTR [rbx]
    5d8e:	11 00                	adc    DWORD PTR [rax],eax
    5d90:	00 ea                	add    dl,ch
    5d92:	20 00                	and    BYTE PTR [rax],al
    5d94:	00 df                	add    bh,bl
    5d96:	09 00                	or     DWORD PTR [rax],eax
    5d98:	00 01                	add    BYTE PTR [rcx],al
    5d9a:	2e 00 00             	cs add BYTE PTR [rax],al
    5d9d:	00 01                	add    BYTE PTR [rcx],al
    5d9f:	2e 00 00             	cs add BYTE PTR [rax],al
    5da2:	00 00                	add    BYTE PTR [rax],al
    5da4:	04 aa                	add    al,0xaa
    5da6:	0f 00 00             	sldt   WORD PTR [rax]
    5da9:	03 5d 05             	add    ebx,DWORD PTR [rbp+0x5]
    5dac:	03 5c 2b 00          	add    ebx,DWORD PTR [rbx+rbp*1+0x0]
    5db0:	00 ea                	add    dl,ch
    5db2:	20 00                	and    BYTE PTR [rax],al
    5db4:	00 ff                	add    bh,bh
    5db6:	09 00                	or     DWORD PTR [rax],eax
    5db8:	00 01                	add    BYTE PTR [rcx],al
    5dba:	35 00 00 00 01       	xor    eax,0x1000000
    5dbf:	35 00 00 00 00       	xor    eax,0x0
    5dc4:	04 9b                	add    al,0x9b
    5dc6:	2a 00                	sub    al,BYTE PTR [rax]
    5dc8:	00 03                	add    BYTE PTR [rbx],al
    5dca:	f2 07                	repnz (bad)
    5dcc:	03 54 35 00          	add    edx,DWORD PTR [rbp+rsi*1+0x0]
    5dd0:	00 c5                	add    ch,al
    5dd2:	21 00                	and    DWORD PTR [rax],eax
    5dd4:	00 1a                	add    BYTE PTR [rdx],bl
    5dd6:	0a 00                	or     al,BYTE PTR [rax]
    5dd8:	00 01                	add    BYTE PTR [rcx],al
    5dda:	c5 21 00             	(bad)
    5ddd:	00 00                	add    BYTE PTR [rax],al
    5ddf:	04 9b                	add    al,0x9b
    5de1:	2a 00                	sub    al,BYTE PTR [rax]
    5de3:	00 03                	add    BYTE PTR [rbx],al
    5de5:	ee                   	out    dx,al
    5de6:	07                   	(bad)
    5de7:	03 60 35             	add    esp,DWORD PTR [rax+0x35]
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	35 00 00 00 35       	xor    eax,0x35000000
    5df1:	0a 00                	or     al,BYTE PTR [rax]
    5df3:	00 01                	add    BYTE PTR [rcx],al
    5df5:	35 00 00 00 00       	xor    eax,0x0
    5dfa:	04 7d                	add    al,0x7d
    5dfc:	1f                   	(bad)
    5dfd:	00 00                	add    BYTE PTR [rax],al
    5dff:	03 04 08             	add    eax,DWORD PTR [rax+rcx*1]
    5e02:	03 1d 2e 00 00 c5    	add    ebx,DWORD PTR [rip+0xffffffffc500002e]        # ffffffffc5005e36 <_end+0xffffffffc4fffe1e>
    5e08:	21 00                	and    DWORD PTR [rax],eax
    5e0a:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
    5e0d:	00 00                	add    BYTE PTR [rax],al
    5e0f:	01 c5                	add    ebp,eax
    5e11:	21 00                	and    DWORD PTR [rax],eax
    5e13:	00 00                	add    BYTE PTR [rax],al
    5e15:	04 7d                	add    al,0x7d
    5e17:	1f                   	(bad)
    5e18:	00 00                	add    BYTE PTR [rax],al
    5e1a:	03 00                	add    eax,DWORD PTR [rax]
    5e1c:	08 03                	or     BYTE PTR [rbx],al
    5e1e:	29 2e                	sub    DWORD PTR [rsi],ebp
    5e20:	00 00                	add    BYTE PTR [rax],al
    5e22:	35 00 00 00 6b       	xor    eax,0x6b000000
    5e27:	0a 00                	or     al,BYTE PTR [rax]
    5e29:	00 01                	add    BYTE PTR [rcx],al
    5e2b:	35 00 00 00 00       	xor    eax,0x0
    5e30:	04 a3                	add    al,0xa3
    5e32:	25 00 00 03 16       	and    eax,0x16030000
    5e37:	08 03                	or     BYTE PTR [rbx],al
    5e39:	14 25                	adc    al,0x25
    5e3b:	00 00                	add    BYTE PTR [rax],al
    5e3d:	c5 21 00             	(bad)
    5e40:	00 86 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],al
    5e46:	c5 21 00             	(bad)
    5e49:	00 00                	add    BYTE PTR [rax],al
    5e4b:	04 a3                	add    al,0xa3
    5e4d:	25 00 00 03 12       	and    eax,0x12030000
    5e52:	08 03                	or     BYTE PTR [rbx],al
    5e54:	20 25 00 00 35 00    	and    BYTE PTR [rip+0x350000],ah        # 355e5a <_end+0x34fe42>
    5e5a:	00 00                	add    BYTE PTR [rax],al
    5e5c:	a1 0a 00 00 01 35 00 	movabs eax,ds:0x350100000a
    5e63:	00 00 
    5e65:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
    5e68:	25 00 00 03 28       	and    eax,0x28030000
    5e6d:	08 03                	or     BYTE PTR [rbx],al
    5e6f:	01 1e                	add    DWORD PTR [rsi],ebx
    5e71:	00 00                	add    BYTE PTR [rax],al
    5e73:	c5 21 00             	(bad)
    5e76:	00 bc 0a 00 00 01 c5 	add    BYTE PTR [rdx+rcx*1-0x3aff0000],bh
    5e7d:	21 00                	and    DWORD PTR [rax],eax
    5e7f:	00 00                	add    BYTE PTR [rax],al
    5e81:	04 62                	add    al,0x62
    5e83:	25 00 00 03 24       	and    eax,0x24030000
    5e88:	08 03                	or     BYTE PTR [rbx],al
    5e8a:	0c 1e                	or     al,0x1e
    5e8c:	00 00                	add    BYTE PTR [rax],al
    5e8e:	35 00 00 00 d7       	xor    eax,0xd7000000
    5e93:	0a 00                	or     al,BYTE PTR [rax]
    5e95:	00 01                	add    BYTE PTR [rcx],al
    5e97:	35 00 00 00 00       	xor    eax,0x0
    5e9c:	04 02                	add    al,0x2
    5e9e:	16                   	(bad)
    5e9f:	00 00                	add    BYTE PTR [rax],al
    5ea1:	03 3a                	add    edi,DWORD PTR [rdx]
    5ea3:	08 03                	or     BYTE PTR [rbx],al
    5ea5:	6d                   	ins    DWORD PTR es:[rdi],dx
    5ea6:	18 00                	sbb    BYTE PTR [rax],al
    5ea8:	00 c5                	add    ch,al
    5eaa:	21 00                	and    DWORD PTR [rax],eax
    5eac:	00 f7                	add    bh,dh
    5eae:	0a 00                	or     al,BYTE PTR [rax]
    5eb0:	00 01                	add    BYTE PTR [rcx],al
    5eb2:	c5 21 00             	(bad)
    5eb5:	00 01                	add    BYTE PTR [rcx],al
    5eb7:	c5 21 00             	(bad)
    5eba:	00 00                	add    BYTE PTR [rax],al
    5ebc:	04 02                	add    al,0x2
    5ebe:	16                   	(bad)
    5ebf:	00 00                	add    BYTE PTR [rax],al
    5ec1:	03 36                	add    esi,DWORD PTR [rsi]
    5ec3:	08 03                	or     BYTE PTR [rbx],al
    5ec5:	8a 18                	mov    bl,BYTE PTR [rax]
    5ec7:	00 00                	add    BYTE PTR [rax],al
    5ec9:	35 00 00 00 17       	xor    eax,0x17000000
    5ece:	0b 00                	or     eax,DWORD PTR [rax]
    5ed0:	00 01                	add    BYTE PTR [rcx],al
    5ed2:	35 00 00 00 01       	xor    eax,0x1000000
    5ed7:	35 00 00 00 00       	xor    eax,0x0
    5edc:	1f                   	(bad)
    5edd:	65 72 66             	gs jb  5f46 <_GLOBAL_OFFSET_TABLE_+0x4e>
    5ee0:	00 44 08 c6          	add    BYTE PTR [rax+rcx*1-0x3a],al
    5ee4:	2e 00 00             	cs add BYTE PTR [rax],al
    5ee7:	c5 21 00             	(bad)
    5eea:	00 30                	add    BYTE PTR [rax],dh
    5eec:	0b 00                	or     eax,DWORD PTR [rax]
    5eee:	00 01                	add    BYTE PTR [rcx],al
    5ef0:	c5 21 00             	(bad)
    5ef3:	00 00                	add    BYTE PTR [rax],al
    5ef5:	1f                   	(bad)
    5ef6:	65 72 66             	gs jb  5f5f <_GLOBAL_OFFSET_TABLE_+0x67>
    5ef9:	00 40 08             	add    BYTE PTR [rax+0x8],al
    5efc:	d0 2e                	shr    BYTE PTR [rsi],1
    5efe:	00 00                	add    BYTE PTR [rax],al
    5f00:	35 00 00 00 49       	xor    eax,0x49000000
    5f05:	0b 00                	or     eax,DWORD PTR [rax]
    5f07:	00 01                	add    BYTE PTR [rcx],al
    5f09:	35 00 00 00 00       	xor    eax,0x0
    5f0e:	04 5e                	add    al,0x5e
    5f10:	1f                   	(bad)
    5f11:	00 00                	add    BYTE PTR [rax],al
    5f13:	03 56 08             	add    edx,DWORD PTR [rsi+0x8]
    5f16:	03 94 15 00 00 c5 21 	add    edx,DWORD PTR [rbp+rdx*1+0x21c50000]
    5f1d:	00 00                	add    BYTE PTR [rax],al
    5f1f:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    5f22:	00 01                	add    BYTE PTR [rcx],al
    5f24:	c5 21 00             	(bad)
    5f27:	00 00                	add    BYTE PTR [rax],al
    5f29:	04 5e                	add    al,0x5e
    5f2b:	1f                   	(bad)
    5f2c:	00 00                	add    BYTE PTR [rax],al
    5f2e:	03 52 08             	add    edx,DWORD PTR [rdx+0x8]
    5f31:	03 9f 15 00 00 35    	add    ebx,DWORD PTR [rdi+0x35000015]
    5f37:	00 00                	add    BYTE PTR [rax],al
    5f39:	00 7f 0b             	add    BYTE PTR [rdi+0xb],bh
    5f3c:	00 00                	add    BYTE PTR [rax],al
    5f3e:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5f44 <_GLOBAL_OFFSET_TABLE_+0x4c>
    5f44:	04 0a                	add    al,0xa
    5f46:	34 00                	xor    al,0x0
    5f48:	00 03                	add    BYTE PTR [rbx],al
    5f4a:	68 08 03 07 27       	push   0x27070308
    5f4f:	00 00                	add    BYTE PTR [rax],al
    5f51:	c5 21 00             	(bad)
    5f54:	00 9a 0b 00 00 01    	add    BYTE PTR [rdx+0x100000b],bl
    5f5a:	c5 21 00             	(bad)
    5f5d:	00 00                	add    BYTE PTR [rax],al
    5f5f:	04 0a                	add    al,0xa
    5f61:	34 00                	xor    al,0x0
    5f63:	00 03                	add    BYTE PTR [rbx],al
    5f65:	64 08 03             	or     BYTE PTR fs:[rbx],al
    5f68:	12 27                	adc    ah,BYTE PTR [rdi]
    5f6a:	00 00                	add    BYTE PTR [rax],al
    5f6c:	35 00 00 00 b5       	xor    eax,0xb5000000
    5f71:	0b 00                	or     eax,DWORD PTR [rax]
    5f73:	00 01                	add    BYTE PTR [rcx],al
    5f75:	35 00 00 00 00       	xor    eax,0x0
    5f7a:	04 93                	add    al,0x93
    5f7c:	28 00                	sub    BYTE PTR [rax],al
    5f7e:	00 03                	add    BYTE PTR [rbx],al
    5f80:	7a 08                	jp     5f8a <_GLOBAL_OFFSET_TABLE_+0x92>
    5f82:	03 e1                	add    esp,ecx
    5f84:	19 00                	sbb    DWORD PTR [rax],eax
    5f86:	00 c5                	add    ch,al
    5f88:	21 00                	and    DWORD PTR [rax],eax
    5f8a:	00 d0                	add    al,dl
    5f8c:	0b 00                	or     eax,DWORD PTR [rax]
    5f8e:	00 01                	add    BYTE PTR [rcx],al
    5f90:	c5 21 00             	(bad)
    5f93:	00 00                	add    BYTE PTR [rax],al
    5f95:	04 93                	add    al,0x93
    5f97:	28 00                	sub    BYTE PTR [rax],al
    5f99:	00 03                	add    BYTE PTR [rbx],al
    5f9b:	76 08                	jbe    5fa5 <_GLOBAL_OFFSET_TABLE_+0xad>
    5f9d:	03 ed                	add    ebp,ebp
    5f9f:	19 00                	sbb    DWORD PTR [rax],eax
    5fa1:	00 35 00 00 00 eb    	add    BYTE PTR [rip+0xffffffffeb000000],dh        # ffffffffeb005fa7 <_end+0xffffffffeaffff8f>
    5fa7:	0b 00                	or     eax,DWORD PTR [rax]
    5fa9:	00 01                	add    BYTE PTR [rcx],al
    5fab:	35 00 00 00 00       	xor    eax,0x0
    5fb0:	04 f3                	add    al,0xf3
    5fb2:	0b 00                	or     eax,DWORD PTR [rax]
    5fb4:	00 03                	add    BYTE PTR [rbx],al
    5fb6:	8c 08                	mov    WORD PTR [rax],cs
    5fb8:	03 d5                	add    edx,ebp
    5fba:	13 00                	adc    eax,DWORD PTR [rax]
    5fbc:	00 c5                	add    ch,al
    5fbe:	21 00                	and    DWORD PTR [rax],eax
    5fc0:	00 0b                	add    BYTE PTR [rbx],cl
    5fc2:	0c 00                	or     al,0x0
    5fc4:	00 01                	add    BYTE PTR [rcx],al
    5fc6:	c5 21 00             	(bad)
    5fc9:	00 01                	add    BYTE PTR [rcx],al
    5fcb:	c5 21 00             	(bad)
    5fce:	00 00                	add    BYTE PTR [rax],al
    5fd0:	04 f3                	add    al,0xf3
    5fd2:	0b 00                	or     eax,DWORD PTR [rax]
    5fd4:	00 03                	add    BYTE PTR [rbx],al
    5fd6:	88 08                	mov    BYTE PTR [rax],cl
    5fd8:	03 47 15             	add    eax,DWORD PTR [rdi+0x15]
    5fdb:	00 00                	add    BYTE PTR [rax],al
    5fdd:	35 00 00 00 2b       	xor    eax,0x2b000000
    5fe2:	0c 00                	or     al,0x0
    5fe4:	00 01                	add    BYTE PTR [rcx],al
    5fe6:	35 00 00 00 01       	xor    eax,0x1000000
    5feb:	35 00 00 00 00       	xor    eax,0x0
    5ff0:	1f                   	(bad)
    5ff1:	66 6d                	ins    WORD PTR es:[rdi],dx
    5ff3:	61                   	(bad)
    5ff4:	00 96 08 c6 0f 00    	add    BYTE PTR [rsi+0xfc608],dl
    5ffa:	00 c5                	add    ch,al
    5ffc:	21 00                	and    DWORD PTR [rax],eax
    5ffe:	00 4e 0c             	add    BYTE PTR [rsi+0xc],cl
    6001:	00 00                	add    BYTE PTR [rax],al
    6003:	01 c5                	add    ebp,eax
    6005:	21 00                	and    DWORD PTR [rax],eax
    6007:	00 01                	add    BYTE PTR [rcx],al
    6009:	c5 21 00             	(bad)
    600c:	00 01                	add    BYTE PTR [rcx],al
    600e:	c5 21 00             	(bad)
    6011:	00 00                	add    BYTE PTR [rax],al
    6013:	1f                   	(bad)
    6014:	66 6d                	ins    WORD PTR es:[rdi],dx
    6016:	61                   	(bad)
    6017:	00 92 08 f4 18 00    	add    BYTE PTR [rdx+0x18f408],dl
    601d:	00 35 00 00 00 71    	add    BYTE PTR [rip+0x71000000],dh        # 71006023 <_end+0x7100000b>
    6023:	0c 00                	or     al,0x0
    6025:	00 01                	add    BYTE PTR [rcx],al
    6027:	35 00 00 00 01       	xor    eax,0x1000000
    602c:	35 00 00 00 01       	xor    eax,0x1000000
    6031:	35 00 00 00 00       	xor    eax,0x0
    6036:	04 62                	add    al,0x62
    6038:	2d 00 00 03 a0       	sub    eax,0xa0030000
    603d:	08 03                	or     BYTE PTR [rbx],al
    603f:	31 1b                	xor    DWORD PTR [rbx],ebx
    6041:	00 00                	add    BYTE PTR [rax],al
    6043:	c5 21 00             	(bad)
    6046:	00 91 0c 00 00 01    	add    BYTE PTR [rcx+0x100000c],dl
    604c:	c5 21 00             	(bad)
    604f:	00 01                	add    BYTE PTR [rcx],al
    6051:	c5 21 00             	(bad)
    6054:	00 00                	add    BYTE PTR [rax],al
    6056:	04 62                	add    al,0x62
    6058:	2d 00 00 03 9c       	sub    eax,0x9c030000
    605d:	08 03                	or     BYTE PTR [rbx],al
    605f:	e9 34 00 00 35       	jmp    35006098 <_end+0x35000080>
    6064:	00 00                	add    BYTE PTR [rax],al
    6066:	00 b1 0c 00 00 01    	add    BYTE PTR [rcx+0x100000c],dh
    606c:	35 00 00 00 01       	xor    eax,0x1000000
    6071:	35 00 00 00 00       	xor    eax,0x0
    6076:	04 87                	add    al,0x87
    6078:	0e                   	(bad)
    6079:	00 00                	add    BYTE PTR [rax],al
    607b:	03 aa 08 03 b9 34    	add    ebp,DWORD PTR [rdx+0x34b90308]
    6081:	00 00                	add    BYTE PTR [rax],al
    6083:	c5 21 00             	(bad)
    6086:	00 d1                	add    cl,dl
    6088:	0c 00                	or     al,0x0
    608a:	00 01                	add    BYTE PTR [rcx],al
    608c:	c5 21 00             	(bad)
    608f:	00 01                	add    BYTE PTR [rcx],al
    6091:	c5 21 00             	(bad)
    6094:	00 00                	add    BYTE PTR [rax],al
    6096:	04 87                	add    al,0x87
    6098:	0e                   	(bad)
    6099:	00 00                	add    BYTE PTR [rax],al
    609b:	03 a6 08 03 c6 0c    	add    esp,DWORD PTR [rsi+0xcc60308]
    60a1:	00 00                	add    BYTE PTR [rax],al
    60a3:	35 00 00 00 f1       	xor    eax,0xf1000000
    60a8:	0c 00                	or     al,0x0
    60aa:	00 01                	add    BYTE PTR [rcx],al
    60ac:	35 00 00 00 01       	xor    eax,0x1000000
    60b1:	35 00 00 00 00       	xor    eax,0x0
    60b6:	04 db                	add    al,0xdb
    60b8:	2f                   	(bad)
    60b9:	00 00                	add    BYTE PTR [rax],al
    60bb:	03 f6                	add    esi,esi
    60bd:	0d 03 5b 14 00       	or     eax,0x145b03
    60c2:	00 c5                	add    ch,al
    60c4:	21 00                	and    DWORD PTR [rax],eax
    60c6:	00 16                	add    BYTE PTR [rsi],dl
    60c8:	0d 00 00 01 c5       	or     eax,0xc5010000
    60cd:	21 00                	and    DWORD PTR [rax],eax
    60cf:	00 01                	add    BYTE PTR [rcx],al
    60d1:	c5 21 00             	(bad)
    60d4:	00 01                	add    BYTE PTR [rcx],al
    60d6:	c5 21 00             	(bad)
    60d9:	00 00                	add    BYTE PTR [rax],al
    60db:	04 db                	add    al,0xdb
    60dd:	2f                   	(bad)
    60de:	00 00                	add    BYTE PTR [rax],al
    60e0:	03 f2                	add    esi,edx
    60e2:	0d 03 fc 33 00       	or     eax,0x33fc03
    60e7:	00 2e                	add    BYTE PTR [rsi],ch
    60e9:	00 00                	add    BYTE PTR [rax],al
    60eb:	00 3b                	add    BYTE PTR [rbx],bh
    60ed:	0d 00 00 01 2e       	or     eax,0x2e010000
    60f2:	00 00                	add    BYTE PTR [rax],al
    60f4:	00 01                	add    BYTE PTR [rcx],al
    60f6:	2e 00 00             	cs add BYTE PTR [rax],al
    60f9:	00 01                	add    BYTE PTR [rcx],al
    60fb:	2e 00 00             	cs add BYTE PTR [rax],al
    60fe:	00 00                	add    BYTE PTR [rax],al
    6100:	04 db                	add    al,0xdb
    6102:	2f                   	(bad)
    6103:	00 00                	add    BYTE PTR [rax],al
    6105:	03 ee                	add    ebp,esi
    6107:	0d 03 b7 29 00       	or     eax,0x29b703
    610c:	00 35 00 00 00 60    	add    BYTE PTR [rip+0x60000000],dh        # 60006112 <_end+0x600000fa>
    6112:	0d 00 00 01 35       	or     eax,0x35010000
    6117:	00 00                	add    BYTE PTR [rax],al
    6119:	00 01                	add    BYTE PTR [rcx],al
    611b:	35 00 00 00 01       	xor    eax,0x1000000
    6120:	35 00 00 00 00       	xor    eax,0x0
    6125:	04 db                	add    al,0xdb
    6127:	2f                   	(bad)
    6128:	00 00                	add    BYTE PTR [rax],al
    612a:	03 b4 08 03 ec 12 00 	add    esi,DWORD PTR [rax+rcx*1+0x12ec03]
    6131:	00 c5                	add    ch,al
    6133:	21 00                	and    DWORD PTR [rax],eax
    6135:	00 80 0d 00 00 01    	add    BYTE PTR [rax+0x100000d],al
    613b:	c5 21 00             	(bad)
    613e:	00 01                	add    BYTE PTR [rcx],al
    6140:	c5 21 00             	(bad)
    6143:	00 00                	add    BYTE PTR [rax],al
    6145:	04 db                	add    al,0xdb
    6147:	2f                   	(bad)
    6148:	00 00                	add    BYTE PTR [rax],al
    614a:	03 b0 08 03 eb 13    	add    esi,DWORD PTR [rax+0x13eb0308]
    6150:	00 00                	add    BYTE PTR [rax],al
    6152:	35 00 00 00 a0       	xor    eax,0xa0000000
    6157:	0d 00 00 01 35       	or     eax,0x35010000
    615c:	00 00                	add    BYTE PTR [rax],al
    615e:	00 01                	add    BYTE PTR [rcx],al
    6160:	35 00 00 00 00       	xor    eax,0x0
    6165:	04 dc                	add    al,0xdc
    6167:	26 00 00             	es add BYTE PTR [rax],al
    616a:	03 be 08 03 10 31    	add    edi,DWORD PTR [rsi+0x31100308]
    6170:	00 00                	add    BYTE PTR [rax],al
    6172:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6173:	21 00                	and    DWORD PTR [rax],eax
    6175:	00 bb 0d 00 00 01    	add    BYTE PTR [rbx+0x100000d],bh
    617b:	c5 21 00             	(bad)
    617e:	00 00                	add    BYTE PTR [rax],al
    6180:	04 dc                	add    al,0xdc
    6182:	26 00 00             	es add BYTE PTR [rax],al
    6185:	03 ba 08 03 eb 30    	add    edi,DWORD PTR [rdx+0x30eb0308]
    618b:	00 00                	add    BYTE PTR [rax],al
    618d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    618e:	21 00                	and    DWORD PTR [rax],eax
    6190:	00 d6                	add    dh,dl
    6192:	0d 00 00 01 35       	or     eax,0x35010000
    6197:	00 00                	add    BYTE PTR [rax],al
    6199:	00 00                	add    BYTE PTR [rax],al
    619b:	04 f0                	add    al,0xf0
    619d:	2d 00 00 03 d1       	sub    eax,0xd1030000
    61a2:	08 03                	or     BYTE PTR [rbx],al
    61a4:	97                   	xchg   edi,eax
    61a5:	0e                   	(bad)
    61a6:	00 00                	add    BYTE PTR [rax],al
    61a8:	c5 21 00             	(bad)
    61ab:	00 f1                	add    cl,dh
    61ad:	0d 00 00 01 c5       	or     eax,0xc5010000
    61b2:	21 00                	and    DWORD PTR [rax],eax
    61b4:	00 00                	add    BYTE PTR [rax],al
    61b6:	04 f0                	add    al,0xf0
    61b8:	2d 00 00 03 cd       	sub    eax,0xcd030000
    61bd:	08 03                	or     BYTE PTR [rbx],al
    61bf:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    61c0:	0e                   	(bad)
    61c1:	00 00                	add    BYTE PTR [rax],al
    61c3:	35 00 00 00 0c       	xor    eax,0xc000000
    61c8:	0e                   	(bad)
    61c9:	00 00                	add    BYTE PTR [rax],al
    61cb:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 61d1 <_end+0x1b9>
    61d1:	04 79                	add    al,0x79
    61d3:	34 00                	xor    al,0x0
    61d5:	00 03                	add    BYTE PTR [rbx],al
    61d7:	e3 08                	jrcxz  61e1 <_end+0x1c9>
    61d9:	03 54 2c 00          	add    edx,DWORD PTR [rsp+rbp*1+0x0]
    61dd:	00 be 21 00 00 27    	add    BYTE PTR [rsi+0x27000021],bh
    61e3:	0e                   	(bad)
    61e4:	00 00                	add    BYTE PTR [rax],al
    61e6:	01 c5                	add    ebp,eax
    61e8:	21 00                	and    DWORD PTR [rax],eax
    61ea:	00 00                	add    BYTE PTR [rax],al
    61ec:	04 79                	add    al,0x79
    61ee:	34 00                	xor    al,0x0
    61f0:	00 03                	add    BYTE PTR [rbx],al
    61f2:	df 08                	fisttp WORD PTR [rax]
    61f4:	03 78 33             	add    edi,DWORD PTR [rax+0x33]
    61f7:	00 00                	add    BYTE PTR [rax],al
    61f9:	be 21 00 00 42       	mov    esi,0x42000021
    61fe:	0e                   	(bad)
    61ff:	00 00                	add    BYTE PTR [rax],al
    6201:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6207 <_end+0x1ef>
    6207:	04 f1                	add    al,0xf1
    6209:	23 00                	and    eax,DWORD PTR [rax]
    620b:	00 03                	add    BYTE PTR [rbx],al
    620d:	f5                   	cmc
    620e:	08 03                	or     BYTE PTR [rbx],al
    6210:	e3 1b                	jrcxz  622d <_end+0x215>
    6212:	00 00                	add    BYTE PTR [rax],al
    6214:	be 21 00 00 5d       	mov    esi,0x5d000021
    6219:	0e                   	(bad)
    621a:	00 00                	add    BYTE PTR [rax],al
    621c:	01 c5                	add    ebp,eax
    621e:	21 00                	and    DWORD PTR [rax],eax
    6220:	00 00                	add    BYTE PTR [rax],al
    6222:	04 f1                	add    al,0xf1
    6224:	23 00                	and    eax,DWORD PTR [rax]
    6226:	00 03                	add    BYTE PTR [rbx],al
    6228:	f1                   	int1
    6229:	08 03                	or     BYTE PTR [rbx],al
    622b:	f1                   	int1
    622c:	1b 00                	sbb    eax,DWORD PTR [rax]
    622e:	00 be 21 00 00 78    	add    BYTE PTR [rsi+0x78000021],bh
    6234:	0e                   	(bad)
    6235:	00 00                	add    BYTE PTR [rax],al
    6237:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 623d <_end+0x225>
    623d:	04 5b                	add    al,0x5b
    623f:	19 00                	sbb    DWORD PTR [rax],eax
    6241:	00 03                	add    BYTE PTR [rbx],al
    6243:	07                   	(bad)
    6244:	09 03                	or     DWORD PTR [rbx],eax
    6246:	1e                   	(bad)
    6247:	12 00                	adc    al,BYTE PTR [rax]
    6249:	00 c5                	add    ch,al
    624b:	21 00                	and    DWORD PTR [rax],eax
    624d:	00 93 0e 00 00 01    	add    BYTE PTR [rbx+0x100000e],dl
    6253:	c5 21 00             	(bad)
    6256:	00 00                	add    BYTE PTR [rax],al
    6258:	04 5b                	add    al,0x5b
    625a:	19 00                	sbb    DWORD PTR [rax],eax
    625c:	00 03                	add    BYTE PTR [rbx],al
    625e:	03 09                	add    ecx,DWORD PTR [rcx]
    6260:	03 56 1d             	add    edx,DWORD PTR [rsi+0x1d]
    6263:	00 00                	add    BYTE PTR [rax],al
    6265:	35 00 00 00 ae       	xor    eax,0xae000000
    626a:	0e                   	(bad)
    626b:	00 00                	add    BYTE PTR [rax],al
    626d:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6273 <_end+0x25b>
    6273:	04 f0                	add    al,0xf0
    6275:	1c 00                	sbb    al,0x0
    6277:	00 03                	add    BYTE PTR [rbx],al
    6279:	1a 09                	sbb    cl,BYTE PTR [rcx]
    627b:	03 53 15             	add    edx,DWORD PTR [rbx+0x15]
    627e:	00 00                	add    BYTE PTR [rax],al
    6280:	c5 21 00             	(bad)
    6283:	00 c9                	add    cl,cl
    6285:	0e                   	(bad)
    6286:	00 00                	add    BYTE PTR [rax],al
    6288:	01 c5                	add    ebp,eax
    628a:	21 00                	and    DWORD PTR [rax],eax
    628c:	00 00                	add    BYTE PTR [rax],al
    628e:	04 f0                	add    al,0xf0
    6290:	1c 00                	sbb    al,0x0
    6292:	00 03                	add    BYTE PTR [rbx],al
    6294:	16                   	(bad)
    6295:	09 03                	or     DWORD PTR [rbx],eax
    6297:	5e                   	pop    rsi
    6298:	15 00 00 35 00       	adc    eax,0x350000
    629d:	00 00                	add    BYTE PTR [rax],al
    629f:	e4 0e                	in     al,0xe
    62a1:	00 00                	add    BYTE PTR [rax],al
    62a3:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 62a9 <_end+0x291>
    62a9:	04 dd                	add    al,0xdd
    62ab:	26 00 00             	es add BYTE PTR [rax],al
    62ae:	03 2c 09             	add    ebp,DWORD PTR [rcx+rcx*1]
    62b1:	03 ae 2c 00 00 c5    	add    ebp,DWORD PTR [rsi-0x3affffd4]
    62b7:	21 00                	and    DWORD PTR [rax],eax
    62b9:	00 ff                	add    bh,bh
    62bb:	0e                   	(bad)
    62bc:	00 00                	add    BYTE PTR [rax],al
    62be:	01 c5                	add    ebp,eax
    62c0:	21 00                	and    DWORD PTR [rax],eax
    62c2:	00 00                	add    BYTE PTR [rax],al
    62c4:	04 dd                	add    al,0xdd
    62c6:	26 00 00             	es add BYTE PTR [rax],al
    62c9:	03 28                	add    ebp,DWORD PTR [rax]
    62cb:	09 03                	or     DWORD PTR [rbx],eax
    62cd:	b9 2c 00 00 35       	mov    ecx,0x3500002c
    62d2:	00 00                	add    BYTE PTR [rax],al
    62d4:	00 1a                	add    BYTE PTR [rdx],bl
    62d6:	0f 00 00             	sldt   WORD PTR [rax]
    62d9:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 62df <_end+0x2c7>
    62df:	04 7a                	add    al,0x7a
    62e1:	34 00                	xor    al,0x0
    62e3:	00 03                	add    BYTE PTR [rbx],al
    62e5:	3e 09 03             	ds or  DWORD PTR [rbx],eax
    62e8:	40 31 00             	rex xor DWORD PTR [rax],eax
    62eb:	00 b2 21 00 00 35    	add    BYTE PTR [rdx+0x35000021],dh
    62f1:	0f 00 00             	sldt   WORD PTR [rax]
    62f4:	01 c5                	add    ebp,eax
    62f6:	21 00                	and    DWORD PTR [rax],eax
    62f8:	00 00                	add    BYTE PTR [rax],al
    62fa:	04 7a                	add    al,0x7a
    62fc:	34 00                	xor    al,0x0
    62fe:	00 03                	add    BYTE PTR [rbx],al
    6300:	3a 09                	cmp    cl,BYTE PTR [rcx]
    6302:	03 c5                	add    eax,ebp
    6304:	10 00                	adc    BYTE PTR [rax],al
    6306:	00 b2 21 00 00 50    	add    BYTE PTR [rdx+0x50000021],dh
    630c:	0f 00 00             	sldt   WORD PTR [rax]
    630f:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6315 <_end+0x2fd>
    6315:	04 f2                	add    al,0xf2
    6317:	23 00                	and    eax,DWORD PTR [rax]
    6319:	00 03                	add    BYTE PTR [rbx],al
    631b:	50                   	push   rax
    631c:	09 03                	or     DWORD PTR [rbx],eax
    631e:	6b 33 00             	imul   esi,DWORD PTR [rbx],0x0
    6321:	00 b2 21 00 00 6b    	add    BYTE PTR [rdx+0x6b000021],dh
    6327:	0f 00 00             	sldt   WORD PTR [rax]
    632a:	01 c5                	add    ebp,eax
    632c:	21 00                	and    DWORD PTR [rax],eax
    632e:	00 00                	add    BYTE PTR [rax],al
    6330:	04 f2                	add    al,0xf2
    6332:	23 00                	and    eax,DWORD PTR [rax]
    6334:	00 03                	add    BYTE PTR [rbx],al
    6336:	4c 09 03             	or     QWORD PTR [rbx],r8
    6339:	d3 17                	rcl    DWORD PTR [rdi],cl
    633b:	00 00                	add    BYTE PTR [rax],al
    633d:	b2 21                	mov    dl,0x21
    633f:	00 00                	add    BYTE PTR [rax],al
    6341:	86 0f                	xchg   BYTE PTR [rdi],cl
    6343:	00 00                	add    BYTE PTR [rax],al
    6345:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 634b <_end+0x333>
    634b:	04 c4                	add    al,0xc4
    634d:	14 00                	adc    al,0x0
    634f:	00 03                	add    BYTE PTR [rbx],al
    6351:	62 09 03 69 14       	(bad)
    6356:	00 00                	add    BYTE PTR [rax],al
    6358:	c5 21 00             	(bad)
    635b:	00 a1 0f 00 00 01    	add    BYTE PTR [rcx+0x100000f],ah
    6361:	c5 21 00             	(bad)
    6364:	00 00                	add    BYTE PTR [rax],al
    6366:	04 c4                	add    al,0xc4
    6368:	14 00                	adc    al,0x0
    636a:	00 03                	add    BYTE PTR [rbx],al
    636c:	5e                   	pop    rsi
    636d:	09 03                	or     DWORD PTR [rbx],eax
    636f:	92                   	xchg   edx,eax
    6370:	13 00                	adc    eax,DWORD PTR [rax]
    6372:	00 35 00 00 00 bc    	add    BYTE PTR [rip+0xffffffffbc000000],dh        # ffffffffbc006378 <_end+0xffffffffbc000360>
    6378:	0f 00 00             	sldt   WORD PTR [rax]
    637b:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6381 <_end+0x369>
    6381:	04 89                	add    al,0x89
    6383:	28 00                	sub    BYTE PTR [rax],al
    6385:	00 03                	add    BYTE PTR [rbx],al
    6387:	74 09                	je     6392 <_end+0x37a>
    6389:	03 67 0e             	add    esp,DWORD PTR [rdi+0xe]
    638c:	00 00                	add    BYTE PTR [rax],al
    638e:	c5 21 00             	(bad)
    6391:	00 dc                	add    ah,bl
    6393:	0f 00 00             	sldt   WORD PTR [rax]
    6396:	01 c5                	add    ebp,eax
    6398:	21 00                	and    DWORD PTR [rax],eax
    639a:	00 01                	add    BYTE PTR [rcx],al
    639c:	c5 21 00             	(bad)
    639f:	00 00                	add    BYTE PTR [rax],al
    63a1:	04 89                	add    al,0x89
    63a3:	28 00                	sub    BYTE PTR [rax],al
    63a5:	00 03                	add    BYTE PTR [rbx],al
    63a7:	70 09                	jo     63b2 <_end+0x39a>
    63a9:	03 f7                	add    esi,edi
    63ab:	10 00                	adc    BYTE PTR [rax],al
    63ad:	00 35 00 00 00 fc    	add    BYTE PTR [rip+0xfffffffffc000000],dh        # fffffffffc0063b3 <_end+0xfffffffffc00039b>
    63b3:	0f 00 00             	sldt   WORD PTR [rax]
    63b6:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 10063bc <_end+0x10003a4>
    63bc:	35 00 00 00 00       	xor    eax,0x0
    63c1:	04 6c                	add    al,0x6c
    63c3:	12 00                	adc    al,BYTE PTR [rax]
    63c5:	00 03                	add    BYTE PTR [rbx],al
    63c7:	7e 09                	jle    63d2 <_end+0x3ba>
    63c9:	03 a9 25 00 00 c5    	add    ebp,DWORD PTR [rcx-0x3affffdb]
    63cf:	21 00                	and    DWORD PTR [rax],eax
    63d1:	00 1c 10             	add    BYTE PTR [rax+rdx*1],bl
    63d4:	00 00                	add    BYTE PTR [rax],al
    63d6:	01 c5                	add    ebp,eax
    63d8:	21 00                	and    DWORD PTR [rax],eax
    63da:	00 01                	add    BYTE PTR [rcx],al
    63dc:	c5 21 00             	(bad)
    63df:	00 00                	add    BYTE PTR [rax],al
    63e1:	04 6c                	add    al,0x6c
    63e3:	12 00                	adc    al,BYTE PTR [rax]
    63e5:	00 03                	add    BYTE PTR [rbx],al
    63e7:	7a 09                	jp     63f2 <_end+0x3da>
    63e9:	03 8b 0f 00 00 35    	add    ecx,DWORD PTR [rbx+0x3500000f]
    63ef:	00 00                	add    BYTE PTR [rax],al
    63f1:	00 3c 10             	add    BYTE PTR [rax+rdx*1],bh
    63f4:	00 00                	add    BYTE PTR [rax],al
    63f6:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 10063fc <_end+0x10003e4>
    63fc:	c5 21 00             	(bad)
    63ff:	00 00                	add    BYTE PTR [rax],al
    6401:	04 6b                	add    al,0x6b
    6403:	2f                   	(bad)
    6404:	00 00                	add    BYTE PTR [rax],al
    6406:	03 90 09 03 54 31    	add    edx,DWORD PTR [rax+0x31540309]
    640c:	00 00                	add    BYTE PTR [rax],al
    640e:	c5 21 00             	(bad)
    6411:	00 5c 10 00          	add    BYTE PTR [rax+rdx*1+0x0],bl
    6415:	00 01                	add    BYTE PTR [rcx],al
    6417:	c5 21 00             	(bad)
    641a:	00 01                	add    BYTE PTR [rcx],al
    641c:	c5 21 00             	(bad)
    641f:	00 00                	add    BYTE PTR [rax],al
    6421:	04 6b                	add    al,0x6b
    6423:	2f                   	(bad)
    6424:	00 00                	add    BYTE PTR [rax],al
    6426:	03 8c 09 03 8f 32 00 	add    ecx,DWORD PTR [rcx+rcx*1+0x328f03]
    642d:	00 35 00 00 00 7c    	add    BYTE PTR [rip+0x7c000000],dh        # 7c006433 <_end+0x7c00041b>
    6433:	10 00                	adc    BYTE PTR [rax],al
    6435:	00 01                	add    BYTE PTR [rcx],al
    6437:	35 00 00 00 01       	xor    eax,0x1000000
    643c:	35 00 00 00 00       	xor    eax,0x0
    6441:	04 24                	add    al,0x24
    6443:	24 00                	and    al,0x0
    6445:	00 03                	add    BYTE PTR [rbx],al
    6447:	9a                   	(bad)
    6448:	09 03                	or     DWORD PTR [rbx],eax
    644a:	02 17                	add    dl,BYTE PTR [rdi]
    644c:	00 00                	add    BYTE PTR [rax],al
    644e:	c5 21 00             	(bad)
    6451:	00 a1 10 00 00 01    	add    BYTE PTR [rcx+0x1000010],ah
    6457:	c5 21 00             	(bad)
    645a:	00 01                	add    BYTE PTR [rcx],al
    645c:	c5 21 00             	(bad)
    645f:	00 01                	add    BYTE PTR [rcx],al
    6461:	ba 25 00 00 00       	mov    edx,0x25
    6466:	04 24                	add    al,0x24
    6468:	24 00                	and    al,0x0
    646a:	00 03                	add    BYTE PTR [rbx],al
    646c:	96                   	xchg   esi,eax
    646d:	09 03                	or     DWORD PTR [rbx],eax
    646f:	54                   	push   rsp
    6470:	34 00                	xor    al,0x0
    6472:	00 35 00 00 00 c6    	add    BYTE PTR [rip+0xffffffffc6000000],dh        # ffffffffc6006478 <_end+0xffffffffc6000460>
    6478:	10 00                	adc    BYTE PTR [rax],al
    647a:	00 01                	add    BYTE PTR [rcx],al
    647c:	35 00 00 00 01       	xor    eax,0x1000000
    6481:	35 00 00 00 01       	xor    eax,0x1000000
    6486:	ba 25 00 00 00       	mov    edx,0x25
    648b:	04 7b                	add    al,0x7b
    648d:	34 00                	xor    al,0x0
    648f:	00 03                	add    BYTE PTR [rbx],al
    6491:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    6492:	09 03                	or     DWORD PTR [rbx],eax
    6494:	46 2f                	rex.RX (bad)
    6496:	00 00                	add    BYTE PTR [rax],al
    6498:	c5 21 00             	(bad)
    649b:	00 e1                	add    cl,ah
    649d:	10 00                	adc    BYTE PTR [rax],al
    649f:	00 01                	add    BYTE PTR [rcx],al
    64a1:	c5 21 00             	(bad)
    64a4:	00 00                	add    BYTE PTR [rax],al
    64a6:	04 7b                	add    al,0x7b
    64a8:	34 00                	xor    al,0x0
    64aa:	00 03                	add    BYTE PTR [rbx],al
    64ac:	a0 09 03 51 2f 00 00 	movabs al,ds:0x3500002f510309
    64b3:	35 00 
    64b5:	00 00                	add    BYTE PTR [rax],al
    64b7:	fc                   	cld
    64b8:	10 00                	adc    BYTE PTR [rax],al
    64ba:	00 01                	add    BYTE PTR [rcx],al
    64bc:	35 00 00 00 00       	xor    eax,0x0
    64c1:	04 f3                	add    al,0xf3
    64c3:	23 00                	and    eax,DWORD PTR [rax]
    64c5:	00 03                	add    BYTE PTR [rbx],al
    64c7:	b6 09                	mov    dh,0x9
    64c9:	03 a3 1e 00 00 c5    	add    esp,DWORD PTR [rbx-0x3affffe2]
    64cf:	21 00                	and    DWORD PTR [rax],eax
    64d1:	00 17                	add    BYTE PTR [rdi],dl
    64d3:	11 00                	adc    DWORD PTR [rax],eax
    64d5:	00 01                	add    BYTE PTR [rcx],al
    64d7:	c5 21 00             	(bad)
    64da:	00 00                	add    BYTE PTR [rax],al
    64dc:	04 f3                	add    al,0xf3
    64de:	23 00                	and    eax,DWORD PTR [rax]
    64e0:	00 03                	add    BYTE PTR [rbx],al
    64e2:	b2 09                	mov    dl,0x9
    64e4:	03 af 1e 00 00 35    	add    ebp,DWORD PTR [rdi+0x3500001e]
    64ea:	00 00                	add    BYTE PTR [rax],al
    64ec:	00 32                	add    BYTE PTR [rdx],dh
    64ee:	11 00                	adc    DWORD PTR [rax],eax
    64f0:	00 01                	add    BYTE PTR [rcx],al
    64f2:	35 00 00 00 00       	xor    eax,0x0
    64f7:	04 bc                	add    al,0xbc
    64f9:	25 00 00 03 c8       	and    eax,0xc8030000
    64fe:	09 03                	or     DWORD PTR [rbx],eax
    6500:	4b 1a 00             	rex.WXB sbb al,BYTE PTR [r8]
    6503:	00 c5                	add    ch,al
    6505:	21 00                	and    DWORD PTR [rax],eax
    6507:	00 52 11             	add    BYTE PTR [rdx+0x11],dl
    650a:	00 00                	add    BYTE PTR [rax],al
    650c:	01 c5                	add    ebp,eax
    650e:	21 00                	and    DWORD PTR [rax],eax
    6510:	00 01                	add    BYTE PTR [rcx],al
    6512:	b2 21                	mov    dl,0x21
    6514:	00 00                	add    BYTE PTR [rax],al
    6516:	00 04 bc             	add    BYTE PTR [rsp+rdi*4],al
    6519:	25 00 00 03 c4       	and    eax,0xc4030000
    651e:	09 03                	or     DWORD PTR [rbx],eax
    6520:	16                   	(bad)
    6521:	1c 00                	sbb    al,0x0
    6523:	00 35 00 00 00 72    	add    BYTE PTR [rip+0x72000000],dh        # 72006529 <_end+0x72000511>
    6529:	11 00                	adc    DWORD PTR [rax],eax
    652b:	00 01                	add    BYTE PTR [rcx],al
    652d:	35 00 00 00 01       	xor    eax,0x1000000
    6532:	b2 21                	mov    dl,0x21
    6534:	00 00                	add    BYTE PTR [rax],al
    6536:	00 04 bf             	add    BYTE PTR [rdi+rdi*4],al
    6539:	2e 00 00             	cs add BYTE PTR [rax],al
    653c:	03 da                	add    ebx,edx
    653e:	09 03                	or     DWORD PTR [rbx],eax
    6540:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6541:	10 00                	adc    BYTE PTR [rax],al
    6543:	00 c5                	add    ch,al
    6545:	21 00                	and    DWORD PTR [rax],eax
    6547:	00 92 11 00 00 01    	add    BYTE PTR [rdx+0x1000011],dl
    654d:	c5 21 00             	(bad)
    6550:	00 01                	add    BYTE PTR [rcx],al
    6552:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6553:	21 00                	and    DWORD PTR [rax],eax
    6555:	00 00                	add    BYTE PTR [rax],al
    6557:	04 bf                	add    al,0xbf
    6559:	2e 00 00             	cs add BYTE PTR [rax],al
    655c:	03 d6                	add    edx,esi
    655e:	09 03                	or     DWORD PTR [rbx],eax
    6560:	42 0c 00             	rex.X or al,0x0
    6563:	00 35 00 00 00 b2    	add    BYTE PTR [rip+0xffffffffb2000000],dh        # ffffffffb2006569 <_end+0xffffffffb2000551>
    6569:	11 00                	adc    DWORD PTR [rax],eax
    656b:	00 01                	add    BYTE PTR [rcx],al
    656d:	35 00 00 00 01       	xor    eax,0x1000000
    6572:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6573:	21 00                	and    DWORD PTR [rax],eax
    6575:	00 00                	add    BYTE PTR [rax],al
    6577:	04 dc                	add    al,0xdc
    6579:	1b 00                	sbb    eax,DWORD PTR [rax]
    657b:	00 03                	add    BYTE PTR [rbx],al
    657d:	ec                   	in     al,dx
    657e:	09 03                	or     DWORD PTR [rbx],eax
    6580:	83 1f 00             	sbb    DWORD PTR [rdi],0x0
    6583:	00 c5                	add    ch,al
    6585:	21 00                	and    DWORD PTR [rax],eax
    6587:	00 cd                	add    ch,cl
    6589:	11 00                	adc    DWORD PTR [rax],eax
    658b:	00 01                	add    BYTE PTR [rcx],al
    658d:	c5 21 00             	(bad)
    6590:	00 00                	add    BYTE PTR [rax],al
    6592:	04 dc                	add    al,0xdc
    6594:	1b 00                	sbb    eax,DWORD PTR [rax]
    6596:	00 03                	add    BYTE PTR [rbx],al
    6598:	e8 09 03 90 1f       	call   1f9068a6 <_end+0x1f90088e>
    659d:	00 00                	add    BYTE PTR [rax],al
    659f:	35 00 00 00 e8       	xor    eax,0xe8000000
    65a4:	11 00                	adc    DWORD PTR [rax],eax
    65a6:	00 01                	add    BYTE PTR [rcx],al
    65a8:	35 00 00 00 00       	xor    eax,0x0
    65ad:	04 a1                	add    al,0xa1
    65af:	2a 00                	sub    al,BYTE PTR [rax]
    65b1:	00 03                	add    BYTE PTR [rbx],al
    65b3:	fe 09                	dec    BYTE PTR [rcx]
    65b5:	03 b3 21 00 00 c5    	add    esi,DWORD PTR [rbx-0x3affffdf]
    65bb:	21 00                	and    DWORD PTR [rax],eax
    65bd:	00 03                	add    BYTE PTR [rbx],al
    65bf:	12 00                	adc    al,BYTE PTR [rax]
    65c1:	00 01                	add    BYTE PTR [rcx],al
    65c3:	c5 21 00             	(bad)
    65c6:	00 00                	add    BYTE PTR [rax],al
    65c8:	04 a1                	add    al,0xa1
    65ca:	2a 00                	sub    al,BYTE PTR [rax]
    65cc:	00 03                	add    BYTE PTR [rbx],al
    65ce:	fa                   	cli
    65cf:	09 03                	or     DWORD PTR [rbx],eax
    65d1:	bf 21 00 00 35       	mov    edi,0x35000021
    65d6:	00 00                	add    BYTE PTR [rax],al
    65d8:	00 1e                	add    BYTE PTR [rsi],bl
    65da:	12 00                	adc    al,BYTE PTR [rax]
    65dc:	00 01                	add    BYTE PTR [rcx],al
    65de:	35 00 00 00 00       	xor    eax,0x0
    65e3:	02 08                	add    cl,BYTE PTR [rax]
    65e5:	83 0b 61             	or     DWORD PTR [rbx],0x61
    65e8:	23 00                	and    eax,DWORD PTR [rax]
    65ea:	00 02                	add    BYTE PTR [rdx],al
    65ec:	08 84 0b 94 23 00 00 	or     BYTE PTR [rbx+rcx*1+0x2394],al
    65f3:	02 08                	add    cl,BYTE PTR [rax]
    65f5:	8a 0b                	mov    cl,BYTE PTR [rbx]
    65f7:	c2 2d 00             	ret    0x2d
    65fa:	00 02                	add    BYTE PTR [rdx],al
    65fc:	08 8d 0b df 2d 00    	or     BYTE PTR [rbp+0x2ddf0b],cl
    6602:	00 02                	add    BYTE PTR [rdx],al
    6604:	08 90 0b fa 2d 00    	or     BYTE PTR [rax+0x2dfa0b],dl
    660a:	00 02                	add    BYTE PTR [rdx],al
    660c:	08 91 0b 10 2e 00    	or     BYTE PTR [rcx+0x2e100b],dl
    6612:	00 02                	add    BYTE PTR [rdx],al
    6614:	08 92 0b 27 2e 00    	or     BYTE PTR [rdx+0x2e270b],dl
    661a:	00 02                	add    BYTE PTR [rdx],al
    661c:	08 93 0b 3e 2e 00    	or     BYTE PTR [rbx+0x2e3e0b],dl
    6622:	00 02                	add    BYTE PTR [rdx],al
    6624:	08 95 0b 68 2e 00    	or     BYTE PTR [rbp+0x2e680b],dl
    662a:	00 02                	add    BYTE PTR [rdx],al
    662c:	08 98 0b 84 2e 00    	or     BYTE PTR [rax+0x2e840b],bl
    6632:	00 02                	add    BYTE PTR [rdx],al
    6634:	08 9a 0b 9b 2e 00    	or     BYTE PTR [rdx+0x2e9b0b],bl
    663a:	00 02                	add    BYTE PTR [rdx],al
    663c:	08 9d 0b b7 2e 00    	or     BYTE PTR [rbp+0x2eb70b],bl
    6642:	00 02                	add    BYTE PTR [rdx],al
    6644:	08 9e 0b d3 2e 00    	or     BYTE PTR [rsi+0x2ed30b],bl
    664a:	00 02                	add    BYTE PTR [rdx],al
    664c:	08 9f 0b f8 2e 00    	or     BYTE PTR [rdi+0x2ef80b],bl
    6652:	00 02                	add    BYTE PTR [rdx],al
    6654:	08 a1 0b 19 2f 00    	or     BYTE PTR [rcx+0x2f190b],ah
    665a:	00 02                	add    BYTE PTR [rdx],al
    665c:	08 a4 0b 3a 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2f3a],ah
    6663:	02 08                	add    cl,BYTE PTR [rax]
    6665:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    6666:	0b 4d 2f             	or     ecx,DWORD PTR [rbp+0x2f]
    6669:	00 00                	add    BYTE PTR [rax],al
    666b:	02 08                	add    cl,BYTE PTR [rax]
    666d:	a9 0b 5a 2f 00       	test   eax,0x2f5a0b
    6672:	00 02                	add    BYTE PTR [rdx],al
    6674:	08 aa 0b 6c 2f 00    	or     BYTE PTR [rdx+0x2f6c0b],ch
    667a:	00 02                	add    BYTE PTR [rdx],al
    667c:	08 ab 0b 8c 2f 00    	or     BYTE PTR [rbx+0x2f8c0b],ch
    6682:	00 02                	add    BYTE PTR [rdx],al
    6684:	08 ac 0b b0 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2fb0],ch
    668b:	02 08                	add    cl,BYTE PTR [rax]
    668d:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    668e:	0b d4                	or     edx,esp
    6690:	2f                   	(bad)
    6691:	00 00                	add    BYTE PTR [rax],al
    6693:	02 08                	add    cl,BYTE PTR [rax]
    6695:	af                   	scas   eax,DWORD PTR es:[rdi]
    6696:	0b eb                	or     ebp,ebx
    6698:	2f                   	(bad)
    6699:	00 00                	add    BYTE PTR [rax],al
    669b:	02 08                	add    cl,BYTE PTR [rax]
    669d:	b0 0b                	mov    al,0xb
    669f:	10 30                	adc    BYTE PTR [rax],dh
    66a1:	00 00                	add    BYTE PTR [rax],al
    66a3:	02 08                	add    cl,BYTE PTR [rax]
    66a5:	f4                   	hlt
    66a6:	16                   	(bad)
    66a7:	c7                   	(bad)
    66a8:	23 00                	and    eax,DWORD PTR [rax]
    66aa:	00 02                	add    BYTE PTR [rdx],al
    66ac:	08 f9                	or     cl,bh
    66ae:	16                   	(bad)
    66af:	43 21 00             	rex.XB and DWORD PTR [r8],eax
    66b2:	00 02                	add    BYTE PTR [rdx],al
    66b4:	08 fa                	or     dl,bh
    66b6:	16                   	(bad)
    66b7:	2b 30                	sub    esi,DWORD PTR [rax]
    66b9:	00 00                	add    BYTE PTR [rax],al
    66bb:	02 08                	add    cl,BYTE PTR [rax]
    66bd:	fc                   	cld
    66be:	16                   	(bad)
    66bf:	47 30 00             	rex.RXB xor BYTE PTR [r8],r8b
    66c2:	00 02                	add    BYTE PTR [rdx],al
    66c4:	08 fd                	or     ch,bh
    66c6:	16                   	(bad)
    66c7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    66c8:	30 00                	xor    BYTE PTR [rax],al
    66ca:	00 02                	add    BYTE PTR [rdx],al
    66cc:	08 fe                	or     dh,bh
    66ce:	16                   	(bad)
    66cf:	5e                   	pop    rsi
    66d0:	30 00                	xor    BYTE PTR [rax],al
    66d2:	00 02                	add    BYTE PTR [rdx],al
    66d4:	08 ff                	or     bh,bh
    66d6:	16                   	(bad)
    66d7:	82                   	(bad)
    66d8:	30 00                	xor    BYTE PTR [rax],al
    66da:	00 18                	add    BYTE PTR [rax],bl
    66dc:	08 00                	or     BYTE PTR [rax],al
    66de:	01 16                	add    DWORD PTR [rsi],edx
    66e0:	c1 30 00             	shl    DWORD PTR [rax],0x0
    66e3:	00 1a                	add    BYTE PTR [rdx],bl
    66e5:	64 69 76 00 08 b5 1e 	imul   esi,DWORD PTR fs:[rsi+0x0],0x11eb508
    66ec:	01 
    66ed:	00 00                	add    BYTE PTR [rax],al
    66ef:	94                   	xchg   esp,eax
    66f0:	23 00                	and    eax,DWORD PTR [rax]
    66f2:	00 3d 13 00 00 01    	add    BYTE PTR [rip+0x1000013],bh        # 100670b <_end+0x10006f3>
    66f8:	b2 21                	mov    dl,0x21
    66fa:	00 00                	add    BYTE PTR [rax],al
    66fc:	01 b2 21 00 00 00    	add    DWORD PTR [rdx+0x21],esi
    6702:	02 09                	add    cl,BYTE PTR [rcx]
    6704:	40 0b 54 32 00       	rex or edx,DWORD PTR [rdx+rsi*1+0x0]
    6709:	00 02                	add    BYTE PTR [rdx],al
    670b:	09 8d 0b 48 32 00    	or     DWORD PTR [rbp+0x32480b],ecx
    6711:	00 02                	add    BYTE PTR [rdx],al
    6713:	09 8f 0b 65 32 00    	or     DWORD PTR [rdi+0x32650b],ecx
    6719:	00 02                	add    BYTE PTR [rdx],al
    671b:	09 90 0b 7c 32 00    	or     DWORD PTR [rax+0x327c0b],edx
    6721:	00 02                	add    BYTE PTR [rdx],al
    6723:	09 91 0b 98 32 00    	or     DWORD PTR [rcx+0x32980b],edx
    6729:	00 02                	add    BYTE PTR [rdx],al
    672b:	09 92 0b b8 32 00    	or     DWORD PTR [rdx+0x32b80b],edx
    6731:	00 02                	add    BYTE PTR [rdx],al
    6733:	09 93 0b d4 32 00    	or     DWORD PTR [rbx+0x32d40b],edx
    6739:	00 02                	add    BYTE PTR [rdx],al
    673b:	09 94 0b f0 32 00 00 	or     DWORD PTR [rbx+rcx*1+0x32f0],edx
    6742:	02 09                	add    cl,BYTE PTR [rcx]
    6744:	95                   	xchg   ebp,eax
    6745:	0b 0c 33             	or     ecx,DWORD PTR [rbx+rsi*1]
    6748:	00 00                	add    BYTE PTR [rax],al
    674a:	02 09                	add    cl,BYTE PTR [rcx]
    674c:	96                   	xchg   esi,eax
    674d:	0b 28                	or     ebp,DWORD PTR [rax]
    674f:	33 00                	xor    eax,DWORD PTR [rax]
    6751:	00 02                	add    BYTE PTR [rdx],al
    6753:	09 97 0b 49 33 00    	or     DWORD PTR [rdi+0x33490b],edx
    6759:	00 02                	add    BYTE PTR [rdx],al
    675b:	09 98 0b 60 33 00    	or     DWORD PTR [rax+0x33600b],ebx
    6761:	00 02                	add    BYTE PTR [rdx],al
    6763:	09 99 0b 6d 33 00    	or     DWORD PTR [rcx+0x336d0b],ebx
    6769:	00 02                	add    BYTE PTR [rdx],al
    676b:	09 9a 0b 93 33 00    	or     DWORD PTR [rdx+0x33930b],ebx
    6771:	00 02                	add    BYTE PTR [rdx],al
    6773:	09 9b 0b b9 33 00    	or     DWORD PTR [rbx+0x33b90b],ebx
    6779:	00 02                	add    BYTE PTR [rdx],al
    677b:	09 9c 0b d5 33 00 00 	or     DWORD PTR [rbx+rcx*1+0x33d5],ebx
    6782:	02 09                	add    cl,BYTE PTR [rcx]
    6784:	9d                   	popf
    6785:	0b ff                	or     edi,edi
    6787:	33 00                	xor    eax,DWORD PTR [rax]
    6789:	00 02                	add    BYTE PTR [rdx],al
    678b:	09 9e 0b 1b 34 00    	or     DWORD PTR [rsi+0x341b0b],ebx
    6791:	00 02                	add    BYTE PTR [rdx],al
    6793:	09 a0 0b 32 34 00    	or     DWORD PTR [rax+0x34320b],esp
    6799:	00 02                	add    BYTE PTR [rdx],al
    679b:	09 a2 0b 53 34 00    	or     DWORD PTR [rdx+0x34530b],esp
    67a1:	00 02                	add    BYTE PTR [rdx],al
    67a3:	09 a3 0b 74 34 00    	or     DWORD PTR [rbx+0x34740b],esp
    67a9:	00 02                	add    BYTE PTR [rdx],al
    67ab:	09 a4 0b 90 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x3490],esp
    67b2:	02 09                	add    cl,BYTE PTR [rcx]
    67b4:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    67b5:	0b b5 34 00 00 02    	or     esi,DWORD PTR [rbp+0x2000034]
    67bb:	09 a9 0b da 34 00    	or     DWORD PTR [rcx+0x34da0b],ebp
    67c1:	00 02                	add    BYTE PTR [rdx],al
    67c3:	09 ac 0b ff 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x34ff],ebp
    67ca:	02 09                	add    cl,BYTE PTR [rcx]
    67cc:	ae                   	scas   al,BYTE PTR es:[rdi]
    67cd:	0b 24 35 00 00 02 09 	or     esp,DWORD PTR [rsi*1+0x9020000]
    67d4:	b0 0b                	mov    al,0xb
    67d6:	3f                   	(bad)
    67d7:	35 00 00 02 09       	xor    eax,0x9020000
    67dc:	b2 0b                	mov    dl,0xb
    67de:	5f                   	pop    rdi
    67df:	35 00 00 02 09       	xor    eax,0x9020000
    67e4:	b3 0b                	mov    bl,0xb
    67e6:	7f 35                	jg     681d <_end+0x805>
    67e8:	00 00                	add    BYTE PTR [rax],al
    67ea:	02 09                	add    cl,BYTE PTR [rcx]
    67ec:	b4 0b                	mov    ah,0xb
    67ee:	9a                   	(bad)
    67ef:	35 00 00 02 09       	xor    eax,0x9020000
    67f4:	b5 0b                	mov    ch,0xb
    67f6:	b5 35                	mov    ch,0x35
    67f8:	00 00                	add    BYTE PTR [rax],al
    67fa:	02 09                	add    cl,BYTE PTR [rcx]
    67fc:	b6 0b                	mov    dh,0xb
    67fe:	d0 35 00 00 02 09    	shl    BYTE PTR [rip+0x9020000],1        # 9026804 <_end+0x90207ec>
    6804:	b7 0b                	mov    bh,0xb
    6806:	eb 35                	jmp    683d <_end+0x825>
    6808:	00 00                	add    BYTE PTR [rax],al
    680a:	02 09                	add    cl,BYTE PTR [rcx]
    680c:	b8 0b 06 36 00       	mov    eax,0x36060b
    6811:	00 02                	add    BYTE PTR [rdx],al
    6813:	09 b9 0b d3 36 00    	or     DWORD PTR [rcx+0x36d30b],edi
    6819:	00 02                	add    BYTE PTR [rdx],al
    681b:	09 ba 0b e9 36 00    	or     DWORD PTR [rdx+0x36e90b],edi
    6821:	00 02                	add    BYTE PTR [rdx],al
    6823:	09 bb 0b 09 37 00    	or     DWORD PTR [rbx+0x37090b],edi
    6829:	00 02                	add    BYTE PTR [rdx],al
    682b:	09 bc 0b 29 37 00 00 	or     DWORD PTR [rbx+rcx*1+0x3729],edi
    6832:	02 09                	add    cl,BYTE PTR [rcx]
    6834:	bd 0b 49 37 00       	mov    ebp,0x37490b
    6839:	00 02                	add    BYTE PTR [rdx],al
    683b:	09 be 0b 74 37 00    	or     DWORD PTR [rsi+0x37740b],edi
    6841:	00 02                	add    BYTE PTR [rdx],al
    6843:	09 bf 0b 8f 37 00    	or     DWORD PTR [rdi+0x378f0b],edi
    6849:	00 02                	add    BYTE PTR [rdx],al
    684b:	09 c1                	or     ecx,eax
    684d:	0b b0 37 00 00 02    	or     esi,DWORD PTR [rax+0x2000037]
    6853:	09 c3                	or     ebx,eax
    6855:	0b cc                	or     ecx,esp
    6857:	37                   	(bad)
    6858:	00 00                	add    BYTE PTR [rax],al
    685a:	02 09                	add    cl,BYTE PTR [rcx]
    685c:	c4                   	(bad)
    685d:	0b ec                	or     ebp,esp
    685f:	37                   	(bad)
    6860:	00 00                	add    BYTE PTR [rax],al
    6862:	02 09                	add    cl,BYTE PTR [rcx]
    6864:	c5 0b 11             	(bad)
    6867:	38 00                	cmp    BYTE PTR [rax],al
    6869:	00 02                	add    BYTE PTR [rdx],al
    686b:	09 c6                	or     esi,eax
    686d:	0b 36                	or     esi,DWORD PTR [rsi]
    686f:	38 00                	cmp    BYTE PTR [rax],al
    6871:	00 02                	add    BYTE PTR [rdx],al
    6873:	09 c7                	or     edi,eax
    6875:	0b 56 38             	or     edx,DWORD PTR [rsi+0x38]
    6878:	00 00                	add    BYTE PTR [rax],al
    687a:	02 09                	add    cl,BYTE PTR [rcx]
    687c:	c8 0b 6d 38          	enter  0x6d0b,0x38
    6880:	00 00                	add    BYTE PTR [rax],al
    6882:	02 09                	add    cl,BYTE PTR [rcx]
    6884:	c9                   	leave
    6885:	0b 8e 38 00 00 02    	or     ecx,DWORD PTR [rsi+0x2000038]
    688b:	09 ca                	or     edx,ecx
    688d:	0b ae 38 00 00 02    	or     ebp,DWORD PTR [rsi+0x2000038]
    6893:	09 cb                	or     ebx,ecx
    6895:	0b ce                	or     ecx,esi
    6897:	38 00                	cmp    BYTE PTR [rax],al
    6899:	00 02                	add    BYTE PTR [rdx],al
    689b:	09 cc                	or     esp,ecx
    689d:	0b ee                	or     ebp,esi
    689f:	38 00                	cmp    BYTE PTR [rax],al
    68a1:	00 02                	add    BYTE PTR [rdx],al
    68a3:	09 cd                	or     ebp,ecx
    68a5:	0b 05 39 00 00 02    	or     eax,DWORD PTR [rip+0x2000039]        # 20068e4 <_end+0x20008cc>
    68ab:	09 ce                	or     esi,ecx
    68ad:	0b 21                	or     esp,DWORD PTR [rcx]
    68af:	39 00                	cmp    DWORD PTR [rax],eax
    68b1:	00 02                	add    BYTE PTR [rdx],al
    68b3:	09 ce                	or     esi,ecx
    68b5:	0b 40 39             	or     eax,DWORD PTR [rax+0x39]
    68b8:	00 00                	add    BYTE PTR [rax],al
    68ba:	02 09                	add    cl,BYTE PTR [rcx]
    68bc:	cf                   	iret
    68bd:	0b 5f 39             	or     ebx,DWORD PTR [rdi+0x39]
    68c0:	00 00                	add    BYTE PTR [rax],al
    68c2:	02 09                	add    cl,BYTE PTR [rcx]
    68c4:	cf                   	iret
    68c5:	0b 7e 39             	or     edi,DWORD PTR [rsi+0x39]
    68c8:	00 00                	add    BYTE PTR [rax],al
    68ca:	02 09                	add    cl,BYTE PTR [rcx]
    68cc:	d0 0b                	ror    BYTE PTR [rbx],1
    68ce:	9d                   	popf
    68cf:	39 00                	cmp    DWORD PTR [rax],eax
    68d1:	00 02                	add    BYTE PTR [rdx],al
    68d3:	09 d0                	or     eax,edx
    68d5:	0b bc 39 00 00 02 09 	or     edi,DWORD PTR [rcx+rdi*1+0x9020000]
    68dc:	d1 0b                	ror    DWORD PTR [rbx],1
    68de:	db 39                	fstp   TBYTE PTR [rcx]
    68e0:	00 00                	add    BYTE PTR [rax],al
    68e2:	02 09                	add    cl,BYTE PTR [rcx]
    68e4:	d1 0b                	ror    DWORD PTR [rbx],1
    68e6:	fa                   	cli
    68e7:	39 00                	cmp    DWORD PTR [rax],eax
    68e9:	00 02                	add    BYTE PTR [rdx],al
    68eb:	09 d2                	or     edx,edx
    68ed:	0b 19                	or     ebx,DWORD PTR [rcx]
    68ef:	3a 00                	cmp    al,BYTE PTR [rax]
    68f1:	00 02                	add    BYTE PTR [rdx],al
    68f3:	09 d2                	or     edx,edx
    68f5:	0b 3e                	or     edi,DWORD PTR [rsi]
    68f7:	3a 00                	cmp    al,BYTE PTR [rax]
    68f9:	00 18                	add    BYTE PTR [rax],bl
    68fb:	09 0b                	or     DWORD PTR [rbx],ecx
    68fd:	01 16                	add    DWORD PTR [rsi],edx
    68ff:	63 3a                	movsxd edi,DWORD PTR [rdx]
    6901:	00 00                	add    BYTE PTR [rax],al
    6903:	18 09                	sbb    BYTE PTR [rcx],cl
    6905:	0c 01                	or     al,0x1
    6907:	16                   	(bad)
    6908:	7f 3a                	jg     6944 <_end+0x92c>
    690a:	00 00                	add    BYTE PTR [rax],al
    690c:	18 09                	sbb    BYTE PTR [rcx],cl
    690e:	0d 01 16 a4 3a       	or     eax,0x3aa41601
    6913:	00 00                	add    BYTE PTR [rax],al
    6915:	18 09                	sbb    BYTE PTR [rcx],cl
    6917:	1b 01                	sbb    eax,DWORD PTR [rcx]
    6919:	0e                   	(bad)
    691a:	b0 37                	mov    al,0x37
    691c:	00 00                	add    BYTE PTR [rax],al
    691e:	18 09                	sbb    BYTE PTR [rcx],cl
    6920:	1e                   	(bad)
    6921:	01 0e                	add    DWORD PTR [rsi],ecx
    6923:	b5 34                	mov    ch,0x34
    6925:	00 00                	add    BYTE PTR [rax],al
    6927:	18 09                	sbb    BYTE PTR [rcx],cl
    6929:	21 01                	and    DWORD PTR [rcx],eax
    692b:	0e                   	(bad)
    692c:	ff 34 00             	push   QWORD PTR [rax+rax*1]
    692f:	00 18                	add    BYTE PTR [rax],bl
    6931:	09 24 01             	or     DWORD PTR [rcx+rax*1],esp
    6934:	0e                   	(bad)
    6935:	3f                   	(bad)
    6936:	35 00 00 18 09       	xor    eax,0x9180000
    693b:	28 01                	sub    BYTE PTR [rcx],al
    693d:	0e                   	(bad)
    693e:	63 3a                	movsxd edi,DWORD PTR [rdx]
    6940:	00 00                	add    BYTE PTR [rax],al
    6942:	18 09                	sbb    BYTE PTR [rcx],cl
    6944:	29 01                	sub    DWORD PTR [rcx],eax
    6946:	0e                   	(bad)
    6947:	7f 3a                	jg     6983 <_end+0x96b>
    6949:	00 00                	add    BYTE PTR [rax],al
    694b:	18 09                	sbb    BYTE PTR [rcx],cl
    694d:	2a 01                	sub    al,BYTE PTR [rcx]
    694f:	0e                   	(bad)
    6950:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    6951:	3a 00                	cmp    al,BYTE PTR [rax]
    6953:	00 02                	add    BYTE PTR [rdx],al
    6955:	0a 35 0b c9 3a 00    	or     dh,BYTE PTR [rip+0x3ac90b]        # 3b3266 <_end+0x3ad24e>
    695b:	00 02                	add    BYTE PTR [rdx],al
    695d:	0a 36                	or     dh,BYTE PTR [rsi]
    695f:	0b 0f                	or     ecx,DWORD PTR [rdi]
    6961:	3c 00                	cmp    al,0x0
    6963:	00 02                	add    BYTE PTR [rdx],al
    6965:	0a 37                	or     dh,BYTE PTR [rdi]
    6967:	0b 2a                	or     ebp,DWORD PTR [rdx]
    6969:	3c 00                	cmp    al,0x0
    696b:	00 02                	add    BYTE PTR [rdx],al
    696d:	0b 62 0b             	or     esp,DWORD PTR [rdx+0xb]
    6970:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    6973:	00 02                	add    BYTE PTR [rdx],al
    6975:	0b 63 0b             	or     esp,DWORD PTR [rbx+0xb]
    6978:	7d 2c                	jge    69a6 <_end+0x98e>
    697a:	00 00                	add    BYTE PTR [rax],al
    697c:	02 0b                	add    cl,BYTE PTR [rbx]
    697e:	65 0b 3b             	or     edi,DWORD PTR gs:[rbx]
    6981:	3c 00                	cmp    al,0x0
    6983:	00 02                	add    BYTE PTR [rdx],al
    6985:	0b 66 0b             	or     esp,DWORD PTR [rsi+0xb]
    6988:	4d 3c 00             	rex.WRB cmp al,0x0
    698b:	00 02                	add    BYTE PTR [rdx],al
    698d:	0b 67 0b             	or     esp,DWORD PTR [rdi+0xb]
    6990:	63 3c 00             	movsxd edi,DWORD PTR [rax+rax*1]
    6993:	00 02                	add    BYTE PTR [rdx],al
    6995:	0b 68 0b             	or     ebp,DWORD PTR [rax+0xb]
    6998:	7a 3c                	jp     69d6 <_end+0x9be>
    699a:	00 00                	add    BYTE PTR [rax],al
    699c:	02 0b                	add    cl,BYTE PTR [rbx]
    699e:	69 0b 91 3c 00 00    	imul   ecx,DWORD PTR [rbx],0x3c91
    69a4:	02 0b                	add    cl,BYTE PTR [rbx]
    69a6:	6a 0b                	push   0xb
    69a8:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    69a9:	3c 00                	cmp    al,0x0
    69ab:	00 02                	add    BYTE PTR [rdx],al
    69ad:	0b 6b 0b             	or     ebp,DWORD PTR [rbx+0xb]
    69b0:	be 3c 00 00 02       	mov    esi,0x200003c
    69b5:	0b 6c 0b df          	or     ebp,DWORD PTR [rbx+rcx*1-0x21]
    69b9:	3c 00                	cmp    al,0x0
    69bb:	00 02                	add    BYTE PTR [rdx],al
    69bd:	0b 6d 0b             	or     ebp,DWORD PTR [rbp+0xb]
    69c0:	ff                   	(bad)
    69c1:	3c 00                	cmp    al,0x0
    69c3:	00 02                	add    BYTE PTR [rdx],al
    69c5:	0b 71 0b             	or     esi,DWORD PTR [rcx+0xb]
    69c8:	1b 3d 00 00 02 0b    	sbb    edi,DWORD PTR [rip+0xb020000]        # b0269ce <_end+0xb0209b6>
    69ce:	72 0b                	jb     69db <_end+0x9c3>
    69d0:	40 3d 00 00 02 0b    	rex cmp eax,0xb020000
    69d6:	74 0b                	je     69e3 <_end+0x9cb>
    69d8:	61                   	(bad)
    69d9:	3d 00 00 02 0b       	cmp    eax,0xb020000
    69de:	75 0b                	jne    69eb <_end+0x9d3>
    69e0:	82                   	(bad)
    69e1:	3d 00 00 02 0b       	cmp    eax,0xb020000
    69e6:	76 0b                	jbe    69f3 <_end+0x9db>
    69e8:	a3 3d 00 00 02 0b 78 	movabs ds:0xba0b780b0200003d,eax
    69ef:	0b ba 
    69f1:	3d 00 00 02 0b       	cmp    eax,0xb020000
    69f6:	79 0b                	jns    6a03 <_end+0x9eb>
    69f8:	d1 3d 00 00 02 0b    	sar    DWORD PTR [rip+0xb020000],1        # b0269fe <_end+0xb0209e6>
    69fe:	7e 0b                	jle    6a0b <_end+0x9f3>
    6a00:	dd 3d 00 00 02 0b    	fnstsw WORD PTR [rip+0xb020000]        # b026a06 <_end+0xb0209ee>
    6a06:	83 0b ef             	or     DWORD PTR [rbx],0xffffffef
    6a09:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6a0e:	84 0b                	test   BYTE PTR [rbx],cl
    6a10:	05 3e 00 00 02       	add    eax,0x200003e
    6a15:	0b 85 0b 20 3e 00    	or     eax,DWORD PTR [rbp+0x3e200b]
    6a1b:	00 02                	add    BYTE PTR [rdx],al
    6a1d:	0b 87 0b 32 3e 00    	or     eax,DWORD PTR [rdi+0x3e320b]
    6a23:	00 02                	add    BYTE PTR [rdx],al
    6a25:	0b 88 0b 49 3e 00    	or     ecx,DWORD PTR [rax+0x3e490b]
    6a2b:	00 02                	add    BYTE PTR [rdx],al
    6a2d:	0b 8b 0b 6f 3e 00    	or     ecx,DWORD PTR [rbx+0x3e6f0b]
    6a33:	00 02                	add    BYTE PTR [rdx],al
    6a35:	0b 8d 0b 7b 3e 00    	or     ecx,DWORD PTR [rbp+0x3e7b0b]
    6a3b:	00 02                	add    BYTE PTR [rdx],al
    6a3d:	0b 8f 0b 91 3e 00    	or     ecx,DWORD PTR [rdi+0x3e910b]
    6a43:	00 50 41             	add    BYTE PTR [rax+0x41],dl
    6a46:	2a 00                	sub    al,BYTE PTR [rax]
    6a48:	00 11                	add    BYTE PTR [rcx],dl
    6a4a:	55                   	push   rbp
    6a4b:	01 41 02             	add    DWORD PTR [rcx+0x2],eax
    6a4e:	0c 3a                	or     al,0x3a
    6a50:	0b 11                	or     edx,DWORD PTR [rcx]
    6a52:	32 00                	xor    al,BYTE PTR [rax]
    6a54:	00 68 70             	add    BYTE PTR [rax+0x70],ch
    6a57:	6d                   	ins    DWORD PTR es:[rdi],dx
    6a58:	72 00                	jb     6a5a <_end+0xa42>
    6a5a:	3d 35 0b 02 0d       	cmp    eax,0xd020b35
    6a5f:	33 0b                	xor    ecx,DWORD PTR [rbx]
    6a61:	fa                   	cli
    6a62:	23 00                	and    eax,DWORD PTR [rax]
    6a64:	00 02                	add    BYTE PTR [rdx],al
    6a66:	0d 34 0b 06 24       	or     eax,0x24060b34
    6a6b:	00 00                	add    BYTE PTR [rax],al
    6a6d:	02 0d 35 0b 12 24    	add    cl,BYTE PTR [rip+0x24120b35]        # 241275a8 <_end+0x24121590>
    6a73:	00 00                	add    BYTE PTR [rax],al
    6a75:	02 0d 36 0b 1e 24    	add    cl,BYTE PTR [rip+0x241e0b36]        # 241e75b1 <_end+0x241e1599>
    6a7b:	00 00                	add    BYTE PTR [rax],al
    6a7d:	02 0d 38 0b 2d 2d    	add    cl,BYTE PTR [rip+0x2d2d0b38]        # 2d2d75bb <_end+0x2d2d15a3>
    6a83:	00 00                	add    BYTE PTR [rax],al
    6a85:	02 0d 39 0b 39 2d    	add    cl,BYTE PTR [rip+0x2d390b39]        # 2d3975c4 <_end+0x2d3915ac>
    6a8b:	00 00                	add    BYTE PTR [rax],al
    6a8d:	02 0d 3a 0b 45 2d    	add    cl,BYTE PTR [rip+0x2d450b3a]        # 2d4575cd <_end+0x2d4515b5>
    6a93:	00 00                	add    BYTE PTR [rax],al
    6a95:	02 0d 3b 0b 51 2d    	add    cl,BYTE PTR [rip+0x2d510b3b]        # 2d5175d6 <_end+0x2d5115be>
    6a9b:	00 00                	add    BYTE PTR [rax],al
    6a9d:	02 0d 3d 0b cd 2c    	add    cl,BYTE PTR [rip+0x2ccd0b3d]        # 2ccd75e0 <_end+0x2ccd15c8>
    6aa3:	00 00                	add    BYTE PTR [rax],al
    6aa5:	02 0d 3e 0b d9 2c    	add    cl,BYTE PTR [rip+0x2cd90b3e]        # 2cd975e9 <_end+0x2cd915d1>
    6aab:	00 00                	add    BYTE PTR [rax],al
    6aad:	02 0d 3f 0b e5 2c    	add    cl,BYTE PTR [rip+0x2ce50b3f]        # 2ce575f2 <_end+0x2ce515da>
    6ab3:	00 00                	add    BYTE PTR [rax],al
    6ab5:	02 0d 40 0b f1 2c    	add    cl,BYTE PTR [rip+0x2cf10b40]        # 2cf175fb <_end+0x2cf115e3>
    6abb:	00 00                	add    BYTE PTR [rax],al
    6abd:	02 0d 42 0b a5 2d    	add    cl,BYTE PTR [rip+0x2da50b42]        # 2da57605 <_end+0x2da515ed>
    6ac3:	00 00                	add    BYTE PTR [rax],al
    6ac5:	02 0d 43 0b 8d 2d    	add    cl,BYTE PTR [rip+0x2d8d0b43]        # 2d8d760e <_end+0x2d8d15f6>
    6acb:	00 00                	add    BYTE PTR [rax],al
    6acd:	02 0d 45 0b 98 2c    	add    cl,BYTE PTR [rip+0x2c980b45]        # 2c987618 <_end+0x2c981600>
    6ad3:	00 00                	add    BYTE PTR [rax],al
    6ad5:	02 0d 46 0b a4 2c    	add    cl,BYTE PTR [rip+0x2ca40b46]        # 2ca47621 <_end+0x2ca41609>
    6adb:	00 00                	add    BYTE PTR [rax],al
    6add:	02 0d 47 0b b0 2c    	add    cl,BYTE PTR [rip+0x2cb00b47]        # 2cb0762a <_end+0x2cb01612>
    6ae3:	00 00                	add    BYTE PTR [rax],al
    6ae5:	02 0d 48 0b c1 2c    	add    cl,BYTE PTR [rip+0x2cc10b48]        # 2cc17633 <_end+0x2cc1161b>
    6aeb:	00 00                	add    BYTE PTR [rax],al
    6aed:	02 0d 4a 0b 5d 2d    	add    cl,BYTE PTR [rip+0x2d5d0b4a]        # 2d5d763d <_end+0x2d5d1625>
    6af3:	00 00                	add    BYTE PTR [rax],al
    6af5:	02 0d 4b 0b 69 2d    	add    cl,BYTE PTR [rip+0x2d690b4b]        # 2d697646 <_end+0x2d69162e>
    6afb:	00 00                	add    BYTE PTR [rax],al
    6afd:	02 0d 4c 0b 75 2d    	add    cl,BYTE PTR [rip+0x2d750b4c]        # 2d75764f <_end+0x2d751637>
    6b03:	00 00                	add    BYTE PTR [rax],al
    6b05:	02 0d 4d 0b 81 2d    	add    cl,BYTE PTR [rip+0x2d810b4d]        # 2d817658 <_end+0x2d811640>
    6b0b:	00 00                	add    BYTE PTR [rax],al
    6b0d:	02 0d 4f 0b fd 2c    	add    cl,BYTE PTR [rip+0x2cfd0b4f]        # 2cfd7662 <_end+0x2cfd164a>
    6b13:	00 00                	add    BYTE PTR [rax],al
    6b15:	02 0d 50 0b 09 2d    	add    cl,BYTE PTR [rip+0x2d090b50]        # 2d09766b <_end+0x2d091653>
    6b1b:	00 00                	add    BYTE PTR [rax],al
    6b1d:	02 0d 51 0b 15 2d    	add    cl,BYTE PTR [rip+0x2d150b51]        # 2d157674 <_end+0x2d15165c>
    6b23:	00 00                	add    BYTE PTR [rax],al
    6b25:	02 0d 52 0b 21 2d    	add    cl,BYTE PTR [rip+0x2d210b52]        # 2d21767d <_end+0x2d211665>
    6b2b:	00 00                	add    BYTE PTR [rax],al
    6b2d:	02 0d 54 0b b6 2d    	add    cl,BYTE PTR [rip+0x2db60b54]        # 2db67687 <_end+0x2db6166f>
    6b33:	00 00                	add    BYTE PTR [rax],al
    6b35:	02 0d 55 0b 99 2d    	add    cl,BYTE PTR [rip+0x2d990b55]        # 2d997690 <_end+0x2d991678>
    6b3b:	00 00                	add    BYTE PTR [rax],al
    6b3d:	33 da                	xor    ebx,edx
    6b3f:	32 00                	xor    al,BYTE PTR [rax]
    6b41:	00 05 91 0d a0 17    	add    BYTE PTR [rip+0x17a00d91],al        # 17a078d8 <_end+0x17a018c0>
    6b47:	00 00                	add    BYTE PTR [rax],al
    6b49:	3d 91 19 00 00       	cmp    eax,0x1991
    6b4e:	f1                   	int1
    6b4f:	20 00                	and    BYTE PTR [rax],al
    6b51:	00 3d 91 19 00 00    	add    BYTE PTR [rip+0x1991],bh        # 84e8 <_end+0x24d0>
    6b57:	f1                   	int1
    6b58:	20 00                	and    BYTE PTR [rax],al
    6b5a:	00 3d 91 19 00 00    	add    BYTE PTR [rip+0x1991],bh        # 84f1 <_end+0x24d9>
    6b60:	f1                   	int1
    6b61:	20 00                	and    BYTE PTR [rax],al
    6b63:	00 00                	add    BYTE PTR [rax],al
    6b65:	02 0f                	add    cl,BYTE PTR [rdi]
    6b67:	3c 0b                	cmp    al,0xb
    6b69:	dd 23                	frstor [rbx]
    6b6b:	00 00                	add    BYTE PTR [rax],al
    6b6d:	02 0f                	add    cl,BYTE PTR [rdi]
    6b6f:	3d 0b e9 23 00       	cmp    eax,0x23e90b
    6b74:	00 02                	add    BYTE PTR [rdx],al
    6b76:	0f 3e                	(bad)
    6b78:	0b 31                	or     esi,DWORD PTR [rcx]
    6b7a:	36 00 00             	ss add BYTE PTR [rax],al
    6b7d:	02 0f                	add    cl,BYTE PTR [rdi]
    6b7f:	40 0b d1             	rex or edx,ecx
    6b82:	3e 00 00             	ds add BYTE PTR [rax],al
    6b85:	02 0f                	add    cl,BYTE PTR [rdi]
    6b87:	41 0b dd             	or     ebx,r13d
    6b8a:	3e 00 00             	ds add BYTE PTR [rax],al
    6b8d:	02 0f                	add    cl,BYTE PTR [rdi]
    6b8f:	42 0b f8             	rex.X or edi,eax
    6b92:	3e 00 00             	ds add BYTE PTR [rax],al
    6b95:	02 0f                	add    cl,BYTE PTR [rdi]
    6b97:	43 0b 13             	rex.XB or edx,DWORD PTR [r11]
    6b9a:	3f                   	(bad)
    6b9b:	00 00                	add    BYTE PTR [rax],al
    6b9d:	02 0f                	add    cl,BYTE PTR [rdi]
    6b9f:	44 0b 2e             	or     r13d,DWORD PTR [rsi]
    6ba2:	3f                   	(bad)
    6ba3:	00 00                	add    BYTE PTR [rax],al
    6ba5:	02 0f                	add    cl,BYTE PTR [rdi]
    6ba7:	45 0b 44 3f 00       	or     r8d,DWORD PTR [r15+rdi*1+0x0]
    6bac:	00 02                	add    BYTE PTR [rdx],al
    6bae:	0f 46 0b             	cmovbe ecx,DWORD PTR [rbx]
    6bb1:	5f                   	pop    rdi
    6bb2:	3f                   	(bad)
    6bb3:	00 00                	add    BYTE PTR [rax],al
    6bb5:	02 0f                	add    cl,BYTE PTR [rdi]
    6bb7:	47 0b 75 3f          	rex.RXB or r14d,DWORD PTR [r13+0x3f]
    6bbb:	00 00                	add    BYTE PTR [rax],al
    6bbd:	02 0f                	add    cl,BYTE PTR [rdi]
    6bbf:	4f 0b 2a             	rex.WRXB or r13,QWORD PTR [r10]
    6bc2:	24 00                	and    al,0x0
    6bc4:	00 02                	add    BYTE PTR [rdx],al
    6bc6:	0f                   	movmskps ecx,(bad)
    6bc7:	50                   	push   rax
    6bc8:	0b 8b 3f 00 00 33    	or     ecx,DWORD PTR [rbx+0x3300003f]
    6bce:	86 13                	xchg   BYTE PTR [rbx],dl
    6bd0:	00 00                	add    BYTE PTR [rax],al
    6bd2:	04 37                	add    al,0x37
    6bd4:	0d 94 1f 00 00       	or     eax,0x1f94
    6bd9:	3e fe                	ds (bad)
    6bdb:	2e 00 00             	cs add BYTE PTR [rax],al
    6bde:	ff 01                	inc    DWORD PTR [rcx]
    6be0:	94                   	xchg   esp,eax
    6be1:	1a 00                	sbb    al,BYTE PTR [rax]
    6be3:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    6be6:	0e                   	(bad)
    6be7:	00 00                	add    BYTE PTR [rax],al
    6be9:	04 0b                	add    al,0xb
    6beb:	02 02                	add    al,BYTE PTR [rdx]
    6bed:	87 2b                	xchg   DWORD PTR [rbx],ebp
    6bef:	00 00                	add    BYTE PTR [rax],al
    6bf1:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6bf2:	2d 00 00 3f 18       	sub    eax,0x183f0000
    6bf7:	00 00                	add    BYTE PTR [rax],al
    6bf9:	01 a5 2d 00 00 01    	add    DWORD PTR [rbp+0x100002d],esp
    6bff:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6c00:	2d 00 00 00 2b       	sub    eax,0x2b000000
    6c05:	c7                   	(bad)
    6c06:	0d 00 00 34 02       	or     eax,0x2340000
    6c0b:	0c 10                	or     al,0x10
    6c0d:	18 00                	sbb    BYTE PTR [rax],al
    6c0f:	00 53 18             	add    BYTE PTR [rbx+0x18],dl
    6c12:	00 00                	add    BYTE PTR [rax],al
    6c14:	59                   	pop    rcx
    6c15:	18 00                	sbb    BYTE PTR [rax],al
    6c17:	00 10                	add    BYTE PTR [rax],dl
    6c19:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6c1a:	3f                   	(bad)
    6c1b:	00 00                	add    BYTE PTR [rax],al
    6c1d:	00 2b                	add    BYTE PTR [rbx],ch
    6c1f:	c7                   	(bad)
    6c20:	0d 00 00 36 02       	or     eax,0x2360000
    6c25:	02 3d 1b 00 00 6d    	add    bh,BYTE PTR [rip+0x6d00001b]        # 6d006c46 <_end+0x6d000c2e>
    6c2b:	18 00                	sbb    BYTE PTR [rax],al
    6c2d:	00 78 18             	add    BYTE PTR [rax+0x18],bh
    6c30:	00 00                	add    BYTE PTR [rax],al
    6c32:	10 ac 3f 00 00 01 b6 	adc    BYTE PTR [rdi+rdi*1-0x49ff0000],ch
    6c39:	3f                   	(bad)
    6c3a:	00 00                	add    BYTE PTR [rax],al
    6c3c:	00 2b                	add    BYTE PTR [rbx],ch
    6c3e:	db 0d 00 00 48 02    	fisttp DWORD PTR [rip+0x2480000]        # 2486c44 <_end+0x2480c2c>
    6c44:	02 f9                	add    bh,cl
    6c46:	12 00                	adc    al,BYTE PTR [rax]
    6c48:	00 8c 18 00 00 97 18 	add    BYTE PTR [rax+rbx*1+0x18970000],cl
    6c4f:	00 00                	add    BYTE PTR [rax],al
    6c51:	10 ac 3f 00 00 10 a6 	adc    BYTE PTR [rdi+rdi*1-0x59f00000],ch
    6c58:	21 00                	and    DWORD PTR [rax],eax
    6c5a:	00 00                	add    BYTE PTR [rax],al
    6c5c:	51                   	push   rcx
    6c5d:	69 15 00 00 f6 32 00 	imul   edx,DWORD PTR [rip+0x32f60000],0x3fbb0000        # 32f66c67 <_end+0x32f60c4f>
    6c64:	00 bb 3f 
    6c67:	00 00                	add    BYTE PTR [rax],al
    6c69:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6c6a:	18 00                	sbb    BYTE PTR [rax],al
    6c6c:	00 b7 18 00 00 10    	add    BYTE PTR [rdi+0x10000018],dh
    6c72:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6c73:	3f                   	(bad)
    6c74:	00 00                	add    BYTE PTR [rax],al
    6c76:	01 b6 3f 00 00 00    	add    DWORD PTR [rsi+0x3f],esi
    6c7c:	52                   	push   rdx
    6c7d:	72 65                	jb     6ce4 <_end+0xccc>
    6c7f:	70 00                	jo     6c81 <_end+0xc69>
    6c81:	b2 21                	mov    dl,0x21
    6c83:	00 00                	add    BYTE PTR [rax],al
    6c85:	13 b7 18 00 00 14    	adc    esi,DWORD PTR [rdi+0x14000018]
    6c8b:	8c 25 00 00 4d 02    	mov    WORD PTR [rip+0x24d0000],fs        # 24d6c91 <_end+0x24d0c79>
    6c91:	79 1b                	jns    6cae <_end+0xc96>
    6c93:	00 00                	add    BYTE PTR [rax],al
    6c95:	b7 18                	mov    bh,0x18
    6c97:	00 00                	add    BYTE PTR [rax],al
    6c99:	dc 18                	fcomp  QWORD PTR [rax]
    6c9b:	00 00                	add    BYTE PTR [rax],al
    6c9d:	e2 18                	loop   6cb7 <_end+0xc9f>
    6c9f:	00 00                	add    BYTE PTR [rax],al
    6ca1:	10 c0                	adc    al,al
    6ca3:	3f                   	(bad)
    6ca4:	00 00                	add    BYTE PTR [rax],al
    6ca6:	00 14 ce             	add    BYTE PTR [rsi+rcx*8],dl
    6ca9:	14 00                	adc    al,0x0
    6cab:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
    6cae:	10 30                	adc    BYTE PTR [rax],dh
    6cb0:	00 00                	add    BYTE PTR [rax],al
    6cb2:	14 18                	adc    al,0x18
    6cb4:	00 00                	add    BYTE PTR [rax],al
    6cb6:	f9                   	stc
    6cb7:	18 00                	sbb    BYTE PTR [rax],al
    6cb9:	00 ff                	add    bh,bh
    6cbb:	18 00                	sbb    BYTE PTR [rax],al
    6cbd:	00 10                	add    BYTE PTR [rax],dl
    6cbf:	c0 3f 00             	sar    BYTE PTR [rdi],0x0
    6cc2:	00 00                	add    BYTE PTR [rax],al
    6cc4:	14 43                	adc    al,0x43
    6cc6:	19 00                	sbb    DWORD PTR [rax],eax
    6cc8:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    6ccb:	85 1d 00 00 14 18    	test   DWORD PTR [rip+0x18140000],ebx        # 18146cd1 <_end+0x18140cb9>
    6cd1:	00 00                	add    BYTE PTR [rax],al
    6cd3:	16                   	(bad)
    6cd4:	19 00                	sbb    DWORD PTR [rax],eax
    6cd6:	00 1c 19             	add    BYTE PTR [rcx+rbx*1],bl
    6cd9:	00 00                	add    BYTE PTR [rax],al
    6cdb:	10 c0                	adc    al,al
    6cdd:	3f                   	(bad)
    6cde:	00 00                	add    BYTE PTR [rax],al
    6ce0:	00 14 2d 2f 00 00 5b 	add    BYTE PTR [rbp*1+0x5b00002f],dl
    6ce7:	02 34 12             	add    dh,BYTE PTR [rdx+rdx*1]
    6cea:	00 00                	add    BYTE PTR [rax],al
    6cec:	bb 3f 00 00 33       	mov    ebx,0x3300003f
    6cf1:	19 00                	sbb    DWORD PTR [rax],eax
    6cf3:	00 39                	add    BYTE PTR [rcx],bh
    6cf5:	19 00                	sbb    DWORD PTR [rax],eax
    6cf7:	00 10                	add    BYTE PTR [rax],dl
    6cf9:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6cfa:	3f                   	(bad)
    6cfb:	00 00                	add    BYTE PTR [rax],al
    6cfd:	00 14 2d 2f 00 00 62 	add    BYTE PTR [rbp*1+0x6200002f],dl
    6d04:	02 cd                	add    cl,ch
    6d06:	11 00                	adc    DWORD PTR [rax],eax
    6d08:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    6d0b:	00 00                	add    BYTE PTR [rax],al
    6d0d:	50                   	push   rax
    6d0e:	19 00                	sbb    DWORD PTR [rax],eax
    6d10:	00 5b 19             	add    BYTE PTR [rbx+0x19],bl
    6d13:	00 00                	add    BYTE PTR [rax],al
    6d15:	10 ac 3f 00 00 01 a6 	adc    BYTE PTR [rdi+rdi*1-0x59ff0000],ch
    6d1c:	21 00                	and    DWORD PTR [rax],eax
    6d1e:	00 00                	add    BYTE PTR [rax],al
    6d20:	14 65                	adc    al,0x65
    6d22:	31 00                	xor    DWORD PTR [rax],eax
    6d24:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    6d27:	04 0c                	add    al,0xc
    6d29:	00 00                	add    BYTE PTR [rax],al
    6d2b:	bb 3f 00 00 72       	mov    ebx,0x7200003f
    6d30:	19 00                	sbb    DWORD PTR [rax],eax
    6d32:	00 78 19             	add    BYTE PTR [rax+0x19],bh
    6d35:	00 00                	add    BYTE PTR [rax],al
    6d37:	10 ac 3f 00 00 00 14 	adc    BYTE PTR [rdi+rdi*1+0x14000000],ch
    6d3e:	65 31 00             	xor    DWORD PTR gs:[rax],eax
    6d41:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    6d44:	1c 35                	sbb    al,0x35
    6d46:	00 00                	add    BYTE PTR [rax],al
    6d48:	14 18                	adc    al,0x18
    6d4a:	00 00                	add    BYTE PTR [rax],al
    6d4c:	8f                   	(bad)
    6d4d:	19 00                	sbb    DWORD PTR [rax],eax
    6d4f:	00 9a 19 00 00 10    	add    BYTE PTR [rdx+0x10000019],bl
    6d55:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6d56:	3f                   	(bad)
    6d57:	00 00                	add    BYTE PTR [rax],al
    6d59:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    6d5f:	14 89                	adc    al,0x89
    6d61:	2a 00                	sub    al,BYTE PTR [rax]
    6d63:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    6d66:	0c 20                	or     al,0x20
    6d68:	00 00                	add    BYTE PTR [rax],al
    6d6a:	bb 3f 00 00 b1       	mov    ebx,0xb100003f
    6d6f:	19 00                	sbb    DWORD PTR [rax],eax
    6d71:	00 bc 19 00 00 10 ac 	add    BYTE PTR [rcx+rbx*1-0x53f00000],bh
    6d78:	3f                   	(bad)
    6d79:	00 00                	add    BYTE PTR [rax],al
    6d7b:	01 b6 3f 00 00 00    	add    DWORD PTR [rsi+0x3f],esi
    6d81:	14 80                	adc    al,0x80
    6d83:	31 00                	xor    DWORD PTR [rax],eax
    6d85:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    6d88:	d2 0f                	ror    BYTE PTR [rdi],cl
    6d8a:	00 00                	add    BYTE PTR [rax],al
    6d8c:	bb 3f 00 00 d3       	mov    ebx,0xd300003f
    6d91:	19 00                	sbb    DWORD PTR [rax],eax
    6d93:	00 de                	add    dh,bl
    6d95:	19 00                	sbb    DWORD PTR [rax],eax
    6d97:	00 10                	add    BYTE PTR [rax],dl
    6d99:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6d9a:	3f                   	(bad)
    6d9b:	00 00                	add    BYTE PTR [rax],al
    6d9d:	01 b6 3f 00 00 00    	add    DWORD PTR [rsi+0x3f],esi
    6da3:	14 5c                	adc    al,0x5c
    6da5:	2e 00 00             	cs add BYTE PTR [rax],al
    6da8:	7f 02                	jg     6dac <_end+0xd94>
    6daa:	74 0d                	je     6db9 <_end+0xda1>
    6dac:	00 00                	add    BYTE PTR [rax],al
    6dae:	bb 3f 00 00 f5       	mov    ebx,0xf500003f
    6db3:	19 00                	sbb    DWORD PTR [rax],eax
    6db5:	00 00                	add    BYTE PTR [rax],al
    6db7:	1a 00                	sbb    al,BYTE PTR [rax]
    6db9:	00 10                	add    BYTE PTR [rax],dl
    6dbb:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6dbc:	3f                   	(bad)
    6dbd:	00 00                	add    BYTE PTR [rax],al
    6dbf:	01 ca                	add    edx,ecx
    6dc1:	3f                   	(bad)
    6dc2:	00 00                	add    BYTE PTR [rax],al
    6dc4:	00 14 49             	add    BYTE PTR [rcx+rcx*2],dl
    6dc7:	34 00                	xor    al,0x0
    6dc9:	00 86 02 0f 34 00    	add    BYTE PTR [rsi+0x340f02],al
    6dcf:	00 bb 3f 00 00 17    	add    BYTE PTR [rbx+0x1700003f],bh
    6dd5:	1a 00                	sbb    al,BYTE PTR [rax]
    6dd7:	00 22                	add    BYTE PTR [rdx],ah
    6dd9:	1a 00                	sbb    al,BYTE PTR [rax]
    6ddb:	00 10                	add    BYTE PTR [rax],dl
    6ddd:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6dde:	3f                   	(bad)
    6ddf:	00 00                	add    BYTE PTR [rax],al
    6de1:	01 ca                	add    edx,ecx
    6de3:	3f                   	(bad)
    6de4:	00 00                	add    BYTE PTR [rax],al
    6de6:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    6de9:	24 00                	and    al,0x0
    6deb:	00 5e 16             	add    BYTE PTR [rsi+0x16],bl
    6dee:	00 00                	add    BYTE PTR [rax],al
    6df0:	14 18                	adc    al,0x18
    6df2:	00 00                	add    BYTE PTR [rax],al
    6df4:	2c 6d                	sub    al,0x6d
    6df6:	69 6e 00 a5 02 6c 0c 	imul   ebp,DWORD PTR [rsi+0x0],0xc6c02a5
    6dfd:	00 00                	add    BYTE PTR [rax],al
    6dff:	14 18                	adc    al,0x18
    6e01:	00 00                	add    BYTE PTR [rax],al
    6e03:	2c 6d                	sub    al,0x6d
    6e05:	61                   	(bad)
    6e06:	78 00                	js     6e08 <_end+0xdf0>
    6e08:	a9 02 b1 30 00       	test   eax,0x30b102
    6e0d:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    6e10:	00 00                	add    BYTE PTR [rax],al
    6e12:	3f                   	(bad)
    6e13:	5f                   	pop    rdi
    6e14:	5f                   	pop    rdi
    6e15:	72 00                	jb     6e17 <_end+0xdff>
    6e17:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    6e18:	02 06                	add    al,BYTE PTR [rsi]
    6e1a:	b7 18                	mov    bh,0x18
    6e1c:	00 00                	add    BYTE PTR [rax],al
    6e1e:	40 85 2f             	rex test DWORD PTR [rdi],ebp
    6e21:	00 00                	add    BYTE PTR [rax],al
    6e23:	3d 02 17 f9 2b       	cmp    eax,0x2bf91702
    6e28:	00 00                	add    BYTE PTR [rax],al
    6e2a:	76 1a                	jbe    6e46 <_end+0xe2e>
    6e2c:	00 00                	add    BYTE PTR [rax],al
    6e2e:	81 1a 00 00 11 71    	sbb    DWORD PTR [rdx],0x71110000
    6e34:	19 00                	sbb    DWORD PTR [rax],eax
    6e36:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    6e3c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6e3d:	3f                   	(bad)
    6e3e:	00 00                	add    BYTE PTR [rax],al
    6e40:	01 6f 44             	add    DWORD PTR [rdi+0x44],ebp
    6e43:	00 00                	add    BYTE PTR [rax],al
    6e45:	00 11                	add    BYTE PTR [rcx],dl
    6e47:	f1                   	int1
    6e48:	32 00                	xor    al,BYTE PTR [rax]
    6e4a:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    6e50:	1c 24                	sbb    al,0x24
    6e52:	00 00                	add    BYTE PTR [rax],al
    6e54:	94                   	xchg   esp,eax
    6e55:	1f                   	(bad)
    6e56:	00 00                	add    BYTE PTR [rax],al
    6e58:	00 13                	add    BYTE PTR [rbx],dl
    6e5a:	14 18                	adc    al,0x18
    6e5c:	00 00                	add    BYTE PTR [rax],al
    6e5e:	69 5f 56 32 00 04 c1 	imul   ebx,DWORD PTR [rdi+0x56],0xc1040032
    6e65:	04 01                	add    al,0x1
    6e67:	e3 1a                	jrcxz  6e83 <_end+0xe6b>
    6e69:	00 00                	add    BYTE PTR [rax],al
    6e6b:	6a 1d                	push   0x1d
    6e6d:	11 00                	adc    DWORD PTR [rax],eax
    6e6f:	00 01                	add    BYTE PTR [rcx],al
    6e71:	04 f3                	add    al,0xf3
    6e73:	04 0c                	add    al,0xc
    6e75:	6b d2 1b             	imul   edx,edx,0x1b
    6e78:	00 00                	add    BYTE PTR [rax],al
    6e7a:	04 fa                	add    al,0xfa
    6e7c:	04 1d                	add    al,0x1d
    6e7e:	e6 17                	out    0x17,al
    6e80:	00 00                	add    BYTE PTR [rax],al
    6e82:	f1                   	int1
    6e83:	20 00                	and    BYTE PTR [rax],al
    6e85:	00 01                	add    BYTE PTR [rcx],al
    6e87:	01 41 d0             	add    DWORD PTR [rcx-0x30],eax
    6e8a:	0d 00 00 04 f8       	or     eax,0xf8040000
    6e8f:	04 3a                	add    al,0x3a
    6e91:	e3 1a                	jrcxz  6ead <_end+0xe95>
    6e93:	00 00                	add    BYTE PTR [rax],al
    6e95:	6c                   	ins    BYTE PTR es:[rdi],dx
    6e96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6e98:	77 00                	ja     6e9a <_end+0xe82>
    6e9a:	04 fd                	add    al,0xfd
    6e9c:	04 07                	add    al,0x7
    6e9e:	85 33                	test   DWORD PTR [rbx],esi
    6ea0:	00 00                	add    BYTE PTR [rax],al
    6ea2:	c3                   	ret
    6ea3:	1a 00                	sbb    al,BYTE PTR [rax]
    6ea5:	00 00                	add    BYTE PTR [rax],al
    6ea7:	00 3e                	add    BYTE PTR [rsi],bh
    6ea9:	d0 25 00 00 9a 03    	shl    BYTE PTR [rip+0x39a0000],1        # 39a6eaf <_end+0x39a0e97>
    6eaf:	da 1b                	ficomp DWORD PTR [rbx]
    6eb1:	00 00                	add    BYTE PTR [rax],al
    6eb3:	6d                   	ins    DWORD PTR es:[rdi],dx
    6eb4:	d0 0d 00 00 04 a5    	ror    BYTE PTR [rip+0xffffffffa5040000],1        # ffffffffa5046eba <_end+0xffffffffa5040ea2>
    6eba:	03 0c 0e             	add    ecx,DWORD PTR [rsi+rcx*1]
    6ebd:	10 00                	adc    BYTE PTR [rax],al
    6ebf:	00 01                	add    BYTE PTR [rcx],al
    6ec1:	04 1b                	add    al,0x1b
    6ec3:	00 00                	add    BYTE PTR [rax],al
    6ec5:	0a 1b                	or     bl,BYTE PTR [rbx]
    6ec7:	00 00                	add    BYTE PTR [rax],al
    6ec9:	10 f5                	adc    ch,dh
    6ecb:	41 00 00             	add    BYTE PTR [r8],al
    6ece:	00 40 d0             	add    BYTE PTR [rax-0x30],al
    6ed1:	0d 00 00 a8 03       	or     eax,0x3a80000
    6ed6:	15 ea 0c 00 00       	adc    eax,0xcea
    6edb:	1e                   	(bad)
    6edc:	1b 00                	sbb    eax,DWORD PTR [rax]
    6ede:	00 29                	add    BYTE PTR [rcx],ch
    6ee0:	1b 00                	sbb    eax,DWORD PTR [rax]
    6ee2:	00 10                	add    BYTE PTR [rax],dl
    6ee4:	f5                   	cmc
    6ee5:	41 00 00             	add    BYTE PTR [r8],al
    6ee8:	01 fa                	add    edx,edi
    6eea:	41 00 00             	add    BYTE PTR [r8],al
    6eed:	00 6e c7             	add    BYTE PTR [rsi-0x39],ch
    6ef0:	0d 00 00 04 a1       	or     eax,0xa1040000
    6ef5:	03 14 14             	add    edx,DWORD PTR [rsp+rdx*1]
    6ef8:	18 00                	sbb    BYTE PTR [rax],al
    6efa:	00 01                	add    BYTE PTR [rcx],al
    6efc:	13 29                	adc    ebp,DWORD PTR [rcx]
    6efe:	1b 00                	sbb    eax,DWORD PTR [rax]
    6f00:	00 14 3f             	add    BYTE PTR [rdi+rdi*1],dl
    6f03:	24 00                	and    al,0x0
    6f05:	00 b5 03 67 2d 00    	add    BYTE PTR [rbp+0x2d6703],dh
    6f0b:	00 29                	add    BYTE PTR [rcx],ch
    6f0d:	1b 00                	sbb    eax,DWORD PTR [rax]
    6f0f:	00 53 1b             	add    BYTE PTR [rbx+0x1b],dl
    6f12:	00 00                	add    BYTE PTR [rax],al
    6f14:	59                   	pop    rcx
    6f15:	1b 00                	sbb    eax,DWORD PTR [rax]
    6f17:	00 10                	add    BYTE PTR [rax],dl
    6f19:	ff 41 00             	inc    DWORD PTR [rcx+0x0]
    6f1c:	00 00                	add    BYTE PTR [rax],al
    6f1e:	14 89                	adc    al,0x89
    6f20:	2a 00                	sub    al,BYTE PTR [rax]
    6f22:	00 d2                	add    dl,dl
    6f24:	03 69 11             	add    ebp,DWORD PTR [rcx+0x11]
    6f27:	00 00                	add    BYTE PTR [rax],al
    6f29:	09 42 00             	or     DWORD PTR [rdx+0x0],eax
    6f2c:	00 70 1b             	add    BYTE PTR [rax+0x1b],dh
    6f2f:	00 00                	add    BYTE PTR [rax],al
    6f31:	7b 1b                	jnp    6f4e <_end+0xf36>
    6f33:	00 00                	add    BYTE PTR [rax],al
    6f35:	10 f5                	adc    ch,dh
    6f37:	41 00 00             	add    BYTE PTR [r8],al
    6f3a:	01 fa                	add    edx,edi
    6f3c:	41 00 00             	add    BYTE PTR [r8],al
    6f3f:	00 14 80             	add    BYTE PTR [rax+rax*4],dl
    6f42:	31 00                	xor    DWORD PTR [rax],eax
    6f44:	00 d9                	add    cl,bl
    6f46:	03 c1                	add    eax,ecx
    6f48:	0e                   	(bad)
    6f49:	00 00                	add    BYTE PTR [rax],al
    6f4b:	09 42 00             	or     DWORD PTR [rdx+0x0],eax
    6f4e:	00 92 1b 00 00 9d    	add    BYTE PTR [rdx-0x62ffffe5],dl
    6f54:	1b 00                	sbb    eax,DWORD PTR [rax]
    6f56:	00 10                	add    BYTE PTR [rax],dl
    6f58:	f5                   	cmc
    6f59:	41 00 00             	add    BYTE PTR [r8],al
    6f5c:	01 fa                	add    edx,edi
    6f5e:	41 00 00             	add    BYTE PTR [r8],al
    6f61:	00 2c 6d 69 6e 00 e1 	add    BYTE PTR [rbp*2-0x1eff9197],ch
    6f68:	03 4c 21 00          	add    ecx,DWORD PTR [rcx+riz*1+0x0]
    6f6c:	00 e3                	add    bl,ah
    6f6e:	1a 00                	sbb    al,BYTE PTR [rax]
    6f70:	00 2c 6d 61 78 00 e5 	add    BYTE PTR [rbp*2-0x1aff879f],ch
    6f77:	03 9d 1f 00 00 e3    	add    ebx,DWORD PTR [rbp-0x1cffffe1]
    6f7d:	1a 00                	sbb    al,BYTE PTR [rax]
    6f7f:	00 3f                	add    BYTE PTR [rdi],bh
    6f81:	5f                   	pop    rdi
    6f82:	5f                   	pop    rdi
    6f83:	64 00 e9             	fs add cl,ch
    6f86:	03 0b                	add    ecx,DWORD PTR [rbx]
    6f88:	29 1b                	sub    DWORD PTR [rbx],ebx
    6f8a:	00 00                	add    BYTE PTR [rax],al
    6f8c:	11 40 29             	adc    DWORD PTR [rax+0x29],eax
    6f8f:	00 00                	add    BYTE PTR [rax],al
    6f91:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6f92:	1a 00                	sbb    al,BYTE PTR [rax]
    6f94:	00 11                	add    BYTE PTR [rcx],dl
    6f96:	82                   	(bad)
    6f97:	26 00 00             	es add BYTE PTR [rax],al
    6f9a:	14 18                	adc    al,0x18
    6f9c:	00 00                	add    BYTE PTR [rax],al
    6f9e:	00 13                	add    BYTE PTR [rbx],dl
    6fa0:	e3 1a                	jrcxz  6fbc <_end+0xfa4>
    6fa2:	00 00                	add    BYTE PTR [rax],al
    6fa4:	3e 98                	ds cwde
    6fa6:	14 00                	adc    al,0x0
    6fa8:	00 ff                	add    bh,bh
    6faa:	01 5f 1e             	add    DWORD PTR [rdi+0x1e],ebx
    6fad:	00 00                	add    BYTE PTR [rax],al
    6faf:	04 80                	add    al,0x80
    6fb1:	0e                   	(bad)
    6fb2:	00 00                	add    BYTE PTR [rax],al
    6fb4:	04 0b                	add    al,0xb
    6fb6:	02 02                	add    al,BYTE PTR [rdx]
    6fb8:	e4 2a                	in     al,0x2a
    6fba:	00 00                	add    BYTE PTR [rax],al
    6fbc:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6fbd:	2d 00 00 0a 1c       	sub    eax,0x1c0a0000
    6fc2:	00 00                	add    BYTE PTR [rax],al
    6fc4:	01 a5 2d 00 00 01    	add    DWORD PTR [rbp+0x100002d],esp
    6fca:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6fcb:	2d 00 00 00 2b       	sub    eax,0x2b000000
    6fd0:	c7                   	(bad)
    6fd1:	0d 00 00 34 02       	or     eax,0x2340000
    6fd6:	0c 29                	or     al,0x29
    6fd8:	1f                   	(bad)
    6fd9:	00 00                	add    BYTE PTR [rax],al
    6fdb:	1e                   	(bad)
    6fdc:	1c 00                	sbb    al,0x0
    6fde:	00 24 1c             	add    BYTE PTR [rsp+rbx*1],ah
    6fe1:	00 00                	add    BYTE PTR [rax],al
    6fe3:	10 cf                	adc    bh,cl
    6fe5:	3f                   	(bad)
    6fe6:	00 00                	add    BYTE PTR [rax],al
    6fe8:	00 2b                	add    BYTE PTR [rbx],ch
    6fea:	c7                   	(bad)
    6feb:	0d 00 00 36 02       	or     eax,0x2360000
    6ff0:	02 32                	add    dh,BYTE PTR [rdx]
    6ff2:	33 00                	xor    eax,DWORD PTR [rax]
    6ff4:	00 38                	add    BYTE PTR [rax],bh
    6ff6:	1c 00                	sbb    al,0x0
    6ff8:	00 43 1c             	add    BYTE PTR [rbx+0x1c],al
    6ffb:	00 00                	add    BYTE PTR [rax],al
    6ffd:	10 cf                	adc    bh,cl
    6fff:	3f                   	(bad)
    7000:	00 00                	add    BYTE PTR [rax],al
    7002:	01 d9                	add    ecx,ebx
    7004:	3f                   	(bad)
    7005:	00 00                	add    BYTE PTR [rax],al
    7007:	00 2b                	add    BYTE PTR [rbx],ch
    7009:	db 0d 00 00 48 02    	fisttp DWORD PTR [rip+0x2480000]        # 248700f <_end+0x2480ff7>
    700f:	02 bc 33 00 00 57 1c 	add    bh,BYTE PTR [rbx+rsi*1+0x1c570000]
    7016:	00 00                	add    BYTE PTR [rax],al
    7018:	62 1c 00             	(bad)
    701b:	00 10                	add    BYTE PTR [rax],dl
    701d:	cf                   	iret
    701e:	3f                   	(bad)
    701f:	00 00                	add    BYTE PTR [rax],al
    7021:	10 a6 21 00 00 00    	adc    BYTE PTR [rsi+0x21],ah
    7027:	51                   	push   rcx
    7028:	69 15 00 00 d6 22 00 	imul   edx,DWORD PTR [rip+0x22d60000],0x3fde0000        # 22d67032 <_end+0x22d6101a>
    702f:	00 de 3f 
    7032:	00 00                	add    BYTE PTR [rax],al
    7034:	77 1c                	ja     7052 <_end+0x103a>
    7036:	00 00                	add    BYTE PTR [rax],al
    7038:	82                   	(bad)
    7039:	1c 00                	sbb    al,0x0
    703b:	00 10                	add    BYTE PTR [rax],dl
    703d:	cf                   	iret
    703e:	3f                   	(bad)
    703f:	00 00                	add    BYTE PTR [rax],al
    7041:	01 d9                	add    ecx,ebx
    7043:	3f                   	(bad)
    7044:	00 00                	add    BYTE PTR [rax],al
    7046:	00 52 72             	add    BYTE PTR [rdx+0x72],dl
    7049:	65 70 00             	gs jo  704c <_end+0x1034>
    704c:	b2 21                	mov    dl,0x21
    704e:	00 00                	add    BYTE PTR [rax],al
    7050:	13 82 1c 00 00 14    	adc    eax,DWORD PTR [rdx+0x1400001c]
    7056:	8c 25 00 00 4d 02    	mov    WORD PTR [rip+0x24d0000],fs        # 24d705c <_end+0x24d1044>
    705c:	57                   	push   rdi
    705d:	17                   	(bad)
    705e:	00 00                	add    BYTE PTR [rax],al
    7060:	82                   	(bad)
    7061:	1c 00                	sbb    al,0x0
    7063:	00 a7 1c 00 00 ad    	add    BYTE PTR [rdi-0x52ffffe4],ah
    7069:	1c 00                	sbb    al,0x0
    706b:	00 10                	add    BYTE PTR [rax],dl
    706d:	e3 3f                	jrcxz  70ae <_end+0x1096>
    706f:	00 00                	add    BYTE PTR [rax],al
    7071:	00 14 ce             	add    BYTE PTR [rsi+rcx*8],dl
    7074:	14 00                	adc    al,0x0
    7076:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
    7079:	16                   	(bad)
    707a:	14 00                	adc    al,0x0
    707c:	00 df                	add    bh,bl
    707e:	1b 00                	sbb    eax,DWORD PTR [rax]
    7080:	00 c4                	add    ah,al
    7082:	1c 00                	sbb    al,0x0
    7084:	00 ca                	add    dl,cl
    7086:	1c 00                	sbb    al,0x0
    7088:	00 10                	add    BYTE PTR [rax],dl
    708a:	e3 3f                	jrcxz  70cb <_end+0x10b3>
    708c:	00 00                	add    BYTE PTR [rax],al
    708e:	00 14 43             	add    BYTE PTR [rbx+rax*2],dl
    7091:	19 00                	sbb    DWORD PTR [rax],eax
    7093:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    7096:	26 2b 00             	es sub eax,DWORD PTR [rax]
    7099:	00 df                	add    bh,bl
    709b:	1b 00                	sbb    eax,DWORD PTR [rax]
    709d:	00 e1                	add    cl,ah
    709f:	1c 00                	sbb    al,0x0
    70a1:	00 e7                	add    bh,ah
    70a3:	1c 00                	sbb    al,0x0
    70a5:	00 10                	add    BYTE PTR [rax],dl
    70a7:	e3 3f                	jrcxz  70e8 <_end+0x10d0>
    70a9:	00 00                	add    BYTE PTR [rax],al
    70ab:	00 14 2d 2f 00 00 5b 	add    BYTE PTR [rbp*1+0x5b00002f],dl
    70b2:	02 ea                	add    ch,dl
    70b4:	1e                   	(bad)
    70b5:	00 00                	add    BYTE PTR [rax],al
    70b7:	de 3f                	fidivr WORD PTR [rdi]
    70b9:	00 00                	add    BYTE PTR [rax],al
    70bb:	fe                   	(bad)
    70bc:	1c 00                	sbb    al,0x0
    70be:	00 04 1d 00 00 10 cf 	add    BYTE PTR [rbx*1-0x30f00000],al
    70c5:	3f                   	(bad)
    70c6:	00 00                	add    BYTE PTR [rax],al
    70c8:	00 14 2d 2f 00 00 62 	add    BYTE PTR [rbp*1+0x6200002f],dl
    70cf:	02 12                	add    dl,BYTE PTR [rdx]
    70d1:	17                   	(bad)
    70d2:	00 00                	add    BYTE PTR [rax],al
    70d4:	df 1b                	fistp  WORD PTR [rbx]
    70d6:	00 00                	add    BYTE PTR [rax],al
    70d8:	1b 1d 00 00 26 1d    	sbb    ebx,DWORD PTR [rip+0x1d260000]        # 1d2670de <_end+0x1d2610c6>
    70de:	00 00                	add    BYTE PTR [rax],al
    70e0:	10 cf                	adc    bh,cl
    70e2:	3f                   	(bad)
    70e3:	00 00                	add    BYTE PTR [rax],al
    70e5:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    70eb:	14 65                	adc    al,0x65
    70ed:	31 00                	xor    DWORD PTR [rax],eax
    70ef:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    70f2:	00 19                	add    BYTE PTR [rcx],bl
    70f4:	00 00                	add    BYTE PTR [rax],al
    70f6:	de 3f                	fidivr WORD PTR [rdi]
    70f8:	00 00                	add    BYTE PTR [rax],al
    70fa:	3d 1d 00 00 43       	cmp    eax,0x4300001d
    70ff:	1d 00 00 10 cf       	sbb    eax,0xcf100000
    7104:	3f                   	(bad)
    7105:	00 00                	add    BYTE PTR [rax],al
    7107:	00 14 65 31 00 00 6d 	add    BYTE PTR [riz*2+0x6d000031],dl
    710e:	02 31                	add    dh,BYTE PTR [rcx]
    7110:	13 00                	adc    eax,DWORD PTR [rax]
    7112:	00 df                	add    bh,bl
    7114:	1b 00                	sbb    eax,DWORD PTR [rax]
    7116:	00 5a 1d             	add    BYTE PTR [rdx+0x1d],bl
    7119:	00 00                	add    BYTE PTR [rax],al
    711b:	65 1d 00 00 10 cf    	gs sbb eax,0xcf100000
    7121:	3f                   	(bad)
    7122:	00 00                	add    BYTE PTR [rax],al
    7124:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    712a:	14 89                	adc    al,0x89
    712c:	2a 00                	sub    al,BYTE PTR [rax]
    712e:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    7131:	17                   	(bad)
    7132:	0e                   	(bad)
    7133:	00 00                	add    BYTE PTR [rax],al
    7135:	de 3f                	fidivr WORD PTR [rdi]
    7137:	00 00                	add    BYTE PTR [rax],al
    7139:	7c 1d                	jl     7158 <_end+0x1140>
    713b:	00 00                	add    BYTE PTR [rax],al
    713d:	87 1d 00 00 10 cf    	xchg   DWORD PTR [rip+0xffffffffcf100000],ebx        # ffffffffcf107143 <_end+0xffffffffcf10112b>
    7143:	3f                   	(bad)
    7144:	00 00                	add    BYTE PTR [rax],al
    7146:	01 d9                	add    ecx,ebx
    7148:	3f                   	(bad)
    7149:	00 00                	add    BYTE PTR [rax],al
    714b:	00 14 80             	add    BYTE PTR [rax+rax*4],dl
    714e:	31 00                	xor    DWORD PTR [rax],eax
    7150:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    7153:	80 34 00 00          	xor    BYTE PTR [rax+rax*1],0x0
    7157:	de 3f                	fidivr WORD PTR [rdi]
    7159:	00 00                	add    BYTE PTR [rax],al
    715b:	9e                   	sahf
    715c:	1d 00 00 a9 1d       	sbb    eax,0x1da90000
    7161:	00 00                	add    BYTE PTR [rax],al
    7163:	10 cf                	adc    bh,cl
    7165:	3f                   	(bad)
    7166:	00 00                	add    BYTE PTR [rax],al
    7168:	01 d9                	add    ecx,ebx
    716a:	3f                   	(bad)
    716b:	00 00                	add    BYTE PTR [rax],al
    716d:	00 14 5c             	add    BYTE PTR [rsp+rbx*2],dl
    7170:	2e 00 00             	cs add BYTE PTR [rax],al
    7173:	7f 02                	jg     7177 <_end+0x115f>
    7175:	15 21 00 00 de       	adc    eax,0xde000021
    717a:	3f                   	(bad)
    717b:	00 00                	add    BYTE PTR [rax],al
    717d:	c0 1d 00 00 cb 1d 00 	rcr    BYTE PTR [rip+0x1dcb0000],0x0        # 1dcb7184 <_end+0x1dcb116c>
    7184:	00 10                	add    BYTE PTR [rax],dl
    7186:	cf                   	iret
    7187:	3f                   	(bad)
    7188:	00 00                	add    BYTE PTR [rax],al
    718a:	01 ed                	add    ebp,ebp
    718c:	3f                   	(bad)
    718d:	00 00                	add    BYTE PTR [rax],al
    718f:	00 14 49             	add    BYTE PTR [rcx+rcx*2],dl
    7192:	34 00                	xor    al,0x0
    7194:	00 86 02 52 2a 00    	add    BYTE PTR [rsi+0x2a5202],al
    719a:	00 de                	add    dh,bl
    719c:	3f                   	(bad)
    719d:	00 00                	add    BYTE PTR [rax],al
    719f:	e2 1d                	loop   71be <_end+0x11a6>
    71a1:	00 00                	add    BYTE PTR [rax],al
    71a3:	ed                   	in     eax,dx
    71a4:	1d 00 00 10 cf       	sbb    eax,0xcf100000
    71a9:	3f                   	(bad)
    71aa:	00 00                	add    BYTE PTR [rax],al
    71ac:	01 ed                	add    ebp,ebp
    71ae:	3f                   	(bad)
    71af:	00 00                	add    BYTE PTR [rax],al
    71b1:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    71b4:	24 00                	and    al,0x0
    71b6:	00 dd                	add    ch,bl
    71b8:	20 00                	and    BYTE PTR [rax],al
    71ba:	00 df                	add    bh,bl
    71bc:	1b 00                	sbb    eax,DWORD PTR [rax]
    71be:	00 2c 6d 69 6e 00 a5 	add    BYTE PTR [rbp*2-0x5aff9197],ch
    71c5:	02 3f                	add    bh,BYTE PTR [rdi]
    71c7:	28 00                	sub    BYTE PTR [rax],al
    71c9:	00 df                	add    bh,bl
    71cb:	1b 00                	sbb    eax,DWORD PTR [rax]
    71cd:	00 2c 6d 61 78 00 a9 	add    BYTE PTR [rbp*2-0x56ff879f],ch
    71d4:	02 8a 22 00 00 df    	add    cl,BYTE PTR [rdx-0x20ffffde]
    71da:	1b 00                	sbb    eax,DWORD PTR [rax]
    71dc:	00 3f                	add    BYTE PTR [rdi],bh
    71de:	5f                   	pop    rdi
    71df:	5f                   	pop    rdi
    71e0:	72 00                	jb     71e2 <_end+0x11ca>
    71e2:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    71e3:	02 06                	add    al,BYTE PTR [rsi]
    71e5:	82                   	(bad)
    71e6:	1c 00                	sbb    al,0x0
    71e8:	00 40 85             	add    BYTE PTR [rax-0x7b],al
    71eb:	2f                   	(bad)
    71ec:	00 00                	add    BYTE PTR [rax],al
    71ee:	3d 02 17 f9 29       	cmp    eax,0x29f91702
    71f3:	00 00                	add    BYTE PTR [rax],al
    71f5:	41 1e                	rex.B (bad)
    71f7:	00 00                	add    BYTE PTR [rax],al
    71f9:	4c 1e                	rex.WR (bad)
    71fb:	00 00                	add    BYTE PTR [rax],al
    71fd:	11 71 19             	adc    DWORD PTR [rcx+0x19],esi
    7200:	00 00                	add    BYTE PTR [rax],al
    7202:	b2 21                	mov    dl,0x21
    7204:	00 00                	add    BYTE PTR [rax],al
    7206:	10 cf                	adc    bh,cl
    7208:	3f                   	(bad)
    7209:	00 00                	add    BYTE PTR [rax],al
    720b:	01 6f 44             	add    DWORD PTR [rdi+0x44],ebp
    720e:	00 00                	add    BYTE PTR [rax],al
    7210:	00 11                	add    BYTE PTR [rcx],dl
    7212:	f1                   	int1
    7213:	32 00                	xor    al,BYTE PTR [rax]
    7215:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    721b:	1c 24                	sbb    al,0x24
    721d:	00 00                	add    BYTE PTR [rax],al
    721f:	3d 20 00 00 00       	cmp    eax,0x20
    7224:	13 df                	adc    ebx,edi
    7226:	1b 00                	sbb    eax,DWORD PTR [rax]
    7228:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    722b:	9e                   	sahf
    722c:	05 1f 89 20 00       	add    eax,0x20891f
    7231:	00 1b                	add    BYTE PTR [rbx],bl
    7233:	c7                   	(bad)
    7234:	31 00                	xor    DWORD PTR [rax],eax
    7236:	00 01                	add    BYTE PTR [rcx],al
    7238:	04 cc                	add    al,0xcc
    723a:	0e                   	(bad)
    723b:	d6                   	(bad)
    723c:	1e                   	(bad)
    723d:	00 00                	add    BYTE PTR [rax],al
    723f:	0f 8a 29 00 00 04    	jp     400726e <_end+0x4001256>
    7245:	d0 04 a8             	rol    BYTE PTR [rax+rbp*4],1
    7248:	28 00                	sub    BYTE PTR [rax],al
    724a:	00 df                	add    bh,bl
    724c:	1b 00                	sbb    eax,DWORD PTR [rax]
    724e:	00 a6 1e 00 00 11    	add    BYTE PTR [rsi+0x1100001e],ah
    7254:	f1                   	int1
    7255:	32 00                	xor    al,BYTE PTR [rax]
    7257:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    725d:	1c 24                	sbb    al,0x24
    725f:	00 00                	add    BYTE PTR [rax],al
    7261:	94                   	xchg   esp,eax
    7262:	1f                   	(bad)
    7263:	00 00                	add    BYTE PTR [rax],al
    7265:	01 b6 3f 00 00 00    	add    DWORD PTR [rsi+0x3f],esi
    726b:	11 cf                	adc    edi,ecx
    726d:	22 00                	and    al,BYTE PTR [rax]
    726f:	00 df                	add    bh,bl
    7271:	1b 00                	sbb    eax,DWORD PTR [rax]
    7273:	00 42 5f             	add    BYTE PTR [rdx+0x5f],al
    7276:	43                   	rex.XB
    7277:	46 00 fd             	rex.RX add bpl,r15b
    727a:	1f                   	(bad)
    727b:	00 00                	add    BYTE PTR [rax],al
    727d:	42 5f                	rex.X pop rdi
    727f:	43 52                	rex.XB push r10
    7281:	00 b2 21 00 00 2f    	add    BYTE PTR [rdx+0x2f000021],dh
    7287:	e6 2d                	out    0x2d,al
    7289:	00 00                	add    BYTE PTR [rax],al
    728b:	ea                   	(bad)
    728c:	20 00                	and    BYTE PTR [rax],al
    728e:	00 01                	add    BYTE PTR [rcx],al
    7290:	2f                   	(bad)
    7291:	0a 25 00 00 ea 20    	or     ah,BYTE PTR [rip+0x20ea0000]        # 20ea7297 <_end+0x20ea127f>
    7297:	00 00                	add    BYTE PTR [rax],al
    7299:	00 00                	add    BYTE PTR [rax],al
    729b:	04 87                	add    al,0x87
    729d:	26 00 00             	es add BYTE PTR [rax],al
    72a0:	04 c6                	add    al,0xc6
    72a2:	02 07                	add    al,BYTE PTR [rdi]
    72a4:	13 22                	adc    esp,DWORD PTR [rdx]
    72a6:	00 00                	add    BYTE PTR [rax],al
    72a8:	e0 1f                	loopne 72c9 <_end+0x12b1>
    72aa:	00 00                	add    BYTE PTR [rax],al
    72ac:	1a 1f                	sbb    bl,BYTE PTR [rdi]
    72ae:	00 00                	add    BYTE PTR [rax],al
    72b0:	11 6b 19             	adc    DWORD PTR [rbx+0x19],ebp
    72b3:	00 00                	add    BYTE PTR [rax],al
    72b5:	b2 21                	mov    dl,0x21
    72b7:	00 00                	add    BYTE PTR [rax],al
    72b9:	11 64 23 00          	adc    DWORD PTR [rbx+riz*1+0x0],esp
    72bd:	00 94 1f 00 00 11 71 	add    BYTE PTR [rdi+rbx*1+0x71110000],dl
    72c4:	19 00                	sbb    DWORD PTR [rax],eax
    72c6:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    72cc:	76 30                	jbe    72fe <_end+0x12e6>
    72ce:	00 00                	add    BYTE PTR [rax],al
    72d0:	94                   	xchg   esp,eax
    72d1:	1f                   	(bad)
    72d2:	00 00                	add    BYTE PTR [rax],al
    72d4:	01 b6 3f 00 00 01    	add    DWORD PTR [rsi+0x100003f],esi
    72da:	b6 3f                	mov    dh,0x3f
    72dc:	00 00                	add    BYTE PTR [rax],al
    72de:	00 08                	add    BYTE PTR [rax],cl
    72e0:	b8 0d 00 00 04       	mov    eax,0x400000d
    72e5:	f0 0d a8 20 00 00    	lock or eax,0x20a8
    72eb:	04 6c                	add    al,0x6c
    72ed:	27                   	(bad)
    72ee:	00 00                	add    BYTE PTR [rax],al
    72f0:	04 11                	add    al,0x11
    72f2:	01 07                	add    DWORD PTR [rdi],eax
    72f4:	64 1a 00             	sbb    al,BYTE PTR fs:[rax]
    72f7:	00 1a                	add    BYTE PTR [rdx],bl
    72f9:	1f                   	(bad)
    72fa:	00 00                	add    BYTE PTR [rax],al
    72fc:	5c                   	pop    rsp
    72fd:	1f                   	(bad)
    72fe:	00 00                	add    BYTE PTR [rax],al
    7300:	11 cf                	adc    edi,ecx
    7302:	22 00                	and    al,BYTE PTR [rax]
    7304:	00 df                	add    bh,bl
    7306:	1b 00                	sbb    eax,DWORD PTR [rax]
    7308:	00 11                	add    BYTE PTR [rcx],dl
    730a:	f1                   	int1
    730b:	32 00                	xor    al,BYTE PTR [rax]
    730d:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    7313:	1c 24                	sbb    al,0x24
    7315:	00 00                	add    BYTE PTR [rax],al
    7317:	94                   	xchg   esp,eax
    7318:	1f                   	(bad)
    7319:	00 00                	add    BYTE PTR [rax],al
    731b:	01 b6 3f 00 00 00    	add    DWORD PTR [rsi+0x3f],esi
    7321:	70 4b                	jo     736e <_end+0x1356>
    7323:	1c 00                	sbb    al,0x0
    7325:	00 04 75 04 07 c4 2c 	add    BYTE PTR [rsi*2+0x2cc40704],al
    732c:	00 00                	add    BYTE PTR [rax],al
    732e:	e0 1f                	loopne 734f <_end+0x1337>
    7330:	00 00                	add    BYTE PTR [rax],al
    7332:	11 40 29             	adc    DWORD PTR [rax+0x29],eax
    7335:	00 00                	add    BYTE PTR [rax],al
    7337:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7338:	1a 00                	sbb    al,BYTE PTR [rax]
    733a:	00 11                	add    BYTE PTR [rcx],dl
    733c:	96                   	xchg   esi,eax
    733d:	23 00                	and    eax,DWORD PTR [rax]
    733f:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    7342:	00 00                	add    BYTE PTR [rax],al
    7344:	11 9c 23 00 00 14 18 	adc    DWORD PTR [rbx+riz*1+0x18140000],ebx
    734b:	00 00                	add    BYTE PTR [rax],al
    734d:	01 c4                	add    esp,eax
    734f:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    7352:	01 c4                	add    esp,eax
    7354:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    7357:	00 00                	add    BYTE PTR [rax],al
    7359:	43 5c                	rex.XB pop r12
    735b:	20 00                	and    BYTE PTR [rax],al
    735d:	00 d3                	add    bl,dl
    735f:	1f                   	(bad)
    7360:	00 00                	add    BYTE PTR [rax],al
    7362:	44 6e                	rex.R outs dx,BYTE PTR ds:[rsi]
    7364:	75 6d                	jne    73d3 <_end+0x13bb>
    7366:	00 84 20 00 00 b1 2d 	add    BYTE PTR [rax+riz*1+0x2db10000],al
    736d:	00 00                	add    BYTE PTR [rax],al
    736f:	54                   	push   rsp
    7370:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    7373:	00 c2                	add    dl,al
    7375:	15 00 00 b1 2d       	adc    eax,0x2db10000
    737a:	00 00                	add    BYTE PTR [rax],al
    737c:	00 ca                	add    dl,cl
    737e:	9a                   	(bad)
    737f:	3b 2f                	cmp    ebp,DWORD PTR [rdi]
    7381:	1d 27 00 00 b2       	sbb    eax,0xb2000027
    7386:	21 00                	and    DWORD PTR [rax],eax
    7388:	00 01                	add    BYTE PTR [rcx],al
    738a:	55                   	push   rbp
    738b:	19 12                	sbb    DWORD PTR [rdx],edx
    738d:	00 00                	add    BYTE PTR [rax],al
    738f:	b2 21                	mov    dl,0x21
    7391:	00 00                	add    BYTE PTR [rax],al
    7393:	00 ca                	add    dl,cl
    7395:	9a                   	(bad)
    7396:	3b 00                	cmp    eax,DWORD PTR [rax]
    7398:	1b 75 24             	sbb    esi,DWORD PTR [rbp+0x24]
    739b:	00 00                	add    BYTE PTR [rax],al
    739d:	01 04 70             	add    DWORD PTR [rax+rsi*2],eax
    73a0:	0c fd                	or     al,0xfd
    73a2:	1f                   	(bad)
    73a3:	00 00                	add    BYTE PTR [rax],al
    73a5:	08 c6                	or     dh,al
    73a7:	13 00                	adc    eax,DWORD PTR [rax]
    73a9:	00 04 73             	add    BYTE PTR [rbx+rsi*2],al
    73ac:	0d 14 18 00 00       	or     eax,0x1814
    73b1:	71 5f                	jno    7412 <_end+0x13fa>
    73b3:	54                   	push   rsp
    73b4:	70 00                	jo     73b6 <_end+0x139e>
    73b6:	56                   	push   rsi
    73b7:	14 18                	adc    al,0x18
    73b9:	00 00                	add    BYTE PTR [rax],al
    73bb:	56                   	push   rsi
    73bc:	14 18                	adc    al,0x18
    73be:	00 00                	add    BYTE PTR [rax],al
    73c0:	00 00                	add    BYTE PTR [rax],al
    73c2:	43                   	rex.XB
    73c3:	d5 2a 00 00          	{rex2 0x2a} add BYTE PTR [rax],al
    73c7:	3d 20 00 00 44       	cmp    eax,0x44000020
    73cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    73cd:	75 6d                	jne    743c <_end+0x1424>
    73cf:	00 c6                	add    dh,al
    73d1:	1d 00 00 b1 2d       	sbb    eax,0x2db10000
    73d6:	00 00                	add    BYTE PTR [rax],al
    73d8:	72 64                	jb     743e <_end+0x1426>
    73da:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    73dc:	00 10                	add    BYTE PTR [rax],dl
    73de:	14 01                	adc    al,0x1
    73e0:	21 f8                	and    eax,edi
    73e2:	13 00                	adc    eax,DWORD PTR [rax]
    73e4:	00 b1 2d 00 00 e8    	add    BYTE PTR [rcx-0x17ffffd3],dh
    73ea:	03 01                	add    eax,DWORD PTR [rcx]
    73ec:	2f                   	(bad)
    73ed:	1d 27 00 00 b2       	sbb    eax,0xb2000027
    73f2:	21 00                	and    DWORD PTR [rax],eax
    73f4:	00 01                	add    BYTE PTR [rcx],al
    73f6:	73 19                	jae    7411 <_end+0x13f9>
    73f8:	12 00                	adc    al,BYTE PTR [rax]
    73fa:	00 b2 21 00 00 e8    	add    BYTE PTR [rdx-0x17ffffdf],dh
    7400:	03 00                	add    eax,DWORD PTR [rax]
    7402:	43 62 1d 00 00 7c    	(bad)
    7408:	20 00                	and    BYTE PTR [rax],al
    740a:	00 44 6e 75          	add    BYTE PTR [rsi+rbp*2+0x75],al
    740e:	6d                   	ins    DWORD PTR es:[rdi],dx
    740f:	00 37                	add    BYTE PTR [rdi],dh
    7411:	27                   	(bad)
    7412:	00 00                	add    BYTE PTR [rax],al
    7414:	b1 2d                	mov    cl,0x2d
    7416:	00 00                	add    BYTE PTR [rax],al
    7418:	54                   	push   rsp
    7419:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    741c:	00 c0                	add    al,al
    741e:	1e                   	(bad)
    741f:	00 00                	add    BYTE PTR [rax],al
    7421:	b1 2d                	mov    cl,0x2d
    7423:	00 00                	add    BYTE PTR [rax],al
    7425:	40                   	rex
    7426:	42 0f 00 2f          	rex.X verw WORD PTR [rdi]
    742a:	1d 27 00 00 b2       	sbb    eax,0xb2000027
    742f:	21 00                	and    DWORD PTR [rax],eax
    7431:	00 01                	add    BYTE PTR [rcx],al
    7433:	55                   	push   rbp
    7434:	19 12                	sbb    DWORD PTR [rdx],edx
    7436:	00 00                	add    BYTE PTR [rax],al
    7438:	b2 21                	mov    dl,0x21
    743a:	00 00                	add    BYTE PTR [rax],al
    743c:	40                   	rex
    743d:	42 0f 00 00          	rex.X sldt WORD PTR [rax]
    7441:	74 55                	je     7498 <_end+0x1480>
    7443:	0d 00 00 3e 58       	or     eax,0x583e0000
    7448:	03 14 93             	add    edx,DWORD PTR [rbx+rdx*4]
    744b:	20 00                	and    BYTE PTR [rax],al
    744d:	00 50 4e             	add    BYTE PTR [rax+0x4e],dl
    7450:	0d 00 00 04 42       	or     eax,0x42040000
    7455:	05 14 00 3c 60       	add    eax,0x603c0014
    745a:	26 00 00             	es add BYTE PTR [rax],al
    745d:	04 34                	add    al,0x34
    745f:	0d 1b 77 12 00       	or     eax,0x12771b
    7464:	00 01                	add    BYTE PTR [rcx],al
    7466:	05 6f 0c be 20       	add    eax,0x20be0c6f
    746b:	00 00                	add    BYTE PTR [rax],al
    746d:	08 c6                	or     dh,al
    746f:	13 00                	adc    eax,DWORD PTR [rax]
    7471:	00 05 70 13 df 1b    	add    BYTE PTR [rip+0x1bdf1370],al        # 1bdf87e7 <_end+0x1bdf27cf>
    7477:	00 00                	add    BYTE PTR [rax],al
    7479:	42 5f                	rex.X pop rdi
    747b:	54                   	push   rsp
    747c:	70 00                	jo     747e <_end+0x1466>
    747e:	df 1b                	fistp  WORD PTR [rbx]
    7480:	00 00                	add    BYTE PTR [rax],al
    7482:	00 34 74             	add    BYTE PTR [rsp+rsi*2],dh
    7485:	2e 00 00             	cs add BYTE PTR [rax],al
    7488:	f1                   	int1
    7489:	20 00                	and    BYTE PTR [rax],al
    748b:	00 34 74             	add    BYTE PTR [rsp+rsi*2],dh
    748e:	2e 00 00             	cs add BYTE PTR [rax],al
    7491:	f1                   	int1
    7492:	20 00                	and    BYTE PTR [rax],al
    7494:	00 34 74             	add    BYTE PTR [rsp+rsi*2],dh
    7497:	2e 00 00             	cs add BYTE PTR [rax],al
    749a:	f1                   	int1
    749b:	20 00                	and    BYTE PTR [rax],al
    749d:	00 34 74             	add    BYTE PTR [rsp+rsi*2],dh
    74a0:	2e 00 00             	cs add BYTE PTR [rax],al
    74a3:	f1                   	int1
    74a4:	20 00                	and    BYTE PTR [rax],al
    74a6:	00 00                	add    BYTE PTR [rax],al
    74a8:	12 04 07             	adc    al,BYTE PTR [rdi+rax*1]
    74ab:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    74ac:	01 00                	add    DWORD PTR [rax],eax
    74ae:	00 12                	add    BYTE PTR [rdx],dl
    74b0:	01 02                	add    DWORD PTR [rdx],eax
    74b2:	31 05 00 00 13 ea    	xor    DWORD PTR [rip+0xffffffffea130000],eax        # ffffffffea1374b8 <_end+0xffffffffea1314a0>
    74b8:	20 00                	and    BYTE PTR [rax],al
    74ba:	00 75 37             	add    BYTE PTR [rbp+0x37],dh
    74bd:	02 00                	add    al,BYTE PTR [rax]
    74bf:	00 11                	add    BYTE PTR [rcx],dl
    74c1:	57                   	push   rdi
    74c2:	01 0b                	add    DWORD PTR [rbx],ecx
    74c4:	7c 21                	jl     74e7 <_end+0x14cf>
    74c6:	00 00                	add    BYTE PTR [rax],al
    74c8:	3c d4                	cmp    al,0xd4
    74ca:	32 00                	xor    al,BYTE PTR [rax]
    74cc:	00 12                	add    BYTE PTR [rdx],dl
    74ce:	25 0b 02 08 cc       	and    eax,0xcc08020b
    74d3:	0b c7                	or     eax,edi
    74d5:	23 00                	and    eax,DWORD PTR [rax]
    74d7:	00 02                	add    BYTE PTR [rdx],al
    74d9:	08 dc                	or     ah,bl
    74db:	0b 2b                	or     ebp,DWORD PTR [rbx]
    74dd:	30 00                	xor    BYTE PTR [rax],al
    74df:	00 02                	add    BYTE PTR [rdx],al
    74e1:	08 e7                	or     bh,ah
    74e3:	0b 47 30             	or     eax,DWORD PTR [rdi+0x30]
    74e6:	00 00                	add    BYTE PTR [rax],al
    74e8:	02 08                	add    cl,BYTE PTR [rax]
    74ea:	e8 0b 5e 30 00       	call   30d2fa <_end+0x3072e2>
    74ef:	00 02                	add    BYTE PTR [rdx],al
    74f1:	08 e9                	or     cl,ch
    74f3:	0b 82 30 00 00 02    	or     eax,DWORD PTR [rdx+0x2000030]
    74f9:	08 eb                	or     bl,ch
    74fb:	0b a6 30 00 00 02    	or     esp,DWORD PTR [rsi+0x2000030]
    7501:	08 ec                	or     ah,ch
    7503:	0b c1                	or     eax,ecx
    7505:	30 00                	xor    BYTE PTR [rax],al
    7507:	00 1a                	add    BYTE PTR [rdx],bl
    7509:	64 69 76 00 08 d9 dd 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1ddd908
    7510:	01 
    7511:	00 00                	add    BYTE PTR [rax],al
    7513:	c7                   	(bad)
    7514:	23 00                	and    eax,DWORD PTR [rax]
    7516:	00 61 21             	add    BYTE PTR [rcx+0x21],ah
    7519:	00 00                	add    BYTE PTR [rax],al
    751b:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    7521:	be 21 00 00 00       	mov    esi,0x21
    7526:	02 09                	add    cl,BYTE PTR [rcx]
    7528:	fb                   	sti
    7529:	0b 63 3a             	or     esp,DWORD PTR [rbx+0x3a]
    752c:	00 00                	add    BYTE PTR [rax],al
    752e:	18 09                	sbb    BYTE PTR [rcx],cl
    7530:	04 01                	add    al,0x1
    7532:	0b 7f 3a             	or     edi,DWORD PTR [rdi+0x3a]
    7535:	00 00                	add    BYTE PTR [rax],al
    7537:	18 09                	sbb    BYTE PTR [rcx],cl
    7539:	05 01 0b a4 3a       	add    eax,0x3aa40b01
    753e:	00 00                	add    BYTE PTR [rax],al
    7540:	00 12                	add    BYTE PTR [rdx],dl
    7542:	01 08                	add    DWORD PTR [rax],ecx
    7544:	24 02                	and    al,0x2
    7546:	00 00                	add    BYTE PTR [rax],al
    7548:	12 02                	adc    al,BYTE PTR [rdx]
    754a:	07                   	(bad)
    754b:	73 02                	jae    754f <_end+0x1537>
    754d:	00 00                	add    BYTE PTR [rax],al
    754f:	12 08                	adc    cl,BYTE PTR [rax]
    7551:	07                   	(bad)
    7552:	a0 01 00 00 12 08 07 	movabs al,ds:0x19b070812000001
    7559:	9b 01 
    755b:	00 00                	add    BYTE PTR [rax],al
    755d:	12 01                	adc    al,BYTE PTR [rcx]
    755f:	06                   	(bad)
    7560:	26 02 00             	es add al,BYTE PTR [rax]
    7563:	00 12                	add    BYTE PTR [rdx],dl
    7565:	02 05 05 01 00 00    	add    al,BYTE PTR [rip+0x105]        # 7670 <_end+0x1658>
    756b:	76 04                	jbe    7571 <_end+0x1559>
    756d:	05 69 6e 74 00       	add    eax,0x746e69
    7572:	13 a6 21 00 00 12    	adc    esp,DWORD PTR [rsi+0x12000021]
    7578:	08 05 92 01 00 00    	or     BYTE PTR [rip+0x192],al        # 7710 <_end+0x16f8>
    757e:	13 b2 21 00 00 12    	adc    esi,DWORD PTR [rdx+0x12000021]
    7584:	08 05 8d 01 00 00    	or     BYTE PTR [rip+0x18d],al        # 7717 <_end+0x16ff>
    758a:	12 10                	adc    dl,BYTE PTR [rax]
    758c:	04 18                	add    al,0x18
    758e:	02 00                	add    al,BYTE PTR [rax]
    7590:	00 08                	add    BYTE PTR [rax],cl
    7592:	2e 27                	cs (bad)
    7594:	00 00                	add    BYTE PTR [rax],al
    7596:	13 25 15 98 21 00    	adc    esp,DWORD PTR [rip+0x219815]        # 220db1 <_end+0x21ad99>
    759c:	00 08                	add    BYTE PTR [rax],cl
    759e:	2a 12                	sub    dl,BYTE PTR [rdx]
    75a0:	00 00                	add    BYTE PTR [rax],al
    75a2:	13 26                	adc    esp,DWORD PTR [rsi]
    75a4:	17                   	(bad)
    75a5:	7c 21                	jl     75c8 <_end+0x15b0>
    75a7:	00 00                	add    BYTE PTR [rax],al
    75a9:	08 a7 2a 00 00 13    	or     BYTE PTR [rdi+0x1300002a],ah
    75af:	27                   	(bad)
    75b0:	1a 9f 21 00 00 08    	sbb    bl,BYTE PTR [rdi+0x8000021]
    75b6:	bf 17 00 00 13       	mov    edi,0x13000017
    75bb:	28 1c 83             	sub    BYTE PTR [rbx+rax*4],bl
    75be:	21 00                	and    DWORD PTR [rax],eax
    75c0:	00 08                	add    BYTE PTR [rax],cl
    75c2:	aa                   	stos   BYTE PTR es:[rdi],al
    75c3:	33 00                	xor    eax,DWORD PTR [rax]
    75c5:	00 13                	add    BYTE PTR [rbx],dl
    75c7:	29 14 a6             	sub    DWORD PTR [rsi+riz*4],edx
    75ca:	21 00                	and    DWORD PTR [rax],eax
    75cc:	00 08                	add    BYTE PTR [rax],cl
    75ce:	53                   	push   rbx
    75cf:	01 00                	add    DWORD PTR [rax],eax
    75d1:	00 13                	add    BYTE PTR [rbx],dl
    75d3:	2a 16                	sub    dl,BYTE PTR [rsi]
    75d5:	e3 20                	jrcxz  75f7 <_end+0x15df>
    75d7:	00 00                	add    BYTE PTR [rax],al
    75d9:	08 a0 30 00 00 13    	or     BYTE PTR [rax+0x13000030],ah
    75df:	2c 19                	sub    al,0x19
    75e1:	b2 21                	mov    dl,0x21
    75e3:	00 00                	add    BYTE PTR [rax],al
    75e5:	08 bd 05 00 00 13    	or     BYTE PTR [rbp+0x13000005],bh
    75eb:	2d 1b 8a 21 00       	sub    eax,0x218a1b
    75f0:	00 08                	add    BYTE PTR [rax],cl
    75f2:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    75f3:	32 00                	xor    al,BYTE PTR [rax]
    75f5:	00 13                	add    BYTE PTR [rbx],dl
    75f7:	34 12                	xor    al,0x12
    75f9:	cc                   	int3
    75fa:	21 00                	and    DWORD PTR [rax],eax
    75fc:	00 08                	add    BYTE PTR [rax],cl
    75fe:	fa                   	cli
    75ff:	0d 00 00 13 35       	or     eax,0x35130000
    7604:	13 d8                	adc    ebx,eax
    7606:	21 00                	and    DWORD PTR [rax],eax
    7608:	00 08                	add    BYTE PTR [rax],cl
    760a:	51                   	push   rcx
    760b:	29 00                	sub    DWORD PTR [rax],eax
    760d:	00 13                	add    BYTE PTR [rbx],dl
    760f:	36 13 e4             	ss adc esp,esp
    7612:	21 00                	and    DWORD PTR [rax],eax
    7614:	00 08                	add    BYTE PTR [rax],cl
    7616:	b1 15                	mov    cl,0x15
    7618:	00 00                	add    BYTE PTR [rax],al
    761a:	13 37                	adc    esi,DWORD PTR [rdi]
    761c:	14 f0                	adc    al,0xf0
    761e:	21 00                	and    DWORD PTR [rax],eax
    7620:	00 08                	add    BYTE PTR [rax],cl
    7622:	4c 32 00             	rex.WR xor r8b,BYTE PTR [rax]
    7625:	00 13                	add    BYTE PTR [rbx],dl
    7627:	38 13                	cmp    BYTE PTR [rbx],dl
    7629:	fc                   	cld
    762a:	21 00                	and    DWORD PTR [rax],eax
    762c:	00 08                	add    BYTE PTR [rax],cl
    762e:	f0 1d 00 00 13 39    	lock sbb eax,0x39130000
    7634:	14 08                	adc    al,0x8
    7636:	22 00                	and    al,BYTE PTR [rax]
    7638:	00 08                	add    BYTE PTR [rax],cl
    763a:	75 2f                	jne    766b <_end+0x1653>
    763c:	00 00                	add    BYTE PTR [rax],al
    763e:	13 3a                	adc    edi,DWORD PTR [rdx]
    7640:	13 14 22             	adc    edx,DWORD PTR [rdx+riz*1]
    7643:	00 00                	add    BYTE PTR [rax],al
    7645:	08 29                	or     BYTE PTR [rcx],ch
    7647:	1a 00                	sbb    al,BYTE PTR [rax]
    7649:	00 13                	add    BYTE PTR [rbx],dl
    764b:	3b 14 20             	cmp    edx,DWORD PTR [rax+riz*1]
    764e:	22 00                	and    al,BYTE PTR [rax]
    7650:	00 08                	add    BYTE PTR [rax],cl
    7652:	c7                   	(bad)
    7653:	23 00                	and    eax,DWORD PTR [rax]
    7655:	00 13                	add    BYTE PTR [rbx],dl
    7657:	48 12 b2 21 00 00 08 	rex.W adc sil,BYTE PTR [rdx+0x8000021]
    765e:	cf                   	iret
    765f:	2f                   	(bad)
    7660:	00 00                	add    BYTE PTR [rax],al
    7662:	13 49 1b             	adc    ecx,DWORD PTR [rcx+0x1b]
    7665:	8a 21                	mov    ah,BYTE PTR [rcx]
    7667:	00 00                	add    BYTE PTR [rax],al
    7669:	08 ac 0b 00 00 13 98 	or     BYTE PTR [rbx+rcx*1-0x67ed0000],ch
    7670:	19 b2 21 00 00 08    	sbb    DWORD PTR [rdx+0x8000021],esi
    7676:	7d 2b                	jge    76a3 <_end+0x168b>
    7678:	00 00                	add    BYTE PTR [rax],al
    767a:	13 99 1b b2 21 00    	adc    ebx,DWORD PTR [rcx+0x21b21b]
    7680:	00 08                	add    BYTE PTR [rax],cl
    7682:	42 25 00 00 13 9c    	rex.X and eax,0x9c130000
    7688:	1b b2 21 00 00 08    	sbb    esi,DWORD PTR [rdx+0x8000021]
    768e:	a3 0b 00 00 13 a0 1a 	movabs ds:0x21b21aa01300000b,eax
    7695:	b2 21 
    7697:	00 00                	add    BYTE PTR [rax],al
    7699:	77 08                	ja     76a3 <_end+0x168b>
    769b:	08 16                	or     BYTE PTR [rsi],dl
    769d:	0b 00                	or     eax,DWORD PTR [rax]
    769f:	00 13                	add    BYTE PTR [rbx],dl
    76a1:	c5 21 b2             	(bad)
    76a4:	21 00                	and    DWORD PTR [rax],eax
    76a6:	00 0d e7 22 00 00    	add    BYTE PTR [rip+0x22e7],cl        # 9993 <_end+0x397b>
    76ac:	12 01                	adc    al,BYTE PTR [rcx]
    76ae:	06                   	(bad)
    76af:	2d 02 00 00 13       	sub    eax,0x13000002
    76b4:	e7 22                	out    0x22,eax
    76b6:	00 00                	add    BYTE PTR [rax],al
    76b8:	08 7a 26             	or     BYTE PTR [rdx+0x26],bh
    76bb:	00 00                	add    BYTE PTR [rax],al
    76bd:	14 a3                	adc    al,0xa3
    76bf:	0f 35                	sysexitd
    76c1:	00 00                	add    BYTE PTR [rax],al
    76c3:	00 08                	add    BYTE PTR [rax],cl
    76c5:	e8 23 00 00 14       	call   140076ed <_end+0x140016d5>
    76ca:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    76cb:	10 2e                	adc    BYTE PTR [rsi],ch
    76cd:	00 00                	add    BYTE PTR [rax],al
    76cf:	00 12                	add    BYTE PTR [rdx],dl
    76d1:	04 04                	add    al,0x4
    76d3:	da 2e                	fisubr DWORD PTR [rsi]
    76d5:	00 00                	add    BYTE PTR [rax],al
    76d7:	12 08                	adc    cl,BYTE PTR [rax]
    76d9:	04 6e                	add    al,0x6e
    76db:	32 00                	xor    al,BYTE PTR [rax]
    76dd:	00 12                	add    BYTE PTR [rdx],dl
    76df:	10 04 93             	adc    BYTE PTR [rbx+rdx*4],al
    76e2:	31 00                	xor    DWORD PTR [rax],eax
    76e4:	00 12                	add    BYTE PTR [rdx],dl
    76e6:	08 04 15 1a 00 00 12 	or     BYTE PTR [rdx*1+0x1200001a],al
    76ed:	10 04 bc             	adc    BYTE PTR [rsp+rdi*4],al
    76f0:	0c 00                	or     al,0x0
    76f2:	00 08                	add    BYTE PTR [rax],cl
    76f4:	37                   	(bad)
    76f5:	0b 00                	or     eax,DWORD PTR [rax]
    76f7:	00 15 d6 17 8a 21    	add    BYTE PTR [rip+0x218a17d6],dl        # 218a8ed3 <_end+0x218a2ebb>
    76fd:	00 00                	add    BYTE PTR [rax],al
    76ff:	35 08 16 3c 03       	xor    eax,0x33c1608
    7704:	e3 02                	jrcxz  7708 <_end+0x16f0>
    7706:	00 00                	add    BYTE PTR [rax],al
    7708:	61                   	(bad)
    7709:	23 00                	and    eax,DWORD PTR [rax]
    770b:	00 06                	add    BYTE PTR [rsi],al
    770d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    770e:	02 00                	add    al,BYTE PTR [rax]
    7710:	00 16                	add    BYTE PTR [rsi],dl
    7712:	3d 09 a6 21 00       	cmp    eax,0x21a609
    7717:	00 00                	add    BYTE PTR [rax],al
    7719:	45 72 65             	rex.RB jb 7781 <_end+0x1769>
    771c:	6d                   	ins    DWORD PTR es:[rdi],dx
    771d:	00 3e                	add    BYTE PTR [rsi],bh
    771f:	09 a6 21 00 00 04    	or     DWORD PTR [rsi+0x4000021],esp
    7725:	00 08                	add    BYTE PTR [rax],cl
    7727:	e4 02                	in     al,0x2
    7729:	00 00                	add    BYTE PTR [rax],al
    772b:	16                   	(bad)
    772c:	3f                   	(bad)
    772d:	05 3a 23 00 00       	add    eax,0x233a
    7732:	35 10 16 44 03       	xor    eax,0x3441610
    7737:	09 00                	or     DWORD PTR [rax],eax
    7739:	00 00                	add    BYTE PTR [rax],al
    773b:	94                   	xchg   esp,eax
    773c:	23 00                	and    eax,DWORD PTR [rax]
    773e:	00 06                	add    BYTE PTR [rsi],al
    7740:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7741:	02 00                	add    al,BYTE PTR [rax]
    7743:	00 16                	add    BYTE PTR [rsi],dl
    7745:	45 0e                	rex.RB (bad)
    7747:	b2 21                	mov    dl,0x21
    7749:	00 00                	add    BYTE PTR [rax],al
    774b:	00 45 72             	add    BYTE PTR [rbp+0x72],al
    774e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    7750:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    7753:	b2 21                	mov    dl,0x21
    7755:	00 00                	add    BYTE PTR [rax],al
    7757:	08 00                	or     BYTE PTR [rax],al
    7759:	08 0a                	or     BYTE PTR [rdx],cl
    775b:	00 00                	add    BYTE PTR [rax],al
    775d:	00 16                	add    BYTE PTR [rsi],dl
    775f:	47 05 6d 23 00 00    	rex.RXB add eax,0x236d
    7765:	35 10 16 4e 03       	xor    eax,0x34e1610
    776a:	d4                   	(bad)
    776b:	01 00                	add    DWORD PTR [rax],eax
    776d:	00 c7                	add    bh,al
    776f:	23 00                	and    eax,DWORD PTR [rax]
    7771:	00 06                	add    BYTE PTR [rsi],al
    7773:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7774:	02 00                	add    al,BYTE PTR [rax]
    7776:	00 16                	add    BYTE PTR [rsi],dl
    7778:	4f 13 be 21 00 00 00 	rex.WRXB adc r15,QWORD PTR [r14+0x21]
    777f:	45 72 65             	rex.RB jb 77e7 <_end+0x17cf>
    7782:	6d                   	ins    DWORD PTR es:[rdi],dx
    7783:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    7786:	be 21 00 00 08       	mov    esi,0x8000021
    778b:	00 08                	add    BYTE PTR [rax],cl
    778d:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
    7791:	16                   	(bad)
    7792:	51                   	push   rcx
    7793:	05 a0 23 00 00       	add    eax,0x23a0
    7798:	0d ee 22 00 00       	or     eax,0x22ee
    779d:	57                   	push   rdi
    779e:	d3 23                	shl    DWORD PTR [rbx],cl
    77a0:	00 00                	add    BYTE PTR [rax],al
    77a2:	08 44 25 00          	or     BYTE PTR [rbp+riz*1+0x0],al
    77a6:	00 17                	add    BYTE PTR [rdi],dl
    77a8:	07                   	(bad)
    77a9:	13 bc 22 00 00 08 a5 	adc    edi,DWORD PTR [rdx+riz*1-0x5af80000]
    77b0:	0b 00                	or     eax,DWORD PTR [rax]
    77b2:	00 18                	add    BYTE PTR [rax],bl
    77b4:	0a 12                	or     dl,BYTE PTR [rdx]
    77b6:	c8 22 00 00          	enter  0x22,0x0
    77ba:	13 e9                	adc    ebp,ecx
    77bc:	23 00                	and    eax,DWORD PTR [rax]
    77be:	00 08                	add    BYTE PTR [rax],cl
    77c0:	30 27                	xor    BYTE PTR [rdi],ah
    77c2:	00 00                	add    BYTE PTR [rax],al
    77c4:	19 18                	sbb    DWORD PTR [rax],ebx
    77c6:	12 cc                	adc    cl,ah
    77c8:	21 00                	and    DWORD PTR [rax],eax
    77ca:	00 08                	add    BYTE PTR [rax],cl
    77cc:	a9 2a 00 00 19       	test   eax,0x1900002a
    77d1:	19 13                	sbb    DWORD PTR [rbx],edx
    77d3:	e4 21                	in     al,0x21
    77d5:	00 00                	add    BYTE PTR [rax],al
    77d7:	08 ac 33 00 00 19 1a 	or     BYTE PTR [rbx+rsi*1+0x1a190000],ch
    77de:	13 fc                	adc    edi,esp
    77e0:	21 00                	and    DWORD PTR [rax],eax
    77e2:	00 08                	add    BYTE PTR [rax],cl
    77e4:	a2 30 00 00 19 1b 13 	movabs ds:0x2214131b19000030,al
    77eb:	14 22 
    77ed:	00 00                	add    BYTE PTR [rax],al
    77ef:	1b 70 0b             	sbb    esi,DWORD PTR [rax+0xb]
    77f2:	00 00                	add    BYTE PTR [rax],al
    77f4:	10 1a                	adc    BYTE PTR [rdx],bl
    77f6:	0b 08                	or     ecx,DWORD PTR [rax]
    77f8:	52                   	push   rdx
    77f9:	24 00                	and    al,0x0
    77fb:	00 06                	add    BYTE PTR [rsi],al
    77fd:	0f 0b                	ud2
    77ff:	00 00                	add    BYTE PTR [rax],al
    7801:	1a 10                	sbb    dl,BYTE PTR [rax]
    7803:	0c c8                	or     al,0xc8
    7805:	22 00                	and    al,BYTE PTR [rax]
    7807:	00 00                	add    BYTE PTR [rax],al
    7809:	06                   	(bad)
    780a:	ff 0a                	dec    DWORD PTR [rdx]
    780c:	00 00                	add    BYTE PTR [rax],al
    780e:	1a 15 15 d6 22 00    	sbb    dl,BYTE PTR [rip+0x22d615]        # 234e29 <_end+0x22ee11>
    7814:	00 08                	add    BYTE PTR [rax],cl
    7816:	00 26                	add    BYTE PTR [rsi],ah
    7818:	e7 22                	out    0x22,eax
    781a:	00 00                	add    BYTE PTR [rax],al
    781c:	62 24 00             	(bad)
    781f:	00 27                	add    BYTE PTR [rdi],ah
    7821:	8a 21                	mov    ah,BYTE PTR [rcx]
    7823:	00 00                	add    BYTE PTR [rax],al
    7825:	03 00                	add    eax,DWORD PTR [rax]
    7827:	41                   	rex.B
    7828:	d5 02 00 00          	{rex2 0x2} add BYTE PTR [rax],al
    782c:	16                   	(bad)
    782d:	b4 03                	mov    ah,0x3
    782f:	0f 6f 24 00          	movq   mm4,QWORD PTR [rax+rax*1]
    7833:	00 0d 74 24 00 00    	add    BYTE PTR [rip+0x2474],cl        # 9cad <_end+0x3c95>
    7839:	58                   	pop    rax
    783a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    783b:	21 00                	and    DWORD PTR [rax],eax
    783d:	00 88 24 00 00 01    	add    BYTE PTR [rax+0x1000024],cl
    7843:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    7846:	00 01                	add    BYTE PTR [rcx],al
    7848:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    784b:	00 00                	add    BYTE PTR [rax],al
    784d:	0d 8d 24 00 00       	or     eax,0x248d
    7852:	78 12                	js     7866 <_end+0x184e>
    7854:	10 07                	adc    BYTE PTR [rdi],al
    7856:	4d 08 00             	rex.WRB or BYTE PTR [r8],r8b
    7859:	00 12                	add    BYTE PTR [rdx],dl
    785b:	10 05 0f 02 00 00    	adc    BYTE PTR [rip+0x20f],al        # 7a70 <_end+0x1a58>
    7861:	12 04 05 86 02 00 00 	adc    al,BYTE PTR [rax*1+0x286]
    7868:	13 9c 24 00 00 12 02 	adc    ebx,DWORD PTR [rsp+0x2120000]
    786f:	10 77 32             	adc    BYTE PTR [rdi+0x32],dh
    7872:	00 00                	add    BYTE PTR [rax],al
    7874:	12 04 10             	adc    al,BYTE PTR [rax+rdx*1]
    7877:	95                   	xchg   ebp,eax
    7878:	2c 00                	sub    al,0x0
    787a:	00 33                	add    BYTE PTR [rbx],dh
    787c:	e4 1d                	in     al,0x1d
    787e:	00 00                	add    BYTE PTR [rax],al
    7880:	06                   	(bad)
    7881:	38 0b                	cmp    BYTE PTR [rbx],cl
    7883:	cb                   	retf
    7884:	24 00                	and    al,0x0
    7886:	00 79 06             	add    BYTE PTR [rcx+0x6],bh
    7889:	3a 18                	cmp    bl,BYTE PTR [rax]
    788b:	69 00 00 00 00 12    	imul   eax,DWORD PTR [rax],0x12000000
    7891:	10 04 a4             	adc    BYTE PTR [rsp+riz*4],al
    7894:	02 00                	add    al,BYTE PTR [rax]
    7896:	00 02                	add    BYTE PTR [rdx],al
    7898:	1b 26                	sbb    esp,DWORD PTR [rsi]
    789a:	0c 71                	or     al,0x71
    789c:	00 00                	add    BYTE PTR [rax],al
    789e:	00 02                	add    BYTE PTR [rdx],al
    78a0:	1b 26                	sbb    esp,DWORD PTR [rsi]
    78a2:	0c 8a                	or     al,0x8a
    78a4:	00 00                	add    BYTE PTR [rax],al
    78a6:	00 02                	add    BYTE PTR [rdx],al
    78a8:	1b 26                	sbb    esp,DWORD PTR [rsi]
    78aa:	0c a3                	or     al,0xa3
    78ac:	00 00                	add    BYTE PTR [rax],al
    78ae:	00 02                	add    BYTE PTR [rdx],al
    78b0:	1b 26                	sbb    esp,DWORD PTR [rsi]
    78b2:	0c bc                	or     al,0xbc
    78b4:	00 00                	add    BYTE PTR [rax],al
    78b6:	00 02                	add    BYTE PTR [rdx],al
    78b8:	1b 26                	sbb    esp,DWORD PTR [rsi]
    78ba:	0c d5                	or     al,0xd5
    78bc:	00 00                	add    BYTE PTR [rax],al
    78be:	00 02                	add    BYTE PTR [rdx],al
    78c0:	1b 26                	sbb    esp,DWORD PTR [rsi]
    78c2:	0c ee                	or     al,0xee
    78c4:	00 00                	add    BYTE PTR [rax],al
    78c6:	00 02                	add    BYTE PTR [rdx],al
    78c8:	1b 26                	sbb    esp,DWORD PTR [rsi]
    78ca:	0c 07                	or     al,0x7
    78cc:	01 00                	add    DWORD PTR [rax],eax
    78ce:	00 02                	add    BYTE PTR [rdx],al
    78d0:	1b 27                	sbb    esp,DWORD PTR [rdi]
    78d2:	0c 20                	or     al,0x20
    78d4:	01 00                	add    DWORD PTR [rax],eax
    78d6:	00 02                	add    BYTE PTR [rdx],al
    78d8:	1b 27                	sbb    esp,DWORD PTR [rdi]
    78da:	0c 3a                	or     al,0x3a
    78dc:	01 00                	add    DWORD PTR [rax],eax
    78de:	00 02                	add    BYTE PTR [rdx],al
    78e0:	1b 28                	sbb    ebp,DWORD PTR [rax]
    78e2:	0c 54                	or     al,0x54
    78e4:	01 00                	add    DWORD PTR [rax],eax
    78e6:	00 02                	add    BYTE PTR [rdx],al
    78e8:	1b 28                	sbb    ebp,DWORD PTR [rax]
    78ea:	0c 6e                	or     al,0x6e
    78ec:	01 00                	add    DWORD PTR [rax],eax
    78ee:	00 02                	add    BYTE PTR [rdx],al
    78f0:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    78f2:	0c 88                	or     al,0x88
    78f4:	01 00                	add    DWORD PTR [rax],eax
    78f6:	00 02                	add    BYTE PTR [rdx],al
    78f8:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    78fa:	0c a2                	or     al,0xa2
    78fc:	01 00                	add    DWORD PTR [rax],eax
    78fe:	00 02                	add    BYTE PTR [rdx],al
    7900:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    7902:	0c bc                	or     al,0xbc
    7904:	01 00                	add    DWORD PTR [rax],eax
    7906:	00 02                	add    BYTE PTR [rdx],al
    7908:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    790a:	0c db                	or     al,0xdb
    790c:	01 00                	add    DWORD PTR [rax],eax
    790e:	00 02                	add    BYTE PTR [rdx],al
    7910:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    7912:	0c fa                	or     al,0xfa
    7914:	01 00                	add    DWORD PTR [rax],eax
    7916:	00 02                	add    BYTE PTR [rdx],al
    7918:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    791a:	0c 13                	or     al,0x13
    791c:	02 00                	add    al,BYTE PTR [rax]
    791e:	00 02                	add    BYTE PTR [rdx],al
    7920:	1b 2c 0c             	sbb    ebp,DWORD PTR [rsp+rcx*1]
    7923:	2c 02                	sub    al,0x2
    7925:	00 00                	add    BYTE PTR [rax],al
    7927:	02 1b                	add    bl,BYTE PTR [rbx]
    7929:	2c 0c                	sub    al,0xc
    792b:	45 02 00             	add    r8b,BYTE PTR [r8]
    792e:	00 02                	add    BYTE PTR [rdx],al
    7930:	1b 2d 0c 5e 02 00    	sbb    ebp,DWORD PTR [rip+0x25e0c]        # 2d742 <_end+0x2772a>
    7936:	00 02                	add    BYTE PTR [rdx],al
    7938:	1b 2d 0c 77 02 00    	sbb    ebp,DWORD PTR [rip+0x2770c]        # 2f04a <_end+0x29032>
    793e:	00 02                	add    BYTE PTR [rdx],al
    7940:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    7942:	0c 90                	or     al,0x90
    7944:	02 00                	add    al,BYTE PTR [rax]
    7946:	00 02                	add    BYTE PTR [rdx],al
    7948:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    794a:	0c aa                	or     al,0xaa
    794c:	02 00                	add    al,BYTE PTR [rax]
    794e:	00 02                	add    BYTE PTR [rdx],al
    7950:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7952:	0c c4                	or     al,0xc4
    7954:	02 00                	add    al,BYTE PTR [rax]
    7956:	00 02                	add    BYTE PTR [rdx],al
    7958:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    795a:	0c df                	or     al,0xdf
    795c:	02 00                	add    al,BYTE PTR [rax]
    795e:	00 02                	add    BYTE PTR [rdx],al
    7960:	1b 30                	sbb    esi,DWORD PTR [rax]
    7962:	0c fa                	or     al,0xfa
    7964:	02 00                	add    al,BYTE PTR [rax]
    7966:	00 02                	add    BYTE PTR [rdx],al
    7968:	1b 30                	sbb    esi,DWORD PTR [rax]
    796a:	0c 15                	or     al,0x15
    796c:	03 00                	add    eax,DWORD PTR [rax]
    796e:	00 02                	add    BYTE PTR [rdx],al
    7970:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7972:	0c 30                	or     al,0x30
    7974:	03 00                	add    eax,DWORD PTR [rax]
    7976:	00 02                	add    BYTE PTR [rdx],al
    7978:	1b 31                	sbb    esi,DWORD PTR [rcx]
    797a:	0c 49                	or     al,0x49
    797c:	03 00                	add    eax,DWORD PTR [rax]
    797e:	00 0d a6 21 00 00    	add    BYTE PTR [rip+0x21a6],cl        # 9b2a <_end+0x3b12>
    7984:	02 1b                	add    bl,BYTE PTR [rbx]
    7986:	32 0c 62             	xor    cl,BYTE PTR [rdx+riz*2]
    7989:	03 00                	add    eax,DWORD PTR [rax]
    798b:	00 02                	add    BYTE PTR [rdx],al
    798d:	1b 32                	sbb    esi,DWORD PTR [rdx]
    798f:	0c 82                	or     al,0x82
    7991:	03 00                	add    eax,DWORD PTR [rax]
    7993:	00 02                	add    BYTE PTR [rdx],al
    7995:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7997:	0c a2                	or     al,0xa2
    7999:	03 00                	add    eax,DWORD PTR [rax]
    799b:	00 02                	add    BYTE PTR [rdx],al
    799d:	1b 33                	sbb    esi,DWORD PTR [rbx]
    799f:	0c c2                	or     al,0xc2
    79a1:	03 00                	add    eax,DWORD PTR [rax]
    79a3:	00 02                	add    BYTE PTR [rdx],al
    79a5:	1b 34 0c             	sbb    esi,DWORD PTR [rsp+rcx*1]
    79a8:	e2 03                	loop   79ad <_end+0x1995>
    79aa:	00 00                	add    BYTE PTR [rax],al
    79ac:	02 1b                	add    bl,BYTE PTR [rbx]
    79ae:	34 0c                	xor    al,0xc
    79b0:	fb                   	sti
    79b1:	03 00                	add    eax,DWORD PTR [rax]
    79b3:	00 02                	add    BYTE PTR [rdx],al
    79b5:	1b 35 0c 14 04 00    	sbb    esi,DWORD PTR [rip+0x4140c]        # 48dc7 <_end+0x42daf>
    79bb:	00 02                	add    BYTE PTR [rdx],al
    79bd:	1b 35 0c 2f 04 00    	sbb    esi,DWORD PTR [rip+0x42f0c]        # 4a8cf <_end+0x448b7>
    79c3:	00 0d c5 21 00 00    	add    BYTE PTR [rip+0x21c5],cl        # 9b8e <_end+0x3b76>
    79c9:	02 1b                	add    bl,BYTE PTR [rbx]
    79cb:	36 0c 4a             	ss or  al,0x4a
    79ce:	04 00                	add    al,0x0
    79d0:	00 0d 35 00 00 00    	add    BYTE PTR [rip+0x35],cl        # 7a0b <_end+0x19f3>
    79d6:	02 1b                	add    bl,BYTE PTR [rbx]
    79d8:	36 0c 6a             	ss or  al,0x6a
    79db:	04 00                	add    al,0x0
    79dd:	00 02                	add    BYTE PTR [rdx],al
    79df:	1b 37                	sbb    esi,DWORD PTR [rdi]
    79e1:	0c 8a                	or     al,0x8a
    79e3:	04 00                	add    al,0x0
    79e5:	00 02                	add    BYTE PTR [rdx],al
    79e7:	1b 37                	sbb    esi,DWORD PTR [rdi]
    79e9:	0c a8                	or     al,0xa8
    79eb:	04 00                	add    al,0x0
    79ed:	00 02                	add    BYTE PTR [rdx],al
    79ef:	1b 38                	sbb    edi,DWORD PTR [rax]
    79f1:	0c c6                	or     al,0xc6
    79f3:	04 00                	add    al,0x0
    79f5:	00 02                	add    BYTE PTR [rdx],al
    79f7:	1b 38                	sbb    edi,DWORD PTR [rax]
    79f9:	0c e1                	or     al,0xe1
    79fb:	04 00                	add    al,0x0
    79fd:	00 02                	add    BYTE PTR [rdx],al
    79ff:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7a01:	0c fc                	or     al,0xfc
    7a03:	04 00                	add    al,0x0
    7a05:	00 02                	add    BYTE PTR [rdx],al
    7a07:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7a09:	0c 16                	or     al,0x16
    7a0b:	05 00 00 02 1b       	add    eax,0x1b020000
    7a10:	3a 0c 30             	cmp    cl,BYTE PTR [rax+rsi*1]
    7a13:	05 00 00 02 1b       	add    eax,0x1b020000
    7a18:	3a 0c 4a             	cmp    cl,BYTE PTR [rdx+rcx*2]
    7a1b:	05 00 00 02 1b       	add    eax,0x1b020000
    7a20:	3b 0c 64             	cmp    ecx,DWORD PTR [rsp+riz*2]
    7a23:	05 00 00 02 1b       	add    eax,0x1b020000
    7a28:	3b 0c 7f             	cmp    ecx,DWORD PTR [rdi+rdi*2]
    7a2b:	05 00 00 02 1b       	add    eax,0x1b020000
    7a30:	3c 0c                	cmp    al,0xc
    7a32:	99                   	cdq
    7a33:	05 00 00 02 1b       	add    eax,0x1b020000
    7a38:	3c 0c                	cmp    al,0xc
    7a3a:	b9 05 00 00 02       	mov    ecx,0x2000005
    7a3f:	1b 3f                	sbb    edi,DWORD PTR [rdi]
    7a41:	0c d9                	or     al,0xd9
    7a43:	05 00 00 02 1b       	add    eax,0x1b020000
    7a48:	3f                   	(bad)
    7a49:	0c f4                	or     al,0xf4
    7a4b:	05 00 00 02 1b       	add    eax,0x1b020000
    7a50:	3f                   	(bad)
    7a51:	0c 0f                	or     al,0xf
    7a53:	06                   	(bad)
    7a54:	00 00                	add    BYTE PTR [rax],al
    7a56:	02 1b                	add    bl,BYTE PTR [rbx]
    7a58:	40 0c 2a             	rex or al,0x2a
    7a5b:	06                   	(bad)
    7a5c:	00 00                	add    BYTE PTR [rax],al
    7a5e:	02 1b                	add    bl,BYTE PTR [rbx]
    7a60:	40 0c 45             	rex or al,0x45
    7a63:	06                   	(bad)
    7a64:	00 00                	add    BYTE PTR [rax],al
    7a66:	02 1b                	add    bl,BYTE PTR [rbx]
    7a68:	40 0c 60             	rex or al,0x60
    7a6b:	06                   	(bad)
    7a6c:	00 00                	add    BYTE PTR [rax],al
    7a6e:	02 1b                	add    bl,BYTE PTR [rbx]
    7a70:	41 0c 7b             	rex.B or al,0x7b
    7a73:	06                   	(bad)
    7a74:	00 00                	add    BYTE PTR [rax],al
    7a76:	02 1b                	add    bl,BYTE PTR [rbx]
    7a78:	41 0c 96             	rex.B or al,0x96
    7a7b:	06                   	(bad)
    7a7c:	00 00                	add    BYTE PTR [rax],al
    7a7e:	02 1b                	add    bl,BYTE PTR [rbx]
    7a80:	41 0c b1             	rex.B or al,0xb1
    7a83:	06                   	(bad)
    7a84:	00 00                	add    BYTE PTR [rax],al
    7a86:	02 1b                	add    bl,BYTE PTR [rbx]
    7a88:	42 0c cc             	rex.X or al,0xcc
    7a8b:	06                   	(bad)
    7a8c:	00 00                	add    BYTE PTR [rax],al
    7a8e:	02 1b                	add    bl,BYTE PTR [rbx]
    7a90:	42 0c e7             	rex.X or al,0xe7
    7a93:	06                   	(bad)
    7a94:	00 00                	add    BYTE PTR [rax],al
    7a96:	02 1b                	add    bl,BYTE PTR [rbx]
    7a98:	42 0c 02             	rex.X or al,0x2
    7a9b:	07                   	(bad)
    7a9c:	00 00                	add    BYTE PTR [rax],al
    7a9e:	02 1b                	add    bl,BYTE PTR [rbx]
    7aa0:	43 0c 1d             	rex.XB or al,0x1d
    7aa3:	07                   	(bad)
    7aa4:	00 00                	add    BYTE PTR [rax],al
    7aa6:	02 1b                	add    bl,BYTE PTR [rbx]
    7aa8:	43 0c 38             	rex.XB or al,0x38
    7aab:	07                   	(bad)
    7aac:	00 00                	add    BYTE PTR [rax],al
    7aae:	02 1b                	add    bl,BYTE PTR [rbx]
    7ab0:	43 0c 53             	rex.XB or al,0x53
    7ab3:	07                   	(bad)
    7ab4:	00 00                	add    BYTE PTR [rax],al
    7ab6:	02 1b                	add    bl,BYTE PTR [rbx]
    7ab8:	44 0c 6e             	rex.R or al,0x6e
    7abb:	07                   	(bad)
    7abc:	00 00                	add    BYTE PTR [rax],al
    7abe:	02 1b                	add    bl,BYTE PTR [rbx]
    7ac0:	44 0c 89             	rex.R or al,0x89
    7ac3:	07                   	(bad)
    7ac4:	00 00                	add    BYTE PTR [rax],al
    7ac6:	02 1b                	add    bl,BYTE PTR [rbx]
    7ac8:	44 0c a4             	rex.R or al,0xa4
    7acb:	07                   	(bad)
    7acc:	00 00                	add    BYTE PTR [rax],al
    7ace:	02 1b                	add    bl,BYTE PTR [rbx]
    7ad0:	45 0c bf             	rex.RB or al,0xbf
    7ad3:	07                   	(bad)
    7ad4:	00 00                	add    BYTE PTR [rax],al
    7ad6:	02 1b                	add    bl,BYTE PTR [rbx]
    7ad8:	45 0c df             	rex.RB or al,0xdf
    7adb:	07                   	(bad)
    7adc:	00 00                	add    BYTE PTR [rax],al
    7ade:	02 1b                	add    bl,BYTE PTR [rbx]
    7ae0:	45 0c ff             	rex.RB or al,0xff
    7ae3:	07                   	(bad)
    7ae4:	00 00                	add    BYTE PTR [rax],al
    7ae6:	02 1b                	add    bl,BYTE PTR [rbx]
    7ae8:	46 0c 1f             	rex.RX or al,0x1f
    7aeb:	08 00                	or     BYTE PTR [rax],al
    7aed:	00 02                	add    BYTE PTR [rdx],al
    7aef:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7af2:	3f                   	(bad)
    7af3:	08 00                	or     BYTE PTR [rax],al
    7af5:	00 02                	add    BYTE PTR [rdx],al
    7af7:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7afa:	5f                   	pop    rdi
    7afb:	08 00                	or     BYTE PTR [rax],al
    7afd:	00 02                	add    BYTE PTR [rdx],al
    7aff:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7b02:	7f 08                	jg     7b0c <_end+0x1af4>
    7b04:	00 00                	add    BYTE PTR [rax],al
    7b06:	02 1b                	add    bl,BYTE PTR [rbx]
    7b08:	47 0c 9f             	rex.RXB or al,0x9f
    7b0b:	08 00                	or     BYTE PTR [rax],al
    7b0d:	00 02                	add    BYTE PTR [rdx],al
    7b0f:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7b12:	bf 08 00 00 02       	mov    edi,0x2000008
    7b17:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7b1a:	df 08                	fisttp WORD PTR [rax]
    7b1c:	00 00                	add    BYTE PTR [rax],al
    7b1e:	02 1b                	add    bl,BYTE PTR [rbx]
    7b20:	48 0c ff             	rex.W or al,0xff
    7b23:	08 00                	or     BYTE PTR [rax],al
    7b25:	00 02                	add    BYTE PTR [rdx],al
    7b27:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7b2a:	1f                   	(bad)
    7b2b:	09 00                	or     DWORD PTR [rax],eax
    7b2d:	00 02                	add    BYTE PTR [rdx],al
    7b2f:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7b32:	3f                   	(bad)
    7b33:	09 00                	or     DWORD PTR [rax],eax
    7b35:	00 02                	add    BYTE PTR [rdx],al
    7b37:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7b3a:	5f                   	pop    rdi
    7b3b:	09 00                	or     DWORD PTR [rax],eax
    7b3d:	00 02                	add    BYTE PTR [rdx],al
    7b3f:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7b42:	7f 09                	jg     7b4d <_end+0x1b35>
    7b44:	00 00                	add    BYTE PTR [rax],al
    7b46:	02 1b                	add    bl,BYTE PTR [rbx]
    7b48:	4a 0c 9f             	rex.WX or al,0x9f
    7b4b:	09 00                	or     DWORD PTR [rax],eax
    7b4d:	00 02                	add    BYTE PTR [rdx],al
    7b4f:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7b52:	bf 09 00 00 02       	mov    edi,0x2000009
    7b57:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7b5a:	df 09                	fisttp WORD PTR [rcx]
    7b5c:	00 00                	add    BYTE PTR [rax],al
    7b5e:	02 1b                	add    bl,BYTE PTR [rbx]
    7b60:	4e 0c ff             	rex.WRX or al,0xff
    7b63:	09 00                	or     DWORD PTR [rax],eax
    7b65:	00 02                	add    BYTE PTR [rdx],al
    7b67:	1b 4e 0c             	sbb    ecx,DWORD PTR [rsi+0xc]
    7b6a:	1a 0a                	sbb    cl,BYTE PTR [rdx]
    7b6c:	00 00                	add    BYTE PTR [rax],al
    7b6e:	02 1b                	add    bl,BYTE PTR [rbx]
    7b70:	4f 0c 35             	rex.WRXB or al,0x35
    7b73:	0a 00                	or     al,BYTE PTR [rax]
    7b75:	00 02                	add    BYTE PTR [rdx],al
    7b77:	1b 4f 0c             	sbb    ecx,DWORD PTR [rdi+0xc]
    7b7a:	50                   	push   rax
    7b7b:	0a 00                	or     al,BYTE PTR [rax]
    7b7d:	00 02                	add    BYTE PTR [rdx],al
    7b7f:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7b82:	6b 0a 00             	imul   ecx,DWORD PTR [rdx],0x0
    7b85:	00 02                	add    BYTE PTR [rdx],al
    7b87:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7b8a:	86 0a                	xchg   BYTE PTR [rdx],cl
    7b8c:	00 00                	add    BYTE PTR [rax],al
    7b8e:	02 1b                	add    bl,BYTE PTR [rbx]
    7b90:	51                   	push   rcx
    7b91:	0c a1                	or     al,0xa1
    7b93:	0a 00                	or     al,BYTE PTR [rax]
    7b95:	00 02                	add    BYTE PTR [rdx],al
    7b97:	1b 51 0c             	sbb    edx,DWORD PTR [rcx+0xc]
    7b9a:	bc 0a 00 00 02       	mov    esp,0x200000a
    7b9f:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7ba2:	d7                   	xlat   BYTE PTR ds:[rbx]
    7ba3:	0a 00                	or     al,BYTE PTR [rax]
    7ba5:	00 02                	add    BYTE PTR [rdx],al
    7ba7:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7baa:	f7 0a 00 00 02 1b    	test   DWORD PTR [rdx],0x1b020000
    7bb0:	53                   	push   rbx
    7bb1:	0c 17                	or     al,0x17
    7bb3:	0b 00                	or     eax,DWORD PTR [rax]
    7bb5:	00 02                	add    BYTE PTR [rdx],al
    7bb7:	1b 53 0c             	sbb    edx,DWORD PTR [rbx+0xc]
    7bba:	30 0b                	xor    BYTE PTR [rbx],cl
    7bbc:	00 00                	add    BYTE PTR [rax],al
    7bbe:	02 1b                	add    bl,BYTE PTR [rbx]
    7bc0:	54                   	push   rsp
    7bc1:	0c 49                	or     al,0x49
    7bc3:	0b 00                	or     eax,DWORD PTR [rax]
    7bc5:	00 02                	add    BYTE PTR [rdx],al
    7bc7:	1b 54 0c 64          	sbb    edx,DWORD PTR [rsp+rcx*1+0x64]
    7bcb:	0b 00                	or     eax,DWORD PTR [rax]
    7bcd:	00 02                	add    BYTE PTR [rdx],al
    7bcf:	1b 55 0c             	sbb    edx,DWORD PTR [rbp+0xc]
    7bd2:	7f 0b                	jg     7bdf <_end+0x1bc7>
    7bd4:	00 00                	add    BYTE PTR [rax],al
    7bd6:	02 1b                	add    bl,BYTE PTR [rbx]
    7bd8:	55                   	push   rbp
    7bd9:	0c 9a                	or     al,0x9a
    7bdb:	0b 00                	or     eax,DWORD PTR [rax]
    7bdd:	00 02                	add    BYTE PTR [rdx],al
    7bdf:	1b 56 0c             	sbb    edx,DWORD PTR [rsi+0xc]
    7be2:	b5 0b                	mov    ch,0xb
    7be4:	00 00                	add    BYTE PTR [rax],al
    7be6:	02 1b                	add    bl,BYTE PTR [rbx]
    7be8:	56                   	push   rsi
    7be9:	0c d0                	or     al,0xd0
    7beb:	0b 00                	or     eax,DWORD PTR [rax]
    7bed:	00 02                	add    BYTE PTR [rdx],al
    7bef:	1b 57 0c             	sbb    edx,DWORD PTR [rdi+0xc]
    7bf2:	eb 0b                	jmp    7bff <_end+0x1be7>
    7bf4:	00 00                	add    BYTE PTR [rax],al
    7bf6:	02 1b                	add    bl,BYTE PTR [rbx]
    7bf8:	57                   	push   rdi
    7bf9:	0c 0b                	or     al,0xb
    7bfb:	0c 00                	or     al,0x0
    7bfd:	00 02                	add    BYTE PTR [rdx],al
    7bff:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7c02:	2b 0c 00             	sub    ecx,DWORD PTR [rax+rax*1]
    7c05:	00 02                	add    BYTE PTR [rdx],al
    7c07:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7c0a:	4e 0c 00             	rex.WRX or al,0x0
    7c0d:	00 02                	add    BYTE PTR [rdx],al
    7c0f:	1b 59 0c             	sbb    ebx,DWORD PTR [rcx+0xc]
    7c12:	71 0c                	jno    7c20 <_end+0x1c08>
    7c14:	00 00                	add    BYTE PTR [rax],al
    7c16:	02 1b                	add    bl,BYTE PTR [rbx]
    7c18:	59                   	pop    rcx
    7c19:	0c 91                	or     al,0x91
    7c1b:	0c 00                	or     al,0x0
    7c1d:	00 02                	add    BYTE PTR [rdx],al
    7c1f:	1b 5a 0c             	sbb    ebx,DWORD PTR [rdx+0xc]
    7c22:	b1 0c                	mov    cl,0xc
    7c24:	00 00                	add    BYTE PTR [rax],al
    7c26:	02 1b                	add    bl,BYTE PTR [rbx]
    7c28:	5a                   	pop    rdx
    7c29:	0c d1                	or     al,0xd1
    7c2b:	0c 00                	or     al,0x0
    7c2d:	00 02                	add    BYTE PTR [rdx],al
    7c2f:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7c32:	f1                   	int1
    7c33:	0c 00                	or     al,0x0
    7c35:	00 02                	add    BYTE PTR [rdx],al
    7c37:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7c3a:	16                   	(bad)
    7c3b:	0d 00 00 02 1b       	or     eax,0x1b020000
    7c40:	5b                   	pop    rbx
    7c41:	0c 3b                	or     al,0x3b
    7c43:	0d 00 00 02 1b       	or     eax,0x1b020000
    7c48:	5b                   	pop    rbx
    7c49:	0c 60                	or     al,0x60
    7c4b:	0d 00 00 02 1b       	or     eax,0x1b020000
    7c50:	5b                   	pop    rbx
    7c51:	0c 80                	or     al,0x80
    7c53:	0d 00 00 02 1b       	or     eax,0x1b020000
    7c58:	5c                   	pop    rsp
    7c59:	0c a0                	or     al,0xa0
    7c5b:	0d 00 00 02 1b       	or     eax,0x1b020000
    7c60:	5c                   	pop    rsp
    7c61:	0c bb                	or     al,0xbb
    7c63:	0d 00 00 02 1b       	or     eax,0x1b020000
    7c68:	5d                   	pop    rbp
    7c69:	0c d6                	or     al,0xd6
    7c6b:	0d 00 00 02 1b       	or     eax,0x1b020000
    7c70:	5d                   	pop    rbp
    7c71:	0c f1                	or     al,0xf1
    7c73:	0d 00 00 02 1b       	or     eax,0x1b020000
    7c78:	5e                   	pop    rsi
    7c79:	0c 0c                	or     al,0xc
    7c7b:	0e                   	(bad)
    7c7c:	00 00                	add    BYTE PTR [rax],al
    7c7e:	02 1b                	add    bl,BYTE PTR [rbx]
    7c80:	5e                   	pop    rsi
    7c81:	0c 27                	or     al,0x27
    7c83:	0e                   	(bad)
    7c84:	00 00                	add    BYTE PTR [rax],al
    7c86:	02 1b                	add    bl,BYTE PTR [rbx]
    7c88:	5f                   	pop    rdi
    7c89:	0c 42                	or     al,0x42
    7c8b:	0e                   	(bad)
    7c8c:	00 00                	add    BYTE PTR [rax],al
    7c8e:	02 1b                	add    bl,BYTE PTR [rbx]
    7c90:	5f                   	pop    rdi
    7c91:	0c 5d                	or     al,0x5d
    7c93:	0e                   	(bad)
    7c94:	00 00                	add    BYTE PTR [rax],al
    7c96:	02 1b                	add    bl,BYTE PTR [rbx]
    7c98:	60                   	(bad)
    7c99:	0c 78                	or     al,0x78
    7c9b:	0e                   	(bad)
    7c9c:	00 00                	add    BYTE PTR [rax],al
    7c9e:	02 1b                	add    bl,BYTE PTR [rbx]
    7ca0:	60                   	(bad)
    7ca1:	0c 93                	or     al,0x93
    7ca3:	0e                   	(bad)
    7ca4:	00 00                	add    BYTE PTR [rax],al
    7ca6:	02 1b                	add    bl,BYTE PTR [rbx]
    7ca8:	61                   	(bad)
    7ca9:	0c ae                	or     al,0xae
    7cab:	0e                   	(bad)
    7cac:	00 00                	add    BYTE PTR [rax],al
    7cae:	02 1b                	add    bl,BYTE PTR [rbx]
    7cb0:	61                   	(bad)
    7cb1:	0c c9                	or     al,0xc9
    7cb3:	0e                   	(bad)
    7cb4:	00 00                	add    BYTE PTR [rax],al
    7cb6:	02 1b                	add    bl,BYTE PTR [rbx]
    7cb8:	62 0c e4             	(bad)  {k6}
    7cbb:	0e                   	(bad)
    7cbc:	00 00                	add    BYTE PTR [rax],al
    7cbe:	02 1b                	add    bl,BYTE PTR [rbx]
    7cc0:	62 0c ff             	(bad)  {k6}
    7cc3:	0e                   	(bad)
    7cc4:	00 00                	add    BYTE PTR [rax],al
    7cc6:	02 1b                	add    bl,BYTE PTR [rbx]
    7cc8:	63 0c 1a             	movsxd ecx,DWORD PTR [rdx+rbx*1]
    7ccb:	0f 00 00             	sldt   WORD PTR [rax]
    7cce:	02 1b                	add    bl,BYTE PTR [rbx]
    7cd0:	63 0c 35 0f 00 00 02 	movsxd ecx,DWORD PTR [rsi*1+0x200000f]
    7cd7:	1b 64 0c 50          	sbb    esp,DWORD PTR [rsp+rcx*1+0x50]
    7cdb:	0f 00 00             	sldt   WORD PTR [rax]
    7cde:	02 1b                	add    bl,BYTE PTR [rbx]
    7ce0:	64 0c 6b             	fs or  al,0x6b
    7ce3:	0f 00 00             	sldt   WORD PTR [rax]
    7ce6:	02 1b                	add    bl,BYTE PTR [rbx]
    7ce8:	65 0c 86             	gs or  al,0x86
    7ceb:	0f 00 00             	sldt   WORD PTR [rax]
    7cee:	02 1b                	add    bl,BYTE PTR [rbx]
    7cf0:	65 0c a1             	gs or  al,0xa1
    7cf3:	0f 00 00             	sldt   WORD PTR [rax]
    7cf6:	02 1b                	add    bl,BYTE PTR [rbx]
    7cf8:	66 0c bc             	data16 or al,0xbc
    7cfb:	0f 00 00             	sldt   WORD PTR [rax]
    7cfe:	02 1b                	add    bl,BYTE PTR [rbx]
    7d00:	66 0c dc             	data16 or al,0xdc
    7d03:	0f 00 00             	sldt   WORD PTR [rax]
    7d06:	02 1b                	add    bl,BYTE PTR [rbx]
    7d08:	67 0c fc             	addr32 or al,0xfc
    7d0b:	0f 00 00             	sldt   WORD PTR [rax]
    7d0e:	02 1b                	add    bl,BYTE PTR [rbx]
    7d10:	67 0c 1c             	addr32 or al,0x1c
    7d13:	10 00                	adc    BYTE PTR [rax],al
    7d15:	00 02                	add    BYTE PTR [rdx],al
    7d17:	1b 68 0c             	sbb    ebp,DWORD PTR [rax+0xc]
    7d1a:	3c 10                	cmp    al,0x10
    7d1c:	00 00                	add    BYTE PTR [rax],al
    7d1e:	02 1b                	add    bl,BYTE PTR [rbx]
    7d20:	68 0c 5c 10 00       	push   0x105c0c
    7d25:	00 02                	add    BYTE PTR [rdx],al
    7d27:	1b 69 0c             	sbb    ebp,DWORD PTR [rcx+0xc]
    7d2a:	7c 10                	jl     7d3c <_end+0x1d24>
    7d2c:	00 00                	add    BYTE PTR [rax],al
    7d2e:	02 1b                	add    bl,BYTE PTR [rbx]
    7d30:	69 0c a1 10 00 00 02 	imul   ecx,DWORD PTR [rcx+riz*4],0x2000010
    7d37:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    7d3a:	c6                   	(bad)
    7d3b:	10 00                	adc    BYTE PTR [rax],al
    7d3d:	00 02                	add    BYTE PTR [rdx],al
    7d3f:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    7d42:	e1 10                	loope  7d54 <_end+0x1d3c>
    7d44:	00 00                	add    BYTE PTR [rax],al
    7d46:	02 1b                	add    bl,BYTE PTR [rbx]
    7d48:	6b 0c fc 10          	imul   ecx,DWORD PTR [rsp+rdi*8],0x10
    7d4c:	00 00                	add    BYTE PTR [rax],al
    7d4e:	02 1b                	add    bl,BYTE PTR [rbx]
    7d50:	6b 0c 17 11          	imul   ecx,DWORD PTR [rdi+rdx*1],0x11
    7d54:	00 00                	add    BYTE PTR [rax],al
    7d56:	02 1b                	add    bl,BYTE PTR [rbx]
    7d58:	6c                   	ins    BYTE PTR es:[rdi],dx
    7d59:	0c 32                	or     al,0x32
    7d5b:	11 00                	adc    DWORD PTR [rax],eax
    7d5d:	00 02                	add    BYTE PTR [rdx],al
    7d5f:	1b 6c 0c 52          	sbb    ebp,DWORD PTR [rsp+rcx*1+0x52]
    7d63:	11 00                	adc    DWORD PTR [rax],eax
    7d65:	00 02                	add    BYTE PTR [rdx],al
    7d67:	1b 6d 0c             	sbb    ebp,DWORD PTR [rbp+0xc]
    7d6a:	72 11                	jb     7d7d <_end+0x1d65>
    7d6c:	00 00                	add    BYTE PTR [rax],al
    7d6e:	02 1b                	add    bl,BYTE PTR [rbx]
    7d70:	6d                   	ins    DWORD PTR es:[rdi],dx
    7d71:	0c 92                	or     al,0x92
    7d73:	11 00                	adc    DWORD PTR [rax],eax
    7d75:	00 02                	add    BYTE PTR [rdx],al
    7d77:	1b 6e 0c             	sbb    ebp,DWORD PTR [rsi+0xc]
    7d7a:	b2 11                	mov    dl,0x11
    7d7c:	00 00                	add    BYTE PTR [rax],al
    7d7e:	02 1b                	add    bl,BYTE PTR [rbx]
    7d80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7d81:	0c cd                	or     al,0xcd
    7d83:	11 00                	adc    DWORD PTR [rax],eax
    7d85:	00 02                	add    BYTE PTR [rdx],al
    7d87:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    7d8a:	e8 11 00 00 02       	call   2007da0 <_end+0x2001d88>
    7d8f:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    7d92:	03 12                	add    edx,DWORD PTR [rdx]
    7d94:	00 00                	add    BYTE PTR [rax],al
    7d96:	7a c5                	jp     7d5d <_end+0x1d45>
    7d98:	34 00                	xor    al,0x0
    7d9a:	00 18                	add    BYTE PTR [rax],bl
    7d9c:	1c 00                	sbb    al,0x0
    7d9e:	06                   	(bad)
    7d9f:	2a 00                	sub    al,BYTE PTR [rax]
    7da1:	00 36                	add    BYTE PTR [rsi],dh
    7da3:	91                   	xchg   ecx,eax
    7da4:	17                   	(bad)
    7da5:	00 00                	add    BYTE PTR [rax],al
    7da7:	e3 20                	jrcxz  7dc9 <_end+0x1db1>
    7da9:	00 00                	add    BYTE PTR [rax],al
    7dab:	00 36                	add    BYTE PTR [rsi],dh
    7dad:	ce                   	(bad)
    7dae:	18 00                	sbb    BYTE PTR [rax],al
    7db0:	00 e3                	add    bl,ah
    7db2:	20 00                	and    BYTE PTR [rax],al
    7db4:	00 04 36             	add    BYTE PTR [rsi+rsi*1],al
    7db7:	55                   	push   rbp
    7db8:	24 00                	and    al,0x0
    7dba:	00 d4                	add    ah,dl
    7dbc:	22 00                	and    al,BYTE PTR [rax]
    7dbe:	00 08                	add    BYTE PTR [rax],cl
    7dc0:	36 95                	ss xchg ebp,eax
    7dc2:	1e                   	(bad)
    7dc3:	00 00                	add    BYTE PTR [rax],al
    7dc5:	d4                   	(bad)
    7dc6:	22 00                	and    al,BYTE PTR [rax]
    7dc8:	00 10                	add    BYTE PTR [rax],dl
    7dca:	00 35 08 1d 0e 01    	add    BYTE PTR [rip+0x10e1d08],dh        # 10e9ad8 <_end+0x10e3ac0>
    7dd0:	58                   	pop    rax
    7dd1:	30 00                	xor    BYTE PTR [rax],al
    7dd3:	00 4e 2a             	add    BYTE PTR [rsi+0x2a],cl
    7dd6:	00 00                	add    BYTE PTR [rax],al
    7dd8:	7b 04                	jnp    7dde <_end+0x1dc6>
    7dda:	1d 11 03 33 2a       	sbb    eax,0x2a330311
    7ddf:	00 00                	add    BYTE PTR [rax],al
    7de1:	59                   	pop    rcx
    7de2:	cc                   	int3
    7de3:	12 00                	adc    al,BYTE PTR [rax]
    7de5:	00 12                	add    BYTE PTR [rdx],dl
    7de7:	13 e3                	adc    esp,ebx
    7de9:	20 00                	and    BYTE PTR [rax],al
    7deb:	00 59 22             	add    BYTE PTR [rcx+0x22],bl
    7dee:	27                   	(bad)
    7def:	00 00                	add    BYTE PTR [rax],al
    7df1:	13 0a                	adc    ecx,DWORD PTR [rdx]
    7df3:	52                   	push   rdx
    7df4:	24 00                	and    al,0x0
    7df6:	00 00                	add    BYTE PTR [rax],al
    7df8:	06                   	(bad)
    7df9:	8a 25 00 00 1d 0f    	mov    ah,BYTE PTR [rip+0xf1d0000]        # f1d7dff <_end+0xf1d1de7>
    7dff:	07                   	(bad)
    7e00:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7e01:	21 00                	and    DWORD PTR [rax],eax
    7e03:	00 00                	add    BYTE PTR [rax],al
    7e05:	06                   	(bad)
    7e06:	b4 0c                	mov    ah,0xc
    7e08:	00 00                	add    BYTE PTR [rax],al
    7e0a:	1d 14 05 13 2a       	sbb    eax,0x2a130514
    7e0f:	00 00                	add    BYTE PTR [rax],al
    7e11:	04 00                	add    al,0x0
    7e13:	08 5a 30             	or     BYTE PTR [rdx+0x30],bl
    7e16:	00 00                	add    BYTE PTR [rax],al
    7e18:	1d 15 03 06 2a       	sbb    eax,0x2a060315
    7e1d:	00 00                	add    BYTE PTR [rax],al
    7e1f:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    7e21:	1a 00                	sbb    al,BYTE PTR [rax]
    7e23:	00 10                	add    BYTE PTR [rax],dl
    7e25:	1e                   	(bad)
    7e26:	0a 10                	or     dl,BYTE PTR [rax]
    7e28:	82                   	(bad)
    7e29:	2a 00                	sub    al,BYTE PTR [rax]
    7e2b:	00 06                	add    BYTE PTR [rsi],al
    7e2d:	10 11                	adc    BYTE PTR [rcx],dl
    7e2f:	00 00                	add    BYTE PTR [rax],al
    7e31:	1e                   	(bad)
    7e32:	0c 0b                	or     al,0xb
    7e34:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    7e35:	22 00                	and    al,BYTE PTR [rax]
    7e37:	00 00                	add    BYTE PTR [rax],al
    7e39:	06                   	(bad)
    7e3a:	f6 2e                	imul   BYTE PTR [rsi]
    7e3c:	00 00                	add    BYTE PTR [rax],al
    7e3e:	1e                   	(bad)
    7e3f:	0d 0f 4e 2a 00       	or     eax,0x2a4e0f
    7e44:	00 08                	add    BYTE PTR [rax],cl
    7e46:	00 08                	add    BYTE PTR [rax],cl
    7e48:	49 2a 00             	rex.WB sub al,BYTE PTR [r8]
    7e4b:	00 1e                	add    BYTE PTR [rsi],bl
    7e4d:	0e                   	(bad)
    7e4e:	03 5a 2a             	add    ebx,DWORD PTR [rdx+0x2a]
    7e51:	00 00                	add    BYTE PTR [rax],al
    7e53:	08 94 2a 00 00 1f 05 	or     BYTE PTR [rdx+rbp*1+0x51f0000],dl
    7e5a:	19 9a 2a 00 00 1b    	sbb    DWORD PTR [rdx+0x1b00002a],ebx
    7e60:	ee                   	out    dx,al
    7e61:	14 00                	adc    al,0x0
    7e63:	00 d8                	add    al,bl
    7e65:	20 31                	and    BYTE PTR [rcx],dh
    7e67:	08 21                	or     BYTE PTR [rcx],ah
    7e69:	2c 00                	sub    al,0x0
    7e6b:	00 06                	add    BYTE PTR [rsi],al
    7e6d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7e6e:	24 00                	and    al,0x0
    7e70:	00 20                	add    BYTE PTR [rax],ah
    7e72:	33 07                	xor    eax,DWORD PTR [rdi]
    7e74:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7e75:	21 00                	and    DWORD PTR [rax],eax
    7e77:	00 00                	add    BYTE PTR [rax],al
    7e79:	06                   	(bad)
    7e7a:	7d 18                	jge    7e94 <_end+0x1e7c>
    7e7c:	00 00                	add    BYTE PTR [rax],al
    7e7e:	20 36                	and    BYTE PTR [rsi],dh
    7e80:	09 e2                	or     edx,esp
    7e82:	22 00                	and    al,BYTE PTR [rax]
    7e84:	00 08                	add    BYTE PTR [rax],cl
    7e86:	06                   	(bad)
    7e87:	33 31                	xor    esi,DWORD PTR [rcx]
    7e89:	00 00                	add    BYTE PTR [rax],al
    7e8b:	20 37                	and    BYTE PTR [rdi],dh
    7e8d:	09 e2                	or     edx,esp
    7e8f:	22 00                	and    al,BYTE PTR [rax]
    7e91:	00 10                	add    BYTE PTR [rax],dl
    7e93:	06                   	(bad)
    7e94:	17                   	(bad)
    7e95:	1e                   	(bad)
    7e96:	00 00                	add    BYTE PTR [rax],al
    7e98:	20 38                	and    BYTE PTR [rax],bh
    7e9a:	09 e2                	or     edx,esp
    7e9c:	22 00                	and    al,BYTE PTR [rax]
    7e9e:	00 18                	add    BYTE PTR [rax],bl
    7ea0:	06                   	(bad)
    7ea1:	75 0f                	jne    7eb2 <_end+0x1e9a>
    7ea3:	00 00                	add    BYTE PTR [rax],al
    7ea5:	20 39                	and    BYTE PTR [rcx],bh
    7ea7:	09 e2                	or     edx,esp
    7ea9:	22 00                	and    al,BYTE PTR [rax]
    7eab:	00 20                	add    BYTE PTR [rax],ah
    7ead:	06                   	(bad)
    7eae:	e3 32                	jrcxz  7ee2 <_end+0x1eca>
    7eb0:	00 00                	add    BYTE PTR [rax],al
    7eb2:	20 3a                	and    BYTE PTR [rdx],bh
    7eb4:	09 e2                	or     edx,esp
    7eb6:	22 00                	and    al,BYTE PTR [rax]
    7eb8:	00 28                	add    BYTE PTR [rax],ch
    7eba:	06                   	(bad)
    7ebb:	c1 22 00             	shl    DWORD PTR [rdx],0x0
    7ebe:	00 20                	add    BYTE PTR [rax],ah
    7ec0:	3b 09                	cmp    ecx,DWORD PTR [rcx]
    7ec2:	e2 22                	loop   7ee6 <_end+0x1ece>
    7ec4:	00 00                	add    BYTE PTR [rax],al
    7ec6:	30 06                	xor    BYTE PTR [rsi],al
    7ec8:	d2 23                	shl    BYTE PTR [rbx],cl
    7eca:	00 00                	add    BYTE PTR [rax],al
    7ecc:	20 3c 09             	and    BYTE PTR [rcx+rcx*1],bh
    7ecf:	e2 22                	loop   7ef3 <_end+0x1edb>
    7ed1:	00 00                	add    BYTE PTR [rax],al
    7ed3:	38 06                	cmp    BYTE PTR [rsi],al
    7ed5:	a3 10 00 00 20 3d 09 	movabs ds:0x22e2093d20000010,eax
    7edc:	e2 22 
    7ede:	00 00                	add    BYTE PTR [rax],al
    7ee0:	40 06                	rex (bad)
    7ee2:	af                   	scas   eax,DWORD PTR es:[rdi]
    7ee3:	10 00                	adc    BYTE PTR [rax],al
    7ee5:	00 20                	add    BYTE PTR [rax],ah
    7ee7:	40 09 e2             	rex or edx,esp
    7eea:	22 00                	and    al,BYTE PTR [rax]
    7eec:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    7eef:	b1 2a                	mov    cl,0x2a
    7ef1:	00 00                	add    BYTE PTR [rax],al
    7ef3:	20 41 09             	and    BYTE PTR [rcx+0x9],al
    7ef6:	e2 22                	loop   7f1a <_end+0x1f02>
    7ef8:	00 00                	add    BYTE PTR [rax],al
    7efa:	50                   	push   rax
    7efb:	06                   	(bad)
    7efc:	0a 0e                	or     cl,BYTE PTR [rsi]
    7efe:	00 00                	add    BYTE PTR [rax],al
    7f00:	20 42 09             	and    BYTE PTR [rdx+0x9],al
    7f03:	e2 22                	loop   7f27 <_end+0x1f0f>
    7f05:	00 00                	add    BYTE PTR [rax],al
    7f07:	58                   	pop    rax
    7f08:	06                   	(bad)
    7f09:	d8 19                	fcomp  DWORD PTR [rcx]
    7f0b:	00 00                	add    BYTE PTR [rax],al
    7f0d:	20 44 16 3a          	and    BYTE PTR [rsi+rdx*1+0x3a],al
    7f11:	2c 00                	sub    al,0x0
    7f13:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    7f16:	16                   	(bad)
    7f17:	11 00                	adc    DWORD PTR [rax],eax
    7f19:	00 20                	add    BYTE PTR [rax],ah
    7f1b:	46 14 3f             	rex.RX adc al,0x3f
    7f1e:	2c 00                	sub    al,0x0
    7f20:	00 68 06             	add    BYTE PTR [rax+0x6],ch
    7f23:	8b 31                	mov    esi,DWORD PTR [rcx]
    7f25:	00 00                	add    BYTE PTR [rax],al
    7f27:	20 48 07             	and    BYTE PTR [rax+0x7],cl
    7f2a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7f2b:	21 00                	and    DWORD PTR [rax],eax
    7f2d:	00 70 06             	add    BYTE PTR [rax+0x6],dh
    7f30:	be 1d 00 00 20       	mov    esi,0x2000001d
    7f35:	49 07                	rex.WB (bad)
    7f37:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7f38:	21 00                	and    DWORD PTR [rax],eax
    7f3a:	00 74 06 48          	add    BYTE PTR [rsi+rax*1+0x48],dh
    7f3e:	20 00                	and    BYTE PTR [rax],al
    7f40:	00 20                	add    BYTE PTR [rax],ah
    7f42:	4a 0b a4 22 00 00 78 	or     rsp,QWORD PTR [rdx+r12*1+0x6780000]
    7f49:	06 
    7f4a:	4f 11 00             	rex.WRXB adc QWORD PTR [r8],r8
    7f4d:	00 20                	add    BYTE PTR [rax],ah
    7f4f:	4d 12 83 21 00 00 80 	rex.WRB adc r8b,BYTE PTR [r11-0x7fffffdf]
    7f56:	06                   	(bad)
    7f57:	6b 26 00             	imul   esp,DWORD PTR [rsi],0x0
    7f5a:	00 20                	add    BYTE PTR [rax],ah
    7f5c:	4e 0f 98 21          	rex.WRX sets BYTE PTR [rcx]
    7f60:	00 00                	add    BYTE PTR [rax],al
    7f62:	82                   	(bad)
    7f63:	06                   	(bad)
    7f64:	cb                   	retf
    7f65:	2a 00                	sub    al,BYTE PTR [rax]
    7f67:	00 20                	add    BYTE PTR [rax],ah
    7f69:	4f 08 44 2c 00       	rex.WRXB or BYTE PTR [r12+r13*1+0x0],r8b
    7f6e:	00 83 06 a4 0f 00    	add    BYTE PTR [rbx+0xfa406],al
    7f74:	00 20                	add    BYTE PTR [rax],ah
    7f76:	51                   	push   rcx
    7f77:	0f 54 2c 00          	andps  xmm5,XMMWORD PTR [rax+rax*1]
    7f7b:	00 88 06 4c 20 00    	add    BYTE PTR [rax+0x204c06],cl
    7f81:	00 20                	add    BYTE PTR [rax],ah
    7f83:	59                   	pop    rcx
    7f84:	0d b0 22 00 00       	or     eax,0x22b0
    7f89:	90                   	nop
    7f8a:	06                   	(bad)
    7f8b:	80 28 00             	sub    BYTE PTR [rax],0x0
    7f8e:	00 20                	add    BYTE PTR [rax],ah
    7f90:	5b                   	pop    rbx
    7f91:	17                   	(bad)
    7f92:	5e                   	pop    rsi
    7f93:	2c 00                	sub    al,0x0
    7f95:	00 98 06 3c 15 00    	add    BYTE PTR [rax+0x153c06],bl
    7f9b:	00 20                	add    BYTE PTR [rax],ah
    7f9d:	5c                   	pop    rsp
    7f9e:	19 68 2c             	sbb    DWORD PTR [rax+0x2c],ebp
    7fa1:	00 00                	add    BYTE PTR [rax],al
    7fa3:	a0 06 05 22 00 00 20 	movabs al,ds:0x145d200000220506
    7faa:	5d 14 
    7fac:	3f                   	(bad)
    7fad:	2c 00                	sub    al,0x0
    7faf:	00 a8 06 61 29 00    	add    BYTE PTR [rax+0x296106],ch
    7fb5:	00 20                	add    BYTE PTR [rax],ah
    7fb7:	5e                   	pop    rsi
    7fb8:	09 d4                	or     esp,edx
    7fba:	22 00                	and    al,BYTE PTR [rax]
    7fbc:	00 b0 06 0d 24 00    	add    BYTE PTR [rax+0x240d06],dh
    7fc2:	00 20                	add    BYTE PTR [rax],ah
    7fc4:	5f                   	pop    rdi
    7fc5:	0a 2e                	or     ch,BYTE PTR [rsi]
    7fc7:	23 00                	and    eax,DWORD PTR [rax]
    7fc9:	00 b8 06 b3 0a 00    	add    BYTE PTR [rax+0xab306],bh
    7fcf:	00 20                	add    BYTE PTR [rax],ah
    7fd1:	60                   	(bad)
    7fd2:	07                   	(bad)
    7fd3:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7fd4:	21 00                	and    DWORD PTR [rax],eax
    7fd6:	00 c0                	add    al,al
    7fd8:	06                   	(bad)
    7fd9:	e1 1e                	loope  7ff9 <_end+0x1fe1>
    7fdb:	00 00                	add    BYTE PTR [rax],al
    7fdd:	20 62 08             	and    BYTE PTR [rdx+0x8],ah
    7fe0:	6d                   	ins    DWORD PTR es:[rdi],dx
    7fe1:	2c 00                	sub    al,0x0
    7fe3:	00 c4                	add    ah,al
    7fe5:	00 08                	add    BYTE PTR [rax],cl
    7fe7:	f2 14 00             	repnz adc al,0x0
    7fea:	00 21                	add    BYTE PTR [rcx],ah
    7fec:	07                   	(bad)
    7fed:	19 9a 2a 00 00 7c    	sbb    DWORD PTR [rdx+0x7c00002a],ebx
    7ff3:	b4 17                	mov    ah,0x17
    7ff5:	00 00                	add    BYTE PTR [rax],al
    7ff7:	20 2b                	and    BYTE PTR [rbx],ch
    7ff9:	0e                   	(bad)
    7ffa:	46 a2 13 00 00 0d 35 	rex.RX movabs ds:0x2c350d000013,al
    8001:	2c 00 00 
    8004:	0d 9a 2a 00 00       	or     eax,0x2a9a
    8009:	26 e7 22             	es out 0x22,eax
    800c:	00 00                	add    BYTE PTR [rax],al
    800e:	54                   	push   rsp
    800f:	2c 00                	sub    al,0x0
    8011:	00 27                	add    BYTE PTR [rdi],ah
    8013:	8a 21                	mov    ah,BYTE PTR [rcx]
    8015:	00 00                	add    BYTE PTR [rax],al
    8017:	00 00                	add    BYTE PTR [rax],al
    8019:	0d 2d 2c 00 00       	or     eax,0x2c2d
    801e:	46 7d 28             	rex.RX jge 8049 <_end+0x2031>
    8021:	00 00                	add    BYTE PTR [rax],al
    8023:	0d 59 2c 00 00       	or     eax,0x2c59
    8028:	46 39 15 00 00 0d 63 	rex.RX cmp DWORD PTR [rip+0x630d0000],r10d        # 630d802f <_end+0x630d2017>
    802f:	2c 00                	sub    al,0x0
    8031:	00 26                	add    BYTE PTR [rsi],ah
    8033:	e7 22                	out    0x22,eax
    8035:	00 00                	add    BYTE PTR [rax],al
    8037:	7d 2c                	jge    8065 <_end+0x204d>
    8039:	00 00                	add    BYTE PTR [rax],al
    803b:	27                   	(bad)
    803c:	8a 21                	mov    ah,BYTE PTR [rcx]
    803e:	00 00                	add    BYTE PTR [rax],al
    8040:	13 00                	adc    eax,DWORD PTR [rax]
    8042:	08 22                	or     BYTE PTR [rdx],ah
    8044:	1a 00                	sbb    al,BYTE PTR [rax]
    8046:	00 22                	add    BYTE PTR [rdx],ah
    8048:	55                   	push   rbp
    8049:	12 82 2a 00 00 13    	adc    al,BYTE PTR [rdx+0x1300002a]
    804f:	7d 2c                	jge    807d <_end+0x2065>
    8051:	00 00                	add    BYTE PTR [rax],al
    8053:	0d 21 2c 00 00       	or     eax,0x2c21
    8058:	57                   	push   rdi
    8059:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    805c:	00 08                	add    BYTE PTR [rax],cl
    805e:	2c 12                	sub    al,0x12
    8060:	00 00                	add    BYTE PTR [rax],al
    8062:	23 18                	and    ebx,DWORD PTR [rax]
    8064:	13 d8                	adc    ebx,eax
    8066:	21 00                	and    DWORD PTR [rax],eax
    8068:	00 08                	add    BYTE PTR [rax],cl
    806a:	c1 17 00             	rcl    DWORD PTR [rdi],0x0
    806d:	00 23                	add    BYTE PTR [rbx],ah
    806f:	19 14 f0             	sbb    DWORD PTR [rax+rsi*8],edx
    8072:	21 00                	and    DWORD PTR [rax],eax
    8074:	00 08                	add    BYTE PTR [rax],cl
    8076:	55                   	push   rbp
    8077:	01 00                	add    DWORD PTR [rax],eax
    8079:	00 23                	add    BYTE PTR [rbx],ah
    807b:	1a 14 08             	sbb    dl,BYTE PTR [rax+rcx*1]
    807e:	22 00                	and    al,BYTE PTR [rax]
    8080:	00 13                	add    BYTE PTR [rbx],dl
    8082:	b0 2c                	mov    al,0x2c
    8084:	00 00                	add    BYTE PTR [rax],al
    8086:	08 bf 05 00 00 23    	or     BYTE PTR [rdi+0x23000005],bh
    808c:	1b 14 20             	sbb    edx,DWORD PTR [rax+riz*1]
    808f:	22 00                	and    al,BYTE PTR [rax]
    8091:	00 08                	add    BYTE PTR [rax],cl
    8093:	a8 32                	test   al,0x32
    8095:	00 00                	add    BYTE PTR [rax],al
    8097:	24 19                	and    al,0x19
    8099:	18 2c 22             	sbb    BYTE PTR [rdx+riz*1],ch
    809c:	00 00                	add    BYTE PTR [rax],al
    809e:	08 53 29             	or     BYTE PTR [rbx+0x29],dl
    80a1:	00 00                	add    BYTE PTR [rax],al
    80a3:	24 1a                	and    al,0x1a
    80a5:	19 44 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],eax
    80a9:	00 08                	add    BYTE PTR [rax],cl
    80ab:	4e 32 00             	rex.WRX xor r8b,BYTE PTR [rax]
    80ae:	00 24 1b             	add    BYTE PTR [rbx+rbx*1],ah
    80b1:	19 5c 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],ebx
    80b5:	00 08                	add    BYTE PTR [rax],cl
    80b7:	77 2f                	ja     80e8 <_end+0x20d0>
    80b9:	00 00                	add    BYTE PTR [rax],al
    80bb:	24 1c                	and    al,0x1c
    80bd:	19 74 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],esi
    80c1:	00 08                	add    BYTE PTR [rax],cl
    80c3:	fc                   	cld
    80c4:	0d 00 00 24 1f       	or     eax,0x1f240000
    80c9:	19 38                	sbb    DWORD PTR [rax],edi
    80cb:	22 00                	and    al,BYTE PTR [rax]
    80cd:	00 08                	add    BYTE PTR [rax],cl
    80cf:	b3 15                	mov    bl,0x15
    80d1:	00 00                	add    BYTE PTR [rax],al
    80d3:	24 20                	and    al,0x20
    80d5:	1a 50 22             	sbb    dl,BYTE PTR [rax+0x22]
    80d8:	00 00                	add    BYTE PTR [rax],al
    80da:	08 f2                	or     dl,dh
    80dc:	1d 00 00 24 21       	sbb    eax,0x21240000
    80e1:	1a 68 22             	sbb    ch,BYTE PTR [rax+0x22]
    80e4:	00 00                	add    BYTE PTR [rax],al
    80e6:	08 2b                	or     BYTE PTR [rbx],ch
    80e8:	1a 00                	sbb    al,BYTE PTR [rax]
    80ea:	00 24 22             	add    BYTE PTR [rdx+riz*1],ah
    80ed:	1a 80 22 00 00 08    	sbb    al,BYTE PTR [rax+0x8000022]
    80f3:	68 2e 00 00 25       	push   0x2500002e
    80f8:	2f                   	(bad)
    80f9:	16                   	(bad)
    80fa:	98                   	cwde
    80fb:	21 00                	and    DWORD PTR [rax],eax
    80fd:	00 08                	add    BYTE PTR [rax],cl
    80ff:	9e                   	sahf
    8100:	31 00                	xor    DWORD PTR [rax],eax
    8102:	00 25 31 13 b2 21    	add    BYTE PTR [rip+0x21b21331],ah        # 21b29439 <_end+0x21b23421>
    8108:	00 00                	add    BYTE PTR [rax],al
    810a:	08 5c 11 00          	or     BYTE PTR [rcx+rdx*1+0x0],bl
    810e:	00 25 32 13 b2 21    	add    BYTE PTR [rip+0x21b21332],ah        # 21b29446 <_end+0x21b2342e>
    8114:	00 00                	add    BYTE PTR [rax],al
    8116:	08 ed                	or     ch,ch
    8118:	0d 00 00 25 33       	or     eax,0x33250000
    811d:	13 b2 21 00 00 08    	adc    esi,DWORD PTR [rdx+0x8000021]
    8123:	67 2e 00 00          	cs add BYTE PTR [eax],al
    8127:	25 3c 18 7c 21       	and    eax,0x217c183c
    812c:	00 00                	add    BYTE PTR [rax],al
    812e:	08 9d 31 00 00 25    	or     BYTE PTR [rbp+0x25000031],bl
    8134:	3e 1b 8a 21 00 00 08 	ds sbb ecx,DWORD PTR [rdx+0x8000021]
    813b:	5b                   	pop    rbx
    813c:	11 00                	adc    DWORD PTR [rax],eax
    813e:	00 25 3f 1b 8a 21    	add    BYTE PTR [rip+0x218a1b3f],ah        # 218a9c83 <_end+0x218a3c6b>
    8144:	00 00                	add    BYTE PTR [rax],al
    8146:	08 ec                	or     ah,ch
    8148:	0d 00 00 25 40       	or     eax,0x40250000
    814d:	1b 8a 21 00 00 08    	sbb    ecx,DWORD PTR [rdx+0x8000021]
    8153:	20 03                	and    BYTE PTR [rbx],al
    8155:	00 00                	add    BYTE PTR [rax],al
    8157:	25 4c 13 b2 21       	and    eax,0x21b2134c
    815c:	00 00                	add    BYTE PTR [rax],al
    815e:	08 1f                	or     BYTE PTR [rdi],bl
    8160:	03 00                	add    eax,DWORD PTR [rax]
    8162:	00 25 4f 1b 8a 21    	add    BYTE PTR [rip+0x218a1b4f],ah        # 218a9cb7 <_end+0x218a3c9f>
    8168:	00 00                	add    BYTE PTR [rax],al
    816a:	08 c9                	or     cl,cl
    816c:	23 00                	and    eax,DWORD PTR [rax]
    816e:	00 25 5a 15 8c 22    	add    BYTE PTR [rip+0x228c155a],ah        # 228c96ce <_end+0x228c36b6>
    8174:	00 00                	add    BYTE PTR [rax],al
    8176:	13 a5 2d 00 00 08    	adc    esp,DWORD PTR [rbp+0x800002d]
    817c:	d1 2f                	shr    DWORD PTR [rdi],1
    817e:	00 00                	add    BYTE PTR [rax],al
    8180:	25 5b 16 98 22       	and    eax,0x2298165b
    8185:	00 00                	add    BYTE PTR [rax],al
    8187:	0e                   	(bad)
    8188:	17                   	(bad)
    8189:	01 00                	add    DWORD PTR [rax],eax
    818b:	00 16                	add    BYTE PTR [rsi],dl
    818d:	de 02                	fiadd  WORD PTR [rdx]
    818f:	0c a6                	or     al,0xa6
    8191:	21 00                	and    DWORD PTR [rax],eax
    8193:	00 d9                	add    cl,bl
    8195:	2d 00 00 01 d9       	sub    eax,0xd9010000
    819a:	2d 00 00 00 0d       	sub    eax,0xd000000
    819f:	de 2d 00 00 7d 04    	fisubr WORD PTR [rip+0x47d0000]        # 47d81a5 <_end+0x47d218d>
    81a5:	dd 00                	fld    QWORD PTR [rax]
    81a7:	00 00                	add    BYTE PTR [rax],al
    81a9:	16                   	(bad)
    81aa:	e3 02                	jrcxz  81ae <_end+0x2196>
    81ac:	12 dd                	adc    bl,ch
    81ae:	00 00                	add    BYTE PTR [rax],al
    81b0:	00 a6 21 00 00 fa    	add    BYTE PTR [rsi-0x5ffffdf],ah
    81b6:	2d 00 00 01 d9       	sub    eax,0xd9010000
    81bb:	2d 00 00 00 0c       	sub    eax,0xc000000
    81c0:	f2 01 00             	repnz add DWORD PTR [rax],eax
    81c3:	00 26                	add    BYTE PTR [rsi],ah
    81c5:	19 01                	sbb    DWORD PTR [rcx],eax
    81c7:	2e 00 00             	cs add BYTE PTR [rax],al
    81ca:	00 10                	add    BYTE PTR [rax],dl
    81cc:	2e 00 00             	cs add BYTE PTR [rax],al
    81cf:	01 d3                	add    ebx,edx
    81d1:	23 00                	and    eax,DWORD PTR [rax]
    81d3:	00 00                	add    BYTE PTR [rax],al
    81d5:	0e                   	(bad)
    81d6:	f7 01 00 00 16 e1    	test   DWORD PTR [rcx],0xe1160000
    81dc:	01 01                	add    DWORD PTR [rcx],eax
    81de:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    81df:	21 00                	and    DWORD PTR [rax],eax
    81e1:	00 27                	add    BYTE PTR [rdi],ah
    81e3:	2e 00 00             	cs add BYTE PTR [rax],al
    81e6:	01 d3                	add    ebx,edx
    81e8:	23 00                	and    eax,DWORD PTR [rax]
    81ea:	00 00                	add    BYTE PTR [rax],al
    81ec:	0e                   	(bad)
    81ed:	01 02                	add    DWORD PTR [rdx],eax
    81ef:	00 00                	add    BYTE PTR [rax],al
    81f1:	16                   	(bad)
    81f2:	e6 01                	out    0x1,al
    81f4:	01 b2 21 00 00 3e    	add    DWORD PTR [rdx+0x3e000021],esi
    81fa:	2e 00 00             	cs add BYTE PTR [rax],al
    81fd:	01 d3                	add    ebx,edx
    81ff:	23 00                	and    eax,DWORD PTR [rax]
    8201:	00 00                	add    BYTE PTR [rax],al
    8203:	0c 0f                	or     al,0xf
    8205:	01 00                	add    DWORD PTR [rax],eax
    8207:	00 27                	add    BYTE PTR [rdi],ah
    8209:	14 01                	adc    al,0x1
    820b:	d4                   	(bad)
    820c:	22 00                	and    al,BYTE PTR [rax]
    820e:	00 68 2e             	add    BYTE PTR [rax+0x2e],ch
    8211:	00 00                	add    BYTE PTR [rax],al
    8213:	01 88 24 00 00 01    	add    DWORD PTR [rax+0x1000024],ecx
    8219:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    821c:	00 01                	add    BYTE PTR [rcx],al
    821e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8221:	00 01                	add    BYTE PTR [rcx],al
    8223:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8226:	00 01                	add    BYTE PTR [rcx],al
    8228:	62 24 00             	(bad)
    822b:	00 00                	add    BYTE PTR [rax],al
    822d:	7e 64                	jle    8293 <_end+0x227b>
    822f:	69 76 00 16 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e016
    8236:	61                   	(bad)
    8237:	23 00                	and    eax,DWORD PTR [rax]
    8239:	00 84 2e 00 00 01 a6 	add    BYTE PTR [rsi+rbp*1-0x59ff0000],al
    8240:	21 00                	and    DWORD PTR [rax],eax
    8242:	00 01                	add    BYTE PTR [rcx],al
    8244:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8245:	21 00                	and    DWORD PTR [rax],eax
    8247:	00 00                	add    BYTE PTR [rax],al
    8249:	0e                   	(bad)
    824a:	6a 01                	push   0x1
    824c:	00 00                	add    BYTE PTR [rax],al
    824e:	16                   	(bad)
    824f:	05 03 0e e2 22       	add    eax,0x22e20e03
    8254:	00 00                	add    BYTE PTR [rax],al
    8256:	9b                   	fwait
    8257:	2e 00 00             	cs add BYTE PTR [rax],al
    825a:	01 d3                	add    ebx,edx
    825c:	23 00                	and    eax,DWORD PTR [rax]
    825e:	00 00                	add    BYTE PTR [rax],al
    8260:	0e                   	(bad)
    8261:	c9                   	leave
    8262:	02 00                	add    al,BYTE PTR [rax]
    8264:	00 16                	add    BYTE PTR [rsi],dl
    8266:	e2 03                	loop   826b <_end+0x2253>
    8268:	0f 94 23             	sete   BYTE PTR [rbx]
    826b:	00 00                	add    BYTE PTR [rax],al
    826d:	b7 2e                	mov    bh,0x2e
    826f:	00 00                	add    BYTE PTR [rax],al
    8271:	01 b2 21 00 00 01    	add    DWORD PTR [rdx+0x1000021],esi
    8277:	b2 21                	mov    dl,0x21
    8279:	00 00                	add    BYTE PTR [rax],al
    827b:	00 0e                	add    BYTE PTR [rsi],cl
    827d:	58                   	pop    rax
    827e:	02 00                	add    al,BYTE PTR [rax]
    8280:	00 16                	add    BYTE PTR [rsi],dl
    8282:	26 04 0c             	es add al,0xc
    8285:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8286:	21 00                	and    DWORD PTR [rax],eax
    8288:	00 d3                	add    bl,dl
    828a:	2e 00 00             	cs add BYTE PTR [rax],al
    828d:	01 d3                	add    ebx,edx
    828f:	23 00                	and    eax,DWORD PTR [rax]
    8291:	00 01                	add    BYTE PTR [rcx],al
    8293:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8296:	00 00                	add    BYTE PTR [rax],al
    8298:	0c 5e                	or     al,0x5e
    829a:	02 00                	add    al,BYTE PTR [rax]
    829c:	00 28                	add    BYTE PTR [rax],ch
    829e:	75 01                	jne    82a1 <_end+0x2289>
    82a0:	2e 23 00             	cs and eax,DWORD PTR [rax]
    82a3:	00 f3                	add    bl,dh
    82a5:	2e 00 00             	cs add BYTE PTR [rax],al
    82a8:	01 f3                	add    ebx,esi
    82aa:	2e 00 00             	cs add BYTE PTR [rax],al
    82ad:	01 d3                	add    ebx,edx
    82af:	23 00                	and    eax,DWORD PTR [rax]
    82b1:	00 01                	add    BYTE PTR [rcx],al
    82b3:	2e 23 00             	cs and eax,DWORD PTR [rax]
    82b6:	00 00                	add    BYTE PTR [rax],al
    82b8:	0d 9c 24 00 00       	or     eax,0x249c
    82bd:	0e                   	(bad)
    82be:	86 01                	xchg   BYTE PTR [rcx],al
    82c0:	00 00                	add    BYTE PTR [rax],al
    82c2:	16                   	(bad)
    82c3:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    82c6:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    82c7:	21 00                	and    DWORD PTR [rax],eax
    82c9:	00 19                	add    BYTE PTR [rcx],bl
    82cb:	2f                   	(bad)
    82cc:	00 00                	add    BYTE PTR [rax],al
    82ce:	01 f3                	add    ebx,esi
    82d0:	2e 00 00             	cs add BYTE PTR [rax],al
    82d3:	01 d3                	add    ebx,edx
    82d5:	23 00                	and    eax,DWORD PTR [rax]
    82d7:	00 01                	add    BYTE PTR [rcx],al
    82d9:	2e 23 00             	cs and eax,DWORD PTR [rax]
    82dc:	00 00                	add    BYTE PTR [rax],al
    82de:	28 25 00 00 00 16    	sub    BYTE PTR [rip+0x16000000],ah        # 160082e4 <_end+0x160022cc>
    82e4:	ca 03 3a             	retf   0x3a03
    82e7:	2f                   	(bad)
    82e8:	00 00                	add    BYTE PTR [rax],al
    82ea:	01 d4                	add    esp,edx
    82ec:	22 00                	and    al,BYTE PTR [rax]
    82ee:	00 01                	add    BYTE PTR [rcx],al
    82f0:	2e 23 00             	cs and eax,DWORD PTR [rax]
    82f3:	00 01                	add    BYTE PTR [rcx],al
    82f5:	2e 23 00             	cs and eax,DWORD PTR [rax]
    82f8:	00 01                	add    BYTE PTR [rcx],al
    82fa:	62 24 00             	(bad)
    82fd:	00 00                	add    BYTE PTR [rax],al
    82ff:	7f e0                	jg     82e1 <_end+0x22c9>
    8301:	00 00                	add    BYTE PTR [rax],al
    8303:	00 16                	add    BYTE PTR [rsi],dl
    8305:	fa                   	cli
    8306:	02 0d 4d 2f 00 00    	add    cl,BYTE PTR [rip+0x2f4d]        # b259 <_end+0x5241>
    830c:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8312:	5a                   	pop    rdx
    8313:	f2 02 00             	repnz add al,BYTE PTR [rax]
    8316:	00 16                	add    BYTE PTR [rsi],dl
    8318:	3d 02 0c a6 21       	cmp    eax,0x21a60c02
    831d:	00 00                	add    BYTE PTR [rax],al
    831f:	28 f1                	sub    cl,dh
    8321:	02 00                	add    al,BYTE PTR [rax]
    8323:	00 16                	add    BYTE PTR [rsi],dl
    8325:	3f                   	(bad)
    8326:	02 6c 2f 00          	add    ch,BYTE PTR [rdi+rbp*1+0x0]
    832a:	00 01                	add    BYTE PTR [rcx],al
    832c:	e3 20                	jrcxz  834e <_end+0x2336>
    832e:	00 00                	add    BYTE PTR [rax],al
    8330:	00 0c c5 01 00 00 16 	add    BYTE PTR [rax*8+0x16000001],cl
    8337:	76 0f                	jbe    8348 <_end+0x2330>
    8339:	2e 00 00             	cs add BYTE PTR [rax],al
    833c:	00 87 2f 00 00 01    	add    BYTE PTR [rdi+0x100002f],al
    8342:	d3 23                	shl    DWORD PTR [rbx],cl
    8344:	00 00                	add    BYTE PTR [rax],al
    8346:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    834c:	0d e2 22 00 00       	or     eax,0x22e2
    8351:	0f fe 00             	paddd  mm0,QWORD PTR [rax]
    8354:	00 00                	add    BYTE PTR [rax],al
    8356:	16                   	(bad)
    8357:	d7                   	xlat   BYTE PTR ds:[rbx]
    8358:	11 f5                	adc    ebp,esi
    835a:	00 00                	add    BYTE PTR [rax],al
    835c:	00 b2 21 00 00 b0    	add    BYTE PTR [rdx-0x4fffffdf],dh
    8362:	2f                   	(bad)
    8363:	00 00                	add    BYTE PTR [rax],al
    8365:	01 d3                	add    ebx,edx
    8367:	23 00                	and    eax,DWORD PTR [rax]
    8369:	00 01                	add    BYTE PTR [rcx],al
    836b:	87 2f                	xchg   DWORD PTR [rdi],ebp
    836d:	00 00                	add    BYTE PTR [rax],al
    836f:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8375:	0f 4a 02             	cmovp  eax,DWORD PTR [rdx]
    8378:	00 00                	add    BYTE PTR [rax],al
    837a:	16                   	(bad)
    837b:	db 1a                	fistp  DWORD PTR [rdx]
    837d:	41 02 00             	add    al,BYTE PTR [r8]
    8380:	00 8a 21 00 00 d4    	add    BYTE PTR [rdx-0x2bffffdf],cl
    8386:	2f                   	(bad)
    8387:	00 00                	add    BYTE PTR [rax],al
    8389:	01 d3                	add    ebx,edx
    838b:	23 00                	and    eax,DWORD PTR [rax]
    838d:	00 01                	add    BYTE PTR [rcx],al
    838f:	87 2f                	xchg   DWORD PTR [rdi],ebp
    8391:	00 00                	add    BYTE PTR [rax],al
    8393:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8399:	0e                   	(bad)
    839a:	64 26 00 00          	fs add BYTE PTR fs:[rax],al
    839e:	16                   	(bad)
    839f:	9b                   	fwait
    83a0:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    83a3:	21 00                	and    DWORD PTR [rax],eax
    83a5:	00 eb                	add    bl,ch
    83a7:	2f                   	(bad)
    83a8:	00 00                	add    BYTE PTR [rax],al
    83aa:	01 d3                	add    ebx,edx
    83ac:	23 00                	and    eax,DWORD PTR [rax]
    83ae:	00 00                	add    BYTE PTR [rax],al
    83b0:	0c 06                	or     al,0x6
    83b2:	02 00                	add    al,BYTE PTR [rax]
    83b4:	00 28                	add    BYTE PTR [rax],ch
    83b6:	8f 01                	pop    QWORD PTR [rcx]
    83b8:	2e 23 00             	cs and eax,DWORD PTR [rax]
    83bb:	00 0b                	add    BYTE PTR [rbx],cl
    83bd:	30 00                	xor    BYTE PTR [rax],al
    83bf:	00 01                	add    BYTE PTR [rcx],al
    83c1:	e2 22                	loop   83e5 <_end+0x23cd>
    83c3:	00 00                	add    BYTE PTR [rax],al
    83c5:	01 0b                	add    DWORD PTR [rbx],ecx
    83c7:	30 00                	xor    BYTE PTR [rax],al
    83c9:	00 01                	add    BYTE PTR [rcx],al
    83cb:	2e 23 00             	cs and eax,DWORD PTR [rax]
    83ce:	00 00                	add    BYTE PTR [rax],al
    83d0:	0d a3 24 00 00       	or     eax,0x24a3
    83d5:	0c 67                	or     al,0x67
    83d7:	02 00                	add    al,BYTE PTR [rax]
    83d9:	00 28                	add    BYTE PTR [rax],ch
    83db:	4f 01 a6 21 00 00 2b 	rex.WRXB add QWORD PTR [r14+0x2b000021],r12
    83e2:	30 00                	xor    BYTE PTR [rax],al
    83e4:	00 01                	add    BYTE PTR [rcx],al
    83e6:	e2 22                	loop   840a <_end+0x23f2>
    83e8:	00 00                	add    BYTE PTR [rax],al
    83ea:	01 9c 24 00 00 00 0e 	add    DWORD PTR [rsp+0xe000000],ebx
    83f1:	c8 02 00 00          	enter  0x2,0x0
    83f5:	16                   	(bad)
    83f6:	e6 03                	out    0x3,al
    83f8:	1e                   	(bad)
    83f9:	c7                   	(bad)
    83fa:	23 00                	and    eax,DWORD PTR [rax]
    83fc:	00 47 30             	add    BYTE PTR [rdi+0x30],al
    83ff:	00 00                	add    BYTE PTR [rax],al
    8401:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    8407:	be 21 00 00 00       	mov    esi,0x21
    840c:	0e                   	(bad)
    840d:	52                   	push   rdx
    840e:	02 00                	add    al,BYTE PTR [rax]
    8410:	00 16                	add    BYTE PTR [rsi],dl
    8412:	ed                   	in     eax,dx
    8413:	01 01                	add    DWORD PTR [rcx],eax
    8415:	be 21 00 00 5e       	mov    esi,0x5e000021
    841a:	30 00                	xor    BYTE PTR [rax],al
    841c:	00 01                	add    BYTE PTR [rcx],al
    841e:	d3 23                	shl    DWORD PTR [rbx],cl
    8420:	00 00                	add    BYTE PTR [rax],al
    8422:	00 0f                	add    BYTE PTR [rdi],cl
    8424:	32 01                	xor    al,BYTE PTR [rcx]
    8426:	00 00                	add    BYTE PTR [rax],al
    8428:	16                   	(bad)
    8429:	ee                   	out    dx,al
    842a:	16                   	(bad)
    842b:	29 01                	sub    DWORD PTR [rcx],eax
    842d:	00 00                	add    BYTE PTR [rax],al
    842f:	be 21 00 00 82       	mov    esi,0x82000021
    8434:	30 00                	xor    BYTE PTR [rax],al
    8436:	00 01                	add    BYTE PTR [rcx],al
    8438:	d3 23                	shl    DWORD PTR [rbx],cl
    843a:	00 00                	add    BYTE PTR [rax],al
    843c:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    8442:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8443:	21 00                	and    DWORD PTR [rax],eax
    8445:	00 00                	add    BYTE PTR [rax],al
    8447:	0f bf 02             	movsx  eax,WORD PTR [rdx]
    844a:	00 00                	add    BYTE PTR [rax],al
    844c:	16                   	(bad)
    844d:	f3 1f                	repz (bad)
    844f:	b6 02                	mov    dh,0x2
    8451:	00 00                	add    BYTE PTR [rax],al
    8453:	91                   	xchg   ecx,eax
    8454:	21 00                	and    DWORD PTR [rax],eax
    8456:	00 a6 30 00 00 01    	add    BYTE PTR [rsi+0x1000030],ah
    845c:	d3 23                	shl    DWORD PTR [rbx],cl
    845e:	00 00                	add    BYTE PTR [rax],al
    8460:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    8466:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8467:	21 00                	and    DWORD PTR [rax],eax
    8469:	00 00                	add    BYTE PTR [rax],al
    846b:	0c af                	or     al,0xaf
    846d:	02 00                	add    al,BYTE PTR [rax]
    846f:	00 16                	add    BYTE PTR [rsi],dl
    8471:	7c 0e                	jl     8481 <_end+0x2469>
    8473:	35 00 00 00 c1       	xor    eax,0xc1000000
    8478:	30 00                	xor    BYTE PTR [rax],al
    847a:	00 01                	add    BYTE PTR [rcx],al
    847c:	d3 23                	shl    DWORD PTR [rbx],cl
    847e:	00 00                	add    BYTE PTR [rax],al
    8480:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    8486:	0c 2b                	or     al,0x2b
    8488:	00 00                	add    BYTE PTR [rax],al
    848a:	00 16                	add    BYTE PTR [rsi],dl
    848c:	7f 14                	jg     84a2 <_end+0x248a>
    848e:	c5 21 00             	(bad)
    8491:	00 dc                	add    ah,bl
    8493:	30 00                	xor    BYTE PTR [rax],al
    8495:	00 01                	add    BYTE PTR [rcx],al
    8497:	d3 23                	shl    DWORD PTR [rbx],cl
    8499:	00 00                	add    BYTE PTR [rax],al
    849b:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    84a1:	02 29                	add    ch,BYTE PTR [rcx]
    84a3:	27                   	(bad)
    84a4:	0c c2                	or     al,0xc2
    84a6:	2d 00 00 02 29       	sub    eax,0x29020000
    84ab:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    84ad:	df 2d 00 00 02 29    	fild   QWORD PTR [rip+0x29020000]        # 290284b3 <_end+0x2902249b>
    84b3:	2e 0e                	cs (bad)
    84b5:	3a 2f                	cmp    ch,BYTE PTR [rdi]
    84b7:	00 00                	add    BYTE PTR [rax],al
    84b9:	02 29                	add    ch,BYTE PTR [rcx]
    84bb:	36 0c 61             	ss or  al,0x61
    84be:	23 00                	and    eax,DWORD PTR [rax]
    84c0:	00 02                	add    BYTE PTR [rdx],al
    84c2:	29 37                	sub    DWORD PTR [rdi],esi
    84c4:	0c 94                	or     al,0x94
    84c6:	23 00                	and    eax,DWORD PTR [rax]
    84c8:	00 02                	add    BYTE PTR [rdx],al
    84ca:	29 39                	sub    DWORD PTR [rcx],edi
    84cc:	0c 71                	or     al,0x71
    84ce:	00 00                	add    BYTE PTR [rax],al
    84d0:	00 02                	add    BYTE PTR [rdx],al
    84d2:	29 39                	sub    DWORD PTR [rcx],edi
    84d4:	0c 8a                	or     al,0x8a
    84d6:	00 00                	add    BYTE PTR [rax],al
    84d8:	00 02                	add    BYTE PTR [rdx],al
    84da:	29 39                	sub    DWORD PTR [rcx],edi
    84dc:	0c a3                	or     al,0xa3
    84de:	00 00                	add    BYTE PTR [rax],al
    84e0:	00 02                	add    BYTE PTR [rdx],al
    84e2:	29 39                	sub    DWORD PTR [rcx],edi
    84e4:	0c bc                	or     al,0xbc
    84e6:	00 00                	add    BYTE PTR [rax],al
    84e8:	00 02                	add    BYTE PTR [rdx],al
    84ea:	29 39                	sub    DWORD PTR [rcx],edi
    84ec:	0c d5                	or     al,0xd5
    84ee:	00 00                	add    BYTE PTR [rax],al
    84f0:	00 02                	add    BYTE PTR [rdx],al
    84f2:	29 39                	sub    DWORD PTR [rcx],edi
    84f4:	0c ee                	or     al,0xee
    84f6:	00 00                	add    BYTE PTR [rax],al
    84f8:	00 02                	add    BYTE PTR [rdx],al
    84fa:	29 39                	sub    DWORD PTR [rcx],edi
    84fc:	0c 07                	or     al,0x7
    84fe:	01 00                	add    DWORD PTR [rax],eax
    8500:	00 02                	add    BYTE PTR [rdx],al
    8502:	29 3a                	sub    DWORD PTR [rdx],edi
    8504:	0c fa                	or     al,0xfa
    8506:	2d 00 00 02 29       	sub    eax,0x29020000
    850b:	3b 0c 10             	cmp    ecx,DWORD PTR [rax+rdx*1]
    850e:	2e 00 00             	cs add BYTE PTR [rax],al
    8511:	02 29                	add    ch,BYTE PTR [rcx]
    8513:	3c 0c                	cmp    al,0xc
    8515:	27                   	(bad)
    8516:	2e 00 00             	cs add BYTE PTR [rax],al
    8519:	02 29                	add    ch,BYTE PTR [rcx]
    851b:	3d 0c 3e 2e 00       	cmp    eax,0x2e3e0c
    8520:	00 02                	add    BYTE PTR [rdx],al
    8522:	29 3f                	sub    DWORD PTR [rdi],edi
    8524:	0c 43                	or     al,0x43
    8526:	21 00                	and    DWORD PTR [rax],eax
    8528:	00 02                	add    BYTE PTR [rdx],al
    852a:	29 3f                	sub    DWORD PTR [rdi],edi
    852c:	0c 1f                	or     al,0x1f
    852e:	13 00                	adc    eax,DWORD PTR [rax]
    8530:	00 02                	add    BYTE PTR [rdx],al
    8532:	29 3f                	sub    DWORD PTR [rdi],edi
    8534:	0c 68                	or     al,0x68
    8536:	2e 00 00             	cs add BYTE PTR [rax],al
    8539:	02 29                	add    ch,BYTE PTR [rcx]
    853b:	41 0c 84             	rex.B or al,0x84
    853e:	2e 00 00             	cs add BYTE PTR [rax],al
    8541:	02 29                	add    ch,BYTE PTR [rcx]
    8543:	43 0c 9b             	rex.XB or al,0x9b
    8546:	2e 00 00             	cs add BYTE PTR [rax],al
    8549:	02 29                	add    ch,BYTE PTR [rcx]
    854b:	46 0c b7             	rex.RX or al,0xb7
    854e:	2e 00 00             	cs add BYTE PTR [rax],al
    8551:	02 29                	add    ch,BYTE PTR [rcx]
    8553:	47 0c d3             	rex.RXB or al,0xd3
    8556:	2e 00 00             	cs add BYTE PTR [rax],al
    8559:	02 29                	add    ch,BYTE PTR [rcx]
    855b:	48 0c f8             	rex.W or al,0xf8
    855e:	2e 00 00             	cs add BYTE PTR [rax],al
    8561:	02 29                	add    ch,BYTE PTR [rcx]
    8563:	4a 0c 19             	rex.WX or al,0x19
    8566:	2f                   	(bad)
    8567:	00 00                	add    BYTE PTR [rax],al
    8569:	02 29                	add    ch,BYTE PTR [rcx]
    856b:	4b 0c 4d             	rex.WXB or al,0x4d
    856e:	2f                   	(bad)
    856f:	00 00                	add    BYTE PTR [rax],al
    8571:	02 29                	add    ch,BYTE PTR [rcx]
    8573:	4d 0c 5a             	rex.WRB or al,0x5a
    8576:	2f                   	(bad)
    8577:	00 00                	add    BYTE PTR [rax],al
    8579:	02 29                	add    ch,BYTE PTR [rcx]
    857b:	4e 0c 6c             	rex.WRX or al,0x6c
    857e:	2f                   	(bad)
    857f:	00 00                	add    BYTE PTR [rax],al
    8581:	02 29                	add    ch,BYTE PTR [rcx]
    8583:	4f 0c 8c             	rex.WRXB or al,0x8c
    8586:	2f                   	(bad)
    8587:	00 00                	add    BYTE PTR [rax],al
    8589:	02 29                	add    ch,BYTE PTR [rcx]
    858b:	50                   	push   rax
    858c:	0c b0                	or     al,0xb0
    858e:	2f                   	(bad)
    858f:	00 00                	add    BYTE PTR [rax],al
    8591:	02 29                	add    ch,BYTE PTR [rcx]
    8593:	51                   	push   rcx
    8594:	0c d4                	or     al,0xd4
    8596:	2f                   	(bad)
    8597:	00 00                	add    BYTE PTR [rax],al
    8599:	02 29                	add    ch,BYTE PTR [rcx]
    859b:	53                   	push   rbx
    859c:	0c eb                	or     al,0xeb
    859e:	2f                   	(bad)
    859f:	00 00                	add    BYTE PTR [rax],al
    85a1:	02 29                	add    ch,BYTE PTR [rcx]
    85a3:	54                   	push   rsp
    85a4:	0c 10                	or     al,0x10
    85a6:	30 00                	xor    BYTE PTR [rax],al
    85a8:	00 80 01 20 10 15    	add    BYTE PTR [rax+0x15102001],al
    85ae:	a9 01 10 d1 10       	test   eax,0x10d11001
    85b3:	00 00                	add    BYTE PTR [rax],al
    85b5:	11 32                	adc    DWORD PTR [rdx],esi
    85b7:	00 00                	add    BYTE PTR [rax],al
    85b9:	5b                   	pop    rbx
    85ba:	4c 25 00 00 aa 01    	rex.WR and rax,0x1aa0000
    85c0:	0d be 21 00 00       	or     eax,0x21be
    85c5:	08 00                	or     BYTE PTR [rax],al
    85c7:	5b                   	pop    rbx
    85c8:	99                   	cdq
    85c9:	28 00                	sub    BYTE PTR [rax],al
    85cb:	00 ab 01 0f c5 21    	add    BYTE PTR [rbx+0x21c50f01],ch
    85d1:	00 00                	add    BYTE PTR [rax],al
    85d3:	10 10                	adc    BYTE PTR [rax],dl
    85d5:	00 81 01 d3 10 00    	add    BYTE PTR [rcx+0x10d301],al
    85db:	00 15 b4 01 03 e4    	add    BYTE PTR [rip+0xffffffffe40301b4],dl        # ffffffffe4038795 <_end+0xffffffffe403277d>
    85e1:	31 00                	xor    DWORD PTR [rax],eax
    85e3:	00 10                	add    BYTE PTR [rax],dl
    85e5:	08 68 04             	or     BYTE PTR [rax+0x4],ch
    85e8:	00 00                	add    BYTE PTR [rax],al
    85ea:	2a 39                	sub    bh,BYTE PTR [rcx]
    85ec:	13 2c 32             	adc    ebp,DWORD PTR [rdx+rsi*1]
    85ef:	00 00                	add    BYTE PTR [rax],al
    85f1:	82                   	(bad)
    85f2:	01 be 21 00 00 3a    	add    DWORD PTR [rsi+0x3a000021],edi
    85f8:	32 00                	xor    al,BYTE PTR [rax]
    85fa:	00 83 01 03 00 12    	add    BYTE PTR [rbx+0x12000301],al
    8600:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    8603:	00 00                	add    BYTE PTR [rax],al
    8605:	00 12                	add    BYTE PTR [rdx],dl
    8607:	02 04 ce             	add    al,BYTE PTR [rsi+rcx*8]
    860a:	02 00                	add    al,BYTE PTR [rax]
    860c:	00 08                	add    BYTE PTR [rax],cl
    860e:	1f                   	(bad)
    860f:	2b 00                	sub    eax,DWORD PTR [rax]
    8611:	00 2b                	add    BYTE PTR [rbx],ch
    8613:	14 17                	adc    al,0x17
    8615:	e3 20                	jrcxz  8637 <_end+0x261f>
    8617:	00 00                	add    BYTE PTR [rax],al
    8619:	08 5c 30 00          	or     BYTE PTR [rax+rsi*1+0x0],bl
    861d:	00 2c 06             	add    BYTE PTR [rsi+rax*1],ch
    8620:	15 4e 2a 00 00       	adc    eax,0x2a4e
    8625:	13 54 32 00          	adc    edx,DWORD PTR [rdx+rsi*1+0x0]
    8629:	00 0e                	add    BYTE PTR [rsi],cl
    862b:	87 01                	xchg   DWORD PTR [rcx],eax
    862d:	00 00                	add    BYTE PTR [rax],al
    862f:	2d 57 01 01 48       	sub    eax,0x48010157
    8634:	32 00                	xor    al,BYTE PTR [rax]
    8636:	00 7c 32 00          	add    BYTE PTR [rdx+rsi*1+0x0],bh
    863a:	00 01                	add    BYTE PTR [rcx],al
    863c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    863d:	21 00                	and    DWORD PTR [rax],eax
    863f:	00 00                	add    BYTE PTR [rax],al
    8641:	0e                   	(bad)
    8642:	73 15                	jae    8659 <_end+0x2641>
    8644:	00 00                	add    BYTE PTR [rax],al
    8646:	2d a7 03 0f 48       	sub    eax,0x480f03a7
    864b:	32 00                	xor    al,BYTE PTR [rax]
    864d:	00 93 32 00 00 01    	add    BYTE PTR [rbx+0x1000032],dl
    8653:	93                   	xchg   ebx,eax
    8654:	32 00                	xor    al,BYTE PTR [rax]
    8656:	00 00                	add    BYTE PTR [rax],al
    8658:	0d 8e 2a 00 00       	or     eax,0x2a8e
    865d:	0c aa                	or     al,0xaa
    865f:	15 00 00 2e d3       	adc    eax,0xd32e0000
    8664:	01 f3                	add    ebx,esi
    8666:	2e 00 00             	cs add BYTE PTR [rax],al
    8669:	b8 32 00 00 01       	mov    eax,0x1000032
    866e:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8672:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    8678:	93                   	xchg   ebx,eax
    8679:	32 00                	xor    al,BYTE PTR [rax]
    867b:	00 00                	add    BYTE PTR [rax],al
    867d:	0e                   	(bad)
    867e:	80 32 00             	xor    BYTE PTR [rdx],0x0
    8681:	00 2d b5 03 0f 48    	add    BYTE PTR [rip+0x480f03b5],ch        # 480f8a3c <_end+0x480f2a24>
    8687:	32 00                	xor    al,BYTE PTR [rax]
    8689:	00 d4                	add    ah,dl
    868b:	32 00                	xor    al,BYTE PTR [rax]
    868d:	00 01                	add    BYTE PTR [rcx],al
    868f:	9c                   	pushf
    8690:	24 00                	and    al,0x0
    8692:	00 01                	add    BYTE PTR [rcx],al
    8694:	93                   	xchg   ebx,eax
    8695:	32 00                	xor    al,BYTE PTR [rax]
    8697:	00 00                	add    BYTE PTR [rax],al
    8699:	0e                   	(bad)
    869a:	e5 0d                	in     eax,0xd
    869c:	00 00                	add    BYTE PTR [rax],al
    869e:	2d cb 03 0c a6       	sub    eax,0xa60c03cb
    86a3:	21 00                	and    DWORD PTR [rax],eax
    86a5:	00 f0                	add    al,dh
    86a7:	32 00                	xor    al,BYTE PTR [rax]
    86a9:	00 01                	add    BYTE PTR [rcx],al
    86ab:	0b 30                	or     esi,DWORD PTR [rax]
    86ad:	00 00                	add    BYTE PTR [rax],al
    86af:	01 93 32 00 00 00    	add    DWORD PTR [rbx+0x32],edx
    86b5:	0e                   	(bad)
    86b6:	cc                   	int3
    86b7:	1b 00                	sbb    eax,DWORD PTR [rax]
    86b9:	00 2d d5 02 0c a6    	add    BYTE PTR [rip+0xffffffffa60c02d5],ch        # ffffffffa60c8994 <_end+0xffffffffa60c297c>
    86bf:	21 00                	and    DWORD PTR [rax],eax
    86c1:	00 0c 33             	add    BYTE PTR [rbx+rsi*1],cl
    86c4:	00 00                	add    BYTE PTR [rax],al
    86c6:	01 93 32 00 00 01    	add    DWORD PTR [rbx+0x1000032],edx
    86cc:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    86cd:	21 00                	and    DWORD PTR [rax],eax
    86cf:	00 00                	add    BYTE PTR [rax],al
    86d1:	0c be                	or     al,0xbe
    86d3:	23 00                	and    eax,DWORD PTR [rax]
    86d5:	00 2e                	add    BYTE PTR [rsi],ch
    86d7:	b8 01 a6 21 00       	mov    eax,0x21a601
    86dc:	00 28                	add    BYTE PTR [rax],ch
    86de:	33 00                	xor    eax,DWORD PTR [rax]
    86e0:	00 01                	add    BYTE PTR [rcx],al
    86e2:	93                   	xchg   ebx,eax
    86e3:	32 00                	xor    al,BYTE PTR [rax]
    86e5:	00 01                	add    BYTE PTR [rcx],al
    86e7:	0b 30                	or     esi,DWORD PTR [rax]
    86e9:	00 00                	add    BYTE PTR [rax],al
    86eb:	22 00                	and    al,BYTE PTR [rax]
    86ed:	04 e8                	add    al,0xe8
    86ef:	21 00                	and    DWORD PTR [rax],eax
    86f1:	00 2d 1b 03 0c df    	add    BYTE PTR [rip+0xffffffffdf0c031b],ch        # ffffffffdf0c8a12 <_end+0xffffffffdf0c29fa>
    86f7:	21 00                	and    DWORD PTR [rax],eax
    86f9:	00 a6 21 00 00 49    	add    BYTE PTR [rsi+0x49000021],ah
    86ff:	33 00                	xor    eax,DWORD PTR [rax]
    8701:	00 01                	add    BYTE PTR [rcx],al
    8703:	93                   	xchg   ebx,eax
    8704:	32 00                	xor    al,BYTE PTR [rax]
    8706:	00 01                	add    BYTE PTR [rcx],al
    8708:	0b 30                	or     esi,DWORD PTR [rax]
    870a:	00 00                	add    BYTE PTR [rax],al
    870c:	22 00                	and    al,BYTE PTR [rax]
    870e:	0e                   	(bad)
    870f:	74 15                	je     8726 <_end+0x270e>
    8711:	00 00                	add    BYTE PTR [rax],al
    8713:	2d a8 03 0f 48       	sub    eax,0x480f03a8
    8718:	32 00                	xor    al,BYTE PTR [rax]
    871a:	00 60 33             	add    BYTE PTR [rax+0x33],ah
    871d:	00 00                	add    BYTE PTR [rax],al
    871f:	01 93 32 00 00 00    	add    DWORD PTR [rbx+0x32],edx
    8725:	5a                   	pop    rdx
    8726:	8b 15 00 00 2d ae    	mov    edx,DWORD PTR [rip+0xffffffffae2d0000]        # ffffffffae2d872c <_end+0xffffffffae2d2714>
    872c:	03 0f                	add    ecx,DWORD PTR [rdi]
    872e:	48 32 00             	rex.W xor al,BYTE PTR [rax]
    8731:	00 0e                	add    BYTE PTR [rsi],cl
    8733:	35 19 00 00 2d       	xor    eax,0x2d000019
    8738:	62 01 01 2e 23       	(bad)
    873d:	00 00                	add    BYTE PTR [rax],al
    873f:	8e 33                	mov    ?,WORD PTR [rbx]
    8741:	00 00                	add    BYTE PTR [rax],al
    8743:	01 d3                	add    ebx,edx
    8745:	23 00                	and    eax,DWORD PTR [rax]
    8747:	00 01                	add    BYTE PTR [rcx],al
    8749:	2e 23 00             	cs and eax,DWORD PTR [rax]
    874c:	00 01                	add    BYTE PTR [rcx],al
    874e:	8e 33                	mov    ?,WORD PTR [rbx]
    8750:	00 00                	add    BYTE PTR [rax],al
    8752:	00 0d 54 32 00 00    	add    BYTE PTR [rip+0x3254],cl        # b9ac <_end+0x5994>
    8758:	0e                   	(bad)
    8759:	bd 10 00 00 2d       	mov    ebp,0x2d000010
    875e:	41 01 0f             	add    DWORD PTR [r15],ecx
    8761:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8764:	00 b9 33 00 00 01    	add    BYTE PTR [rcx+0x1000033],bh
    876a:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    876e:	01 d3                	add    ebx,edx
    8770:	23 00                	and    eax,DWORD PTR [rax]
    8772:	00 01                	add    BYTE PTR [rcx],al
    8774:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8777:	00 01                	add    BYTE PTR [rcx],al
    8779:	8e 33                	mov    ?,WORD PTR [rbx]
    877b:	00 00                	add    BYTE PTR [rax],al
    877d:	00 0e                	add    BYTE PTR [rsi],cl
    877f:	c5 29 00             	(bad)
    8782:	00 2d 3d 01 0c a6    	add    BYTE PTR [rip+0xffffffffa60c013d],ch        # ffffffffa60c88c5 <_end+0xffffffffa60c28ad>
    8788:	21 00                	and    DWORD PTR [rax],eax
    878a:	00 d0                	add    al,dl
    878c:	33 00                	xor    eax,DWORD PTR [rax]
    878e:	00 01                	add    BYTE PTR [rcx],al
    8790:	d0 33                	shl    BYTE PTR [rbx],1
    8792:	00 00                	add    BYTE PTR [rax],al
    8794:	00 0d 60 32 00 00    	add    BYTE PTR [rip+0x3260],cl        # b9fa <_end+0x59e2>
    879a:	0c b6                	or     al,0xb6
    879c:	31 00                	xor    DWORD PTR [rax],eax
    879e:	00 2e                	add    BYTE PTR [rsi],ch
    87a0:	fd                   	std
    87a1:	01 2e                	add    DWORD PTR [rsi],ebp
    87a3:	23 00                	and    eax,DWORD PTR [rax]
    87a5:	00 fa                	add    dl,bh
    87a7:	33 00                	xor    eax,DWORD PTR [rax]
    87a9:	00 01                	add    BYTE PTR [rcx],al
    87ab:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    87af:	01 fa                	add    edx,edi
    87b1:	33 00                	xor    eax,DWORD PTR [rax]
    87b3:	00 01                	add    BYTE PTR [rcx],al
    87b5:	2e 23 00             	cs and eax,DWORD PTR [rax]
    87b8:	00 01                	add    BYTE PTR [rcx],al
    87ba:	8e 33                	mov    ?,WORD PTR [rbx]
    87bc:	00 00                	add    BYTE PTR [rax],al
    87be:	00 0d d3 23 00 00    	add    BYTE PTR [rip+0x23d3],cl        # ab97 <_end+0x4b7f>
    87c4:	0e                   	(bad)
    87c5:	81 32 00 00 2d b6    	xor    DWORD PTR [rdx],0xb62d0000
    87cb:	03 0f                	add    ecx,DWORD PTR [rdi]
    87cd:	48 32 00             	rex.W xor al,BYTE PTR [rax]
    87d0:	00 1b                	add    BYTE PTR [rbx],bl
    87d2:	34 00                	xor    al,0x0
    87d4:	00 01                	add    BYTE PTR [rcx],al
    87d6:	9c                   	pushf
    87d7:	24 00                	and    al,0x0
    87d9:	00 01                	add    BYTE PTR [rcx],al
    87db:	93                   	xchg   ebx,eax
    87dc:	32 00                	xor    al,BYTE PTR [rax]
    87de:	00 00                	add    BYTE PTR [rax],al
    87e0:	0e                   	(bad)
    87e1:	f5                   	cmc
    87e2:	1c 00                	sbb    al,0x0
    87e4:	00 2d bc 03 0f 48    	add    BYTE PTR [rip+0x480f03bc],ch        # 480f8ba6 <_end+0x480f2b8e>
    87ea:	32 00                	xor    al,BYTE PTR [rax]
    87ec:	00 32                	add    BYTE PTR [rdx],dh
    87ee:	34 00                	xor    al,0x0
    87f0:	00 01                	add    BYTE PTR [rcx],al
    87f2:	9c                   	pushf
    87f3:	24 00                	and    al,0x0
    87f5:	00 00                	add    BYTE PTR [rax],al
    87f7:	0c 5b                	or     al,0x5b
    87f9:	1a 00                	sbb    al,BYTE PTR [rax]
    87fb:	00 2e                	add    BYTE PTR [rsi],ch
    87fd:	90                   	nop
    87fe:	01 a6 21 00 00 53    	add    DWORD PTR [rsi+0x53000021],esp
    8804:	34 00                	xor    al,0x0
    8806:	00 01                	add    BYTE PTR [rcx],al
    8808:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    880c:	01 2e                	add    DWORD PTR [rsi],ebp
    880e:	23 00                	and    eax,DWORD PTR [rax]
    8810:	00 01                	add    BYTE PTR [rcx],al
    8812:	0b 30                	or     esi,DWORD PTR [rax]
    8814:	00 00                	add    BYTE PTR [rax],al
    8816:	22 00                	and    al,BYTE PTR [rax]
    8818:	04 d5                	add    al,0xd5
    881a:	20 00                	and    BYTE PTR [rax],al
    881c:	00 2d 22 03 0c cc    	add    BYTE PTR [rip+0xffffffffcc0c0322],ch        # ffffffffcc0c8b44 <_end+0xffffffffcc0c2b2c>
    8822:	20 00                	and    BYTE PTR [rax],al
    8824:	00 a6 21 00 00 74    	add    BYTE PTR [rsi+0x74000021],ah
    882a:	34 00                	xor    al,0x0
    882c:	00 01                	add    BYTE PTR [rcx],al
    882e:	0b 30                	or     esi,DWORD PTR [rax]
    8830:	00 00                	add    BYTE PTR [rax],al
    8832:	01 0b                	add    DWORD PTR [rbx],ecx
    8834:	30 00                	xor    BYTE PTR [rax],al
    8836:	00 22                	add    BYTE PTR [rdx],ah
    8838:	00 0e                	add    BYTE PTR [rsi],cl
    883a:	c6                   	(bad)
    883b:	18 00                	sbb    BYTE PTR [rax],al
    883d:	00 2d d3 03 0f 48    	add    BYTE PTR [rip+0x480f03d3],ch        # 480f8c16 <_end+0x480f2bfe>
    8843:	32 00                	xor    al,BYTE PTR [rax]
    8845:	00 90 34 00 00 01    	add    BYTE PTR [rax+0x1000034],dl
    884b:	48 32 00             	rex.W xor al,BYTE PTR [rax]
    884e:	00 01                	add    BYTE PTR [rcx],al
    8850:	93                   	xchg   ebx,eax
    8851:	32 00                	xor    al,BYTE PTR [rax]
    8853:	00 00                	add    BYTE PTR [rax],al
    8855:	0c bd                	or     al,0xbd
    8857:	23 00                	and    eax,DWORD PTR [rax]
    8859:	00 2e                	add    BYTE PTR [rsi],ch
    885b:	cb                   	retf
    885c:	01 a6 21 00 00 b0    	add    DWORD PTR [rsi-0x4fffffdf],esp
    8862:	34 00                	xor    al,0x0
    8864:	00 01                	add    BYTE PTR [rcx],al
    8866:	93                   	xchg   ebx,eax
    8867:	32 00                	xor    al,BYTE PTR [rax]
    8869:	00 01                	add    BYTE PTR [rcx],al
    886b:	0b 30                	or     esi,DWORD PTR [rax]
    886d:	00 00                	add    BYTE PTR [rax],al
    886f:	01 b0 34 00 00 00    	add    DWORD PTR [rax+0x34],esi
    8875:	0d d1 29 00 00       	or     eax,0x29d1
    887a:	04 1d                	add    al,0x1d
    887c:	1b 00                	sbb    eax,DWORD PTR [rax]
    887e:	00 2d 6b 03 0c 14    	add    BYTE PTR [rip+0x140c036b],ch        # 140c8bef <_end+0x140c2bd7>
    8884:	1b 00                	sbb    eax,DWORD PTR [rax]
    8886:	00 a6 21 00 00 da    	add    BYTE PTR [rsi-0x25ffffdf],ah
    888c:	34 00                	xor    al,0x0
    888e:	00 01                	add    BYTE PTR [rcx],al
    8890:	93                   	xchg   ebx,eax
    8891:	32 00                	xor    al,BYTE PTR [rax]
    8893:	00 01                	add    BYTE PTR [rcx],al
    8895:	0b 30                	or     esi,DWORD PTR [rax]
    8897:	00 00                	add    BYTE PTR [rax],al
    8899:	01 b0 34 00 00 00    	add    DWORD PTR [rax+0x34],esi
    889f:	0c 5a                	or     al,0x5a
    88a1:	1a 00                	sbb    al,BYTE PTR [rax]
    88a3:	00 2e                	add    BYTE PTR [rsi],ch
    88a5:	a3 01 a6 21 00 00 ff 	movabs ds:0x34ff000021a601,eax
    88ac:	34 00 
    88ae:	00 01                	add    BYTE PTR [rcx],al
    88b0:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    88b4:	01 2e                	add    DWORD PTR [rsi],ebp
    88b6:	23 00                	and    eax,DWORD PTR [rax]
    88b8:	00 01                	add    BYTE PTR [rcx],al
    88ba:	0b 30                	or     esi,DWORD PTR [rax]
    88bc:	00 00                	add    BYTE PTR [rax],al
    88be:	01 b0 34 00 00 00    	add    DWORD PTR [rax+0x34],esi
    88c4:	04 b9                	add    al,0xb9
    88c6:	19 00                	sbb    DWORD PTR [rax],eax
    88c8:	00 2d 72 03 0c b0    	add    BYTE PTR [rip+0xffffffffb00c0372],ch        # ffffffffb00c8c40 <_end+0xffffffffb00c2c28>
    88ce:	19 00                	sbb    DWORD PTR [rax],eax
    88d0:	00 a6 21 00 00 24    	add    BYTE PTR [rsi+0x24000021],ah
    88d6:	35 00 00 01 0b       	xor    eax,0xb010000
    88db:	30 00                	xor    BYTE PTR [rax],al
    88dd:	00 01                	add    BYTE PTR [rcx],al
    88df:	0b 30                	or     esi,DWORD PTR [rax]
    88e1:	00 00                	add    BYTE PTR [rax],al
    88e3:	01 b0 34 00 00 00    	add    DWORD PTR [rax+0x34],esi
    88e9:	0c 6f                	or     al,0x6f
    88eb:	13 00                	adc    eax,DWORD PTR [rax]
    88ed:	00 2e                	add    BYTE PTR [rsi],ch
    88ef:	c5 01 a6             	(bad)
    88f2:	21 00                	and    DWORD PTR [rax],eax
    88f4:	00 3f                	add    BYTE PTR [rdi],bh
    88f6:	35 00 00 01 0b       	xor    eax,0xb010000
    88fb:	30 00                	xor    BYTE PTR [rax],al
    88fd:	00 01                	add    BYTE PTR [rcx],al
    88ff:	b0 34                	mov    al,0x34
    8901:	00 00                	add    BYTE PTR [rax],al
    8903:	00 04 9b             	add    BYTE PTR [rbx+rbx*4],al
    8906:	25 00 00 2d 6f       	and    eax,0x6f2d0000
    890b:	03 0c 92             	add    ecx,DWORD PTR [rdx+rdx*4]
    890e:	25 00 00 a6 21       	and    eax,0x21a60000
    8913:	00 00                	add    BYTE PTR [rax],al
    8915:	5f                   	pop    rdi
    8916:	35 00 00 01 0b       	xor    eax,0xb010000
    891b:	30 00                	xor    BYTE PTR [rax],al
    891d:	00 01                	add    BYTE PTR [rcx],al
    891f:	b0 34                	mov    al,0x34
    8921:	00 00                	add    BYTE PTR [rax],al
    8923:	00 0c 02             	add    BYTE PTR [rdx+rax*1],cl
    8926:	31 00                	xor    DWORD PTR [rax],eax
    8928:	00 2e                	add    BYTE PTR [rsi],ch
    892a:	ec                   	in     al,dx
    892b:	01 2e                	add    DWORD PTR [rsi],ebp
    892d:	23 00                	and    eax,DWORD PTR [rax]
    892f:	00 7f 35             	add    BYTE PTR [rdi+0x35],bh
    8932:	00 00                	add    BYTE PTR [rax],al
    8934:	01 e2                	add    edx,esp
    8936:	22 00                	and    al,BYTE PTR [rax]
    8938:	00 01                	add    BYTE PTR [rcx],al
    893a:	9c                   	pushf
    893b:	24 00                	and    al,0x0
    893d:	00 01                	add    BYTE PTR [rcx],al
    893f:	8e 33                	mov    ?,WORD PTR [rbx]
    8941:	00 00                	add    BYTE PTR [rax],al
    8943:	00 0c 49             	add    BYTE PTR [rcx+rcx*2],cl
    8946:	30 00                	xor    BYTE PTR [rax],al
    8948:	00 2e                	add    BYTE PTR [rsi],ch
    894a:	60                   	(bad)
    894b:	01 f3                	add    ebx,esi
    894d:	2e 00 00             	cs add BYTE PTR [rax],al
    8950:	9a                   	(bad)
    8951:	35 00 00 01 f3       	xor    eax,0xf3010000
    8956:	2e 00 00             	cs add BYTE PTR [rax],al
    8959:	01 0b                	add    DWORD PTR [rbx],ecx
    895b:	30 00                	xor    BYTE PTR [rax],al
    895d:	00 00                	add    BYTE PTR [rax],al
    895f:	0c b1                	or     al,0xb1
    8961:	16                   	(bad)
    8962:	00 00                	add    BYTE PTR [rax],al
    8964:	2d 82 0c a6 21       	sub    eax,0x21a60c82
    8969:	00 00                	add    BYTE PTR [rax],al
    896b:	b5 35                	mov    ch,0x35
    896d:	00 00                	add    BYTE PTR [rax],al
    896f:	01 0b                	add    DWORD PTR [rbx],ecx
    8971:	30 00                	xor    BYTE PTR [rax],al
    8973:	00 01                	add    BYTE PTR [rcx],al
    8975:	0b 30                	or     esi,DWORD PTR [rax]
    8977:	00 00                	add    BYTE PTR [rax],al
    8979:	00 0c 2a             	add    BYTE PTR [rdx+rbp*1],cl
    897c:	11 00                	adc    DWORD PTR [rax],eax
    897e:	00 2d 9b 0c a6 21    	add    BYTE PTR [rip+0x21a60c9b],ch        # 21a6961f <_end+0x21a63607>
    8984:	00 00                	add    BYTE PTR [rax],al
    8986:	d0 35 00 00 01 0b    	shl    BYTE PTR [rip+0xb010000],1        # b01898c <_end+0xb012974>
    898c:	30 00                	xor    BYTE PTR [rax],al
    898e:	00 01                	add    BYTE PTR [rcx],al
    8990:	0b 30                	or     esi,DWORD PTR [rax]
    8992:	00 00                	add    BYTE PTR [rax],al
    8994:	00 0c 44             	add    BYTE PTR [rsp+rax*2],cl
    8997:	1a 00                	sbb    al,BYTE PTR [rax]
    8999:	00 2e                	add    BYTE PTR [rsi],ch
    899b:	3c 01                	cmp    al,0x1
    899d:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    89a1:	eb 35                	jmp    89d8 <_end+0x29c0>
    89a3:	00 00                	add    BYTE PTR [rax],al
    89a5:	01 f3                	add    ebx,esi
    89a7:	2e 00 00             	cs add BYTE PTR [rax],al
    89aa:	01 0b                	add    DWORD PTR [rbx],ecx
    89ac:	30 00                	xor    BYTE PTR [rax],al
    89ae:	00 00                	add    BYTE PTR [rax],al
    89b0:	0c 78                	or     al,0x78
    89b2:	0e                   	(bad)
    89b3:	00 00                	add    BYTE PTR [rax],al
    89b5:	2d d4 0f 2e 23       	sub    eax,0x232e0fd4
    89ba:	00 00                	add    BYTE PTR [rax],al
    89bc:	06                   	(bad)
    89bd:	36 00 00             	ss add BYTE PTR [rax],al
    89c0:	01 0b                	add    DWORD PTR [rbx],ecx
    89c2:	30 00                	xor    BYTE PTR [rax],al
    89c4:	00 01                	add    BYTE PTR [rcx],al
    89c6:	0b 30                	or     esi,DWORD PTR [rax]
    89c8:	00 00                	add    BYTE PTR [rax],al
    89ca:	00 0e                	add    BYTE PTR [rsi],cl
    89cc:	35 2e 00 00 2d       	xor    eax,0x2d00002e
    89d1:	13 04 0f             	adc    eax,DWORD PTR [rdi+rcx*1]
    89d4:	2e 23 00             	cs and eax,DWORD PTR [rax]
    89d7:	00 2c 36             	add    BYTE PTR [rsi+rsi*1],ch
    89da:	00 00                	add    BYTE PTR [rax],al
    89dc:	01 f3                	add    ebx,esi
    89de:	2e 00 00             	cs add BYTE PTR [rax],al
    89e1:	01 2e                	add    DWORD PTR [rsi],ebp
    89e3:	23 00                	and    eax,DWORD PTR [rax]
    89e5:	00 01                	add    BYTE PTR [rcx],al
    89e7:	0b 30                	or     esi,DWORD PTR [rax]
    89e9:	00 00                	add    BYTE PTR [rax],al
    89eb:	01 2c 36             	add    DWORD PTR [rsi+rsi*1],ebp
    89ee:	00 00                	add    BYTE PTR [rax],al
    89f0:	00 0d ce 36 00 00    	add    BYTE PTR [rip+0x36ce],cl        # c0c4 <_end+0x60ac>
    89f6:	84 01                	test   BYTE PTR [rcx],al
    89f8:	74 6d                	je     8a67 <_end+0x2a4f>
    89fa:	00 38                	add    BYTE PTR [rax],bh
    89fc:	2f                   	(bad)
    89fd:	07                   	(bad)
    89fe:	08 ce                	or     dh,cl
    8a00:	36 00 00             	ss add BYTE PTR [rax],al
    8a03:	06                   	(bad)
    8a04:	ff 1b                	call   FWORD PTR [rbx]
    8a06:	00 00                	add    BYTE PTR [rax],al
    8a08:	2f                   	(bad)
    8a09:	09 07                	or     DWORD PTR [rdi],eax
    8a0b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8a0c:	21 00                	and    DWORD PTR [rax],eax
    8a0e:	00 00                	add    BYTE PTR [rax],al
    8a10:	06                   	(bad)
    8a11:	66 18 00             	data16 sbb BYTE PTR [rax],al
    8a14:	00 2f                	add    BYTE PTR [rdi],ch
    8a16:	0a 07                	or     al,BYTE PTR [rdi]
    8a18:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8a19:	21 00                	and    DWORD PTR [rax],eax
    8a1b:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    8a1e:	ac                   	lods   al,BYTE PTR ds:[rsi]
    8a1f:	0c 00                	or     al,0x0
    8a21:	00 2f                	add    BYTE PTR [rdi],ch
    8a23:	0b 07                	or     eax,DWORD PTR [rdi]
    8a25:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8a26:	21 00                	and    DWORD PTR [rax],eax
    8a28:	00 08                	add    BYTE PTR [rax],cl
    8a2a:	06                   	(bad)
    8a2b:	f9                   	stc
    8a2c:	19 00                	sbb    DWORD PTR [rax],eax
    8a2e:	00 2f                	add    BYTE PTR [rdi],ch
    8a30:	0c 07                	or     al,0x7
    8a32:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8a33:	21 00                	and    DWORD PTR [rax],eax
    8a35:	00 0c 06             	add    BYTE PTR [rsi+rax*1],cl
    8a38:	f0 21 00             	lock and DWORD PTR [rax],eax
    8a3b:	00 2f                	add    BYTE PTR [rdi],ch
    8a3d:	0d 07 a6 21 00       	or     eax,0x21a607
    8a42:	00 10                	add    BYTE PTR [rax],dl
    8a44:	06                   	(bad)
    8a45:	87 32                	xchg   DWORD PTR [rdx],esi
    8a47:	00 00                	add    BYTE PTR [rax],al
    8a49:	2f                   	(bad)
    8a4a:	0e                   	(bad)
    8a4b:	07                   	(bad)
    8a4c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8a4d:	21 00                	and    DWORD PTR [rax],eax
    8a4f:	00 14 06             	add    BYTE PTR [rsi+rax*1],dl
    8a52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8a53:	29 00                	sub    DWORD PTR [rax],eax
    8a55:	00 2f                	add    BYTE PTR [rdi],ch
    8a57:	0f 07                	sysretd
    8a59:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8a5a:	21 00                	and    DWORD PTR [rax],eax
    8a5c:	00 18                	add    BYTE PTR [rax],bl
    8a5e:	06                   	(bad)
    8a5f:	d2 29                	shr    BYTE PTR [rcx],cl
    8a61:	00 00                	add    BYTE PTR [rax],al
    8a63:	2f                   	(bad)
    8a64:	10 07                	adc    BYTE PTR [rdi],al
    8a66:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8a67:	21 00                	and    DWORD PTR [rax],eax
    8a69:	00 1c 06             	add    BYTE PTR [rsi+rax*1],bl
    8a6c:	66 13 00             	adc    ax,WORD PTR [rax]
    8a6f:	00 2f                	add    BYTE PTR [rdi],ch
    8a71:	11 07                	adc    DWORD PTR [rdi],eax
    8a73:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8a74:	21 00                	and    DWORD PTR [rax],eax
    8a76:	00 20                	add    BYTE PTR [rax],ah
    8a78:	06                   	(bad)
    8a79:	1f                   	(bad)
    8a7a:	1f                   	(bad)
    8a7b:	00 00                	add    BYTE PTR [rax],al
    8a7d:	2f                   	(bad)
    8a7e:	14 0c                	adc    al,0xc
    8a80:	b2 21                	mov    dl,0x21
    8a82:	00 00                	add    BYTE PTR [rax],al
    8a84:	28 06                	sub    BYTE PTR [rsi],al
    8a86:	98                   	cwde
    8a87:	30 00                	xor    BYTE PTR [rax],al
    8a89:	00 2f                	add    BYTE PTR [rdi],ch
    8a8b:	15 0f d3 23 00       	adc    eax,0x23d30f
    8a90:	00 30                	add    BYTE PTR [rax],dh
    8a92:	00 13                	add    BYTE PTR [rbx],dl
    8a94:	31 36                	xor    DWORD PTR [rsi],esi
    8a96:	00 00                	add    BYTE PTR [rax],al
    8a98:	0c 5b                	or     al,0x5b
    8a9a:	25 00 00 2d f7       	and    eax,0xf72d0000
    8a9f:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8aa2:	00 00                	add    BYTE PTR [rax],al
    8aa4:	e9 36 00 00 01       	jmp    1008adf <_end+0x1002ac7>
    8aa9:	0b 30                	or     esi,DWORD PTR [rax]
    8aab:	00 00                	add    BYTE PTR [rax],al
    8aad:	00 0c 4c             	add    BYTE PTR [rsp+rcx*2],cl
    8ab0:	31 00                	xor    DWORD PTR [rax],eax
    8ab2:	00 2e                	add    BYTE PTR [rsi],ch
    8ab4:	69 01 f3 2e 00 00    	imul   eax,DWORD PTR [rcx],0x2ef3
    8aba:	09 37                	or     DWORD PTR [rdi],esi
    8abc:	00 00                	add    BYTE PTR [rax],al
    8abe:	01 f3                	add    ebx,esi
    8ac0:	2e 00 00             	cs add BYTE PTR [rax],al
    8ac3:	01 0b                	add    DWORD PTR [rbx],ecx
    8ac5:	30 00                	xor    BYTE PTR [rax],al
    8ac7:	00 01                	add    BYTE PTR [rcx],al
    8ac9:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8acc:	00 00                	add    BYTE PTR [rax],al
    8ace:	0c a1                	or     al,0xa1
    8ad0:	17                   	(bad)
    8ad1:	00 00                	add    BYTE PTR [rax],al
    8ad3:	2d 85 0c a6 21       	sub    eax,0x21a60c85
    8ad8:	00 00                	add    BYTE PTR [rax],al
    8ada:	29 37                	sub    DWORD PTR [rdi],esi
    8adc:	00 00                	add    BYTE PTR [rax],al
    8ade:	01 0b                	add    DWORD PTR [rbx],ecx
    8ae0:	30 00                	xor    BYTE PTR [rax],al
    8ae2:	00 01                	add    BYTE PTR [rcx],al
    8ae4:	0b 30                	or     esi,DWORD PTR [rax]
    8ae6:	00 00                	add    BYTE PTR [rax],al
    8ae8:	01 2e                	add    DWORD PTR [rsi],ebp
    8aea:	23 00                	and    eax,DWORD PTR [rax]
    8aec:	00 00                	add    BYTE PTR [rax],al
    8aee:	0c 3d                	or     al,0x3d
    8af0:	1c 00                	sbb    al,0x0
    8af2:	00 2e                	add    BYTE PTR [rsi],ch
    8af4:	4e 01 f3             	rex.WRX add rbx,r14
    8af7:	2e 00 00             	cs add BYTE PTR [rax],al
    8afa:	49 37                	rex.WB (bad)
    8afc:	00 00                	add    BYTE PTR [rax],al
    8afe:	01 f3                	add    ebx,esi
    8b00:	2e 00 00             	cs add BYTE PTR [rax],al
    8b03:	01 0b                	add    DWORD PTR [rbx],ecx
    8b05:	30 00                	xor    BYTE PTR [rax],al
    8b07:	00 01                	add    BYTE PTR [rcx],al
    8b09:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8b0c:	00 00                	add    BYTE PTR [rax],al
    8b0e:	0e                   	(bad)
    8b0f:	47 29 00             	rex.RXB sub DWORD PTR [r8],r8d
    8b12:	00 2e                	add    BYTE PTR [rsi],ch
    8b14:	06                   	(bad)
    8b15:	01 01                	add    DWORD PTR [rcx],eax
    8b17:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8b1a:	00 6f 37             	add    BYTE PTR [rdi+0x37],ch
    8b1d:	00 00                	add    BYTE PTR [rax],al
    8b1f:	01 e2                	add    edx,esp
    8b21:	22 00                	and    al,BYTE PTR [rax]
    8b23:	00 01                	add    BYTE PTR [rcx],al
    8b25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8b26:	37                   	(bad)
    8b27:	00 00                	add    BYTE PTR [rax],al
    8b29:	01 2e                	add    DWORD PTR [rsi],ebp
    8b2b:	23 00                	and    eax,DWORD PTR [rax]
    8b2d:	00 01                	add    BYTE PTR [rcx],al
    8b2f:	8e 33                	mov    ?,WORD PTR [rbx]
    8b31:	00 00                	add    BYTE PTR [rax],al
    8b33:	00 0d 0b 30 00 00    	add    BYTE PTR [rip+0x300b],cl        # bb44 <_end+0x5b2c>
    8b39:	0c 00                	or     al,0x0
    8b3b:	24 00                	and    al,0x0
    8b3d:	00 2d d8 0f 2e 23    	add    BYTE PTR [rip+0x232e0fd8],ch        # 232e9b1b <_end+0x232e3b03>
    8b43:	00 00                	add    BYTE PTR [rax],al
    8b45:	8f                   	(bad)
    8b46:	37                   	(bad)
    8b47:	00 00                	add    BYTE PTR [rax],al
    8b49:	01 0b                	add    DWORD PTR [rbx],ecx
    8b4b:	30 00                	xor    BYTE PTR [rax],al
    8b4d:	00 01                	add    BYTE PTR [rcx],al
    8b4f:	0b 30                	or     esi,DWORD PTR [rax]
    8b51:	00 00                	add    BYTE PTR [rax],al
    8b53:	00 0e                	add    BYTE PTR [rsi],cl
    8b55:	eb 29                	jmp    8b80 <_end+0x2b68>
    8b57:	00 00                	add    BYTE PTR [rax],al
    8b59:	2d 92 01 0f 2e       	sub    eax,0x2e0f0192
    8b5e:	00 00                	add    BYTE PTR [rax],al
    8b60:	00 ab 37 00 00 01    	add    BYTE PTR [rbx+0x1000037],ch
    8b66:	0b 30                	or     esi,DWORD PTR [rax]
    8b68:	00 00                	add    BYTE PTR [rax],al
    8b6a:	01 ab 37 00 00 00    	add    DWORD PTR [rbx+0x37],ebp
    8b70:	0d f3 2e 00 00       	or     eax,0x2ef3
    8b75:	0e                   	(bad)
    8b76:	f2 29 00             	repnz sub DWORD PTR [rax],eax
    8b79:	00 2d 97 01 0e 35    	add    BYTE PTR [rip+0x350e0197],ch        # 350e8d16 <_end+0x350e2cfe>
    8b7f:	00 00                	add    BYTE PTR [rax],al
    8b81:	00 cc                	add    ah,cl
    8b83:	37                   	(bad)
    8b84:	00 00                	add    BYTE PTR [rax],al
    8b86:	01 0b                	add    DWORD PTR [rbx],ecx
    8b88:	30 00                	xor    BYTE PTR [rax],al
    8b8a:	00 01                	add    BYTE PTR [rcx],al
    8b8c:	ab                   	stos   DWORD PTR es:[rdi],eax
    8b8d:	37                   	(bad)
    8b8e:	00 00                	add    BYTE PTR [rax],al
    8b90:	00 0c 3a             	add    BYTE PTR [rdx+rdi*1],cl
    8b93:	2a 00                	sub    al,BYTE PTR [rax]
    8b95:	00 2d f2 11 f3 2e    	add    BYTE PTR [rip+0x2ef311f2],ch        # 2ef39d8d <_end+0x2ef33d75>
    8b9b:	00 00                	add    BYTE PTR [rax],al
    8b9d:	ec                   	in     al,dx
    8b9e:	37                   	(bad)
    8b9f:	00 00                	add    BYTE PTR [rax],al
    8ba1:	01 f3                	add    ebx,esi
    8ba3:	2e 00 00             	cs add BYTE PTR [rax],al
    8ba6:	01 0b                	add    DWORD PTR [rbx],ecx
    8ba8:	30 00                	xor    BYTE PTR [rax],al
    8baa:	00 01                	add    BYTE PTR [rcx],al
    8bac:	ab                   	stos   DWORD PTR es:[rdi],eax
    8bad:	37                   	(bad)
    8bae:	00 00                	add    BYTE PTR [rax],al
    8bb0:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
    8bb3:	1c 00                	sbb    al,0x0
    8bb5:	00 2d f4 01 11 06    	add    BYTE PTR [rip+0x61101f4],ch        # 6118daf <_end+0x6112d97>
    8bbb:	1c 00                	sbb    al,0x0
    8bbd:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    8bc3:	38 00                	cmp    BYTE PTR [rax],al
    8bc5:	00 01                	add    BYTE PTR [rcx],al
    8bc7:	0b 30                	or     esi,DWORD PTR [rax]
    8bc9:	00 00                	add    BYTE PTR [rax],al
    8bcb:	01 ab 37 00 00 01    	add    DWORD PTR [rbx+0x1000037],ebp
    8bd1:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8bd2:	21 00                	and    DWORD PTR [rax],eax
    8bd4:	00 00                	add    BYTE PTR [rax],al
    8bd6:	04 2e                	add    al,0x2e
    8bd8:	0f 00 00             	sldt   WORD PTR [rax]
    8bdb:	2d f7 01 1a 25       	sub    eax,0x251a01f7
    8be0:	0f 00 00             	sldt   WORD PTR [rax]
    8be3:	8a 21                	mov    ah,BYTE PTR [rcx]
    8be5:	00 00                	add    BYTE PTR [rax],al
    8be7:	36 38 00             	ss cmp BYTE PTR [rax],al
    8bea:	00 01                	add    BYTE PTR [rcx],al
    8bec:	0b 30                	or     esi,DWORD PTR [rax]
    8bee:	00 00                	add    BYTE PTR [rax],al
    8bf0:	01 ab 37 00 00 01    	add    DWORD PTR [rbx+0x1000037],ebp
    8bf6:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8bf7:	21 00                	and    DWORD PTR [rax],eax
    8bf9:	00 00                	add    BYTE PTR [rax],al
    8bfb:	0c df                	or     al,0xdf
    8bfd:	10 00                	adc    BYTE PTR [rax],al
    8bff:	00 2d 9f 0f 2e 23    	add    BYTE PTR [rip+0x232e0f9f],ch        # 232e9ba4 <_end+0x232e3b8c>
    8c05:	00 00                	add    BYTE PTR [rax],al
    8c07:	56                   	push   rsi
    8c08:	38 00                	cmp    BYTE PTR [rax],al
    8c0a:	00 01                	add    BYTE PTR [rcx],al
    8c0c:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8c10:	01 0b                	add    DWORD PTR [rbx],ecx
    8c12:	30 00                	xor    BYTE PTR [rax],al
    8c14:	00 01                	add    BYTE PTR [rcx],al
    8c16:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8c19:	00 00                	add    BYTE PTR [rax],al
    8c1b:	0e                   	(bad)
    8c1c:	4f 23 00             	rex.WRXB and r8,QWORD PTR [r8]
    8c1f:	00 2d 5d 01 01 a6    	add    BYTE PTR [rip+0xffffffffa601015d],ch        # ffffffffa6018d82 <_end+0xffffffffa6012d6a>
    8c25:	21 00                	and    DWORD PTR [rax],eax
    8c27:	00 6d 38             	add    BYTE PTR [rbp+0x38],ch
    8c2a:	00 00                	add    BYTE PTR [rax],al
    8c2c:	01 48 32             	add    DWORD PTR [rax+0x32],ecx
    8c2f:	00 00                	add    BYTE PTR [rax],al
    8c31:	00 0e                	add    BYTE PTR [rsi],cl
    8c33:	14 1d                	adc    al,0x1d
    8c35:	00 00                	add    BYTE PTR [rax],al
    8c37:	2d 1b 01 0c a6       	sub    eax,0xa60c011b
    8c3c:	21 00                	and    DWORD PTR [rax],eax
    8c3e:	00 8e 38 00 00 01    	add    BYTE PTR [rsi+0x1000038],cl
    8c44:	0b 30                	or     esi,DWORD PTR [rax]
    8c46:	00 00                	add    BYTE PTR [rax],al
    8c48:	01 0b                	add    DWORD PTR [rbx],ecx
    8c4a:	30 00                	xor    BYTE PTR [rax],al
    8c4c:	00 01                	add    BYTE PTR [rcx],al
    8c4e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8c51:	00 00                	add    BYTE PTR [rax],al
    8c53:	0c d7                	or     al,0xd7
    8c55:	21 00                	and    DWORD PTR [rax],eax
    8c57:	00 2e                	add    BYTE PTR [rsi],ch
    8c59:	18 01                	sbb    BYTE PTR [rcx],al
    8c5b:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8c5f:	ae                   	scas   al,BYTE PTR es:[rdi]
    8c60:	38 00                	cmp    BYTE PTR [rax],al
    8c62:	00 01                	add    BYTE PTR [rcx],al
    8c64:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8c68:	01 0b                	add    DWORD PTR [rbx],ecx
    8c6a:	30 00                	xor    BYTE PTR [rax],al
    8c6c:	00 01                	add    BYTE PTR [rcx],al
    8c6e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8c71:	00 00                	add    BYTE PTR [rax],al
    8c73:	0c ca                	or     al,0xca
    8c75:	17                   	(bad)
    8c76:	00 00                	add    BYTE PTR [rax],al
    8c78:	2e 21 01             	cs and DWORD PTR [rcx],eax
    8c7b:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8c7f:	ce                   	(bad)
    8c80:	38 00                	cmp    BYTE PTR [rax],al
    8c82:	00 01                	add    BYTE PTR [rcx],al
    8c84:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8c88:	01 0b                	add    DWORD PTR [rbx],ecx
    8c8a:	30 00                	xor    BYTE PTR [rax],al
    8c8c:	00 01                	add    BYTE PTR [rcx],al
    8c8e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8c91:	00 00                	add    BYTE PTR [rax],al
    8c93:	0c 5e                	or     al,0x5e
    8c95:	18 00                	sbb    BYTE PTR [rax],al
    8c97:	00 2e                	add    BYTE PTR [rsi],ch
    8c99:	34 01                	xor    al,0x1
    8c9b:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8c9f:	ee                   	out    dx,al
    8ca0:	38 00                	cmp    BYTE PTR [rax],al
    8ca2:	00 01                	add    BYTE PTR [rcx],al
    8ca4:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8ca8:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    8caf:	23 00                	and    eax,DWORD PTR [rax]
    8cb1:	00 00                	add    BYTE PTR [rax],al
    8cb3:	0c bf                	or     al,0xbf
    8cb5:	23 00                	and    eax,DWORD PTR [rax]
    8cb7:	00 2e                	add    BYTE PTR [rsi],ch
    8cb9:	b2 01                	mov    dl,0x1
    8cbb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8cbc:	21 00                	and    DWORD PTR [rax],eax
    8cbe:	00 05 39 00 00 01    	add    BYTE PTR [rip+0x1000039],al        # 1008cfd <_end+0x1002ce5>
    8cc4:	0b 30                	or     esi,DWORD PTR [rax]
    8cc6:	00 00                	add    BYTE PTR [rax],al
    8cc8:	22 00                	and    al,BYTE PTR [rax]
    8cca:	04 50                	add    al,0x50
    8ccc:	17                   	(bad)
    8ccd:	00 00                	add    BYTE PTR [rax],al
    8ccf:	2d 1f 03 0c 47       	sub    eax,0x470c031f
    8cd4:	17                   	(bad)
    8cd5:	00 00                	add    BYTE PTR [rax],al
    8cd7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8cd8:	21 00                	and    DWORD PTR [rax],eax
    8cda:	00 21                	add    BYTE PTR [rcx],ah
    8cdc:	39 00                	cmp    DWORD PTR [rax],eax
    8cde:	00 01                	add    BYTE PTR [rcx],al
    8ce0:	0b 30                	or     esi,DWORD PTR [rax]
    8ce2:	00 00                	add    BYTE PTR [rax],al
    8ce4:	22 00                	and    al,BYTE PTR [rax]
    8ce6:	0f bf 13             	movsx  edx,WORD PTR [rbx]
    8ce9:	00 00                	add    BYTE PTR [rax],al
    8ceb:	2d ba 1d bf 13       	sub    eax,0x13bf1dba
    8cf0:	00 00                	add    BYTE PTR [rax],al
    8cf2:	0b 30                	or     esi,DWORD PTR [rax]
    8cf4:	00 00                	add    BYTE PTR [rax],al
    8cf6:	40 39 00             	rex cmp DWORD PTR [rax],eax
    8cf9:	00 01                	add    BYTE PTR [rcx],al
    8cfb:	0b 30                	or     esi,DWORD PTR [rax]
    8cfd:	00 00                	add    BYTE PTR [rax],al
    8cff:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8d06:	bf 13 00 00 2d       	mov    edi,0x2d000013
    8d0b:	b8 17 bf 13 00       	mov    eax,0x13bf17
    8d10:	00 f3                	add    bl,dh
    8d12:	2e 00 00             	cs add BYTE PTR [rax],al
    8d15:	5f                   	pop    rdi
    8d16:	39 00                	cmp    DWORD PTR [rax],eax
    8d18:	00 01                	add    BYTE PTR [rcx],al
    8d1a:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d1e:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8d25:	be 16 00 00 2d       	mov    esi,0x2d000016
    8d2a:	de 1d be 16 00 00    	ficomp WORD PTR [rip+0x16be]        # a3ee <_end+0x43d6>
    8d30:	0b 30                	or     esi,DWORD PTR [rax]
    8d32:	00 00                	add    BYTE PTR [rax],al
    8d34:	7e 39                	jle    8d6f <_end+0x2d57>
    8d36:	00 00                	add    BYTE PTR [rax],al
    8d38:	01 0b                	add    DWORD PTR [rbx],ecx
    8d3a:	30 00                	xor    BYTE PTR [rax],al
    8d3c:	00 01                	add    BYTE PTR [rcx],al
    8d3e:	0b 30                	or     esi,DWORD PTR [rax]
    8d40:	00 00                	add    BYTE PTR [rax],al
    8d42:	00 0f                	add    BYTE PTR [rdi],cl
    8d44:	be 16 00 00 2d       	mov    esi,0x2d000016
    8d49:	dc 17                	fcom   QWORD PTR [rdi]
    8d4b:	be 16 00 00 f3       	mov    esi,0xf3000016
    8d50:	2e 00 00             	cs add BYTE PTR [rax],al
    8d53:	9d                   	popf
    8d54:	39 00                	cmp    DWORD PTR [rax],eax
    8d56:	00 01                	add    BYTE PTR [rcx],al
    8d58:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d5c:	01 0b                	add    DWORD PTR [rbx],ecx
    8d5e:	30 00                	xor    BYTE PTR [rax],al
    8d60:	00 00                	add    BYTE PTR [rax],al
    8d62:	0f d2 12             	psrld  mm2,QWORD PTR [rdx]
    8d65:	00 00                	add    BYTE PTR [rax],al
    8d67:	2d c4 1d d2 12       	sub    eax,0x12d21dc4
    8d6c:	00 00                	add    BYTE PTR [rax],al
    8d6e:	0b 30                	or     esi,DWORD PTR [rax]
    8d70:	00 00                	add    BYTE PTR [rax],al
    8d72:	bc 39 00 00 01       	mov    esp,0x1000039
    8d77:	0b 30                	or     esi,DWORD PTR [rax]
    8d79:	00 00                	add    BYTE PTR [rax],al
    8d7b:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8d82:	d2 12                	rcl    BYTE PTR [rdx],cl
    8d84:	00 00                	add    BYTE PTR [rax],al
    8d86:	2d c2 17 d2 12       	sub    eax,0x12d217c2
    8d8b:	00 00                	add    BYTE PTR [rax],al
    8d8d:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d91:	db 39                	fstp   TBYTE PTR [rcx]
    8d93:	00 00                	add    BYTE PTR [rax],al
    8d95:	01 f3                	add    ebx,esi
    8d97:	2e 00 00             	cs add BYTE PTR [rax],al
    8d9a:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8da1:	76 28                	jbe    8dcb <_end+0x2db3>
    8da3:	00 00                	add    BYTE PTR [rax],al
    8da5:	2d e9 1d 76 28       	sub    eax,0x28761de9
    8daa:	00 00                	add    BYTE PTR [rax],al
    8dac:	0b 30                	or     esi,DWORD PTR [rax]
    8dae:	00 00                	add    BYTE PTR [rax],al
    8db0:	fa                   	cli
    8db1:	39 00                	cmp    DWORD PTR [rax],eax
    8db3:	00 01                	add    BYTE PTR [rcx],al
    8db5:	0b 30                	or     esi,DWORD PTR [rax]
    8db7:	00 00                	add    BYTE PTR [rax],al
    8db9:	01 0b                	add    DWORD PTR [rbx],ecx
    8dbb:	30 00                	xor    BYTE PTR [rax],al
    8dbd:	00 00                	add    BYTE PTR [rax],al
    8dbf:	0f 76 28             	pcmpeqd mm5,QWORD PTR [rax]
    8dc2:	00 00                	add    BYTE PTR [rax],al
    8dc4:	2d e7 17 76 28       	sub    eax,0x287617e7
    8dc9:	00 00                	add    BYTE PTR [rax],al
    8dcb:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8dcf:	19 3a                	sbb    DWORD PTR [rdx],edi
    8dd1:	00 00                	add    BYTE PTR [rax],al
    8dd3:	01 f3                	add    ebx,esi
    8dd5:	2e 00 00             	cs add BYTE PTR [rax],al
    8dd8:	01 0b                	add    DWORD PTR [rbx],ecx
    8dda:	30 00                	xor    BYTE PTR [rax],al
    8ddc:	00 00                	add    BYTE PTR [rax],al
    8dde:	04 fa                	add    al,0xfa
    8de0:	15 00 00 2d 12       	adc    eax,0x122d0000
    8de5:	01 1d fa 15 00 00    	add    DWORD PTR [rip+0x15fa],ebx        # a3e5 <_end+0x43cd>
    8deb:	0b 30                	or     esi,DWORD PTR [rax]
    8ded:	00 00                	add    BYTE PTR [rax],al
    8def:	3e 3a 00             	ds cmp al,BYTE PTR [rax]
    8df2:	00 01                	add    BYTE PTR [rcx],al
    8df4:	0b 30                	or     esi,DWORD PTR [rax]
    8df6:	00 00                	add    BYTE PTR [rax],al
    8df8:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    8dff:	23 00                	and    eax,DWORD PTR [rax]
    8e01:	00 00                	add    BYTE PTR [rax],al
    8e03:	04 fa                	add    al,0xfa
    8e05:	15 00 00 2d 10       	adc    eax,0x102d0000
    8e0a:	01 17                	add    DWORD PTR [rdi],edx
    8e0c:	fa                   	cli
    8e0d:	15 00 00 f3 2e       	adc    eax,0x2ef30000
    8e12:	00 00                	add    BYTE PTR [rax],al
    8e14:	63 3a                	movsxd edi,DWORD PTR [rdx]
    8e16:	00 00                	add    BYTE PTR [rax],al
    8e18:	01 f3                	add    ebx,esi
    8e1a:	2e 00 00             	cs add BYTE PTR [rax],al
    8e1d:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    8e24:	23 00                	and    eax,DWORD PTR [rax]
    8e26:	00 00                	add    BYTE PTR [rax],al
    8e28:	0e                   	(bad)
    8e29:	da 27                	fisub  DWORD PTR [rdi]
    8e2b:	00 00                	add    BYTE PTR [rax],al
    8e2d:	2d 99 01 14 c5       	sub    eax,0xc5140199
    8e32:	21 00                	and    DWORD PTR [rax],eax
    8e34:	00 7f 3a             	add    BYTE PTR [rdi+0x3a],bh
    8e37:	00 00                	add    BYTE PTR [rax],al
    8e39:	01 0b                	add    DWORD PTR [rbx],ecx
    8e3b:	30 00                	xor    BYTE PTR [rax],al
    8e3d:	00 01                	add    BYTE PTR [rcx],al
    8e3f:	ab                   	stos   DWORD PTR es:[rdi],eax
    8e40:	37                   	(bad)
    8e41:	00 00                	add    BYTE PTR [rax],al
    8e43:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    8e46:	1e                   	(bad)
    8e47:	00 00                	add    BYTE PTR [rax],al
    8e49:	2d fc 01 16 5a       	sub    eax,0x5a1601fc
    8e4e:	1e                   	(bad)
    8e4f:	00 00                	add    BYTE PTR [rax],al
    8e51:	be 21 00 00 a4       	mov    esi,0xa4000021
    8e56:	3a 00                	cmp    al,BYTE PTR [rax]
    8e58:	00 01                	add    BYTE PTR [rcx],al
    8e5a:	0b 30                	or     esi,DWORD PTR [rax]
    8e5c:	00 00                	add    BYTE PTR [rax],al
    8e5e:	01 ab 37 00 00 01    	add    DWORD PTR [rbx+0x1000037],ebp
    8e64:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8e65:	21 00                	and    DWORD PTR [rax],eax
    8e67:	00 00                	add    BYTE PTR [rax],al
    8e69:	04 c5                	add    al,0xc5
    8e6b:	32 00                	xor    al,BYTE PTR [rax]
    8e6d:	00 2d 01 02 1f bc    	add    BYTE PTR [rip+0xffffffffbc1f0201],ch        # ffffffffbc1f9074 <_end+0xffffffffbc1f305c>
    8e73:	32 00                	xor    al,BYTE PTR [rax]
    8e75:	00 91 21 00 00 c9    	add    BYTE PTR [rcx-0x36ffffdf],dl
    8e7b:	3a 00                	cmp    al,BYTE PTR [rax]
    8e7d:	00 01                	add    BYTE PTR [rcx],al
    8e7f:	0b 30                	or     esi,DWORD PTR [rax]
    8e81:	00 00                	add    BYTE PTR [rax],al
    8e83:	01 ab 37 00 00 01    	add    DWORD PTR [rbx+0x1000037],ebp
    8e89:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8e8a:	21 00                	and    DWORD PTR [rax],eax
    8e8c:	00 00                	add    BYTE PTR [rax],al
    8e8e:	1b 0a                	sbb    ecx,DWORD PTR [rdx]
    8e90:	31 00                	xor    DWORD PTR [rax],eax
    8e92:	00 60 30             	add    BYTE PTR [rax+0x30],ah
    8e95:	33 08                	xor    ecx,DWORD PTR [rax]
    8e97:	0f 3c                	(bad)
    8e99:	00 00                	add    BYTE PTR [rax],al
    8e9b:	06                   	(bad)
    8e9c:	de 12                	ficom  WORD PTR [rdx]
    8e9e:	00 00                	add    BYTE PTR [rax],al
    8ea0:	30 37                	xor    BYTE PTR [rdi],dh
    8ea2:	09 e2                	or     edx,esp
    8ea4:	22 00                	and    al,BYTE PTR [rax]
    8ea6:	00 00                	add    BYTE PTR [rax],al
    8ea8:	06                   	(bad)
    8ea9:	aa                   	stos   BYTE PTR es:[rdi],al
    8eaa:	18 00                	sbb    BYTE PTR [rax],al
    8eac:	00 30                	add    BYTE PTR [rax],dh
    8eae:	38 09                	cmp    BYTE PTR [rcx],cl
    8eb0:	e2 22                	loop   8ed4 <_end+0x2ebc>
    8eb2:	00 00                	add    BYTE PTR [rax],al
    8eb4:	08 06                	or     BYTE PTR [rsi],al
    8eb6:	9c                   	pushf
    8eb7:	2f                   	(bad)
    8eb8:	00 00                	add    BYTE PTR [rax],al
    8eba:	30 3e                	xor    BYTE PTR [rsi],bh
    8ebc:	09 e2                	or     edx,esp
    8ebe:	22 00                	and    al,BYTE PTR [rax]
    8ec0:	00 10                	add    BYTE PTR [rax],dl
    8ec2:	06                   	(bad)
    8ec3:	b6 0f                	mov    dh,0xf
    8ec5:	00 00                	add    BYTE PTR [rax],al
    8ec7:	30 44 09 e2          	xor    BYTE PTR [rcx+rcx*1-0x1e],al
    8ecb:	22 00                	and    al,BYTE PTR [rax]
    8ecd:	00 18                	add    BYTE PTR [rax],bl
    8ecf:	06                   	(bad)
    8ed0:	98                   	cwde
    8ed1:	2e 00 00             	cs add BYTE PTR [rax],al
    8ed4:	30 45 09             	xor    BYTE PTR [rbp+0x9],al
    8ed7:	e2 22                	loop   8efb <_end+0x2ee3>
    8ed9:	00 00                	add    BYTE PTR [rax],al
    8edb:	20 06                	and    BYTE PTR [rsi],al
    8edd:	da 12                	ficom  DWORD PTR [rdx]
    8edf:	00 00                	add    BYTE PTR [rax],al
    8ee1:	30 46 09             	xor    BYTE PTR [rsi+0x9],al
    8ee4:	e2 22                	loop   8f08 <_end+0x2ef0>
    8ee6:	00 00                	add    BYTE PTR [rax],al
    8ee8:	28 06                	sub    BYTE PTR [rsi],al
    8eea:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8eeb:	18 00                	sbb    BYTE PTR [rax],al
    8eed:	00 30                	add    BYTE PTR [rax],dh
    8eef:	47 09 e2             	rex.RXB or r10d,r12d
    8ef2:	22 00                	and    al,BYTE PTR [rax]
    8ef4:	00 30                	add    BYTE PTR [rax],dh
    8ef6:	06                   	(bad)
    8ef7:	98                   	cwde
    8ef8:	2f                   	(bad)
    8ef9:	00 00                	add    BYTE PTR [rax],al
    8efb:	30 48 09             	xor    BYTE PTR [rax+0x9],cl
    8efe:	e2 22                	loop   8f22 <_end+0x2f0a>
    8f00:	00 00                	add    BYTE PTR [rax],al
    8f02:	38 06                	cmp    BYTE PTR [rsi],al
    8f04:	0b 12                	or     edx,DWORD PTR [rdx]
    8f06:	00 00                	add    BYTE PTR [rax],al
    8f08:	30 49 09             	xor    BYTE PTR [rcx+0x9],cl
    8f0b:	e2 22                	loop   8f2f <_end+0x2f17>
    8f0d:	00 00                	add    BYTE PTR [rax],al
    8f0f:	40 06                	rex (bad)
    8f11:	4d 19 00             	sbb    QWORD PTR [r8],r8
    8f14:	00 30                	add    BYTE PTR [rax],dh
    8f16:	4a 09 e2             	rex.WX or rdx,rsp
    8f19:	22 00                	and    al,BYTE PTR [rax]
    8f1b:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    8f1e:	e7 10                	out    0x10,eax
    8f20:	00 00                	add    BYTE PTR [rax],al
    8f22:	30 4b 08             	xor    BYTE PTR [rbx+0x8],cl
    8f25:	e7 22                	out    0x22,eax
    8f27:	00 00                	add    BYTE PTR [rax],al
    8f29:	50                   	push   rax
    8f2a:	06                   	(bad)
    8f2b:	eb 10                	jmp    8f3d <_end+0x2f25>
    8f2d:	00 00                	add    BYTE PTR [rax],al
    8f2f:	30 4c 08 e7          	xor    BYTE PTR [rax+rcx*1-0x19],cl
    8f33:	22 00                	and    al,BYTE PTR [rax]
    8f35:	00 51 06             	add    BYTE PTR [rcx+0x6],dl
    8f38:	7b 19                	jnp    8f53 <_end+0x2f3b>
    8f3a:	00 00                	add    BYTE PTR [rax],al
    8f3c:	30 4e 08             	xor    BYTE PTR [rsi+0x8],cl
    8f3f:	e7 22                	out    0x22,eax
    8f41:	00 00                	add    BYTE PTR [rax],al
    8f43:	52                   	push   rdx
    8f44:	06                   	(bad)
    8f45:	e6 27                	out    0x27,al
    8f47:	00 00                	add    BYTE PTR [rax],al
    8f49:	30 50 08             	xor    BYTE PTR [rax+0x8],dl
    8f4c:	e7 22                	out    0x22,eax
    8f4e:	00 00                	add    BYTE PTR [rax],al
    8f50:	53                   	push   rbx
    8f51:	06                   	(bad)
    8f52:	b1 13                	mov    cl,0x13
    8f54:	00 00                	add    BYTE PTR [rax],al
    8f56:	30 52 08             	xor    BYTE PTR [rdx+0x8],dl
    8f59:	e7 22                	out    0x22,eax
    8f5b:	00 00                	add    BYTE PTR [rax],al
    8f5d:	54                   	push   rsp
    8f5e:	06                   	(bad)
    8f5f:	75 20                	jne    8f81 <_end+0x2f69>
    8f61:	00 00                	add    BYTE PTR [rax],al
    8f63:	30 54 08 e7          	xor    BYTE PTR [rax+rcx*1-0x19],dl
    8f67:	22 00                	and    al,BYTE PTR [rax]
    8f69:	00 55 06             	add    BYTE PTR [rbp+0x6],dl
    8f6c:	6a 30                	push   0x30
    8f6e:	00 00                	add    BYTE PTR [rax],al
    8f70:	30 5b 08             	xor    BYTE PTR [rbx+0x8],bl
    8f73:	e7 22                	out    0x22,eax
    8f75:	00 00                	add    BYTE PTR [rax],al
    8f77:	56                   	push   rsi
    8f78:	06                   	(bad)
    8f79:	74 31                	je     8fac <_end+0x2f94>
    8f7b:	00 00                	add    BYTE PTR [rax],al
    8f7d:	30 5c 08 e7          	xor    BYTE PTR [rax+rcx*1-0x19],bl
    8f81:	22 00                	and    al,BYTE PTR [rax]
    8f83:	00 57 06             	add    BYTE PTR [rdi+0x6],dl
    8f86:	77 19                	ja     8fa1 <_end+0x2f89>
    8f88:	00 00                	add    BYTE PTR [rax],al
    8f8a:	30 5f 08             	xor    BYTE PTR [rdi+0x8],bl
    8f8d:	e7 22                	out    0x22,eax
    8f8f:	00 00                	add    BYTE PTR [rax],al
    8f91:	58                   	pop    rax
    8f92:	06                   	(bad)
    8f93:	e2 27                	loop   8fbc <_end+0x2fa4>
    8f95:	00 00                	add    BYTE PTR [rax],al
    8f97:	30 61 08             	xor    BYTE PTR [rcx+0x8],ah
    8f9a:	e7 22                	out    0x22,eax
    8f9c:	00 00                	add    BYTE PTR [rax],al
    8f9e:	59                   	pop    rcx
    8f9f:	06                   	(bad)
    8fa0:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    8fa1:	13 00                	adc    eax,DWORD PTR [rax]
    8fa3:	00 30                	add    BYTE PTR [rax],dh
    8fa5:	63 08                	movsxd ecx,DWORD PTR [rax]
    8fa7:	e7 22                	out    0x22,eax
    8fa9:	00 00                	add    BYTE PTR [rax],al
    8fab:	5a                   	pop    rdx
    8fac:	06                   	(bad)
    8fad:	71 20                	jno    8fcf <_end+0x2fb7>
    8faf:	00 00                	add    BYTE PTR [rax],al
    8fb1:	30 65 08             	xor    BYTE PTR [rbp+0x8],ah
    8fb4:	e7 22                	out    0x22,eax
    8fb6:	00 00                	add    BYTE PTR [rax],al
    8fb8:	5b                   	pop    rbx
    8fb9:	06                   	(bad)
    8fba:	66 30 00             	data16 xor BYTE PTR [rax],al
    8fbd:	00 30                	add    BYTE PTR [rax],dh
    8fbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    8fc0:	08 e7                	or     bh,ah
    8fc2:	22 00                	and    al,BYTE PTR [rax]
    8fc4:	00 5c 06 70          	add    BYTE PTR [rsi+rax*1+0x70],bl
    8fc8:	31 00                	xor    DWORD PTR [rax],eax
    8fca:	00 30                	add    BYTE PTR [rax],dh
    8fcc:	6d                   	ins    DWORD PTR es:[rdi],dx
    8fcd:	08 e7                	or     bh,ah
    8fcf:	22 00                	and    al,BYTE PTR [rax]
    8fd1:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
    8fd4:	0c c1                	or     al,0xc1
    8fd6:	2a 00                	sub    al,BYTE PTR [rax]
    8fd8:	00 30                	add    BYTE PTR [rax],dh
    8fda:	7a 0e                	jp     8fea <_end+0x2fd2>
    8fdc:	e2 22                	loop   9000 <_end+0x2fe8>
    8fde:	00 00                	add    BYTE PTR [rax],al
    8fe0:	2a 3c 00             	sub    bh,BYTE PTR [rax+rax*1]
    8fe3:	00 01                	add    BYTE PTR [rcx],al
    8fe5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8fe6:	21 00                	and    DWORD PTR [rax],eax
    8fe8:	00 01                	add    BYTE PTR [rcx],al
    8fea:	d3 23                	shl    DWORD PTR [rbx],cl
    8fec:	00 00                	add    BYTE PTR [rax],al
    8fee:	00 37                	add    BYTE PTR [rdi],dh
    8ff0:	8c 0e                	mov    WORD PTR [rsi],cs
    8ff2:	00 00                	add    BYTE PTR [rax],al
    8ff4:	30 7d 16             	xor    BYTE PTR [rbp+0x16],bh
    8ff7:	36 3c 00             	ss cmp al,0x0
    8ffa:	00 0d c9 3a 00 00    	add    BYTE PTR [rip+0x3ac9],cl        # cac9 <_end+0x6ab1>
    9000:	28 32                	sub    BYTE PTR [rdx],dh
    9002:	11 00                	adc    DWORD PTR [rax],eax
    9004:	00 22                	add    BYTE PTR [rdx],ah
    9006:	5c                   	pop    rsp
    9007:	03 4d 3c             	add    ecx,DWORD PTR [rbp+0x3c]
    900a:	00 00                	add    BYTE PTR [rax],al
    900c:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9012:	0c f3                	or     al,0xf3
    9014:	15 00 00 22 b8       	adc    eax,0xb8220000
    9019:	0c a6                	or     al,0xa6
    901b:	21 00                	and    DWORD PTR [rax],eax
    901d:	00 63 3c             	add    BYTE PTR [rbx+0x3c],ah
    9020:	00 00                	add    BYTE PTR [rax],al
    9022:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9028:	0e                   	(bad)
    9029:	cb                   	retf
    902a:	25 00 00 22 5e       	and    eax,0x5e220000
    902f:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    9032:	21 00                	and    DWORD PTR [rax],eax
    9034:	00 7a 3c             	add    BYTE PTR [rdx+0x3c],bh
    9037:	00 00                	add    BYTE PTR [rax],al
    9039:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    903f:	0e                   	(bad)
    9040:	91                   	xchg   ecx,eax
    9041:	2e 00 00             	cs add BYTE PTR [rax],al
    9044:	22 60 03             	and    ah,BYTE PTR [rax+0x3]
    9047:	0c a6                	or     al,0xa6
    9049:	21 00                	and    DWORD PTR [rax],eax
    904b:	00 91 3c 00 00 01    	add    BYTE PTR [rcx+0x100003c],dl
    9051:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9054:	00 00                	add    BYTE PTR [rax],al
    9056:	0c 72                	or     al,0x72
    9058:	34 00                	xor    al,0x0
    905a:	00 22                	add    BYTE PTR [rdx],ah
    905c:	ec                   	in     al,dx
    905d:	0c a6                	or     al,0xa6
    905f:	21 00                	and    DWORD PTR [rax],eax
    9061:	00 a7 3c 00 00 01    	add    BYTE PTR [rdi+0x100003c],ah
    9067:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    906a:	00 00                	add    BYTE PTR [rax],al
    906c:	0e                   	(bad)
    906d:	3c 0c                	cmp    al,0xc
    906f:	00 00                	add    BYTE PTR [rax],al
    9071:	22 3f                	and    bh,BYTE PTR [rdi]
    9073:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    9076:	21 00                	and    DWORD PTR [rax],eax
    9078:	00 be 3c 00 00 01    	add    BYTE PTR [rsi+0x100003c],bh
    907e:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9081:	00 00                	add    BYTE PTR [rax],al
    9083:	0e                   	(bad)
    9084:	08 11                	or     BYTE PTR [rcx],dl
    9086:	00 00                	add    BYTE PTR [rax],al
    9088:	22 3d 03 0c a6 21    	and    bh,BYTE PTR [rip+0x21a60c03]        # 21a69c91 <_end+0x21a63c79>
    908e:	00 00                	add    BYTE PTR [rax],al
    9090:	da 3c 00             	fidivr DWORD PTR [rax+rax*1]
    9093:	00 01                	add    BYTE PTR [rcx],al
    9095:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9098:	00 01                	add    BYTE PTR [rcx],al
    909a:	da 3c 00             	fidivr DWORD PTR [rax+rax*1]
    909d:	00 00                	add    BYTE PTR [rax],al
    909f:	0d 7d 2c 00 00       	or     eax,0x2c7d
    90a4:	0c a6                	or     al,0xa6
    90a6:	0c 00                	or     al,0x0
    90a8:	00 02                	add    BYTE PTR [rdx],al
    90aa:	c4 01 e2 22          	(bad)
    90ae:	00 00                	add    BYTE PTR [rax],al
    90b0:	ff                   	(bad)
    90b1:	3c 00                	cmp    al,0x0
    90b3:	00 01                	add    BYTE PTR [rcx],al
    90b5:	e2 22                	loop   90d9 <_end+0x30c1>
    90b7:	00 00                	add    BYTE PTR [rax],al
    90b9:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    90bf:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    90c2:	00 00                	add    BYTE PTR [rax],al
    90c4:	0e                   	(bad)
    90c5:	4e 2c 00             	rex.WRX sub al,0x0
    90c8:	00 22                	add    BYTE PTR [rdx],ah
    90ca:	08 01                	or     BYTE PTR [rcx],al
    90cc:	0e                   	(bad)
    90cd:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    90d0:	00 1b                	add    BYTE PTR [rbx],bl
    90d2:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    90d7:	23 00                	and    eax,DWORD PTR [rax]
    90d9:	00 01                	add    BYTE PTR [rcx],al
    90db:	d3 23                	shl    DWORD PTR [rbx],cl
    90dd:	00 00                	add    BYTE PTR [rax],al
    90df:	00 0c ce             	add    BYTE PTR [rsi+rcx*8],cl
    90e2:	32 00                	xor    al,BYTE PTR [rax]
    90e4:	00 02                	add    BYTE PTR [rdx],al
    90e6:	cf                   	iret
    90e7:	01 2e                	add    DWORD PTR [rsi],ebp
    90e9:	23 00                	and    eax,DWORD PTR [rax]
    90eb:	00 40 3d             	add    BYTE PTR [rax+0x3d],al
    90ee:	00 00                	add    BYTE PTR [rax],al
    90f0:	01 d4                	add    esp,edx
    90f2:	22 00                	and    al,BYTE PTR [rax]
    90f4:	00 01                	add    BYTE PTR [rcx],al
    90f6:	2e 23 00             	cs and eax,DWORD PTR [rax]
    90f9:	00 01                	add    BYTE PTR [rcx],al
    90fb:	2e 23 00             	cs and eax,DWORD PTR [rax]
    90fe:	00 01                	add    BYTE PTR [rcx],al
    9100:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9103:	00 00                	add    BYTE PTR [rax],al
    9105:	0e                   	(bad)
    9106:	81 2e 00 00 22 0f    	sub    DWORD PTR [rsi],0xf220000
    910c:	01 0e                	add    DWORD PTR [rsi],ecx
    910e:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9111:	00 61 3d             	add    BYTE PTR [rcx+0x3d],ah
    9114:	00 00                	add    BYTE PTR [rax],al
    9116:	01 d3                	add    ebx,edx
    9118:	23 00                	and    eax,DWORD PTR [rax]
    911a:	00 01                	add    BYTE PTR [rcx],al
    911c:	d3 23                	shl    DWORD PTR [rbx],cl
    911e:	00 00                	add    BYTE PTR [rax],al
    9120:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9126:	0e                   	(bad)
    9127:	07                   	(bad)
    9128:	24 00                	and    al,0x0
    912a:	00 22                	add    BYTE PTR [rdx],ah
    912c:	0b 03                	or     eax,DWORD PTR [rbx]
    912e:	0c a6                	or     al,0xa6
    9130:	21 00                	and    DWORD PTR [rax],eax
    9132:	00 82 3d 00 00 01    	add    BYTE PTR [rdx+0x100003d],al
    9138:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    913b:	00 01                	add    BYTE PTR [rcx],al
    913d:	b2 21                	mov    dl,0x21
    913f:	00 00                	add    BYTE PTR [rax],al
    9141:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    9147:	0e                   	(bad)
    9148:	54                   	push   rsp
    9149:	20 00                	and    BYTE PTR [rax],al
    914b:	00 22                	add    BYTE PTR [rdx],ah
    914d:	43 03 0c a6          	add    ecx,DWORD PTR [r14+r12*4]
    9151:	21 00                	and    DWORD PTR [rax],eax
    9153:	00 9e 3d 00 00 01    	add    BYTE PTR [rsi+0x100003d],bl
    9159:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    915c:	00 01                	add    BYTE PTR [rcx],al
    915e:	9e                   	sahf
    915f:	3d 00 00 00 0d       	cmp    eax,0xd000000
    9164:	89 2c 00             	mov    DWORD PTR [rax+rax*1],ebp
    9167:	00 0e                	add    BYTE PTR [rsi],cl
    9169:	d8 18                	fcomp  DWORD PTR [rax]
    916b:	00 00                	add    BYTE PTR [rax],al
    916d:	22 11                	and    dl,BYTE PTR [rcx]
    916f:	03 11                	add    edx,DWORD PTR [rcx]
    9171:	b2 21                	mov    dl,0x21
    9173:	00 00                	add    BYTE PTR [rax],al
    9175:	ba 3d 00 00 01       	mov    edx,0x100003d
    917a:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    917d:	00 00                	add    BYTE PTR [rax],al
    917f:	0e                   	(bad)
    9180:	3d 0c 00 00 22       	cmp    eax,0x2200000c
    9185:	40 02 0c a6          	rex add cl,BYTE PTR [rsi+riz*4]
    9189:	21 00                	and    DWORD PTR [rax],eax
    918b:	00 d1                	add    cl,dl
    918d:	3d 00 00 01 8e       	cmp    eax,0x8e010000
    9192:	2c 00                	sub    al,0x0
    9194:	00 00                	add    BYTE PTR [rax],al
    9196:	37                   	(bad)
    9197:	75 25                	jne    91be <_end+0x31a6>
    9199:	00 00                	add    BYTE PTR [rax],al
    919b:	31 2f                	xor    DWORD PTR [rdi],ebp
    919d:	01 a6 21 00 00 28    	add    DWORD PTR [rsi+0x28000021],esp
    91a3:	f9                   	stc
    91a4:	23 00                	and    eax,DWORD PTR [rax]
    91a6:	00 22                	add    BYTE PTR [rdx],ah
    91a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    91a9:	03 ef                	add    ebp,edi
    91ab:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    91b0:	23 00                	and    eax,DWORD PTR [rax]
    91b2:	00 00                	add    BYTE PTR [rax],al
    91b4:	0c 32                	or     al,0x32
    91b6:	15 00 00 22 9e       	adc    eax,0x9e220000
    91bb:	0c a6                	or     al,0xa6
    91bd:	21 00                	and    DWORD PTR [rax],eax
    91bf:	00 05 3e 00 00 01    	add    BYTE PTR [rip+0x100003e],al        # 1009203 <_end+0x10031eb>
    91c5:	d3 23                	shl    DWORD PTR [rbx],cl
    91c7:	00 00                	add    BYTE PTR [rax],al
    91c9:	00 0c 67             	add    BYTE PTR [rdi+riz*2],cl
    91cc:	24 00                	and    al,0x0
    91ce:	00 22                	add    BYTE PTR [rdx],ah
    91d0:	a0 0c a6 21 00 00 20 	movabs al,ds:0x3e20000021a60c
    91d7:	3e 00 
    91d9:	00 01                	add    BYTE PTR [rcx],al
    91db:	d3 23                	shl    DWORD PTR [rbx],cl
    91dd:	00 00                	add    BYTE PTR [rax],al
    91df:	01 d3                	add    ebx,edx
    91e1:	23 00                	and    eax,DWORD PTR [rax]
    91e3:	00 00                	add    BYTE PTR [rax],al
    91e5:	28 9e 2c 00 00 22    	sub    BYTE PTR [rsi+0x2200002c],bl
    91eb:	16                   	(bad)
    91ec:	03 32                	add    esi,DWORD PTR [rdx]
    91ee:	3e 00 00             	ds add BYTE PTR [rax],al
    91f1:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    91f7:	28 c4                	sub    ah,al
    91f9:	25 00 00 22 4e       	and    eax,0x4e220000
    91fe:	01 49 3e             	add    DWORD PTR [rcx+0x3e],ecx
    9201:	00 00                	add    BYTE PTR [rax],al
    9203:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    9209:	e2 22                	loop   922d <_end+0x3215>
    920b:	00 00                	add    BYTE PTR [rax],al
    920d:	00 0e                	add    BYTE PTR [rsi],cl
    920f:	14 24                	adc    al,0x24
    9211:	00 00                	add    BYTE PTR [rax],al
    9213:	22 53 01             	and    dl,BYTE PTR [rbx+0x1]
    9216:	0c a6                	or     al,0xa6
    9218:	21 00                	and    DWORD PTR [rax],eax
    921a:	00 6f 3e             	add    BYTE PTR [rdi+0x3e],ch
    921d:	00 00                	add    BYTE PTR [rax],al
    921f:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    9225:	e2 22                	loop   9249 <_end+0x3231>
    9227:	00 00                	add    BYTE PTR [rax],al
    9229:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    922f:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9232:	00 00                	add    BYTE PTR [rax],al
    9234:	37                   	(bad)
    9235:	50                   	push   rax
    9236:	30 00                	xor    BYTE PTR [rax],al
    9238:	00 22                	add    BYTE PTR [rdx],ah
    923a:	c2 0e 8e             	ret    0x8e0e
    923d:	2c 00                	sub    al,0x0
    923f:	00 0c 84             	add    BYTE PTR [rsp+rax*4],cl
    9242:	0f 00 00             	sldt   WORD PTR [rax]
    9245:	22 d3                	and    dl,bl
    9247:	0e                   	(bad)
    9248:	e2 22                	loop   926c <_end+0x3254>
    924a:	00 00                	add    BYTE PTR [rax],al
    924c:	91                   	xchg   ecx,eax
    924d:	3e 00 00             	ds add BYTE PTR [rax],al
    9250:	01 e2                	add    edx,esp
    9252:	22 00                	and    al,BYTE PTR [rax]
    9254:	00 00                	add    BYTE PTR [rax],al
    9256:	0e                   	(bad)
    9257:	aa                   	stos   BYTE PTR es:[rdi],al
    9258:	30 00                	xor    BYTE PTR [rax],al
    925a:	00 22                	add    BYTE PTR [rdx],ah
    925c:	db 02                	fild   DWORD PTR [rdx]
    925e:	0c a6                	or     al,0xa6
    9260:	21 00                	and    DWORD PTR [rax],eax
    9262:	00 ad 3e 00 00 01    	add    BYTE PTR [rbp+0x100003e],ch
    9268:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9269:	21 00                	and    DWORD PTR [rax],eax
    926b:	00 01                	add    BYTE PTR [rcx],al
    926d:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9270:	00 00                	add    BYTE PTR [rax],al
    9272:	0d 2e 00 00 00       	or     eax,0x2e
    9277:	33 36                	xor    esi,DWORD PTR [rsi]
    9279:	1c 00                	sbb    al,0x0
    927b:	00 32                	add    BYTE PTR [rdx],dh
    927d:	0f 0b                	ud2
    927f:	d1 3e                	sar    DWORD PTR [rsi],1
    9281:	00 00                	add    BYTE PTR [rax],al
    9283:	85 01                	test   DWORD PTR [rcx],eax
    9285:	e1 13                	loope  929a <_end+0x3282>
    9287:	00 00                	add    BYTE PTR [rax],al
    9289:	32 11                	xor    dl,BYTE PTR [rcx]
    928b:	0b 86 01 76 31 00    	or     eax,DWORD PTR [rsi+0x317601]
    9291:	32 13                	xor    dl,BYTE PTR [rbx]
    9293:	12 00                	adc    al,BYTE PTR [rax]
    9295:	00 37                	add    BYTE PTR [rdi],dh
    9297:	24 11                	and    al,0x11
    9299:	00 00                	add    BYTE PTR [rax],al
    929b:	33 48 10             	xor    ecx,DWORD PTR [rax+0x10]
    929e:	dd 23                	frstor [rbx]
    92a0:	00 00                	add    BYTE PTR [rax],al
    92a2:	0c 7c                	or     al,0x7c
    92a4:	10 00                	adc    BYTE PTR [rax],al
    92a6:	00 33                	add    BYTE PTR [rbx],dh
    92a8:	4f 0f 2e 00          	rex.WRXB ucomiss xmm8,DWORD PTR [r8]
    92ac:	00 00                	add    BYTE PTR [rax],al
    92ae:	f8                   	clc
    92af:	3e 00 00             	ds add BYTE PTR [rax],al
    92b2:	01 e9                	add    ecx,ebp
    92b4:	23 00                	and    eax,DWORD PTR [rax]
    92b6:	00 01                	add    BYTE PTR [rcx],al
    92b8:	e9 23 00 00 00       	jmp    92e0 <_end+0x32c8>
    92bd:	0c 2b                	or     al,0x2b
    92bf:	24 00                	and    al,0x0
    92c1:	00 33                	add    BYTE PTR [rbx],dh
    92c3:	53                   	push   rbx
    92c4:	0f e9 23             	psubsw mm4,QWORD PTR [rbx]
    92c7:	00 00                	add    BYTE PTR [rax],al
    92c9:	0e                   	(bad)
    92ca:	3f                   	(bad)
    92cb:	00 00                	add    BYTE PTR [rax],al
    92cd:	01 0e                	add    DWORD PTR [rsi],ecx
    92cf:	3f                   	(bad)
    92d0:	00 00                	add    BYTE PTR [rax],al
    92d2:	00 0d 31 36 00 00    	add    BYTE PTR [rip+0x3631],cl        # c909 <_end+0x68f1>
    92d8:	0c 75                	or     al,0x75
    92da:	23 00                	and    eax,DWORD PTR [rax]
    92dc:	00 33                	add    BYTE PTR [rbx],dh
    92de:	4c 0f e9 23          	rex.WR psubsw mm4,QWORD PTR [rbx]
    92e2:	00 00                	add    BYTE PTR [rax],al
    92e4:	29 3f                	sub    DWORD PTR [rdi],edi
    92e6:	00 00                	add    BYTE PTR [rax],al
    92e8:	01 29                	add    DWORD PTR [rcx],ebp
    92ea:	3f                   	(bad)
    92eb:	00 00                	add    BYTE PTR [rax],al
    92ed:	00 0d e9 23 00 00    	add    BYTE PTR [rip+0x23e9],cl        # b6dc <_end+0x56c4>
    92f3:	0c 5f                	or     al,0x5f
    92f5:	0e                   	(bad)
    92f6:	00 00                	add    BYTE PTR [rax],al
    92f8:	33 b4 0e e2 22 00 00 	xor    esi,DWORD PTR [rsi+rcx*1+0x22e2]
    92ff:	44 3f                	rex.R (bad)
    9301:	00 00                	add    BYTE PTR [rax],al
    9303:	01 2c 36             	add    DWORD PTR [rsi+rsi*1],ebp
    9306:	00 00                	add    BYTE PTR [rax],al
    9308:	00 0c 61             	add    BYTE PTR [rcx+riz*2],cl
    930b:	0e                   	(bad)
    930c:	00 00                	add    BYTE PTR [rax],al
    930e:	33 b8 0e e2 22 00    	xor    edi,DWORD PTR [rax+0x22e20e]
    9314:	00 5a 3f             	add    BYTE PTR [rdx+0x3f],bl
    9317:	00 00                	add    BYTE PTR [rax],al
    9319:	01 5a 3f             	add    DWORD PTR [rdx+0x3f],ebx
    931c:	00 00                	add    BYTE PTR [rax],al
    931e:	00 0d f5 23 00 00    	add    BYTE PTR [rip+0x23f5],cl        # b719 <_end+0x5701>
    9324:	0c b5                	or     al,0xb5
    9326:	32 00                	xor    al,BYTE PTR [rax]
    9328:	00 33                	add    BYTE PTR [rbx],dh
    932a:	85 13                	test   DWORD PTR [rbx],edx
    932c:	0e                   	(bad)
    932d:	3f                   	(bad)
    932e:	00 00                	add    BYTE PTR [rax],al
    9330:	75 3f                	jne    9371 <_end+0x3359>
    9332:	00 00                	add    BYTE PTR [rax],al
    9334:	01 5a 3f             	add    DWORD PTR [rdx+0x3f],ebx
    9337:	00 00                	add    BYTE PTR [rax],al
    9339:	00 0c 3a             	add    BYTE PTR [rdx+rdi*1],cl
    933c:	1a 00                	sbb    al,BYTE PTR [rax]
    933e:	00 33                	add    BYTE PTR [rbx],dh
    9340:	89 13                	mov    DWORD PTR [rbx],edx
    9342:	0e                   	(bad)
    9343:	3f                   	(bad)
    9344:	00 00                	add    BYTE PTR [rax],al
    9346:	8b 3f                	mov    edi,DWORD PTR [rdi]
    9348:	00 00                	add    BYTE PTR [rax],al
    934a:	01 5a 3f             	add    DWORD PTR [rdx+0x3f],ebx
    934d:	00 00                	add    BYTE PTR [rax],al
    934f:	00 0e                	add    BYTE PTR [rsi],cl
    9351:	70 2b                	jo     937e <_end+0x3366>
    9353:	00 00                	add    BYTE PTR [rax],al
    9355:	33 80 01 0c a6 21    	xor    eax,DWORD PTR [rax+0x21a60c01]
    935b:	00 00                	add    BYTE PTR [rax],al
    935d:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    935e:	3f                   	(bad)
    935f:	00 00                	add    BYTE PTR [rax],al
    9361:	01 a7 3f 00 00 01    	add    DWORD PTR [rdi+0x100003f],esp
    9367:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9368:	21 00                	and    DWORD PTR [rax],eax
    936a:	00 00                	add    BYTE PTR [rax],al
    936c:	0d 2a 24 00 00       	or     eax,0x242a
    9371:	0d 14 18 00 00       	or     eax,0x1814
    9376:	13 ac 3f 00 00 23 94 	adc    ebp,DWORD PTR [rdi+rdi*1-0x6bdd0000]
    937d:	1a 00                	sbb    al,BYTE PTR [rax]
    937f:	00 23                	add    BYTE PTR [rbx],ah
    9381:	14 18                	adc    al,0x18
    9383:	00 00                	add    BYTE PTR [rax],al
    9385:	0d 94 1a 00 00       	or     eax,0x1a94
    938a:	13 c0                	adc    eax,eax
    938c:	3f                   	(bad)
    938d:	00 00                	add    BYTE PTR [rax],al
    938f:	23 c0                	and    eax,eax
    9391:	18 00                	sbb    BYTE PTR [rax],al
    9393:	00 0d df 1b 00 00    	add    BYTE PTR [rip+0x1bdf],cl        # af78 <_end+0x4f60>
    9399:	13 cf                	adc    ecx,edi
    939b:	3f                   	(bad)
    939c:	00 00                	add    BYTE PTR [rax],al
    939e:	23 5f 1e             	and    ebx,DWORD PTR [rdi+0x1e]
    93a1:	00 00                	add    BYTE PTR [rax],al
    93a3:	23 df                	and    ebx,edi
    93a5:	1b 00                	sbb    eax,DWORD PTR [rax]
    93a7:	00 0d 5f 1e 00 00    	add    BYTE PTR [rip+0x1e5f],cl        # b20c <_end+0x51f4>
    93ad:	13 e3                	adc    esp,ebx
    93af:	3f                   	(bad)
    93b0:	00 00                	add    BYTE PTR [rax],al
    93b2:	23 8b 1c 00 00 1b    	and    ecx,DWORD PTR [rbx+0x1b00001c]
    93b8:	94                   	xchg   esp,eax
    93b9:	08 00                	or     BYTE PTR [rax],al
    93bb:	00 40 34             	add    BYTE PTR [rax+0x34],al
    93be:	11 10                	adc    DWORD PTR [rax],edx
    93c0:	27                   	(bad)
    93c1:	40 00 00             	rex add BYTE PTR [rax],al
    93c4:	06                   	(bad)
    93c5:	95                   	xchg   ebp,eax
    93c6:	03 00                	add    eax,DWORD PTR [rax]
    93c8:	00 34 12             	add    BYTE PTR [rdx+rdx*1],dh
    93cb:	0d 20 32 00 00       	or     eax,0x3220
    93d0:	00 06                	add    BYTE PTR [rsi],al
    93d2:	70 04                	jo     93d8 <_end+0x33c0>
    93d4:	00 00                	add    BYTE PTR [rax],al
    93d6:	34 13                	xor    al,0x13
    93d8:	0e                   	(bad)
    93d9:	b0 2c                	mov    al,0x2c
    93db:	00 00                	add    BYTE PTR [rax],al
    93dd:	20 06                	and    BYTE PTR [rsi],al
    93df:	45 06                	rex.RB (bad)
    93e1:	00 00                	add    BYTE PTR [rax],al
    93e3:	34 14                	xor    al,0x14
    93e5:	0e                   	(bad)
    93e6:	b0 2c                	mov    al,0x2c
    93e8:	00 00                	add    BYTE PTR [rax],al
    93ea:	24 00                	and    al,0x0
    93ec:	08 94 08 00 00 34 15 	or     BYTE PTR [rax+rcx*1+0x15340000],dl
    93f3:	03 f2                	add    esi,edx
    93f5:	3f                   	(bad)
    93f6:	00 00                	add    BYTE PTR [rax],al
    93f8:	47 8e 02             	rex.RXB mov es,WORD PTR [r10]
    93fb:	00 00                	add    BYTE PTR [rax],al
    93fd:	35 0a ad 21 00       	xor    eax,0x21ad0a
    9402:	00 0f                	add    BYTE PTR [rdi],cl
    9404:	47 71 01             	rex.RXB jno 9408 <_end+0x33f0>
    9407:	00 00                	add    BYTE PTR [rax],al
    9409:	35 0e ad 21 00       	xor    eax,0x21ad0e
    940e:	00 20                	add    BYTE PTR [rax],ah
    9410:	08 3d 03 00 00 35    	or     BYTE PTR [rip+0x35000003],bh        # 35009419 <_end+0x35003401>
    9416:	10 12                	adc    BYTE PTR [rdx],dl
    9418:	27                   	(bad)
    9419:	40 00 00             	rex add BYTE PTR [rax],al
    941c:	08 46 08             	or     BYTE PTR [rsi+0x8],al
    941f:	00 00                	add    BYTE PTR [rax],al
    9421:	35 11 14 63 40       	xor    eax,0x40631411
    9426:	00 00                	add    BYTE PTR [rax],al
    9428:	0d 68 40 00 00       	or     eax,0x4068
    942d:	58                   	pop    rax
    942e:	b0 2c                	mov    al,0x2c
    9430:	00 00                	add    BYTE PTR [rax],al
    9432:	77 40                	ja     9474 <_end+0x345c>
    9434:	00 00                	add    BYTE PTR [rax],al
    9436:	01 4b 40             	add    DWORD PTR [rbx+0x40],ecx
    9439:	00 00                	add    BYTE PTR [rax],al
    943b:	00 1b                	add    BYTE PTR [rbx],bl
    943d:	8c 05 00 00 60 35    	mov    WORD PTR [rip+0x35600000],es        # 35609443 <_end+0x3560342b>
    9443:	13 10                	adc    edx,DWORD PTR [rax]
    9445:	b9 40 00 00 06       	mov    ecx,0x6000040
    944a:	7a 06                	jp     9452 <_end+0x343a>
    944c:	00 00                	add    BYTE PTR [rax],al
    944e:	35 14 0e b0 2c       	xor    eax,0x2cb00e14
    9453:	00 00                	add    BYTE PTR [rax],al
    9455:	00 06                	add    BYTE PTR [rsi],al
    9457:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    9458:	04 00                	add    al,0x0
    945a:	00 35 15 0e b0 2c    	add    BYTE PTR [rip+0x2cb00e15],dh        # 2cb0a275 <_end+0x2cb0425d>
    9460:	00 00                	add    BYTE PTR [rax],al
    9462:	04 06                	add    al,0x6
    9464:	2b 06                	sub    eax,DWORD PTR [rsi]
    9466:	00 00                	add    BYTE PTR [rax],al
    9468:	35 17 0e b0 2c       	xor    eax,0x2cb00e17
    946d:	00 00                	add    BYTE PTR [rax],al
    946f:	08 06                	or     BYTE PTR [rsi],al
    9471:	42 15 00 00 35 19    	rex.X adc eax,0x19350000
    9477:	0c 4b                	or     al,0x4b
    9479:	40 00 00             	rex add BYTE PTR [rax],al
    947c:	20 00                	and    BYTE PTR [rax],al
    947e:	08 8c 05 00 00 35 1a 	or     BYTE PTR [rbp+rax*1+0x1a350000],cl
    9485:	03 77 40             	add    esi,DWORD PTR [rdi+0x40]
    9488:	00 00                	add    BYTE PTR [rax],al
    948a:	1b 63 04             	sbb    esp,DWORD PTR [rbx+0x4]
    948d:	00 00                	add    BYTE PTR [rax],al
    948f:	18 35 1c 10 07 41    	sbb    BYTE PTR [rip+0x4107101c],dh        # 4107a4b1 <_end+0x41074499>
    9495:	00 00                	add    BYTE PTR [rax],al
    9497:	06                   	(bad)
    9498:	33 06                	xor    eax,DWORD PTR [rsi]
    949a:	00 00                	add    BYTE PTR [rax],al
    949c:	35 1d 0f 07 41       	xor    eax,0x41070f1d
    94a1:	00 00                	add    BYTE PTR [rax],al
    94a3:	00 06                	add    BYTE PTR [rsi],al
    94a5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    94a6:	05 00 00 35 1e       	add    eax,0x1e350000
    94ab:	0e                   	(bad)
    94ac:	b0 2c                	mov    al,0x2c
    94ae:	00 00                	add    BYTE PTR [rax],al
    94b0:	08 06                	or     BYTE PTR [rsi],al
    94b2:	28 08                	sub    BYTE PTR [rax],cl
    94b4:	00 00                	add    BYTE PTR [rax],al
    94b6:	35 1f 0e b0 2c       	xor    eax,0x2cb00e1f
    94bb:	00 00                	add    BYTE PTR [rax],al
    94bd:	0c 06                	or     al,0x6
    94bf:	5b                   	pop    rbx
    94c0:	03 00                	add    eax,DWORD PTR [rax]
    94c2:	00 35 20 0e b0 2c    	add    BYTE PTR [rip+0x2cb00e20],dh        # 2cb0a2e8 <_end+0x2cb042d0>
    94c8:	00 00                	add    BYTE PTR [rax],al
    94ca:	10 00                	adc    BYTE PTR [rax],al
    94cc:	0d b9 40 00 00       	or     eax,0x40b9
    94d1:	08 63 04             	or     BYTE PTR [rbx+0x4],ah
    94d4:	00 00                	add    BYTE PTR [rax],al
    94d6:	35 21 03 c5 40       	xor    eax,0x40c50321
    94db:	00 00                	add    BYTE PTR [rax],al
    94dd:	1b 9d 04 00 00 18    	sbb    ebx,DWORD PTR [rbp+0x18000004]
    94e3:	35 23 10 5a 41       	xor    eax,0x415a1023
    94e8:	00 00                	add    BYTE PTR [rax],al
    94ea:	06                   	(bad)
    94eb:	44 05 00 00 35 24    	rex.R add eax,0x24350000
    94f1:	0b 5a 41             	or     ebx,DWORD PTR [rdx+0x41]
    94f4:	00 00                	add    BYTE PTR [rax],al
    94f6:	00 06                	add    BYTE PTR [rsi],al
    94f8:	28 08                	sub    BYTE PTR [rax],cl
    94fa:	00 00                	add    BYTE PTR [rax],al
    94fc:	35 25 0e b0 2c       	xor    eax,0x2cb00e25
    9501:	00 00                	add    BYTE PTR [rax],al
    9503:	08 06                	or     BYTE PTR [rsi],al
    9505:	18 08                	sbb    BYTE PTR [rax],cl
    9507:	00 00                	add    BYTE PTR [rax],al
    9509:	35 26 0b 35 00       	xor    eax,0x350b26
    950e:	00 00                	add    BYTE PTR [rax],al
    9510:	0c 06                	or     al,0x6
    9512:	3d 04 00 00 35       	cmp    eax,0x35000004
    9517:	27                   	(bad)
    9518:	0c 57                	or     al,0x57
    951a:	40 00 00             	rex add BYTE PTR [rax],al
    951d:	10 00                	adc    BYTE PTR [rax],al
    951f:	0d 0c 41 00 00       	or     eax,0x410c
    9524:	08 9d 04 00 00 35    	or     BYTE PTR [rbp+0x35000004],bl
    952a:	28 03                	sub    BYTE PTR [rbx],al
    952c:	18 41 00             	sbb    BYTE PTR [rcx+0x0],al
    952f:	00 47 b4             	add    BYTE PTR [rdi-0x4c],al
    9532:	07                   	(bad)
    9533:	00 00                	add    BYTE PTR [rax],al
    9535:	36 06                	ss (bad)
    9537:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9538:	21 00                	and    DWORD PTR [rax],eax
    953a:	00 04 87             	add    BYTE PTR [rdi+rax*4],al
    953d:	01 3a                	add    DWORD PTR [rdx],edi
    953f:	01 00                	add    DWORD PTR [rax],eax
    9541:	00 37                	add    BYTE PTR [rdi],dh
    9543:	06                   	(bad)
    9544:	10 bc 2c 00 00 40 42 	adc    BYTE PTR [rsp+rbp*1+0x42400000],bh
    954b:	0f 00 1b             	ltr    WORD PTR [rbx]
    954e:	df 23                	fbld   TBYTE PTR [rbx]
    9550:	00 00                	add    BYTE PTR [rax],al
    9552:	10 37                	adc    BYTE PTR [rdi],dh
    9554:	08 10                	or     BYTE PTR [rax],dl
    9556:	b0 41                	mov    al,0x41
    9558:	00 00                	add    BYTE PTR [rax],al
    955a:	06                   	(bad)
    955b:	26 1b 00             	es sbb eax,DWORD PTR [rax]
    955e:	00 37                	add    BYTE PTR [rdi],dh
    9560:	09 0d b0 41 00 00    	or     DWORD PTR [rip+0x41b0],ecx        # d716 <_end+0x76fe>
    9566:	00 06                	add    BYTE PTR [rsi],al
    9568:	13 05 00 00 37 0a    	adc    eax,DWORD PTR [rip+0xa370000]        # a37956e <_end+0xa373556>
    956e:	0e                   	(bad)
    956f:	b0 2c                	mov    al,0x2c
    9571:	00 00                	add    BYTE PTR [rax],al
    9573:	08 00                	or     BYTE PTR [rax],al
    9575:	0d 4b 40 00 00       	or     eax,0x404b
    957a:	08 df                	or     bh,bl
    957c:	23 00                	and    eax,DWORD PTR [rax]
    957e:	00 37                	add    BYTE PTR [rdi],dh
    9580:	0b 03                	or     eax,DWORD PTR [rbx]
    9582:	88 41 00             	mov    BYTE PTR [rcx+0x0],al
    9585:	00 1b                	add    BYTE PTR [rbx],bl
    9587:	cb                   	retf
    9588:	13 00                	adc    eax,DWORD PTR [rax]
    958a:	00 10                	add    BYTE PTR [rax],dl
    958c:	37                   	(bad)
    958d:	0d 10 e9 41 00       	or     eax,0x41e910
    9592:	00 06                	add    BYTE PTR [rsi],al
    9594:	4d                   	rex.WRB
    9595:	26 00 00             	es add BYTE PTR [rax],al
    9598:	37                   	(bad)
    9599:	0e                   	(bad)
    959a:	11 d3                	adc    ebx,edx
    959c:	23 00                	and    eax,DWORD PTR [rax]
    959e:	00 00                	add    BYTE PTR [rax],al
    95a0:	06                   	(bad)
    95a1:	b1 0e                	mov    cl,0xe
    95a3:	00 00                	add    BYTE PTR [rax],al
    95a5:	37                   	(bad)
    95a6:	0f 11 d3             	movups xmm3,xmm2
    95a9:	23 00                	and    eax,DWORD PTR [rax]
    95ab:	00 08                	add    BYTE PTR [rax],cl
    95ad:	00 08                	add    BYTE PTR [rax],cl
    95af:	cb                   	retf
    95b0:	13 00                	adc    eax,DWORD PTR [rax]
    95b2:	00 37                	add    BYTE PTR [rdi],dh
    95b4:	10 03                	adc    BYTE PTR [rbx],al
    95b6:	c1 41 00 00          	rol    DWORD PTR [rcx+0x0],0x0
    95ba:	0d e3 1a 00 00       	or     eax,0x1ae3
    95bf:	23 37                	and    esi,DWORD PTR [rdi]
    95c1:	1b 00                	sbb    eax,DWORD PTR [rax]
    95c3:	00 0d da 1b 00 00    	add    BYTE PTR [rip+0x1bda],cl        # b1a3 <_end+0x518b>
    95c9:	13 ff                	adc    edi,edi
    95cb:	41 00 00             	add    BYTE PTR [r8],al
    95ce:	23 e3                	and    esp,ebx
    95d0:	1a 00                	sbb    al,BYTE PTR [rax]
    95d2:	00 29                	add    BYTE PTR [rcx],ch
    95d4:	84 17                	test   BYTE PTR [rdi],dl
    95d6:	00 00                	add    BYTE PTR [rax],al
    95d8:	29 8d 17 00 00 29    	sub    DWORD PTR [rbp+0x29000017],ecx
    95de:	96                   	xchg   esi,eax
    95df:	17                   	(bad)
    95e0:	00 00                	add    BYTE PTR [rax],al
    95e2:	29 be 20 00 00 29    	sub    DWORD PTR [rsi+0x29000020],edi
    95e8:	c7                   	(bad)
    95e9:	20 00                	and    BYTE PTR [rax],al
    95eb:	00 29                	add    BYTE PTR [rcx],ch
    95ed:	d0 20                	shl    BYTE PTR [rax],1
    95ef:	00 00                	add    BYTE PTR [rax],al
    95f1:	29 d9                	sub    ecx,ebx
    95f3:	20 00                	and    BYTE PTR [rax],al
    95f5:	00 0f                	add    BYTE PTR [rdi],cl
    95f7:	16                   	(bad)
    95f8:	06                   	(bad)
    95f9:	00 00                	add    BYTE PTR [rax],al
    95fb:	35 2f 06 36 07       	xor    eax,0x736062f
    9600:	00 00                	add    BYTE PTR [rax],al
    9602:	ea                   	(bad)
    9603:	20 00                	and    BYTE PTR [rax],al
    9605:	00 50 42             	add    BYTE PTR [rax+0x42],dl
    9608:	00 00                	add    BYTE PTR [rax],al
    960a:	01 50 42             	add    DWORD PTR [rax+0x42],edx
    960d:	00 00                	add    BYTE PTR [rax],al
    960f:	01 4b 40             	add    DWORD PTR [rbx+0x40],ecx
    9612:	00 00                	add    BYTE PTR [rax],al
    9614:	00 0d 5f 41 00 00    	add    BYTE PTR [rip+0x415f],cl        # d779 <_end+0x7761>
    961a:	0e                   	(bad)
    961b:	2f                   	(bad)
    961c:	07                   	(bad)
    961d:	00 00                	add    BYTE PTR [rax],al
    961f:	16                   	(bad)
    9620:	a3 02 0e d4 22 00 00 	movabs ds:0x4271000022d40e02,eax
    9627:	71 42 
    9629:	00 00                	add    BYTE PTR [rax],al
    962b:	01 2e                	add    DWORD PTR [rsi],ebp
    962d:	23 00                	and    eax,DWORD PTR [rax]
    962f:	00 01                	add    BYTE PTR [rcx],al
    9631:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9634:	00 00                	add    BYTE PTR [rax],al
    9636:	0c 78                	or     al,0x78
    9638:	13 00                	adc    eax,DWORD PTR [rax]
    963a:	00 38                	add    BYTE PTR [rax],bh
    963c:	31 0c a6             	xor    DWORD PTR [rsi+riz*4],ecx
    963f:	21 00                	and    DWORD PTR [rax],eax
    9641:	00 92 42 00 00 01    	add    BYTE PTR [rdx+0x1000042],dl
    9647:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    964a:	00 01                	add    BYTE PTR [rcx],al
    964c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    964d:	21 00                	and    DWORD PTR [rax],eax
    964f:	00 01                	add    BYTE PTR [rcx],al
    9651:	d3 23                	shl    DWORD PTR [rbx],cl
    9653:	00 00                	add    BYTE PTR [rax],al
    9655:	22 00                	and    al,BYTE PTR [rax]
    9657:	88 01                	mov    BYTE PTR [rcx],al
    9659:	0c 08                	or     al,0x8
    965b:	00 00                	add    BYTE PTR [rax],al
    965d:	35 30 06 8c 04       	xor    eax,0x48c0630
    9662:	00 00                	add    BYTE PTR [rax],al
    9664:	a9 42 00 00 01       	test   eax,0x1000042
    9669:	50                   	push   rax
    966a:	42 00 00             	rex.X add BYTE PTR [rax],al
    966d:	00 0f                	add    BYTE PTR [rdi],cl
    966f:	f9                   	stc
    9670:	03 00                	add    eax,DWORD PTR [rax]
    9672:	00 35 2c 0a 8c 07    	add    BYTE PTR [rip+0x78c0a2c],dh        # 78ca0a4 <_end+0x78c408c>
    9678:	00 00                	add    BYTE PTR [rax],al
    967a:	b0 2c                	mov    al,0x2c
    967c:	00 00                	add    BYTE PTR [rax],al
    967e:	c8 42 00 00          	enter  0x42,0x0
    9682:	01 50 42             	add    DWORD PTR [rax+0x42],edx
    9685:	00 00                	add    BYTE PTR [rax],al
    9687:	01 4b 40             	add    DWORD PTR [rbx+0x40],ecx
    968a:	00 00                	add    BYTE PTR [rax],al
    968c:	00 0f                	add    BYTE PTR [rdi],cl
    968e:	44 03 00             	add    r8d,DWORD PTR [rax]
    9691:	00 35 2b 09 8b 06    	add    BYTE PTR [rip+0x68b092b],dh        # 68b9fc2 <_end+0x68b3faa>
    9697:	00 00                	add    BYTE PTR [rax],al
    9699:	5f                   	pop    rdi
    969a:	41 00 00             	add    BYTE PTR [r8],al
    969d:	e7 42                	out    0x42,eax
    969f:	00 00                	add    BYTE PTR [rax],al
    96a1:	01 57 40             	add    DWORD PTR [rdi+0x40],edx
    96a4:	00 00                	add    BYTE PTR [rax],al
    96a6:	01 b0 2c 00 00 00    	add    DWORD PTR [rax+0x2c],esi
    96ac:	0c 0b                	or     al,0xb
    96ae:	04 00                	add    al,0x0
    96b0:	00 38                	add    BYTE PTR [rax],bh
    96b2:	34 0c                	xor    al,0xc
    96b4:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    96b5:	21 00                	and    DWORD PTR [rax],eax
    96b7:	00 03                	add    BYTE PTR [rbx],al
    96b9:	43 00 00             	rex.XB add BYTE PTR [r8],al
    96bc:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    96c2:	d3 23                	shl    DWORD PTR [rbx],cl
    96c4:	00 00                	add    BYTE PTR [rax],al
    96c6:	22 00                	and    al,BYTE PTR [rax]
    96c8:	28 a2 03 00 00 16    	sub    BYTE PTR [rdx+0x16000003],ah
    96ce:	af                   	scas   eax,DWORD PTR es:[rdi]
    96cf:	02 15 43 00 00 01    	add    dl,BYTE PTR [rip+0x1000043]        # 1009718 <_end+0x1003700>
    96d5:	d4                   	(bad)
    96d6:	22 00                	and    al,BYTE PTR [rax]
    96d8:	00 00                	add    BYTE PTR [rax],al
    96da:	0f 18 09             	prefetcht0 BYTE PTR [rcx]
    96dd:	00 00                	add    BYTE PTR [rax],al
    96df:	39 0a                	cmp    DWORD PTR [rdx],ecx
    96e1:	0a a7 08 00 00 b0    	or     ah,BYTE PTR [rdi-0x4ffffff8]
    96e7:	2c 00                	sub    al,0x0
    96e9:	00 2f                	add    BYTE PTR [rdi],ch
    96eb:	43 00 00             	rex.XB add BYTE PTR [r8],al
    96ee:	01 27                	add    DWORD PTR [rdi],esp
    96f0:	40 00 00             	rex add BYTE PTR [rax],al
    96f3:	00 0f                	add    BYTE PTR [rdi],cl
    96f5:	40 09 00             	rex or DWORD PTR [rax],eax
    96f8:	00 39                	add    BYTE PTR [rcx],bh
    96fa:	0e                   	(bad)
    96fb:	0a 60 09             	or     ah,BYTE PTR [rax+0x9]
    96fe:	00 00                	add    BYTE PTR [rax],al
    9700:	b0 2c                	mov    al,0x2c
    9702:	00 00                	add    BYTE PTR [rax],al
    9704:	49                   	rex.WB
    9705:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9708:	01 27                	add    DWORD PTR [rdi],esp
    970a:	40 00 00             	rex add BYTE PTR [rax],al
    970d:	00 0f                	add    BYTE PTR [rdi],cl
    970f:	ce                   	(bad)
    9710:	08 00                	or     BYTE PTR [rax],al
    9712:	00 39                	add    BYTE PTR [rcx],bh
    9714:	0d 0a 7b 09 00       	or     eax,0x97b0a
    9719:	00 b0 2c 00 00 63    	add    BYTE PTR [rax+0x6300002c],dh
    971f:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9722:	01 27                	add    DWORD PTR [rdi],esp
    9724:	40 00 00             	rex add BYTE PTR [rax],al
    9727:	00 0f                	add    BYTE PTR [rdi],cl
    9729:	32 09                	xor    cl,BYTE PTR [rcx]
    972b:	00 00                	add    BYTE PTR [rax],al
    972d:	39 0c 0a             	cmp    DWORD PTR [rdx+rcx*1],ecx
    9730:	9a                   	(bad)
    9731:	09 00                	or     DWORD PTR [rax],eax
    9733:	00 b0 2c 00 00 7d    	add    BYTE PTR [rax+0x7d00002c],dh
    9739:	43 00 00             	rex.XB add BYTE PTR [r8],al
    973c:	01 27                	add    DWORD PTR [rdi],esp
    973e:	40 00 00             	rex add BYTE PTR [rax],al
    9741:	00 0f                	add    BYTE PTR [rdi],cl
    9743:	4e 09 00             	rex.WRX or QWORD PTR [rax],r8
    9746:	00 39                	add    BYTE PTR [rcx],bh
    9748:	0b 0a                	or     ecx,DWORD PTR [rdx]
    974a:	f4                   	hlt
    974b:	08 00                	or     BYTE PTR [rax],al
    974d:	00 b0 2c 00 00 97    	add    BYTE PTR [rax-0x68ffffd4],dh
    9753:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9756:	01 27                	add    DWORD PTR [rdi],esp
    9758:	40 00 00             	rex add BYTE PTR [rax],al
    975b:	00 0f                	add    BYTE PTR [rdi],cl
    975d:	e0 08                	loopne 9767 <_end+0x374f>
    975f:	00 00                	add    BYTE PTR [rax],al
    9761:	39 09                	cmp    DWORD PTR [rcx],ecx
    9763:	0a 5f 08             	or     bl,BYTE PTR [rdi+0x8]
    9766:	00 00                	add    BYTE PTR [rax],al
    9768:	b0 2c                	mov    al,0x2c
    976a:	00 00                	add    BYTE PTR [rax],al
    976c:	b1 43                	mov    cl,0x43
    976e:	00 00                	add    BYTE PTR [rax],al
    9770:	01 27                	add    DWORD PTR [rdi],esp
    9772:	40 00 00             	rex add BYTE PTR [rax],al
    9775:	00 0f                	add    BYTE PTR [rdi],cl
    9777:	e4 08                	in     al,0x8
    9779:	00 00                	add    BYTE PTR [rax],al
    977b:	39 08                	cmp    DWORD PTR [rax],ecx
    977d:	0a 80 08 00 00 b0    	or     al,BYTE PTR [rax-0x4ffffff8]
    9783:	2c 00                	sub    al,0x0
    9785:	00 cb                	add    bl,cl
    9787:	43 00 00             	rex.XB add BYTE PTR [r8],al
    978a:	01 27                	add    DWORD PTR [rdi],esp
    978c:	40 00 00             	rex add BYTE PTR [rax],al
    978f:	00 0c 3c             	add    BYTE PTR [rsp+rdi*1],cl
    9792:	19 00                	sbb    DWORD PTR [rax],eax
    9794:	00 3a                	add    BYTE PTR [rdx],bh
    9796:	9c                   	pushf
    9797:	0c a6                	or     al,0xa6
    9799:	21 00                	and    DWORD PTR [rax],eax
    979b:	00 e6                	add    dh,ah
    979d:	43 00 00             	rex.XB add BYTE PTR [r8],al
    97a0:	01 d3                	add    ebx,edx
    97a2:	23 00                	and    eax,DWORD PTR [rax]
    97a4:	00 01                	add    BYTE PTR [rcx],al
    97a6:	d3 23                	shl    DWORD PTR [rbx],cl
    97a8:	00 00                	add    BYTE PTR [rax],al
    97aa:	00 0f                	add    BYTE PTR [rdi],cl
    97ac:	ce                   	(bad)
    97ad:	06                   	(bad)
    97ae:	00 00                	add    BYTE PTR [rax],al
    97b0:	35 2a 0b 70 03       	xor    eax,0x3700b2a
    97b5:	00 00                	add    BYTE PTR [rax],al
    97b7:	05 44 00 00 05       	add    eax,0x5000044
    97bc:	44 00 00             	add    BYTE PTR [rax],r8b
    97bf:	01 e2                	add    edx,esp
    97c1:	22 00                	and    al,BYTE PTR [rax]
    97c3:	00 01                	add    BYTE PTR [rcx],al
    97c5:	b0 2c                	mov    al,0x2c
    97c7:	00 00                	add    BYTE PTR [rax],al
    97c9:	00 0d 27 40 00 00    	add    BYTE PTR [rip+0x4027],cl        # d7f6 <_end+0x77de>
    97cf:	0f ce                	bswap  esi
    97d1:	0a 00                	or     al,BYTE PTR [rax]
    97d3:	00 3b                	add    BYTE PTR [rbx],bh
    97d5:	07                   	(bad)
    97d6:	0a 17                	or     dl,BYTE PTR [rdi]
    97d8:	0a 00                	or     al,BYTE PTR [rax]
    97da:	00 b0 2c 00 00 29    	add    BYTE PTR [rax+0x2900002c],dh
    97e0:	44 00 00             	add    BYTE PTR [rax],r8b
    97e3:	01 e2                	add    edx,esp
    97e5:	22 00                	and    al,BYTE PTR [rax]
    97e7:	00 01                	add    BYTE PTR [rcx],al
    97e9:	2e 23 00             	cs and eax,DWORD PTR [rax]
    97ec:	00 00                	add    BYTE PTR [rax],al
    97ee:	0f 29 0a             	movaps XMMWORD PTR [rdx],xmm1
    97f1:	00 00                	add    BYTE PTR [rax],al
    97f3:	3b 06                	cmp    eax,DWORD PTR [rsi]
    97f5:	07                   	(bad)
    97f6:	32 0a                	xor    cl,BYTE PTR [rdx]
    97f8:	00 00                	add    BYTE PTR [rax],al
    97fa:	e2 22                	loop   981e <_end+0x3806>
    97fc:	00 00                	add    BYTE PTR [rax],al
    97fe:	48                   	rex.W
    97ff:	44 00 00             	add    BYTE PTR [rax],r8b
    9802:	01 d3                	add    ebx,edx
    9804:	23 00                	and    eax,DWORD PTR [rax]
    9806:	00 01                	add    BYTE PTR [rcx],al
    9808:	48                   	rex.W
    9809:	44 00 00             	add    BYTE PTR [rax],r8b
    980c:	00 0d 2e 23 00 00    	add    BYTE PTR [rip+0x232e],cl        # bb40 <_end+0x5b28>
    9812:	89 01                	mov    DWORD PTR [rcx],eax
    9814:	08 06                	or     BYTE PTR [rsi],al
    9816:	00 00                	add    BYTE PTR [rax],al
    9818:	3c 45                	cmp    al,0x45
    981a:	0d 6f 44 00 00       	or     eax,0x446f
    981f:	01 d3                	add    ebx,edx
    9821:	23 00                	and    eax,DWORD PTR [rax]
    9823:	00 01                	add    BYTE PTR [rcx],al
    9825:	d3 23                	shl    DWORD PTR [rbx],cl
    9827:	00 00                	add    BYTE PTR [rax],al
    9829:	01 e3                	add    ebx,esp
    982b:	20 00                	and    BYTE PTR [rax],al
    982d:	00 01                	add    BYTE PTR [rcx],al
    982f:	d3 23                	shl    DWORD PTR [rbx],cl
    9831:	00 00                	add    BYTE PTR [rax],al
    9833:	00 23                	add    BYTE PTR [rbx],ah
    9835:	b9 21 00 00 30       	mov    ecx,0x30000021
    983a:	24 1e                	and    al,0x1e
    983c:	00 00                	add    BYTE PTR [rax],al
    983e:	8b 44 00 00          	mov    eax,DWORD PTR [rax+rax*1+0x0]
    9842:	02 a1 44 00 00 11    	add    ah,BYTE PTR [rcx+0x11000044]
    9848:	71 19                	jno    9863 <_end+0x384b>
    984a:	00 00                	add    BYTE PTR [rax],al
    984c:	b2 21                	mov    dl,0x21
    984e:	00 00                	add    BYTE PTR [rax],al
    9850:	31 bb 1e 00 00 d4    	xor    DWORD PTR [rbx-0x2bffffe2],edi
    9856:	3f                   	(bad)
    9857:	00 00                	add    BYTE PTR [rax],al
    9859:	2d b8 16 00 00       	sub    eax,0x16b8
    985e:	3d 02 2d 6f 44       	cmp    eax,0x446f2d02
    9863:	00 00                	add    BYTE PTR [rax],al
    9865:	00 5c 74 44          	add    BYTE PTR [rsp+rsi*2+0x44],bl
    9869:	00 00                	add    BYTE PTR [rax],al
    986b:	c6                   	(bad)
    986c:	16                   	(bad)
    986d:	00 00                	add    BYTE PTR [rax],al
    986f:	bb 44 00 00 c6       	mov    ebx,0xc6000044
    9874:	44 00 00             	add    BYTE PTR [rax],r8b
    9877:	11 71 19             	adc    DWORD PTR [rcx+0x19],esi
    987a:	00 00                	add    BYTE PTR [rax],al
    987c:	b2 21                	mov    dl,0x21
    987e:	00 00                	add    BYTE PTR [rax],al
    9880:	0b 8b 44 00 00 0b    	or     ecx,DWORD PTR [rbx+0xb000044]
    9886:	94                   	xchg   esp,eax
    9887:	44 00 00             	add    BYTE PTR [rax],r8b
    988a:	00 32                	add    BYTE PTR [rdx],dh
    988c:	7a 1e                	jp     98ac <_end+0x3894>
    988e:	00 00                	add    BYTE PTR [rax],al
    9890:	fb                   	sti
    9891:	44 00 00             	add    BYTE PTR [rax],r8b
    9894:	11 f1                	adc    ecx,esi
    9896:	32 00                	xor    al,BYTE PTR [rax]
    9898:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    989e:	1c 24                	sbb    al,0x24
    98a0:	00 00                	add    BYTE PTR [rax],al
    98a2:	94                   	xchg   esp,eax
    98a3:	1f                   	(bad)
    98a4:	00 00                	add    BYTE PTR [rax],al
    98a6:	8a 01                	mov    al,BYTE PTR [rcx]
    98a8:	5f                   	pop    rdi
    98a9:	5f                   	pop    rdi
    98aa:	64 00 04 d0          	add    BYTE PTR fs:[rax+rdx*8],al
    98ae:	2a b6 3f 00 00 08    	sub    dh,BYTE PTR [rsi+0x800003f]
    98b4:	b4 23                	mov    ah,0x23
    98b6:	00 00                	add    BYTE PTR [rax],al
    98b8:	04 d2                	add    al,0xd2
    98ba:	25 82 1c 00 00       	and    eax,0x1c82
    98bf:	00 32                	add    BYTE PTR [rdx],dh
    98c1:	d6                   	(bad)
    98c2:	1e                   	(bad)
    98c3:	00 00                	add    BYTE PTR [rax],al
    98c5:	4e                   	rex.WRX
    98c6:	45 00 00             	add    BYTE PTR [r8],r8b
    98c9:	11 6b 19             	adc    DWORD PTR [rbx+0x19],ebp
    98cc:	00 00                	add    BYTE PTR [rax],al
    98ce:	b2 21                	mov    dl,0x21
    98d0:	00 00                	add    BYTE PTR [rax],al
    98d2:	11 64 23 00          	adc    DWORD PTR [rbx+riz*1+0x0],esp
    98d6:	00 94 1f 00 00 11 71 	add    BYTE PTR [rdi+rbx*1+0x71110000],dl
    98dd:	19 00                	sbb    DWORD PTR [rax],eax
    98df:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    98e5:	76 30                	jbe    9917 <_end+0x38ff>
    98e7:	00 00                	add    BYTE PTR [rax],al
    98e9:	94                   	xchg   esp,eax
    98ea:	1f                   	(bad)
    98eb:	00 00                	add    BYTE PTR [rax],al
    98ed:	2d 9e 0f 00 00       	sub    eax,0xf9e
    98f2:	c6 02 32             	mov    BYTE PTR [rdx],0x32
    98f5:	b6 3f                	mov    dh,0x3f
    98f7:	00 00                	add    BYTE PTR [rax],al
    98f9:	2d 9b 17 00 00       	sub    eax,0x179b
    98fe:	c7 02 24 b6 3f 00    	mov    DWORD PTR [rdx],0x3fb624
    9904:	00 41 ae             	add    BYTE PTR [rcx-0x52],al
    9907:	21 00                	and    DWORD PTR [rax],eax
    9909:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
    990c:	02 34 e0             	add    dh,BYTE PTR [rax+riz*8]
    990f:	1f                   	(bad)
    9910:	00 00                	add    BYTE PTR [rax],al
    9912:	00 32                	add    BYTE PTR [rdx],dh
    9914:	26 1f                	es (bad)
    9916:	00 00                	add    BYTE PTR [rax],al
    9918:	82                   	(bad)
    9919:	45 00 00             	add    BYTE PTR [r8],r8b
    991c:	11 cf                	adc    edi,ecx
    991e:	22 00                	and    al,BYTE PTR [rax]
    9920:	00 df                	add    bh,bl
    9922:	1b 00                	sbb    eax,DWORD PTR [rax]
    9924:	00 11                	add    BYTE PTR [rcx],dl
    9926:	f1                   	int1
    9927:	32 00                	xor    al,BYTE PTR [rax]
    9929:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    992f:	1c 24                	sbb    al,0x24
    9931:	00 00                	add    BYTE PTR [rax],al
    9933:	94                   	xchg   esp,eax
    9934:	1f                   	(bad)
    9935:	00 00                	add    BYTE PTR [rax],al
    9937:	5d                   	pop    rbp
    9938:	5f                   	pop    rdi
    9939:	5f                   	pop    rdi
    993a:	64 00 04 11          	add    BYTE PTR fs:[rcx+rdx*1],al
    993e:	01 34 b6             	add    DWORD PTR [rsi+rsi*4],esi
    9941:	3f                   	(bad)
    9942:	00 00                	add    BYTE PTR [rax],al
    9944:	8b 01                	mov    eax,DWORD PTR [rcx]
    9946:	00 5e 7a             	add    BYTE PTR [rsi+0x7a],bl
    9949:	23 00                	and    eax,DWORD PTR [rax]
    994b:	00 b8 07 a5 2f 00    	add    BYTE PTR [rax+0x2fa507],bh
    9951:	00 35 00 00 00 da    	add    BYTE PTR [rip+0xffffffffda000000],dh        # ffffffffda009957 <_end+0xffffffffda00393f>
    9957:	45 00 00             	add    BYTE PTR [r8],r8b
    995a:	1c ef                	sbb    al,0xef
    995c:	05 00 00 01 b8       	add    eax,0xb8010000
    9961:	2c 50                	sub    al,0x50
    9963:	42 00 00             	rex.X add BYTE PTR [rax],al
    9966:	1c 85                	sbb    al,0x85
    9968:	10 00                	adc    BYTE PTR [rax],al
    996a:	00 01                	add    BYTE PTR [rcx],al
    996c:	b8 3b 35 00 00       	mov    eax,0x353b
    9971:	00 5f d3             	add    BYTE PTR [rdi-0x2d],bl
    9974:	03 00                	add    eax,DWORD PTR [rax]
    9976:	00 ea                	add    dl,ch
    9978:	45 00 00             	add    BYTE PTR [r8],r8b
    997b:	17                   	(bad)
    997c:	99                   	cdq
    997d:	16                   	(bad)
    997e:	00 00                	add    BYTE PTR [rax],al
    9980:	bb 0b 35 00 00       	mov    ebx,0x350b
    9985:	00 48 49             	add    BYTE PTR [rax+0x49],cl
    9988:	69 00 bc 13 b0 2c    	imul   eax,DWORD PTR [rax],0x2cb013bc
    998e:	00 00                	add    BYTE PTR [rax],al
    9990:	48 17                	rex.W (bad)
    9992:	38 06                	cmp    BYTE PTR [rsi],al
    9994:	00 00                	add    BYTE PTR [rax],al
    9996:	bd 12 b0 2c 00       	mov    ebp,0x2cb012
    999b:	00 00                	add    BYTE PTR [rax],al
    999d:	00 00                	add    BYTE PTR [rax],al
    999f:	26 ee                	es out dx,al
    99a1:	22 00                	and    al,BYTE PTR [rax]
    99a3:	00 ea                	add    dl,ch
    99a5:	45 00 00             	add    BYTE PTR [r8],r8b
    99a8:	27                   	(bad)
    99a9:	8a 21                	mov    ah,BYTE PTR [rcx]
    99ab:	00 00                	add    BYTE PTR [rax],al
    99ad:	32 00                	xor    al,BYTE PTR [rax]
    99af:	13 da                	adc    ebx,edx
    99b1:	45 00 00             	add    BYTE PTR [r8],r8b
    99b4:	5e                   	pop    rsi
    99b5:	e2 26                	loop   99dd <_end+0x39c5>
    99b7:	00 00                	add    BYTE PTR [rax],al
    99b9:	ac                   	lods   al,BYTE PTR ds:[rsi]
    99ba:	08 f5                	or     ch,dh
    99bc:	34 00                	xor    al,0x0
    99be:	00 2e                	add    BYTE PTR [rsi],ch
    99c0:	00 00                	add    BYTE PTR [rax],al
    99c2:	00 46 46             	add    BYTE PTR [rsi+0x46],al
    99c5:	00 00                	add    BYTE PTR [rax],al
    99c7:	1c a9                	sbb    al,0xa9
    99c9:	23 00                	and    eax,DWORD PTR [rax]
    99cb:	00 01                	add    BYTE PTR [rcx],al
    99cd:	ac                   	lods   al,BYTE PTR ds:[rsi]
    99ce:	26 ad                	lods   eax,DWORD PTR ds:[rsi]
    99d0:	3e 00 00             	ds add BYTE PTR [rax],al
    99d3:	1c 45                	sbb    al,0x45
    99d5:	06                   	(bad)
    99d6:	00 00                	add    BYTE PTR [rax],al
    99d8:	01 ac 3b b0 2c 00 00 	add    DWORD PTR [rbx+rdi*1+0x2cb0],ebp
    99df:	1c 85                	sbb    al,0x85
    99e1:	10 00                	adc    BYTE PTR [rax],al
    99e3:	00 01                	add    BYTE PTR [rcx],al
    99e5:	ac                   	lods   al,BYTE PTR ds:[rsi]
    99e6:	4a                   	rex.WX
    99e7:	2e 00 00             	cs add BYTE PTR [rax],al
    99ea:	00 5f d3             	add    BYTE PTR [rdi-0x2d],bl
    99ed:	03 00                	add    eax,DWORD PTR [rax]
    99ef:	00 56 46             	add    BYTE PTR [rsi+0x46],dl
    99f2:	00 00                	add    BYTE PTR [rax],al
    99f4:	17                   	(bad)
    99f5:	99                   	cdq
    99f6:	16                   	(bad)
    99f7:	00 00                	add    BYTE PTR [rax],al
    99f9:	af                   	scas   eax,DWORD PTR es:[rdi]
    99fa:	0c 2e                	or     al,0x2e
    99fc:	00 00                	add    BYTE PTR [rax],al
    99fe:	00 48 49             	add    BYTE PTR [rax+0x49],cl
    9a01:	69 00 b0 13 b0 2c    	imul   eax,DWORD PTR [rax],0x2cb013b0
    9a07:	00 00                	add    BYTE PTR [rax],al
    9a09:	00 00                	add    BYTE PTR [rax],al
    9a0b:	26 ee                	es out dx,al
    9a0d:	22 00                	and    al,BYTE PTR [rax]
    9a0f:	00 56 46             	add    BYTE PTR [rsi+0x46],dl
    9a12:	00 00                	add    BYTE PTR [rax],al
    9a14:	27                   	(bad)
    9a15:	8a 21                	mov    ah,BYTE PTR [rcx]
    9a17:	00 00                	add    BYTE PTR [rax],al
    9a19:	37                   	(bad)
    9a1a:	00 13                	add    BYTE PTR [rbx],dl
    9a1c:	46                   	rex.RX
    9a1d:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9a20:	4a                   	rex.WX
    9a21:	4c 14 00             	rex.WR adc al,0x0
    9a24:	00 61 25             	add    BYTE PTR [rcx+0x25],ah
    9a27:	1e                   	(bad)
    9a28:	00 00                	add    BYTE PTR [rax],al
    9a2a:	40 28 00             	rex sub BYTE PTR [rax],al
    9a2d:	00 00                	add    BYTE PTR [rax],al
    9a2f:	00 00                	add    BYTE PTR [rax],al
    9a31:	00 b9 04 00 00 00    	add    BYTE PTR [rcx+0x4],bh
    9a37:	00 00                	add    BYTE PTR [rax],al
    9a39:	00 01                	add    BYTE PTR [rcx],al
    9a3b:	9c                   	pushf
    9a3c:	7a 4e                	jp     9a8c <_end+0x3a74>
    9a3e:	00 00                	add    BYTE PTR [rax],al
    9a40:	1d 68 2c 00 00       	sbb    eax,0x2c68
    9a45:	61                   	(bad)
    9a46:	1b 8e 2c 00 00 2a    	sbb    ecx,DWORD PTR [rsi+0x2a00002c]
    9a4c:	18 00                	sbb    BYTE PTR [rax],al
    9a4e:	00 1c 18             	add    BYTE PTR [rax+rbx*1],bl
    9a51:	00 00                	add    BYTE PTR [rax],al
    9a53:	1d 3d 04 00 00       	sbb    eax,0x43d
    9a58:	61                   	(bad)
    9a59:	28 57 40             	sub    BYTE PTR [rdi+0x40],dl
    9a5c:	00 00                	add    BYTE PTR [rax],al
    9a5e:	75 18                	jne    9a78 <_end+0x3a60>
    9a60:	00 00                	add    BYTE PTR [rax],al
    9a62:	6b 18 00             	imul   ebx,DWORD PTR [rax],0x0
    9a65:	00 1d 6a 0d 00 00    	add    BYTE PTR [rip+0xd6a],bl        # a7d5 <_end+0x47bd>
    9a6b:	61                   	(bad)
    9a6c:	3c b5                	cmp    al,0xb5
    9a6e:	41 00 00             	add    BYTE PTR [r8],al
    9a71:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9a72:	18 00                	sbb    BYTE PTR [rax],al
    9a74:	00 a1 18 00 00 1d    	add    BYTE PTR [rcx+0x1d000018],ah
    9a7a:	5e                   	pop    rsi
    9a7b:	01 00                	add    DWORD PTR [rax],eax
    9a7d:	00 61 50             	add    BYTE PTR [rcx+0x50],ah
    9a80:	b0 2c                	mov    al,0x2c
    9a82:	00 00                	add    BYTE PTR [rax],al
    9a84:	da 18                	ficomp DWORD PTR [rax]
    9a86:	00 00                	add    BYTE PTR [rax],al
    9a88:	cc                   	int3
    9a89:	18 00                	sbb    BYTE PTR [rax],al
    9a8b:	00 1d 28 08 00 00    	add    BYTE PTR [rip+0x828],bl        # a2b9 <_end+0x42a1>
    9a91:	61                   	(bad)
    9a92:	66 b0 2c             	data16 mov al,0x2c
    9a95:	00 00                	add    BYTE PTR [rax],al
    9a97:	25 19 00 00 1b       	and    eax,0x1b000019
    9a9c:	19 00                	sbb    DWORD PTR [rax],eax
    9a9e:	00 4b d3             	add    BYTE PTR [rbx-0x2d],cl
    9aa1:	03 00                	add    eax,DWORD PTR [rax]
    9aa3:	00 8a 4e 00 00 09    	add    BYTE PTR [rdx+0x900004e],cl
    9aa9:	03 58 44             	add    ebx,DWORD PTR [rax+0x44]
    9aac:	00 00                	add    BYTE PTR [rax],al
    9aae:	00 00                	add    BYTE PTR [rax],al
    9ab0:	00 00                	add    BYTE PTR [rax],al
    9ab2:	4c ef                	rex.WR out dx,eax
    9ab4:	05 00 00 65 0d       	add    eax,0xd650000
    9ab9:	5f                   	pop    rdi
    9aba:	41 00 00             	add    BYTE PTR [r8],al
    9abd:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    9ac0:	7f 20                	jg     9ae2 <_end+0x3aca>
    9ac2:	5e                   	pop    rsi
    9ac3:	0d 00 00 6a 0f       	or     eax,0xf6a0000
    9ac8:	8f                   	(bad)
    9ac9:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9acc:	5d                   	pop    rbp
    9acd:	19 00                	sbb    DWORD PTR [rax],eax
    9acf:	00 4f 19             	add    BYTE PTR [rdi+0x19],cl
    9ad2:	00 00                	add    BYTE PTR [rax],al
    9ad4:	20 a2 23 00 00 6b    	and    BYTE PTR [rdx+0x6b000023],ah
    9ada:	0d ad 3e 00 00       	or     eax,0x3ead
    9adf:	aa                   	stos   BYTE PTR es:[rdi],al
    9ae0:	19 00                	sbb    DWORD PTR [rax],eax
    9ae2:	00 9e 19 00 00 20    	add    BYTE PTR [rsi+0x20000019],bl
    9ae8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    9ae9:	2c 00                	sub    al,0x0
    9aeb:	00 6c 0e b0          	add    BYTE PTR [rsi+rcx*1-0x50],ch
    9aef:	2c 00                	sub    al,0x0
    9af1:	00 e8                	add    al,ch
    9af3:	19 00                	sbb    DWORD PTR [rax],eax
    9af5:	00 e4                	add    ah,ah
    9af7:	19 00                	sbb    DWORD PTR [rax],eax
    9af9:	00 20                	add    BYTE PTR [rax],ah
    9afb:	6d                   	ins    DWORD PTR es:[rdi],dx
    9afc:	23 00                	and    eax,DWORD PTR [rax]
    9afe:	00 99 0c 2e 00 00    	add    BYTE PTR [rcx+0x2e0c],bl
    9b04:	00 15 1a 00 00 01    	add    BYTE PTR [rip+0x100001a],dl        # 1009b24 <_end+0x1003b0c>
    9b0a:	1a 00                	sbb    al,BYTE PTR [rax]
    9b0c:	00 20                	add    BYTE PTR [rax],ah
    9b0e:	f7 21                	mul    DWORD PTR [rcx]
    9b10:	00 00                	add    BYTE PTR [rax],al
    9b12:	a2 0c 2e 00 00 00 83 	movabs ds:0x1a830000002e0c,al
    9b19:	1a 00 
    9b1b:	00 7f 1a             	add    BYTE PTR [rdi+0x1a],bh
    9b1e:	00 00                	add    BYTE PTR [rax],al
    9b20:	16                   	(bad)
    9b21:	b7 28                	mov    bh,0x28
    9b23:	00 00                	add    BYTE PTR [rax],al
    9b25:	00 00                	add    BYTE PTR [rax],al
    9b27:	00 00                	add    BYTE PTR [rax],al
    9b29:	42 00 00             	rex.X add BYTE PTR [rax],al
    9b2c:	00 00                	add    BYTE PTR [rax],al
    9b2e:	00 00                	add    BYTE PTR [rax],al
    9b30:	00 a1 47 00 00 2a    	add    BYTE PTR [rcx+0x2a000047],ah
    9b36:	6a 00                	push   0x0
    9b38:	66 0e                	data16 (bad)
    9b3a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9b3b:	21 00                	and    DWORD PTR [rax],eax
    9b3d:	00 94 1a 00 00 92 1a 	add    BYTE PTR [rdx+rbx*1+0x1a920000],dl
    9b44:	00 00                	add    BYTE PTR [rax],al
    9b46:	21 e7                	and    edi,esp
    9b48:	28 00                	sub    BYTE PTR [rax],al
    9b4a:	00 00                	add    BYTE PTR [rax],al
    9b4c:	00 00                	add    BYTE PTR [rax],al
    9b4e:	00 01                	add    BYTE PTR [rcx],al
    9b50:	30 07                	xor    BYTE PTR [rdi],al
    9b52:	ec                   	in     al,dx
    9b53:	28 00                	sub    BYTE PTR [rax],al
    9b55:	00 00                	add    BYTE PTR [rax],al
    9b57:	00 00                	add    BYTE PTR [rax],al
    9b59:	00 a9 42 00 00 03    	add    BYTE PTR [rcx+0x3000042],ch
    9b5f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    9b62:	7c 00                	jl     9b64 <_end+0x3b4c>
    9b64:	00 00                	add    BYTE PTR [rax],al
    9b66:	16                   	(bad)
    9b67:	37                   	(bad)
    9b68:	29 00                	sub    DWORD PTR [rax],eax
    9b6a:	00 00                	add    BYTE PTR [rax],al
    9b6c:	00 00                	add    BYTE PTR [rax],al
    9b6e:	00 20                	add    BYTE PTR [rax],ah
    9b70:	00 00                	add    BYTE PTR [rax],al
    9b72:	00 00                	add    BYTE PTR [rax],al
    9b74:	00 00                	add    BYTE PTR [rax],al
    9b76:	00 d5                	add    ch,dl
    9b78:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    9b7b:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9b7e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9b7f:	0e                   	(bad)
    9b80:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9b81:	21 00                	and    DWORD PTR [rax],eax
    9b83:	00 9f 1a 00 00 9d    	add    BYTE PTR [rdi-0x62ffffe6],bl
    9b89:	1a 00                	sbb    al,BYTE PTR [rax]
    9b8b:	00 24 45 29 00 00 00 	add    BYTE PTR [rax*2+0x29],ah
    9b92:	00 00                	add    BYTE PTR [rax],al
    9b94:	00 4d 2f             	add    BYTE PTR [rbp+0x2f],cl
    9b97:	00 00                	add    BYTE PTR [rax],al
    9b99:	00 16                	add    BYTE PTR [rsi],dl
    9b9b:	57                   	push   rdi
    9b9c:	29 00                	sub    DWORD PTR [rax],eax
    9b9e:	00 00                	add    BYTE PTR [rax],al
    9ba0:	00 00                	add    BYTE PTR [rax],al
    9ba2:	00 bd 00 00 00 00    	add    BYTE PTR [rbp+0x0],bh
    9ba8:	00 00                	add    BYTE PTR [rax],al
    9baa:	00 f9                	add    cl,bh
    9bac:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9baf:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    9bb2:	8a 0e                	mov    cl,BYTE PTR [rsi]
    9bb4:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9bb5:	21 00                	and    DWORD PTR [rax],eax
    9bb7:	00 ae 1a 00 00 a8    	add    BYTE PTR [rsi-0x57ffffe6],ch
    9bbd:	1a 00                	sbb    al,BYTE PTR [rax]
    9bbf:	00 2e                	add    BYTE PTR [rsi],ch
    9bc1:	db 02                	fild   DWORD PTR [rdx]
    9bc3:	00 00                	add    BYTE PTR [rax],al
    9bc5:	20 5c 2f 00          	and    BYTE PTR [rdi+rbp*1+0x0],bl
    9bc9:	00 8b 0e e3 1a 00    	add    BYTE PTR [rbx+0x1ae30e],cl
    9bcf:	00 c9                	add    cl,cl
    9bd1:	1a 00                	sbb    al,BYTE PTR [rax]
    9bd3:	00 c7                	add    bh,al
    9bd5:	1a 00                	sbb    al,BYTE PTR [rax]
    9bd7:	00 49 65             	add    BYTE PTR [rcx+0x65],cl
    9bda:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9bdb:	64 00 91 0e e3 1a 00 	add    BYTE PTR fs:[rcx+0x1ae30e],dl
    9be2:	00 20                	add    BYTE PTR [rax],ah
    9be4:	89 19                	mov    DWORD PTR [rcx],ebx
    9be6:	00 00                	add    BYTE PTR [rax],al
    9be8:	92                   	xchg   edx,eax
    9be9:	0e                   	(bad)
    9bea:	df 1b                	fistp  WORD PTR [rbx]
    9bec:	00 00                	add    BYTE PTR [rax],al
    9bee:	d4                   	(bad)
    9bef:	1a 00                	sbb    al,BYTE PTR [rax]
    9bf1:	00 d2                	add    dl,dl
    9bf3:	1a 00                	sbb    al,BYTE PTR [rax]
    9bf5:	00 16                	add    BYTE PTR [rsi],dl
    9bf7:	8f 29 00 00          	(bad)
    9bfb:	00 00                	add    BYTE PTR [rax],al
    9bfd:	00 00                	add    BYTE PTR [rax],al
    9bff:	3b 00                	cmp    eax,DWORD PTR [rax]
    9c01:	00 00                	add    BYTE PTR [rax],al
    9c03:	00 00                	add    BYTE PTR [rax],al
    9c05:	00 00                	add    BYTE PTR [rax],al
    9c07:	77 48                	ja     9c51 <_end+0x3c39>
    9c09:	00 00                	add    BYTE PTR [rax],al
    9c0b:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9c0e:	8d 12                	lea    edx,[rdx]
    9c10:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9c11:	21 00                	and    DWORD PTR [rax],eax
    9c13:	00 eb                	add    bl,ch
    9c15:	1a 00                	sbb    al,BYTE PTR [rax]
    9c17:	00 e9                	add    cl,ch
    9c19:	1a 00                	sbb    al,BYTE PTR [rax]
    9c1b:	00 21                	add    BYTE PTR [rcx],ah
    9c1d:	b8 29 00 00 00       	mov    eax,0x29
    9c22:	00 00                	add    BYTE PTR [rax],al
    9c24:	00 01                	add    BYTE PTR [rcx],al
    9c26:	30 07                	xor    BYTE PTR [rdi],al
    9c28:	bd 29 00 00 00       	mov    ebp,0x29
    9c2d:	00 00                	add    BYTE PTR [rax],al
    9c2f:	00 31                	add    BYTE PTR [rcx],dh
    9c31:	42 00 00             	rex.X add BYTE PTR [rax],al
    9c34:	03 01                	add    eax,DWORD PTR [rcx]
    9c36:	55                   	push   rbp
    9c37:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    9c3b:	00 1e                	add    BYTE PTR [rsi],bl
    9c3d:	c9                   	leave
    9c3e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9c41:	cf                   	iret
    9c42:	29 00                	sub    DWORD PTR [rax],eax
    9c44:	00 00                	add    BYTE PTR [rax],al
    9c46:	00 00                	add    BYTE PTR [rax],al
    9c48:	00 01                	add    BYTE PTR [rcx],al
    9c4a:	00 eb                	add    bl,ch
    9c4c:	02 00                	add    al,BYTE PTR [rax]
    9c4e:	00 92 54 65 49 00    	add    BYTE PTR [rdx+0x496554],dl
    9c54:	00 05 f9 4e 00 00    	add    BYTE PTR [rip+0x4ef9],al        # eb53 <_end+0x8b3b>
    9c5a:	f6 1a                	neg    BYTE PTR [rdx]
    9c5c:	00 00                	add    BYTE PTR [rax],al
    9c5e:	f4                   	hlt
    9c5f:	1a 00                	sbb    al,BYTE PTR [rax]
    9c61:	00 05 ed 4e 00 00    	add    BYTE PTR [rip+0x4eed],al        # eb54 <_end+0x8b3c>
    9c67:	05 1b 00 00 03       	add    eax,0x300001b
    9c6c:	1b 00                	sbb    eax,DWORD PTR [rax]
    9c6e:	00 60 ac             	add    BYTE PTR [rax-0x54],ah
    9c71:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9c74:	cf                   	iret
    9c75:	29 00                	sub    DWORD PTR [rax],eax
    9c77:	00 00                	add    BYTE PTR [rax],al
    9c79:	00 00                	add    BYTE PTR [rax],al
    9c7b:	00 02                	add    BYTE PTR [rdx],al
    9c7d:	00 cf                	add    bh,cl
    9c7f:	29 00                	sub    DWORD PTR [rax],eax
	...
    9c8d:	00 41 dc             	add    BYTE PTR [rcx-0x24],al
    9c90:	48 00 00             	rex.W add BYTE PTR [rax],al
    9c93:	05 ba 4e 00 00       	add    eax,0x4eba
    9c98:	14 1b                	adc    al,0x1b
    9c9a:	00 00                	add    BYTE PTR [rax],al
    9c9c:	12 1b                	adc    bl,BYTE PTR [rbx]
    9c9e:	00 00                	add    BYTE PTR [rax],al
    9ca0:	00 60 ac             	add    BYTE PTR [rax-0x54],ah
    9ca3:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9ca6:	cf                   	iret
    9ca7:	29 00                	sub    DWORD PTR [rax],eax
    9ca9:	00 00                	add    BYTE PTR [rax],al
    9cab:	00 00                	add    BYTE PTR [rax],al
    9cad:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    9cb0:	cf                   	iret
    9cb1:	29 00                	sub    DWORD PTR [rax],eax
	...
    9cbf:	00 26                	add    BYTE PTR [rsi],ah
    9cc1:	0e                   	(bad)
    9cc2:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9cc5:	05 ba 4e 00 00       	add    eax,0x4eba
    9cca:	23 1b                	and    ebx,DWORD PTR [rbx]
    9ccc:	00 00                	add    BYTE PTR [rax],al
    9cce:	21 1b                	and    DWORD PTR [rbx],ebx
    9cd0:	00 00                	add    BYTE PTR [rax],al
    9cd2:	00 61 fb             	add    BYTE PTR [rcx-0x5],ah
    9cd5:	44 00 00             	add    BYTE PTR [rax],r8b
    9cd8:	cf                   	iret
    9cd9:	29 00                	sub    DWORD PTR [rax],eax
    9cdb:	00 00                	add    BYTE PTR [rax],al
    9cdd:	00 00                	add    BYTE PTR [rax],al
    9cdf:	00 06                	add    BYTE PTR [rsi],al
    9ce1:	00 fb                	add    bl,bh
    9ce3:	02 00                	add    al,BYTE PTR [rax]
    9ce5:	00 77 04             	add    BYTE PTR [rdi+0x4],dh
    9ce8:	29 0b                	sub    DWORD PTR [rbx],ecx
    9cea:	34 45                	xor    al,0x45
    9cec:	00 00                	add    BYTE PTR [rax],al
    9cee:	0b 28                	or     ebp,DWORD PTR [rax]
    9cf0:	45 00 00             	add    BYTE PTR [r8],r8b
    9cf3:	2e fb                	cs sti
    9cf5:	02 00                	add    al,BYTE PTR [rax]
    9cf7:	00 8c 01 1a 73 00 00 	add    BYTE PTR [rcx+rax*1+0x731a],cl
    9cfe:	cf                   	iret
    9cff:	29 00                	sub    DWORD PTR [rax],eax
    9d01:	00 00                	add    BYTE PTR [rax],al
    9d03:	00 00                	add    BYTE PTR [rax],al
    9d05:	00 07                	add    BYTE PTR [rdi],al
    9d07:	00 cf                	add    bh,cl
    9d09:	29 00                	sub    DWORD PTR [rax],eax
	...
    9d17:	00 04 cc             	add    BYTE PTR [rsp+rcx*8],al
    9d1a:	02 09                	add    cl,BYTE PTR [rcx]
    9d1c:	0b 3a                	or     edi,DWORD PTR [rdx]
    9d1e:	73 00                	jae    9d20 <_end+0x3d08>
    9d20:	00 0b                	add    BYTE PTR [rbx],cl
    9d22:	31 73 00             	xor    DWORD PTR [rbx+0x0],esi
    9d25:	00 00                	add    BYTE PTR [rax],al
    9d27:	00 00                	add    BYTE PTR [rax],al
    9d29:	00 1e                	add    BYTE PTR [rsi],bl
    9d2b:	4e                   	rex.WRX
    9d2c:	45 00 00             	add    BYTE PTR [r8],r8b
    9d2f:	cf                   	iret
    9d30:	29 00                	sub    DWORD PTR [rax],eax
    9d32:	00 00                	add    BYTE PTR [rax],al
    9d34:	00 00                	add    BYTE PTR [rax],al
    9d36:	00 09                	add    BYTE PTR [rcx],cl
    9d38:	00 0b                	add    BYTE PTR [rbx],cl
    9d3a:	03 00                	add    eax,DWORD PTR [rax]
    9d3c:	00 92 4d dd 49 00    	add    BYTE PTR [rdx+0x49dd4d],dl
    9d42:	00 0b                	add    BYTE PTR [rbx],cl
    9d44:	72 45                	jb     9d8b <_end+0x3d73>
    9d46:	00 00                	add    BYTE PTR [rax],al
    9d48:	4d 7f 45             	rex.WRB jg 9d90 <_end+0x3d78>
    9d4b:	00 00                	add    BYTE PTR [rax],al
    9d4d:	0b 03                	or     eax,DWORD PTR [rbx]
    9d4f:	00 00                	add    BYTE PTR [rax],al
    9d51:	61                   	(bad)
    9d52:	c6 44 00 00 cf       	mov    BYTE PTR [rax+rax*1+0x0],0xcf
    9d57:	29 00                	sub    DWORD PTR [rax],eax
    9d59:	00 00                	add    BYTE PTR [rax],al
    9d5b:	00 00                	add    BYTE PTR [rax],al
    9d5d:	00 0a                	add    BYTE PTR [rdx],cl
    9d5f:	00 0b                	add    BYTE PTR [rbx],cl
    9d61:	03 00                	add    eax,DWORD PTR [rax]
    9d63:	00 1f                	add    BYTE PTR [rdi],bl
    9d65:	01 17                	add    DWORD PTR [rdi],edx
    9d67:	0b e1                	or     esp,ecx
    9d69:	44 00 00             	add    BYTE PTR [rax],r8b
    9d6c:	2e 0b 03             	cs or  eax,DWORD PTR [rbx]
    9d6f:	00 00                	add    BYTE PTR [rax],al
    9d71:	19 74 44 00          	sbb    DWORD PTR [rsp+rax*2+0x0],esi
    9d75:	00 cf                	add    bh,cl
    9d77:	29 00                	sub    DWORD PTR [rax],eax
    9d79:	00 00                	add    BYTE PTR [rax],al
    9d7b:	00 00                	add    BYTE PTR [rax],al
    9d7d:	00 0b                	add    BYTE PTR [rbx],cl
    9d7f:	00 cf                	add    bh,cl
    9d81:	29 00                	sub    DWORD PTR [rax],eax
	...
    9d8f:	00 04 d3             	add    BYTE PTR [rbx+rdx*8],al
    9d92:	0d 0b 94 44 00       	or     eax,0x44940b
    9d97:	00 0b                	add    BYTE PTR [rbx],cl
    9d99:	8b 44 00 00          	mov    eax,DWORD PTR [rax+rax*1+0x0]
    9d9d:	00 00                	add    BYTE PTR [rax],al
    9d9f:	00 00                	add    BYTE PTR [rax],al
    9da1:	00 24 81             	add    BYTE PTR [rcx+rax*4],ah
    9da4:	29 00                	sub    DWORD PTR [rax],eax
    9da6:	00 00                	add    BYTE PTR [rax],al
    9da8:	00 00                	add    BYTE PTR [rax],al
    9daa:	00 d0                	add    al,dl
    9dac:	1a 00                	sbb    al,BYTE PTR [rax]
    9dae:	00 24 cf             	add    BYTE PTR [rdi+rcx*8],ah
    9db1:	29 00                	sub    DWORD PTR [rax],eax
    9db3:	00 00                	add    BYTE PTR [rax],al
    9db5:	00 00                	add    BYTE PTR [rax],al
    9db7:	00 d0                	add    al,dl
    9db9:	1a 00                	sbb    al,BYTE PTR [rax]
    9dbb:	00 00                	add    BYTE PTR [rax],al
    9dbd:	00 62 2b             	add    BYTE PTR [rdx+0x2b],ah
    9dc0:	03 00                	add    eax,DWORD PTR [rax]
    9dc2:	00 75 4a             	add    BYTE PTR [rbp+0x4a],dh
    9dc5:	00 00                	add    BYTE PTR [rax],al
    9dc7:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    9dca:	9c                   	pushf
    9dcb:	13 b0 2c 00 00 3a    	adc    esi,DWORD PTR [rax+0x3a00002c]
    9dd1:	1b 00                	sbb    eax,DWORD PTR [rax]
    9dd3:	00 30                	add    BYTE PTR [rax],dh
    9dd5:	1b 00                	sbb    eax,DWORD PTR [rax]
    9dd7:	00 38                	add    BYTE PTR [rax],bh
    9dd9:	88 73 00             	mov    BYTE PTR [rbx+0x0],dh
    9ddc:	00 62 2a             	add    BYTE PTR [rdx+0x2a],ah
	...
    9de7:	3b 03                	cmp    eax,DWORD PTR [rbx]
    9de9:	00 00                	add    BYTE PTR [rax],al
    9deb:	9d                   	popf
    9dec:	10 05 a2 73 00 00    	adc    BYTE PTR [rip+0x73a2],al        # 11194 <_end+0xb17c>
    9df2:	65 1b 00             	sbb    eax,DWORD PTR gs:[rax]
    9df5:	00 63 1b             	add    BYTE PTR [rbx+0x1b],ah
    9df8:	00 00                	add    BYTE PTR [rax],al
    9dfa:	05 96 73 00 00       	add    eax,0x7396
    9dff:	7a 1b                	jp     9e1c <_end+0x3e04>
    9e01:	00 00                	add    BYTE PTR [rax],al
    9e03:	76 1b                	jbe    9e20 <_end+0x3e08>
    9e05:	00 00                	add    BYTE PTR [rax],al
    9e07:	07                   	(bad)
    9e08:	78 2a                	js     9e34 <_end+0x3e1c>
    9e0a:	00 00                	add    BYTE PTR [rax],al
    9e0c:	00 00                	add    BYTE PTR [rax],al
    9e0e:	00 00                	add    BYTE PTR [rax],al
    9e10:	71 42                	jno    9e54 <_end+0x3e3c>
    9e12:	00 00                	add    BYTE PTR [rax],al
    9e14:	03 01                	add    eax,DWORD PTR [rcx]
    9e16:	55                   	push   rbp
    9e17:	04 76                	add    al,0x76
    9e19:	98                   	cwde
    9e1a:	7f 06                	jg     9e22 <_end+0x3e0a>
    9e1c:	03 01                	add    eax,DWORD PTR [rcx]
    9e1e:	54                   	push   rsp
    9e1f:	01 32                	add    DWORD PTR [rdx],esi
    9e21:	03 01                	add    eax,DWORD PTR [rcx]
    9e23:	51                   	push   rcx
    9e24:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    9e27:	03 01                	add    eax,DWORD PTR [rcx]
    9e29:	52                   	push   rdx
    9e2a:	02 7c 7f 03          	add    bh,BYTE PTR [rdi+rdi*2+0x3]
    9e2e:	01 61 06             	add    DWORD PTR [rcx+0x6],esp
    9e31:	76 f0                	jbe    9e23 <_end+0x3e0b>
    9e33:	7e a6                	jle    9ddb <_end+0x3dc3>
    9e35:	08 2e                	or     BYTE PTR [rsi],ch
    9e37:	00 00                	add    BYTE PTR [rax],al
    9e39:	00 1e                	add    BYTE PTR [rsi],bl
    9e3b:	88 73 00             	mov    BYTE PTR [rbx+0x0],dh
    9e3e:	00 26                	add    BYTE PTR [rsi],ah
    9e40:	2a 00                	sub    al,BYTE PTR [rax]
    9e42:	00 00                	add    BYTE PTR [rax],al
    9e44:	00 00                	add    BYTE PTR [rax],al
    9e46:	00 02                	add    BYTE PTR [rdx],al
    9e48:	00 1b                	add    BYTE PTR [rbx],bl
    9e4a:	03 00                	add    eax,DWORD PTR [rax]
    9e4c:	00 9b 0c 07 4b 00    	add    BYTE PTR [rbx+0x4b070c],bl
    9e52:	00 05 a2 73 00 00    	add    BYTE PTR [rip+0x73a2],al        # 111fa <_end+0xb1e2>
    9e58:	8f                   	(bad)
    9e59:	1b 00                	sbb    eax,DWORD PTR [rax]
    9e5b:	00 8b 1b 00 00 05    	add    BYTE PTR [rbx+0x500001b],cl
    9e61:	96                   	xchg   esi,eax
    9e62:	73 00                	jae    9e64 <_end+0x3e4c>
    9e64:	00 b4 1b 00 00 b0 1b 	add    BYTE PTR [rbx+rbx*1+0x1bb00000],dh
    9e6b:	00 00                	add    BYTE PTR [rax],al
    9e6d:	0a 40 2a             	or     al,BYTE PTR [rax+0x2a]
    9e70:	00 00                	add    BYTE PTR [rax],al
    9e72:	00 00                	add    BYTE PTR [rax],al
    9e74:	00 00                	add    BYTE PTR [rax],al
    9e76:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    9e79:	00 d9                	add    cl,bl
    9e7b:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    9e7e:	03 01                	add    eax,DWORD PTR [rcx]
    9e80:	55                   	push   rbp
    9e81:	09 03                	or     DWORD PTR [rbx],eax
    9e83:	5d                   	pop    rbp
    9e84:	41 00 00             	add    BYTE PTR [r8],al
    9e87:	00 00                	add    BYTE PTR [rax],al
    9e89:	00 00                	add    BYTE PTR [rax],al
    9e8b:	03 01                	add    eax,DWORD PTR [rcx]
    9e8d:	54                   	push   rsp
    9e8e:	01 31                	add    DWORD PTR [rcx],esi
    9e90:	03 01                	add    eax,DWORD PTR [rcx]
    9e92:	51                   	push   rcx
    9e93:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    9e96:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    9e99:	76 98                	jbe    9e33 <_end+0x3e1b>
    9e9b:	7f 06                	jg     9ea3 <_end+0x3e8b>
    9e9d:	00 07                	add    BYTE PTR [rdi],al
    9e9f:	75 2c                	jne    9ecd <_end+0x3eb5>
    9ea1:	00 00                	add    BYTE PTR [rax],al
    9ea3:	00 00                	add    BYTE PTR [rax],al
    9ea5:	00 00                	add    BYTE PTR [rax],al
    9ea7:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    9eaa:	00 03                	add    BYTE PTR [rbx],al
    9eac:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    9eaf:	03 5d 41             	add    ebx,DWORD PTR [rbp+0x41]
    9eb2:	00 00                	add    BYTE PTR [rax],al
    9eb4:	00 00                	add    BYTE PTR [rax],al
    9eb6:	00 00                	add    BYTE PTR [rax],al
    9eb8:	03 01                	add    eax,DWORD PTR [rcx]
    9eba:	54                   	push   rsp
    9ebb:	01 31                	add    DWORD PTR [rcx],esi
    9ebd:	03 01                	add    eax,DWORD PTR [rcx]
    9ebf:	51                   	push   rcx
    9ec0:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    9ec3:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    9ec6:	76 98                	jbe    9e60 <_end+0x3e48>
    9ec8:	7f 06                	jg     9ed0 <_end+0x3eb8>
    9eca:	00 00                	add    BYTE PTR [rax],al
    9ecc:	1e                   	(bad)
    9ecd:	ef                   	out    dx,eax
    9ece:	45 00 00             	add    BYTE PTR [r8],r8b
    9ed1:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9ed2:	2a 00                	sub    al,BYTE PTR [rax]
    9ed4:	00 00                	add    BYTE PTR [rax],al
    9ed6:	00 00                	add    BYTE PTR [rax],al
    9ed8:	00 01                	add    BYTE PTR [rcx],al
    9eda:	00 4b 03             	add    BYTE PTR [rbx+0x3],cl
    9edd:	00 00                	add    BYTE PTR [rax],al
    9edf:	a2 31 24 4c 00 00 05 	movabs ds:0x461a0500004c2431,al
    9ee6:	1a 46 
    9ee8:	00 00                	add    BYTE PTR [rax],al
    9eea:	d3 1b                	rcr    DWORD PTR [rbx],cl
    9eec:	00 00                	add    BYTE PTR [rax],al
    9eee:	c7                   	(bad)
    9eef:	1b 00                	sbb    eax,DWORD PTR [rax]
    9ef1:	00 05 0e 46 00 00    	add    BYTE PTR [rip+0x460e],al        # e505 <_end+0x84ed>
    9ef7:	1b 1c 00             	sbb    ebx,DWORD PTR [rax+rax*1]
    9efa:	00 0d 1c 00 00 05    	add    BYTE PTR [rip+0x500001c],cl        # 5009f1c <_end+0x5003f04>
    9f00:	02 46 00             	add    al,BYTE PTR [rsi+0x0]
    9f03:	00 5d 1c             	add    BYTE PTR [rbp+0x1c],bl
    9f06:	00 00                	add    BYTE PTR [rax],al
    9f08:	55                   	push   rbp
    9f09:	1c 00                	sbb    al,0x0
    9f0b:	00 2e                	add    BYTE PTR [rsi],ch
    9f0d:	4b 03 00             	rex.WXB add rax,QWORD PTR [r8]
    9f10:	00 15 2f 46 00 00    	add    BYTE PTR [rip+0x462f],dl        # e545 <_end+0x852d>
    9f16:	8c 1c 00             	mov    WORD PTR [rax+rax*1],ds
    9f19:	00 80 1c 00 00 39    	add    BYTE PTR [rax+0x3900001c],al
    9f1f:	3a 46 00             	cmp    al,BYTE PTR [rsi+0x0]
    9f22:	00 65 03             	add    BYTE PTR [rbp+0x3],ah
    9f25:	00 00                	add    BYTE PTR [rax],al
    9f27:	6c                   	ins    BYTE PTR es:[rdi],dx
    9f28:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    9f2b:	3a 3b                	cmp    bh,BYTE PTR [rbx]
    9f2d:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9f30:	00 1e                	add    BYTE PTR [rsi],bl
    9f32:	b0 73                	mov    al,0x73
    9f34:	00 00                	add    BYTE PTR [rax],al
    9f36:	88 2b                	mov    BYTE PTR [rbx],ch
	...
    9f40:	70 03                	jo     9f45 <_end+0x3f2d>
    9f42:	00 00                	add    BYTE PTR [rax],al
    9f44:	b3 1e                	mov    bl,0x1e
    9f46:	a0 4b 00 00 05 b9 73 	movabs al,ds:0x73b90500004b
    9f4d:	00 00 
    9f4f:	bd 1c 00 00 b7       	mov    ebp,0xb700001c
    9f54:	1c 00                	sbb    al,0x0
    9f56:	00 24 ec             	add    BYTE PTR [rsp+rbp*8],ah
    9f59:	2c 00                	sub    al,0x0
    9f5b:	00 00                	add    BYTE PTR [rax],al
    9f5d:	00 00                	add    BYTE PTR [rax],al
    9f5f:	00 09                	add    BYTE PTR [rcx],cl
    9f61:	77 00                	ja     9f63 <_end+0x3f4b>
    9f63:	00 00                	add    BYTE PTR [rax],al
    9f65:	19 ef                	sbb    edi,ebp
    9f67:	45 00 00             	add    BYTE PTR [r8],r8b
    9f6a:	9c                   	pushf
    9f6b:	2c 00                	sub    al,0x0
    9f6d:	00 00                	add    BYTE PTR [rax],al
    9f6f:	00 00                	add    BYTE PTR [rax],al
    9f71:	00 01                	add    BYTE PTR [rcx],al
    9f73:	00 9c 2c 00 00 00 00 	add    BYTE PTR [rsp+rbp*1+0x0],bl
    9f7a:	00 00                	add    BYTE PTR [rax],al
    9f7c:	1f                   	(bad)
    9f7d:	00 00                	add    BYTE PTR [rax],al
    9f7f:	00 00                	add    BYTE PTR [rax],al
    9f81:	00 00                	add    BYTE PTR [rax],al
    9f83:	00 01                	add    BYTE PTR [rcx],al
    9f85:	ac                   	lods   al,BYTE PTR ds:[rsi]
    9f86:	08 05 02 46 00 00    	or     BYTE PTR [rip+0x4602],al        # e58e <_end+0x8576>
    9f8c:	d5 1c 00 00          	{rex2 0x1c} add BYTE PTR [r16],r8b
    9f90:	d3 1c 00             	rcr    DWORD PTR [rax+rax*1],cl
    9f93:	00 05 0e 46 00 00    	add    BYTE PTR [rip+0x460e],al        # e5a7 <_end+0x858f>
    9f99:	d5 1c 00 00          	{rex2 0x1c} add BYTE PTR [r16],r8b
    9f9d:	d3 1c 00             	rcr    DWORD PTR [rax+rax*1],cl
    9fa0:	00 0b                	add    BYTE PTR [rbx],cl
    9fa2:	1a 46 00             	sbb    al,BYTE PTR [rsi+0x0]
    9fa5:	00 3a                	add    BYTE PTR [rdx],bh
    9fa7:	2f                   	(bad)
    9fa8:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9fab:	07                   	(bad)
    9fac:	bb 2c 00 00 00       	mov    ebx,0x2c
    9fb1:	00 00                	add    BYTE PTR [rax],al
    9fb3:	00 4d 44             	add    BYTE PTR [rbp+0x44],cl
    9fb6:	00 00                	add    BYTE PTR [rax],al
    9fb8:	03 01                	add    eax,DWORD PTR [rcx]
    9fba:	55                   	push   rbp
    9fbb:	09 03                	or     DWORD PTR [rbx],eax
    9fbd:	71 41                	jno    a000 <_end+0x3fe8>
    9fbf:	00 00                	add    BYTE PTR [rax],al
    9fc1:	00 00                	add    BYTE PTR [rax],al
    9fc3:	00 00                	add    BYTE PTR [rax],al
    9fc5:	03 01                	add    eax,DWORD PTR [rcx]
    9fc7:	54                   	push   rsp
    9fc8:	09 03                	or     DWORD PTR [rbx],eax
    9fca:	e7 40                	out    0x40,eax
    9fcc:	00 00                	add    BYTE PTR [rax],al
    9fce:	00 00                	add    BYTE PTR [rax],al
    9fd0:	00 00                	add    BYTE PTR [rax],al
    9fd2:	03 01                	add    eax,DWORD PTR [rcx]
    9fd4:	51                   	push   rcx
    9fd5:	02 08                	add    cl,BYTE PTR [rax]
    9fd7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9fd8:	03 01                	add    eax,DWORD PTR [rcx]
    9fda:	52                   	push   rdx
    9fdb:	09 03                	or     DWORD PTR [rbx],eax
    9fdd:	a0 44 00 00 00 00 00 	movabs al,ds:0x44
    9fe4:	00 00 
    9fe6:	00 00                	add    BYTE PTR [rax],al
    9fe8:	00 1e                	add    BYTE PTR [rsi],bl
    9fea:	6c                   	ins    BYTE PTR es:[rdi],dx
    9feb:	73 00                	jae    9fed <_end+0x3fd5>
    9fed:	00 aa 2b 00 00 00    	add    BYTE PTR [rdx+0x2b],ch
    9ff3:	00 00                	add    BYTE PTR [rax],al
    9ff5:	00 03                	add    BYTE PTR [rbx],al
    9ff7:	00 80 03 00 00 a4    	add    BYTE PTR [rax-0x5bfffffd],al
    9ffd:	0b 75 4c             	or     esi,DWORD PTR [rbp+0x4c]
    a000:	00 00                	add    BYTE PTR [rax],al
    a002:	05 7a 73 00 00       	add    eax,0x737a
    a007:	e0 1c                	loopne a025 <_end+0x400d>
    a009:	00 00                	add    BYTE PTR [rax],al
    a00b:	de 1c 00             	ficomp WORD PTR [rax+rax*1]
    a00e:	00 07                	add    BYTE PTR [rdi],al
    a010:	c5 2b 00             	(bad)
    a013:	00 00                	add    BYTE PTR [rax],al
    a015:	00 00                	add    BYTE PTR [rax],al
    a017:	00 e7                	add    bh,ah
    a019:	42 00 00             	rex.X add BYTE PTR [rax],al
    a01c:	03 01                	add    eax,DWORD PTR [rcx]
    a01e:	55                   	push   rbp
    a01f:	01 32                	add    DWORD PTR [rdx],esi
    a021:	03 01                	add    eax,DWORD PTR [rcx]
    a023:	54                   	push   rsp
    a024:	09 03                	or     DWORD PTR [rbx],eax
    a026:	85 41 00             	test   DWORD PTR [rcx+0x0],eax
    a029:	00 00                	add    BYTE PTR [rax],al
    a02b:	00 00                	add    BYTE PTR [rax],al
    a02d:	00 03                	add    BYTE PTR [rbx],al
    a02f:	01 61 06             	add    DWORD PTR [rcx+0x6],esp
    a032:	76 f0                	jbe    a024 <_end+0x400c>
    a034:	7e a6                	jle    9fdc <_end+0x3fc4>
    a036:	08 2e                	or     BYTE PTR [rsi],ch
    a038:	00 00                	add    BYTE PTR [rax],al
    a03a:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    a03e:	00 c5                	add    ch,al
    a040:	2b 00                	sub    eax,DWORD PTR [rax]
    a042:	00 00                	add    BYTE PTR [rax],al
    a044:	00 00                	add    BYTE PTR [rax],al
    a046:	00 02                	add    BYTE PTR [rdx],al
    a048:	00 c5                	add    ch,al
    a04a:	2b 00                	sub    eax,DWORD PTR [rax]
    a04c:	00 00                	add    BYTE PTR [rax],al
    a04e:	00 00                	add    BYTE PTR [rax],al
    a050:	00 1b                	add    BYTE PTR [rbx],bl
    a052:	00 00                	add    BYTE PTR [rax],al
    a054:	00 00                	add    BYTE PTR [rax],al
    a056:	00 00                	add    BYTE PTR [rax],al
    a058:	00 a5 0b cf 4c 00    	add    BYTE PTR [rbp+0x4ccf0b],ah
    a05e:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 113de <_end+0xb3c6>
    a064:	f3 1c 00             	repz sbb al,0x0
    a067:	00 f1                	add    cl,dh
    a069:	1c 00                	sbb    al,0x0
    a06b:	00 07                	add    BYTE PTR [rdi],al
    a06d:	e0 2b                	loopne a09a <_end+0x4082>
    a06f:	00 00                	add    BYTE PTR [rax],al
    a071:	00 00                	add    BYTE PTR [rax],al
    a073:	00 00                	add    BYTE PTR [rax],al
    a075:	e7 42                	out    0x42,eax
    a077:	00 00                	add    BYTE PTR [rax],al
    a079:	03 01                	add    eax,DWORD PTR [rcx]
    a07b:	55                   	push   rbp
    a07c:	01 32                	add    DWORD PTR [rdx],esi
    a07e:	03 01                	add    eax,DWORD PTR [rcx]
    a080:	54                   	push   rsp
    a081:	09 03                	or     DWORD PTR [rbx],eax
    a083:	a3 41 00 00 00 00 00 	movabs ds:0x300000000000041,eax
    a08a:	00 03 
    a08c:	01 61 03             	add    DWORD PTR [rcx+0x3],esp
    a08f:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a090:	03 2e                	add    ebp,DWORD PTR [rsi]
    a092:	00 00                	add    BYTE PTR [rax],al
    a094:	1e                   	(bad)
    a095:	6c                   	ins    BYTE PTR es:[rdi],dx
    a096:	73 00                	jae    a098 <_end+0x4080>
    a098:	00 e0                	add    al,ah
    a09a:	2b 00                	sub    eax,DWORD PTR [rax]
    a09c:	00 00                	add    BYTE PTR [rax],al
    a09e:	00 00                	add    BYTE PTR [rax],al
    a0a0:	00 02                	add    BYTE PTR [rdx],al
    a0a2:	00 8b 03 00 00 a6    	add    BYTE PTR [rbx-0x59fffffd],cl
    a0a8:	0b 30                	or     esi,DWORD PTR [rax]
    a0aa:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a0ad:	05 7a 73 00 00       	add    eax,0x737a
    a0b2:	06                   	(bad)
    a0b3:	1d 00 00 04 1d       	sbb    eax,0x1d040000
    a0b8:	00 00                	add    BYTE PTR [rax],al
    a0ba:	07                   	(bad)
    a0bb:	0f 2c 00             	cvttps2pi mm0,QWORD PTR [rax]
    a0be:	00 00                	add    BYTE PTR [rax],al
    a0c0:	00 00                	add    BYTE PTR [rax],al
    a0c2:	00 e7                	add    bh,ah
    a0c4:	42 00 00             	rex.X add BYTE PTR [rax],al
    a0c7:	03 01                	add    eax,DWORD PTR [rcx]
    a0c9:	55                   	push   rbp
    a0ca:	01 32                	add    DWORD PTR [rdx],esi
    a0cc:	03 01                	add    eax,DWORD PTR [rcx]
    a0ce:	54                   	push   rsp
    a0cf:	09 03                	or     DWORD PTR [rbx],eax
    a0d1:	c1 41 00 00          	rol    DWORD PTR [rcx+0x0],0x0
    a0d5:	00 00                	add    BYTE PTR [rax],al
    a0d7:	00 00                	add    BYTE PTR [rax],al
    a0d9:	03 01                	add    eax,DWORD PTR [rcx]
    a0db:	61                   	(bad)
    a0dc:	16                   	(bad)
    a0dd:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a0de:	03 2e                	add    ebp,DWORD PTR [rsi]
    a0e0:	76 f0                	jbe    a0d2 <_end+0x40ba>
    a0e2:	7e a6                	jle    a08a <_end+0x4072>
    a0e4:	08 2e                	or     BYTE PTR [rsi],ch
    a0e6:	1b a4 2e 08 00 00 00 	sbb    esp,DWORD PTR [rsi+rbp*1+0x8]
    a0ed:	00 00                	add    BYTE PTR [rax],al
    a0ef:	00 59 40             	add    BYTE PTR [rcx+0x40],bl
    a0f2:	1e                   	(bad)
    a0f3:	00 00                	add    BYTE PTR [rax],al
    a0f5:	0a a8 28 00 00 00    	or     ch,BYTE PTR [rax+0x28]
    a0fb:	00 00                	add    BYTE PTR [rax],al
    a0fd:	00 5a 2f             	add    BYTE PTR [rdx+0x2f],bl
    a100:	00 00                	add    BYTE PTR [rax],al
    a102:	47                   	rex.RXB
    a103:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a106:	03 01                	add    eax,DWORD PTR [rcx]
    a108:	55                   	push   rbp
    a109:	01 3a                	add    DWORD PTR [rdx],edi
    a10b:	00 0a                	add    BYTE PTR [rdx],cl
    a10d:	b7 28                	mov    bh,0x28
    a10f:	00 00                	add    BYTE PTR [rax],al
    a111:	00 00                	add    BYTE PTR [rax],al
    a113:	00 00                	add    BYTE PTR [rax],al
    a115:	c8 42 00 00          	enter  0x42,0x0
    a119:	6d                   	ins    DWORD PTR es:[rdi],dx
    a11a:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a11d:	03 01                	add    eax,DWORD PTR [rcx]
    a11f:	55                   	push   rbp
    a120:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    a124:	01 54 04 76          	add    DWORD PTR [rsp+rax*1+0x76],edx
    a128:	a8 7f                	test   al,0x7f
    a12a:	06                   	(bad)
    a12b:	03 01                	add    eax,DWORD PTR [rcx]
    a12d:	51                   	push   rcx
    a12e:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    a131:	00 0a                	add    BYTE PTR [rdx],cl
    a133:	08 29                	or     BYTE PTR [rcx],ch
    a135:	00 00                	add    BYTE PTR [rax],al
    a137:	00 00                	add    BYTE PTR [rax],al
    a139:	00 00                	add    BYTE PTR [rax],al
    a13b:	55                   	push   rbp
    a13c:	42 00 00             	rex.X add BYTE PTR [rax],al
    a13f:	8d 4d 00             	lea    ecx,[rbp+0x0]
    a142:	00 03                	add    BYTE PTR [rbx],al
    a144:	01 55 05             	add    DWORD PTR [rbp+0x5],edx
    a147:	0c 40                	or     al,0x40
    a149:	42 0f 00 03          	rex.X sldt WORD PTR [rbx]
    a14d:	01 54 01 34          	add    DWORD PTR [rcx+rax*1+0x34],edx
    a151:	00 0a                	add    BYTE PTR [rdx],cl
    a153:	33 29                	xor    ebp,DWORD PTR [rcx]
    a155:	00 00                	add    BYTE PTR [rax],al
    a157:	00 00                	add    BYTE PTR [rax],al
    a159:	00 00                	add    BYTE PTR [rax],al
    a15b:	55                   	push   rbp
    a15c:	42 00 00             	rex.X add BYTE PTR [rax],al
    a15f:	ac                   	lods   al,BYTE PTR ds:[rsi]
    a160:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a163:	03 01                	add    eax,DWORD PTR [rcx]
    a165:	55                   	push   rbp
    a166:	04 76                	add    al,0x76
    a168:	90                   	nop
    a169:	7f 06                	jg     a171 <_end+0x4159>
    a16b:	03 01                	add    eax,DWORD PTR [rcx]
    a16d:	54                   	push   rsp
    a16e:	01 38                	add    DWORD PTR [rax],edi
    a170:	00 0a                	add    BYTE PTR [rdx],cl
    a172:	26 2a 00             	es sub al,BYTE PTR [rax]
    a175:	00 00                	add    BYTE PTR [rax],al
    a177:	00 00                	add    BYTE PTR [rax],al
    a179:	00 92 42 00 00 c5    	add    BYTE PTR [rdx-0x3affffbe],dl
    a17f:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a182:	03 01                	add    eax,DWORD PTR [rcx]
    a184:	55                   	push   rbp
    a185:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    a188:	7f 00                	jg     a18a <_end+0x4172>
    a18a:	21 25 2b 00 00 00    	and    DWORD PTR [rip+0x2b],esp        # a1bb <_end+0x41a3>
    a190:	00 00                	add    BYTE PTR [rax],al
    a192:	00 01                	add    BYTE PTR [rcx],al
    a194:	30 0a                	xor    BYTE PTR [rdx],cl
    a196:	18 2c 00             	sbb    BYTE PTR [rax+rax*1],ch
    a199:	00 00                	add    BYTE PTR [rax],al
    a19b:	00 00                	add    BYTE PTR [rax],al
    a19d:	00 03                	add    BYTE PTR [rbx],al
    a19f:	43 00 00             	rex.XB add BYTE PTR [r8],al
    a1a2:	ea                   	(bad)
    a1a3:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a1a6:	03 01                	add    eax,DWORD PTR [rcx]
    a1a8:	55                   	push   rbp
    a1a9:	04 76                	add    al,0x76
    a1ab:	a8 7f                	test   al,0x7f
    a1ad:	06                   	(bad)
    a1ae:	00 8d 01 4b 2c 00    	add    BYTE PTR [rbp+0x2c4b01],cl
    a1b4:	00 00                	add    BYTE PTR [rax],al
    a1b6:	00 00                	add    BYTE PTR [rax],al
    a1b8:	00 03                	add    BYTE PTR [rbx],al
    a1ba:	43 00 00             	rex.XB add BYTE PTR [r8],al
    a1bd:	0a 4e 00             	or     cl,BYTE PTR [rsi+0x0]
    a1c0:	00 03                	add    BYTE PTR [rbx],al
    a1c2:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a1c5:	91                   	xchg   ecx,eax
    a1c6:	70 09                	jo     a1d1 <_end+0x41b9>
    a1c8:	e0 1a                	loopne a1e4 <_end+0x41cc>
    a1ca:	08 a8 1c 06 00 21    	or     BYTE PTR [rax+0x2100061c],ch
    a1d0:	4e 2c 00             	rex.WRX sub al,0x0
    a1d3:	00 00                	add    BYTE PTR [rax],al
    a1d5:	00 00                	add    BYTE PTR [rax],al
    a1d7:	00 01                	add    BYTE PTR [rcx],al
    a1d9:	30 0a                	xor    BYTE PTR [rdx],cl
    a1db:	5b                   	pop    rbx
    a1dc:	2c 00                	sub    al,0x0
    a1de:	00 00                	add    BYTE PTR [rax],al
    a1e0:	00 00                	add    BYTE PTR [rax],al
    a1e2:	00 92 42 00 00 2d    	add    BYTE PTR [rdx+0x2d000042],dl
    a1e8:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a1eb:	03 01                	add    eax,DWORD PTR [rcx]
    a1ed:	55                   	push   rbp
    a1ee:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a1f2:	0a da                	or     bl,dl
    a1f4:	2c 00                	sub    al,0x0
    a1f6:	00 00                	add    BYTE PTR [rax],al
    a1f8:	00 00                	add    BYTE PTR [rax],al
    a1fa:	00 4d 44             	add    BYTE PTR [rbp+0x44],cl
    a1fd:	00 00                	add    BYTE PTR [rax],al
    a1ff:	6c                   	ins    BYTE PTR es:[rdi],dx
    a200:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a203:	03 01                	add    eax,DWORD PTR [rcx]
    a205:	55                   	push   rbp
    a206:	09 03                	or     DWORD PTR [rbx],eax
    a208:	03 41 00             	add    eax,DWORD PTR [rcx+0x0]
    a20b:	00 00                	add    BYTE PTR [rax],al
    a20d:	00 00                	add    BYTE PTR [rax],al
    a20f:	00 03                	add    BYTE PTR [rbx],al
    a211:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a215:	e7 40                	out    0x40,eax
    a217:	00 00                	add    BYTE PTR [rax],al
    a219:	00 00                	add    BYTE PTR [rax],al
    a21b:	00 00                	add    BYTE PTR [rax],al
    a21d:	03 01                	add    eax,DWORD PTR [rcx]
    a21f:	51                   	push   rcx
    a220:	02 08                	add    cl,BYTE PTR [rax]
    a222:	62 03 01 52 09       	(bad)
    a227:	03 58 44             	add    ebx,DWORD PTR [rax+0x44]
    a22a:	00 00                	add    BYTE PTR [rax],al
    a22c:	00 00                	add    BYTE PTR [rax],al
    a22e:	00 00                	add    BYTE PTR [rax],al
    a230:	00 24 df             	add    BYTE PTR [rdi+rbx*8],ah
    a233:	2c 00                	sub    al,0x0
    a235:	00 00                	add    BYTE PTR [rax],al
    a237:	00 00                	add    BYTE PTR [rax],al
    a239:	00 12                	add    BYTE PTR [rdx],dl
    a23b:	77 00                	ja     a23d <_end+0x4225>
    a23d:	00 00                	add    BYTE PTR [rax],al
    a23f:	26 ee                	es out dx,al
    a241:	22 00                	and    al,BYTE PTR [rax]
    a243:	00 8a 4e 00 00 27    	add    BYTE PTR [rdx+0x2700004e],cl
    a249:	8a 21                	mov    ah,BYTE PTR [rcx]
    a24b:	00 00                	add    BYTE PTR [rax],al
    a24d:	40 00 13             	rex add BYTE PTR [rbx],dl
    a250:	7a 4e                	jp     a2a0 <_end+0x4288>
    a252:	00 00                	add    BYTE PTR [rax],al
    a254:	0d b0 2c 00 00       	or     eax,0x2cb0
    a259:	30 90 1c 00 00 a2    	xor    BYTE PTR [rax-0x5dffffe4],dl
    a25f:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a262:	03 ac 4e 00 00 31 bb 	add    ebp,DWORD PTR [rsi+rcx*2-0x44cf0000]
    a269:	1e                   	(bad)
    a26a:	00 00                	add    BYTE PTR [rax],al
    a26c:	e8 3f 00 00 00       	call   a2b0 <_end+0x4298>
    a271:	30 3c 1b             	xor    BYTE PTR [rbx+rbx*1],bh
    a274:	00 00                	add    BYTE PTR [rax],al
    a276:	ba 4e 00 00 03       	mov    edx,0x300004e
    a27b:	c4                   	(bad)
    a27c:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a27f:	31 bb 1e 00 00 04    	xor    DWORD PTR [rbx+0x400001e],edi
    a285:	42 00 00             	rex.X add BYTE PTR [rax],al
    a288:	00 23                	add    BYTE PTR [rbx],ah
    a28a:	da 1b                	ficomp DWORD PTR [rbx]
    a28c:	00 00                	add    BYTE PTR [rax],al
    a28e:	32 5c 1f 00          	xor    bl,BYTE PTR [rdi+rbx*1+0x0]
    a292:	00 06                	add    BYTE PTR [rsi],al
    a294:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    a297:	11 40 29             	adc    DWORD PTR [rax+0x29],eax
    a29a:	00 00                	add    BYTE PTR [rax],al
    a29c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a29d:	1a 00                	sbb    al,BYTE PTR [rax]
    a29f:	00 11                	add    BYTE PTR [rcx],dl
    a2a1:	96                   	xchg   esi,eax
    a2a2:	23 00                	and    eax,DWORD PTR [rax]
    a2a4:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    a2a7:	00 00                	add    BYTE PTR [rax],al
    a2a9:	11 9c 23 00 00 14 18 	adc    DWORD PTR [rbx+riz*1+0x18140000],ebx
    a2b0:	00 00                	add    BYTE PTR [rax],al
    a2b2:	2d 9e 0f 00 00       	sub    eax,0xf9e
    a2b7:	75 04                	jne    a2bd <_end+0x42a5>
    a2b9:	32 c4                	xor    al,ah
    a2bb:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a2be:	2d 9b 17 00 00       	sub    eax,0x179b
    a2c3:	76 04                	jbe    a2c9 <_end+0x42b1>
    a2c5:	24 c4                	and    al,0xc4
    a2c7:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a2ca:	00 4a 63             	add    BYTE PTR [rdx+0x63],cl
    a2cd:	1f                   	(bad)
    a2ce:	00 00                	add    BYTE PTR [rax],al
    a2d0:	47 c5 2b 00          	(bad)
    a2d4:	00 d0                	add    al,dl
    a2d6:	23 00                	and    eax,DWORD PTR [rax]
    a2d8:	00 00                	add    BYTE PTR [rax],al
    a2da:	00 00                	add    BYTE PTR [rax],al
    a2dc:	00 63 04             	add    BYTE PTR [rbx+0x4],ah
    a2df:	00 00                	add    BYTE PTR [rax],al
    a2e1:	00 00                	add    BYTE PTR [rax],al
    a2e3:	00 00                	add    BYTE PTR [rax],al
    a2e5:	01 9c a6 52 00 00 1d 	add    DWORD PTR [rsi+riz*4+0x1d000052],ebx
    a2ec:	68 2c 00 00 47       	push   0x4700002c
    a2f1:	1b 8e 2c 00 00 25    	sbb    ecx,DWORD PTR [rsi+0x2500002c]
    a2f7:	1d 00 00 17 1d       	sbb    eax,0x1d170000
    a2fc:	00 00                	add    BYTE PTR [rax],al
    a2fe:	1d 3d 04 00 00       	sbb    eax,0x43d
    a303:	47 28 57 40          	rex.RXB sub BYTE PTR [r15+0x40],r10b
    a307:	00 00                	add    BYTE PTR [rax],al
    a309:	62 1d 00 00 5a       	(bad)
    a30e:	1d 00 00 1d 6a       	sbb    eax,0x6a1d0000
    a313:	0d 00 00 47 3c       	or     eax,0x3c470000
    a318:	b5 41                	mov    ch,0x41
    a31a:	00 00                	add    BYTE PTR [rax],al
    a31c:	92                   	xchg   edx,eax
    a31d:	1d 00 00 82 1d       	sbb    eax,0x1d820000
    a322:	00 00                	add    BYTE PTR [rax],al
    a324:	1d 28 08 00 00       	sbb    eax,0x828
    a329:	47 50                	rex.RXB push r8
    a32b:	b0 2c                	mov    al,0x2c
    a32d:	00 00                	add    BYTE PTR [rax],al
    a32f:	f7 1d 00 00 ef 1d    	neg    DWORD PTR [rip+0x1def0000]        # 1defa335 <_end+0x1def431d>
    a335:	00 00                	add    BYTE PTR [rax],al
    a337:	4b d3 03             	rex.WXB rol QWORD PTR [r11],cl
    a33a:	00 00                	add    BYTE PTR [rax],al
    a33c:	b6 52                	mov    dh,0x52
    a33e:	00 00                	add    BYTE PTR [rax],al
    a340:	09 03                	or     DWORD PTR [rbx],eax
    a342:	20 44 00 00          	and    BYTE PTR [rax+rax*1+0x0],al
    a346:	00 00                	add    BYTE PTR [rax],al
    a348:	00 00                	add    BYTE PTR [rax],al
    a34a:	4c ef                	rex.WR out dx,eax
    a34c:	05 00 00 4a 0d       	add    eax,0xd4a0000
    a351:	5f                   	pop    rdi
    a352:	41 00 00             	add    BYTE PTR [r8],al
    a355:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    a358:	7f 20                	jg     a37a <_end+0x4362>
    a35a:	04 28                	add    al,0x28
    a35c:	00 00                	add    BYTE PTR [rax],al
    a35e:	50                   	push   rax
    a35f:	0b 35 00 00 00 27    	or     esi,DWORD PTR [rip+0x27000000]        # 2700a365 <_end+0x2700434d>
    a365:	1e                   	(bad)
    a366:	00 00                	add    BYTE PTR [rax],al
    a368:	17                   	(bad)
    a369:	1e                   	(bad)
    a36a:	00 00                	add    BYTE PTR [rax],al
    a36c:	16                   	(bad)
    a36d:	24 24                	and    al,0x24
    a36f:	00 00                	add    BYTE PTR [rax],al
    a371:	00 00                	add    BYTE PTR [rax],al
    a373:	00 00                	add    BYTE PTR [rax],al
    a375:	44 00 00             	add    BYTE PTR [rax],r8b
    a378:	00 00                	add    BYTE PTR [rax],al
    a37a:	00 00                	add    BYTE PTR [rax],al
    a37c:	00 ed                	add    ch,ch
    a37e:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    a381:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    a384:	4c 0e                	rex.WR (bad)
    a386:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a387:	21 00                	and    DWORD PTR [rax],eax
    a389:	00 6f 1e             	add    BYTE PTR [rdi+0x1e],ch
    a38c:	00 00                	add    BYTE PTR [rax],al
    a38e:	6d                   	ins    DWORD PTR es:[rdi],dx
    a38f:	1e                   	(bad)
    a390:	00 00                	add    BYTE PTR [rax],al
    a392:	21 56 24             	and    DWORD PTR [rsi+0x24],edx
    a395:	00 00                	add    BYTE PTR [rax],al
    a397:	00 00                	add    BYTE PTR [rax],al
    a399:	00 00                	add    BYTE PTR [rax],al
    a39b:	01 30                	add    DWORD PTR [rax],esi
    a39d:	07                   	(bad)
    a39e:	5b                   	pop    rbx
    a39f:	24 00                	and    al,0x0
    a3a1:	00 00                	add    BYTE PTR [rax],al
    a3a3:	00 00                	add    BYTE PTR [rax],al
    a3a5:	00 a9 42 00 00 03    	add    BYTE PTR [rcx+0x3000042],ch
    a3ab:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a3ae:	7c 00                	jl     a3b0 <_end+0x4398>
    a3b0:	00 00                	add    BYTE PTR [rax],al
    a3b2:	62 51 02 00 00       	(bad)
    a3b7:	57                   	push   rdi
    a3b8:	50                   	push   rax
    a3b9:	00 00                	add    BYTE PTR [rax],al
    a3bb:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    a3be:	54                   	push   rsp
    a3bf:	13 b0 2c 00 00 7a    	adc    esi,DWORD PTR [rax+0x7a00002c]
    a3c5:	1e                   	(bad)
    a3c6:	00 00                	add    BYTE PTR [rax],al
    a3c8:	76 1e                	jbe    a3e8 <_end+0x43d0>
    a3ca:	00 00                	add    BYTE PTR [rax],al
    a3cc:	38 88 73 00 00 c2    	cmp    BYTE PTR [rax-0x3dffff8d],cl
    a3d2:	24 00                	and    al,0x0
    a3d4:	00 00                	add    BYTE PTR [rax],al
    a3d6:	00 00                	add    BYTE PTR [rax],al
    a3d8:	00 02                	add    BYTE PTR [rdx],al
    a3da:	00 61 02             	add    BYTE PTR [rcx+0x2],ah
    a3dd:	00 00                	add    BYTE PTR [rax],al
    a3df:	55                   	push   rbp
    a3e0:	10 05 a2 73 00 00    	adc    BYTE PTR [rip+0x73a2],al        # 11788 <_end+0xb770>
    a3e6:	8c 1e                	mov    WORD PTR [rsi],ds
    a3e8:	00 00                	add    BYTE PTR [rax],al
    a3ea:	8a 1e                	mov    bl,BYTE PTR [rsi]
    a3ec:	00 00                	add    BYTE PTR [rax],al
    a3ee:	05 96 73 00 00       	add    eax,0x7396
    a3f3:	a1 1e 00 00 9d 1e 00 	movabs eax,ds:0x700001e9d00001e
    a3fa:	00 07 
    a3fc:	d2 24 00             	shl    BYTE PTR [rax+rax*1],cl
    a3ff:	00 00                	add    BYTE PTR [rax],al
    a401:	00 00                	add    BYTE PTR [rax],al
    a403:	00 71 42             	add    BYTE PTR [rcx+0x42],dh
    a406:	00 00                	add    BYTE PTR [rax],al
    a408:	03 01                	add    eax,DWORD PTR [rcx]
    a40a:	55                   	push   rbp
    a40b:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    a40e:	03 01                	add    eax,DWORD PTR [rcx]
    a410:	54                   	push   rsp
    a411:	01 32                	add    DWORD PTR [rdx],esi
    a413:	03 01                	add    eax,DWORD PTR [rcx]
    a415:	51                   	push   rcx
    a416:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    a419:	00 00                	add    BYTE PTR [rax],al
    a41b:	00 09                	add    BYTE PTR [rcx],cl
    a41d:	88 73 00             	mov    BYTE PTR [rbx+0x0],dh
    a420:	00 68 24             	add    BYTE PTR [rax+0x24],ch
    a423:	00 00                	add    BYTE PTR [rax],al
    a425:	00 00                	add    BYTE PTR [rax],al
    a427:	00 00                	add    BYTE PTR [rax],al
    a429:	03 00                	add    eax,DWORD PTR [rax]
    a42b:	68 24 00 00 00       	push   0x24
    a430:	00 00                	add    BYTE PTR [rax],al
    a432:	00 19                	add    BYTE PTR [rcx],bl
    a434:	00 00                	add    BYTE PTR [rax],al
    a436:	00 00                	add    BYTE PTR [rax],al
    a438:	00 00                	add    BYTE PTR [rax],al
    a43a:	00 52 0c             	add    BYTE PTR [rdx+0xc],dl
    a43d:	c2 50 00             	ret    0x50
    a440:	00 05 a2 73 00 00    	add    BYTE PTR [rip+0x73a2],al        # 117e8 <_end+0xb7d0>
    a446:	b2 1e                	mov    dl,0x1e
    a448:	00 00                	add    BYTE PTR [rax],al
    a44a:	b0 1e                	mov    al,0x1e
    a44c:	00 00                	add    BYTE PTR [rax],al
    a44e:	05 96 73 00 00       	add    eax,0x7396
    a453:	c5 1e 00             	(bad)
    a456:	00 c3                	add    bl,al
    a458:	1e                   	(bad)
    a459:	00 00                	add    BYTE PTR [rax],al
    a45b:	07                   	(bad)
    a45c:	81 24 00 00 00 00 00 	and    DWORD PTR [rax+rax*1],0x0
    a463:	00 00                	add    BYTE PTR [rax],al
    a465:	77 00                	ja     a467 <_end+0x444f>
    a467:	00 03                	add    BYTE PTR [rbx],al
    a469:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a46c:	03 08                	add    ecx,DWORD PTR [rax]
    a46e:	41 00 00             	add    BYTE PTR [r8],al
    a471:	00 00                	add    BYTE PTR [rax],al
    a473:	00 00                	add    BYTE PTR [rax],al
    a475:	03 01                	add    eax,DWORD PTR [rcx]
    a477:	54                   	push   rsp
    a478:	01 31                	add    DWORD PTR [rcx],esi
    a47a:	03 01                	add    eax,DWORD PTR [rcx]
    a47c:	51                   	push   rcx
    a47d:	01 49 03             	add    DWORD PTR [rcx+0x3],ecx
    a480:	01 52 02             	add    DWORD PTR [rdx+0x2],edx
    a483:	7d 00                	jge    a485 <_end+0x446d>
    a485:	00 00                	add    BYTE PTR [rax],al
    a487:	1e                   	(bad)
    a488:	6c                   	ins    BYTE PTR es:[rdi],dx
    a489:	73 00                	jae    a48b <_end+0x4473>
    a48b:	00 fd                	add    ch,bh
    a48d:	24 00                	and    al,0x0
    a48f:	00 00                	add    BYTE PTR [rax],al
    a491:	00 00                	add    BYTE PTR [rax],al
    a493:	00 01                	add    BYTE PTR [rcx],al
    a495:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    a498:	00 00                	add    BYTE PTR [rax],al
    a49a:	5b                   	pop    rbx
    a49b:	0b 15 51 00 00 05    	or     edx,DWORD PTR [rip+0x5000051]        # 500a4f2 <_end+0x50044da>
    a4a1:	7a 73                	jp     a516 <_end+0x44fe>
    a4a3:	00 00                	add    BYTE PTR [rax],al
    a4a5:	cf                   	iret
    a4a6:	1e                   	(bad)
    a4a7:	00 00                	add    BYTE PTR [rax],al
    a4a9:	cd 1e                	int    0x1e
    a4ab:	00 00                	add    BYTE PTR [rax],al
    a4ad:	07                   	(bad)
    a4ae:	1c 25                	sbb    al,0x25
    a4b0:	00 00                	add    BYTE PTR [rax],al
    a4b2:	00 00                	add    BYTE PTR [rax],al
    a4b4:	00 00                	add    BYTE PTR [rax],al
    a4b6:	e7 42                	out    0x42,eax
    a4b8:	00 00                	add    BYTE PTR [rax],al
    a4ba:	03 01                	add    eax,DWORD PTR [rcx]
    a4bc:	55                   	push   rbp
    a4bd:	01 32                	add    DWORD PTR [rdx],esi
    a4bf:	03 01                	add    eax,DWORD PTR [rcx]
    a4c1:	54                   	push   rsp
    a4c2:	09 03                	or     DWORD PTR [rbx],eax
    a4c4:	29 41 00             	sub    DWORD PTR [rcx+0x0],eax
    a4c7:	00 00                	add    BYTE PTR [rax],al
    a4c9:	00 00                	add    BYTE PTR [rax],al
    a4cb:	00 03                	add    BYTE PTR [rbx],al
    a4cd:	01 61 08             	add    DWORD PTR [rcx+0x8],esp
    a4d0:	76 90                	jbe    a462 <_end+0x444a>
    a4d2:	7f a6                	jg     a47a <_end+0x4462>
    a4d4:	04 35                	add    al,0x35
    a4d6:	a8 2e                	test   al,0x2e
    a4d8:	00 00                	add    BYTE PTR [rax],al
    a4da:	1e                   	(bad)
    a4db:	82                   	(bad)
    a4dc:	45 00 00             	add    BYTE PTR [r8],r8b
    a4df:	1c 25                	sbb    al,0x25
    a4e1:	00 00                	add    BYTE PTR [rax],al
    a4e3:	00 00                	add    BYTE PTR [rax],al
    a4e5:	00 00                	add    BYTE PTR [rax],al
    a4e7:	02 00                	add    al,BYTE PTR [rax]
    a4e9:	7c 02                	jl     a4ed <_end+0x44d5>
    a4eb:	00 00                	add    BYTE PTR [rax],al
    a4ed:	5c                   	pop    rsp
    a4ee:	45 be 51 00 00 05    	rex.RB mov r14d,0x5000051
    a4f4:	a1 45 00 00 e8 1e 00 	movabs eax,ds:0xe000001ee8000045
    a4fb:	00 e0 
    a4fd:	1e                   	(bad)
    a4fe:	00 00                	add    BYTE PTR [rax],al
    a500:	05 95 45 00 00       	add    eax,0x4595
    a505:	0d 1f 00 00 09       	or     eax,0x900001f
    a50a:	1f                   	(bad)
    a50b:	00 00                	add    BYTE PTR [rax],al
    a50d:	2e 7c 02             	cs jl  a512 <_end+0x44fa>
    a510:	00 00                	add    BYTE PTR [rax],al
    a512:	15 b6 45 00 00       	adc    eax,0x45b6
    a517:	30 1f                	xor    BYTE PTR [rdi],bl
    a519:	00 00                	add    BYTE PTR [rax],al
    a51b:	22 1f                	and    bl,BYTE PTR [rdi]
    a51d:	00 00                	add    BYTE PTR [rax],al
    a51f:	39 c1                	cmp    ecx,eax
    a521:	45 00 00             	add    BYTE PTR [r8],r8b
    a524:	87 02                	xchg   DWORD PTR [rdx],eax
    a526:	00 00                	add    BYTE PTR [rax],al
    a528:	8c 51 00             	mov    WORD PTR [rcx+0x0],ss
    a52b:	00 15 c2 45 00 00    	add    BYTE PTR [rip+0x45c2],dl        # eaf3 <_end+0x8adb>
    a531:	7d 1f                	jge    a552 <_end+0x453a>
    a533:	00 00                	add    BYTE PTR [rax],al
    a535:	71 1f                	jno    a556 <_end+0x453e>
    a537:	00 00                	add    BYTE PTR [rax],al
    a539:	4d cb                	rex.WRB retfq
    a53b:	45 00 00             	add    BYTE PTR [r8],r8b
    a53e:	97                   	xchg   edi,eax
    a53f:	02 00                	add    al,BYTE PTR [rax]
    a541:	00 15 cc 45 00 00    	add    BYTE PTR [rip+0x45cc],dl        # eb13 <_end+0x8afb>
    a547:	b3 1f                	mov    bl,0x1f
    a549:	00 00                	add    BYTE PTR [rax],al
    a54b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    a54c:	1f                   	(bad)
    a54d:	00 00                	add    BYTE PTR [rax],al
    a54f:	00 00                	add    BYTE PTR [rax],al
    a551:	38 b0 73 00 00 8b    	cmp    BYTE PTR [rax-0x74ffff8d],dh
    a557:	27                   	(bad)
	...
    a560:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    a563:	00 c0                	add    al,al
    a565:	1e                   	(bad)
    a566:	05 b9 73 00 00       	add    eax,0x73b9
    a56b:	f9                   	stc
    a56c:	1f                   	(bad)
    a56d:	00 00                	add    BYTE PTR [rax],al
    a56f:	f3 1f                	repz (bad)
    a571:	00 00                	add    BYTE PTR [rax],al
    a573:	24 09                	and    al,0x9
    a575:	28 00                	sub    BYTE PTR [rax],al
    a577:	00 00                	add    BYTE PTR [rax],al
    a579:	00 00                	add    BYTE PTR [rax],al
    a57b:	00 09                	add    BYTE PTR [rcx],cl
    a57d:	77 00                	ja     a57f <_end+0x4567>
    a57f:	00 00                	add    BYTE PTR [rax],al
    a581:	00 00                	add    BYTE PTR [rax],al
    a583:	1e                   	(bad)
    a584:	6c                   	ins    BYTE PTR es:[rdi],dx
    a585:	73 00                	jae    a587 <_end+0x456f>
    a587:	00 99 27 00 00 00    	add    BYTE PTR [rcx+0x27],bl
    a58d:	00 00                	add    BYTE PTR [rax],al
    a58f:	00 03                	add    BYTE PTR [rbx],al
    a591:	00 d0                	add    al,dl
    a593:	02 00                	add    al,BYTE PTR [rax]
    a595:	00 5c 0b 05          	add    BYTE PTR [rbx+rcx*1+0x5],bl
    a599:	52                   	push   rdx
    a59a:	00 00                	add    BYTE PTR [rax],al
    a59c:	05 7a 73 00 00       	add    eax,0x737a
    a5a1:	11 20                	adc    DWORD PTR [rax],esp
    a5a3:	00 00                	add    BYTE PTR [rax],al
    a5a5:	0f 20 00             	mov    rax,cr0
    a5a8:	00 07                	add    BYTE PTR [rdi],al
    a5aa:	b3 27                	mov    bl,0x27
    a5ac:	00 00                	add    BYTE PTR [rax],al
    a5ae:	00 00                	add    BYTE PTR [rax],al
    a5b0:	00 00                	add    BYTE PTR [rax],al
    a5b2:	e7 42                	out    0x42,eax
    a5b4:	00 00                	add    BYTE PTR [rax],al
    a5b6:	03 01                	add    eax,DWORD PTR [rcx]
    a5b8:	55                   	push   rbp
    a5b9:	01 32                	add    DWORD PTR [rdx],esi
    a5bb:	03 01                	add    eax,DWORD PTR [rcx]
    a5bd:	54                   	push   rsp
    a5be:	09 03                	or     DWORD PTR [rbx],eax
    a5c0:	43                   	rex.XB
    a5c1:	41 00 00             	add    BYTE PTR [r8],al
    a5c4:	00 00                	add    BYTE PTR [rax],al
    a5c6:	00 00                	add    BYTE PTR [rax],al
    a5c8:	00 00                	add    BYTE PTR [rax],al
    a5ca:	0a 24 24             	or     ah,BYTE PTR [rsp]
    a5cd:	00 00                	add    BYTE PTR [rax],al
    a5cf:	00 00                	add    BYTE PTR [rax],al
    a5d1:	00 00                	add    BYTE PTR [rax],al
    a5d3:	c8 42 00 00          	enter  0x42,0x0
    a5d7:	2b 52 00             	sub    edx,DWORD PTR [rdx+0x0]
    a5da:	00 03                	add    BYTE PTR [rbx],al
    a5dc:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a5df:	7c 00                	jl     a5e1 <_end+0x45c9>
    a5e1:	03 01                	add    eax,DWORD PTR [rcx]
    a5e3:	54                   	push   rsp
    a5e4:	03 a3 01 54 03 01    	add    esp,DWORD PTR [rbx+0x1035401]
    a5ea:	51                   	push   rcx
    a5eb:	03 a3 01 58 00 21    	add    esp,DWORD PTR [rbx+0x21005801]
    a5f1:	84 26                	test   BYTE PTR [rsi],ah
    a5f3:	00 00                	add    BYTE PTR [rax],al
    a5f5:	00 00                	add    BYTE PTR [rax],al
    a5f7:	00 00                	add    BYTE PTR [rax],al
    a5f9:	01 30                	add    DWORD PTR [rax],esi
    a5fb:	0a bb 27 00 00 00    	or     bh,BYTE PTR [rbx+0x27]
    a601:	00 00                	add    BYTE PTR [rax],al
    a603:	00 92 42 00 00 4e    	add    BYTE PTR [rdx+0x4e000042],dl
    a609:	52                   	push   rdx
    a60a:	00 00                	add    BYTE PTR [rax],al
    a60c:	03 01                	add    eax,DWORD PTR [rcx]
    a60e:	55                   	push   rbp
    a60f:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a613:	21 f3                	and    ebx,esi
    a615:	27                   	(bad)
    a616:	00 00                	add    BYTE PTR [rax],al
    a618:	00 00                	add    BYTE PTR [rax],al
    a61a:	00 00                	add    BYTE PTR [rax],al
    a61c:	01 30                	add    DWORD PTR [rax],esi
    a61e:	0a 2e                	or     ch,BYTE PTR [rsi]
    a620:	28 00                	sub    BYTE PTR [rax],al
    a622:	00 00                	add    BYTE PTR [rax],al
    a624:	00 00                	add    BYTE PTR [rax],al
    a626:	00 4d 44             	add    BYTE PTR [rbp+0x44],cl
    a629:	00 00                	add    BYTE PTR [rax],al
    a62b:	98                   	cwde
    a62c:	52                   	push   rdx
    a62d:	00 00                	add    BYTE PTR [rax],al
    a62f:	03 01                	add    eax,DWORD PTR [rcx]
    a631:	55                   	push   rbp
    a632:	09 03                	or     DWORD PTR [rbx],eax
    a634:	03 41 00             	add    eax,DWORD PTR [rcx+0x0]
    a637:	00 00                	add    BYTE PTR [rax],al
    a639:	00 00                	add    BYTE PTR [rax],al
    a63b:	00 03                	add    BYTE PTR [rbx],al
    a63d:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a641:	e7 40                	out    0x40,eax
    a643:	00 00                	add    BYTE PTR [rax],al
    a645:	00 00                	add    BYTE PTR [rax],al
    a647:	00 00                	add    BYTE PTR [rax],al
    a649:	03 01                	add    eax,DWORD PTR [rcx]
    a64b:	51                   	push   rcx
    a64c:	02 08                	add    cl,BYTE PTR [rax]
    a64e:	48 03 01             	add    rax,QWORD PTR [rcx]
    a651:	52                   	push   rdx
    a652:	09 03                	or     DWORD PTR [rbx],eax
    a654:	20 44 00 00          	and    BYTE PTR [rax+rax*1+0x0],al
    a658:	00 00                	add    BYTE PTR [rax],al
    a65a:	00 00                	add    BYTE PTR [rax],al
    a65c:	00 24 33             	add    BYTE PTR [rbx+rsi*1],ah
    a65f:	28 00                	sub    BYTE PTR [rax],al
    a661:	00 00                	add    BYTE PTR [rax],al
    a663:	00 00                	add    BYTE PTR [rax],al
    a665:	00 12                	add    BYTE PTR [rdx],dl
    a667:	77 00                	ja     a669 <_end+0x4651>
    a669:	00 00                	add    BYTE PTR [rax],al
    a66b:	26 ee                	es out dx,al
    a66d:	22 00                	and    al,BYTE PTR [rax]
    a66f:	00 b6 52 00 00 27    	add    BYTE PTR [rsi+0x27000052],dh
    a675:	8a 21                	mov    ah,BYTE PTR [rcx]
    a677:	00 00                	add    BYTE PTR [rax],al
    a679:	36 00 13             	ss add BYTE PTR [rbx],dl
    a67c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a67d:	52                   	push   rdx
    a67e:	00 00                	add    BYTE PTR [rax],al
    a680:	8e 01                	mov    es,WORD PTR [rcx]
    a682:	8d 13                	lea    edx,[rbx]
    a684:	00 00                	add    BYTE PTR [rax],al
    a686:	01 37                	add    DWORD PTR [rdi],esi
    a688:	06                   	(bad)
    a689:	25 23 00 00 01       	and    eax,0x1000023
    a68e:	15 53 00 00 1c       	adc    eax,0x1c000053
    a693:	3d 04 00 00 01       	cmp    eax,0x1000004
    a698:	37                   	(bad)
    a699:	12 57 40             	adc    dl,BYTE PTR [rdi+0x40]
    a69c:	00 00                	add    BYTE PTR [rax],al
    a69e:	1c ec                	sbb    al,0xec
    a6a0:	2e 00 00             	cs add BYTE PTR [rax],al
    a6a3:	01 37                	add    DWORD PTR [rdi],esi
    a6a5:	27                   	(bad)
    a6a6:	e9 41 00 00 1c       	jmp    1c00a6ec <_end+0x1c0046d4>
    a6ab:	6a 0d                	push   0xd
    a6ad:	00 00                	add    BYTE PTR [rax],al
    a6af:	01 37                	add    DWORD PTR [rdi],esi
    a6b1:	3b b5 41 00 00 1c    	cmp    esi,DWORD PTR [rbp+0x1c000041]
    a6b7:	5e                   	pop    rsi
    a6b8:	01 00                	add    DWORD PTR [rax],eax
    a6ba:	00 01                	add    BYTE PTR [rcx],al
    a6bc:	37                   	(bad)
    a6bd:	4f b0 2c             	rex.WRXB mov r8b,0x2c
    a6c0:	00 00                	add    BYTE PTR [rax],al
    a6c2:	1c 28                	sbb    al,0x28
    a6c4:	08 00                	or     BYTE PTR [rax],al
    a6c6:	00 01                	add    BYTE PTR [rcx],al
    a6c8:	37                   	(bad)
    a6c9:	65 b0 2c             	gs mov al,0x2c
    a6cc:	00 00                	add    BYTE PTR [rax],al
    a6ce:	17                   	(bad)
    a6cf:	61                   	(bad)
    a6d0:	2c 00                	sub    al,0x0
    a6d2:	00 42 0b             	add    BYTE PTR [rdx+0xb],al
    a6d5:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    a6d8:	00 00                	add    BYTE PTR [rax],al
    a6da:	4a cc                	rex.WX int3
    a6dc:	01 00                	add    DWORD PTR [rax],eax
    a6de:	00 11                	add    BYTE PTR [rcx],dl
    a6e0:	b2 01                	mov    dl,0x1
    a6e2:	00 00                	add    BYTE PTR [rax],al
    a6e4:	70 2d                	jo     a713 <_end+0x46fb>
    a6e6:	00 00                	add    BYTE PTR [rax],al
    a6e8:	00 00                	add    BYTE PTR [rax],al
    a6ea:	00 00                	add    BYTE PTR [rax],al
    a6ec:	ce                   	(bad)
    a6ed:	07                   	(bad)
    a6ee:	00 00                	add    BYTE PTR [rax],al
    a6f0:	00 00                	add    BYTE PTR [rax],al
    a6f2:	00 00                	add    BYTE PTR [rax],al
    a6f4:	01 9c ed 72 00 00 1d 	add    DWORD PTR [rbp+rbp*8+0x1d000072],ebx
    a6fb:	b8 0e 00 00 11       	mov    eax,0x1100000e
    a700:	1a d3                	sbb    dl,bl
    a702:	23 00                	and    eax,DWORD PTR [rax]
    a704:	00 2e                	add    BYTE PTR [rsi],ch
    a706:	20 00                	and    BYTE PTR [rax],al
    a708:	00 22                	add    BYTE PTR [rdx],ah
    a70a:	20 00                	and    BYTE PTR [rax],al
    a70c:	00 1d 5e 01 00 00    	add    BYTE PTR [rip+0x15e],bl        # a870 <_end+0x4858>
    a712:	11 2d b0 2c 00 00    	adc    DWORD PTR [rip+0x2cb0],ebp        # d3c8 <_end+0x73b0>
    a718:	72 20                	jb     a73a <_end+0x4722>
    a71a:	00 00                	add    BYTE PTR [rax],al
    a71c:	62                   	(bad)
    a71d:	20 00                	and    BYTE PTR [rax],al
    a71f:	00 1d 9a 02 00 00    	add    BYTE PTR [rip+0x29a],bl        # a9bf <_end+0x49a7>
    a725:	11 46 d3             	adc    DWORD PTR [rsi-0x2d],eax
    a728:	23 00                	and    eax,DWORD PTR [rax]
    a72a:	00 ca                	add    dl,cl
    a72c:	20 00                	and    BYTE PTR [rax],al
    a72e:	00 b4 20 00 00 1d 28 	add    BYTE PTR [rax+riz*1+0x281d0000],dh
    a735:	08 00                	or     BYTE PTR [rax],al
    a737:	00 11                	add    BYTE PTR [rcx],dl
    a739:	5a                   	pop    rdx
    a73a:	b0 2c                	mov    al,0x2c
    a73c:	00 00                	add    BYTE PTR [rax],al
    a73e:	30 21                	xor    BYTE PTR [rcx],ah
    a740:	00 00                	add    BYTE PTR [rax],al
    a742:	24 21                	and    al,0x21
    a744:	00 00                	add    BYTE PTR [rax],al
    a746:	4b d3 03             	rex.WXB rol QWORD PTR [r11],cl
    a749:	00 00                	add    BYTE PTR [rax],al
    a74b:	fd                   	std
    a74c:	72 00                	jb     a74e <_end+0x4736>
    a74e:	00 09                	add    BYTE PTR [rcx],cl
    a750:	03 d8                	add    ebx,eax
    a752:	44 00 00             	add    BYTE PTR [rax],r8b
    a755:	00 00                	add    BYTE PTR [rax],al
    a757:	00 00                	add    BYTE PTR [rax],al
    a759:	4c e9 0b 00 00 15    	rex.WR jmp 1500a76a <_end+0x15004752>
    a75f:	0c 2e                	or     al,0x2e
    a761:	23 00                	and    eax,DWORD PTR [rax]
    a763:	00 03                	add    BYTE PTR [rbx],al
    a765:	91                   	xchg   ecx,eax
    a766:	b0 7f                	mov    al,0x7f
    a768:	20 90 03 00 00 16    	and    BYTE PTR [rax+0x16000003],dl
    a76e:	0b e2                	or     esp,edx
    a770:	22 00                	and    al,BYTE PTR [rax]
    a772:	00 6b 21             	add    BYTE PTR [rbx+0x21],ch
    a775:	00 00                	add    BYTE PTR [rax],al
    a777:	61                   	(bad)
    a778:	21 00                	and    DWORD PTR [rax],eax
    a77a:	00 20                	add    BYTE PTR [rax],ah
    a77c:	13 05 00 00 18 0e    	adc    eax,DWORD PTR [rip+0xe180000]        # e18a782 <_end+0xe18476a>
    a782:	b0 2c                	mov    al,0x2c
    a784:	00 00                	add    BYTE PTR [rax],al
    a786:	9b                   	fwait
    a787:	21 00                	and    DWORD PTR [rax],eax
    a789:	00 93 21 00 00 20    	add    BYTE PTR [rbx+0x20000021],dl
    a78f:	6a 0d                	push   0xd
    a791:	00 00                	add    BYTE PTR [rax],al
    a793:	1a 0e                	sbb    cl,BYTE PTR [rsi]
    a795:	b5 41                	mov    ch,0x41
    a797:	00 00                	add    BYTE PTR [rax],al
    a799:	da 21                	fisub  DWORD PTR [rcx]
    a79b:	00 00                	add    BYTE PTR [rax],al
    a79d:	ba 21 00 00 16       	mov    edx,0x16000021
    a7a2:	e0 2e                	loopne a7d2 <_end+0x47ba>
    a7a4:	00 00                	add    BYTE PTR [rax],al
    a7a6:	00 00                	add    BYTE PTR [rax],al
    a7a8:	00 00                	add    BYTE PTR [rax],al
    a7aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    a7ab:	00 00                	add    BYTE PTR [rax],al
    a7ad:	00 00                	add    BYTE PTR [rax],al
    a7af:	00 00                	add    BYTE PTR [rax],al
    a7b1:	00 f5                	add    ch,dh
    a7b3:	55                   	push   rbp
    a7b4:	00 00                	add    BYTE PTR [rax],al
    a7b6:	17                   	(bad)
    a7b7:	19 16                	sbb    DWORD PTR [rsi],edx
    a7b9:	00 00                	add    BYTE PTR [rax],al
    a7bb:	1d 34 e9 41 00       	sbb    eax,0x41e934
    a7c0:	00 09                	add    BYTE PTR [rcx],cl
    a7c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    a7c3:	73 00                	jae    a7c5 <_end+0x47ad>
    a7c5:	00 e0                	add    al,ah
    a7c7:	2e 00 00             	cs add BYTE PTR [rax],al
    a7ca:	00 00                	add    BYTE PTR [rax],al
    a7cc:	00 00                	add    BYTE PTR [rax],al
    a7ce:	01 00                	add    DWORD PTR [rax],eax
    a7d0:	e0 2e                	loopne a800 <_end+0x47e8>
    a7d2:	00 00                	add    BYTE PTR [rax],al
    a7d4:	00 00                	add    BYTE PTR [rax],al
    a7d6:	00 00                	add    BYTE PTR [rax],al
    a7d8:	0f 00 00             	sldt   WORD PTR [rax]
    a7db:	00 00                	add    BYTE PTR [rax],al
    a7dd:	00 00                	add    BYTE PTR [rax],al
    a7df:	00 1d 34 4a 54 00    	add    BYTE PTR [rip+0x544a34],bl        # 54f219 <_end+0x549201>
    a7e5:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 11b65 <_end+0xbb4d>
    a7eb:	b6 22                	mov    dh,0x22
    a7ed:	00 00                	add    BYTE PTR [rax],al
    a7ef:	b4 22                	mov    ah,0x22
    a7f1:	00 00                	add    BYTE PTR [rax],al
    a7f3:	07                   	(bad)
    a7f4:	ef                   	out    dx,eax
    a7f5:	2e 00 00             	cs add BYTE PTR [rax],al
    a7f8:	00 00                	add    BYTE PTR [rax],al
    a7fa:	00 00                	add    BYTE PTR [rax],al
    a7fc:	40 77 00             	rex ja a7ff <_end+0x47e7>
    a7ff:	00 03                	add    BYTE PTR [rbx],al
    a801:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a804:	03 18                	add    ebx,DWORD PTR [rax]
    a806:	45 00 00             	add    BYTE PTR [r8],r8b
    a809:	00 00                	add    BYTE PTR [rax],al
    a80b:	00 00                	add    BYTE PTR [rax],al
    a80d:	00 00                	add    BYTE PTR [rax],al
    a80f:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    a813:	00 ef                	add    bh,ch
    a815:	2e 00 00             	cs add BYTE PTR [rax],al
    a818:	00 00                	add    BYTE PTR [rax],al
    a81a:	00 00                	add    BYTE PTR [rax],al
    a81c:	02 00                	add    al,BYTE PTR [rax]
    a81e:	ef                   	out    dx,eax
    a81f:	2e 00 00             	cs add BYTE PTR [rax],al
    a822:	00 00                	add    BYTE PTR [rax],al
    a824:	00 00                	add    BYTE PTR [rax],al
    a826:	0c 00                	or     al,0x0
    a828:	00 00                	add    BYTE PTR [rax],al
    a82a:	00 00                	add    BYTE PTR [rax],al
    a82c:	00 00                	add    BYTE PTR [rax],al
    a82e:	1d 34 98 54 00       	sbb    eax,0x549834
    a833:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 11bb3 <_end+0xbb9b>
    a839:	c5 22 00             	(bad)
    a83c:	00 c3                	add    bl,al
    a83e:	22 00                	and    al,BYTE PTR [rax]
    a840:	00 07                	add    BYTE PTR [rdi],al
    a842:	fb                   	sti
    a843:	2e 00 00             	cs add BYTE PTR [rax],al
    a846:	00 00                	add    BYTE PTR [rax],al
    a848:	00 00                	add    BYTE PTR [rax],al
    a84a:	40 77 00             	rex ja a84d <_end+0x4835>
    a84d:	00 03                	add    BYTE PTR [rbx],al
    a84f:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a852:	03 ec                	add    ebp,esp
    a854:	41 00 00             	add    BYTE PTR [r8],al
    a857:	00 00                	add    BYTE PTR [rax],al
    a859:	00 00                	add    BYTE PTR [rax],al
    a85b:	00 00                	add    BYTE PTR [rax],al
    a85d:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    a861:	00 fb                	add    bl,bh
    a863:	2e 00 00             	cs add BYTE PTR [rax],al
    a866:	00 00                	add    BYTE PTR [rax],al
    a868:	00 00                	add    BYTE PTR [rax],al
    a86a:	02 00                	add    al,BYTE PTR [rax]
    a86c:	fb                   	sti
    a86d:	2e 00 00             	cs add BYTE PTR [rax],al
    a870:	00 00                	add    BYTE PTR [rax],al
    a872:	00 00                	add    BYTE PTR [rax],al
    a874:	0c 00                	or     al,0x0
    a876:	00 00                	add    BYTE PTR [rax],al
    a878:	00 00                	add    BYTE PTR [rax],al
    a87a:	00 00                	add    BYTE PTR [rax],al
    a87c:	1d 34 e6 54 00       	sbb    eax,0x54e634
    a881:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 11c01 <_end+0xbbe9>
    a887:	d4                   	(bad)
    a888:	22 00                	and    al,BYTE PTR [rax]
    a88a:	00 d2                	add    dl,dl
    a88c:	22 00                	and    al,BYTE PTR [rax]
    a88e:	00 07                	add    BYTE PTR [rdi],al
    a890:	07                   	(bad)
    a891:	2f                   	(bad)
    a892:	00 00                	add    BYTE PTR [rax],al
    a894:	00 00                	add    BYTE PTR [rax],al
    a896:	00 00                	add    BYTE PTR [rax],al
    a898:	40 77 00             	rex ja a89b <_end+0x4883>
    a89b:	00 03                	add    BYTE PTR [rbx],al
    a89d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a8a0:	03 38                	add    edi,DWORD PTR [rax]
    a8a2:	45 00 00             	add    BYTE PTR [r8],r8b
    a8a5:	00 00                	add    BYTE PTR [rax],al
    a8a7:	00 00                	add    BYTE PTR [rax],al
    a8a9:	00 00                	add    BYTE PTR [rax],al
    a8ab:	09 bb 52 00 00 07    	or     DWORD PTR [rbx+0x7000052],edi
    a8b1:	2f                   	(bad)
    a8b2:	00 00                	add    BYTE PTR [rax],al
    a8b4:	00 00                	add    BYTE PTR [rax],al
    a8b6:	00 00                	add    BYTE PTR [rax],al
    a8b8:	03 00                	add    eax,DWORD PTR [rax]
    a8ba:	07                   	(bad)
    a8bb:	2f                   	(bad)
    a8bc:	00 00                	add    BYTE PTR [rax],al
    a8be:	00 00                	add    BYTE PTR [rax],al
    a8c0:	00 00                	add    BYTE PTR [rax],al
    a8c2:	3b 00                	cmp    eax,DWORD PTR [rax]
    a8c4:	00 00                	add    BYTE PTR [rax],al
    a8c6:	00 00                	add    BYTE PTR [rax],al
    a8c8:	00 00                	add    BYTE PTR [rax],al
    a8ca:	1d 34 a9 55 00       	sbb    eax,0x55a934
    a8cf:	00 05 fd 52 00 00    	add    BYTE PTR [rip+0x52fd],al        # fbd2 <_end+0x9bba>
    a8d5:	e3 22                	jrcxz  a8f9 <_end+0x48e1>
    a8d7:	00 00                	add    BYTE PTR [rax],al
    a8d9:	e1 22                	loope  a8fd <_end+0x48e5>
    a8db:	00 00                	add    BYTE PTR [rax],al
    a8dd:	05 f1 52 00 00       	add    eax,0x52f1
    a8e2:	ef                   	out    dx,eax
    a8e3:	22 00                	and    al,BYTE PTR [rax]
    a8e5:	00 ed                	add    ch,ch
    a8e7:	22 00                	and    al,BYTE PTR [rax]
    a8e9:	00 0b                	add    BYTE PTR [rbx],cl
    a8eb:	e5 52                	in     eax,0x52
    a8ed:	00 00                	add    BYTE PTR [rax],al
    a8ef:	0b d9                	or     ebx,ecx
    a8f1:	52                   	push   rdx
    a8f2:	00 00                	add    BYTE PTR [rax],al
    a8f4:	0b cd                	or     ecx,ebp
    a8f6:	52                   	push   rdx
    a8f7:	00 00                	add    BYTE PTR [rax],al
    a8f9:	15 09 53 00 00       	adc    eax,0x5309
    a8fe:	fb                   	sti
    a8ff:	22 00                	and    al,BYTE PTR [rax]
    a901:	00 f7                	add    bh,dh
    a903:	22 00                	and    al,BYTE PTR [rax]
    a905:	00 0a                	add    BYTE PTR [rdx],cl
    a907:	1a 2f                	sbb    ch,BYTE PTR [rdi]
    a909:	00 00                	add    BYTE PTR [rax],al
    a90b:	00 00                	add    BYTE PTR [rax],al
    a90d:	00 00                	add    BYTE PTR [rax],al
    a90f:	ff                   	(bad)
    a910:	3c 00                	cmp    al,0x0
    a912:	00 6d 55             	add    BYTE PTR [rbp+0x55],ch
    a915:	00 00                	add    BYTE PTR [rax],al
    a917:	03 01                	add    eax,DWORD PTR [rcx]
    a919:	55                   	push   rbp
    a91a:	09 03                	or     DWORD PTR [rbx],eax
    a91c:	58                   	pop    rax
    a91d:	45 00 00             	add    BYTE PTR [r8],r8b
    a920:	00 00                	add    BYTE PTR [rax],al
    a922:	00 00                	add    BYTE PTR [rax],al
    a924:	03 01                	add    eax,DWORD PTR [rcx]
    a926:	54                   	push   rsp
    a927:	09 03                	or     DWORD PTR [rbx],eax
    a929:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    a92c:	00 00                	add    BYTE PTR [rax],al
    a92e:	00 00                	add    BYTE PTR [rax],al
    a930:	00 00                	add    BYTE PTR [rax],al
    a932:	0a 3a                	or     bh,BYTE PTR [rdx]
    a934:	2f                   	(bad)
    a935:	00 00                	add    BYTE PTR [rax],al
    a937:	00 00                	add    BYTE PTR [rax],al
    a939:	00 00                	add    BYTE PTR [rax],al
    a93b:	5b                   	pop    rbx
    a93c:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    a93f:	94                   	xchg   esp,eax
    a940:	55                   	push   rbp
    a941:	00 00                	add    BYTE PTR [rax],al
    a943:	03 01                	add    eax,DWORD PTR [rcx]
    a945:	55                   	push   rbp
    a946:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    a949:	03 01                	add    eax,DWORD PTR [rcx]
    a94b:	58                   	pop    rax
    a94c:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    a94f:	03 01                	add    eax,DWORD PTR [rcx]
    a951:	59                   	pop    rcx
    a952:	05 91 9c 7f 94       	add    eax,0x947f9c91
    a957:	04 00                	add    al,0x0
    a959:	07                   	(bad)
    a95a:	42 2f                	rex.X (bad)
    a95c:	00 00                	add    BYTE PTR [rax],al
    a95e:	00 00                	add    BYTE PTR [rax],al
    a960:	00 00                	add    BYTE PTR [rax],al
    a962:	4d 3c 00             	rex.WRB cmp al,0x0
    a965:	00 03                	add    BYTE PTR [rbx],al
    a967:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a96a:	7f 00                	jg     a96c <_end+0x4954>
    a96c:	00 00                	add    BYTE PTR [rax],al
    a96e:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    a972:	00 42 2f             	add    BYTE PTR [rdx+0x2f],al
    a975:	00 00                	add    BYTE PTR [rax],al
    a977:	00 00                	add    BYTE PTR [rax],al
    a979:	00 00                	add    BYTE PTR [rax],al
    a97b:	02 00                	add    al,BYTE PTR [rax]
    a97d:	42 2f                	rex.X (bad)
    a97f:	00 00                	add    BYTE PTR [rax],al
    a981:	00 00                	add    BYTE PTR [rax],al
    a983:	00 00                	add    BYTE PTR [rax],al
    a985:	0c 00                	or     al,0x0
    a987:	00 00                	add    BYTE PTR [rax],al
    a989:	00 00                	add    BYTE PTR [rax],al
    a98b:	00 00                	add    BYTE PTR [rax],al
    a98d:	01 1d 34 05 7a 73    	add    DWORD PTR [rip+0x737a0534],ebx        # 737aaec7 <_end+0x737a4eaf>
    a993:	00 00                	add    BYTE PTR [rax],al
    a995:	0c 23                	or     al,0x23
    a997:	00 00                	add    BYTE PTR [rax],al
    a999:	0a 23                	or     ah,BYTE PTR [rbx]
    a99b:	00 00                	add    BYTE PTR [rax],al
    a99d:	07                   	(bad)
    a99e:	4e 2f                	rex.WRX (bad)
    a9a0:	00 00                	add    BYTE PTR [rax],al
    a9a2:	00 00                	add    BYTE PTR [rax],al
    a9a4:	00 00                	add    BYTE PTR [rax],al
    a9a6:	40 77 00             	rex ja a9a9 <_end+0x4991>
    a9a9:	00 03                	add    BYTE PTR [rbx],al
    a9ab:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a9ae:	03 80 45 00 00 00    	add    eax,DWORD PTR [rax+0x45]
    a9b4:	00 00                	add    BYTE PTR [rax],al
    a9b6:	00 00                	add    BYTE PTR [rax],al
    a9b8:	00 00                	add    BYTE PTR [rax],al
    a9ba:	16                   	(bad)
    a9bb:	88 34 00             	mov    BYTE PTR [rax+rax*1],dh
    a9be:	00 00                	add    BYTE PTR [rax],al
    a9c0:	00 00                	add    BYTE PTR [rax],al
    a9c2:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    a9c5:	00 00                	add    BYTE PTR [rax],al
    a9c7:	00 00                	add    BYTE PTR [rax],al
    a9c9:	00 00                	add    BYTE PTR [rax],al
    a9cb:	0e                   	(bad)
    a9cc:	58                   	pop    rax
    a9cd:	00 00                	add    BYTE PTR [rax],al
    a9cf:	17                   	(bad)
    a9d0:	15 16 00 00 1e       	adc    eax,0x1e000016
    a9d5:	34 e9                	xor    al,0xe9
    a9d7:	41 00 00             	add    BYTE PTR [r8],al
    a9da:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    a9de:	00 88 34 00 00 00    	add    BYTE PTR [rax+0x34],cl
    a9e4:	00 00                	add    BYTE PTR [rax],al
    a9e6:	00 02                	add    BYTE PTR [rdx],al
    a9e8:	00 88 34 00 00 00    	add    BYTE PTR [rax+0x34],cl
    a9ee:	00 00                	add    BYTE PTR [rax],al
    a9f0:	00 0f                	add    BYTE PTR [rdi],cl
    a9f2:	00 00                	add    BYTE PTR [rax],al
    a9f4:	00 00                	add    BYTE PTR [rax],al
    a9f6:	00 00                	add    BYTE PTR [rax],al
    a9f8:	00 1e                	add    BYTE PTR [rsi],bl
    a9fa:	34 63                	xor    al,0x63
    a9fc:	56                   	push   rsi
    a9fd:	00 00                	add    BYTE PTR [rax],al
    a9ff:	05 7a 73 00 00       	add    eax,0x737a
    aa04:	1b 23                	sbb    esp,DWORD PTR [rbx]
    aa06:	00 00                	add    BYTE PTR [rax],al
    aa08:	19 23                	sbb    DWORD PTR [rbx],esp
    aa0a:	00 00                	add    BYTE PTR [rax],al
    aa0c:	07                   	(bad)
    aa0d:	97                   	xchg   edi,eax
    aa0e:	34 00                	xor    al,0x0
    aa10:	00 00                	add    BYTE PTR [rax],al
    aa12:	00 00                	add    BYTE PTR [rax],al
    aa14:	00 40 77             	add    BYTE PTR [rax+0x77],al
    aa17:	00 00                	add    BYTE PTR [rax],al
    aa19:	03 01                	add    eax,DWORD PTR [rcx]
    aa1b:	55                   	push   rbp
    aa1c:	09 03                	or     DWORD PTR [rbx],eax
    aa1e:	18 45 00             	sbb    BYTE PTR [rbp+0x0],al
    aa21:	00 00                	add    BYTE PTR [rax],al
    aa23:	00 00                	add    BYTE PTR [rax],al
    aa25:	00 00                	add    BYTE PTR [rax],al
    aa27:	00 09                	add    BYTE PTR [rcx],cl
    aa29:	6c                   	ins    BYTE PTR es:[rdi],dx
    aa2a:	73 00                	jae    aa2c <_end+0x4a14>
    aa2c:	00 97 34 00 00 00    	add    BYTE PTR [rdi+0x34],dl
    aa32:	00 00                	add    BYTE PTR [rax],al
    aa34:	00 02                	add    BYTE PTR [rdx],al
    aa36:	00 97 34 00 00 00    	add    BYTE PTR [rdi+0x34],dl
    aa3c:	00 00                	add    BYTE PTR [rax],al
    aa3e:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    aa41:	00 00                	add    BYTE PTR [rax],al
    aa43:	00 00                	add    BYTE PTR [rax],al
    aa45:	00 00                	add    BYTE PTR [rax],al
    aa47:	1e                   	(bad)
    aa48:	34 b1                	xor    al,0xb1
    aa4a:	56                   	push   rsi
    aa4b:	00 00                	add    BYTE PTR [rax],al
    aa4d:	05 7a 73 00 00       	add    eax,0x737a
    aa52:	2a 23                	sub    ah,BYTE PTR [rbx]
    aa54:	00 00                	add    BYTE PTR [rax],al
    aa56:	28 23                	sub    BYTE PTR [rbx],ah
    aa58:	00 00                	add    BYTE PTR [rax],al
    aa5a:	07                   	(bad)
    aa5b:	a3 34 00 00 00 00 00 	movabs ds:0x4000000000000034,eax
    aa62:	00 40 
    aa64:	77 00                	ja     aa66 <_end+0x4a4e>
    aa66:	00 03                	add    BYTE PTR [rbx],al
    aa68:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    aa6b:	03 e8                	add    ebp,eax
    aa6d:	41 00 00             	add    BYTE PTR [r8],al
    aa70:	00 00                	add    BYTE PTR [rax],al
    aa72:	00 00                	add    BYTE PTR [rax],al
    aa74:	00 00                	add    BYTE PTR [rax],al
    aa76:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    aa7a:	00 a3 34 00 00 00    	add    BYTE PTR [rbx+0x34],ah
    aa80:	00 00                	add    BYTE PTR [rax],al
    aa82:	00 02                	add    BYTE PTR [rdx],al
    aa84:	00 a3 34 00 00 00    	add    BYTE PTR [rbx+0x34],ah
    aa8a:	00 00                	add    BYTE PTR [rax],al
    aa8c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    aa8f:	00 00                	add    BYTE PTR [rax],al
    aa91:	00 00                	add    BYTE PTR [rax],al
    aa93:	00 00                	add    BYTE PTR [rax],al
    aa95:	1e                   	(bad)
    aa96:	34 ff                	xor    al,0xff
    aa98:	56                   	push   rsi
    aa99:	00 00                	add    BYTE PTR [rax],al
    aa9b:	05 7a 73 00 00       	add    eax,0x737a
    aaa0:	39 23                	cmp    DWORD PTR [rbx],esp
    aaa2:	00 00                	add    BYTE PTR [rax],al
    aaa4:	37                   	(bad)
    aaa5:	23 00                	and    eax,DWORD PTR [rax]
    aaa7:	00 07                	add    BYTE PTR [rdi],al
    aaa9:	af                   	scas   eax,DWORD PTR es:[rdi]
    aaaa:	34 00                	xor    al,0x0
    aaac:	00 00                	add    BYTE PTR [rax],al
    aaae:	00 00                	add    BYTE PTR [rax],al
    aab0:	00 40 77             	add    BYTE PTR [rax+0x77],al
    aab3:	00 00                	add    BYTE PTR [rax],al
    aab5:	03 01                	add    eax,DWORD PTR [rcx]
    aab7:	55                   	push   rbp
    aab8:	09 03                	or     DWORD PTR [rbx],eax
    aaba:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    aabd:	00 00                	add    BYTE PTR [rax],al
    aabf:	00 00                	add    BYTE PTR [rax],al
    aac1:	00 00                	add    BYTE PTR [rax],al
    aac3:	00 09                	add    BYTE PTR [rcx],cl
    aac5:	bb 52 00 00 af       	mov    ebx,0xaf000052
    aaca:	34 00                	xor    al,0x0
    aacc:	00 00                	add    BYTE PTR [rax],al
    aace:	00 00                	add    BYTE PTR [rax],al
    aad0:	00 03                	add    BYTE PTR [rbx],al
    aad2:	00 af 34 00 00 00    	add    BYTE PTR [rdi+0x34],ch
    aad8:	00 00                	add    BYTE PTR [rax],al
    aada:	00 3b                	add    BYTE PTR [rbx],bh
    aadc:	00 00                	add    BYTE PTR [rax],al
    aade:	00 00                	add    BYTE PTR [rax],al
    aae0:	00 00                	add    BYTE PTR [rax],al
    aae2:	00 1e                	add    BYTE PTR [rsi],bl
    aae4:	34 c2                	xor    al,0xc2
    aae6:	57                   	push   rdi
    aae7:	00 00                	add    BYTE PTR [rax],al
    aae9:	05 fd 52 00 00       	add    eax,0x52fd
    aaee:	48 23 00             	and    rax,QWORD PTR [rax]
    aaf1:	00 46 23             	add    BYTE PTR [rsi+0x23],al
    aaf4:	00 00                	add    BYTE PTR [rax],al
    aaf6:	05 f1 52 00 00       	add    eax,0x52f1
    aafb:	54                   	push   rsp
    aafc:	23 00                	and    eax,DWORD PTR [rax]
    aafe:	00 52 23             	add    BYTE PTR [rdx+0x23],dl
    ab01:	00 00                	add    BYTE PTR [rax],al
    ab03:	0b e5                	or     esp,ebp
    ab05:	52                   	push   rdx
    ab06:	00 00                	add    BYTE PTR [rax],al
    ab08:	0b d9                	or     ebx,ecx
    ab0a:	52                   	push   rdx
    ab0b:	00 00                	add    BYTE PTR [rax],al
    ab0d:	0b cd                	or     ecx,ebp
    ab0f:	52                   	push   rdx
    ab10:	00 00                	add    BYTE PTR [rax],al
    ab12:	15 09 53 00 00       	adc    eax,0x5309
    ab17:	60                   	(bad)
    ab18:	23 00                	and    eax,DWORD PTR [rax]
    ab1a:	00 5c 23 00          	add    BYTE PTR [rbx+riz*1+0x0],bl
    ab1e:	00 0a                	add    BYTE PTR [rdx],cl
    ab20:	c2 34 00             	ret    0x34
    ab23:	00 00                	add    BYTE PTR [rax],al
    ab25:	00 00                	add    BYTE PTR [rax],al
    ab27:	00 ff                	add    bh,bh
    ab29:	3c 00                	cmp    al,0x0
    ab2b:	00 86 57 00 00 03    	add    BYTE PTR [rsi+0x3000057],al
    ab31:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ab34:	03 a0 45 00 00 00    	add    esp,DWORD PTR [rax+0x45]
    ab3a:	00 00                	add    BYTE PTR [rax],al
    ab3c:	00 03                	add    BYTE PTR [rbx],al
    ab3e:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    ab42:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    ab45:	00 00                	add    BYTE PTR [rax],al
    ab47:	00 00                	add    BYTE PTR [rax],al
    ab49:	00 00                	add    BYTE PTR [rax],al
    ab4b:	0a e2                	or     ah,dl
    ab4d:	34 00                	xor    al,0x0
    ab4f:	00 00                	add    BYTE PTR [rax],al
    ab51:	00 00                	add    BYTE PTR [rax],al
    ab53:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    ab56:	00 00                	add    BYTE PTR [rax],al
    ab58:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    ab59:	57                   	push   rdi
    ab5a:	00 00                	add    BYTE PTR [rax],al
    ab5c:	03 01                	add    eax,DWORD PTR [rcx]
    ab5e:	55                   	push   rbp
    ab5f:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ab62:	03 01                	add    eax,DWORD PTR [rcx]
    ab64:	58                   	pop    rax
    ab65:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ab68:	03 01                	add    eax,DWORD PTR [rcx]
    ab6a:	59                   	pop    rcx
    ab6b:	05 91 9c 7f 94       	add    eax,0x947f9c91
    ab70:	04 00                	add    al,0x0
    ab72:	07                   	(bad)
    ab73:	ea                   	(bad)
    ab74:	34 00                	xor    al,0x0
    ab76:	00 00                	add    BYTE PTR [rax],al
    ab78:	00 00                	add    BYTE PTR [rax],al
    ab7a:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    ab7d:	00 00                	add    BYTE PTR [rax],al
    ab7f:	03 01                	add    eax,DWORD PTR [rcx]
    ab81:	55                   	push   rbp
    ab82:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ab85:	00 00                	add    BYTE PTR [rax],al
    ab87:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    ab8b:	00 ea                	add    dl,ch
    ab8d:	34 00                	xor    al,0x0
    ab8f:	00 00                	add    BYTE PTR [rax],al
    ab91:	00 00                	add    BYTE PTR [rax],al
    ab93:	00 02                	add    BYTE PTR [rdx],al
    ab95:	00 ea                	add    dl,ch
    ab97:	34 00                	xor    al,0x0
    ab99:	00 00                	add    BYTE PTR [rax],al
    ab9b:	00 00                	add    BYTE PTR [rax],al
    ab9d:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    aba0:	00 00                	add    BYTE PTR [rax],al
    aba2:	00 00                	add    BYTE PTR [rax],al
    aba4:	00 00                	add    BYTE PTR [rax],al
    aba6:	01 1e                	add    DWORD PTR [rsi],ebx
    aba8:	34 05                	xor    al,0x5
    abaa:	7a 73                	jp     ac1f <_end+0x4c07>
    abac:	00 00                	add    BYTE PTR [rax],al
    abae:	71 23                	jno    abd3 <_end+0x4bbb>
    abb0:	00 00                	add    BYTE PTR [rax],al
    abb2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    abb3:	23 00                	and    eax,DWORD PTR [rax]
    abb5:	00 07                	add    BYTE PTR [rdi],al
    abb7:	f6 34 00             	div    BYTE PTR [rax+rax*1]
    abba:	00 00                	add    BYTE PTR [rax],al
    abbc:	00 00                	add    BYTE PTR [rax],al
    abbe:	00 40 77             	add    BYTE PTR [rax+0x77],al
    abc1:	00 00                	add    BYTE PTR [rax],al
    abc3:	03 01                	add    eax,DWORD PTR [rcx]
    abc5:	55                   	push   rbp
    abc6:	09 03                	or     DWORD PTR [rbx],eax
    abc8:	80 45 00 00          	add    BYTE PTR [rbp+0x0],0x0
    abcc:	00 00                	add    BYTE PTR [rax],al
    abce:	00 00                	add    BYTE PTR [rax],al
    abd0:	00 00                	add    BYTE PTR [rax],al
    abd2:	00 16                	add    BYTE PTR [rsi],dl
    abd4:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
    abd7:	00 00                	add    BYTE PTR [rax],al
    abd9:	00 00                	add    BYTE PTR [rax],al
    abdb:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    abde:	00 00                	add    BYTE PTR [rax],al
    abe0:	00 00                	add    BYTE PTR [rax],al
    abe2:	00 00                	add    BYTE PTR [rax],al
    abe4:	27                   	(bad)
    abe5:	5a                   	pop    rdx
    abe6:	00 00                	add    BYTE PTR [rax],al
    abe8:	17                   	(bad)
    abe9:	6b 1e 00             	imul   ebx,DWORD PTR [rsi],0x0
    abec:	00 1f                	add    BYTE PTR [rdi],bl
    abee:	34 e9                	xor    al,0xe9
    abf0:	41 00 00             	add    BYTE PTR [r8],al
    abf3:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    abf7:	00 10                	add    BYTE PTR [rax],dl
    abf9:	34 00                	xor    al,0x0
    abfb:	00 00                	add    BYTE PTR [rax],al
    abfd:	00 00                	add    BYTE PTR [rax],al
    abff:	00 02                	add    BYTE PTR [rdx],al
    ac01:	00 10                	add    BYTE PTR [rax],dl
    ac03:	34 00                	xor    al,0x0
    ac05:	00 00                	add    BYTE PTR [rax],al
    ac07:	00 00                	add    BYTE PTR [rax],al
    ac09:	00 0f                	add    BYTE PTR [rdi],cl
    ac0b:	00 00                	add    BYTE PTR [rax],al
    ac0d:	00 00                	add    BYTE PTR [rax],al
    ac0f:	00 00                	add    BYTE PTR [rax],al
    ac11:	00 1f                	add    BYTE PTR [rdi],bl
    ac13:	34 7c                	xor    al,0x7c
    ac15:	58                   	pop    rax
    ac16:	00 00                	add    BYTE PTR [rax],al
    ac18:	05 7a 73 00 00       	add    eax,0x737a
    ac1d:	80 23 00             	and    BYTE PTR [rbx],0x0
    ac20:	00 7e 23             	add    BYTE PTR [rsi+0x23],bh
    ac23:	00 00                	add    BYTE PTR [rax],al
    ac25:	07                   	(bad)
    ac26:	1f                   	(bad)
    ac27:	34 00                	xor    al,0x0
    ac29:	00 00                	add    BYTE PTR [rax],al
    ac2b:	00 00                	add    BYTE PTR [rax],al
    ac2d:	00 40 77             	add    BYTE PTR [rax+0x77],al
    ac30:	00 00                	add    BYTE PTR [rax],al
    ac32:	03 01                	add    eax,DWORD PTR [rcx]
    ac34:	55                   	push   rbp
    ac35:	09 03                	or     DWORD PTR [rbx],eax
    ac37:	18 45 00             	sbb    BYTE PTR [rbp+0x0],al
    ac3a:	00 00                	add    BYTE PTR [rax],al
    ac3c:	00 00                	add    BYTE PTR [rax],al
    ac3e:	00 00                	add    BYTE PTR [rax],al
    ac40:	00 09                	add    BYTE PTR [rcx],cl
    ac42:	6c                   	ins    BYTE PTR es:[rdi],dx
    ac43:	73 00                	jae    ac45 <_end+0x4c2d>
    ac45:	00 1f                	add    BYTE PTR [rdi],bl
    ac47:	34 00                	xor    al,0x0
    ac49:	00 00                	add    BYTE PTR [rax],al
    ac4b:	00 00                	add    BYTE PTR [rax],al
    ac4d:	00 02                	add    BYTE PTR [rdx],al
    ac4f:	00 1f                	add    BYTE PTR [rdi],bl
    ac51:	34 00                	xor    al,0x0
    ac53:	00 00                	add    BYTE PTR [rax],al
    ac55:	00 00                	add    BYTE PTR [rax],al
    ac57:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ac5a:	00 00                	add    BYTE PTR [rax],al
    ac5c:	00 00                	add    BYTE PTR [rax],al
    ac5e:	00 00                	add    BYTE PTR [rax],al
    ac60:	1f                   	(bad)
    ac61:	34 ca                	xor    al,0xca
    ac63:	58                   	pop    rax
    ac64:	00 00                	add    BYTE PTR [rax],al
    ac66:	05 7a 73 00 00       	add    eax,0x737a
    ac6b:	8f                   	(bad)
    ac6c:	23 00                	and    eax,DWORD PTR [rax]
    ac6e:	00 8d 23 00 00 07    	add    BYTE PTR [rbp+0x7000023],cl
    ac74:	2b 34 00             	sub    esi,DWORD PTR [rax+rax*1]
    ac77:	00 00                	add    BYTE PTR [rax],al
    ac79:	00 00                	add    BYTE PTR [rax],al
    ac7b:	00 40 77             	add    BYTE PTR [rax+0x77],al
    ac7e:	00 00                	add    BYTE PTR [rax],al
    ac80:	03 01                	add    eax,DWORD PTR [rcx]
    ac82:	55                   	push   rbp
    ac83:	09 03                	or     DWORD PTR [rbx],eax
    ac85:	fa                   	cli
    ac86:	41 00 00             	add    BYTE PTR [r8],al
    ac89:	00 00                	add    BYTE PTR [rax],al
    ac8b:	00 00                	add    BYTE PTR [rax],al
    ac8d:	00 00                	add    BYTE PTR [rax],al
    ac8f:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    ac93:	00 2b                	add    BYTE PTR [rbx],ch
    ac95:	34 00                	xor    al,0x0
    ac97:	00 00                	add    BYTE PTR [rax],al
    ac99:	00 00                	add    BYTE PTR [rax],al
    ac9b:	00 02                	add    BYTE PTR [rdx],al
    ac9d:	00 2b                	add    BYTE PTR [rbx],ch
    ac9f:	34 00                	xor    al,0x0
    aca1:	00 00                	add    BYTE PTR [rax],al
    aca3:	00 00                	add    BYTE PTR [rax],al
    aca5:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    aca8:	00 00                	add    BYTE PTR [rax],al
    acaa:	00 00                	add    BYTE PTR [rax],al
    acac:	00 00                	add    BYTE PTR [rax],al
    acae:	1f                   	(bad)
    acaf:	34 18                	xor    al,0x18
    acb1:	59                   	pop    rcx
    acb2:	00 00                	add    BYTE PTR [rax],al
    acb4:	05 7a 73 00 00       	add    eax,0x737a
    acb9:	9e                   	sahf
    acba:	23 00                	and    eax,DWORD PTR [rax]
    acbc:	00 9c 23 00 00 07 37 	add    BYTE PTR [rbx+riz*1+0x37070000],bl
    acc3:	34 00                	xor    al,0x0
    acc5:	00 00                	add    BYTE PTR [rax],al
    acc7:	00 00                	add    BYTE PTR [rax],al
    acc9:	00 40 77             	add    BYTE PTR [rax+0x77],al
    accc:	00 00                	add    BYTE PTR [rax],al
    acce:	03 01                	add    eax,DWORD PTR [rcx]
    acd0:	55                   	push   rbp
    acd1:	09 03                	or     DWORD PTR [rbx],eax
    acd3:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    acd6:	00 00                	add    BYTE PTR [rax],al
    acd8:	00 00                	add    BYTE PTR [rax],al
    acda:	00 00                	add    BYTE PTR [rax],al
    acdc:	00 09                	add    BYTE PTR [rcx],cl
    acde:	bb 52 00 00 37       	mov    ebx,0x37000052
    ace3:	34 00                	xor    al,0x0
    ace5:	00 00                	add    BYTE PTR [rax],al
    ace7:	00 00                	add    BYTE PTR [rax],al
    ace9:	00 03                	add    BYTE PTR [rbx],al
    aceb:	00 37                	add    BYTE PTR [rdi],dh
    aced:	34 00                	xor    al,0x0
    acef:	00 00                	add    BYTE PTR [rax],al
    acf1:	00 00                	add    BYTE PTR [rax],al
    acf3:	00 3b                	add    BYTE PTR [rbx],bh
    acf5:	00 00                	add    BYTE PTR [rax],al
    acf7:	00 00                	add    BYTE PTR [rax],al
    acf9:	00 00                	add    BYTE PTR [rax],al
    acfb:	00 1f                	add    BYTE PTR [rdi],bl
    acfd:	34 db                	xor    al,0xdb
    acff:	59                   	pop    rcx
    ad00:	00 00                	add    BYTE PTR [rax],al
    ad02:	05 fd 52 00 00       	add    eax,0x52fd
    ad07:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    ad08:	23 00                	and    eax,DWORD PTR [rax]
    ad0a:	00 ab 23 00 00 05    	add    BYTE PTR [rbx+0x5000023],ch
    ad10:	f1                   	int1
    ad11:	52                   	push   rdx
    ad12:	00 00                	add    BYTE PTR [rax],al
    ad14:	b9 23 00 00 b7       	mov    ecx,0xb7000023
    ad19:	23 00                	and    eax,DWORD PTR [rax]
    ad1b:	00 0b                	add    BYTE PTR [rbx],cl
    ad1d:	e5 52                	in     eax,0x52
    ad1f:	00 00                	add    BYTE PTR [rax],al
    ad21:	0b d9                	or     ebx,ecx
    ad23:	52                   	push   rdx
    ad24:	00 00                	add    BYTE PTR [rax],al
    ad26:	0b cd                	or     ecx,ebp
    ad28:	52                   	push   rdx
    ad29:	00 00                	add    BYTE PTR [rax],al
    ad2b:	15 09 53 00 00       	adc    eax,0x5309
    ad30:	c5 23 00             	(bad)
    ad33:	00 c1                	add    cl,al
    ad35:	23 00                	and    eax,DWORD PTR [rax]
    ad37:	00 0a                	add    BYTE PTR [rdx],cl
    ad39:	4a 34 00             	rex.WX xor al,0x0
    ad3c:	00 00                	add    BYTE PTR [rax],al
    ad3e:	00 00                	add    BYTE PTR [rax],al
    ad40:	00 ff                	add    bh,bh
    ad42:	3c 00                	cmp    al,0x0
    ad44:	00 9f 59 00 00 03    	add    BYTE PTR [rdi+0x3000059],bl
    ad4a:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ad4d:	03 d0                	add    edx,eax
    ad4f:	45 00 00             	add    BYTE PTR [r8],r8b
    ad52:	00 00                	add    BYTE PTR [rax],al
    ad54:	00 00                	add    BYTE PTR [rax],al
    ad56:	03 01                	add    eax,DWORD PTR [rcx]
    ad58:	54                   	push   rsp
    ad59:	09 03                	or     DWORD PTR [rbx],eax
    ad5b:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    ad5e:	00 00                	add    BYTE PTR [rax],al
    ad60:	00 00                	add    BYTE PTR [rax],al
    ad62:	00 00                	add    BYTE PTR [rax],al
    ad64:	0a 6a 34             	or     ch,BYTE PTR [rdx+0x34]
    ad67:	00 00                	add    BYTE PTR [rax],al
    ad69:	00 00                	add    BYTE PTR [rax],al
    ad6b:	00 00                	add    BYTE PTR [rax],al
    ad6d:	5b                   	pop    rbx
    ad6e:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    ad71:	c6                   	(bad)
    ad72:	59                   	pop    rcx
    ad73:	00 00                	add    BYTE PTR [rax],al
    ad75:	03 01                	add    eax,DWORD PTR [rcx]
    ad77:	55                   	push   rbp
    ad78:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ad7b:	03 01                	add    eax,DWORD PTR [rcx]
    ad7d:	58                   	pop    rax
    ad7e:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ad81:	03 01                	add    eax,DWORD PTR [rcx]
    ad83:	59                   	pop    rcx
    ad84:	05 91 9c 7f 94       	add    eax,0x947f9c91
    ad89:	04 00                	add    al,0x0
    ad8b:	07                   	(bad)
    ad8c:	72 34                	jb     adc2 <_end+0x4daa>
    ad8e:	00 00                	add    BYTE PTR [rax],al
    ad90:	00 00                	add    BYTE PTR [rax],al
    ad92:	00 00                	add    BYTE PTR [rax],al
    ad94:	4d 3c 00             	rex.WRB cmp al,0x0
    ad97:	00 03                	add    BYTE PTR [rbx],al
    ad99:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ad9c:	7f 00                	jg     ad9e <_end+0x4d86>
    ad9e:	00 00                	add    BYTE PTR [rax],al
    ada0:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    ada4:	00 72 34             	add    BYTE PTR [rdx+0x34],dh
    ada7:	00 00                	add    BYTE PTR [rax],al
    ada9:	00 00                	add    BYTE PTR [rax],al
    adab:	00 00                	add    BYTE PTR [rax],al
    adad:	02 00                	add    al,BYTE PTR [rax]
    adaf:	72 34                	jb     ade5 <_end+0x4dcd>
    adb1:	00 00                	add    BYTE PTR [rax],al
    adb3:	00 00                	add    BYTE PTR [rax],al
    adb5:	00 00                	add    BYTE PTR [rax],al
    adb7:	0c 00                	or     al,0x0
    adb9:	00 00                	add    BYTE PTR [rax],al
    adbb:	00 00                	add    BYTE PTR [rax],al
    adbd:	00 00                	add    BYTE PTR [rax],al
    adbf:	01 1f                	add    DWORD PTR [rdi],ebx
    adc1:	34 05                	xor    al,0x5
    adc3:	7a 73                	jp     ae38 <_end+0x4e20>
    adc5:	00 00                	add    BYTE PTR [rax],al
    adc7:	d6                   	(bad)
    adc8:	23 00                	and    eax,DWORD PTR [rax]
    adca:	00 d4                	add    ah,dl
    adcc:	23 00                	and    eax,DWORD PTR [rax]
    adce:	00 07                	add    BYTE PTR [rdi],al
    add0:	7e 34                	jle    ae06 <_end+0x4dee>
    add2:	00 00                	add    BYTE PTR [rax],al
    add4:	00 00                	add    BYTE PTR [rax],al
    add6:	00 00                	add    BYTE PTR [rax],al
    add8:	40 77 00             	rex ja addb <_end+0x4dc3>
    addb:	00 03                	add    BYTE PTR [rbx],al
    addd:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ade0:	03 80 45 00 00 00    	add    eax,DWORD PTR [rax+0x45]
    ade6:	00 00                	add    BYTE PTR [rax],al
    ade8:	00 00                	add    BYTE PTR [rax],al
    adea:	00 00                	add    BYTE PTR [rax],al
    adec:	16                   	(bad)
    aded:	98                   	cwde
    adee:	33 00                	xor    eax,DWORD PTR [rax]
    adf0:	00 00                	add    BYTE PTR [rax],al
    adf2:	00 00                	add    BYTE PTR [rax],al
    adf4:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    adf7:	00 00                	add    BYTE PTR [rax],al
    adf9:	00 00                	add    BYTE PTR [rax],al
    adfb:	00 00                	add    BYTE PTR [rax],al
    adfd:	40 5c                	rex pop rsp
    adff:	00 00                	add    BYTE PTR [rax],al
    ae01:	17                   	(bad)
    ae02:	ae                   	scas   al,BYTE PTR es:[rdi]
    ae03:	0d 00 00 20 34       	or     eax,0x34200000
    ae08:	e9 41 00 00 09       	jmp    900ae4e <_end+0x9004e36>
    ae0d:	6c                   	ins    BYTE PTR es:[rdi],dx
    ae0e:	73 00                	jae    ae10 <_end+0x4df8>
    ae10:	00 98 33 00 00 00    	add    BYTE PTR [rax+0x33],bl
    ae16:	00 00                	add    BYTE PTR [rax],al
    ae18:	00 02                	add    BYTE PTR [rdx],al
    ae1a:	00 98 33 00 00 00    	add    BYTE PTR [rax+0x33],bl
    ae20:	00 00                	add    BYTE PTR [rax],al
    ae22:	00 0f                	add    BYTE PTR [rdi],cl
    ae24:	00 00                	add    BYTE PTR [rax],al
    ae26:	00 00                	add    BYTE PTR [rax],al
    ae28:	00 00                	add    BYTE PTR [rax],al
    ae2a:	00 20                	add    BYTE PTR [rax],ah
    ae2c:	34 95                	xor    al,0x95
    ae2e:	5a                   	pop    rdx
    ae2f:	00 00                	add    BYTE PTR [rax],al
    ae31:	05 7a 73 00 00       	add    eax,0x737a
    ae36:	e5 23                	in     eax,0x23
    ae38:	00 00                	add    BYTE PTR [rax],al
    ae3a:	e3 23                	jrcxz  ae5f <_end+0x4e47>
    ae3c:	00 00                	add    BYTE PTR [rax],al
    ae3e:	07                   	(bad)
    ae3f:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    ae40:	33 00                	xor    eax,DWORD PTR [rax]
    ae42:	00 00                	add    BYTE PTR [rax],al
    ae44:	00 00                	add    BYTE PTR [rax],al
    ae46:	00 40 77             	add    BYTE PTR [rax+0x77],al
    ae49:	00 00                	add    BYTE PTR [rax],al
    ae4b:	03 01                	add    eax,DWORD PTR [rcx]
    ae4d:	55                   	push   rbp
    ae4e:	09 03                	or     DWORD PTR [rbx],eax
    ae50:	18 45 00             	sbb    BYTE PTR [rbp+0x0],al
    ae53:	00 00                	add    BYTE PTR [rax],al
    ae55:	00 00                	add    BYTE PTR [rax],al
    ae57:	00 00                	add    BYTE PTR [rax],al
    ae59:	00 09                	add    BYTE PTR [rcx],cl
    ae5b:	6c                   	ins    BYTE PTR es:[rdi],dx
    ae5c:	73 00                	jae    ae5e <_end+0x4e46>
    ae5e:	00 a7 33 00 00 00    	add    BYTE PTR [rdi+0x33],ah
    ae64:	00 00                	add    BYTE PTR [rax],al
    ae66:	00 02                	add    BYTE PTR [rdx],al
    ae68:	00 a7 33 00 00 00    	add    BYTE PTR [rdi+0x33],ah
    ae6e:	00 00                	add    BYTE PTR [rax],al
    ae70:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ae73:	00 00                	add    BYTE PTR [rax],al
    ae75:	00 00                	add    BYTE PTR [rax],al
    ae77:	00 00                	add    BYTE PTR [rax],al
    ae79:	20 34 e3             	and    BYTE PTR [rbx+riz*8],dh
    ae7c:	5a                   	pop    rdx
    ae7d:	00 00                	add    BYTE PTR [rax],al
    ae7f:	05 7a 73 00 00       	add    eax,0x737a
    ae84:	f4                   	hlt
    ae85:	23 00                	and    eax,DWORD PTR [rax]
    ae87:	00 f2                	add    dl,dh
    ae89:	23 00                	and    eax,DWORD PTR [rax]
    ae8b:	00 07                	add    BYTE PTR [rdi],al
    ae8d:	b3 33                	mov    bl,0x33
    ae8f:	00 00                	add    BYTE PTR [rax],al
    ae91:	00 00                	add    BYTE PTR [rax],al
    ae93:	00 00                	add    BYTE PTR [rax],al
    ae95:	40 77 00             	rex ja ae98 <_end+0x4e80>
    ae98:	00 03                	add    BYTE PTR [rbx],al
    ae9a:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ae9d:	03 02                	add    eax,DWORD PTR [rdx]
    ae9f:	42 00 00             	rex.X add BYTE PTR [rax],al
    aea2:	00 00                	add    BYTE PTR [rax],al
    aea4:	00 00                	add    BYTE PTR [rax],al
    aea6:	00 00                	add    BYTE PTR [rax],al
    aea8:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    aeac:	00 b3 33 00 00 00    	add    BYTE PTR [rbx+0x33],dh
    aeb2:	00 00                	add    BYTE PTR [rax],al
    aeb4:	00 02                	add    BYTE PTR [rdx],al
    aeb6:	00 b3 33 00 00 00    	add    BYTE PTR [rbx+0x33],dh
    aebc:	00 00                	add    BYTE PTR [rax],al
    aebe:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    aec1:	00 00                	add    BYTE PTR [rax],al
    aec3:	00 00                	add    BYTE PTR [rax],al
    aec5:	00 00                	add    BYTE PTR [rax],al
    aec7:	20 34 31             	and    BYTE PTR [rcx+rsi*1],dh
    aeca:	5b                   	pop    rbx
    aecb:	00 00                	add    BYTE PTR [rax],al
    aecd:	05 7a 73 00 00       	add    eax,0x737a
    aed2:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    aed5:	00 01                	add    BYTE PTR [rcx],al
    aed7:	24 00                	and    al,0x0
    aed9:	00 07                	add    BYTE PTR [rdi],al
    aedb:	bf 33 00 00 00       	mov    edi,0x33
    aee0:	00 00                	add    BYTE PTR [rax],al
    aee2:	00 40 77             	add    BYTE PTR [rax+0x77],al
    aee5:	00 00                	add    BYTE PTR [rax],al
    aee7:	03 01                	add    eax,DWORD PTR [rcx]
    aee9:	55                   	push   rbp
    aeea:	09 03                	or     DWORD PTR [rbx],eax
    aeec:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    aeef:	00 00                	add    BYTE PTR [rax],al
    aef1:	00 00                	add    BYTE PTR [rax],al
    aef3:	00 00                	add    BYTE PTR [rax],al
    aef5:	00 09                	add    BYTE PTR [rcx],cl
    aef7:	bb 52 00 00 bf       	mov    ebx,0xbf000052
    aefc:	33 00                	xor    eax,DWORD PTR [rax]
    aefe:	00 00                	add    BYTE PTR [rax],al
    af00:	00 00                	add    BYTE PTR [rax],al
    af02:	00 03                	add    BYTE PTR [rbx],al
    af04:	00 bf 33 00 00 00    	add    BYTE PTR [rdi+0x33],bh
    af0a:	00 00                	add    BYTE PTR [rax],al
    af0c:	00 3b                	add    BYTE PTR [rbx],bh
    af0e:	00 00                	add    BYTE PTR [rax],al
    af10:	00 00                	add    BYTE PTR [rax],al
    af12:	00 00                	add    BYTE PTR [rax],al
    af14:	00 20                	add    BYTE PTR [rax],ah
    af16:	34 f4                	xor    al,0xf4
    af18:	5b                   	pop    rbx
    af19:	00 00                	add    BYTE PTR [rax],al
    af1b:	05 fd 52 00 00       	add    eax,0x52fd
    af20:	12 24 00             	adc    ah,BYTE PTR [rax+rax*1]
    af23:	00 10                	add    BYTE PTR [rax],dl
    af25:	24 00                	and    al,0x0
    af27:	00 05 f1 52 00 00    	add    BYTE PTR [rip+0x52f1],al        # 1021e <_end+0xa206>
    af2d:	1e                   	(bad)
    af2e:	24 00                	and    al,0x0
    af30:	00 1c 24             	add    BYTE PTR [rsp],bl
    af33:	00 00                	add    BYTE PTR [rax],al
    af35:	0b e5                	or     esp,ebp
    af37:	52                   	push   rdx
    af38:	00 00                	add    BYTE PTR [rax],al
    af3a:	0b d9                	or     ebx,ecx
    af3c:	52                   	push   rdx
    af3d:	00 00                	add    BYTE PTR [rax],al
    af3f:	0b cd                	or     ecx,ebp
    af41:	52                   	push   rdx
    af42:	00 00                	add    BYTE PTR [rax],al
    af44:	15 09 53 00 00       	adc    eax,0x5309
    af49:	2a 24 00             	sub    ah,BYTE PTR [rax+rax*1]
    af4c:	00 26                	add    BYTE PTR [rsi],ah
    af4e:	24 00                	and    al,0x0
    af50:	00 0a                	add    BYTE PTR [rdx],cl
    af52:	d2 33                	shl    BYTE PTR [rbx],cl
    af54:	00 00                	add    BYTE PTR [rax],al
    af56:	00 00                	add    BYTE PTR [rax],al
    af58:	00 00                	add    BYTE PTR [rax],al
    af5a:	ff                   	(bad)
    af5b:	3c 00                	cmp    al,0x0
    af5d:	00 b8 5b 00 00 03    	add    BYTE PTR [rax+0x300005b],bh
    af63:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    af66:	03 06                	add    eax,DWORD PTR [rsi]
    af68:	42 00 00             	rex.X add BYTE PTR [rax],al
    af6b:	00 00                	add    BYTE PTR [rax],al
    af6d:	00 00                	add    BYTE PTR [rax],al
    af6f:	03 01                	add    eax,DWORD PTR [rcx]
    af71:	54                   	push   rsp
    af72:	09 03                	or     DWORD PTR [rbx],eax
    af74:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    af77:	00 00                	add    BYTE PTR [rax],al
    af79:	00 00                	add    BYTE PTR [rax],al
    af7b:	00 00                	add    BYTE PTR [rax],al
    af7d:	0a f2                	or     dh,dl
    af7f:	33 00                	xor    eax,DWORD PTR [rax]
    af81:	00 00                	add    BYTE PTR [rax],al
    af83:	00 00                	add    BYTE PTR [rax],al
    af85:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    af88:	00 00                	add    BYTE PTR [rax],al
    af8a:	df 5b 00             	fistp  WORD PTR [rbx+0x0]
    af8d:	00 03                	add    BYTE PTR [rbx],al
    af8f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    af92:	7f 00                	jg     af94 <_end+0x4f7c>
    af94:	03 01                	add    eax,DWORD PTR [rcx]
    af96:	58                   	pop    rax
    af97:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    af9a:	03 01                	add    eax,DWORD PTR [rcx]
    af9c:	59                   	pop    rcx
    af9d:	05 91 9c 7f 94       	add    eax,0x947f9c91
    afa2:	04 00                	add    al,0x0
    afa4:	07                   	(bad)
    afa5:	fa                   	cli
    afa6:	33 00                	xor    eax,DWORD PTR [rax]
    afa8:	00 00                	add    BYTE PTR [rax],al
    afaa:	00 00                	add    BYTE PTR [rax],al
    afac:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    afaf:	00 00                	add    BYTE PTR [rax],al
    afb1:	03 01                	add    eax,DWORD PTR [rcx]
    afb3:	55                   	push   rbp
    afb4:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    afb7:	00 00                	add    BYTE PTR [rax],al
    afb9:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    afbd:	00 fa                	add    dl,bh
    afbf:	33 00                	xor    eax,DWORD PTR [rax]
    afc1:	00 00                	add    BYTE PTR [rax],al
    afc3:	00 00                	add    BYTE PTR [rax],al
    afc5:	00 02                	add    BYTE PTR [rdx],al
    afc7:	00 fa                	add    dl,bh
    afc9:	33 00                	xor    eax,DWORD PTR [rax]
    afcb:	00 00                	add    BYTE PTR [rax],al
    afcd:	00 00                	add    BYTE PTR [rax],al
    afcf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    afd2:	00 00                	add    BYTE PTR [rax],al
    afd4:	00 00                	add    BYTE PTR [rax],al
    afd6:	00 00                	add    BYTE PTR [rax],al
    afd8:	01 20                	add    DWORD PTR [rax],esp
    afda:	34 05                	xor    al,0x5
    afdc:	7a 73                	jp     b051 <_end+0x5039>
    afde:	00 00                	add    BYTE PTR [rax],al
    afe0:	3b 24 00             	cmp    esp,DWORD PTR [rax+rax*1]
    afe3:	00 39                	add    BYTE PTR [rcx],bh
    afe5:	24 00                	and    al,0x0
    afe7:	00 07                	add    BYTE PTR [rdi],al
    afe9:	06                   	(bad)
    afea:	34 00                	xor    al,0x0
    afec:	00 00                	add    BYTE PTR [rax],al
    afee:	00 00                	add    BYTE PTR [rax],al
    aff0:	00 40 77             	add    BYTE PTR [rax+0x77],al
    aff3:	00 00                	add    BYTE PTR [rax],al
    aff5:	03 01                	add    eax,DWORD PTR [rcx]
    aff7:	55                   	push   rbp
    aff8:	09 03                	or     DWORD PTR [rbx],eax
    affa:	80 45 00 00          	add    BYTE PTR [rbp+0x0],0x0
    affe:	00 00                	add    BYTE PTR [rax],al
    b000:	00 00                	add    BYTE PTR [rax],al
    b002:	00 00                	add    BYTE PTR [rax],al
    b004:	00 16                	add    BYTE PTR [rsi],dl
    b006:	20 33                	and    BYTE PTR [rbx],dh
    b008:	00 00                	add    BYTE PTR [rax],al
    b00a:	00 00                	add    BYTE PTR [rax],al
    b00c:	00 00                	add    BYTE PTR [rax],al
    b00e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    b00f:	00 00                	add    BYTE PTR [rax],al
    b011:	00 00                	add    BYTE PTR [rax],al
    b013:	00 00                	add    BYTE PTR [rax],al
    b015:	00 59 5e             	add    BYTE PTR [rcx+0x5e],bl
    b018:	00 00                	add    BYTE PTR [rax],al
    b01a:	17                   	(bad)
    b01b:	64 34 00             	fs xor al,0x0
    b01e:	00 21                	add    BYTE PTR [rcx],ah
    b020:	34 e9                	xor    al,0xe9
    b022:	41 00 00             	add    BYTE PTR [r8],al
    b025:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b029:	00 20                	add    BYTE PTR [rax],ah
    b02b:	33 00                	xor    eax,DWORD PTR [rax]
    b02d:	00 00                	add    BYTE PTR [rax],al
    b02f:	00 00                	add    BYTE PTR [rax],al
    b031:	00 02                	add    BYTE PTR [rdx],al
    b033:	00 20                	add    BYTE PTR [rax],ah
    b035:	33 00                	xor    eax,DWORD PTR [rax]
    b037:	00 00                	add    BYTE PTR [rax],al
    b039:	00 00                	add    BYTE PTR [rax],al
    b03b:	00 0f                	add    BYTE PTR [rdi],cl
    b03d:	00 00                	add    BYTE PTR [rax],al
    b03f:	00 00                	add    BYTE PTR [rax],al
    b041:	00 00                	add    BYTE PTR [rax],al
    b043:	00 21                	add    BYTE PTR [rcx],ah
    b045:	34 ae                	xor    al,0xae
    b047:	5c                   	pop    rsp
    b048:	00 00                	add    BYTE PTR [rax],al
    b04a:	05 7a 73 00 00       	add    eax,0x737a
    b04f:	4a 24 00             	rex.WX and al,0x0
    b052:	00 48 24             	add    BYTE PTR [rax+0x24],cl
    b055:	00 00                	add    BYTE PTR [rax],al
    b057:	07                   	(bad)
    b058:	2f                   	(bad)
    b059:	33 00                	xor    eax,DWORD PTR [rax]
    b05b:	00 00                	add    BYTE PTR [rax],al
    b05d:	00 00                	add    BYTE PTR [rax],al
    b05f:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b062:	00 00                	add    BYTE PTR [rax],al
    b064:	03 01                	add    eax,DWORD PTR [rcx]
    b066:	55                   	push   rbp
    b067:	09 03                	or     DWORD PTR [rbx],eax
    b069:	18 45 00             	sbb    BYTE PTR [rbp+0x0],al
    b06c:	00 00                	add    BYTE PTR [rax],al
    b06e:	00 00                	add    BYTE PTR [rax],al
    b070:	00 00                	add    BYTE PTR [rax],al
    b072:	00 09                	add    BYTE PTR [rcx],cl
    b074:	6c                   	ins    BYTE PTR es:[rdi],dx
    b075:	73 00                	jae    b077 <_end+0x505f>
    b077:	00 2f                	add    BYTE PTR [rdi],ch
    b079:	33 00                	xor    eax,DWORD PTR [rax]
    b07b:	00 00                	add    BYTE PTR [rax],al
    b07d:	00 00                	add    BYTE PTR [rax],al
    b07f:	00 02                	add    BYTE PTR [rdx],al
    b081:	00 2f                	add    BYTE PTR [rdi],ch
    b083:	33 00                	xor    eax,DWORD PTR [rax]
    b085:	00 00                	add    BYTE PTR [rax],al
    b087:	00 00                	add    BYTE PTR [rax],al
    b089:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b08c:	00 00                	add    BYTE PTR [rax],al
    b08e:	00 00                	add    BYTE PTR [rax],al
    b090:	00 00                	add    BYTE PTR [rax],al
    b092:	21 34 fc             	and    DWORD PTR [rsp+rdi*8],esi
    b095:	5c                   	pop    rsp
    b096:	00 00                	add    BYTE PTR [rax],al
    b098:	05 7a 73 00 00       	add    eax,0x737a
    b09d:	59                   	pop    rcx
    b09e:	24 00                	and    al,0x0
    b0a0:	00 57 24             	add    BYTE PTR [rdi+0x24],dl
    b0a3:	00 00                	add    BYTE PTR [rax],al
    b0a5:	07                   	(bad)
    b0a6:	3b 33                	cmp    esi,DWORD PTR [rbx]
    b0a8:	00 00                	add    BYTE PTR [rax],al
    b0aa:	00 00                	add    BYTE PTR [rax],al
    b0ac:	00 00                	add    BYTE PTR [rax],al
    b0ae:	40 77 00             	rex ja b0b1 <_end+0x5099>
    b0b1:	00 03                	add    BYTE PTR [rbx],al
    b0b3:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b0b6:	03 23                	add    esp,DWORD PTR [rbx]
    b0b8:	42 00 00             	rex.X add BYTE PTR [rax],al
    b0bb:	00 00                	add    BYTE PTR [rax],al
    b0bd:	00 00                	add    BYTE PTR [rax],al
    b0bf:	00 00                	add    BYTE PTR [rax],al
    b0c1:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b0c5:	00 3b                	add    BYTE PTR [rbx],bh
    b0c7:	33 00                	xor    eax,DWORD PTR [rax]
    b0c9:	00 00                	add    BYTE PTR [rax],al
    b0cb:	00 00                	add    BYTE PTR [rax],al
    b0cd:	00 02                	add    BYTE PTR [rdx],al
    b0cf:	00 3b                	add    BYTE PTR [rbx],bh
    b0d1:	33 00                	xor    eax,DWORD PTR [rax]
    b0d3:	00 00                	add    BYTE PTR [rax],al
    b0d5:	00 00                	add    BYTE PTR [rax],al
    b0d7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b0da:	00 00                	add    BYTE PTR [rax],al
    b0dc:	00 00                	add    BYTE PTR [rax],al
    b0de:	00 00                	add    BYTE PTR [rax],al
    b0e0:	21 34 4a             	and    DWORD PTR [rdx+rcx*2],esi
    b0e3:	5d                   	pop    rbp
    b0e4:	00 00                	add    BYTE PTR [rax],al
    b0e6:	05 7a 73 00 00       	add    eax,0x737a
    b0eb:	68 24 00 00 66       	push   0x66000024
    b0f0:	24 00                	and    al,0x0
    b0f2:	00 07                	add    BYTE PTR [rdi],al
    b0f4:	47 33 00             	rex.RXB xor r8d,DWORD PTR [r8]
    b0f7:	00 00                	add    BYTE PTR [rax],al
    b0f9:	00 00                	add    BYTE PTR [rax],al
    b0fb:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b0fe:	00 00                	add    BYTE PTR [rax],al
    b100:	03 01                	add    eax,DWORD PTR [rcx]
    b102:	55                   	push   rbp
    b103:	09 03                	or     DWORD PTR [rbx],eax
    b105:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    b108:	00 00                	add    BYTE PTR [rax],al
    b10a:	00 00                	add    BYTE PTR [rax],al
    b10c:	00 00                	add    BYTE PTR [rax],al
    b10e:	00 09                	add    BYTE PTR [rcx],cl
    b110:	bb 52 00 00 47       	mov    ebx,0x47000052
    b115:	33 00                	xor    eax,DWORD PTR [rax]
    b117:	00 00                	add    BYTE PTR [rax],al
    b119:	00 00                	add    BYTE PTR [rax],al
    b11b:	00 03                	add    BYTE PTR [rbx],al
    b11d:	00 47 33             	add    BYTE PTR [rdi+0x33],al
    b120:	00 00                	add    BYTE PTR [rax],al
    b122:	00 00                	add    BYTE PTR [rax],al
    b124:	00 00                	add    BYTE PTR [rax],al
    b126:	3b 00                	cmp    eax,DWORD PTR [rax]
    b128:	00 00                	add    BYTE PTR [rax],al
    b12a:	00 00                	add    BYTE PTR [rax],al
    b12c:	00 00                	add    BYTE PTR [rax],al
    b12e:	21 34 0d 5e 00 00 05 	and    DWORD PTR [rcx*1+0x500005e],esi
    b135:	fd                   	std
    b136:	52                   	push   rdx
    b137:	00 00                	add    BYTE PTR [rax],al
    b139:	77 24                	ja     b15f <_end+0x5147>
    b13b:	00 00                	add    BYTE PTR [rax],al
    b13d:	75 24                	jne    b163 <_end+0x514b>
    b13f:	00 00                	add    BYTE PTR [rax],al
    b141:	05 f1 52 00 00       	add    eax,0x52f1
    b146:	83 24 00 00          	and    DWORD PTR [rax+rax*1],0x0
    b14a:	81 24 00 00 0b e5 52 	and    DWORD PTR [rax+rax*1],0x52e50b00
    b151:	00 00                	add    BYTE PTR [rax],al
    b153:	0b d9                	or     ebx,ecx
    b155:	52                   	push   rdx
    b156:	00 00                	add    BYTE PTR [rax],al
    b158:	0b cd                	or     ecx,ebp
    b15a:	52                   	push   rdx
    b15b:	00 00                	add    BYTE PTR [rax],al
    b15d:	15 09 53 00 00       	adc    eax,0x5309
    b162:	8f                   	(bad)
    b163:	24 00                	and    al,0x0
    b165:	00 8b 24 00 00 0a    	add    BYTE PTR [rbx+0xa000024],cl
    b16b:	5a                   	pop    rdx
    b16c:	33 00                	xor    eax,DWORD PTR [rax]
    b16e:	00 00                	add    BYTE PTR [rax],al
    b170:	00 00                	add    BYTE PTR [rax],al
    b172:	00 ff                	add    bh,bh
    b174:	3c 00                	cmp    al,0x0
    b176:	00 d1                	add    cl,dl
    b178:	5d                   	pop    rbp
    b179:	00 00                	add    BYTE PTR [rax],al
    b17b:	03 01                	add    eax,DWORD PTR [rcx]
    b17d:	55                   	push   rbp
    b17e:	09 03                	or     DWORD PTR [rbx],eax
    b180:	f8                   	clc
    b181:	45 00 00             	add    BYTE PTR [r8],r8b
    b184:	00 00                	add    BYTE PTR [rax],al
    b186:	00 00                	add    BYTE PTR [rax],al
    b188:	03 01                	add    eax,DWORD PTR [rcx]
    b18a:	54                   	push   rsp
    b18b:	09 03                	or     DWORD PTR [rbx],eax
    b18d:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    b190:	00 00                	add    BYTE PTR [rax],al
    b192:	00 00                	add    BYTE PTR [rax],al
    b194:	00 00                	add    BYTE PTR [rax],al
    b196:	0a 7a 33             	or     bh,BYTE PTR [rdx+0x33]
    b199:	00 00                	add    BYTE PTR [rax],al
    b19b:	00 00                	add    BYTE PTR [rax],al
    b19d:	00 00                	add    BYTE PTR [rax],al
    b19f:	5b                   	pop    rbx
    b1a0:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b1a3:	f8                   	clc
    b1a4:	5d                   	pop    rbp
    b1a5:	00 00                	add    BYTE PTR [rax],al
    b1a7:	03 01                	add    eax,DWORD PTR [rcx]
    b1a9:	55                   	push   rbp
    b1aa:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b1ad:	03 01                	add    eax,DWORD PTR [rcx]
    b1af:	58                   	pop    rax
    b1b0:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b1b3:	03 01                	add    eax,DWORD PTR [rcx]
    b1b5:	59                   	pop    rcx
    b1b6:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b1bb:	04 00                	add    al,0x0
    b1bd:	07                   	(bad)
    b1be:	82                   	(bad)
    b1bf:	33 00                	xor    eax,DWORD PTR [rax]
    b1c1:	00 00                	add    BYTE PTR [rax],al
    b1c3:	00 00                	add    BYTE PTR [rax],al
    b1c5:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    b1c8:	00 00                	add    BYTE PTR [rax],al
    b1ca:	03 01                	add    eax,DWORD PTR [rcx]
    b1cc:	55                   	push   rbp
    b1cd:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b1d0:	00 00                	add    BYTE PTR [rax],al
    b1d2:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    b1d6:	00 82 33 00 00 00    	add    BYTE PTR [rdx+0x33],al
    b1dc:	00 00                	add    BYTE PTR [rax],al
    b1de:	00 02                	add    BYTE PTR [rdx],al
    b1e0:	00 82 33 00 00 00    	add    BYTE PTR [rdx+0x33],al
    b1e6:	00 00                	add    BYTE PTR [rax],al
    b1e8:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b1eb:	00 00                	add    BYTE PTR [rax],al
    b1ed:	00 00                	add    BYTE PTR [rax],al
    b1ef:	00 00                	add    BYTE PTR [rax],al
    b1f1:	01 21                	add    DWORD PTR [rcx],esp
    b1f3:	34 05                	xor    al,0x5
    b1f5:	7a 73                	jp     b26a <_end+0x5252>
    b1f7:	00 00                	add    BYTE PTR [rax],al
    b1f9:	a0 24 00 00 9e 24 00 	movabs al,ds:0x70000249e000024
    b200:	00 07 
    b202:	8e 33                	mov    ?,WORD PTR [rbx]
    b204:	00 00                	add    BYTE PTR [rax],al
    b206:	00 00                	add    BYTE PTR [rax],al
    b208:	00 00                	add    BYTE PTR [rax],al
    b20a:	40 77 00             	rex ja b20d <_end+0x51f5>
    b20d:	00 03                	add    BYTE PTR [rbx],al
    b20f:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b212:	03 80 45 00 00 00    	add    eax,DWORD PTR [rax+0x45]
    b218:	00 00                	add    BYTE PTR [rax],al
    b21a:	00 00                	add    BYTE PTR [rax],al
    b21c:	00 00                	add    BYTE PTR [rax],al
    b21e:	16                   	(bad)
    b21f:	a8 32                	test   al,0x32
    b221:	00 00                	add    BYTE PTR [rax],al
    b223:	00 00                	add    BYTE PTR [rax],al
    b225:	00 00                	add    BYTE PTR [rax],al
    b227:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    b228:	00 00                	add    BYTE PTR [rax],al
    b22a:	00 00                	add    BYTE PTR [rax],al
    b22c:	00 00                	add    BYTE PTR [rax],al
    b22e:	00 72 60             	add    BYTE PTR [rdx+0x60],dh
    b231:	00 00                	add    BYTE PTR [rax],al
    b233:	17                   	(bad)
    b234:	c2 12 00             	ret    0x12
    b237:	00 22                	add    BYTE PTR [rdx],ah
    b239:	34 e9                	xor    al,0xe9
    b23b:	41 00 00             	add    BYTE PTR [r8],al
    b23e:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b242:	00 a8 32 00 00 00    	add    BYTE PTR [rax+0x32],ch
    b248:	00 00                	add    BYTE PTR [rax],al
    b24a:	00 02                	add    BYTE PTR [rdx],al
    b24c:	00 a8 32 00 00 00    	add    BYTE PTR [rax+0x32],ch
    b252:	00 00                	add    BYTE PTR [rax],al
    b254:	00 0f                	add    BYTE PTR [rdi],cl
    b256:	00 00                	add    BYTE PTR [rax],al
    b258:	00 00                	add    BYTE PTR [rax],al
    b25a:	00 00                	add    BYTE PTR [rax],al
    b25c:	00 22                	add    BYTE PTR [rdx],ah
    b25e:	34 c7                	xor    al,0xc7
    b260:	5e                   	pop    rsi
    b261:	00 00                	add    BYTE PTR [rax],al
    b263:	05 7a 73 00 00       	add    eax,0x737a
    b268:	af                   	scas   eax,DWORD PTR es:[rdi]
    b269:	24 00                	and    al,0x0
    b26b:	00 ad 24 00 00 07    	add    BYTE PTR [rbp+0x7000024],ch
    b271:	b7 32                	mov    bh,0x32
    b273:	00 00                	add    BYTE PTR [rax],al
    b275:	00 00                	add    BYTE PTR [rax],al
    b277:	00 00                	add    BYTE PTR [rax],al
    b279:	40 77 00             	rex ja b27c <_end+0x5264>
    b27c:	00 03                	add    BYTE PTR [rbx],al
    b27e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b281:	03 18                	add    ebx,DWORD PTR [rax]
    b283:	45 00 00             	add    BYTE PTR [r8],r8b
    b286:	00 00                	add    BYTE PTR [rax],al
    b288:	00 00                	add    BYTE PTR [rax],al
    b28a:	00 00                	add    BYTE PTR [rax],al
    b28c:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b290:	00 b7 32 00 00 00    	add    BYTE PTR [rdi+0x32],dh
    b296:	00 00                	add    BYTE PTR [rax],al
    b298:	00 02                	add    BYTE PTR [rdx],al
    b29a:	00 b7 32 00 00 00    	add    BYTE PTR [rdi+0x32],dh
    b2a0:	00 00                	add    BYTE PTR [rax],al
    b2a2:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b2a5:	00 00                	add    BYTE PTR [rax],al
    b2a7:	00 00                	add    BYTE PTR [rax],al
    b2a9:	00 00                	add    BYTE PTR [rax],al
    b2ab:	22 34 15 5f 00 00 05 	and    dh,BYTE PTR [rdx*1+0x500005f]
    b2b2:	7a 73                	jp     b327 <_end+0x530f>
    b2b4:	00 00                	add    BYTE PTR [rax],al
    b2b6:	be 24 00 00 bc       	mov    esi,0xbc000024
    b2bb:	24 00                	and    al,0x0
    b2bd:	00 07                	add    BYTE PTR [rdi],al
    b2bf:	c3                   	ret
    b2c0:	32 00                	xor    al,BYTE PTR [rax]
    b2c2:	00 00                	add    BYTE PTR [rax],al
    b2c4:	00 00                	add    BYTE PTR [rax],al
    b2c6:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b2c9:	00 00                	add    BYTE PTR [rax],al
    b2cb:	03 01                	add    eax,DWORD PTR [rcx]
    b2cd:	55                   	push   rbp
    b2ce:	09 03                	or     DWORD PTR [rbx],eax
    b2d0:	2b 42 00             	sub    eax,DWORD PTR [rdx+0x0]
    b2d3:	00 00                	add    BYTE PTR [rax],al
    b2d5:	00 00                	add    BYTE PTR [rax],al
    b2d7:	00 00                	add    BYTE PTR [rax],al
    b2d9:	00 09                	add    BYTE PTR [rcx],cl
    b2db:	6c                   	ins    BYTE PTR es:[rdi],dx
    b2dc:	73 00                	jae    b2de <_end+0x52c6>
    b2de:	00 c3                	add    bl,al
    b2e0:	32 00                	xor    al,BYTE PTR [rax]
    b2e2:	00 00                	add    BYTE PTR [rax],al
    b2e4:	00 00                	add    BYTE PTR [rax],al
    b2e6:	00 02                	add    BYTE PTR [rdx],al
    b2e8:	00 c3                	add    bl,al
    b2ea:	32 00                	xor    al,BYTE PTR [rax]
    b2ec:	00 00                	add    BYTE PTR [rax],al
    b2ee:	00 00                	add    BYTE PTR [rax],al
    b2f0:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b2f3:	00 00                	add    BYTE PTR [rax],al
    b2f5:	00 00                	add    BYTE PTR [rax],al
    b2f7:	00 00                	add    BYTE PTR [rax],al
    b2f9:	22 34 63             	and    dh,BYTE PTR [rbx+riz*2]
    b2fc:	5f                   	pop    rdi
    b2fd:	00 00                	add    BYTE PTR [rax],al
    b2ff:	05 7a 73 00 00       	add    eax,0x737a
    b304:	cd 24                	int    0x24
    b306:	00 00                	add    BYTE PTR [rax],al
    b308:	cb                   	retf
    b309:	24 00                	and    al,0x0
    b30b:	00 07                	add    BYTE PTR [rdi],al
    b30d:	cf                   	iret
    b30e:	32 00                	xor    al,BYTE PTR [rax]
    b310:	00 00                	add    BYTE PTR [rax],al
    b312:	00 00                	add    BYTE PTR [rax],al
    b314:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b317:	00 00                	add    BYTE PTR [rax],al
    b319:	03 01                	add    eax,DWORD PTR [rcx]
    b31b:	55                   	push   rbp
    b31c:	09 03                	or     DWORD PTR [rbx],eax
    b31e:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    b321:	00 00                	add    BYTE PTR [rax],al
    b323:	00 00                	add    BYTE PTR [rax],al
    b325:	00 00                	add    BYTE PTR [rax],al
    b327:	00 09                	add    BYTE PTR [rcx],cl
    b329:	bb 52 00 00 cf       	mov    ebx,0xcf000052
    b32e:	32 00                	xor    al,BYTE PTR [rax]
    b330:	00 00                	add    BYTE PTR [rax],al
    b332:	00 00                	add    BYTE PTR [rax],al
    b334:	00 03                	add    BYTE PTR [rbx],al
    b336:	00 cf                	add    bh,cl
    b338:	32 00                	xor    al,BYTE PTR [rax]
    b33a:	00 00                	add    BYTE PTR [rax],al
    b33c:	00 00                	add    BYTE PTR [rax],al
    b33e:	00 3b                	add    BYTE PTR [rbx],bh
    b340:	00 00                	add    BYTE PTR [rax],al
    b342:	00 00                	add    BYTE PTR [rax],al
    b344:	00 00                	add    BYTE PTR [rax],al
    b346:	00 22                	add    BYTE PTR [rdx],ah
    b348:	34 26                	xor    al,0x26
    b34a:	60                   	(bad)
    b34b:	00 00                	add    BYTE PTR [rax],al
    b34d:	05 fd 52 00 00       	add    eax,0x52fd
    b352:	dc 24 00             	fsub   QWORD PTR [rax+rax*1]
    b355:	00 da                	add    dl,bl
    b357:	24 00                	and    al,0x0
    b359:	00 05 f1 52 00 00    	add    BYTE PTR [rip+0x52f1],al        # 10650 <_end+0xa638>
    b35f:	e8 24 00 00 e6       	call   ffffffffe600b388 <_end+0xffffffffe6005370>
    b364:	24 00                	and    al,0x0
    b366:	00 0b                	add    BYTE PTR [rbx],cl
    b368:	e5 52                	in     eax,0x52
    b36a:	00 00                	add    BYTE PTR [rax],al
    b36c:	0b d9                	or     ebx,ecx
    b36e:	52                   	push   rdx
    b36f:	00 00                	add    BYTE PTR [rax],al
    b371:	0b cd                	or     ecx,ebp
    b373:	52                   	push   rdx
    b374:	00 00                	add    BYTE PTR [rax],al
    b376:	15 09 53 00 00       	adc    eax,0x5309
    b37b:	f4                   	hlt
    b37c:	24 00                	and    al,0x0
    b37e:	00 f0                	add    al,dh
    b380:	24 00                	and    al,0x0
    b382:	00 0a                	add    BYTE PTR [rdx],cl
    b384:	e2 32                	loop   b3b8 <_end+0x53a0>
    b386:	00 00                	add    BYTE PTR [rax],al
    b388:	00 00                	add    BYTE PTR [rax],al
    b38a:	00 00                	add    BYTE PTR [rax],al
    b38c:	ff                   	(bad)
    b38d:	3c 00                	cmp    al,0x0
    b38f:	00 ea                	add    dl,ch
    b391:	5f                   	pop    rdi
    b392:	00 00                	add    BYTE PTR [rax],al
    b394:	03 01                	add    eax,DWORD PTR [rcx]
    b396:	55                   	push   rbp
    b397:	09 03                	or     DWORD PTR [rbx],eax
    b399:	2f                   	(bad)
    b39a:	42 00 00             	rex.X add BYTE PTR [rax],al
    b39d:	00 00                	add    BYTE PTR [rax],al
    b39f:	00 00                	add    BYTE PTR [rax],al
    b3a1:	03 01                	add    eax,DWORD PTR [rcx]
    b3a3:	54                   	push   rsp
    b3a4:	09 03                	or     DWORD PTR [rbx],eax
    b3a6:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    b3a9:	00 00                	add    BYTE PTR [rax],al
    b3ab:	00 00                	add    BYTE PTR [rax],al
    b3ad:	00 00                	add    BYTE PTR [rax],al
    b3af:	0a 02                	or     al,BYTE PTR [rdx]
    b3b1:	33 00                	xor    eax,DWORD PTR [rax]
    b3b3:	00 00                	add    BYTE PTR [rax],al
    b3b5:	00 00                	add    BYTE PTR [rax],al
    b3b7:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    b3ba:	00 00                	add    BYTE PTR [rax],al
    b3bc:	11 60 00             	adc    DWORD PTR [rax+0x0],esp
    b3bf:	00 03                	add    BYTE PTR [rbx],al
    b3c1:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b3c4:	7f 00                	jg     b3c6 <_end+0x53ae>
    b3c6:	03 01                	add    eax,DWORD PTR [rcx]
    b3c8:	58                   	pop    rax
    b3c9:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b3cc:	03 01                	add    eax,DWORD PTR [rcx]
    b3ce:	59                   	pop    rcx
    b3cf:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b3d4:	04 00                	add    al,0x0
    b3d6:	07                   	(bad)
    b3d7:	0a 33                	or     dh,BYTE PTR [rbx]
    b3d9:	00 00                	add    BYTE PTR [rax],al
    b3db:	00 00                	add    BYTE PTR [rax],al
    b3dd:	00 00                	add    BYTE PTR [rax],al
    b3df:	4d 3c 00             	rex.WRB cmp al,0x0
    b3e2:	00 03                	add    BYTE PTR [rbx],al
    b3e4:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b3e7:	7f 00                	jg     b3e9 <_end+0x53d1>
    b3e9:	00 00                	add    BYTE PTR [rax],al
    b3eb:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    b3ef:	00 0a                	add    BYTE PTR [rdx],cl
    b3f1:	33 00                	xor    eax,DWORD PTR [rax]
    b3f3:	00 00                	add    BYTE PTR [rax],al
    b3f5:	00 00                	add    BYTE PTR [rax],al
    b3f7:	00 02                	add    BYTE PTR [rdx],al
    b3f9:	00 0a                	add    BYTE PTR [rdx],cl
    b3fb:	33 00                	xor    eax,DWORD PTR [rax]
    b3fd:	00 00                	add    BYTE PTR [rax],al
    b3ff:	00 00                	add    BYTE PTR [rax],al
    b401:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b404:	00 00                	add    BYTE PTR [rax],al
    b406:	00 00                	add    BYTE PTR [rax],al
    b408:	00 00                	add    BYTE PTR [rax],al
    b40a:	01 22                	add    DWORD PTR [rdx],esp
    b40c:	34 05                	xor    al,0x5
    b40e:	7a 73                	jp     b483 <_end+0x546b>
    b410:	00 00                	add    BYTE PTR [rax],al
    b412:	05 25 00 00 03       	add    eax,0x3000025
    b417:	25 00 00 07 16       	and    eax,0x16070000
    b41c:	33 00                	xor    eax,DWORD PTR [rax]
    b41e:	00 00                	add    BYTE PTR [rax],al
    b420:	00 00                	add    BYTE PTR [rax],al
    b422:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b425:	00 00                	add    BYTE PTR [rax],al
    b427:	03 01                	add    eax,DWORD PTR [rcx]
    b429:	55                   	push   rbp
    b42a:	09 03                	or     DWORD PTR [rbx],eax
    b42c:	80 45 00 00          	add    BYTE PTR [rbp+0x0],0x0
    b430:	00 00                	add    BYTE PTR [rax],al
    b432:	00 00                	add    BYTE PTR [rax],al
    b434:	00 00                	add    BYTE PTR [rax],al
    b436:	00 16                	add    BYTE PTR [rsi],dl
    b438:	30 32                	xor    BYTE PTR [rdx],dh
    b43a:	00 00                	add    BYTE PTR [rax],al
    b43c:	00 00                	add    BYTE PTR [rax],al
    b43e:	00 00                	add    BYTE PTR [rax],al
    b440:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    b441:	00 00                	add    BYTE PTR [rax],al
    b443:	00 00                	add    BYTE PTR [rax],al
    b445:	00 00                	add    BYTE PTR [rax],al
    b447:	00 88 62 00 00 17    	add    BYTE PTR [rax+0x17000062],cl
    b44d:	48 18 00             	rex.W sbb BYTE PTR [rax],al
    b450:	00 23                	add    BYTE PTR [rbx],ah
    b452:	34 e9                	xor    al,0xe9
    b454:	41 00 00             	add    BYTE PTR [r8],al
    b457:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b45b:	00 30                	add    BYTE PTR [rax],dh
    b45d:	32 00                	xor    al,BYTE PTR [rax]
    b45f:	00 00                	add    BYTE PTR [rax],al
    b461:	00 00                	add    BYTE PTR [rax],al
    b463:	00 02                	add    BYTE PTR [rdx],al
    b465:	00 30                	add    BYTE PTR [rax],dh
    b467:	32 00                	xor    al,BYTE PTR [rax]
    b469:	00 00                	add    BYTE PTR [rax],al
    b46b:	00 00                	add    BYTE PTR [rax],al
    b46d:	00 0f                	add    BYTE PTR [rdi],cl
    b46f:	00 00                	add    BYTE PTR [rax],al
    b471:	00 00                	add    BYTE PTR [rax],al
    b473:	00 00                	add    BYTE PTR [rax],al
    b475:	00 23                	add    BYTE PTR [rbx],ah
    b477:	34 e0                	xor    al,0xe0
    b479:	60                   	(bad)
    b47a:	00 00                	add    BYTE PTR [rax],al
    b47c:	05 7a 73 00 00       	add    eax,0x737a
    b481:	14 25                	adc    al,0x25
    b483:	00 00                	add    BYTE PTR [rax],al
    b485:	12 25 00 00 07 3f    	adc    ah,BYTE PTR [rip+0x3f070000]        # 3f07b48b <_end+0x3f075473>
    b48b:	32 00                	xor    al,BYTE PTR [rax]
    b48d:	00 00                	add    BYTE PTR [rax],al
    b48f:	00 00                	add    BYTE PTR [rax],al
    b491:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b494:	00 00                	add    BYTE PTR [rax],al
    b496:	03 01                	add    eax,DWORD PTR [rcx]
    b498:	55                   	push   rbp
    b499:	09 03                	or     DWORD PTR [rbx],eax
    b49b:	18 45 00             	sbb    BYTE PTR [rbp+0x0],al
    b49e:	00 00                	add    BYTE PTR [rax],al
    b4a0:	00 00                	add    BYTE PTR [rax],al
    b4a2:	00 00                	add    BYTE PTR [rax],al
    b4a4:	00 09                	add    BYTE PTR [rcx],cl
    b4a6:	6c                   	ins    BYTE PTR es:[rdi],dx
    b4a7:	73 00                	jae    b4a9 <_end+0x5491>
    b4a9:	00 3f                	add    BYTE PTR [rdi],bh
    b4ab:	32 00                	xor    al,BYTE PTR [rax]
    b4ad:	00 00                	add    BYTE PTR [rax],al
    b4af:	00 00                	add    BYTE PTR [rax],al
    b4b1:	00 02                	add    BYTE PTR [rdx],al
    b4b3:	00 3f                	add    BYTE PTR [rdi],bh
    b4b5:	32 00                	xor    al,BYTE PTR [rax]
    b4b7:	00 00                	add    BYTE PTR [rax],al
    b4b9:	00 00                	add    BYTE PTR [rax],al
    b4bb:	00 08                	add    BYTE PTR [rax],cl
    b4bd:	00 00                	add    BYTE PTR [rax],al
    b4bf:	00 00                	add    BYTE PTR [rax],al
    b4c1:	00 00                	add    BYTE PTR [rax],al
    b4c3:	00 23                	add    BYTE PTR [rbx],ah
    b4c5:	34 27                	xor    al,0x27
    b4c7:	61                   	(bad)
    b4c8:	00 00                	add    BYTE PTR [rax],al
    b4ca:	05 7a 73 00 00       	add    eax,0x737a
    b4cf:	23 25 00 00 21 25    	and    esp,DWORD PTR [rip+0x25210000]        # 2521b4d5 <_end+0x252154bd>
    b4d5:	00 00                	add    BYTE PTR [rax],al
    b4d7:	07                   	(bad)
    b4d8:	47 32 00             	rex.RXB xor r8b,BYTE PTR [r8]
    b4db:	00 00                	add    BYTE PTR [rax],al
    b4dd:	00 00                	add    BYTE PTR [rax],al
    b4df:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b4e2:	00 00                	add    BYTE PTR [rax],al
    b4e4:	03 01                	add    eax,DWORD PTR [rcx]
    b4e6:	55                   	push   rbp
    b4e7:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    b4ea:	00 00                	add    BYTE PTR [rax],al
    b4ec:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b4f0:	00 47 32             	add    BYTE PTR [rdi+0x32],al
    b4f3:	00 00                	add    BYTE PTR [rax],al
    b4f5:	00 00                	add    BYTE PTR [rax],al
    b4f7:	00 00                	add    BYTE PTR [rax],al
    b4f9:	02 00                	add    al,BYTE PTR [rax]
    b4fb:	47 32 00             	rex.RXB xor r8b,BYTE PTR [r8]
    b4fe:	00 00                	add    BYTE PTR [rax],al
    b500:	00 00                	add    BYTE PTR [rax],al
    b502:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b505:	00 00                	add    BYTE PTR [rax],al
    b507:	00 00                	add    BYTE PTR [rax],al
    b509:	00 00                	add    BYTE PTR [rax],al
    b50b:	23 34 75 61 00 00 05 	and    esi,DWORD PTR [rsi*2+0x5000061]
    b512:	7a 73                	jp     b587 <_end+0x556f>
    b514:	00 00                	add    BYTE PTR [rax],al
    b516:	32 25 00 00 30 25    	xor    ah,BYTE PTR [rip+0x25300000]        # 2530b51c <_end+0x25305504>
    b51c:	00 00                	add    BYTE PTR [rax],al
    b51e:	07                   	(bad)
    b51f:	53                   	push   rbx
    b520:	32 00                	xor    al,BYTE PTR [rax]
    b522:	00 00                	add    BYTE PTR [rax],al
    b524:	00 00                	add    BYTE PTR [rax],al
    b526:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b529:	00 00                	add    BYTE PTR [rax],al
    b52b:	03 01                	add    eax,DWORD PTR [rcx]
    b52d:	55                   	push   rbp
    b52e:	09 03                	or     DWORD PTR [rbx],eax
    b530:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    b533:	00 00                	add    BYTE PTR [rax],al
    b535:	00 00                	add    BYTE PTR [rax],al
    b537:	00 00                	add    BYTE PTR [rax],al
    b539:	00 09                	add    BYTE PTR [rcx],cl
    b53b:	bb 52 00 00 53       	mov    ebx,0x53000052
    b540:	32 00                	xor    al,BYTE PTR [rax]
    b542:	00 00                	add    BYTE PTR [rax],al
    b544:	00 00                	add    BYTE PTR [rax],al
    b546:	00 03                	add    BYTE PTR [rbx],al
    b548:	00 53 32             	add    BYTE PTR [rbx+0x32],dl
    b54b:	00 00                	add    BYTE PTR [rax],al
    b54d:	00 00                	add    BYTE PTR [rax],al
    b54f:	00 00                	add    BYTE PTR [rax],al
    b551:	3f                   	(bad)
    b552:	00 00                	add    BYTE PTR [rax],al
    b554:	00 00                	add    BYTE PTR [rax],al
    b556:	00 00                	add    BYTE PTR [rax],al
    b558:	00 23                	add    BYTE PTR [rbx],ah
    b55a:	34 3c                	xor    al,0x3c
    b55c:	62                   	(bad)
    b55d:	00 00                	add    BYTE PTR [rax],al
    b55f:	05 fd 52 00 00       	add    eax,0x52fd
    b564:	41 25 00 00 3f 25    	rex.B and eax,0x253f0000
    b56a:	00 00                	add    BYTE PTR [rax],al
    b56c:	05 f1 52 00 00       	add    eax,0x52f1
    b571:	4d 25 00 00 4b 25    	rex.WRB and rax,0x254b0000
    b577:	00 00                	add    BYTE PTR [rax],al
    b579:	0b e5                	or     esp,ebp
    b57b:	52                   	push   rdx
    b57c:	00 00                	add    BYTE PTR [rax],al
    b57e:	0b d9                	or     ebx,ecx
    b580:	52                   	push   rdx
    b581:	00 00                	add    BYTE PTR [rax],al
    b583:	0b cd                	or     ecx,ebp
    b585:	52                   	push   rdx
    b586:	00 00                	add    BYTE PTR [rax],al
    b588:	15 09 53 00 00       	adc    eax,0x5309
    b58d:	59                   	pop    rcx
    b58e:	25 00 00 55 25       	and    eax,0x25550000
    b593:	00 00                	add    BYTE PTR [rax],al
    b595:	0a 66 32             	or     ah,BYTE PTR [rsi+0x32]
    b598:	00 00                	add    BYTE PTR [rax],al
    b59a:	00 00                	add    BYTE PTR [rax],al
    b59c:	00 00                	add    BYTE PTR [rax],al
    b59e:	ff                   	(bad)
    b59f:	3c 00                	cmp    al,0x0
    b5a1:	00 fc                	add    ah,bh
    b5a3:	61                   	(bad)
    b5a4:	00 00                	add    BYTE PTR [rax],al
    b5a6:	03 01                	add    eax,DWORD PTR [rcx]
    b5a8:	55                   	push   rbp
    b5a9:	09 03                	or     DWORD PTR [rbx],eax
    b5ab:	20 46 00             	and    BYTE PTR [rsi+0x0],al
    b5ae:	00 00                	add    BYTE PTR [rax],al
    b5b0:	00 00                	add    BYTE PTR [rax],al
    b5b2:	00 03                	add    BYTE PTR [rbx],al
    b5b4:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b5b8:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    b5bb:	00 00                	add    BYTE PTR [rax],al
    b5bd:	00 00                	add    BYTE PTR [rax],al
    b5bf:	00 00                	add    BYTE PTR [rax],al
    b5c1:	0a 88 32 00 00 00    	or     cl,BYTE PTR [rax+0x32]
    b5c7:	00 00                	add    BYTE PTR [rax],al
    b5c9:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    b5cc:	00 00                	add    BYTE PTR [rax],al
    b5ce:	25 62 00 00 03       	and    eax,0x3000062
    b5d3:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b5d6:	91                   	xchg   ecx,eax
    b5d7:	a8 7f                	test   al,0x7f
    b5d9:	06                   	(bad)
    b5da:	03 01                	add    eax,DWORD PTR [rcx]
    b5dc:	58                   	pop    rax
    b5dd:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b5e0:	03 01                	add    eax,DWORD PTR [rcx]
    b5e2:	59                   	pop    rcx
    b5e3:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b5e8:	04 00                	add    al,0x0
    b5ea:	07                   	(bad)
    b5eb:	92                   	xchg   edx,eax
    b5ec:	32 00                	xor    al,BYTE PTR [rax]
    b5ee:	00 00                	add    BYTE PTR [rax],al
    b5f0:	00 00                	add    BYTE PTR [rax],al
    b5f2:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    b5f5:	00 00                	add    BYTE PTR [rax],al
    b5f7:	03 01                	add    eax,DWORD PTR [rcx]
    b5f9:	55                   	push   rbp
    b5fa:	04 91                	add    al,0x91
    b5fc:	a8 7f                	test   al,0x7f
    b5fe:	06                   	(bad)
    b5ff:	00 00                	add    BYTE PTR [rax],al
    b601:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    b605:	00 92 32 00 00 00    	add    BYTE PTR [rdx+0x32],dl
    b60b:	00 00                	add    BYTE PTR [rax],al
    b60d:	00 02                	add    BYTE PTR [rdx],al
    b60f:	00 92 32 00 00 00    	add    BYTE PTR [rdx+0x32],dl
    b615:	00 00                	add    BYTE PTR [rax],al
    b617:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b61a:	00 00                	add    BYTE PTR [rax],al
    b61c:	00 00                	add    BYTE PTR [rax],al
    b61e:	00 00                	add    BYTE PTR [rax],al
    b620:	01 23                	add    DWORD PTR [rbx],esp
    b622:	34 05                	xor    al,0x5
    b624:	7a 73                	jp     b699 <_end+0x5681>
    b626:	00 00                	add    BYTE PTR [rax],al
    b628:	6c                   	ins    BYTE PTR es:[rdi],dx
    b629:	25 00 00 6a 25       	and    eax,0x256a0000
    b62e:	00 00                	add    BYTE PTR [rax],al
    b630:	07                   	(bad)
    b631:	9e                   	sahf
    b632:	32 00                	xor    al,BYTE PTR [rax]
    b634:	00 00                	add    BYTE PTR [rax],al
    b636:	00 00                	add    BYTE PTR [rax],al
    b638:	00 40 77             	add    BYTE PTR [rax+0x77],al
    b63b:	00 00                	add    BYTE PTR [rax],al
    b63d:	03 01                	add    eax,DWORD PTR [rcx]
    b63f:	55                   	push   rbp
    b640:	09 03                	or     DWORD PTR [rbx],eax
    b642:	80 45 00 00          	add    BYTE PTR [rbp+0x0],0x0
    b646:	00 00                	add    BYTE PTR [rax],al
    b648:	00 00                	add    BYTE PTR [rax],al
    b64a:	00 00                	add    BYTE PTR [rax],al
    b64c:	00 16                	add    BYTE PTR [rsi],dl
    b64e:	58                   	pop    rax
    b64f:	2f                   	(bad)
    b650:	00 00                	add    BYTE PTR [rax],al
    b652:	00 00                	add    BYTE PTR [rax],al
    b654:	00 00                	add    BYTE PTR [rax],al
    b656:	79 00                	jns    b658 <_end+0x5640>
    b658:	00 00                	add    BYTE PTR [rax],al
    b65a:	00 00                	add    BYTE PTR [rax],al
    b65c:	00 00                	add    BYTE PTR [rax],al
    b65e:	79 64                	jns    b6c4 <_end+0x56ac>
    b660:	00 00                	add    BYTE PTR [rax],al
    b662:	17                   	(bad)
    b663:	19 16                	sbb    DWORD PTR [rsi],edx
    b665:	00 00                	add    BYTE PTR [rax],al
    b667:	25 09 e9 41 00       	and    eax,0x41e909
    b66c:	00 09                	add    BYTE PTR [rcx],cl
    b66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    b66f:	73 00                	jae    b671 <_end+0x5659>
    b671:	00 58 2f             	add    BYTE PTR [rax+0x2f],bl
    b674:	00 00                	add    BYTE PTR [rax],al
    b676:	00 00                	add    BYTE PTR [rax],al
    b678:	00 00                	add    BYTE PTR [rax],al
    b67a:	03 00                	add    eax,DWORD PTR [rax]
    b67c:	58                   	pop    rax
    b67d:	2f                   	(bad)
    b67e:	00 00                	add    BYTE PTR [rax],al
    b680:	00 00                	add    BYTE PTR [rax],al
    b682:	00 00                	add    BYTE PTR [rax],al
    b684:	0f 00 00             	sldt   WORD PTR [rax]
    b687:	00 00                	add    BYTE PTR [rax],al
    b689:	00 00                	add    BYTE PTR [rax],al
    b68b:	00 25 09 ef 62 00    	add    BYTE PTR [rip+0x62ef09],ah        # 63a59a <_end+0x634582>
    b691:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 12a11 <_end+0xc9f9>
    b697:	7b 25                	jnp    b6be <_end+0x56a6>
    b699:	00 00                	add    BYTE PTR [rax],al
    b69b:	79 25                	jns    b6c2 <_end+0x56aa>
    b69d:	00 00                	add    BYTE PTR [rax],al
    b69f:	07                   	(bad)
    b6a0:	67 2f                	addr32 (bad)
    b6a2:	00 00                	add    BYTE PTR [rax],al
    b6a4:	00 00                	add    BYTE PTR [rax],al
    b6a6:	00 00                	add    BYTE PTR [rax],al
    b6a8:	40 77 00             	rex ja b6ab <_end+0x5693>
    b6ab:	00 03                	add    BYTE PTR [rbx],al
    b6ad:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b6b0:	7f 00                	jg     b6b2 <_end+0x569a>
    b6b2:	00 00                	add    BYTE PTR [rax],al
    b6b4:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b6b8:	00 67 2f             	add    BYTE PTR [rdi+0x2f],ah
    b6bb:	00 00                	add    BYTE PTR [rax],al
    b6bd:	00 00                	add    BYTE PTR [rax],al
    b6bf:	00 00                	add    BYTE PTR [rax],al
    b6c1:	02 00                	add    al,BYTE PTR [rax]
    b6c3:	67 2f                	addr32 (bad)
    b6c5:	00 00                	add    BYTE PTR [rax],al
    b6c7:	00 00                	add    BYTE PTR [rax],al
    b6c9:	00 00                	add    BYTE PTR [rax],al
    b6cb:	0c 00                	or     al,0x0
    b6cd:	00 00                	add    BYTE PTR [rax],al
    b6cf:	00 00                	add    BYTE PTR [rax],al
    b6d1:	00 00                	add    BYTE PTR [rax],al
    b6d3:	25 09 3d 63 00       	and    eax,0x633d09
    b6d8:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 12a58 <_end+0xca40>
    b6de:	8a 25 00 00 88 25    	mov    ah,BYTE PTR [rip+0x25880000]        # 2588b6e4 <_end+0x258856cc>
    b6e4:	00 00                	add    BYTE PTR [rax],al
    b6e6:	07                   	(bad)
    b6e7:	73 2f                	jae    b718 <_end+0x5700>
    b6e9:	00 00                	add    BYTE PTR [rax],al
    b6eb:	00 00                	add    BYTE PTR [rax],al
    b6ed:	00 00                	add    BYTE PTR [rax],al
    b6ef:	40 77 00             	rex ja b6f2 <_end+0x56da>
    b6f2:	00 03                	add    BYTE PTR [rbx],al
    b6f4:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b6f7:	03 ec                	add    ebp,esp
    b6f9:	41 00 00             	add    BYTE PTR [r8],al
    b6fc:	00 00                	add    BYTE PTR [rax],al
    b6fe:	00 00                	add    BYTE PTR [rax],al
    b700:	00 00                	add    BYTE PTR [rax],al
    b702:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b706:	00 73 2f             	add    BYTE PTR [rbx+0x2f],dh
    b709:	00 00                	add    BYTE PTR [rax],al
    b70b:	00 00                	add    BYTE PTR [rax],al
    b70d:	00 00                	add    BYTE PTR [rax],al
    b70f:	02 00                	add    al,BYTE PTR [rax]
    b711:	73 2f                	jae    b742 <_end+0x572a>
    b713:	00 00                	add    BYTE PTR [rax],al
    b715:	00 00                	add    BYTE PTR [rax],al
    b717:	00 00                	add    BYTE PTR [rax],al
    b719:	0c 00                	or     al,0x0
    b71b:	00 00                	add    BYTE PTR [rax],al
    b71d:	00 00                	add    BYTE PTR [rax],al
    b71f:	00 00                	add    BYTE PTR [rax],al
    b721:	25 09 8b 63 00       	and    eax,0x638b09
    b726:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 12aa6 <_end+0xca8e>
    b72c:	99                   	cdq
    b72d:	25 00 00 97 25       	and    eax,0x25970000
    b732:	00 00                	add    BYTE PTR [rax],al
    b734:	07                   	(bad)
    b735:	7f 2f                	jg     b766 <_end+0x574e>
    b737:	00 00                	add    BYTE PTR [rax],al
    b739:	00 00                	add    BYTE PTR [rax],al
    b73b:	00 00                	add    BYTE PTR [rax],al
    b73d:	40 77 00             	rex ja b740 <_end+0x5728>
    b740:	00 03                	add    BYTE PTR [rbx],al
    b742:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b745:	03 38                	add    edi,DWORD PTR [rax]
    b747:	45 00 00             	add    BYTE PTR [r8],r8b
    b74a:	00 00                	add    BYTE PTR [rax],al
    b74c:	00 00                	add    BYTE PTR [rax],al
    b74e:	00 00                	add    BYTE PTR [rax],al
    b750:	1e                   	(bad)
    b751:	bb 52 00 00 7f       	mov    ebx,0x7f000052
    b756:	2f                   	(bad)
    b757:	00 00                	add    BYTE PTR [rax],al
    b759:	00 00                	add    BYTE PTR [rax],al
    b75b:	00 00                	add    BYTE PTR [rax],al
    b75d:	03 00                	add    eax,DWORD PTR [rax]
    b75f:	9b                   	fwait
    b760:	03 00                	add    eax,DWORD PTR [rax]
    b762:	00 25 09 41 64 00    	add    BYTE PTR [rip+0x644109],ah        # 64f871 <_end+0x649859>
    b768:	00 05 fd 52 00 00    	add    BYTE PTR [rip+0x52fd],al        # 10a6b <_end+0xaa53>
    b76e:	a8 25                	test   al,0x25
    b770:	00 00                	add    BYTE PTR [rax],al
    b772:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    b773:	25 00 00 05 f1       	and    eax,0xf1050000
    b778:	52                   	push   rdx
    b779:	00 00                	add    BYTE PTR [rax],al
    b77b:	b4 25                	mov    ah,0x25
    b77d:	00 00                	add    BYTE PTR [rax],al
    b77f:	b2 25                	mov    dl,0x25
    b781:	00 00                	add    BYTE PTR [rax],al
    b783:	0b e5                	or     esp,ebp
    b785:	52                   	push   rdx
    b786:	00 00                	add    BYTE PTR [rax],al
    b788:	0b d9                	or     ebx,ecx
    b78a:	52                   	push   rdx
    b78b:	00 00                	add    BYTE PTR [rax],al
    b78d:	0b cd                	or     ecx,ebp
    b78f:	52                   	push   rdx
    b790:	00 00                	add    BYTE PTR [rax],al
    b792:	2e 9b                	cs fwait
    b794:	03 00                	add    eax,DWORD PTR [rax]
    b796:	00 15 09 53 00 00    	add    BYTE PTR [rip+0x5309],dl        # 10aa5 <_end+0xaa8d>
    b79c:	c2 25 00             	ret    0x25
    b79f:	00 bc 25 00 00 0a 9a 	add    BYTE PTR [rbp+riz*1-0x65f60000],bh
    b7a6:	2f                   	(bad)
    b7a7:	00 00                	add    BYTE PTR [rax],al
    b7a9:	00 00                	add    BYTE PTR [rax],al
    b7ab:	00 00                	add    BYTE PTR [rax],al
    b7ad:	ff                   	(bad)
    b7ae:	3c 00                	cmp    al,0x0
    b7b0:	00 0b                	add    BYTE PTR [rbx],cl
    b7b2:	64 00 00             	add    BYTE PTR fs:[rax],al
    b7b5:	03 01                	add    eax,DWORD PTR [rcx]
    b7b7:	55                   	push   rbp
    b7b8:	09 03                	or     DWORD PTR [rbx],eax
    b7ba:	58                   	pop    rax
    b7bb:	45 00 00             	add    BYTE PTR [r8],r8b
    b7be:	00 00                	add    BYTE PTR [rax],al
    b7c0:	00 00                	add    BYTE PTR [rax],al
    b7c2:	03 01                	add    eax,DWORD PTR [rcx]
    b7c4:	54                   	push   rsp
    b7c5:	09 03                	or     DWORD PTR [rbx],eax
    b7c7:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    b7ca:	00 00                	add    BYTE PTR [rax],al
    b7cc:	00 00                	add    BYTE PTR [rax],al
    b7ce:	00 00                	add    BYTE PTR [rax],al
    b7d0:	0a ba 2f 00 00 00    	or     bh,BYTE PTR [rdx+0x2f]
    b7d6:	00 00                	add    BYTE PTR [rax],al
    b7d8:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    b7db:	00 00                	add    BYTE PTR [rax],al
    b7dd:	32 64 00 00          	xor    ah,BYTE PTR [rax+rax*1+0x0]
    b7e1:	03 01                	add    eax,DWORD PTR [rcx]
    b7e3:	55                   	push   rbp
    b7e4:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    b7e7:	03 01                	add    eax,DWORD PTR [rcx]
    b7e9:	58                   	pop    rax
    b7ea:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b7ed:	03 01                	add    eax,DWORD PTR [rcx]
    b7ef:	59                   	pop    rcx
    b7f0:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b7f5:	04 00                	add    al,0x0
    b7f7:	24 c9                	and    al,0xc9
    b7f9:	2f                   	(bad)
    b7fa:	00 00                	add    BYTE PTR [rax],al
    b7fc:	00 00                	add    BYTE PTR [rax],al
    b7fe:	00 00                	add    BYTE PTR [rax],al
    b800:	4d 3c 00             	rex.WRB cmp al,0x0
    b803:	00 00                	add    BYTE PTR [rax],al
    b805:	00 38                	add    BYTE PTR [rax],bh
    b807:	6c                   	ins    BYTE PTR es:[rdi],dx
    b808:	73 00                	jae    b80a <_end+0x57f2>
    b80a:	00 c9                	add    cl,cl
    b80c:	2f                   	(bad)
    b80d:	00 00                	add    BYTE PTR [rax],al
    b80f:	00 00                	add    BYTE PTR [rax],al
    b811:	00 00                	add    BYTE PTR [rax],al
    b813:	02 00                	add    al,BYTE PTR [rax]
    b815:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    b816:	03 00                	add    eax,DWORD PTR [rax]
    b818:	00 25 09 05 7a 73    	add    BYTE PTR [rip+0x737a0509],ah        # 737abd27 <_end+0x737a5d0f>
    b81e:	00 00                	add    BYTE PTR [rax],al
    b820:	da 25 00 00 d8 25    	fisub  DWORD PTR [rip+0x25d80000]        # 25d8b826 <_end+0x25d8580e>
    b826:	00 00                	add    BYTE PTR [rax],al
    b828:	07                   	(bad)
    b829:	d1 2f                	shr    DWORD PTR [rdi],1
    b82b:	00 00                	add    BYTE PTR [rax],al
    b82d:	00 00                	add    BYTE PTR [rax],al
    b82f:	00 00                	add    BYTE PTR [rax],al
    b831:	40 77 00             	rex ja b834 <_end+0x581c>
    b834:	00 03                	add    BYTE PTR [rbx],al
    b836:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b839:	73 00                	jae    b83b <_end+0x5823>
    b83b:	00 00                	add    BYTE PTR [rax],al
    b83d:	00 16                	add    BYTE PTR [rsi],dl
    b83f:	d1 2f                	shr    DWORD PTR [rdi],1
    b841:	00 00                	add    BYTE PTR [rax],al
    b843:	00 00                	add    BYTE PTR [rax],al
    b845:	00 00                	add    BYTE PTR [rax],al
    b847:	6c                   	ins    BYTE PTR es:[rdi],dx
    b848:	00 00                	add    BYTE PTR [rax],al
    b84a:	00 00                	add    BYTE PTR [rax],al
    b84c:	00 00                	add    BYTE PTR [rax],al
    b84e:	00 88 66 00 00 17    	add    BYTE PTR [rax+0x17000066],cl
    b854:	15 16 00 00 26       	adc    eax,0x26000016
    b859:	09 e9                	or     ecx,ebp
    b85b:	41 00 00             	add    BYTE PTR [r8],al
    b85e:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b862:	00 d1                	add    cl,dl
    b864:	2f                   	(bad)
    b865:	00 00                	add    BYTE PTR [rax],al
    b867:	00 00                	add    BYTE PTR [rax],al
    b869:	00 00                	add    BYTE PTR [rax],al
    b86b:	04 00                	add    al,0x0
    b86d:	d1 2f                	shr    DWORD PTR [rdi],1
    b86f:	00 00                	add    BYTE PTR [rax],al
    b871:	00 00                	add    BYTE PTR [rax],al
    b873:	00 00                	add    BYTE PTR [rax],al
    b875:	08 00                	or     BYTE PTR [rax],al
    b877:	00 00                	add    BYTE PTR [rax],al
    b879:	00 00                	add    BYTE PTR [rax],al
    b87b:	00 00                	add    BYTE PTR [rax],al
    b87d:	26 09 e0             	es or  eax,esp
    b880:	64 00 00             	add    BYTE PTR fs:[rax],al
    b883:	05 7a 73 00 00       	add    eax,0x737a
    b888:	e9 25 00 00 e7       	jmp    ffffffffe700b8b2 <_end+0xffffffffe700589a>
    b88d:	25 00 00 07 d9       	and    eax,0xd9070000
    b892:	2f                   	(bad)
    b893:	00 00                	add    BYTE PTR [rax],al
    b895:	00 00                	add    BYTE PTR [rax],al
    b897:	00 00                	add    BYTE PTR [rax],al
    b899:	40 77 00             	rex ja b89c <_end+0x5884>
    b89c:	00 03                	add    BYTE PTR [rbx],al
    b89e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b8a1:	7f 00                	jg     b8a3 <_end+0x588b>
    b8a3:	00 00                	add    BYTE PTR [rax],al
    b8a5:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b8a9:	00 d9                	add    cl,bl
    b8ab:	2f                   	(bad)
    b8ac:	00 00                	add    BYTE PTR [rax],al
    b8ae:	00 00                	add    BYTE PTR [rax],al
    b8b0:	00 00                	add    BYTE PTR [rax],al
    b8b2:	02 00                	add    al,BYTE PTR [rax]
    b8b4:	d9 2f                	fldcw  WORD PTR [rdi]
    b8b6:	00 00                	add    BYTE PTR [rax],al
    b8b8:	00 00                	add    BYTE PTR [rax],al
    b8ba:	00 00                	add    BYTE PTR [rax],al
    b8bc:	0c 00                	or     al,0x0
    b8be:	00 00                	add    BYTE PTR [rax],al
    b8c0:	00 00                	add    BYTE PTR [rax],al
    b8c2:	00 00                	add    BYTE PTR [rax],al
    b8c4:	26 09 2e             	es or  DWORD PTR [rsi],ebp
    b8c7:	65 00 00             	add    BYTE PTR gs:[rax],al
    b8ca:	05 7a 73 00 00       	add    eax,0x737a
    b8cf:	f8                   	clc
    b8d0:	25 00 00 f6 25       	and    eax,0x25f60000
    b8d5:	00 00                	add    BYTE PTR [rax],al
    b8d7:	07                   	(bad)
    b8d8:	e5 2f                	in     eax,0x2f
    b8da:	00 00                	add    BYTE PTR [rax],al
    b8dc:	00 00                	add    BYTE PTR [rax],al
    b8de:	00 00                	add    BYTE PTR [rax],al
    b8e0:	40 77 00             	rex ja b8e3 <_end+0x58cb>
    b8e3:	00 03                	add    BYTE PTR [rbx],al
    b8e5:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b8e8:	03 e8                	add    ebp,eax
    b8ea:	41 00 00             	add    BYTE PTR [r8],al
    b8ed:	00 00                	add    BYTE PTR [rax],al
    b8ef:	00 00                	add    BYTE PTR [rax],al
    b8f1:	00 00                	add    BYTE PTR [rax],al
    b8f3:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    b8f7:	00 e5                	add    ch,ah
    b8f9:	2f                   	(bad)
    b8fa:	00 00                	add    BYTE PTR [rax],al
    b8fc:	00 00                	add    BYTE PTR [rax],al
    b8fe:	00 00                	add    BYTE PTR [rax],al
    b900:	02 00                	add    al,BYTE PTR [rax]
    b902:	e5 2f                	in     eax,0x2f
    b904:	00 00                	add    BYTE PTR [rax],al
    b906:	00 00                	add    BYTE PTR [rax],al
    b908:	00 00                	add    BYTE PTR [rax],al
    b90a:	0c 00                	or     al,0x0
    b90c:	00 00                	add    BYTE PTR [rax],al
    b90e:	00 00                	add    BYTE PTR [rax],al
    b910:	00 00                	add    BYTE PTR [rax],al
    b912:	26 09 7c 65 00       	es or  DWORD PTR [rbp+riz*2+0x0],edi
    b917:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 12c97 <_end+0xcc7f>
    b91d:	07                   	(bad)
    b91e:	26 00 00             	es add BYTE PTR [rax],al
    b921:	05 26 00 00 07       	add    eax,0x7000026
    b926:	f1                   	int1
    b927:	2f                   	(bad)
    b928:	00 00                	add    BYTE PTR [rax],al
    b92a:	00 00                	add    BYTE PTR [rax],al
    b92c:	00 00                	add    BYTE PTR [rax],al
    b92e:	40 77 00             	rex ja b931 <_end+0x5919>
    b931:	00 03                	add    BYTE PTR [rbx],al
    b933:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b936:	03 38                	add    edi,DWORD PTR [rax]
    b938:	45 00 00             	add    BYTE PTR [r8],r8b
    b93b:	00 00                	add    BYTE PTR [rax],al
    b93d:	00 00                	add    BYTE PTR [rax],al
    b93f:	00 00                	add    BYTE PTR [rax],al
    b941:	09 bb 52 00 00 f6    	or     DWORD PTR [rbx-0x9ffffae],edi
    b947:	2f                   	(bad)
	...
    b950:	f6 2f                	imul   BYTE PTR [rdi]
    b952:	00 00                	add    BYTE PTR [rax],al
    b954:	00 00                	add    BYTE PTR [rax],al
    b956:	00 00                	add    BYTE PTR [rax],al
    b958:	3f                   	(bad)
    b959:	00 00                	add    BYTE PTR [rax],al
    b95b:	00 00                	add    BYTE PTR [rax],al
    b95d:	00 00                	add    BYTE PTR [rax],al
    b95f:	00 26                	add    BYTE PTR [rsi],ah
    b961:	09 43 66             	or     DWORD PTR [rbx+0x66],eax
    b964:	00 00                	add    BYTE PTR [rax],al
    b966:	05 fd 52 00 00       	add    eax,0x52fd
    b96b:	16                   	(bad)
    b96c:	26 00 00             	es add BYTE PTR [rax],al
    b96f:	14 26                	adc    al,0x26
    b971:	00 00                	add    BYTE PTR [rax],al
    b973:	05 f1 52 00 00       	add    eax,0x52f1
    b978:	22 26                	and    ah,BYTE PTR [rsi]
    b97a:	00 00                	add    BYTE PTR [rax],al
    b97c:	20 26                	and    BYTE PTR [rsi],ah
    b97e:	00 00                	add    BYTE PTR [rax],al
    b980:	0b e5                	or     esp,ebp
    b982:	52                   	push   rdx
    b983:	00 00                	add    BYTE PTR [rax],al
    b985:	0b d9                	or     ebx,ecx
    b987:	52                   	push   rdx
    b988:	00 00                	add    BYTE PTR [rax],al
    b98a:	0b cd                	or     ecx,ebp
    b98c:	52                   	push   rdx
    b98d:	00 00                	add    BYTE PTR [rax],al
    b98f:	15 09 53 00 00       	adc    eax,0x5309
    b994:	2e 26 00 00          	cs es add BYTE PTR [rax],al
    b998:	2a 26                	sub    ah,BYTE PTR [rsi]
    b99a:	00 00                	add    BYTE PTR [rax],al
    b99c:	0a 09                	or     cl,BYTE PTR [rcx]
    b99e:	30 00                	xor    BYTE PTR [rax],al
    b9a0:	00 00                	add    BYTE PTR [rax],al
    b9a2:	00 00                	add    BYTE PTR [rax],al
    b9a4:	00 ff                	add    bh,bh
    b9a6:	3c 00                	cmp    al,0x0
    b9a8:	00 03                	add    BYTE PTR [rbx],al
    b9aa:	66 00 00             	data16 add BYTE PTR [rax],al
    b9ad:	03 01                	add    eax,DWORD PTR [rcx]
    b9af:	55                   	push   rbp
    b9b0:	09 03                	or     DWORD PTR [rbx],eax
    b9b2:	a0 45 00 00 00 00 00 	movabs al,ds:0x300000000000045
    b9b9:	00 03 
    b9bb:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b9bf:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    b9c2:	00 00                	add    BYTE PTR [rax],al
    b9c4:	00 00                	add    BYTE PTR [rax],al
    b9c6:	00 00                	add    BYTE PTR [rax],al
    b9c8:	0a 2b                	or     ch,BYTE PTR [rbx]
    b9ca:	30 00                	xor    BYTE PTR [rax],al
    b9cc:	00 00                	add    BYTE PTR [rax],al
    b9ce:	00 00                	add    BYTE PTR [rax],al
    b9d0:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    b9d3:	00 00                	add    BYTE PTR [rax],al
    b9d5:	2c 66                	sub    al,0x66
    b9d7:	00 00                	add    BYTE PTR [rax],al
    b9d9:	03 01                	add    eax,DWORD PTR [rcx]
    b9db:	55                   	push   rbp
    b9dc:	04 91                	add    al,0x91
    b9de:	a8 7f                	test   al,0x7f
    b9e0:	06                   	(bad)
    b9e1:	03 01                	add    eax,DWORD PTR [rcx]
    b9e3:	58                   	pop    rax
    b9e4:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b9e7:	03 01                	add    eax,DWORD PTR [rcx]
    b9e9:	59                   	pop    rcx
    b9ea:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b9ef:	04 00                	add    al,0x0
    b9f1:	07                   	(bad)
    b9f2:	35 30 00 00 00       	xor    eax,0x30
    b9f7:	00 00                	add    BYTE PTR [rax],al
    b9f9:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    b9fc:	00 00                	add    BYTE PTR [rax],al
    b9fe:	03 01                	add    eax,DWORD PTR [rcx]
    ba00:	55                   	push   rbp
    ba01:	04 91                	add    al,0x91
    ba03:	a8 7f                	test   al,0x7f
    ba05:	06                   	(bad)
    ba06:	00 00                	add    BYTE PTR [rax],al
    ba08:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    ba0c:	00 35 30 00 00 00    	add    BYTE PTR [rip+0x30],dh        # ba42 <_end+0x5a2a>
    ba12:	00 00                	add    BYTE PTR [rax],al
    ba14:	00 02                	add    BYTE PTR [rdx],al
    ba16:	00 35 30 00 00 00    	add    BYTE PTR [rip+0x30],dh        # ba4c <_end+0x5a34>
    ba1c:	00 00                	add    BYTE PTR [rax],al
    ba1e:	00 08                	add    BYTE PTR [rax],cl
    ba20:	00 00                	add    BYTE PTR [rax],al
    ba22:	00 00                	add    BYTE PTR [rax],al
    ba24:	00 00                	add    BYTE PTR [rax],al
    ba26:	00 01                	add    BYTE PTR [rcx],al
    ba28:	26 09 05 7a 73 00 00 	es or  DWORD PTR [rip+0x737a],eax        # 12da9 <_end+0xcd91>
    ba2f:	41                   	rex.B
    ba30:	26 00 00             	es add BYTE PTR [rax],al
    ba33:	3f                   	(bad)
    ba34:	26 00 00             	es add BYTE PTR [rax],al
    ba37:	07                   	(bad)
    ba38:	3d 30 00 00 00       	cmp    eax,0x30
    ba3d:	00 00                	add    BYTE PTR [rax],al
    ba3f:	00 40 77             	add    BYTE PTR [rax+0x77],al
    ba42:	00 00                	add    BYTE PTR [rax],al
    ba44:	03 01                	add    eax,DWORD PTR [rcx]
    ba46:	55                   	push   rbp
    ba47:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    ba4a:	00 00                	add    BYTE PTR [rax],al
    ba4c:	00 16                	add    BYTE PTR [rsi],dl
    ba4e:	3d 30 00 00 00       	cmp    eax,0x30
    ba53:	00 00                	add    BYTE PTR [rax],al
    ba55:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
    ba58:	00 00                	add    BYTE PTR [rax],al
    ba5a:	00 00                	add    BYTE PTR [rax],al
    ba5c:	00 00                	add    BYTE PTR [rax],al
    ba5e:	8c 68 00             	mov    WORD PTR [rax+0x0],gs
    ba61:	00 17                	add    BYTE PTR [rdi],dl
    ba63:	48 18 00             	rex.W sbb BYTE PTR [rax],al
    ba66:	00 27                	add    BYTE PTR [rdi],ah
    ba68:	09 e9                	or     ecx,ebp
    ba6a:	41 00 00             	add    BYTE PTR [r8],al
    ba6d:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    ba71:	00 3d 30 00 00 00    	add    BYTE PTR [rip+0x30],bh        # baa7 <_end+0x5a8f>
    ba77:	00 00                	add    BYTE PTR [rax],al
    ba79:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    ba7c:	3d 30 00 00 00       	cmp    eax,0x30
    ba81:	00 00                	add    BYTE PTR [rax],al
    ba83:	00 08                	add    BYTE PTR [rax],cl
    ba85:	00 00                	add    BYTE PTR [rax],al
    ba87:	00 00                	add    BYTE PTR [rax],al
    ba89:	00 00                	add    BYTE PTR [rax],al
    ba8b:	00 27                	add    BYTE PTR [rdi],ah
    ba8d:	09 ef                	or     edi,ebp
    ba8f:	66 00 00             	data16 add BYTE PTR [rax],al
    ba92:	05 7a 73 00 00       	add    eax,0x737a
    ba97:	50                   	push   rax
    ba98:	26 00 00             	es add BYTE PTR [rax],al
    ba9b:	4e                   	rex.WRX
    ba9c:	26 00 00             	es add BYTE PTR [rax],al
    ba9f:	07                   	(bad)
    baa0:	45 30 00             	xor    BYTE PTR [r8],r8b
    baa3:	00 00                	add    BYTE PTR [rax],al
    baa5:	00 00                	add    BYTE PTR [rax],al
    baa7:	00 40 77             	add    BYTE PTR [rax+0x77],al
    baaa:	00 00                	add    BYTE PTR [rax],al
    baac:	03 01                	add    eax,DWORD PTR [rcx]
    baae:	55                   	push   rbp
    baaf:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    bab2:	00 00                	add    BYTE PTR [rax],al
    bab4:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    bab8:	00 45 30             	add    BYTE PTR [rbp+0x30],al
    babb:	00 00                	add    BYTE PTR [rax],al
    babd:	00 00                	add    BYTE PTR [rax],al
    babf:	00 00                	add    BYTE PTR [rax],al
    bac1:	02 00                	add    al,BYTE PTR [rax]
    bac3:	45 30 00             	xor    BYTE PTR [r8],r8b
    bac6:	00 00                	add    BYTE PTR [rax],al
    bac8:	00 00                	add    BYTE PTR [rax],al
    baca:	00 08                	add    BYTE PTR [rax],cl
    bacc:	00 00                	add    BYTE PTR [rax],al
    bace:	00 00                	add    BYTE PTR [rax],al
    bad0:	00 00                	add    BYTE PTR [rax],al
    bad2:	00 27                	add    BYTE PTR [rdi],ah
    bad4:	09 36                	or     DWORD PTR [rsi],esi
    bad6:	67 00 00             	add    BYTE PTR [eax],al
    bad9:	05 7a 73 00 00       	add    eax,0x737a
    bade:	5f                   	pop    rdi
    badf:	26 00 00             	es add BYTE PTR [rax],al
    bae2:	5d                   	pop    rbp
    bae3:	26 00 00             	es add BYTE PTR [rax],al
    bae6:	07                   	(bad)
    bae7:	4d 30 00             	rex.WRB xor BYTE PTR [r8],r8b
    baea:	00 00                	add    BYTE PTR [rax],al
    baec:	00 00                	add    BYTE PTR [rax],al
    baee:	00 40 77             	add    BYTE PTR [rax+0x77],al
    baf1:	00 00                	add    BYTE PTR [rax],al
    baf3:	03 01                	add    eax,DWORD PTR [rcx]
    baf5:	55                   	push   rbp
    baf6:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    baf9:	00 00                	add    BYTE PTR [rax],al
    bafb:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    baff:	00 4d 30             	add    BYTE PTR [rbp+0x30],cl
    bb02:	00 00                	add    BYTE PTR [rax],al
    bb04:	00 00                	add    BYTE PTR [rax],al
    bb06:	00 00                	add    BYTE PTR [rax],al
    bb08:	02 00                	add    al,BYTE PTR [rax]
    bb0a:	4d 30 00             	rex.WRB xor BYTE PTR [r8],r8b
    bb0d:	00 00                	add    BYTE PTR [rax],al
    bb0f:	00 00                	add    BYTE PTR [rax],al
    bb11:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bb14:	00 00                	add    BYTE PTR [rax],al
    bb16:	00 00                	add    BYTE PTR [rax],al
    bb18:	00 00                	add    BYTE PTR [rax],al
    bb1a:	27                   	(bad)
    bb1b:	09 84 67 00 00 05 7a 	or     DWORD PTR [rdi+riz*2+0x7a050000],eax
    bb22:	73 00                	jae    bb24 <_end+0x5b0c>
    bb24:	00 6e 26             	add    BYTE PTR [rsi+0x26],ch
    bb27:	00 00                	add    BYTE PTR [rax],al
    bb29:	6c                   	ins    BYTE PTR es:[rdi],dx
    bb2a:	26 00 00             	es add BYTE PTR [rax],al
    bb2d:	07                   	(bad)
    bb2e:	59                   	pop    rcx
    bb2f:	30 00                	xor    BYTE PTR [rax],al
    bb31:	00 00                	add    BYTE PTR [rax],al
    bb33:	00 00                	add    BYTE PTR [rax],al
    bb35:	00 40 77             	add    BYTE PTR [rax+0x77],al
    bb38:	00 00                	add    BYTE PTR [rax],al
    bb3a:	03 01                	add    eax,DWORD PTR [rcx]
    bb3c:	55                   	push   rbp
    bb3d:	09 03                	or     DWORD PTR [rbx],eax
    bb3f:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    bb42:	00 00                	add    BYTE PTR [rax],al
    bb44:	00 00                	add    BYTE PTR [rax],al
    bb46:	00 00                	add    BYTE PTR [rax],al
    bb48:	00 09                	add    BYTE PTR [rcx],cl
    bb4a:	bb 52 00 00 59       	mov    ebx,0x59000052
    bb4f:	30 00                	xor    BYTE PTR [rax],al
    bb51:	00 00                	add    BYTE PTR [rax],al
    bb53:	00 00                	add    BYTE PTR [rax],al
    bb55:	00 03                	add    BYTE PTR [rbx],al
    bb57:	00 59 30             	add    BYTE PTR [rcx+0x30],bl
    bb5a:	00 00                	add    BYTE PTR [rax],al
    bb5c:	00 00                	add    BYTE PTR [rax],al
    bb5e:	00 00                	add    BYTE PTR [rax],al
    bb60:	3b 00                	cmp    eax,DWORD PTR [rax]
    bb62:	00 00                	add    BYTE PTR [rax],al
    bb64:	00 00                	add    BYTE PTR [rax],al
    bb66:	00 00                	add    BYTE PTR [rax],al
    bb68:	27                   	(bad)
    bb69:	09 47 68             	or     DWORD PTR [rdi+0x68],eax
    bb6c:	00 00                	add    BYTE PTR [rax],al
    bb6e:	05 fd 52 00 00       	add    eax,0x52fd
    bb73:	7d 26                	jge    bb9b <_end+0x5b83>
    bb75:	00 00                	add    BYTE PTR [rax],al
    bb77:	7b 26                	jnp    bb9f <_end+0x5b87>
    bb79:	00 00                	add    BYTE PTR [rax],al
    bb7b:	05 f1 52 00 00       	add    eax,0x52f1
    bb80:	89 26                	mov    DWORD PTR [rsi],esp
    bb82:	00 00                	add    BYTE PTR [rax],al
    bb84:	87 26                	xchg   DWORD PTR [rsi],esp
    bb86:	00 00                	add    BYTE PTR [rax],al
    bb88:	0b e5                	or     esp,ebp
    bb8a:	52                   	push   rdx
    bb8b:	00 00                	add    BYTE PTR [rax],al
    bb8d:	0b d9                	or     ebx,ecx
    bb8f:	52                   	push   rdx
    bb90:	00 00                	add    BYTE PTR [rax],al
    bb92:	0b cd                	or     ecx,ebp
    bb94:	52                   	push   rdx
    bb95:	00 00                	add    BYTE PTR [rax],al
    bb97:	15 09 53 00 00       	adc    eax,0x5309
    bb9c:	95                   	xchg   ebp,eax
    bb9d:	26 00 00             	es add BYTE PTR [rax],al
    bba0:	91                   	xchg   ecx,eax
    bba1:	26 00 00             	es add BYTE PTR [rax],al
    bba4:	0a 6c 30 00          	or     ch,BYTE PTR [rax+rsi*1+0x0]
    bba8:	00 00                	add    BYTE PTR [rax],al
    bbaa:	00 00                	add    BYTE PTR [rax],al
    bbac:	00 ff                	add    bh,bh
    bbae:	3c 00                	cmp    al,0x0
    bbb0:	00 0b                	add    BYTE PTR [rbx],cl
    bbb2:	68 00 00 03 01       	push   0x1030000
    bbb7:	55                   	push   rbp
    bbb8:	09 03                	or     DWORD PTR [rbx],eax
    bbba:	20 46 00             	and    BYTE PTR [rsi+0x0],al
    bbbd:	00 00                	add    BYTE PTR [rax],al
    bbbf:	00 00                	add    BYTE PTR [rax],al
    bbc1:	00 03                	add    BYTE PTR [rbx],al
    bbc3:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    bbc7:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    bbca:	00 00                	add    BYTE PTR [rax],al
    bbcc:	00 00                	add    BYTE PTR [rax],al
    bbce:	00 00                	add    BYTE PTR [rax],al
    bbd0:	0a 8c 30 00 00 00 00 	or     cl,BYTE PTR [rax+rsi*1+0x0]
    bbd7:	00 00                	add    BYTE PTR [rax],al
    bbd9:	5b                   	pop    rbx
    bbda:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bbdd:	32 68 00             	xor    ch,BYTE PTR [rax+0x0]
    bbe0:	00 03                	add    BYTE PTR [rbx],al
    bbe2:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bbe5:	7d 00                	jge    bbe7 <_end+0x5bcf>
    bbe7:	03 01                	add    eax,DWORD PTR [rcx]
    bbe9:	58                   	pop    rax
    bbea:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    bbed:	03 01                	add    eax,DWORD PTR [rcx]
    bbef:	59                   	pop    rcx
    bbf0:	05 91 9c 7f 94       	add    eax,0x947f9c91
    bbf5:	04 00                	add    al,0x0
    bbf7:	07                   	(bad)
    bbf8:	94                   	xchg   esp,eax
    bbf9:	30 00                	xor    BYTE PTR [rax],al
    bbfb:	00 00                	add    BYTE PTR [rax],al
    bbfd:	00 00                	add    BYTE PTR [rax],al
    bbff:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    bc02:	00 00                	add    BYTE PTR [rax],al
    bc04:	03 01                	add    eax,DWORD PTR [rcx]
    bc06:	55                   	push   rbp
    bc07:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    bc0a:	00 00                	add    BYTE PTR [rax],al
    bc0c:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    bc10:	00 94 30 00 00 00 00 	add    BYTE PTR [rax+rsi*1+0x0],dl
    bc17:	00 00                	add    BYTE PTR [rax],al
    bc19:	02 00                	add    al,BYTE PTR [rax]
    bc1b:	94                   	xchg   esp,eax
    bc1c:	30 00                	xor    BYTE PTR [rax],al
    bc1e:	00 00                	add    BYTE PTR [rax],al
    bc20:	00 00                	add    BYTE PTR [rax],al
    bc22:	00 08                	add    BYTE PTR [rax],cl
    bc24:	00 00                	add    BYTE PTR [rax],al
    bc26:	00 00                	add    BYTE PTR [rax],al
    bc28:	00 00                	add    BYTE PTR [rax],al
    bc2a:	00 01                	add    BYTE PTR [rcx],al
    bc2c:	27                   	(bad)
    bc2d:	09 05 7a 73 00 00    	or     DWORD PTR [rip+0x737a],eax        # 12fad <_end+0xcf95>
    bc33:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    bc34:	26 00 00             	es add BYTE PTR [rax],al
    bc37:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    bc38:	26 00 00             	es add BYTE PTR [rax],al
    bc3b:	07                   	(bad)
    bc3c:	9c                   	pushf
    bc3d:	30 00                	xor    BYTE PTR [rax],al
    bc3f:	00 00                	add    BYTE PTR [rax],al
    bc41:	00 00                	add    BYTE PTR [rax],al
    bc43:	00 40 77             	add    BYTE PTR [rax+0x77],al
    bc46:	00 00                	add    BYTE PTR [rax],al
    bc48:	03 01                	add    eax,DWORD PTR [rcx]
    bc4a:	55                   	push   rbp
    bc4b:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    bc4e:	00 00                	add    BYTE PTR [rax],al
    bc50:	00 16                	add    BYTE PTR [rsi],dl
    bc52:	9c                   	pushf
    bc53:	30 00                	xor    BYTE PTR [rax],al
    bc55:	00 00                	add    BYTE PTR [rax],al
    bc57:	00 00                	add    BYTE PTR [rax],al
    bc59:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
    bc5c:	00 00                	add    BYTE PTR [rax],al
    bc5e:	00 00                	add    BYTE PTR [rax],al
    bc60:	00 00                	add    BYTE PTR [rax],al
    bc62:	97                   	xchg   edi,eax
    bc63:	6a 00                	push   0x0
    bc65:	00 17                	add    BYTE PTR [rdi],dl
    bc67:	6b 1e 00             	imul   ebx,DWORD PTR [rsi],0x0
    bc6a:	00 28                	add    BYTE PTR [rax],ch
    bc6c:	09 e9                	or     ecx,ebp
    bc6e:	41 00 00             	add    BYTE PTR [r8],al
    bc71:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    bc75:	00 9c 30 00 00 00 00 	add    BYTE PTR [rax+rsi*1+0x0],bl
    bc7c:	00 00                	add    BYTE PTR [rax],al
    bc7e:	04 00                	add    al,0x0
    bc80:	9c                   	pushf
    bc81:	30 00                	xor    BYTE PTR [rax],al
    bc83:	00 00                	add    BYTE PTR [rax],al
    bc85:	00 00                	add    BYTE PTR [rax],al
    bc87:	00 08                	add    BYTE PTR [rax],cl
    bc89:	00 00                	add    BYTE PTR [rax],al
    bc8b:	00 00                	add    BYTE PTR [rax],al
    bc8d:	00 00                	add    BYTE PTR [rax],al
    bc8f:	00 28                	add    BYTE PTR [rax],ch
    bc91:	09 f3                	or     ebx,esi
    bc93:	68 00 00 05 7a       	push   0x7a050000
    bc98:	73 00                	jae    bc9a <_end+0x5c82>
    bc9a:	00 b5 26 00 00 b3    	add    BYTE PTR [rbp-0x4cffffda],dh
    bca0:	26 00 00             	es add BYTE PTR [rax],al
    bca3:	07                   	(bad)
    bca4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    bca5:	30 00                	xor    BYTE PTR [rax],al
    bca7:	00 00                	add    BYTE PTR [rax],al
    bca9:	00 00                	add    BYTE PTR [rax],al
    bcab:	00 40 77             	add    BYTE PTR [rax+0x77],al
    bcae:	00 00                	add    BYTE PTR [rax],al
    bcb0:	03 01                	add    eax,DWORD PTR [rcx]
    bcb2:	55                   	push   rbp
    bcb3:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    bcb6:	00 00                	add    BYTE PTR [rax],al
    bcb8:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    bcbc:	00 a4 30 00 00 00 00 	add    BYTE PTR [rax+rsi*1+0x0],ah
    bcc3:	00 00                	add    BYTE PTR [rax],al
    bcc5:	02 00                	add    al,BYTE PTR [rax]
    bcc7:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    bcc8:	30 00                	xor    BYTE PTR [rax],al
    bcca:	00 00                	add    BYTE PTR [rax],al
    bccc:	00 00                	add    BYTE PTR [rax],al
    bcce:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bcd1:	00 00                	add    BYTE PTR [rax],al
    bcd3:	00 00                	add    BYTE PTR [rax],al
    bcd5:	00 00                	add    BYTE PTR [rax],al
    bcd7:	28 09                	sub    BYTE PTR [rcx],cl
    bcd9:	41 69 00 00 05 7a 73 	imul   eax,DWORD PTR [r8],0x737a0500
    bce0:	00 00                	add    BYTE PTR [rax],al
    bce2:	c4                   	(bad)
    bce3:	26 00 00             	es add BYTE PTR [rax],al
    bce6:	c2 26 00             	ret    0x26
    bce9:	00 07                	add    BYTE PTR [rdi],al
    bceb:	b0 30                	mov    al,0x30
    bced:	00 00                	add    BYTE PTR [rax],al
    bcef:	00 00                	add    BYTE PTR [rax],al
    bcf1:	00 00                	add    BYTE PTR [rax],al
    bcf3:	40 77 00             	rex ja bcf6 <_end+0x5cde>
    bcf6:	00 03                	add    BYTE PTR [rbx],al
    bcf8:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bcfb:	03 fa                	add    edi,edx
    bcfd:	41 00 00             	add    BYTE PTR [r8],al
    bd00:	00 00                	add    BYTE PTR [rax],al
    bd02:	00 00                	add    BYTE PTR [rax],al
    bd04:	00 00                	add    BYTE PTR [rax],al
    bd06:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    bd0a:	00 b0 30 00 00 00    	add    BYTE PTR [rax+0x30],dh
    bd10:	00 00                	add    BYTE PTR [rax],al
    bd12:	00 02                	add    BYTE PTR [rdx],al
    bd14:	00 b0 30 00 00 00    	add    BYTE PTR [rax+0x30],dh
    bd1a:	00 00                	add    BYTE PTR [rax],al
    bd1c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bd1f:	00 00                	add    BYTE PTR [rax],al
    bd21:	00 00                	add    BYTE PTR [rax],al
    bd23:	00 00                	add    BYTE PTR [rax],al
    bd25:	28 09                	sub    BYTE PTR [rcx],cl
    bd27:	8f 69 00 00          	(bad)
    bd2b:	05 7a 73 00 00       	add    eax,0x737a
    bd30:	d3 26                	shl    DWORD PTR [rsi],cl
    bd32:	00 00                	add    BYTE PTR [rax],al
    bd34:	d1 26                	shl    DWORD PTR [rsi],1
    bd36:	00 00                	add    BYTE PTR [rax],al
    bd38:	07                   	(bad)
    bd39:	bc 30 00 00 00       	mov    esp,0x30
    bd3e:	00 00                	add    BYTE PTR [rax],al
    bd40:	00 40 77             	add    BYTE PTR [rax+0x77],al
    bd43:	00 00                	add    BYTE PTR [rax],al
    bd45:	03 01                	add    eax,DWORD PTR [rcx]
    bd47:	55                   	push   rbp
    bd48:	09 03                	or     DWORD PTR [rbx],eax
    bd4a:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    bd4d:	00 00                	add    BYTE PTR [rax],al
    bd4f:	00 00                	add    BYTE PTR [rax],al
    bd51:	00 00                	add    BYTE PTR [rax],al
    bd53:	00 09                	add    BYTE PTR [rcx],cl
    bd55:	bb 52 00 00 bc       	mov    ebx,0xbc000052
    bd5a:	30 00                	xor    BYTE PTR [rax],al
    bd5c:	00 00                	add    BYTE PTR [rax],al
    bd5e:	00 00                	add    BYTE PTR [rax],al
    bd60:	00 03                	add    BYTE PTR [rbx],al
    bd62:	00 bc 30 00 00 00 00 	add    BYTE PTR [rax+rsi*1+0x0],bh
    bd69:	00 00                	add    BYTE PTR [rax],al
    bd6b:	3b 00                	cmp    eax,DWORD PTR [rax]
    bd6d:	00 00                	add    BYTE PTR [rax],al
    bd6f:	00 00                	add    BYTE PTR [rax],al
    bd71:	00 00                	add    BYTE PTR [rax],al
    bd73:	28 09                	sub    BYTE PTR [rcx],cl
    bd75:	52                   	push   rdx
    bd76:	6a 00                	push   0x0
    bd78:	00 05 fd 52 00 00    	add    BYTE PTR [rip+0x52fd],al        # 1107b <_end+0xb063>
    bd7e:	e2 26                	loop   bda6 <_end+0x5d8e>
    bd80:	00 00                	add    BYTE PTR [rax],al
    bd82:	e0 26                	loopne bdaa <_end+0x5d92>
    bd84:	00 00                	add    BYTE PTR [rax],al
    bd86:	05 f1 52 00 00       	add    eax,0x52f1
    bd8b:	ee                   	out    dx,al
    bd8c:	26 00 00             	es add BYTE PTR [rax],al
    bd8f:	ec                   	in     al,dx
    bd90:	26 00 00             	es add BYTE PTR [rax],al
    bd93:	0b e5                	or     esp,ebp
    bd95:	52                   	push   rdx
    bd96:	00 00                	add    BYTE PTR [rax],al
    bd98:	0b d9                	or     ebx,ecx
    bd9a:	52                   	push   rdx
    bd9b:	00 00                	add    BYTE PTR [rax],al
    bd9d:	0b cd                	or     ecx,ebp
    bd9f:	52                   	push   rdx
    bda0:	00 00                	add    BYTE PTR [rax],al
    bda2:	15 09 53 00 00       	adc    eax,0x5309
    bda7:	fa                   	cli
    bda8:	26 00 00             	es add BYTE PTR [rax],al
    bdab:	f6 26                	mul    BYTE PTR [rsi]
    bdad:	00 00                	add    BYTE PTR [rax],al
    bdaf:	0a cf                	or     cl,bh
    bdb1:	30 00                	xor    BYTE PTR [rax],al
    bdb3:	00 00                	add    BYTE PTR [rax],al
    bdb5:	00 00                	add    BYTE PTR [rax],al
    bdb7:	00 ff                	add    bh,bh
    bdb9:	3c 00                	cmp    al,0x0
    bdbb:	00 16                	add    BYTE PTR [rsi],dl
    bdbd:	6a 00                	push   0x0
    bdbf:	00 03                	add    BYTE PTR [rbx],al
    bdc1:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bdc4:	03 d0                	add    edx,eax
    bdc6:	45 00 00             	add    BYTE PTR [r8],r8b
    bdc9:	00 00                	add    BYTE PTR [rax],al
    bdcb:	00 00                	add    BYTE PTR [rax],al
    bdcd:	03 01                	add    eax,DWORD PTR [rcx]
    bdcf:	54                   	push   rsp
    bdd0:	09 03                	or     DWORD PTR [rbx],eax
    bdd2:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    bdd5:	00 00                	add    BYTE PTR [rax],al
    bdd7:	00 00                	add    BYTE PTR [rax],al
    bdd9:	00 00                	add    BYTE PTR [rax],al
    bddb:	0a ef                	or     ch,bh
    bddd:	30 00                	xor    BYTE PTR [rax],al
    bddf:	00 00                	add    BYTE PTR [rax],al
    bde1:	00 00                	add    BYTE PTR [rax],al
    bde3:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    bde6:	00 00                	add    BYTE PTR [rax],al
    bde8:	3d 6a 00 00 03       	cmp    eax,0x300006a
    bded:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bdf0:	7d 00                	jge    bdf2 <_end+0x5dda>
    bdf2:	03 01                	add    eax,DWORD PTR [rcx]
    bdf4:	58                   	pop    rax
    bdf5:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    bdf8:	03 01                	add    eax,DWORD PTR [rcx]
    bdfa:	59                   	pop    rcx
    bdfb:	05 91 9c 7f 94       	add    eax,0x947f9c91
    be00:	04 00                	add    al,0x0
    be02:	07                   	(bad)
    be03:	f7 30                	div    DWORD PTR [rax]
    be05:	00 00                	add    BYTE PTR [rax],al
    be07:	00 00                	add    BYTE PTR [rax],al
    be09:	00 00                	add    BYTE PTR [rax],al
    be0b:	4d 3c 00             	rex.WRB cmp al,0x0
    be0e:	00 03                	add    BYTE PTR [rbx],al
    be10:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    be13:	7d 00                	jge    be15 <_end+0x5dfd>
    be15:	00 00                	add    BYTE PTR [rax],al
    be17:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    be1b:	00 f7                	add    bh,dh
    be1d:	30 00                	xor    BYTE PTR [rax],al
    be1f:	00 00                	add    BYTE PTR [rax],al
    be21:	00 00                	add    BYTE PTR [rax],al
    be23:	00 02                	add    BYTE PTR [rdx],al
    be25:	00 f7                	add    bh,dh
    be27:	30 00                	xor    BYTE PTR [rax],al
    be29:	00 00                	add    BYTE PTR [rax],al
    be2b:	00 00                	add    BYTE PTR [rax],al
    be2d:	00 08                	add    BYTE PTR [rax],cl
    be2f:	00 00                	add    BYTE PTR [rax],al
    be31:	00 00                	add    BYTE PTR [rax],al
    be33:	00 00                	add    BYTE PTR [rax],al
    be35:	00 01                	add    BYTE PTR [rcx],al
    be37:	28 09                	sub    BYTE PTR [rcx],cl
    be39:	05 7a 73 00 00       	add    eax,0x737a
    be3e:	0b 27                	or     esp,DWORD PTR [rdi]
    be40:	00 00                	add    BYTE PTR [rax],al
    be42:	09 27                	or     DWORD PTR [rdi],esp
    be44:	00 00                	add    BYTE PTR [rax],al
    be46:	07                   	(bad)
    be47:	ff 30                	push   QWORD PTR [rax]
    be49:	00 00                	add    BYTE PTR [rax],al
    be4b:	00 00                	add    BYTE PTR [rax],al
    be4d:	00 00                	add    BYTE PTR [rax],al
    be4f:	40 77 00             	rex ja be52 <_end+0x5e3a>
    be52:	00 03                	add    BYTE PTR [rbx],al
    be54:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    be57:	73 00                	jae    be59 <_end+0x5e41>
    be59:	00 00                	add    BYTE PTR [rax],al
    be5b:	00 16                	add    BYTE PTR [rsi],dl
    be5d:	ff 30                	push   QWORD PTR [rax]
    be5f:	00 00                	add    BYTE PTR [rax],al
    be61:	00 00                	add    BYTE PTR [rax],al
    be63:	00 00                	add    BYTE PTR [rax],al
    be65:	63 00                	movsxd eax,DWORD PTR [rax]
    be67:	00 00                	add    BYTE PTR [rax],al
    be69:	00 00                	add    BYTE PTR [rax],al
    be6b:	00 00                	add    BYTE PTR [rax],al
    be6d:	a2 6c 00 00 17 ae 0d 	movabs ds:0xdae1700006c,al
    be74:	00 00 
    be76:	29 09                	sub    DWORD PTR [rcx],ecx
    be78:	e9 41 00 00 09       	jmp    900bebe <_end+0x9005ea6>
    be7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    be7e:	73 00                	jae    be80 <_end+0x5e68>
    be80:	00 ff                	add    bh,bh
    be82:	30 00                	xor    BYTE PTR [rax],al
    be84:	00 00                	add    BYTE PTR [rax],al
    be86:	00 00                	add    BYTE PTR [rax],al
    be88:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    be8b:	ff 30                	push   QWORD PTR [rax]
    be8d:	00 00                	add    BYTE PTR [rax],al
    be8f:	00 00                	add    BYTE PTR [rax],al
    be91:	00 00                	add    BYTE PTR [rax],al
    be93:	08 00                	or     BYTE PTR [rax],al
    be95:	00 00                	add    BYTE PTR [rax],al
    be97:	00 00                	add    BYTE PTR [rax],al
    be99:	00 00                	add    BYTE PTR [rax],al
    be9b:	29 09                	sub    DWORD PTR [rcx],ecx
    be9d:	fe                   	(bad)
    be9e:	6a 00                	push   0x0
    bea0:	00 05 7a 73 00 00    	add    BYTE PTR [rip+0x737a],al        # 13220 <_end+0xd208>
    bea6:	1a 27                	sbb    ah,BYTE PTR [rdi]
    bea8:	00 00                	add    BYTE PTR [rax],al
    beaa:	18 27                	sbb    BYTE PTR [rdi],ah
    beac:	00 00                	add    BYTE PTR [rax],al
    beae:	07                   	(bad)
    beaf:	07                   	(bad)
    beb0:	31 00                	xor    DWORD PTR [rax],eax
    beb2:	00 00                	add    BYTE PTR [rax],al
    beb4:	00 00                	add    BYTE PTR [rax],al
    beb6:	00 40 77             	add    BYTE PTR [rax+0x77],al
    beb9:	00 00                	add    BYTE PTR [rax],al
    bebb:	03 01                	add    eax,DWORD PTR [rcx]
    bebd:	55                   	push   rbp
    bebe:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    bec1:	00 00                	add    BYTE PTR [rax],al
    bec3:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    bec7:	00 07                	add    BYTE PTR [rdi],al
    bec9:	31 00                	xor    DWORD PTR [rax],eax
    becb:	00 00                	add    BYTE PTR [rax],al
    becd:	00 00                	add    BYTE PTR [rax],al
    becf:	00 02                	add    BYTE PTR [rdx],al
    bed1:	00 07                	add    BYTE PTR [rdi],al
    bed3:	31 00                	xor    DWORD PTR [rax],eax
    bed5:	00 00                	add    BYTE PTR [rax],al
    bed7:	00 00                	add    BYTE PTR [rax],al
    bed9:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bedc:	00 00                	add    BYTE PTR [rax],al
    bede:	00 00                	add    BYTE PTR [rax],al
    bee0:	00 00                	add    BYTE PTR [rax],al
    bee2:	29 09                	sub    DWORD PTR [rcx],ecx
    bee4:	4c 6b 00 00          	imul   r8,QWORD PTR [rax],0x0
    bee8:	05 7a 73 00 00       	add    eax,0x737a
    beed:	29 27                	sub    DWORD PTR [rdi],esp
    beef:	00 00                	add    BYTE PTR [rax],al
    bef1:	27                   	(bad)
    bef2:	27                   	(bad)
    bef3:	00 00                	add    BYTE PTR [rax],al
    bef5:	07                   	(bad)
    bef6:	13 31                	adc    esi,DWORD PTR [rcx]
    bef8:	00 00                	add    BYTE PTR [rax],al
    befa:	00 00                	add    BYTE PTR [rax],al
    befc:	00 00                	add    BYTE PTR [rax],al
    befe:	40 77 00             	rex ja bf01 <_end+0x5ee9>
    bf01:	00 03                	add    BYTE PTR [rbx],al
    bf03:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bf06:	03 02                	add    eax,DWORD PTR [rdx]
    bf08:	42 00 00             	rex.X add BYTE PTR [rax],al
    bf0b:	00 00                	add    BYTE PTR [rax],al
    bf0d:	00 00                	add    BYTE PTR [rax],al
    bf0f:	00 00                	add    BYTE PTR [rax],al
    bf11:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    bf15:	00 13                	add    BYTE PTR [rbx],dl
    bf17:	31 00                	xor    DWORD PTR [rax],eax
    bf19:	00 00                	add    BYTE PTR [rax],al
    bf1b:	00 00                	add    BYTE PTR [rax],al
    bf1d:	00 02                	add    BYTE PTR [rdx],al
    bf1f:	00 13                	add    BYTE PTR [rbx],dl
    bf21:	31 00                	xor    DWORD PTR [rax],eax
    bf23:	00 00                	add    BYTE PTR [rax],al
    bf25:	00 00                	add    BYTE PTR [rax],al
    bf27:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bf2a:	00 00                	add    BYTE PTR [rax],al
    bf2c:	00 00                	add    BYTE PTR [rax],al
    bf2e:	00 00                	add    BYTE PTR [rax],al
    bf30:	29 09                	sub    DWORD PTR [rcx],ecx
    bf32:	9a                   	(bad)
    bf33:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    bf36:	05 7a 73 00 00       	add    eax,0x737a
    bf3b:	38 27                	cmp    BYTE PTR [rdi],ah
    bf3d:	00 00                	add    BYTE PTR [rax],al
    bf3f:	36 27                	ss (bad)
    bf41:	00 00                	add    BYTE PTR [rax],al
    bf43:	07                   	(bad)
    bf44:	1f                   	(bad)
    bf45:	31 00                	xor    DWORD PTR [rax],eax
    bf47:	00 00                	add    BYTE PTR [rax],al
    bf49:	00 00                	add    BYTE PTR [rax],al
    bf4b:	00 40 77             	add    BYTE PTR [rax+0x77],al
    bf4e:	00 00                	add    BYTE PTR [rax],al
    bf50:	03 01                	add    eax,DWORD PTR [rcx]
    bf52:	55                   	push   rbp
    bf53:	09 03                	or     DWORD PTR [rbx],eax
    bf55:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    bf58:	00 00                	add    BYTE PTR [rax],al
    bf5a:	00 00                	add    BYTE PTR [rax],al
    bf5c:	00 00                	add    BYTE PTR [rax],al
    bf5e:	00 09                	add    BYTE PTR [rcx],cl
    bf60:	bb 52 00 00 1f       	mov    ebx,0x1f000052
    bf65:	31 00                	xor    DWORD PTR [rax],eax
    bf67:	00 00                	add    BYTE PTR [rax],al
    bf69:	00 00                	add    BYTE PTR [rax],al
    bf6b:	00 03                	add    BYTE PTR [rbx],al
    bf6d:	00 1f                	add    BYTE PTR [rdi],bl
    bf6f:	31 00                	xor    DWORD PTR [rax],eax
    bf71:	00 00                	add    BYTE PTR [rax],al
    bf73:	00 00                	add    BYTE PTR [rax],al
    bf75:	00 3b                	add    BYTE PTR [rbx],bh
    bf77:	00 00                	add    BYTE PTR [rax],al
    bf79:	00 00                	add    BYTE PTR [rax],al
    bf7b:	00 00                	add    BYTE PTR [rax],al
    bf7d:	00 29                	add    BYTE PTR [rcx],ch
    bf7f:	09 5d 6c             	or     DWORD PTR [rbp+0x6c],ebx
    bf82:	00 00                	add    BYTE PTR [rax],al
    bf84:	05 fd 52 00 00       	add    eax,0x52fd
    bf89:	47 27                	rex.RXB (bad)
    bf8b:	00 00                	add    BYTE PTR [rax],al
    bf8d:	45 27                	rex.RB (bad)
    bf8f:	00 00                	add    BYTE PTR [rax],al
    bf91:	05 f1 52 00 00       	add    eax,0x52f1
    bf96:	53                   	push   rbx
    bf97:	27                   	(bad)
    bf98:	00 00                	add    BYTE PTR [rax],al
    bf9a:	51                   	push   rcx
    bf9b:	27                   	(bad)
    bf9c:	00 00                	add    BYTE PTR [rax],al
    bf9e:	0b e5                	or     esp,ebp
    bfa0:	52                   	push   rdx
    bfa1:	00 00                	add    BYTE PTR [rax],al
    bfa3:	0b d9                	or     ebx,ecx
    bfa5:	52                   	push   rdx
    bfa6:	00 00                	add    BYTE PTR [rax],al
    bfa8:	0b cd                	or     ecx,ebp
    bfaa:	52                   	push   rdx
    bfab:	00 00                	add    BYTE PTR [rax],al
    bfad:	15 09 53 00 00       	adc    eax,0x5309
    bfb2:	5f                   	pop    rdi
    bfb3:	27                   	(bad)
    bfb4:	00 00                	add    BYTE PTR [rax],al
    bfb6:	5b                   	pop    rbx
    bfb7:	27                   	(bad)
    bfb8:	00 00                	add    BYTE PTR [rax],al
    bfba:	0a 32                	or     dh,BYTE PTR [rdx]
    bfbc:	31 00                	xor    DWORD PTR [rax],eax
    bfbe:	00 00                	add    BYTE PTR [rax],al
    bfc0:	00 00                	add    BYTE PTR [rax],al
    bfc2:	00 ff                	add    bh,bh
    bfc4:	3c 00                	cmp    al,0x0
    bfc6:	00 21                	add    BYTE PTR [rcx],ah
    bfc8:	6c                   	ins    BYTE PTR es:[rdi],dx
    bfc9:	00 00                	add    BYTE PTR [rax],al
    bfcb:	03 01                	add    eax,DWORD PTR [rcx]
    bfcd:	55                   	push   rbp
    bfce:	09 03                	or     DWORD PTR [rbx],eax
    bfd0:	06                   	(bad)
    bfd1:	42 00 00             	rex.X add BYTE PTR [rax],al
    bfd4:	00 00                	add    BYTE PTR [rax],al
    bfd6:	00 00                	add    BYTE PTR [rax],al
    bfd8:	03 01                	add    eax,DWORD PTR [rcx]
    bfda:	54                   	push   rsp
    bfdb:	09 03                	or     DWORD PTR [rbx],eax
    bfdd:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    bfe0:	00 00                	add    BYTE PTR [rax],al
    bfe2:	00 00                	add    BYTE PTR [rax],al
    bfe4:	00 00                	add    BYTE PTR [rax],al
    bfe6:	0a 52 31             	or     dl,BYTE PTR [rdx+0x31]
    bfe9:	00 00                	add    BYTE PTR [rax],al
    bfeb:	00 00                	add    BYTE PTR [rax],al
    bfed:	00 00                	add    BYTE PTR [rax],al
    bfef:	5b                   	pop    rbx
    bff0:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bff3:	48 6c                	rex.W ins BYTE PTR es:[rdi],dx
    bff5:	00 00                	add    BYTE PTR [rax],al
    bff7:	03 01                	add    eax,DWORD PTR [rcx]
    bff9:	55                   	push   rbp
    bffa:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    bffd:	03 01                	add    eax,DWORD PTR [rcx]
    bfff:	58                   	pop    rax
    c000:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c003:	03 01                	add    eax,DWORD PTR [rcx]
    c005:	59                   	pop    rcx
    c006:	05 91 9c 7f 94       	add    eax,0x947f9c91
    c00b:	04 00                	add    al,0x0
    c00d:	07                   	(bad)
    c00e:	5a                   	pop    rdx
    c00f:	31 00                	xor    DWORD PTR [rax],eax
    c011:	00 00                	add    BYTE PTR [rax],al
    c013:	00 00                	add    BYTE PTR [rax],al
    c015:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    c018:	00 00                	add    BYTE PTR [rax],al
    c01a:	03 01                	add    eax,DWORD PTR [rcx]
    c01c:	55                   	push   rbp
    c01d:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c020:	00 00                	add    BYTE PTR [rax],al
    c022:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    c026:	00 5a 31             	add    BYTE PTR [rdx+0x31],bl
    c029:	00 00                	add    BYTE PTR [rax],al
    c02b:	00 00                	add    BYTE PTR [rax],al
    c02d:	00 00                	add    BYTE PTR [rax],al
    c02f:	02 00                	add    al,BYTE PTR [rax]
    c031:	5a                   	pop    rdx
    c032:	31 00                	xor    DWORD PTR [rax],eax
    c034:	00 00                	add    BYTE PTR [rax],al
    c036:	00 00                	add    BYTE PTR [rax],al
    c038:	00 08                	add    BYTE PTR [rax],cl
    c03a:	00 00                	add    BYTE PTR [rax],al
    c03c:	00 00                	add    BYTE PTR [rax],al
    c03e:	00 00                	add    BYTE PTR [rax],al
    c040:	00 01                	add    BYTE PTR [rcx],al
    c042:	29 09                	sub    DWORD PTR [rcx],ecx
    c044:	05 7a 73 00 00       	add    eax,0x737a
    c049:	70 27                	jo     c072 <_end+0x605a>
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c04e:	27                   	(bad)
    c04f:	00 00                	add    BYTE PTR [rax],al
    c051:	07                   	(bad)
    c052:	62 31 00 00 00       	(bad)
    c057:	00 00                	add    BYTE PTR [rax],al
    c059:	00 40 77             	add    BYTE PTR [rax+0x77],al
    c05c:	00 00                	add    BYTE PTR [rax],al
    c05e:	03 01                	add    eax,DWORD PTR [rcx]
    c060:	55                   	push   rbp
    c061:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c064:	00 00                	add    BYTE PTR [rax],al
    c066:	00 16                	add    BYTE PTR [rsi],dl
    c068:	62 31 00 00 00       	(bad)
    c06d:	00 00                	add    BYTE PTR [rax],al
    c06f:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
    c072:	00 00                	add    BYTE PTR [rax],al
    c074:	00 00                	add    BYTE PTR [rax],al
    c076:	00 00                	add    BYTE PTR [rax],al
    c078:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    c079:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c07a:	00 00                	add    BYTE PTR [rax],al
    c07c:	17                   	(bad)
    c07d:	64 34 00             	fs xor al,0x0
    c080:	00 2a                	add    BYTE PTR [rdx],ch
    c082:	09 e9                	or     ecx,ebp
    c084:	41 00 00             	add    BYTE PTR [r8],al
    c087:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    c08b:	00 62 31             	add    BYTE PTR [rdx+0x31],ah
    c08e:	00 00                	add    BYTE PTR [rax],al
    c090:	00 00                	add    BYTE PTR [rax],al
    c092:	00 00                	add    BYTE PTR [rax],al
    c094:	04 00                	add    al,0x0
    c096:	62 31 00 00 00       	(bad)
    c09b:	00 00                	add    BYTE PTR [rax],al
    c09d:	00 08                	add    BYTE PTR [rax],cl
    c09f:	00 00                	add    BYTE PTR [rax],al
    c0a1:	00 00                	add    BYTE PTR [rax],al
    c0a3:	00 00                	add    BYTE PTR [rax],al
    c0a5:	00 2a                	add    BYTE PTR [rdx],ch
    c0a7:	09 09                	or     DWORD PTR [rcx],ecx
    c0a9:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0aa:	00 00                	add    BYTE PTR [rax],al
    c0ac:	05 7a 73 00 00       	add    eax,0x737a
    c0b1:	7f 27                	jg     c0da <_end+0x60c2>
    c0b3:	00 00                	add    BYTE PTR [rax],al
    c0b5:	7d 27                	jge    c0de <_end+0x60c6>
    c0b7:	00 00                	add    BYTE PTR [rax],al
    c0b9:	07                   	(bad)
    c0ba:	6a 31                	push   0x31
    c0bc:	00 00                	add    BYTE PTR [rax],al
    c0be:	00 00                	add    BYTE PTR [rax],al
    c0c0:	00 00                	add    BYTE PTR [rax],al
    c0c2:	40 77 00             	rex ja c0c5 <_end+0x60ad>
    c0c5:	00 03                	add    BYTE PTR [rbx],al
    c0c7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c0ca:	7f 00                	jg     c0cc <_end+0x60b4>
    c0cc:	00 00                	add    BYTE PTR [rax],al
    c0ce:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    c0d2:	00 6a 31             	add    BYTE PTR [rdx+0x31],ch
    c0d5:	00 00                	add    BYTE PTR [rax],al
    c0d7:	00 00                	add    BYTE PTR [rax],al
    c0d9:	00 00                	add    BYTE PTR [rax],al
    c0db:	02 00                	add    al,BYTE PTR [rax]
    c0dd:	6a 31                	push   0x31
    c0df:	00 00                	add    BYTE PTR [rax],al
    c0e1:	00 00                	add    BYTE PTR [rax],al
    c0e3:	00 00                	add    BYTE PTR [rax],al
    c0e5:	0c 00                	or     al,0x0
    c0e7:	00 00                	add    BYTE PTR [rax],al
    c0e9:	00 00                	add    BYTE PTR [rax],al
    c0eb:	00 00                	add    BYTE PTR [rax],al
    c0ed:	2a 09                	sub    cl,BYTE PTR [rcx]
    c0ef:	57                   	push   rdi
    c0f0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0f1:	00 00                	add    BYTE PTR [rax],al
    c0f3:	05 7a 73 00 00       	add    eax,0x737a
    c0f8:	8e 27                	mov    fs,WORD PTR [rdi]
    c0fa:	00 00                	add    BYTE PTR [rax],al
    c0fc:	8c 27                	mov    WORD PTR [rdi],fs
    c0fe:	00 00                	add    BYTE PTR [rax],al
    c100:	07                   	(bad)
    c101:	76 31                	jbe    c134 <_end+0x611c>
    c103:	00 00                	add    BYTE PTR [rax],al
    c105:	00 00                	add    BYTE PTR [rax],al
    c107:	00 00                	add    BYTE PTR [rax],al
    c109:	40 77 00             	rex ja c10c <_end+0x60f4>
    c10c:	00 03                	add    BYTE PTR [rbx],al
    c10e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c111:	03 23                	add    esp,DWORD PTR [rbx]
    c113:	42 00 00             	rex.X add BYTE PTR [rax],al
    c116:	00 00                	add    BYTE PTR [rax],al
    c118:	00 00                	add    BYTE PTR [rax],al
    c11a:	00 00                	add    BYTE PTR [rax],al
    c11c:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    c120:	00 76 31             	add    BYTE PTR [rsi+0x31],dh
    c123:	00 00                	add    BYTE PTR [rax],al
    c125:	00 00                	add    BYTE PTR [rax],al
    c127:	00 00                	add    BYTE PTR [rax],al
    c129:	02 00                	add    al,BYTE PTR [rax]
    c12b:	76 31                	jbe    c15e <_end+0x6146>
    c12d:	00 00                	add    BYTE PTR [rax],al
    c12f:	00 00                	add    BYTE PTR [rax],al
    c131:	00 00                	add    BYTE PTR [rax],al
    c133:	0c 00                	or     al,0x0
    c135:	00 00                	add    BYTE PTR [rax],al
    c137:	00 00                	add    BYTE PTR [rax],al
    c139:	00 00                	add    BYTE PTR [rax],al
    c13b:	2a 09                	sub    cl,BYTE PTR [rcx]
    c13d:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    c13e:	6d                   	ins    DWORD PTR es:[rdi],dx
    c13f:	00 00                	add    BYTE PTR [rax],al
    c141:	05 7a 73 00 00       	add    eax,0x737a
    c146:	9d                   	popf
    c147:	27                   	(bad)
    c148:	00 00                	add    BYTE PTR [rax],al
    c14a:	9b                   	fwait
    c14b:	27                   	(bad)
    c14c:	00 00                	add    BYTE PTR [rax],al
    c14e:	07                   	(bad)
    c14f:	82                   	(bad)
    c150:	31 00                	xor    DWORD PTR [rax],eax
    c152:	00 00                	add    BYTE PTR [rax],al
    c154:	00 00                	add    BYTE PTR [rax],al
    c156:	00 40 77             	add    BYTE PTR [rax+0x77],al
    c159:	00 00                	add    BYTE PTR [rax],al
    c15b:	03 01                	add    eax,DWORD PTR [rcx]
    c15d:	55                   	push   rbp
    c15e:	09 03                	or     DWORD PTR [rbx],eax
    c160:	38 45 00             	cmp    BYTE PTR [rbp+0x0],al
    c163:	00 00                	add    BYTE PTR [rax],al
    c165:	00 00                	add    BYTE PTR [rax],al
    c167:	00 00                	add    BYTE PTR [rax],al
    c169:	00 09                	add    BYTE PTR [rcx],cl
    c16b:	bb 52 00 00 82       	mov    ebx,0x82000052
    c170:	31 00                	xor    DWORD PTR [rax],eax
    c172:	00 00                	add    BYTE PTR [rax],al
    c174:	00 00                	add    BYTE PTR [rax],al
    c176:	00 03                	add    BYTE PTR [rbx],al
    c178:	00 82 31 00 00 00    	add    BYTE PTR [rdx+0x31],al
    c17e:	00 00                	add    BYTE PTR [rax],al
    c180:	00 3b                	add    BYTE PTR [rbx],bh
    c182:	00 00                	add    BYTE PTR [rax],al
    c184:	00 00                	add    BYTE PTR [rax],al
    c186:	00 00                	add    BYTE PTR [rax],al
    c188:	00 2a                	add    BYTE PTR [rdx],ch
    c18a:	09 68 6e             	or     DWORD PTR [rax+0x6e],ebp
    c18d:	00 00                	add    BYTE PTR [rax],al
    c18f:	05 fd 52 00 00       	add    eax,0x52fd
    c194:	ac                   	lods   al,BYTE PTR ds:[rsi]
    c195:	27                   	(bad)
    c196:	00 00                	add    BYTE PTR [rax],al
    c198:	aa                   	stos   BYTE PTR es:[rdi],al
    c199:	27                   	(bad)
    c19a:	00 00                	add    BYTE PTR [rax],al
    c19c:	05 f1 52 00 00       	add    eax,0x52f1
    c1a1:	b8 27 00 00 b6       	mov    eax,0xb6000027
    c1a6:	27                   	(bad)
    c1a7:	00 00                	add    BYTE PTR [rax],al
    c1a9:	0b e5                	or     esp,ebp
    c1ab:	52                   	push   rdx
    c1ac:	00 00                	add    BYTE PTR [rax],al
    c1ae:	0b d9                	or     ebx,ecx
    c1b0:	52                   	push   rdx
    c1b1:	00 00                	add    BYTE PTR [rax],al
    c1b3:	0b cd                	or     ecx,ebp
    c1b5:	52                   	push   rdx
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	15 09 53 00 00       	adc    eax,0x5309
    c1bd:	c4 27 00 00          	(bad)
    c1c1:	c0 27 00             	shl    BYTE PTR [rdi],0x0
    c1c4:	00 0a                	add    BYTE PTR [rdx],cl
    c1c6:	95                   	xchg   ebp,eax
    c1c7:	31 00                	xor    DWORD PTR [rax],eax
    c1c9:	00 00                	add    BYTE PTR [rax],al
    c1cb:	00 00                	add    BYTE PTR [rax],al
    c1cd:	00 ff                	add    bh,bh
    c1cf:	3c 00                	cmp    al,0x0
    c1d1:	00 2c 6e             	add    BYTE PTR [rsi+rbp*2],ch
    c1d4:	00 00                	add    BYTE PTR [rax],al
    c1d6:	03 01                	add    eax,DWORD PTR [rcx]
    c1d8:	55                   	push   rbp
    c1d9:	09 03                	or     DWORD PTR [rbx],eax
    c1db:	f8                   	clc
    c1dc:	45 00 00             	add    BYTE PTR [r8],r8b
    c1df:	00 00                	add    BYTE PTR [rax],al
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	03 01                	add    eax,DWORD PTR [rcx]
    c1e5:	54                   	push   rsp
    c1e6:	09 03                	or     DWORD PTR [rbx],eax
    c1e8:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    c1eb:	00 00                	add    BYTE PTR [rax],al
    c1ed:	00 00                	add    BYTE PTR [rax],al
    c1ef:	00 00                	add    BYTE PTR [rax],al
    c1f1:	0a b5 31 00 00 00    	or     dh,BYTE PTR [rbp+0x31]
    c1f7:	00 00                	add    BYTE PTR [rax],al
    c1f9:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    c1fc:	00 00                	add    BYTE PTR [rax],al
    c1fe:	53                   	push   rbx
    c1ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c200:	00 00                	add    BYTE PTR [rax],al
    c202:	03 01                	add    eax,DWORD PTR [rcx]
    c204:	55                   	push   rbp
    c205:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c208:	03 01                	add    eax,DWORD PTR [rcx]
    c20a:	58                   	pop    rax
    c20b:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c20e:	03 01                	add    eax,DWORD PTR [rcx]
    c210:	59                   	pop    rcx
    c211:	05 91 9c 7f 94       	add    eax,0x947f9c91
    c216:	04 00                	add    al,0x0
    c218:	07                   	(bad)
    c219:	bd 31 00 00 00       	mov    ebp,0x31
    c21e:	00 00                	add    BYTE PTR [rax],al
    c220:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    c223:	00 00                	add    BYTE PTR [rax],al
    c225:	03 01                	add    eax,DWORD PTR [rcx]
    c227:	55                   	push   rbp
    c228:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c22b:	00 00                	add    BYTE PTR [rax],al
    c22d:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    c231:	00 bd 31 00 00 00    	add    BYTE PTR [rbp+0x31],bh
    c237:	00 00                	add    BYTE PTR [rax],al
    c239:	00 02                	add    BYTE PTR [rdx],al
    c23b:	00 bd 31 00 00 00    	add    BYTE PTR [rbp+0x31],bh
    c241:	00 00                	add    BYTE PTR [rax],al
    c243:	00 08                	add    BYTE PTR [rax],cl
    c245:	00 00                	add    BYTE PTR [rax],al
    c247:	00 00                	add    BYTE PTR [rax],al
    c249:	00 00                	add    BYTE PTR [rax],al
    c24b:	00 01                	add    BYTE PTR [rcx],al
    c24d:	2a 09                	sub    cl,BYTE PTR [rcx]
    c24f:	05 7a 73 00 00       	add    eax,0x737a
    c254:	d5 27 00 00          	{rex2 0x27} add BYTE PTR [r8],r8b
    c258:	d3 27                	shl    DWORD PTR [rdi],cl
    c25a:	00 00                	add    BYTE PTR [rax],al
    c25c:	07                   	(bad)
    c25d:	c5 31 00             	(bad)
    c260:	00 00                	add    BYTE PTR [rax],al
    c262:	00 00                	add    BYTE PTR [rax],al
    c264:	00 40 77             	add    BYTE PTR [rax+0x77],al
    c267:	00 00                	add    BYTE PTR [rax],al
    c269:	03 01                	add    eax,DWORD PTR [rcx]
    c26b:	55                   	push   rbp
    c26c:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c26f:	00 00                	add    BYTE PTR [rax],al
    c271:	00 16                	add    BYTE PTR [rsi],dl
    c273:	c5 31 00             	(bad)
    c276:	00 00                	add    BYTE PTR [rax],al
    c278:	00 00                	add    BYTE PTR [rax],al
    c27a:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
    c27d:	00 00                	add    BYTE PTR [rax],al
    c27f:	00 00                	add    BYTE PTR [rax],al
    c281:	00 00                	add    BYTE PTR [rax],al
    c283:	b8 70 00 00 17       	mov    eax,0x17000070
    c288:	c2 12 00             	ret    0x12
    c28b:	00 2b                	add    BYTE PTR [rbx],ch
    c28d:	09 e9                	or     ecx,ebp
    c28f:	41 00 00             	add    BYTE PTR [r8],al
    c292:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    c296:	00 c5                	add    ch,al
    c298:	31 00                	xor    DWORD PTR [rax],eax
    c29a:	00 00                	add    BYTE PTR [rax],al
    c29c:	00 00                	add    BYTE PTR [rax],al
    c29e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c2a1:	c5 31 00             	(bad)
    c2a4:	00 00                	add    BYTE PTR [rax],al
    c2a6:	00 00                	add    BYTE PTR [rax],al
    c2a8:	00 08                	add    BYTE PTR [rax],cl
    c2aa:	00 00                	add    BYTE PTR [rax],al
    c2ac:	00 00                	add    BYTE PTR [rax],al
    c2ae:	00 00                	add    BYTE PTR [rax],al
    c2b0:	00 2b                	add    BYTE PTR [rbx],ch
    c2b2:	09 14 6f             	or     DWORD PTR [rdi+rbp*2],edx
    c2b5:	00 00                	add    BYTE PTR [rax],al
    c2b7:	05 7a 73 00 00       	add    eax,0x737a
    c2bc:	e4 27                	in     al,0x27
    c2be:	00 00                	add    BYTE PTR [rax],al
    c2c0:	e2 27                	loop   c2e9 <_end+0x62d1>
    c2c2:	00 00                	add    BYTE PTR [rax],al
    c2c4:	07                   	(bad)
    c2c5:	cd 31                	int    0x31
    c2c7:	00 00                	add    BYTE PTR [rax],al
    c2c9:	00 00                	add    BYTE PTR [rax],al
    c2cb:	00 00                	add    BYTE PTR [rax],al
    c2cd:	40 77 00             	rex ja c2d0 <_end+0x62b8>
    c2d0:	00 03                	add    BYTE PTR [rbx],al
    c2d2:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c2d5:	7f 00                	jg     c2d7 <_end+0x62bf>
    c2d7:	00 00                	add    BYTE PTR [rax],al
    c2d9:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    c2dd:	00 cd                	add    ch,cl
    c2df:	31 00                	xor    DWORD PTR [rax],eax
    c2e1:	00 00                	add    BYTE PTR [rax],al
    c2e3:	00 00                	add    BYTE PTR [rax],al
    c2e5:	00 02                	add    BYTE PTR [rdx],al
    c2e7:	00 cd                	add    ch,cl
    c2e9:	31 00                	xor    DWORD PTR [rax],eax
    c2eb:	00 00                	add    BYTE PTR [rax],al
    c2ed:	00 00                	add    BYTE PTR [rax],al
    c2ef:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c2f2:	00 00                	add    BYTE PTR [rax],al
    c2f4:	00 00                	add    BYTE PTR [rax],al
    c2f6:	00 00                	add    BYTE PTR [rax],al
    c2f8:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c2fa:	62 6f 00 00 05       	(bad)
    c2ff:	7a 73                	jp     c374 <_end+0x635c>
    c301:	00 00                	add    BYTE PTR [rax],al
    c303:	f3 27                	repz (bad)
    c305:	00 00                	add    BYTE PTR [rax],al
    c307:	f1                   	int1
    c308:	27                   	(bad)
    c309:	00 00                	add    BYTE PTR [rax],al
    c30b:	07                   	(bad)
    c30c:	d9 31                	fnstenv [rcx]
    c30e:	00 00                	add    BYTE PTR [rax],al
    c310:	00 00                	add    BYTE PTR [rax],al
    c312:	00 00                	add    BYTE PTR [rax],al
    c314:	40 77 00             	rex ja c317 <_end+0x62ff>
    c317:	00 03                	add    BYTE PTR [rbx],al
    c319:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c31c:	03 2b                	add    ebp,DWORD PTR [rbx]
    c31e:	42 00 00             	rex.X add BYTE PTR [rax],al
    c321:	00 00                	add    BYTE PTR [rax],al
    c323:	00 00                	add    BYTE PTR [rax],al
    c325:	00 00                	add    BYTE PTR [rax],al
    c327:	09 6c 73 00          	or     DWORD PTR [rbx+rsi*2+0x0],ebp
    c32b:	00 d9                	add    cl,bl
    c32d:	31 00                	xor    DWORD PTR [rax],eax
    c32f:	00 00                	add    BYTE PTR [rax],al
    c331:	00 00                	add    BYTE PTR [rax],al
    c333:	00 02                	add    BYTE PTR [rdx],al
    c335:	00 d9                	add    cl,bl
    c337:	31 00                	xor    DWORD PTR [rax],eax
    c339:	00 00                	add    BYTE PTR [rax],al
    c33b:	00 00                	add    BYTE PTR [rax],al
    c33d:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c340:	00 00                	add    BYTE PTR [rax],al
    c342:	00 00                	add    BYTE PTR [rax],al
    c344:	00 00                	add    BYTE PTR [rax],al
    c346:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c348:	b0 6f                	mov    al,0x6f
    c34a:	00 00                	add    BYTE PTR [rax],al
    c34c:	05 7a 73 00 00       	add    eax,0x737a
    c351:	02 28                	add    ch,BYTE PTR [rax]
    c353:	00 00                	add    BYTE PTR [rax],al
    c355:	00 28                	add    BYTE PTR [rax],ch
    c357:	00 00                	add    BYTE PTR [rax],al
    c359:	07                   	(bad)
    c35a:	e5 31                	in     eax,0x31
    c35c:	00 00                	add    BYTE PTR [rax],al
    c35e:	00 00                	add    BYTE PTR [rax],al
    c360:	00 00                	add    BYTE PTR [rax],al
    c362:	40 77 00             	rex ja c365 <_end+0x634d>
    c365:	00 03                	add    BYTE PTR [rbx],al
    c367:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c36a:	03 38                	add    edi,DWORD PTR [rax]
    c36c:	45 00 00             	add    BYTE PTR [r8],r8b
    c36f:	00 00                	add    BYTE PTR [rax],al
    c371:	00 00                	add    BYTE PTR [rax],al
    c373:	00 00                	add    BYTE PTR [rax],al
    c375:	09 bb 52 00 00 e5    	or     DWORD PTR [rbx-0x1affffae],edi
    c37b:	31 00                	xor    DWORD PTR [rax],eax
    c37d:	00 00                	add    BYTE PTR [rax],al
    c37f:	00 00                	add    BYTE PTR [rax],al
    c381:	00 03                	add    BYTE PTR [rbx],al
    c383:	00 e5                	add    ch,ah
    c385:	31 00                	xor    DWORD PTR [rax],eax
    c387:	00 00                	add    BYTE PTR [rax],al
    c389:	00 00                	add    BYTE PTR [rax],al
    c38b:	00 3b                	add    BYTE PTR [rbx],bh
    c38d:	00 00                	add    BYTE PTR [rax],al
    c38f:	00 00                	add    BYTE PTR [rax],al
    c391:	00 00                	add    BYTE PTR [rax],al
    c393:	00 2b                	add    BYTE PTR [rbx],ch
    c395:	09 73 70             	or     DWORD PTR [rbx+0x70],esi
    c398:	00 00                	add    BYTE PTR [rax],al
    c39a:	05 fd 52 00 00       	add    eax,0x52fd
    c39f:	11 28                	adc    DWORD PTR [rax],ebp
    c3a1:	00 00                	add    BYTE PTR [rax],al
    c3a3:	0f 28 00             	movaps xmm0,XMMWORD PTR [rax]
    c3a6:	00 05 f1 52 00 00    	add    BYTE PTR [rip+0x52f1],al        # 1169d <_end+0xb685>
    c3ac:	1d 28 00 00 1b       	sbb    eax,0x1b000028
    c3b1:	28 00                	sub    BYTE PTR [rax],al
    c3b3:	00 0b                	add    BYTE PTR [rbx],cl
    c3b5:	e5 52                	in     eax,0x52
    c3b7:	00 00                	add    BYTE PTR [rax],al
    c3b9:	0b d9                	or     ebx,ecx
    c3bb:	52                   	push   rdx
    c3bc:	00 00                	add    BYTE PTR [rax],al
    c3be:	0b cd                	or     ecx,ebp
    c3c0:	52                   	push   rdx
    c3c1:	00 00                	add    BYTE PTR [rax],al
    c3c3:	15 09 53 00 00       	adc    eax,0x5309
    c3c8:	29 28                	sub    DWORD PTR [rax],ebp
    c3ca:	00 00                	add    BYTE PTR [rax],al
    c3cc:	25 28 00 00 0a       	and    eax,0xa000028
    c3d1:	f8                   	clc
    c3d2:	31 00                	xor    DWORD PTR [rax],eax
    c3d4:	00 00                	add    BYTE PTR [rax],al
    c3d6:	00 00                	add    BYTE PTR [rax],al
    c3d8:	00 ff                	add    bh,bh
    c3da:	3c 00                	cmp    al,0x0
    c3dc:	00 37                	add    BYTE PTR [rdi],dh
    c3de:	70 00                	jo     c3e0 <_end+0x63c8>
    c3e0:	00 03                	add    BYTE PTR [rbx],al
    c3e2:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c3e5:	03 2f                	add    ebp,DWORD PTR [rdi]
    c3e7:	42 00 00             	rex.X add BYTE PTR [rax],al
    c3ea:	00 00                	add    BYTE PTR [rax],al
    c3ec:	00 00                	add    BYTE PTR [rax],al
    c3ee:	03 01                	add    eax,DWORD PTR [rcx]
    c3f0:	54                   	push   rsp
    c3f1:	09 03                	or     DWORD PTR [rbx],eax
    c3f3:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    c3f6:	00 00                	add    BYTE PTR [rax],al
    c3f8:	00 00                	add    BYTE PTR [rax],al
    c3fa:	00 00                	add    BYTE PTR [rax],al
    c3fc:	0a 18                	or     bl,BYTE PTR [rax]
    c3fe:	32 00                	xor    al,BYTE PTR [rax]
    c400:	00 00                	add    BYTE PTR [rax],al
    c402:	00 00                	add    BYTE PTR [rax],al
    c404:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    c407:	00 00                	add    BYTE PTR [rax],al
    c409:	5e                   	pop    rsi
    c40a:	70 00                	jo     c40c <_end+0x63f4>
    c40c:	00 03                	add    BYTE PTR [rbx],al
    c40e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c411:	7d 00                	jge    c413 <_end+0x63fb>
    c413:	03 01                	add    eax,DWORD PTR [rcx]
    c415:	58                   	pop    rax
    c416:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c419:	03 01                	add    eax,DWORD PTR [rcx]
    c41b:	59                   	pop    rcx
    c41c:	05 91 9c 7f 94       	add    eax,0x947f9c91
    c421:	04 00                	add    al,0x0
    c423:	07                   	(bad)
    c424:	20 32                	and    BYTE PTR [rdx],dh
    c426:	00 00                	add    BYTE PTR [rax],al
    c428:	00 00                	add    BYTE PTR [rax],al
    c42a:	00 00                	add    BYTE PTR [rax],al
    c42c:	4d 3c 00             	rex.WRB cmp al,0x0
    c42f:	00 03                	add    BYTE PTR [rbx],al
    c431:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c434:	7d 00                	jge    c436 <_end+0x641e>
    c436:	00 00                	add    BYTE PTR [rax],al
    c438:	19 6c 73 00          	sbb    DWORD PTR [rbx+rsi*2+0x0],ebp
    c43c:	00 20                	add    BYTE PTR [rax],ah
    c43e:	32 00                	xor    al,BYTE PTR [rax]
    c440:	00 00                	add    BYTE PTR [rax],al
    c442:	00 00                	add    BYTE PTR [rax],al
    c444:	00 02                	add    BYTE PTR [rdx],al
    c446:	00 20                	add    BYTE PTR [rax],ah
    c448:	32 00                	xor    al,BYTE PTR [rax]
    c44a:	00 00                	add    BYTE PTR [rax],al
    c44c:	00 00                	add    BYTE PTR [rax],al
    c44e:	00 08                	add    BYTE PTR [rax],cl
    c450:	00 00                	add    BYTE PTR [rax],al
    c452:	00 00                	add    BYTE PTR [rax],al
    c454:	00 00                	add    BYTE PTR [rax],al
    c456:	00 01                	add    BYTE PTR [rcx],al
    c458:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c45a:	05 7a 73 00 00       	add    eax,0x737a
    c45f:	3a 28                	cmp    ch,BYTE PTR [rax]
    c461:	00 00                	add    BYTE PTR [rax],al
    c463:	38 28                	cmp    BYTE PTR [rax],ch
    c465:	00 00                	add    BYTE PTR [rax],al
    c467:	07                   	(bad)
    c468:	28 32                	sub    BYTE PTR [rdx],dh
    c46a:	00 00                	add    BYTE PTR [rax],al
    c46c:	00 00                	add    BYTE PTR [rax],al
    c46e:	00 00                	add    BYTE PTR [rax],al
    c470:	40 77 00             	rex ja c473 <_end+0x645b>
    c473:	00 03                	add    BYTE PTR [rbx],al
    c475:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c478:	73 00                	jae    c47a <_end+0x6462>
    c47a:	00 00                	add    BYTE PTR [rax],al
    c47c:	00 0a                	add    BYTE PTR [rdx],cl
    c47e:	c8 2d 00 00          	enter  0x2d,0x0
    c482:	00 00                	add    BYTE PTR [rax],al
    c484:	00 00                	add    BYTE PTR [rax],al
    c486:	29 44 00 00          	sub    DWORD PTR [rax+rax*1+0x0],eax
    c48a:	de 70 00             	fidiv  WORD PTR [rax+0x0]
    c48d:	00 03                	add    BYTE PTR [rbx],al
    c48f:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c492:	03 0c 40             	add    ecx,DWORD PTR [rax+rax*2]
    c495:	00 00                	add    BYTE PTR [rax],al
    c497:	00 00                	add    BYTE PTR [rax],al
    c499:	00 00                	add    BYTE PTR [rax],al
    c49b:	03 01                	add    eax,DWORD PTR [rcx]
    c49d:	54                   	push   rsp
    c49e:	03 91 b0 7f 00 0a    	add    edx,DWORD PTR [rcx+0xa007fb0]
    c4a4:	dd 2d 00 00 00 00    	(bad)  [rip+0x0]        # c4aa <_end+0x6492>
    c4aa:	00 00                	add    BYTE PTR [rax],al
    c4ac:	0a 44 00 00          	or     al,BYTE PTR [rax+rax*1+0x0]
    c4b0:	f6 70 00             	div    BYTE PTR [rax+0x0]
    c4b3:	00 03                	add    BYTE PTR [rbx],al
    c4b5:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c4b8:	7f 00                	jg     c4ba <_end+0x64a2>
    c4ba:	00 0a                	add    BYTE PTR [rdx],cl
    c4bc:	eb 2d                	jmp    c4eb <_end+0x64d3>
    c4be:	00 00                	add    BYTE PTR [rax],al
    c4c0:	00 00                	add    BYTE PTR [rax],al
    c4c2:	00 00                	add    BYTE PTR [rax],al
    c4c4:	e6 43                	out    0x43,al
    c4c6:	00 00                	add    BYTE PTR [rax],al
    c4c8:	14 71                	adc    al,0x71
    c4ca:	00 00                	add    BYTE PTR [rax],al
    c4cc:	03 01                	add    eax,DWORD PTR [rcx]
    c4ce:	55                   	push   rbp
    c4cf:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c4d2:	03 01                	add    eax,DWORD PTR [rcx]
    c4d4:	54                   	push   rsp
    c4d5:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    c4d9:	0a fd                	or     bh,ch
    c4db:	2d 00 00 00 00       	sub    eax,0x0
    c4e0:	00 00                	add    BYTE PTR [rax],al
    c4e2:	cb                   	retf
    c4e3:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c4e6:	39 71 00             	cmp    DWORD PTR [rcx+0x0],esi
    c4e9:	00 03                	add    BYTE PTR [rbx],al
    c4eb:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c4ee:	73 00                	jae    c4f0 <_end+0x64d8>
    c4f0:	03 01                	add    eax,DWORD PTR [rcx]
    c4f2:	54                   	push   rsp
    c4f3:	09 03                	or     DWORD PTR [rbx],eax
    c4f5:	ec                   	in     al,dx
    c4f6:	41 00 00             	add    BYTE PTR [r8],al
    c4f9:	00 00                	add    BYTE PTR [rax],al
    c4fb:	00 00                	add    BYTE PTR [rax],al
    c4fd:	00 0a                	add    BYTE PTR [rdx],cl
    c4ff:	14 2e                	adc    al,0x2e
    c501:	00 00                	add    BYTE PTR [rax],al
    c503:	00 00                	add    BYTE PTR [rax],al
    c505:	00 00                	add    BYTE PTR [rax],al
    c507:	cb                   	retf
    c508:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c50b:	5e                   	pop    rsi
    c50c:	71 00                	jno    c50e <_end+0x64f6>
    c50e:	00 03                	add    BYTE PTR [rbx],al
    c510:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c513:	73 00                	jae    c515 <_end+0x64fd>
    c515:	03 01                	add    eax,DWORD PTR [rcx]
    c517:	54                   	push   rsp
    c518:	09 03                	or     DWORD PTR [rbx],eax
    c51a:	e8 41 00 00 00       	call   c560 <_end+0x6548>
    c51f:	00 00                	add    BYTE PTR [rax],al
    c521:	00 00                	add    BYTE PTR [rax],al
    c523:	0a 2b                	or     ch,BYTE PTR [rbx]
    c525:	2e 00 00             	cs add BYTE PTR [rax],al
    c528:	00 00                	add    BYTE PTR [rax],al
    c52a:	00 00                	add    BYTE PTR [rax],al
    c52c:	cb                   	retf
    c52d:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c530:	83 71 00 00          	xor    DWORD PTR [rcx+0x0],0x0
    c534:	03 01                	add    eax,DWORD PTR [rcx]
    c536:	55                   	push   rbp
    c537:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c53a:	03 01                	add    eax,DWORD PTR [rcx]
    c53c:	54                   	push   rsp
    c53d:	09 03                	or     DWORD PTR [rbx],eax
    c53f:	f2 41 00 00          	repnz add BYTE PTR [r8],al
    c543:	00 00                	add    BYTE PTR [rax],al
    c545:	00 00                	add    BYTE PTR [rax],al
    c547:	00 0a                	add    BYTE PTR [rdx],cl
    c549:	42                   	rex.X
    c54a:	2e 00 00             	cs add BYTE PTR [rax],al
    c54d:	00 00                	add    BYTE PTR [rax],al
    c54f:	00 00                	add    BYTE PTR [rax],al
    c551:	cb                   	retf
    c552:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c555:	a8 71                	test   al,0x71
    c557:	00 00                	add    BYTE PTR [rax],al
    c559:	03 01                	add    eax,DWORD PTR [rcx]
    c55b:	55                   	push   rbp
    c55c:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c55f:	03 01                	add    eax,DWORD PTR [rcx]
    c561:	54                   	push   rsp
    c562:	09 03                	or     DWORD PTR [rbx],eax
    c564:	02 42 00             	add    al,BYTE PTR [rdx+0x0]
    c567:	00 00                	add    BYTE PTR [rax],al
    c569:	00 00                	add    BYTE PTR [rax],al
    c56b:	00 00                	add    BYTE PTR [rax],al
    c56d:	0a 59 2e             	or     bl,BYTE PTR [rcx+0x2e]
    c570:	00 00                	add    BYTE PTR [rax],al
    c572:	00 00                	add    BYTE PTR [rax],al
    c574:	00 00                	add    BYTE PTR [rax],al
    c576:	cb                   	retf
    c577:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c57a:	cd 71                	int    0x71
    c57c:	00 00                	add    BYTE PTR [rax],al
    c57e:	03 01                	add    eax,DWORD PTR [rcx]
    c580:	55                   	push   rbp
    c581:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c584:	03 01                	add    eax,DWORD PTR [rcx]
    c586:	54                   	push   rsp
    c587:	09 03                	or     DWORD PTR [rbx],eax
    c589:	23 42 00             	and    eax,DWORD PTR [rdx+0x0]
    c58c:	00 00                	add    BYTE PTR [rax],al
    c58e:	00 00                	add    BYTE PTR [rax],al
    c590:	00 00                	add    BYTE PTR [rax],al
    c592:	0a 70 2e             	or     dh,BYTE PTR [rax+0x2e]
    c595:	00 00                	add    BYTE PTR [rax],al
    c597:	00 00                	add    BYTE PTR [rax],al
    c599:	00 00                	add    BYTE PTR [rax],al
    c59b:	cb                   	retf
    c59c:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c59f:	f2 71 00             	bnd jno c5a2 <_end+0x658a>
    c5a2:	00 03                	add    BYTE PTR [rbx],al
    c5a4:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5a7:	73 00                	jae    c5a9 <_end+0x6591>
    c5a9:	03 01                	add    eax,DWORD PTR [rcx]
    c5ab:	54                   	push   rsp
    c5ac:	09 03                	or     DWORD PTR [rbx],eax
    c5ae:	2b 42 00             	sub    eax,DWORD PTR [rdx+0x0]
    c5b1:	00 00                	add    BYTE PTR [rax],al
    c5b3:	00 00                	add    BYTE PTR [rax],al
    c5b5:	00 00                	add    BYTE PTR [rax],al
    c5b7:	0a 8a 2e 00 00 00    	or     cl,BYTE PTR [rdx+0x2e]
    c5bd:	00 00                	add    BYTE PTR [rax],al
    c5bf:	00 cb                	add    bl,cl
    c5c1:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c5c4:	10 72 00             	adc    BYTE PTR [rdx+0x0],dh
    c5c7:	00 03                	add    BYTE PTR [rbx],al
    c5c9:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5cc:	73 00                	jae    c5ce <_end+0x65b6>
    c5ce:	03 01                	add    eax,DWORD PTR [rcx]
    c5d0:	54                   	push   rsp
    c5d1:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c5d4:	00 0a                	add    BYTE PTR [rdx],cl
    c5d6:	a1 2e 00 00 00 00 00 	movabs eax,ds:0xcb0000000000002e
    c5dd:	00 cb 
    c5df:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c5e2:	35 72 00 00 03       	xor    eax,0x3000072
    c5e7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5ea:	73 00                	jae    c5ec <_end+0x65d4>
    c5ec:	03 01                	add    eax,DWORD PTR [rcx]
    c5ee:	54                   	push   rsp
    c5ef:	09 03                	or     DWORD PTR [rbx],eax
    c5f1:	5c                   	pop    rsp
    c5f2:	42 00 00             	rex.X add BYTE PTR [rax],al
    c5f5:	00 00                	add    BYTE PTR [rax],al
    c5f7:	00 00                	add    BYTE PTR [rax],al
    c5f9:	00 0a                	add    BYTE PTR [rdx],cl
    c5fb:	b3 2e                	mov    bl,0x2e
    c5fd:	00 00                	add    BYTE PTR [rax],al
    c5ff:	00 00                	add    BYTE PTR [rax],al
    c601:	00 00                	add    BYTE PTR [rax],al
    c603:	03 43 00             	add    eax,DWORD PTR [rbx+0x0]
    c606:	00 4f 72             	add    BYTE PTR [rdi+0x72],cl
    c609:	00 00                	add    BYTE PTR [rax],al
    c60b:	03 01                	add    eax,DWORD PTR [rcx]
    c60d:	55                   	push   rbp
    c60e:	04 91                	add    al,0x91
    c610:	a0 7f 06 00 0a bb 2e 	movabs al,ds:0x2ebb0a00067f
    c617:	00 00 
    c619:	00 00                	add    BYTE PTR [rax],al
    c61b:	00 00                	add    BYTE PTR [rax],al
    c61d:	03 43 00             	add    eax,DWORD PTR [rbx+0x0]
    c620:	00 67 72             	add    BYTE PTR [rdi+0x72],ah
    c623:	00 00                	add    BYTE PTR [rax],al
    c625:	03 01                	add    eax,DWORD PTR [rcx]
    c627:	55                   	push   rbp
    c628:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    c62b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    c62e:	35 00 00 00 00       	xor    eax,0x0
    c633:	00 00                	add    BYTE PTR [rax],al
    c635:	12 77 00             	adc    dh,BYTE PTR [rdi+0x0]
    c638:	00 0a                	add    BYTE PTR [rdx],cl
    c63a:	1f                   	(bad)
    c63b:	35 00 00 00 00       	xor    eax,0x0
    c640:	00 00                	add    BYTE PTR [rax],al
    c642:	4d                   	rex.WRB
    c643:	44 00 00             	add    BYTE PTR [rax],r8b
    c646:	b2 72                	mov    dl,0x72
    c648:	00 00                	add    BYTE PTR [rax],al
    c64a:	03 01                	add    eax,DWORD PTR [rcx]
    c64c:	55                   	push   rbp
    c64d:	09 03                	or     DWORD PTR [rbx],eax
    c64f:	de 41 00             	fiadd  WORD PTR [rcx+0x0]
    c652:	00 00                	add    BYTE PTR [rax],al
    c654:	00 00                	add    BYTE PTR [rax],al
    c656:	00 03                	add    BYTE PTR [rbx],al
    c658:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c65c:	e7 40                	out    0x40,eax
    c65e:	00 00                	add    BYTE PTR [rax],al
    c660:	00 00                	add    BYTE PTR [rax],al
    c662:	00 00                	add    BYTE PTR [rax],al
    c664:	03 01                	add    eax,DWORD PTR [rcx]
    c666:	51                   	push   rcx
    c667:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    c66a:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    c66d:	03 d8                	add    ebx,eax
    c66f:	44 00 00             	add    BYTE PTR [rax],r8b
    c672:	00 00                	add    BYTE PTR [rax],al
    c674:	00 00                	add    BYTE PTR [rax],al
    c676:	00 07                	add    BYTE PTR [rdi],al
    c678:	3e 35 00 00 00 00    	ds xor eax,0x0
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	4d                   	rex.WRB
    c681:	44 00 00             	add    BYTE PTR [rax],r8b
    c684:	03 01                	add    eax,DWORD PTR [rcx]
    c686:	55                   	push   rbp
    c687:	09 03                	or     DWORD PTR [rbx],eax
    c689:	de 40 00             	fiadd  WORD PTR [rax+0x0]
    c68c:	00 00                	add    BYTE PTR [rax],al
    c68e:	00 00                	add    BYTE PTR [rax],al
    c690:	00 03                	add    BYTE PTR [rbx],al
    c692:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c696:	e7 40                	out    0x40,eax
    c698:	00 00                	add    BYTE PTR [rax],al
    c69a:	00 00                	add    BYTE PTR [rax],al
    c69c:	00 00                	add    BYTE PTR [rax],al
    c69e:	03 01                	add    eax,DWORD PTR [rcx]
    c6a0:	51                   	push   rcx
    c6a1:	01 42 03             	add    DWORD PTR [rdx+0x3],eax
    c6a4:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    c6a7:	03 d8                	add    ebx,eax
    c6a9:	44 00 00             	add    BYTE PTR [rax],r8b
    c6ac:	00 00                	add    BYTE PTR [rax],al
    c6ae:	00 00                	add    BYTE PTR [rax],al
    c6b0:	00 00                	add    BYTE PTR [rax],al
    c6b2:	26 ee                	es out dx,al
    c6b4:	22 00                	and    al,BYTE PTR [rax]
    c6b6:	00 fd                	add    ch,bh
    c6b8:	72 00                	jb     c6ba <_end+0x66a2>
    c6ba:	00 27                	add    BYTE PTR [rdi],ah
    c6bc:	8a 21                	mov    ah,BYTE PTR [rcx]
    c6be:	00 00                	add    BYTE PTR [rax],al
    c6c0:	3a 00                	cmp    al,BYTE PTR [rax]
    c6c2:	13 ed                	adc    ebp,ebp
    c6c4:	72 00                	jb     c6c6 <_end+0x66ae>
    c6c6:	00 30                	add    BYTE PTR [rax],dh
    c6c8:	c5 18 00             	(bad)
    c6cb:	00 10                	add    BYTE PTR [rax],dl
    c6cd:	73 00                	jae    c6cf <_end+0x66b7>
    c6cf:	00 03                	add    BYTE PTR [rbx],al
    c6d1:	1a 73 00             	sbb    dh,BYTE PTR [rbx+0x0]
    c6d4:	00 31                	add    BYTE PTR [rcx],dh
    c6d6:	bb 1e 00 00 c5       	mov    ebx,0xc500001e
    c6db:	3f                   	(bad)
    c6dc:	00 00                	add    BYTE PTR [rax],al
    c6de:	00 30                	add    BYTE PTR [rax],dh
    c6e0:	59                   	pop    rcx
    c6e1:	1a 00                	sbb    al,BYTE PTR [rax]
    c6e3:	00 31                	add    BYTE PTR [rcx],dh
    c6e5:	73 00                	jae    c6e7 <_end+0x66cf>
    c6e7:	00 02                	add    BYTE PTR [rdx],al
    c6e9:	47 73 00             	rex.RXB jae c6ec <_end+0x66d4>
    c6ec:	00 11                	add    BYTE PTR [rcx],dl
    c6ee:	71 19                	jno    c709 <_end+0x66f1>
    c6f0:	00 00                	add    BYTE PTR [rax],al
    c6f2:	b2 21                	mov    dl,0x21
    c6f4:	00 00                	add    BYTE PTR [rax],al
    c6f6:	31 bb 1e 00 00 b1    	xor    DWORD PTR [rbx-0x4effffe2],edi
    c6fc:	3f                   	(bad)
    c6fd:	00 00                	add    BYTE PTR [rax],al
    c6ff:	2d b8 16 00 00       	sub    eax,0x16b8
    c704:	3d 02 2d 6f 44       	cmp    eax,0x446f2d02
    c709:	00 00                	add    BYTE PTR [rax],al
    c70b:	00 5c 1a 73          	add    BYTE PTR [rdx+rbx*1+0x73],bl
    c70f:	00 00                	add    BYTE PTR [rax],al
    c711:	36 0f 00 00          	ss sldt WORD PTR [rax]
    c715:	61                   	(bad)
    c716:	73 00                	jae    c718 <_end+0x6700>
    c718:	00 6c 73 00          	add    BYTE PTR [rbx+rsi*2+0x0],ch
    c71c:	00 11                	add    BYTE PTR [rcx],dl
    c71e:	71 19                	jno    c739 <_end+0x6721>
    c720:	00 00                	add    BYTE PTR [rax],al
    c722:	b2 21                	mov    dl,0x21
    c724:	00 00                	add    BYTE PTR [rax],al
    c726:	0b 31                	or     esi,DWORD PTR [rcx]
    c728:	73 00                	jae    c72a <_end+0x6712>
    c72a:	00 0b                	add    BYTE PTR [rbx],cl
    c72c:	3a 73 00             	cmp    dh,BYTE PTR [rbx+0x0]
    c72f:	00 00                	add    BYTE PTR [rax],al
    c731:	63 55 2e             	movsxd edx,DWORD PTR [rbp+0x2e]
    c734:	00 00                	add    BYTE PTR [rax],al
    c736:	54                   	push   rsp
    c737:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c738:	21 00                	and    DWORD PTR [rax],eax
    c73a:	00 88 73 00 00 1c    	add    BYTE PTR [rax+0x1c000073],cl
    c740:	a9 06 00 00 02       	test   eax,0x2000006
    c745:	54                   	push   rsp
    c746:	20 d8                	and    al,bl
    c748:	23 00                	and    eax,DWORD PTR [rax]
    c74a:	00 22                	add    BYTE PTR [rdx],ah
    c74c:	00 63 54             	add    BYTE PTR [rbx+0x54],ah
    c74f:	2e 00 00             	cs add BYTE PTR [rax],al
    c752:	4d a6                	rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c754:	21 00                	and    DWORD PTR [rax],eax
    c756:	00 b0 73 00 00 1c    	add    BYTE PTR [rax+0x1c000073],dh
    c75c:	62 2f 00 00 02       	(bad)
    c761:	4d 1b 93 2c 00 00 1c 	sbb    r10,QWORD PTR [r11+0x1c00002c]
    c768:	a9 06 00 00 02       	test   eax,0x2000006
    c76d:	4d 3c d8             	rex.WRB cmp al,0xd8
    c770:	23 00                	and    eax,DWORD PTR [rax]
    c772:	00 22                	add    BYTE PTR [rdx],ah
    c774:	00 32                	add    BYTE PTR [rdx],dh
    c776:	e1 04                	loope  c77c <_end+0x6764>
    c778:	00 00                	add    BYTE PTR [rax],al
    c77a:	c7                   	(bad)
    c77b:	73 00                	jae    c77d <_end+0x6765>
    c77d:	00 5d 5f             	add    BYTE PTR [rbp+0x5f],bl
    c780:	5f                   	pop    rdi
    c781:	78 00                	js     c783 <_end+0x676b>
    c783:	03 b6 01 0e 35 00    	add    esi,DWORD PTR [rsi+0x350e01]
    c789:	00 00                	add    BYTE PTR [rax],al
    c78b:	00 4e bb             	add    BYTE PTR [rsi-0x45],cl
    c78e:	52                   	push   rdx
    c78f:	00 00                	add    BYTE PTR [rax],al
    c791:	25 23 00 00 00       	and    eax,0x23
    c796:	2d 00 00 00 00       	sub    eax,0x0
    c79b:	00 00                	add    BYTE PTR [rax],al
    c79d:	62                   	(bad)
    c79e:	00 00                	add    BYTE PTR [rax],al
    c7a0:	00 00                	add    BYTE PTR [rax],al
    c7a2:	00 00                	add    BYTE PTR [rax],al
    c7a4:	00 01                	add    BYTE PTR [rcx],al
    c7a6:	9c                   	pushf
    c7a7:	87 74 00 00          	xchg   DWORD PTR [rax+rax*1+0x0],esi
    c7ab:	05 cd 52 00 00       	add    eax,0x52cd
    c7b0:	4d 28 00             	rex.WRB sub BYTE PTR [r8],r8b
    c7b3:	00 47 28             	add    BYTE PTR [rdi+0x28],al
    c7b6:	00 00                	add    BYTE PTR [rax],al
    c7b8:	05 d9 52 00 00       	add    eax,0x52d9
    c7bd:	68 28 00 00 66       	push   0x66000028
    c7c2:	28 00                	sub    BYTE PTR [rax],al
    c7c4:	00 05 e5 52 00 00    	add    BYTE PTR [rip+0x52e5],al        # 11aaf <_end+0xba97>
    c7ca:	7b 28                	jnp    c7f4 <_end+0x67dc>
    c7cc:	00 00                	add    BYTE PTR [rax],al
    c7ce:	75 28                	jne    c7f8 <_end+0x67e0>
    c7d0:	00 00                	add    BYTE PTR [rax],al
    c7d2:	05 f1 52 00 00       	add    eax,0x52f1
    c7d7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c7d8:	28 00                	sub    BYTE PTR [rax],al
    c7da:	00 a0 28 00 00 8f    	add    BYTE PTR [rax-0x70ffffd8],ah
    c7e0:	01 fd                	add    ebp,edi
    c7e2:	52                   	push   rdx
    c7e3:	00 00                	add    BYTE PTR [rax],al
    c7e5:	02 91 00 15 09 53    	add    dl,BYTE PTR [rcx+0x53091500]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	c5 28 00             	(bad)
    c7f0:	00 bf 28 00 00 0a    	add    BYTE PTR [rdi+0xa000028],bh
    c7f6:	32 2d 00 00 00 00    	xor    ch,BYTE PTR [rip+0x0]        # c7fc <_end+0x67e4>
    c7fc:	00 00                	add    BYTE PTR [rax],al
    c7fe:	ff                   	(bad)
    c7ff:	3c 00                	cmp    al,0x0
    c801:	00 4f 74             	add    BYTE PTR [rdi+0x74],cl
    c804:	00 00                	add    BYTE PTR [rax],al
    c806:	03 01                	add    eax,DWORD PTR [rcx]
    c808:	54                   	push   rsp
    c809:	09 03                	or     DWORD PTR [rbx],eax
    c80b:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    c80e:	00 00                	add    BYTE PTR [rax],al
    c810:	00 00                	add    BYTE PTR [rax],al
    c812:	00 00                	add    BYTE PTR [rax],al
    c814:	0a 4c 2d 00          	or     cl,BYTE PTR [rbp+rbp*1+0x0]
    c818:	00 00                	add    BYTE PTR [rax],al
    c81a:	00 00                	add    BYTE PTR [rax],al
    c81c:	00 5b 46             	add    BYTE PTR [rbx+0x46],bl
    c81f:	00 00                	add    BYTE PTR [rax],al
    c821:	79 74                	jns    c897 <_end+0x687f>
    c823:	00 00                	add    BYTE PTR [rax],al
    c825:	03 01                	add    eax,DWORD PTR [rcx]
    c827:	55                   	push   rbp
    c828:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c82b:	03 01                	add    eax,DWORD PTR [rcx]
    c82d:	54                   	push   rsp
    c82e:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    c831:	03 01                	add    eax,DWORD PTR [rcx]
    c833:	58                   	pop    rax
    c834:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c837:	03 01                	add    eax,DWORD PTR [rcx]
    c839:	59                   	pop    rcx
    c83a:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c83d:	00 64 62 2d          	add    BYTE PTR [rdx+riz*2+0x2d],ah
    c841:	00 00                	add    BYTE PTR [rax],al
    c843:	00 00                	add    BYTE PTR [rax],al
    c845:	00 00                	add    BYTE PTR [rax],al
    c847:	4d 3c 00             	rex.WRB cmp al,0x0
    c84a:	00 00                	add    BYTE PTR [rax],al
    c84c:	4e ef                	rex.WRX out dx,eax
    c84e:	45 00 00             	add    BYTE PTR [r8],r8b
    c851:	f5                   	cmc
    c852:	34 00                	xor    al,0x0
    c854:	00 40 35             	add    BYTE PTR [rax+0x35],al
    c857:	00 00                	add    BYTE PTR [rax],al
    c859:	00 00                	add    BYTE PTR [rax],al
    c85b:	00 00                	add    BYTE PTR [rax],al
    c85d:	5b                   	pop    rbx
    c85e:	01 00                	add    DWORD PTR [rax],eax
    c860:	00 00                	add    BYTE PTR [rax],al
    c862:	00 00                	add    BYTE PTR [rax],al
    c864:	00 01                	add    BYTE PTR [rcx],al
    c866:	9c                   	pushf
    c867:	c5 75 00             	(bad)
    c86a:	00 05 02 46 00 00    	add    BYTE PTR [rip+0x4602],al        # 10e72 <_end+0xae5a>
    c870:	ed                   	in     eax,dx
    c871:	28 00                	sub    BYTE PTR [rax],al
    c873:	00 db                	add    bl,bl
    c875:	28 00                	sub    BYTE PTR [rax],al
    c877:	00 05 0e 46 00 00    	add    BYTE PTR [rip+0x460e],al        # 10e8b <_end+0xae73>
    c87d:	46 29 00             	rex.RX sub DWORD PTR [rax],r8d
    c880:	00 36                	add    BYTE PTR [rsi],dh
    c882:	29 00                	sub    DWORD PTR [rax],eax
    c884:	00 05 1a 46 00 00    	add    BYTE PTR [rip+0x461a],al        # 10ea4 <_end+0xae8c>
    c88a:	9e                   	sahf
    c88b:	29 00                	sub    DWORD PTR [rax],eax
    c88d:	00 88 29 00 00 15    	add    BYTE PTR [rax+0x15000029],cl
    c893:	2f                   	(bad)
    c894:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c897:	10 2a                	adc    BYTE PTR [rdx],ch
    c899:	00 00                	add    BYTE PTR [rax],al
    c89b:	00 2a                	add    BYTE PTR [rdx],ch
    c89d:	00 00                	add    BYTE PTR [rax],al
    c89f:	39 3a                	cmp    DWORD PTR [rdx],edi
    c8a1:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c8a4:	b1 03                	mov    cl,0x3
    c8a6:	00 00                	add    BYTE PTR [rax],al
    c8a8:	f5                   	cmc
    c8a9:	74 00                	je     c8ab <_end+0x6893>
    c8ab:	00 15 3b 46 00 00    	add    BYTE PTR [rip+0x463b],dl        # 10eec <_end+0xaed4>
    c8b1:	64 2a 00             	sub    al,BYTE PTR fs:[rax]
    c8b4:	00 60 2a             	add    BYTE PTR [rax+0x2a],ah
    c8b7:	00 00                	add    BYTE PTR [rax],al
    c8b9:	00 1e                	add    BYTE PTR [rsi],bl
    c8bb:	b0 73                	mov    al,0x73
    c8bd:	00 00                	add    BYTE PTR [rax],al
    c8bf:	35 36 00 00 00       	xor    eax,0x36
    c8c4:	00 00                	add    BYTE PTR [rax],al
    c8c6:	00 00                	add    BYTE PTR [rax],al
    c8c8:	00 c1                	add    cl,al
    c8ca:	03 00                	add    eax,DWORD PTR [rax]
    c8cc:	00 b3 1e 29 75 00    	add    BYTE PTR [rbx+0x75291e],dh
    c8d2:	00 05 b9 73 00 00    	add    BYTE PTR [rip+0x73b9],al        # 13c91 <_end+0xdc79>
    c8d8:	7b 2a                	jnp    c904 <_end+0x68ec>
    c8da:	00 00                	add    BYTE PTR [rax],al
    c8dc:	75 2a                	jne    c908 <_end+0x68f0>
    c8de:	00 00                	add    BYTE PTR [rax],al
    c8e0:	24 7a                	and    al,0x7a
    c8e2:	36 00 00             	ss add BYTE PTR [rax],al
    c8e5:	00 00                	add    BYTE PTR [rax],al
    c8e7:	00 00                	add    BYTE PTR [rax],al
    c8e9:	09 77 00             	or     DWORD PTR [rdi+0x0],esi
    c8ec:	00 00                	add    BYTE PTR [rax],al
    c8ee:	09 ef                	or     edi,ebp
    c8f0:	45 00 00             	add    BYTE PTR [r8],r8b
    c8f3:	7c 36                	jl     c92b <_end+0x6913>
    c8f5:	00 00                	add    BYTE PTR [rax],al
    c8f7:	00 00                	add    BYTE PTR [rax],al
    c8f9:	00 00                	add    BYTE PTR [rax],al
    c8fb:	01 00                	add    DWORD PTR [rax],eax
    c8fd:	7c 36                	jl     c935 <_end+0x691d>
    c8ff:	00 00                	add    BYTE PTR [rax],al
    c901:	00 00                	add    BYTE PTR [rax],al
    c903:	00 00                	add    BYTE PTR [rax],al
    c905:	1f                   	(bad)
    c906:	00 00                	add    BYTE PTR [rax],al
    c908:	00 00                	add    BYTE PTR [rax],al
    c90a:	00 00                	add    BYTE PTR [rax],al
    c90c:	00 ac 08 ae 75 00 00 	add    BYTE PTR [rax+rcx*1+0x75ae],ch
    c913:	65 02 46 00          	add    al,BYTE PTR gs:[rsi+0x0]
    c917:	00 05 0e 46 00 00    	add    BYTE PTR [rip+0x460e],al        # 10f2b <_end+0xaf13>
    c91d:	95                   	xchg   ebp,eax
    c91e:	2a 00                	sub    al,BYTE PTR [rax]
    c920:	00 91 2a 00 00 05    	add    BYTE PTR [rcx+0x500002a],dl
    c926:	1a 46 00             	sbb    al,BYTE PTR [rsi+0x0]
    c929:	00 ab 2a 00 00 a7    	add    BYTE PTR [rbx-0x58ffffd6],ch
    c92f:	2a 00                	sub    al,BYTE PTR [rax]
    c931:	00 3a                	add    BYTE PTR [rdx],bh
    c933:	2f                   	(bad)
    c934:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c937:	07                   	(bad)
    c938:	9b                   	fwait
    c939:	36 00 00             	ss add BYTE PTR [rax],al
    c93c:	00 00                	add    BYTE PTR [rax],al
    c93e:	00 00                	add    BYTE PTR [rax],al
    c940:	4d                   	rex.WRB
    c941:	44 00 00             	add    BYTE PTR [rax],r8b
    c944:	03 01                	add    eax,DWORD PTR [rcx]
    c946:	55                   	push   rbp
    c947:	09 03                	or     DWORD PTR [rbx],eax
    c949:	71 41                	jno    c98c <_end+0x6974>
    c94b:	00 00                	add    BYTE PTR [rax],al
    c94d:	00 00                	add    BYTE PTR [rax],al
    c94f:	00 00                	add    BYTE PTR [rax],al
    c951:	03 01                	add    eax,DWORD PTR [rcx]
    c953:	54                   	push   rsp
    c954:	09 03                	or     DWORD PTR [rbx],eax
    c956:	e7 40                	out    0x40,eax
    c958:	00 00                	add    BYTE PTR [rax],al
    c95a:	00 00                	add    BYTE PTR [rax],al
    c95c:	00 00                	add    BYTE PTR [rax],al
    c95e:	03 01                	add    eax,DWORD PTR [rcx]
    c960:	51                   	push   rcx
    c961:	02 08                	add    cl,BYTE PTR [rax]
    c963:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    c964:	03 01                	add    eax,DWORD PTR [rcx]
    c966:	52                   	push   rdx
    c967:	09 03                	or     DWORD PTR [rbx],eax
    c969:	a0 44 00 00 00 00 00 	movabs al,ds:0x44
    c970:	00 00 
    c972:	00 21                	add    BYTE PTR [rcx],ah
    c974:	e0 35                	loopne c9ab <_end+0x6993>
    c976:	00 00                	add    BYTE PTR [rax],al
    c978:	00 00                	add    BYTE PTR [rax],al
    c97a:	00 00                	add    BYTE PTR [rax],al
    c97c:	01 30                	add    DWORD PTR [rax],esi
    c97e:	21 5b 36             	and    DWORD PTR [rbx+0x36],ebx
    c981:	00 00                	add    BYTE PTR [rax],al
    c983:	00 00                	add    BYTE PTR [rax],al
    c985:	00 00                	add    BYTE PTR [rax],al
    c987:	01 30                	add    DWORD PTR [rax],esi
    c989:	00 4e 82             	add    BYTE PTR [rsi-0x7e],cl
    c98c:	45 00 00             	add    BYTE PTR [r8],r8b
    c98f:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    c990:	2f                   	(bad)
    c991:	00 00                	add    BYTE PTR [rax],al
    c993:	a0 36 00 00 00 00 00 	movabs al,ds:0x1c00000000000036
    c99a:	00 1c 
    c99c:	03 00                	add    eax,DWORD PTR [rax]
    c99e:	00 00                	add    BYTE PTR [rax],al
    c9a0:	00 00                	add    BYTE PTR [rax],al
    c9a2:	00 01                	add    BYTE PTR [rcx],al
    c9a4:	9c                   	pushf
    c9a5:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    c9a8:	00 05 95 45 00 00    	add    BYTE PTR [rip+0x4595],al        # 10f43 <_end+0xaf2b>
    c9ae:	cb                   	retf
    c9af:	2a 00                	sub    al,BYTE PTR [rax]
    c9b1:	00 bf 2a 00 00 05    	add    BYTE PTR [rdi+0x500002a],bh
    c9b7:	a1 45 00 00 13 2b 00 	movabs eax,ds:0xff00002b13000045
    c9be:	00 ff 
    c9c0:	2a 00                	sub    al,BYTE PTR [rax]
    c9c2:	00 15 b6 45 00 00    	add    BYTE PTR [rip+0x45b6],dl        # 10f7e <_end+0xaf66>
    c9c8:	77 2b                	ja     c9f5 <_end+0x69dd>
    c9ca:	00 00                	add    BYTE PTR [rax],al
    c9cc:	69 2b 00 00 39 c1    	imul   ebp,DWORD PTR [rbx],0xc1390000
    c9d2:	45 00 00             	add    BYTE PTR [r8],r8b
    c9d5:	d1 03                	rol    DWORD PTR [rbx],1
    c9d7:	00 00                	add    BYTE PTR [rax],al
    c9d9:	3d 76 00 00 15       	cmp    eax,0x15000076
    c9de:	c2 45 00             	ret    0x45
    c9e1:	00 c4                	add    ah,al
    c9e3:	2b 00                	sub    eax,DWORD PTR [rax]
    c9e5:	00 b8 2b 00 00 4d    	add    BYTE PTR [rax+0x4d00002b],bh
    c9eb:	cb                   	retf
    c9ec:	45 00 00             	add    BYTE PTR [r8],r8b
    c9ef:	e1 03                	loope  c9f4 <_end+0x69dc>
    c9f1:	00 00                	add    BYTE PTR [rax],al
    c9f3:	15 cc 45 00 00       	adc    eax,0x45cc
    c9f8:	fa                   	cli
    c9f9:	2b 00                	sub    eax,DWORD PTR [rax]
    c9fb:	00 f4                	add    ah,dh
    c9fd:	2b 00                	sub    eax,DWORD PTR [rax]
    c9ff:	00 00                	add    BYTE PTR [rax],al
    ca01:	00 1e                	add    BYTE PTR [rsi],bl
    ca03:	b0 73                	mov    al,0x73
    ca05:	00 00                	add    BYTE PTR [rax],al
    ca07:	39 39                	cmp    DWORD PTR [rcx],edi
	...
    ca11:	0a 04 00             	or     al,BYTE PTR [rax+rax*1]
    ca14:	00 c0                	add    al,al
    ca16:	1e                   	(bad)
    ca17:	71 76                	jno    ca8f <_end+0x6a77>
    ca19:	00 00                	add    BYTE PTR [rax],al
    ca1b:	05 b9 73 00 00       	add    eax,0x73b9
    ca20:	40 2c 00             	rex sub al,0x0
    ca23:	00 3a                	add    BYTE PTR [rdx],bh
    ca25:	2c 00                	sub    al,0x0
    ca27:	00 64 9d 39          	add    BYTE PTR [rbp+rbx*4+0x39],ah
    ca2b:	00 00                	add    BYTE PTR [rax],al
    ca2d:	00 00                	add    BYTE PTR [rax],al
    ca2f:	00 00                	add    BYTE PTR [rax],al
    ca31:	09 77 00             	or     DWORD PTR [rdi+0x0],esi
    ca34:	00 00                	add    BYTE PTR [rax],al
    ca36:	09 82 45 00 00 9d    	or     DWORD PTR [rdx-0x62ffffbb],eax
    ca3c:	39 00                	cmp    DWORD PTR [rax],eax
    ca3e:	00 00                	add    BYTE PTR [rax],al
    ca40:	00 00                	add    BYTE PTR [rax],al
    ca42:	00 01                	add    BYTE PTR [rcx],al
    ca44:	00 9d 39 00 00 00    	add    BYTE PTR [rbp+0x39],bl
    ca4a:	00 00                	add    BYTE PTR [rax],al
    ca4c:	00 1f                	add    BYTE PTR [rdi],bl
    ca4e:	00 00                	add    BYTE PTR [rax],al
    ca50:	00 00                	add    BYTE PTR [rax],al
    ca52:	00 00                	add    BYTE PTR [rax],al
    ca54:	00 b8 07 e9 76 00    	add    BYTE PTR [rax+0x76e907],bh
    ca5a:	00 65 95             	add    BYTE PTR [rbp-0x6b],ah
    ca5d:	45 00 00             	add    BYTE PTR [r8],r8b
    ca60:	05 a1 45 00 00       	add    eax,0x45a1
    ca65:	5a                   	pop    rdx
    ca66:	2c 00                	sub    al,0x0
    ca68:	00 56 2c             	add    BYTE PTR [rsi+0x2c],dl
    ca6b:	00 00                	add    BYTE PTR [rax],al
    ca6d:	3a b6 45 00 00 07    	cmp    dh,BYTE PTR [rsi+0x7000045]
    ca73:	bc 39 00 00 00       	mov    esp,0x39
    ca78:	00 00                	add    BYTE PTR [rax],al
    ca7a:	00 4d 44             	add    BYTE PTR [rbp+0x44],cl
    ca7d:	00 00                	add    BYTE PTR [rax],al
    ca7f:	03 01                	add    eax,DWORD PTR [rcx]
    ca81:	55                   	push   rbp
    ca82:	09 03                	or     DWORD PTR [rbx],eax
    ca84:	4c                   	rex.WR
    ca85:	40 00 00             	rex add BYTE PTR [rax],al
    ca88:	00 00                	add    BYTE PTR [rax],al
    ca8a:	00 00                	add    BYTE PTR [rax],al
    ca8c:	03 01                	add    eax,DWORD PTR [rcx]
    ca8e:	54                   	push   rsp
    ca8f:	09 03                	or     DWORD PTR [rbx],eax
    ca91:	e7 40                	out    0x40,eax
    ca93:	00 00                	add    BYTE PTR [rax],al
    ca95:	00 00                	add    BYTE PTR [rax],al
    ca97:	00 00                	add    BYTE PTR [rax],al
    ca99:	03 01                	add    eax,DWORD PTR [rcx]
    ca9b:	51                   	push   rcx
    ca9c:	02 08                	add    cl,BYTE PTR [rax]
    ca9e:	b9 03 01 52 09       	mov    ecx,0x9520103
    caa3:	03 58 46             	add    ebx,DWORD PTR [rax+0x46]
	...
    caae:	21 36                	and    DWORD PTR [rsi],esi
    cab0:	38 00                	cmp    BYTE PTR [rax],al
    cab2:	00 00                	add    BYTE PTR [rax],al
    cab4:	00 00                	add    BYTE PTR [rax],al
    cab6:	00 01                	add    BYTE PTR [rcx],al
    cab8:	30 21                	xor    BYTE PTR [rcx],ah
    caba:	7b 39                	jnp    caf5 <_end+0x6add>
    cabc:	00 00                	add    BYTE PTR [rax],al
    cabe:	00 00                	add    BYTE PTR [rax],al
    cac0:	00 00                	add    BYTE PTR [rax],al
    cac2:	01 30                	add    DWORD PTR [rax],esi
    cac4:	00 3b                	add    BYTE PTR [rbx],bh
    cac6:	4f 1d 00 00 45 1d    	rex.WRXB sbb rax,0x1d450000
    cacc:	00 00                	add    BYTE PTR [rax],al
    cace:	3b 1f                	cmp    ebx,DWORD PTR [rdi]
    cad0:	23 00                	and    eax,DWORD PTR [rax]
    cad2:	00 fe                	add    dh,bh
    cad4:	1c 00                	sbb    al,0x0
    cad6:	00 3b                	add    BYTE PTR [rbx],bh
    cad8:	1e                   	(bad)
    cad9:	07                   	(bad)
    cada:	00 00                	add    BYTE PTR [rax],al
    cadc:	1e                   	(bad)
    cadd:	07                   	(bad)
    cade:	00 00                	add    BYTE PTR [rax],al
    cae0:	25 23 9e 21 0a       	and    eax,0xa219e23
    cae5:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    caea:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    caef:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    caf4:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    caf9:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cafe:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb03:	0a 00                	or     al,BYTE PTR [rax]
    cb05:	3b 5f 23             	cmp    ebx,DWORD PTR [rdi+0x23]
    cb08:	00 00                	add    BYTE PTR [rax],al
    cb0a:	55                   	push   rbp
    cb0b:	23 00                	and    eax,DWORD PTR [rax]
    cb0d:	00 25 09 9e 07 63    	add    BYTE PTR [rip+0x63079e09],ah        # 6308691c <_end+0x63080904>
    cb13:	72 63                	jb     cb78 <_end+0x6b60>
    cb15:	33 32                	xor    esi,DWORD PTR [rdx]
    cb17:	0a 00                	or     al,BYTE PTR [rax]
    cb19:	25 22 9e 20 2d       	and    eax,0x2d209e22
    cb1e:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb23:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb28:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb2d:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb32:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb37:	2d 2d 2d 2d 0a       	sub    eax,0xa2d2d2d
    cb3c:	00 25 22 9e 20 3d    	add    BYTE PTR [rip+0x3d209e22],ah        # 3d216964 <_end+0x3d21094c>
    cb42:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb47:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb4c:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb51:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb56:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb5b:	3d 3d 3d 3d 0a       	cmp    eax,0xa3d3d3d
    cb60:	00 25 0d 9e 0b 5f    	add    BYTE PTR [rip+0x5f0b9e0d],ah        # 5f0c6973 <_end+0x5f0c095b>
    cb66:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb67:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb68:	5f                   	pop    rdi
    cb69:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cb6c:	33 32                	xor    esi,DWORD PTR [rdx]
    cb6e:	0a 00                	or     al,BYTE PTR [rax]
    cb70:	25 0b 9e 09 6d       	and    eax,0x6d099e0b
    cb75:	75 72                	jne    cbe9 <_end+0x6bd1>
    cb77:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb78:	75 72                	jne    cbec <_end+0x6bd4>
    cb7a:	32 0a                	xor    cl,BYTE PTR [rdx]
    cb7c:	00 25 07 9e 05 73    	add    BYTE PTR [rip+0x73059e07],ah        # 73066989 <_end+0x73060971>
    cb82:	75 6d                	jne    cbf1 <_end+0x6bd9>
    cb84:	0a 00                	or     al,BYTE PTR [rax]
    cb86:	25 0b 9e 09 61       	and    eax,0x61099e0b
    cb8b:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    cb8d:	65 72 33             	gs jb  cbc3 <_end+0x6bab>
    cb90:	32 0a                	xor    cl,BYTE PTR [rdx]
    cb92:	00 25 07 9e 05 65    	add    BYTE PTR [rip+0x65059e07],ah        # 6506699f <_end+0x65060987>
    cb98:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb99:	66 0a 00             	data16 or al,BYTE PTR [rax]
    cb9c:	25 13 9e 11 5f       	and    eax,0x5f119e13
    cba1:	6d                   	ins    DWORD PTR es:[rdi],dx
    cba2:	6d                   	ins    DWORD PTR es:[rdi],dx
    cba3:	5f                   	pop    rdi
    cba4:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cba7:	33 32                	xor    esi,DWORD PTR [rdx]
    cba9:	55                   	push   rbp
    cbaa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbab:	72 6f                	jb     cc1c <_end+0x6c04>
    cbad:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbae:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbaf:	0a 00                	or     al,BYTE PTR [rax]
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 134906 <_end+0x12e8ee>
       6:	00 02                	add    BYTE PTR [rdx],al
       8:	08 00                	or     BYTE PTR [rax],al
       a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
       c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
       e:	39 0b                	cmp    DWORD PTR [rbx],ecx
      10:	18 13                	sbb    BYTE PTR [rbx],dl
      12:	00 00                	add    BYTE PTR [rax],al
      14:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
      17:	0b 0b                	or     ecx,DWORD PTR [rbx]
      19:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
      1c:	0e                   	(bad)
      1d:	00 00                	add    BYTE PTR [rax],al
      1f:	04 2e                	add    al,0x2e
      21:	01 3f                	add    DWORD PTR [rdi],edi
      23:	19 03                	sbb    DWORD PTR [rbx],eax
      25:	0e                   	(bad)
      26:	3a 21                	cmp    ah,BYTE PTR [rcx]
      28:	02 3b                	add    bh,BYTE PTR [rbx]
      2a:	05 39 0b 49 13       	add    eax,0x13490b39
      2f:	3c 19                	cmp    al,0x19
      31:	01 13                	add    DWORD PTR [rbx],edx
      33:	00 00                	add    BYTE PTR [rax],al
      35:	05 0f 00 0b 21       	add    eax,0x210b000f
      3a:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
      3d:	00 00                	add    BYTE PTR [rax],al
      3f:	06                   	(bad)
      40:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      43:	19 03                	sbb    DWORD PTR [rbx],eax
      45:	0e                   	(bad)
      46:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      48:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      4a:	39 0b                	cmp    DWORD PTR [rbx],ecx
      4c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      50:	01 13                	add    DWORD PTR [rbx],edx
      52:	00 00                	add    BYTE PTR [rax],al
      54:	07                   	(bad)
      55:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      58:	19 03                	sbb    DWORD PTR [rbx],eax
      5a:	08 3a                	or     BYTE PTR [rdx],bh
      5c:	21 06                	and    DWORD PTR [rsi],eax
      5e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      60:	39 21                	cmp    DWORD PTR [rcx],esp
      62:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      65:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      69:	01 13                	add    DWORD PTR [rbx],edx
      6b:	00 00                	add    BYTE PTR [rax],al
      6d:	08 16                	or     BYTE PTR [rsi],dl
      6f:	00 03                	add    BYTE PTR [rbx],al
      71:	0e                   	(bad)
      72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      74:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      76:	39 0b                	cmp    DWORD PTR [rbx],ecx
      78:	49 13 00             	adc    rax,QWORD PTR [r8]
      7b:	00 09                	add    BYTE PTR [rcx],cl
      7d:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
      81:	00 00                	add    BYTE PTR [rax],al
      83:	0a 2e                	or     ch,BYTE PTR [rsi]
      85:	01 3f                	add    DWORD PTR [rdi],edi
      87:	19 03                	sbb    DWORD PTR [rbx],eax
      89:	0e                   	(bad)
      8a:	3a 21                	cmp    ah,BYTE PTR [rcx]
      8c:	02 3b                	add    bh,BYTE PTR [rbx]
      8e:	0b 39                	or     edi,DWORD PTR [rcx]
      90:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
      93:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      97:	01 13                	add    DWORD PTR [rbx],edx
      99:	00 00                	add    BYTE PTR [rax],al
      9b:	0b 49 00             	or     ecx,DWORD PTR [rcx+0x0]
      9e:	02 18                	add    bl,BYTE PTR [rax]
      a0:	7e 18                	jle    ba <__abi_tag-0x2c2>
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	0c 13                	or     al,0x13
      a6:	01 0b                	add    DWORD PTR [rbx],ecx
      a8:	0b 3a                	or     edi,DWORD PTR [rdx]
      aa:	21 02                	and    DWORD PTR [rdx],eax
      ac:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      ae:	39 21                	cmp    DWORD PTR [rcx],esp
      b0:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      b3:	01 13                	add    DWORD PTR [rbx],edx
      b5:	00 00                	add    BYTE PTR [rax],al
      b7:	0d 0d 00 03 0e       	or     eax,0xe03000d
      bc:	3a 21                	cmp    ah,BYTE PTR [rcx]
      be:	02 3b                	add    bh,BYTE PTR [rbx]
      c0:	0b 39                	or     edi,DWORD PTR [rcx]
      c2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      c5:	38 21                	cmp    BYTE PTR [rcx],ah
      c7:	00 00                	add    BYTE PTR [rax],al
      c9:	00 0e                	add    BYTE PTR [rsi],cl
      cb:	0d 00 03 08 3a       	or     eax,0x3a080300
      d0:	21 02                	and    DWORD PTR [rdx],eax
      d2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      d4:	39 0b                	cmp    DWORD PTR [rbx],ecx
      d6:	49 13 38             	adc    rdi,QWORD PTR [r8]
      d9:	0b 00                	or     eax,DWORD PTR [rax]
      db:	00 0f                	add    BYTE PTR [rdi],cl
      dd:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      e0:	19 03                	sbb    DWORD PTR [rbx],eax
      e2:	08 3a                	or     BYTE PTR [rdx],bh
      e4:	21 05 3b 0b 39 21    	and    DWORD PTR [rip+0x21390b3b],eax        # 21390c25 <_end+0x2138ac0d>
      ea:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      ed:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      f1:	00 00                	add    BYTE PTR [rax],al
      f3:	10 2e                	adc    BYTE PTR [rsi],ch
      f5:	01 3f                	add    DWORD PTR [rdi],edi
      f7:	19 03                	sbb    DWORD PTR [rbx],eax
      f9:	0e                   	(bad)
      fa:	3a 21                	cmp    ah,BYTE PTR [rcx]
      fc:	02 3b                	add    bh,BYTE PTR [rbx]
      fe:	05 39 21 0d 3c       	add    eax,0x3c0d2139
     103:	19 01                	sbb    DWORD PTR [rcx],eax
     105:	13 00                	adc    eax,DWORD PTR [rax]
     107:	00 11                	add    BYTE PTR [rcx],dl
     109:	34 00                	xor    al,0x0
     10b:	03 0e                	add    ecx,DWORD PTR [rsi]
     10d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     10f:	0c 3b                	or     al,0x3b
     111:	0b 39                	or     edi,DWORD PTR [rcx]
     113:	21 0b                	and    DWORD PTR [rbx],ecx
     115:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
     119:	00 00                	add    BYTE PTR [rax],al
     11b:	12 05 00 03 0e 3a    	adc    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e0421 <_end+0x3a0da409>
     121:	21 01                	and    DWORD PTR [rcx],eax
     123:	3b 21                	cmp    esp,DWORD PTR [rcx]
     125:	08 39                	or     BYTE PTR [rcx],bh
     127:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     12a:	02 17                	add    dl,BYTE PTR [rdi]
     12c:	b7 42                	mov    bh,0x42
     12e:	17                   	(bad)
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	13 34 00             	adc    esi,DWORD PTR [rax+rax*1]
     134:	03 0e                	add    ecx,DWORD PTR [rsi]
     136:	3a 21                	cmp    ah,BYTE PTR [rcx]
     138:	01 3b                	add    DWORD PTR [rbx],edi
     13a:	0b 39                	or     edi,DWORD PTR [rcx]
     13c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     13f:	02 17                	add    dl,BYTE PTR [rdi]
     141:	b7 42                	mov    bh,0x42
     143:	17                   	(bad)
     144:	00 00                	add    BYTE PTR [rax],al
     146:	14 48                	adc    al,0x48
     148:	01 7d 01             	add    DWORD PTR [rbp+0x1],edi
     14b:	7f 13                	jg     160 <__abi_tag-0x21c>
     14d:	00 00                	add    BYTE PTR [rax],al
     14f:	15 11 01 25 0e       	adc    eax,0xe250111
     154:	13 0b                	adc    ecx,DWORD PTR [rbx]
     156:	03 1f                	add    ebx,DWORD PTR [rdi]
     158:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     15a:	55                   	push   rbp
     15b:	17                   	(bad)
     15c:	11 01                	adc    DWORD PTR [rcx],eax
     15e:	10 17                	adc    BYTE PTR [rdi],dl
     160:	00 00                	add    BYTE PTR [rax],al
     162:	16                   	(bad)
     163:	0f 00 0b             	str    WORD PTR [rbx]
     166:	0b 00                	or     eax,DWORD PTR [rax]
     168:	00 17                	add    BYTE PTR [rdi],dl
     16a:	24 00                	and    al,0x0
     16c:	0b 0b                	or     ecx,DWORD PTR [rbx]
     16e:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     171:	08 00                	or     BYTE PTR [rax],al
     173:	00 18                	add    BYTE PTR [rax],bl
     175:	16                   	(bad)
     176:	00 03                	add    BYTE PTR [rbx],al
     178:	0e                   	(bad)
     179:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     17b:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490cba <_end+0x1348aca2>
     181:	00 00                	add    BYTE PTR [rax],al
     183:	19 15 01 49 13 01    	sbb    DWORD PTR [rip+0x1134901],edx        # 1134a8a <_end+0x112ea72>
     189:	13 00                	adc    eax,DWORD PTR [rax]
     18b:	00 1a                	add    BYTE PTR [rdx],bl
     18d:	26 00 00             	es add BYTE PTR [rax],al
     190:	00 1b                	add    BYTE PTR [rbx],bl
     192:	39 01                	cmp    DWORD PTR [rcx],eax
     194:	03 08                	add    ecx,DWORD PTR [rax]
     196:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     198:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010cd7 <_end+0x1300acbf>
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	1c 08                	sbb    al,0x8
     1a2:	00 3a                	add    BYTE PTR [rdx],bh
     1a4:	0b 3b                	or     edi,DWORD PTR [rbx]
     1a6:	05 39 0b 18 13       	add    eax,0x13180b39
     1ab:	00 00                	add    BYTE PTR [rax],al
     1ad:	1d 15 00 00 00       	sbb    eax,0x15
     1b2:	1e                   	(bad)
     1b3:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     1b6:	19 03                	sbb    DWORD PTR [rbx],eax
     1b8:	0e                   	(bad)
     1b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1bb:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e0cfa <_end+0xe6dace2>
     1c1:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     1c5:	01 13                	add    DWORD PTR [rbx],edx
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	1f                   	(bad)
     1ca:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     1cd:	19 03                	sbb    DWORD PTR [rbx],eax
     1cf:	0e                   	(bad)
     1d0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1d2:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490d11 <_end+0x1348acf9>
     1d8:	20 0b                	and    BYTE PTR [rbx],cl
     1da:	01 13                	add    DWORD PTR [rbx],edx
     1dc:	00 00                	add    BYTE PTR [rax],al
     1de:	20 05 00 03 0e 3a    	and    BYTE PTR [rip+0x3a0e0300],al        # 3a0e04e4 <_end+0x3a0da4cc>
     1e4:	0b 3b                	or     edi,DWORD PTR [rbx]
     1e6:	05 39 0b 49 13       	add    eax,0x13490b39
     1eb:	00 00                	add    BYTE PTR [rax],al
     1ed:	21 2e                	and    DWORD PTR [rsi],ebp
     1ef:	01 3f                	add    DWORD PTR [rdi],edi
     1f1:	19 03                	sbb    DWORD PTR [rbx],eax
     1f3:	08 3a                	or     BYTE PTR [rdx],bh
     1f5:	0b 3b                	or     edi,DWORD PTR [rbx]
     1f7:	05 39 0b 49 13       	add    eax,0x13490b39
     1fc:	3c 19                	cmp    al,0x19
     1fe:	01 13                	add    DWORD PTR [rbx],edx
     200:	00 00                	add    BYTE PTR [rax],al
     202:	22 2e                	and    ch,BYTE PTR [rsi]
     204:	01 3f                	add    DWORD PTR [rdi],edi
     206:	19 03                	sbb    DWORD PTR [rbx],eax
     208:	0e                   	(bad)
     209:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     20b:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1870d4a <_end+0x186ad32>
     211:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     214:	01 13                	add    DWORD PTR [rbx],edx
     216:	00 00                	add    BYTE PTR [rax],al
     218:	23 2e                	and    ebp,DWORD PTR [rsi]
     21a:	00 3f                	add    BYTE PTR [rdi],bh
     21c:	19 03                	sbb    DWORD PTR [rbx],eax
     21e:	0e                   	(bad)
     21f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     221:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490d60 <_end+0x1348ad48>
     227:	3c 19                	cmp    al,0x19
     229:	00 00                	add    BYTE PTR [rax],al
     22b:	24 39                	and    al,0x39
     22d:	01 03                	add    DWORD PTR [rbx],eax
     22f:	0e                   	(bad)
     230:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     232:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010d71 <_end+0x1300ad59>
     238:	00 00                	add    BYTE PTR [rax],al
     23a:	25 34 00 03 0e       	and    eax,0xe030034
     23f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     241:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     243:	39 0b                	cmp    DWORD PTR [rbx],ecx
     245:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
     249:	00 00                	add    BYTE PTR [rax],al
     24b:	26 2e 01 3f          	es cs add DWORD PTR [rdi],edi
     24f:	19 03                	sbb    DWORD PTR [rbx],eax
     251:	0e                   	(bad)
     252:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     254:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     256:	39 0b                	cmp    DWORD PTR [rbx],ecx
     258:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     259:	0e                   	(bad)
     25a:	3c 19                	cmp    al,0x19
     25c:	01 13                	add    DWORD PTR [rbx],edx
     25e:	00 00                	add    BYTE PTR [rax],al
     260:	27                   	(bad)
     261:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     264:	19 03                	sbb    DWORD PTR [rbx],eax
     266:	0e                   	(bad)
     267:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     269:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     26b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     26d:	49 13 11             	adc    rdx,QWORD PTR [r9]
     270:	01 12                	add    DWORD PTR [rdx],edx
     272:	07                   	(bad)
     273:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     277:	00 00                	add    BYTE PTR [rax],al
     279:	28 34 00             	sub    BYTE PTR [rax+rax*1],dh
     27c:	03 0e                	add    ecx,DWORD PTR [rsi]
     27e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     280:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     282:	39 0b                	cmp    DWORD PTR [rbx],ecx
     284:	49 13 1c 05 00 00 29 	adc    rbx,QWORD PTR [rax*1+0x1d290000]
     28b:	1d 
     28c:	01 31                	add    DWORD PTR [rcx],esi
     28e:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     291:	b8 42 0b 55 17       	mov    eax,0x17550b42
     296:	58                   	pop    rax
     297:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     29a:	57                   	push   rdi
     29b:	0b 01                	or     eax,DWORD PTR [rcx]
     29d:	13 00                	adc    eax,DWORD PTR [rax]
     29f:	00 2a                	add    BYTE PTR [rdx],ch
     2a1:	05 00 31 13 02       	add    eax,0x2133100
     2a6:	17                   	(bad)
     2a7:	b7 42                	mov    bh,0x42
     2a9:	17                   	(bad)
     2aa:	00 00                	add    BYTE PTR [rax],al
     2ac:	00 01                	add    BYTE PTR [rcx],al
     2ae:	05 00 49 13 00       	add    eax,0x134900
     2b3:	00 02                	add    BYTE PTR [rdx],al
     2b5:	08 00                	or     BYTE PTR [rax],al
     2b7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2b9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2bb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2bd:	18 13                	sbb    BYTE PTR [rbx],dl
     2bf:	00 00                	add    BYTE PTR [rax],al
     2c1:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     2c4:	02 18                	add    bl,BYTE PTR [rax]
     2c6:	7e 18                	jle    2e0 <__abi_tag-0x9c>
     2c8:	00 00                	add    BYTE PTR [rax],al
     2ca:	04 05                	add    al,0x5
     2cc:	00 31                	add    BYTE PTR [rcx],dh
     2ce:	13 02                	adc    eax,DWORD PTR [rdx]
     2d0:	17                   	(bad)
     2d1:	b7 42                	mov    bh,0x42
     2d3:	17                   	(bad)
     2d4:	00 00                	add    BYTE PTR [rax],al
     2d6:	05 24 00 0b 0b       	add    eax,0xb0b0024
     2db:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     2de:	0e                   	(bad)
     2df:	00 00                	add    BYTE PTR [rax],al
     2e1:	06                   	(bad)
     2e2:	16                   	(bad)
     2e3:	00 03                	add    BYTE PTR [rbx],al
     2e5:	0e                   	(bad)
     2e6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2e8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2ea:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2ec:	49 13 00             	adc    rax,QWORD PTR [r8]
     2ef:	00 07                	add    BYTE PTR [rdi],al
     2f1:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     2f6:	0b 3b                	or     edi,DWORD PTR [rbx]
     2f8:	0b 39                	or     edi,DWORD PTR [rcx]
     2fa:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2fd:	38 0b                	cmp    BYTE PTR [rbx],cl
     2ff:	00 00                	add    BYTE PTR [rax],al
     301:	08 0f                	or     BYTE PTR [rdi],cl
     303:	00 0b                	add    BYTE PTR [rbx],cl
     305:	21 08                	and    DWORD PTR [rax],ecx
     307:	49 13 00             	adc    rax,QWORD PTR [r8]
     30a:	00 09                	add    BYTE PTR [rcx],cl
     30c:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
     310:	7f 13                	jg     325 <__abi_tag-0x57>
     312:	00 00                	add    BYTE PTR [rax],al
     314:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
     317:	03 0e                	add    ecx,DWORD PTR [rsi]
     319:	3a 21                	cmp    ah,BYTE PTR [rcx]
     31b:	01 3b                	add    DWORD PTR [rbx],edi
     31d:	0b 39                	or     edi,DWORD PTR [rcx]
     31f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     322:	02 17                	add    dl,BYTE PTR [rdi]
     324:	b7 42                	mov    bh,0x42
     326:	17                   	(bad)
     327:	00 00                	add    BYTE PTR [rax],al
     329:	0b 2e                	or     ebp,DWORD PTR [rsi]
     32b:	01 3f                	add    DWORD PTR [rdi],edi
     32d:	19 03                	sbb    DWORD PTR [rbx],eax
     32f:	0e                   	(bad)
     330:	3a 21                	cmp    ah,BYTE PTR [rcx]
     332:	08 3b                	or     BYTE PTR [rbx],bh
     334:	05 39 0b 49 13       	add    eax,0x13490b39
     339:	3c 19                	cmp    al,0x19
     33b:	01 13                	add    DWORD PTR [rbx],edx
     33d:	00 00                	add    BYTE PTR [rax],al
     33f:	0c 1d                	or     al,0x1d
     341:	01 31                	add    DWORD PTR [rcx],esi
     343:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     346:	b8 42 0b 55 17       	mov    eax,0x17550b42
     34b:	58                   	pop    rax
     34c:	21 01                	and    DWORD PTR [rcx],eax
     34e:	59                   	pop    rcx
     34f:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     352:	01 13                	add    DWORD PTR [rbx],edx
     354:	00 00                	add    BYTE PTR [rax],al
     356:	0d 05 00 03 0e       	or     eax,0xe030005
     35b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     35d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     35f:	39 0b                	cmp    DWORD PTR [rbx],ecx
     361:	49 13 00             	adc    rax,QWORD PTR [r8]
     364:	00 0e                	add    BYTE PTR [rsi],cl
     366:	34 00                	xor    al,0x0
     368:	31 13                	xor    DWORD PTR [rbx],edx
     36a:	02 17                	add    dl,BYTE PTR [rdi]
     36c:	b7 42                	mov    bh,0x42
     36e:	17                   	(bad)
     36f:	00 00                	add    BYTE PTR [rax],al
     371:	0f 48 00             	cmovs  eax,DWORD PTR [rax]
     374:	7d 01                	jge    377 <__abi_tag-0x5>
     376:	7f 13                	jg     38b <__abi_tag+0xf>
     378:	00 00                	add    BYTE PTR [rax],al
     37a:	10 26                	adc    BYTE PTR [rsi],ah
     37c:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     37f:	00 00                	add    BYTE PTR [rax],al
     381:	11 2e                	adc    DWORD PTR [rsi],ebp
     383:	01 3f                	add    DWORD PTR [rdi],edi
     385:	19 03                	sbb    DWORD PTR [rbx],eax
     387:	0e                   	(bad)
     388:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     38a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     38c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     38e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     392:	01 13                	add    DWORD PTR [rbx],edx
     394:	00 00                	add    BYTE PTR [rax],al
     396:	12 05 00 03 0e 3a    	adc    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e069c <_end+0x3a0da684>
     39c:	21 01                	and    DWORD PTR [rcx],eax
     39e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3a0:	39 0b                	cmp    DWORD PTR [rbx],ecx
     3a2:	49 13 02             	adc    rax,QWORD PTR [r10]
     3a5:	17                   	(bad)
     3a6:	b7 42                	mov    bh,0x42
     3a8:	17                   	(bad)
     3a9:	00 00                	add    BYTE PTR [rax],al
     3ab:	13 48 00             	adc    ecx,DWORD PTR [rax+0x0]
     3ae:	7d 01                	jge    3b1 <__abi_tag+0x35>
     3b0:	83 01 18             	add    DWORD PTR [rcx],0x18
     3b3:	00 00                	add    BYTE PTR [rax],al
     3b5:	14 05                	adc    al,0x5
     3b7:	00 03                	add    BYTE PTR [rbx],al
     3b9:	08 3a                	or     BYTE PTR [rdx],bh
     3bb:	0b 3b                	or     edi,DWORD PTR [rbx]
     3bd:	05 39 0b 49 13       	add    eax,0x13490b39
     3c2:	00 00                	add    BYTE PTR [rax],al
     3c4:	15 0b 01 55 17       	adc    eax,0x1755010b
     3c9:	00 00                	add    BYTE PTR [rax],al
     3cb:	16                   	(bad)
     3cc:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     3cf:	19 03                	sbb    DWORD PTR [rbx],eax
     3d1:	08 3a                	or     BYTE PTR [rdx],bh
     3d3:	21 0b                	and    DWORD PTR [rbx],ecx
     3d5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3d7:	39 21                	cmp    DWORD PTR [rcx],esp
     3d9:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     3dc:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     3e0:	01 13                	add    DWORD PTR [rbx],edx
     3e2:	00 00                	add    BYTE PTR [rax],al
     3e4:	17                   	(bad)
     3e5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     3e8:	19 03                	sbb    DWORD PTR [rbx],eax
     3ea:	0e                   	(bad)
     3eb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3ed:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3ef:	39 0b                	cmp    DWORD PTR [rbx],ecx
     3f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3f2:	0e                   	(bad)
     3f3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     3f7:	01 13                	add    DWORD PTR [rbx],edx
     3f9:	00 00                	add    BYTE PTR [rax],al
     3fb:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
     3fe:	03 0e                	add    ecx,DWORD PTR [rsi]
     400:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     404:	6c                   	ins    BYTE PTR es:[rdi],dx
     405:	19 02                	sbb    DWORD PTR [rdx],eax
     407:	18 00                	sbb    BYTE PTR [rax],al
     409:	00 19                	add    BYTE PTR [rcx],bl
     40b:	34 00                	xor    al,0x0
     40d:	03 08                	add    ecx,DWORD PTR [rax]
     40f:	3a 21                	cmp    ah,BYTE PTR [rcx]
     411:	01 3b                	add    DWORD PTR [rbx],edi
     413:	0b 39                	or     edi,DWORD PTR [rcx]
     415:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     418:	02 17                	add    dl,BYTE PTR [rdi]
     41a:	b7 42                	mov    bh,0x42
     41c:	17                   	(bad)
     41d:	00 00                	add    BYTE PTR [rax],al
     41f:	1a 48 01             	sbb    cl,BYTE PTR [rax+0x1]
     422:	7d 01                	jge    425 <__abi_tag+0xa9>
     424:	7f 13                	jg     439 <__abi_tag+0xbd>
     426:	01 13                	add    DWORD PTR [rbx],edx
     428:	00 00                	add    BYTE PTR [rax],al
     42a:	1b 01                	sbb    eax,DWORD PTR [rcx]
     42c:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     42f:	01 13                	add    DWORD PTR [rbx],edx
     431:	00 00                	add    BYTE PTR [rax],al
     433:	1c 21                	sbb    al,0x21
     435:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     438:	2f                   	(bad)
     439:	0b 00                	or     eax,DWORD PTR [rax]
     43b:	00 1d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],bl        # 193f056f <_end+0x193ea557>
     441:	03 0e                	add    ecx,DWORD PTR [rsi]
     443:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     445:	3b 05 39 21 01 6e    	cmp    eax,DWORD PTR [rip+0x6e012139]        # 6e012584 <_end+0x6e00c56c>
     44b:	0e                   	(bad)
     44c:	49 13 20             	adc    rsp,QWORD PTR [r8]
     44f:	21 03                	and    DWORD PTR [rbx],eax
     451:	34 19                	xor    al,0x19
     453:	01 13                	add    DWORD PTR [rbx],edx
     455:	00 00                	add    BYTE PTR [rax],al
     457:	1e                   	(bad)
     458:	01 01                	add    DWORD PTR [rcx],eax
     45a:	87 42 19             	xchg   DWORD PTR [rdx+0x19],eax
     45d:	49 13 01             	adc    rax,QWORD PTR [r9]
     460:	13 00                	adc    eax,DWORD PTR [rax]
     462:	00 1f                	add    BYTE PTR [rdi],bl
     464:	21 00                	and    DWORD PTR [rax],eax
     466:	2f                   	(bad)
     467:	0b 00                	or     eax,DWORD PTR [rax]
     469:	00 20                	add    BYTE PTR [rax],ah
     46b:	13 01                	adc    eax,DWORD PTR [rcx]
     46d:	03 0e                	add    ecx,DWORD PTR [rsi]
     46f:	0b 0b                	or     ecx,DWORD PTR [rbx]
     471:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     473:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     475:	39 21                	cmp    DWORD PTR [rcx],esp
     477:	10 01                	adc    BYTE PTR [rcx],al
     479:	13 00                	adc    eax,DWORD PTR [rax]
     47b:	00 21                	add    BYTE PTR [rcx],ah
     47d:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     480:	19 03                	sbb    DWORD PTR [rbx],eax
     482:	0e                   	(bad)
     483:	3a 21                	cmp    ah,BYTE PTR [rcx]
     485:	01 3b                	add    DWORD PTR [rbx],edi
     487:	0b 39                	or     edi,DWORD PTR [rcx]
     489:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     48c:	49 13 11             	adc    rdx,QWORD PTR [r9]
     48f:	01 12                	add    DWORD PTR [rdx],edx
     491:	07                   	(bad)
     492:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     496:	01 13                	add    DWORD PTR [rbx],edx
     498:	00 00                	add    BYTE PTR [rax],al
     49a:	22 2e                	and    ch,BYTE PTR [rsi]
     49c:	00 3f                	add    BYTE PTR [rdi],bh
     49e:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     4a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4a2:	0e                   	(bad)
     4a3:	03 0e                	add    ecx,DWORD PTR [rsi]
     4a5:	00 00                	add    BYTE PTR [rax],al
     4a7:	23 13                	and    edx,DWORD PTR [rbx]
     4a9:	01 0b                	add    DWORD PTR [rbx],ecx
     4ab:	0b 3a                	or     edi,DWORD PTR [rdx]
     4ad:	21 08                	and    DWORD PTR [rax],ecx
     4af:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4b1:	39 21                	cmp    DWORD PTR [rcx],esp
     4b3:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     4b6:	01 13                	add    DWORD PTR [rbx],edx
     4b8:	00 00                	add    BYTE PTR [rax],al
     4ba:	24 0d                	and    al,0xd
     4bc:	00 03                	add    BYTE PTR [rbx],al
     4be:	08 3a                	or     BYTE PTR [rdx],bh
     4c0:	21 08                	and    DWORD PTR [rax],ecx
     4c2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4c4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     4c6:	49 13 38             	adc    rdi,QWORD PTR [r8]
     4c9:	0b 00                	or     eax,DWORD PTR [rax]
     4cb:	00 25 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],ah        # 193f05ff <_end+0x193ea5e7>
     4d1:	03 0e                	add    ecx,DWORD PTR [rsi]
     4d3:	3a 21                	cmp    ah,BYTE PTR [rcx]
     4d5:	08 3b                	or     BYTE PTR [rbx],bh
     4d7:	05 39 21 0d 3c       	add    eax,0x3c0d2139
     4dc:	19 01                	sbb    DWORD PTR [rcx],eax
     4de:	13 00                	adc    eax,DWORD PTR [rax]
     4e0:	00 26                	add    BYTE PTR [rsi],ah
     4e2:	34 00                	xor    al,0x0
     4e4:	03 0e                	add    ecx,DWORD PTR [rsi]
     4e6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4e8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4ea:	39 21                	cmp    DWORD PTR [rcx],esp
     4ec:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     4ef:	1c 0b                	sbb    al,0xb
     4f1:	00 00                	add    BYTE PTR [rax],al
     4f3:	27                   	(bad)
     4f4:	05 00 31 13 00       	add    eax,0x133100
     4f9:	00 28                	add    BYTE PTR [rax],ch
     4fb:	34 00                	xor    al,0x0
     4fd:	03 08                	add    ecx,DWORD PTR [rax]
     4ff:	3a 21                	cmp    ah,BYTE PTR [rcx]
     501:	01 3b                	add    DWORD PTR [rbx],edi
     503:	0b 39                	or     edi,DWORD PTR [rcx]
     505:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     508:	00 00                	add    BYTE PTR [rax],al
     50a:	29 34 00             	sub    DWORD PTR [rax+rax*1],esi
     50d:	03 0e                	add    ecx,DWORD PTR [rsi]
     50f:	3a 21                	cmp    ah,BYTE PTR [rcx]
     511:	01 3b                	add    DWORD PTR [rbx],edi
     513:	0b 39                	or     edi,DWORD PTR [rcx]
     515:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     518:	00 00                	add    BYTE PTR [rax],al
     51a:	2a 1d 01 31 13 52    	sub    bl,BYTE PTR [rip+0x52133101]        # 52133621 <_end+0x5212d609>
     520:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     526:	58                   	pop    rax
     527:	21 05 59 21 b1 04    	and    DWORD PTR [rip+0x4b12159],eax        # 4b12686 <_end+0x4b0c66e>
     52d:	57                   	push   rdi
     52e:	21 1c 00             	and    DWORD PTR [rax+rax*1],ebx
     531:	00 2b                	add    BYTE PTR [rbx],ch
     533:	1d 01 31 13 52       	sbb    eax,0x52133101
     538:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     53e:	12 07                	adc    al,BYTE PTR [rdi]
     540:	58                   	pop    rax
     541:	21 01                	and    DWORD PTR [rcx],eax
     543:	59                   	pop    rcx
     544:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     547:	01 13                	add    DWORD PTR [rbx],edx
     549:	00 00                	add    BYTE PTR [rax],al
     54b:	2c 2e                	sub    al,0x2e
     54d:	01 3f                	add    DWORD PTR [rdi],edi
     54f:	19 03                	sbb    DWORD PTR [rbx],eax
     551:	0e                   	(bad)
     552:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     554:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     556:	39 21                	cmp    DWORD PTR [rcx],esp
     558:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     55b:	20 21                	and    BYTE PTR [rcx],ah
     55d:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
     560:	01 13                	add    DWORD PTR [rbx],edx
     562:	00 00                	add    BYTE PTR [rax],al
     564:	2d 37 00 49 13       	sub    eax,0x13490037
     569:	00 00                	add    BYTE PTR [rax],al
     56b:	2e 15 01 49 13 01    	cs adc eax,0x1134901
     571:	13 00                	adc    eax,DWORD PTR [rax]
     573:	00 2f                	add    BYTE PTR [rdi],ch
     575:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     578:	19 03                	sbb    DWORD PTR [rbx],eax
     57a:	08 3a                	or     BYTE PTR [rdx],bh
     57c:	21 0a                	and    DWORD PTR [rdx],ecx
     57e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     580:	39 21                	cmp    DWORD PTR [rcx],esp
     582:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     585:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     589:	00 00                	add    BYTE PTR [rax],al
     58b:	30 18                	xor    BYTE PTR [rax],bl
     58d:	00 00                	add    BYTE PTR [rax],al
     58f:	00 31                	add    BYTE PTR [rcx],dh
     591:	34 00                	xor    al,0x0
     593:	31 13                	xor    DWORD PTR [rbx],edx
     595:	00 00                	add    BYTE PTR [rax],al
     597:	32 0b                	xor    cl,BYTE PTR [rbx]
     599:	01 31                	add    DWORD PTR [rcx],esi
     59b:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
     59e:	01 13                	add    DWORD PTR [rbx],edx
     5a0:	00 00                	add    BYTE PTR [rax],al
     5a2:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
     5a5:	03 0e                	add    ecx,DWORD PTR [rsi]
     5a7:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     5ab:	6c                   	ins    BYTE PTR es:[rdi],dx
     5ac:	19 00                	sbb    DWORD PTR [rax],eax
     5ae:	00 34 0b             	add    BYTE PTR [rbx+rcx*1],dh
     5b1:	01 00                	add    DWORD PTR [rax],eax
     5b3:	00 35 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],dh        # 193f06e7 <_end+0x193ea6cf>
     5b9:	03 0e                	add    ecx,DWORD PTR [rsi]
     5bb:	3a 21                	cmp    ah,BYTE PTR [rcx]
     5bd:	01 3b                	add    DWORD PTR [rbx],edi
     5bf:	0b 39                	or     edi,DWORD PTR [rcx]
     5c1:	21 0a                	and    DWORD PTR [rdx],ecx
     5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5c4:	0e                   	(bad)
     5c5:	49 13 11             	adc    rdx,QWORD PTR [r9]
     5c8:	01 12                	add    DWORD PTR [rdx],edx
     5ca:	07                   	(bad)
     5cb:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
     5d0:	13 00                	adc    eax,DWORD PTR [rax]
     5d2:	00 36                	add    BYTE PTR [rsi],dh
     5d4:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     5d9:	21 01                	and    DWORD PTR [rcx],eax
     5db:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5dd:	39 21                	cmp    DWORD PTR [rcx],esp
     5df:	35 49 13 02 18       	xor    eax,0x18021349
     5e4:	00 00                	add    BYTE PTR [rax],al
     5e6:	37                   	(bad)
     5e7:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     5ea:	19 03                	sbb    DWORD PTR [rbx],eax
     5ec:	0e                   	(bad)
     5ed:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     5ef:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5f1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5f4:	0e                   	(bad)
     5f5:	49 13 20             	adc    rsp,QWORD PTR [r8]
     5f8:	0b 01                	or     eax,DWORD PTR [rcx]
     5fa:	13 00                	adc    eax,DWORD PTR [rax]
     5fc:	00 38                	add    BYTE PTR [rax],bh
     5fe:	05 00 03 08 3a       	add    eax,0x3a080300
     603:	21 02                	and    DWORD PTR [rdx],eax
     605:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     607:	39 0b                	cmp    DWORD PTR [rbx],ecx
     609:	49 13 00             	adc    rax,QWORD PTR [r8]
     60c:	00 39                	add    BYTE PTR [rcx],bh
     60e:	2e 01 31             	cs add DWORD PTR [rcx],esi
     611:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     614:	11 01                	adc    DWORD PTR [rcx],eax
     616:	12 07                	adc    al,BYTE PTR [rdi]
     618:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     61c:	01 13                	add    DWORD PTR [rbx],edx
     61e:	00 00                	add    BYTE PTR [rax],al
     620:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     622:	01 31                	add    DWORD PTR [rcx],esi
     624:	13 11                	adc    edx,DWORD PTR [rcx]
     626:	01 12                	add    DWORD PTR [rdx],edx
     628:	07                   	(bad)
     629:	01 13                	add    DWORD PTR [rbx],edx
     62b:	00 00                	add    BYTE PTR [rax],al
     62d:	3b 11                	cmp    edx,DWORD PTR [rcx]
     62f:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1943 <_end+0x30ab92b>
     635:	1f                   	(bad)
     636:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     638:	11 01                	adc    DWORD PTR [rcx],eax
     63a:	12 07                	adc    al,BYTE PTR [rdi]
     63c:	10 17                	adc    BYTE PTR [rdi],dl
     63e:	00 00                	add    BYTE PTR [rax],al
     640:	3c 24                	cmp    al,0x24
     642:	00 0b                	add    BYTE PTR [rbx],cl
     644:	0b 3e                	or     edi,DWORD PTR [rsi]
     646:	0b 03                	or     eax,DWORD PTR [rbx]
     648:	08 00                	or     BYTE PTR [rax],al
     64a:	00 3d 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],bh        # b0b065f <_end+0xb0aa647>
     650:	00 00                	add    BYTE PTR [rax],al
     652:	3e 16                	ds (bad)
     654:	00 03                	add    BYTE PTR [rbx],al
     656:	0e                   	(bad)
     657:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     659:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491198 <_end+0x1348b180>
     65f:	00 00                	add    BYTE PTR [rax],al
     661:	3f                   	(bad)
     662:	26 00 00             	es add BYTE PTR [rax],al
     665:	00 40 39             	add    BYTE PTR [rax+0x39],al
     668:	01 03                	add    DWORD PTR [rbx],eax
     66a:	08 3a                	or     BYTE PTR [rdx],bh
     66c:	0b 3b                	or     edi,DWORD PTR [rbx]
     66e:	05 39 0b 01 13       	add    eax,0x13010b39
     673:	00 00                	add    BYTE PTR [rax],al
     675:	41 08 00             	or     BYTE PTR [r8],al
     678:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     67a:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 131811b9 <_end+0x1317b1a1>
     680:	00 00                	add    BYTE PTR [rax],al
     682:	42 15 00 00 00 43    	rex.X adc eax,0x43000000
     688:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     68b:	19 03                	sbb    DWORD PTR [rbx],eax
     68d:	0e                   	(bad)
     68e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     690:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e11cf <_end+0xe6db1b7>
     696:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     69a:	01 13                	add    DWORD PTR [rbx],edx
     69c:	00 00                	add    BYTE PTR [rax],al
     69e:	44                   	rex.R
     69f:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6a2:	19 03                	sbb    DWORD PTR [rbx],eax
     6a4:	08 3a                	or     BYTE PTR [rdx],bh
     6a6:	0b 3b                	or     edi,DWORD PTR [rbx]
     6a8:	05 39 0b 49 13       	add    eax,0x13490b39
     6ad:	3c 19                	cmp    al,0x19
     6af:	01 13                	add    DWORD PTR [rbx],edx
     6b1:	00 00                	add    BYTE PTR [rax],al
     6b3:	45                   	rex.RB
     6b4:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6b7:	19 03                	sbb    DWORD PTR [rbx],eax
     6b9:	0e                   	(bad)
     6ba:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6bc:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18711fb <_end+0x186b1e3>
     6c2:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     6c5:	01 13                	add    DWORD PTR [rbx],edx
     6c7:	00 00                	add    BYTE PTR [rax],al
     6c9:	46                   	rex.RX
     6ca:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     6cd:	19 03                	sbb    DWORD PTR [rbx],eax
     6cf:	0e                   	(bad)
     6d0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6d2:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491211 <_end+0x1348b1f9>
     6d8:	3c 19                	cmp    al,0x19
     6da:	00 00                	add    BYTE PTR [rax],al
     6dc:	47 39 01             	rex.RXB cmp DWORD PTR [r9],r8d
     6df:	03 0e                	add    ecx,DWORD PTR [rsi]
     6e1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6e3:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011222 <_end+0x1300b20a>
     6e9:	00 00                	add    BYTE PTR [rax],al
     6eb:	48 16                	rex.W (bad)
     6ed:	00 03                	add    BYTE PTR [rbx],al
     6ef:	0e                   	(bad)
     6f0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6f2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6f4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6f6:	49 13 88 01 0b 00 00 	adc    rcx,QWORD PTR [r8+0xb01]
     6fd:	49                   	rex.WB
     6fe:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     701:	19 03                	sbb    DWORD PTR [rbx],eax
     703:	0e                   	(bad)
     704:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     706:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     708:	39 0b                	cmp    DWORD PTR [rbx],ecx
     70a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     70b:	0e                   	(bad)
     70c:	3c 19                	cmp    al,0x19
     70e:	01 13                	add    DWORD PTR [rbx],edx
     710:	00 00                	add    BYTE PTR [rax],al
     712:	4a                   	rex.WX
     713:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     716:	19 03                	sbb    DWORD PTR [rbx],eax
     718:	0e                   	(bad)
     719:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     71b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     71d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     71f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     720:	0e                   	(bad)
     721:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     725:	00 00                	add    BYTE PTR [rax],al
     727:	4b                   	rex.WXB
     728:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     72b:	19 03                	sbb    DWORD PTR [rbx],eax
     72d:	0e                   	(bad)
     72e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     730:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     732:	39 0b                	cmp    DWORD PTR [rbx],ecx
     734:	87 01                	xchg   DWORD PTR [rcx],eax
     736:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     739:	01 13                	add    DWORD PTR [rbx],edx
     73b:	00 00                	add    BYTE PTR [rax],al
     73d:	4c 0b 01             	or     r8,QWORD PTR [rcx]
     740:	55                   	push   rbp
     741:	17                   	(bad)
     742:	01 13                	add    DWORD PTR [rbx],edx
     744:	00 00                	add    BYTE PTR [rax],al
     746:	4d 0b 01             	or     r8,QWORD PTR [r9]
     749:	11 01                	adc    DWORD PTR [rcx],eax
     74b:	12 07                	adc    al,BYTE PTR [rdi]
     74d:	00 00                	add    BYTE PTR [rax],al
     74f:	4e 1d 01 31 13 52    	rex.WRX sbb rax,0x52133101
     755:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     75b:	58                   	pop    rax
     75c:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     75f:	57                   	push   rdi
     760:	0b 00                	or     eax,DWORD PTR [rax]
     762:	00 4f 05             	add    BYTE PTR [rdi+0x5],cl
     765:	00 31                	add    BYTE PTR [rcx],dh
     767:	13 02                	adc    eax,DWORD PTR [rdx]
     769:	18 00                	sbb    BYTE PTR [rax],al
     76b:	00 50 1d             	add    BYTE PTR [rax+0x1d],dl
     76e:	01 31                	add    DWORD PTR [rcx],esi
     770:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
     773:	58                   	pop    rax
     774:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     777:	57                   	push   rdi
     778:	0b 01                	or     eax,DWORD PTR [rcx]
     77a:	13 00                	adc    eax,DWORD PTR [rax]
     77c:	00 51 2e             	add    BYTE PTR [rcx+0x2e],dl
     77f:	01 03                	add    DWORD PTR [rbx],eax
     781:	0e                   	(bad)
     782:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     784:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     786:	39 0b                	cmp    DWORD PTR [rbx],ecx
     788:	49 13 20             	adc    rsp,QWORD PTR [r8]
     78b:	0b 01                	or     eax,DWORD PTR [rcx]
     78d:	13 00                	adc    eax,DWORD PTR [rax]
     78f:	00 52 2e             	add    BYTE PTR [rdx+0x2e],dl
     792:	01 3f                	add    DWORD PTR [rdi],edi
     794:	19 03                	sbb    DWORD PTR [rbx],eax
     796:	0e                   	(bad)
     797:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     799:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     79b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     79d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     79e:	0e                   	(bad)
     79f:	20 0b                	and    BYTE PTR [rbx],cl
     7a1:	01 13                	add    DWORD PTR [rbx],edx
     7a3:	00 00                	add    BYTE PTR [rax],al
     7a5:	53                   	push   rbx
     7a6:	1d 01 31 13 52       	sbb    eax,0x52133101
     7ab:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     7b1:	58                   	pop    rax
     7b2:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     7b5:	57                   	push   rdi
     7b6:	0b 01                	or     eax,DWORD PTR [rcx]
     7b8:	13 00                	adc    eax,DWORD PTR [rax]
     7ba:	00 54 1d 01          	add    BYTE PTR [rbp+rbx*1+0x1],dl
     7be:	31 13                	xor    DWORD PTR [rbx],edx
     7c0:	52                   	push   rdx
     7c1:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     7c7:	12 07                	adc    al,BYTE PTR [rdi]
     7c9:	58                   	pop    rax
     7ca:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     7cd:	57                   	push   rdi
     7ce:	0b 00                	or     eax,DWORD PTR [rax]
     7d0:	00 55 1d             	add    BYTE PTR [rbp+0x1d],dl
     7d3:	01 31                	add    DWORD PTR [rcx],esi
     7d5:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     7d8:	b8 42 0b 11 01       	mov    eax,0x1110b42
     7dd:	12 07                	adc    al,BYTE PTR [rdi]
     7df:	58                   	pop    rax
     7e0:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     7e3:	57                   	push   rdi
     7e4:	0b 01                	or     eax,DWORD PTR [rcx]
     7e6:	13 00                	adc    eax,DWORD PTR [rax]
     7e8:	00 56 0b             	add    BYTE PTR [rsi+0xb],dl
     7eb:	01 11                	add    DWORD PTR [rcx],edx
     7ed:	01 12                	add    DWORD PTR [rdx],edx
     7ef:	07                   	(bad)
     7f0:	01 13                	add    DWORD PTR [rbx],edx
     7f2:	00 00                	add    BYTE PTR [rax],al
     7f4:	57                   	push   rdi
     7f5:	1d 01 31 13 52       	sbb    eax,0x52133101
     7fa:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     800:	12 07                	adc    al,BYTE PTR [rdi]
     802:	58                   	pop    rax
     803:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     806:	57                   	push   rdi
     807:	0b 00                	or     eax,DWORD PTR [rax]
     809:	00 58 34             	add    BYTE PTR [rax+0x34],bl
     80c:	00 03                	add    BYTE PTR [rbx],al
     80e:	08 3a                	or     BYTE PTR [rdx],bh
     810:	0b 3b                	or     edi,DWORD PTR [rbx]
     812:	05 39 0b 49 13       	add    eax,0x13490b39
     817:	00 00                	add    BYTE PTR [rax],al
     819:	59                   	pop    rcx
     81a:	05 00 31 13 1c       	add    eax,0x1c133100
     81f:	0b 00                	or     eax,DWORD PTR [rax]
     821:	00 5a 48             	add    BYTE PTR [rdx+0x48],bl
     824:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
     827:	82                   	(bad)
     828:	01 19                	add    DWORD PTR [rcx],ebx
     82a:	7f 13                	jg     83f <__abi_tag+0x4c3>
     82c:	00 00                	add    BYTE PTR [rax],al
     82e:	00 01                	add    BYTE PTR [rcx],al
     830:	08 00                	or     BYTE PTR [rax],al
     832:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     834:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     836:	39 0b                	cmp    DWORD PTR [rbx],ecx
     838:	18 13                	sbb    BYTE PTR [rbx],dl
     83a:	00 00                	add    BYTE PTR [rax],al
     83c:	02 05 00 49 13 00    	add    al,BYTE PTR [rip+0x134900]        # 135142 <_end+0x12f12a>
     842:	00 03                	add    BYTE PTR [rbx],al
     844:	05 00 31 13 02       	add    eax,0x2133100
     849:	17                   	(bad)
     84a:	b7 42                	mov    bh,0x42
     84c:	17                   	(bad)
     84d:	00 00                	add    BYTE PTR [rax],al
     84f:	04 24                	add    al,0x24
     851:	00 0b                	add    BYTE PTR [rbx],cl
     853:	0b 3e                	or     edi,DWORD PTR [rsi]
     855:	0b 03                	or     eax,DWORD PTR [rbx]
     857:	0e                   	(bad)
     858:	00 00                	add    BYTE PTR [rax],al
     85a:	05 16 00 03 0e       	add    eax,0xe030016
     85f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     861:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     863:	39 0b                	cmp    DWORD PTR [rbx],ecx
     865:	49 13 00             	adc    rax,QWORD PTR [r8]
     868:	00 06                	add    BYTE PTR [rsi],al
     86a:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     86d:	19 03                	sbb    DWORD PTR [rbx],eax
     86f:	0e                   	(bad)
     870:	3a 21                	cmp    ah,BYTE PTR [rcx]
     872:	07                   	(bad)
     873:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134913b2 <_end+0x1348b39a>
     879:	3c 19                	cmp    al,0x19
     87b:	01 13                	add    DWORD PTR [rbx],edx
     87d:	00 00                	add    BYTE PTR [rax],al
     87f:	07                   	(bad)
     880:	0f 00 0b             	str    WORD PTR [rbx]
     883:	21 08                	and    DWORD PTR [rax],ecx
     885:	49 13 00             	adc    rax,QWORD PTR [r8]
     888:	00 08                	add    BYTE PTR [rax],cl
     88a:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     88d:	19 03                	sbb    DWORD PTR [rbx],eax
     88f:	0e                   	(bad)
     890:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     892:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     894:	39 0b                	cmp    DWORD PTR [rbx],ecx
     896:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     89a:	01 13                	add    DWORD PTR [rbx],edx
     89c:	00 00                	add    BYTE PTR [rax],al
     89e:	09 05 00 03 08 3a    	or     DWORD PTR [rip+0x3a080300],eax        # 3a080ba4 <_end+0x3a07ab8c>
     8a4:	0b 3b                	or     edi,DWORD PTR [rbx]
     8a6:	05 39 0b 49 13       	add    eax,0x13490b39
     8ab:	00 00                	add    BYTE PTR [rax],al
     8ad:	0a 2e                	or     ch,BYTE PTR [rsi]
     8af:	01 3f                	add    DWORD PTR [rdi],edi
     8b1:	19 03                	sbb    DWORD PTR [rbx],eax
     8b3:	08 3a                	or     BYTE PTR [rdx],bh
     8b5:	21 09                	and    DWORD PTR [rcx],ecx
     8b7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     8b9:	39 21                	cmp    DWORD PTR [rcx],esp
     8bb:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     8be:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     8c2:	01 13                	add    DWORD PTR [rbx],edx
     8c4:	00 00                	add    BYTE PTR [rax],al
     8c6:	0b 34 00             	or     esi,DWORD PTR [rax+rax*1]
     8c9:	03 0e                	add    ecx,DWORD PTR [rsi]
     8cb:	3a 21                	cmp    ah,BYTE PTR [rcx]
     8cd:	01 3b                	add    DWORD PTR [rbx],edi
     8cf:	0b 39                	or     edi,DWORD PTR [rcx]
     8d1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     8d4:	02 17                	add    dl,BYTE PTR [rdi]
     8d6:	b7 42                	mov    bh,0x42
     8d8:	17                   	(bad)
     8d9:	00 00                	add    BYTE PTR [rax],al
     8db:	0c 0d                	or     al,0xd
     8dd:	00 03                	add    BYTE PTR [rbx],al
     8df:	0e                   	(bad)
     8e0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     8e2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     8e4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     8e6:	49 13 38             	adc    rdi,QWORD PTR [r8]
     8e9:	0b 00                	or     eax,DWORD PTR [rax]
     8eb:	00 0d 1d 01 31 13    	add    BYTE PTR [rip+0x1331011d],cl        # 13310a0e <_end+0x1330a9f6>
     8f1:	52                   	push   rdx
     8f2:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     8f8:	58                   	pop    rax
     8f9:	21 01                	and    DWORD PTR [rcx],eax
     8fb:	59                   	pop    rcx
     8fc:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     8ff:	01 13                	add    DWORD PTR [rbx],edx
     901:	00 00                	add    BYTE PTR [rax],al
     903:	0e                   	(bad)
     904:	0b 01                	or     eax,DWORD PTR [rcx]
     906:	55                   	push   rbp
     907:	17                   	(bad)
     908:	00 00                	add    BYTE PTR [rax],al
     90a:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     90d:	3f                   	(bad)
     90e:	19 03                	sbb    DWORD PTR [rbx],eax
     910:	0e                   	(bad)
     911:	3a 21                	cmp    ah,BYTE PTR [rcx]
     913:	07                   	(bad)
     914:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     916:	39 0b                	cmp    DWORD PTR [rbx],ecx
     918:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     919:	0e                   	(bad)
     91a:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     91e:	01 13                	add    DWORD PTR [rbx],edx
     920:	00 00                	add    BYTE PTR [rax],al
     922:	10 01                	adc    BYTE PTR [rcx],al
     924:	01 87 42 19 49 13    	add    DWORD PTR [rdi+0x13491942],eax
     92a:	01 13                	add    DWORD PTR [rbx],edx
     92c:	00 00                	add    BYTE PTR [rax],al
     92e:	11 21                	adc    DWORD PTR [rcx],esp
     930:	00 2f                	add    BYTE PTR [rdi],ch
     932:	0b 00                	or     eax,DWORD PTR [rax]
     934:	00 12                	add    BYTE PTR [rdx],dl
     936:	34 00                	xor    al,0x0
     938:	03 08                	add    ecx,DWORD PTR [rax]
     93a:	3a 21                	cmp    ah,BYTE PTR [rcx]
     93c:	01 3b                	add    DWORD PTR [rbx],edi
     93e:	0b 39                	or     edi,DWORD PTR [rcx]
     940:	21 0e                	and    DWORD PTR [rsi],ecx
     942:	49 13 02             	adc    rax,QWORD PTR [r10]
     945:	17                   	(bad)
     946:	b7 42                	mov    bh,0x42
     948:	17                   	(bad)
     949:	00 00                	add    BYTE PTR [rax],al
     94b:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e0c51 <_end+0x3a0dac39>
     951:	21 01                	and    DWORD PTR [rcx],eax
     953:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     955:	39 0b                	cmp    DWORD PTR [rbx],ecx
     957:	49 13 00             	adc    rax,QWORD PTR [r8]
     95a:	00 14 34             	add    BYTE PTR [rsp+rsi*1],dl
     95d:	00 03                	add    BYTE PTR [rbx],al
     95f:	0e                   	(bad)
     960:	3a 21                	cmp    ah,BYTE PTR [rcx]
     962:	01 3b                	add    DWORD PTR [rbx],edi
     964:	0b 39                	or     edi,DWORD PTR [rcx]
     966:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     969:	00 00                	add    BYTE PTR [rax],al
     96b:	15 34 00 31 13       	adc    eax,0x13310034
     970:	02 17                	add    dl,BYTE PTR [rdi]
     972:	b7 42                	mov    bh,0x42
     974:	17                   	(bad)
     975:	00 00                	add    BYTE PTR [rax],al
     977:	16                   	(bad)
     978:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     97b:	19 03                	sbb    DWORD PTR [rbx],eax
     97d:	0e                   	(bad)
     97e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     980:	3b 05 39 21 01 6e    	cmp    eax,DWORD PTR [rip+0x6e012139]        # 6e012abf <_end+0x6e00caa7>
     986:	0e                   	(bad)
     987:	49 13 20             	adc    rsp,QWORD PTR [r8]
     98a:	21 03                	and    DWORD PTR [rbx],eax
     98c:	34 19                	xor    al,0x19
     98e:	01 13                	add    DWORD PTR [rbx],edx
     990:	00 00                	add    BYTE PTR [rax],al
     992:	17                   	(bad)
     993:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
     997:	00 00                	add    BYTE PTR [rax],al
     999:	18 13                	sbb    BYTE PTR [rbx],dl
     99b:	01 0b                	add    DWORD PTR [rbx],ecx
     99d:	0b 3a                	or     edi,DWORD PTR [rdx]
     99f:	21 07                	and    DWORD PTR [rdi],eax
     9a1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     9a3:	39 21                	cmp    DWORD PTR [rcx],esp
     9a5:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     9a8:	01 13                	add    DWORD PTR [rbx],edx
     9aa:	00 00                	add    BYTE PTR [rax],al
     9ac:	19 0d 00 03 08 3a    	sbb    DWORD PTR [rip+0x3a080300],ecx        # 3a080cb2 <_end+0x3a07ac9a>
     9b2:	21 07                	and    DWORD PTR [rdi],eax
     9b4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     9b6:	39 0b                	cmp    DWORD PTR [rbx],ecx
     9b8:	49 13 38             	adc    rdi,QWORD PTR [r8]
     9bb:	0b 00                	or     eax,DWORD PTR [rax]
     9bd:	00 1a                	add    BYTE PTR [rdx],bl
     9bf:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     9c2:	19 03                	sbb    DWORD PTR [rbx],eax
     9c4:	0e                   	(bad)
     9c5:	3a 21                	cmp    ah,BYTE PTR [rcx]
     9c7:	01 3b                	add    DWORD PTR [rbx],edi
     9c9:	0b 39                	or     edi,DWORD PTR [rcx]
     9cb:	21 0a                	and    DWORD PTR [rdx],ecx
     9cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9ce:	0e                   	(bad)
     9cf:	49 13 11             	adc    rdx,QWORD PTR [r9]
     9d2:	01 12                	add    DWORD PTR [rdx],edx
     9d4:	07                   	(bad)
     9d5:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     9d9:	01 13                	add    DWORD PTR [rbx],edx
     9db:	00 00                	add    BYTE PTR [rax],al
     9dd:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
     9df:	01 3f                	add    DWORD PTR [rdi],edi
     9e1:	19 03                	sbb    DWORD PTR [rbx],eax
     9e3:	0e                   	(bad)
     9e4:	3a 21                	cmp    ah,BYTE PTR [rcx]
     9e6:	01 3b                	add    DWORD PTR [rbx],edi
     9e8:	0b 39                	or     edi,DWORD PTR [rcx]
     9ea:	21 0a                	and    DWORD PTR [rdx],ecx
     9ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9ed:	0e                   	(bad)
     9ee:	49 13 01             	adc    rax,QWORD PTR [r9]
     9f1:	13 00                	adc    eax,DWORD PTR [rax]
     9f3:	00 1c 1d 01 31 13 52 	add    BYTE PTR [rbx*1+0x52133101],bl
     9fa:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     a00:	58                   	pop    rax
     a01:	21 02                	and    DWORD PTR [rdx],eax
     a03:	59                   	pop    rcx
     a04:	21 b1 04 57 21 1c    	and    DWORD PTR [rcx+0x1c215704],esi
     a0a:	00 00                	add    BYTE PTR [rax],al
     a0c:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
     a11:	03 08                	add    ecx,DWORD PTR [rax]
     a13:	3a 21                	cmp    ah,BYTE PTR [rcx]
     a15:	08 3b                	or     BYTE PTR [rbx],bh
     a17:	0b 39                	or     edi,DWORD PTR [rcx]
     a19:	21 03                	and    DWORD PTR [rbx],eax
     a1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a1c:	0e                   	(bad)
     a1d:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     a21:	00 00                	add    BYTE PTR [rax],al
     a23:	1e                   	(bad)
     a24:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     a27:	19 03                	sbb    DWORD PTR [rbx],eax
     a29:	0e                   	(bad)
     a2a:	3a 21                	cmp    ah,BYTE PTR [rcx]
     a2c:	07                   	(bad)
     a2d:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d2b6c <_end+0x3c0ccb54>
     a33:	19 01                	sbb    DWORD PTR [rcx],eax
     a35:	13 00                	adc    eax,DWORD PTR [rax]
     a37:	00 1f                	add    BYTE PTR [rdi],bl
     a39:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     a3e:	21 01                	and    DWORD PTR [rcx],eax
     a40:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a42:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a44:	49 13 02             	adc    rax,QWORD PTR [r10]
     a47:	18 00                	sbb    BYTE PTR [rax],al
     a49:	00 20                	add    BYTE PTR [rax],ah
     a4b:	05 00 31 13 00       	add    eax,0x133100
     a50:	00 21                	add    BYTE PTR [rcx],ah
     a52:	1d 01 31 13 52       	sbb    eax,0x52133101
     a57:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     a5d:	12 07                	adc    al,BYTE PTR [rdi]
     a5f:	58                   	pop    rax
     a60:	21 01                	and    DWORD PTR [rcx],eax
     a62:	59                   	pop    rcx
     a63:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     a66:	01 13                	add    DWORD PTR [rbx],edx
     a68:	00 00                	add    BYTE PTR [rax],al
     a6a:	22 11                	and    dl,BYTE PTR [rcx]
     a6c:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1d80 <_end+0x30abd68>
     a72:	1f                   	(bad)
     a73:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     a75:	11 01                	adc    DWORD PTR [rcx],eax
     a77:	12 07                	adc    al,BYTE PTR [rdi]
     a79:	10 17                	adc    BYTE PTR [rdi],dl
     a7b:	00 00                	add    BYTE PTR [rax],al
     a7d:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
     a80:	0b 0b                	or     ecx,DWORD PTR [rbx]
     a82:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     a85:	08 00                	or     BYTE PTR [rax],al
     a87:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
     a8a:	00 0b                	add    BYTE PTR [rbx],cl
     a8c:	0b 00                	or     eax,DWORD PTR [rax]
     a8e:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e030aaa <_end+0xe02aa92>
     a94:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a96:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134915d5 <_end+0x1348b5bd>
     a9c:	00 00                	add    BYTE PTR [rax],al
     a9e:	26 15 01 49 13 01    	es adc eax,0x1134901
     aa4:	13 00                	adc    eax,DWORD PTR [rax]
     aa6:	00 27                	add    BYTE PTR [rdi],ah
     aa8:	26 00 00             	es add BYTE PTR [rax],al
     aab:	00 28                	add    BYTE PTR [rax],ch
     aad:	39 01                	cmp    DWORD PTR [rcx],eax
     aaf:	03 08                	add    ecx,DWORD PTR [rax]
     ab1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ab3:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130115f2 <_end+0x1300b5da>
     ab9:	00 00                	add    BYTE PTR [rax],al
     abb:	29 08                	sub    DWORD PTR [rax],ecx
     abd:	00 3a                	add    BYTE PTR [rdx],bh
     abf:	0b 3b                	or     edi,DWORD PTR [rbx]
     ac1:	05 39 0b 18 13       	add    eax,0x13180b39
     ac6:	00 00                	add    BYTE PTR [rax],al
     ac8:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b000ace <_end+0x2affaab6>
     ace:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     ad1:	19 03                	sbb    DWORD PTR [rbx],eax
     ad3:	0e                   	(bad)
     ad4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ad6:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1615 <_end+0xe6db5fd>
     adc:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ae0:	01 13                	add    DWORD PTR [rbx],edx
     ae2:	00 00                	add    BYTE PTR [rax],al
     ae4:	2c 2e                	sub    al,0x2e
     ae6:	01 3f                	add    DWORD PTR [rdi],edi
     ae8:	19 03                	sbb    DWORD PTR [rbx],eax
     aea:	08 3a                	or     BYTE PTR [rdx],bh
     aec:	0b 3b                	or     edi,DWORD PTR [rbx]
     aee:	05 39 0b 49 13       	add    eax,0x13490b39
     af3:	3c 19                	cmp    al,0x19
     af5:	01 13                	add    DWORD PTR [rbx],edx
     af7:	00 00                	add    BYTE PTR [rax],al
     af9:	2d 2e 01 3f 19       	sub    eax,0x193f012e
     afe:	03 0e                	add    ecx,DWORD PTR [rsi]
     b00:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b02:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871641 <_end+0x186b629>
     b08:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     b0b:	01 13                	add    DWORD PTR [rbx],edx
     b0d:	00 00                	add    BYTE PTR [rax],al
     b0f:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
     b13:	19 03                	sbb    DWORD PTR [rbx],eax
     b15:	0e                   	(bad)
     b16:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b18:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491657 <_end+0x1348b63f>
     b1e:	3c 19                	cmp    al,0x19
     b20:	00 00                	add    BYTE PTR [rax],al
     b22:	2f                   	(bad)
     b23:	39 01                	cmp    DWORD PTR [rcx],eax
     b25:	03 0e                	add    ecx,DWORD PTR [rsi]
     b27:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b29:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011668 <_end+0x1300b650>
     b2f:	00 00                	add    BYTE PTR [rax],al
     b31:	30 13                	xor    BYTE PTR [rbx],dl
     b33:	01 03                	add    DWORD PTR [rbx],eax
     b35:	0e                   	(bad)
     b36:	0b 0b                	or     ecx,DWORD PTR [rbx]
     b38:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b3a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b3c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b3e:	01 13                	add    DWORD PTR [rbx],edx
     b40:	00 00                	add    BYTE PTR [rax],al
     b42:	31 34 00             	xor    DWORD PTR [rax+rax*1],esi
     b45:	03 0e                	add    ecx,DWORD PTR [rsi]
     b47:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b49:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b4b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b4d:	49 13 1c 05 00 00 32 	adc    rbx,QWORD PTR [rax*1+0x5320000]
     b54:	05 
     b55:	00 03                	add    BYTE PTR [rbx],al
     b57:	0e                   	(bad)
     b58:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b5a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b5c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b5e:	49 13 02             	adc    rax,QWORD PTR [r10]
     b61:	17                   	(bad)
     b62:	b7 42                	mov    bh,0x42
     b64:	17                   	(bad)
     b65:	00 00                	add    BYTE PTR [rax],al
     b67:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
     b6a:	03 08                	add    ecx,DWORD PTR [rax]
     b6c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b6e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b70:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b72:	49 13 1c 07          	adc    rbx,QWORD PTR [r15+rax*1]
     b76:	00 00                	add    BYTE PTR [rax],al
     b78:	34 1d                	xor    al,0x1d
     b7a:	01 31                	add    DWORD PTR [rcx],esi
     b7c:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     b7f:	b8 42 0b 11 01       	mov    eax,0x1110b42
     b84:	12 07                	adc    al,BYTE PTR [rdi]
     b86:	58                   	pop    rax
     b87:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     b8a:	57                   	push   rdi
     b8b:	0b 01                	or     eax,DWORD PTR [rcx]
     b8d:	13 00                	adc    eax,DWORD PTR [rax]
     b8f:	00 35 1d 01 31 13    	add    BYTE PTR [rip+0x1331011d],dh        # 13310cb2 <_end+0x1330ac9a>
     b95:	52                   	push   rdx
     b96:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     b9c:	58                   	pop    rax
     b9d:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     ba0:	57                   	push   rdi
     ba1:	0b 01                	or     eax,DWORD PTR [rcx]
     ba3:	13 00                	adc    eax,DWORD PTR [rax]
     ba5:	00 36                	add    BYTE PTR [rsi],dh
     ba7:	1d 01 31 13 52       	sbb    eax,0x52133101
     bac:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     bb2:	12 07                	adc    al,BYTE PTR [rdi]
     bb4:	58                   	pop    rax
     bb5:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     bb8:	57                   	push   rdi
     bb9:	0b 00                	or     eax,DWORD PTR [rax]
     bbb:	00 37                	add    BYTE PTR [rdi],dh
     bbd:	48 00 7d 01          	rex.W add BYTE PTR [rbp+0x1],dil
     bc1:	83 01 18             	add    DWORD PTR [rcx],0x18
     bc4:	00 00                	add    BYTE PTR [rax],al
     bc6:	38 2e                	cmp    BYTE PTR [rsi],ch
     bc8:	01 3f                	add    DWORD PTR [rdi],edi
     bca:	19 03                	sbb    DWORD PTR [rbx],eax
     bcc:	0e                   	(bad)
     bcd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bcf:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bd1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bd3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bd4:	0e                   	(bad)
     bd5:	49 13 20             	adc    rsp,QWORD PTR [r8]
     bd8:	0b 01                	or     eax,DWORD PTR [rcx]
     bda:	13 00                	adc    eax,DWORD PTR [rax]
     bdc:	00 39                	add    BYTE PTR [rcx],bh
     bde:	34 00                	xor    al,0x0
     be0:	03 08                	add    ecx,DWORD PTR [rax]
     be2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     be4:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491723 <_end+0x1348b70b>
     bea:	00 00                	add    BYTE PTR [rax],al
     bec:	3a 2e                	cmp    ch,BYTE PTR [rsi]
     bee:	01 31                	add    DWORD PTR [rcx],esi
     bf0:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     bf3:	11 01                	adc    DWORD PTR [rcx],eax
     bf5:	12 07                	adc    al,BYTE PTR [rdi]
     bf7:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     bfb:	00 00                	add    BYTE PTR [rax],al
     bfd:	3b 05 00 31 13 02    	cmp    eax,DWORD PTR [rip+0x2133100]        # 2133d03 <_end+0x212dceb>
     c03:	18 00                	sbb    BYTE PTR [rax],al
     c05:	00 3c 34             	add    BYTE PTR [rsp+rsi*1],bh
     c08:	00 31                	add    BYTE PTR [rcx],dh
     c0a:	13 1c 0b             	adc    ebx,DWORD PTR [rbx+rcx*1]
     c0d:	00 00                	add    BYTE PTR [rax],al
     c0f:	00 01                	add    BYTE PTR [rcx],al
     c11:	05 00 49 13 00       	add    eax,0x134900
     c16:	00 02                	add    BYTE PTR [rdx],al
     c18:	08 00                	or     BYTE PTR [rax],al
     c1a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c1c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c1e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c20:	18 13                	sbb    BYTE PTR [rbx],dl
     c22:	00 00                	add    BYTE PTR [rax],al
     c24:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     c27:	02 18                	add    bl,BYTE PTR [rax]
     c29:	7e 18                	jle    c43 <__abi_tag+0x8c7>
     c2b:	00 00                	add    BYTE PTR [rax],al
     c2d:	04 24                	add    al,0x24
     c2f:	00 0b                	add    BYTE PTR [rbx],cl
     c31:	0b 3e                	or     edi,DWORD PTR [rsi]
     c33:	0b 03                	or     eax,DWORD PTR [rbx]
     c35:	0e                   	(bad)
     c36:	00 00                	add    BYTE PTR [rax],al
     c38:	05 05 00 31 13       	add    eax,0x13310005
     c3d:	02 17                	add    dl,BYTE PTR [rdi]
     c3f:	b7 42                	mov    bh,0x42
     c41:	17                   	(bad)
     c42:	00 00                	add    BYTE PTR [rax],al
     c44:	06                   	(bad)
     c45:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     c4a:	0b 3b                	or     edi,DWORD PTR [rbx]
     c4c:	0b 39                	or     edi,DWORD PTR [rcx]
     c4e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     c51:	38 0b                	cmp    BYTE PTR [rbx],cl
     c53:	00 00                	add    BYTE PTR [rax],al
     c55:	07                   	(bad)
     c56:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     c59:	19 03                	sbb    DWORD PTR [rbx],eax
     c5b:	0e                   	(bad)
     c5c:	3a 21                	cmp    ah,BYTE PTR [rcx]
     c5e:	04 3b                	add    al,0x3b
     c60:	05 39 0b 49 13       	add    eax,0x13490b39
     c65:	3c 19                	cmp    al,0x19
     c67:	01 13                	add    DWORD PTR [rbx],edx
     c69:	00 00                	add    BYTE PTR [rax],al
     c6b:	08 16                	or     BYTE PTR [rsi],dl
     c6d:	00 03                	add    BYTE PTR [rbx],al
     c6f:	0e                   	(bad)
     c70:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c72:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c74:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c76:	49 13 00             	adc    rax,QWORD PTR [r8]
     c79:	00 09                	add    BYTE PTR [rcx],cl
     c7b:	0f 00 0b             	str    WORD PTR [rbx]
     c7e:	21 08                	and    DWORD PTR [rax],ecx
     c80:	49 13 00             	adc    rax,QWORD PTR [r8]
     c83:	00 0a                	add    BYTE PTR [rdx],cl
     c85:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     c88:	19 03                	sbb    DWORD PTR [rbx],eax
     c8a:	0e                   	(bad)
     c8b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c8d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c8f:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c91:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     c95:	01 13                	add    DWORD PTR [rbx],edx
     c97:	00 00                	add    BYTE PTR [rax],al
     c99:	0b 48 01             	or     ecx,DWORD PTR [rax+0x1]
     c9c:	7d 01                	jge    c9f <__abi_tag+0x923>
     c9e:	7f 13                	jg     cb3 <__abi_tag+0x937>
     ca0:	00 00                	add    BYTE PTR [rax],al
     ca2:	0c 05                	or     al,0x5
     ca4:	00 03                	add    BYTE PTR [rbx],al
     ca6:	0e                   	(bad)
     ca7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ca9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cab:	39 0b                	cmp    DWORD PTR [rbx],ecx
     cad:	49 13 00             	adc    rax,QWORD PTR [r8]
     cb0:	00 0d 26 00 49 13    	add    BYTE PTR [rip+0x13490026],cl        # 13490cdc <_end+0x1348acc4>
     cb6:	00 00                	add    BYTE PTR [rax],al
     cb8:	0e                   	(bad)
     cb9:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     cbc:	19 03                	sbb    DWORD PTR [rbx],eax
     cbe:	08 3a                	or     BYTE PTR [rdx],bh
     cc0:	21 07                	and    DWORD PTR [rdi],eax
     cc2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cc4:	39 21                	cmp    DWORD PTR [rcx],esp
     cc6:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     cc9:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ccd:	01 13                	add    DWORD PTR [rbx],edx
     ccf:	00 00                	add    BYTE PTR [rax],al
     cd1:	0f 34                	sysenter
     cd3:	00 31                	add    BYTE PTR [rcx],dh
     cd5:	13 02                	adc    eax,DWORD PTR [rdx]
     cd7:	17                   	(bad)
     cd8:	b7 42                	mov    bh,0x42
     cda:	17                   	(bad)
     cdb:	00 00                	add    BYTE PTR [rax],al
     cdd:	10 48 00             	adc    BYTE PTR [rax+0x0],cl
     ce0:	7d 01                	jge    ce3 <__abi_tag+0x967>
     ce2:	83 01 18             	add    DWORD PTR [rcx],0x18
     ce5:	00 00                	add    BYTE PTR [rax],al
     ce7:	11 2e                	adc    DWORD PTR [rsi],ebp
     ce9:	01 3f                	add    DWORD PTR [rdi],edi
     ceb:	19 03                	sbb    DWORD PTR [rbx],eax
     ced:	0e                   	(bad)
     cee:	3a 21                	cmp    ah,BYTE PTR [rcx]
     cf0:	04 3b                	add    al,0x3b
     cf2:	0b 39                	or     edi,DWORD PTR [rcx]
     cf4:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     cf7:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     cfb:	01 13                	add    DWORD PTR [rbx],edx
     cfd:	00 00                	add    BYTE PTR [rax],al
     cff:	12 01                	adc    al,BYTE PTR [rcx]
     d01:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     d04:	01 13                	add    DWORD PTR [rbx],edx
     d06:	00 00                	add    BYTE PTR [rax],al
     d08:	13 21                	adc    esp,DWORD PTR [rcx]
     d0a:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     d0d:	2f                   	(bad)
     d0e:	0b 00                	or     eax,DWORD PTR [rax]
     d10:	00 14 13             	add    BYTE PTR [rbx+rdx*1],dl
     d13:	01 0b                	add    DWORD PTR [rbx],ecx
     d15:	0b 3a                	or     edi,DWORD PTR [rdx]
     d17:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
     d1a:	0b 39                	or     edi,DWORD PTR [rcx]
     d1c:	21 03                	and    DWORD PTR [rbx],eax
     d1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d1f:	0e                   	(bad)
     d20:	01 13                	add    DWORD PTR [rbx],edx
     d22:	00 00                	add    BYTE PTR [rax],al
     d24:	15 0d 00 03 08       	adc    eax,0x803000d
     d29:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d2b:	04 3b                	add    al,0x3b
     d2d:	0b 39                	or     edi,DWORD PTR [rcx]
     d2f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d32:	38 0b                	cmp    BYTE PTR [rbx],cl
     d34:	00 00                	add    BYTE PTR [rax],al
     d36:	16                   	(bad)
     d37:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     d3a:	19 03                	sbb    DWORD PTR [rbx],eax
     d3c:	0e                   	(bad)
     d3d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d3f:	04 3b                	add    al,0x3b
     d41:	05 39 21 0d 3c       	add    eax,0x3c0d2139
     d46:	19 01                	sbb    DWORD PTR [rcx],eax
     d48:	13 00                	adc    eax,DWORD PTR [rax]
     d4a:	00 17                	add    BYTE PTR [rdi],dl
     d4c:	13 01                	adc    eax,DWORD PTR [rcx]
     d4e:	03 0e                	add    ecx,DWORD PTR [rsi]
     d50:	0b 0b                	or     ecx,DWORD PTR [rbx]
     d52:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d54:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d56:	39 21                	cmp    DWORD PTR [rcx],esp
     d58:	10 01                	adc    BYTE PTR [rcx],al
     d5a:	13 00                	adc    eax,DWORD PTR [rax]
     d5c:	00 18                	add    BYTE PTR [rax],bl
     d5e:	34 00                	xor    al,0x0
     d60:	03 0e                	add    ecx,DWORD PTR [rsi]
     d62:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d64:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d66:	39 21                	cmp    DWORD PTR [rcx],esp
     d68:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d6b:	1c 0b                	sbb    al,0xb
     d6d:	00 00                	add    BYTE PTR [rax],al
     d6f:	19 05 00 03 0e 3a    	sbb    DWORD PTR [rip+0x3a0e0300],eax        # 3a0e1075 <_end+0x3a0db05d>
     d75:	21 01                	and    DWORD PTR [rcx],eax
     d77:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d79:	39 0b                	cmp    DWORD PTR [rbx],ecx
     d7b:	49 13 02             	adc    rax,QWORD PTR [r10]
     d7e:	17                   	(bad)
     d7f:	b7 42                	mov    bh,0x42
     d81:	17                   	(bad)
     d82:	00 00                	add    BYTE PTR [rax],al
     d84:	1a 34 00             	sbb    dh,BYTE PTR [rax+rax*1]
     d87:	03 0e                	add    ecx,DWORD PTR [rsi]
     d89:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     d8d:	6c                   	ins    BYTE PTR es:[rdi],dx
     d8e:	19 02                	sbb    DWORD PTR [rdx],eax
     d90:	18 00                	sbb    BYTE PTR [rax],al
     d92:	00 1b                	add    BYTE PTR [rbx],bl
     d94:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     d97:	19 03                	sbb    DWORD PTR [rbx],eax
     d99:	0e                   	(bad)
     d9a:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d9c:	01 3b                	add    DWORD PTR [rbx],edi
     d9e:	0b 39                	or     edi,DWORD PTR [rcx]
     da0:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     da3:	49 13 11             	adc    rdx,QWORD PTR [r9]
     da6:	01 12                	add    DWORD PTR [rdx],edx
     da8:	07                   	(bad)
     da9:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     dad:	01 13                	add    DWORD PTR [rbx],edx
     daf:	00 00                	add    BYTE PTR [rax],al
     db1:	1c 34                	sbb    al,0x34
     db3:	00 03                	add    BYTE PTR [rbx],al
     db5:	08 3a                	or     BYTE PTR [rdx],bh
     db7:	21 01                	and    DWORD PTR [rcx],eax
     db9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     dbb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     dbd:	49 13 02             	adc    rax,QWORD PTR [r10]
     dc0:	17                   	(bad)
     dc1:	b7 42                	mov    bh,0x42
     dc3:	17                   	(bad)
     dc4:	00 00                	add    BYTE PTR [rax],al
     dc6:	1d 34 00 03 0e       	sbb    eax,0xe030034
     dcb:	3a 21                	cmp    ah,BYTE PTR [rcx]
     dcd:	01 3b                	add    DWORD PTR [rbx],edi
     dcf:	0b 39                	or     edi,DWORD PTR [rcx]
     dd1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     dd4:	02 17                	add    dl,BYTE PTR [rdi]
     dd6:	b7 42                	mov    bh,0x42
     dd8:	17                   	(bad)
     dd9:	00 00                	add    BYTE PTR [rax],al
     ddb:	1e                   	(bad)
     ddc:	1d 01 31 13 52       	sbb    eax,0x52133101
     de1:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     de7:	58                   	pop    rax
     de8:	21 01                	and    DWORD PTR [rcx],eax
     dea:	59                   	pop    rcx
     deb:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     dee:	01 13                	add    DWORD PTR [rbx],edx
     df0:	00 00                	add    BYTE PTR [rax],al
     df2:	1f                   	(bad)
     df3:	0b 01                	or     eax,DWORD PTR [rcx]
     df5:	55                   	push   rbp
     df6:	17                   	(bad)
     df7:	00 00                	add    BYTE PTR [rax],al
     df9:	20 2e                	and    BYTE PTR [rsi],ch
     dfb:	01 3f                	add    DWORD PTR [rdi],edi
     dfd:	19 03                	sbb    DWORD PTR [rbx],eax
     dff:	08 3a                	or     BYTE PTR [rdx],bh
     e01:	21 06                	and    DWORD PTR [rsi],eax
     e03:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e05:	39 21                	cmp    DWORD PTR [rcx],esp
     e07:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     e0a:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     e0e:	00 00                	add    BYTE PTR [rax],al
     e10:	21 34 00             	and    DWORD PTR [rax+rax*1],esi
     e13:	03 08                	add    ecx,DWORD PTR [rax]
     e15:	3a 21                	cmp    ah,BYTE PTR [rcx]
     e17:	01 3b                	add    DWORD PTR [rbx],edi
     e19:	0b 39                	or     edi,DWORD PTR [rcx]
     e1b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     e1e:	00 00                	add    BYTE PTR [rax],al
     e20:	22 05 00 03 0e 3a    	and    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e1126 <_end+0x3a0db10e>
     e26:	21 01                	and    DWORD PTR [rcx],eax
     e28:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e2a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e2c:	49 13 02             	adc    rax,QWORD PTR [r10]
     e2f:	18 00                	sbb    BYTE PTR [rax],al
     e31:	00 23                	add    BYTE PTR [rbx],ah
     e33:	1d 01 31 13 52       	sbb    eax,0x52133101
     e38:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     e3e:	12 07                	adc    al,BYTE PTR [rdi]
     e40:	58                   	pop    rax
     e41:	21 01                	and    DWORD PTR [rcx],eax
     e43:	59                   	pop    rcx
     e44:	0b 57 21             	or     edx,DWORD PTR [rdi+0x21]
     e47:	19 00                	sbb    DWORD PTR [rax],eax
     e49:	00 24 0b             	add    BYTE PTR [rbx+rcx*1],ah
     e4c:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
     e4f:	01 13                	add    DWORD PTR [rbx],edx
     e51:	00 00                	add    BYTE PTR [rax],al
     e53:	25 1d 01 31 13       	and    eax,0x1331011d
     e58:	52                   	push   rdx
     e59:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     e5f:	12 07                	adc    al,BYTE PTR [rdi]
     e61:	58                   	pop    rax
     e62:	21 01                	and    DWORD PTR [rcx],eax
     e64:	59                   	pop    rcx
     e65:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     e68:	01 13                	add    DWORD PTR [rbx],edx
     e6a:	00 00                	add    BYTE PTR [rax],al
     e6c:	26 11 01             	es adc DWORD PTR [rcx],eax
     e6f:	25 0e 13 0b 03       	and    eax,0x30b130e
     e74:	1f                   	(bad)
     e75:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     e77:	11 01                	adc    DWORD PTR [rcx],eax
     e79:	12 07                	adc    al,BYTE PTR [rdi]
     e7b:	10 17                	adc    BYTE PTR [rdi],dl
     e7d:	00 00                	add    BYTE PTR [rax],al
     e7f:	27                   	(bad)
     e80:	24 00                	and    al,0x0
     e82:	0b 0b                	or     ecx,DWORD PTR [rbx]
     e84:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     e87:	08 00                	or     BYTE PTR [rax],al
     e89:	00 28                	add    BYTE PTR [rax],ch
     e8b:	0f 00 0b             	str    WORD PTR [rbx]
     e8e:	0b 00                	or     eax,DWORD PTR [rax]
     e90:	00 29                	add    BYTE PTR [rcx],ch
     e92:	16                   	(bad)
     e93:	00 03                	add    BYTE PTR [rbx],al
     e95:	0e                   	(bad)
     e96:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e98:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134919d7 <_end+0x1348b9bf>
     e9e:	00 00                	add    BYTE PTR [rax],al
     ea0:	2a 15 01 49 13 01    	sub    dl,BYTE PTR [rip+0x1134901]        # 11357a7 <_end+0x112f78f>
     ea6:	13 00                	adc    eax,DWORD PTR [rax]
     ea8:	00 2b                	add    BYTE PTR [rbx],ch
     eaa:	26 00 00             	es add BYTE PTR [rax],al
     ead:	00 2c 39             	add    BYTE PTR [rcx+rdi*1],ch
     eb0:	01 03                	add    DWORD PTR [rbx],eax
     eb2:	08 3a                	or     BYTE PTR [rdx],bh
     eb4:	0b 3b                	or     edi,DWORD PTR [rbx]
     eb6:	05 39 0b 01 13       	add    eax,0x13010b39
     ebb:	00 00                	add    BYTE PTR [rax],al
     ebd:	2d 08 00 3a 0b       	sub    eax,0xb3a0008
     ec2:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 13181a01 <_end+0x1317b9e9>
     ec8:	00 00                	add    BYTE PTR [rax],al
     eca:	2e 15 00 00 00 2f    	cs adc eax,0x2f000000
     ed0:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     ed3:	19 03                	sbb    DWORD PTR [rbx],eax
     ed5:	0e                   	(bad)
     ed6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ed8:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1a17 <_end+0xe6db9ff>
     ede:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ee2:	01 13                	add    DWORD PTR [rbx],edx
     ee4:	00 00                	add    BYTE PTR [rax],al
     ee6:	30 2e                	xor    BYTE PTR [rsi],ch
     ee8:	01 3f                	add    DWORD PTR [rdi],edi
     eea:	19 03                	sbb    DWORD PTR [rbx],eax
     eec:	08 3a                	or     BYTE PTR [rdx],bh
     eee:	0b 3b                	or     edi,DWORD PTR [rbx]
     ef0:	05 39 0b 49 13       	add    eax,0x13490b39
     ef5:	3c 19                	cmp    al,0x19
     ef7:	01 13                	add    DWORD PTR [rbx],edx
     ef9:	00 00                	add    BYTE PTR [rax],al
     efb:	31 2e                	xor    DWORD PTR [rsi],ebp
     efd:	01 3f                	add    DWORD PTR [rdi],edi
     eff:	19 03                	sbb    DWORD PTR [rbx],eax
     f01:	0e                   	(bad)
     f02:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f04:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871a43 <_end+0x186ba2b>
     f0a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     f0d:	01 13                	add    DWORD PTR [rbx],edx
     f0f:	00 00                	add    BYTE PTR [rax],al
     f11:	32 2e                	xor    ch,BYTE PTR [rsi]
     f13:	00 3f                	add    BYTE PTR [rdi],bh
     f15:	19 03                	sbb    DWORD PTR [rbx],eax
     f17:	0e                   	(bad)
     f18:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f1a:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491a59 <_end+0x1348ba41>
     f20:	3c 19                	cmp    al,0x19
     f22:	00 00                	add    BYTE PTR [rax],al
     f24:	33 39                	xor    edi,DWORD PTR [rcx]
     f26:	01 03                	add    DWORD PTR [rbx],eax
     f28:	0e                   	(bad)
     f29:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f2b:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011a6a <_end+0x1300ba52>
     f31:	00 00                	add    BYTE PTR [rax],al
     f33:	34 01                	xor    al,0x1
     f35:	01 87 42 19 49 13    	add    DWORD PTR [rdi+0x13491942],eax
     f3b:	01 13                	add    DWORD PTR [rbx],edx
     f3d:	00 00                	add    BYTE PTR [rax],al
     f3f:	35 21 00 2f 0b       	xor    eax,0xb2f0021
     f44:	00 00                	add    BYTE PTR [rax],al
     f46:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
     f4a:	19 03                	sbb    DWORD PTR [rbx],eax
     f4c:	0e                   	(bad)
     f4d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f4f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f51:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f53:	87 01                	xchg   DWORD PTR [rcx],eax
     f55:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     f58:	01 13                	add    DWORD PTR [rbx],edx
     f5a:	00 00                	add    BYTE PTR [rax],al
     f5c:	37                   	(bad)
     f5d:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     f60:	19 03                	sbb    DWORD PTR [rbx],eax
     f62:	0e                   	(bad)
     f63:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f65:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f67:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f69:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f6a:	0e                   	(bad)
     f6b:	11 01                	adc    DWORD PTR [rcx],eax
     f6d:	12 07                	adc    al,BYTE PTR [rdi]
     f6f:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     f73:	01 13                	add    DWORD PTR [rbx],edx
     f75:	00 00                	add    BYTE PTR [rax],al
     f77:	38 48 00             	cmp    BYTE PTR [rax+0x0],cl
     f7a:	7d 01                	jge    f7d <__abi_tag+0xc01>
     f7c:	7f 13                	jg     f91 <__abi_tag+0xc15>
     f7e:	00 00                	add    BYTE PTR [rax],al
     f80:	39 2e                	cmp    DWORD PTR [rsi],ebp
     f82:	01 03                	add    DWORD PTR [rbx],eax
     f84:	0e                   	(bad)
     f85:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f87:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f89:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f8b:	49 13 20             	adc    rsp,QWORD PTR [r8]
     f8e:	0b 01                	or     eax,DWORD PTR [rcx]
     f90:	13 00                	adc    eax,DWORD PTR [rax]
     f92:	00 3a                	add    BYTE PTR [rdx],bh
     f94:	34 00                	xor    al,0x0
     f96:	03 0e                	add    ecx,DWORD PTR [rsi]
     f98:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f9a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f9c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f9e:	49 13 00             	adc    rax,QWORD PTR [r8]
     fa1:	00 3b                	add    BYTE PTR [rbx],bh
     fa3:	2e 01 03             	cs add DWORD PTR [rbx],eax
     fa6:	0e                   	(bad)
     fa7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fa9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fab:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fad:	20 0b                	and    BYTE PTR [rbx],cl
     faf:	01 13                	add    DWORD PTR [rbx],edx
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	3c 0b                	cmp    al,0xb
     fb5:	01 00                	add    DWORD PTR [rax],eax
     fb7:	00 3d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],bh        # 193f10eb <_end+0x193eb0d3>
     fbd:	03 0e                	add    ecx,DWORD PTR [rsi]
     fbf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fc1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fc3:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fc5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fc6:	0e                   	(bad)
     fc7:	49 13 20             	adc    rsp,QWORD PTR [r8]
     fca:	0b 01                	or     eax,DWORD PTR [rcx]
     fcc:	13 00                	adc    eax,DWORD PTR [rax]
     fce:	00 3e                	add    BYTE PTR [rsi],bh
     fd0:	34 00                	xor    al,0x0
     fd2:	03 0e                	add    ecx,DWORD PTR [rsi]
     fd4:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     fd8:	6c                   	ins    BYTE PTR es:[rdi],dx
     fd9:	19 00                	sbb    DWORD PTR [rax],eax
     fdb:	00 3f                	add    BYTE PTR [rdi],bh
     fdd:	34 00                	xor    al,0x0
     fdf:	03 0e                	add    ecx,DWORD PTR [rsi]
     fe1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fe3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fe5:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fe7:	49 13 02             	adc    rax,QWORD PTR [r10]
     fea:	18 00                	sbb    BYTE PTR [rax],al
     fec:	00 40 0b             	add    BYTE PTR [rax+0xb],al
     fef:	01 31                	add    DWORD PTR [rcx],esi
     ff1:	13 11                	adc    edx,DWORD PTR [rcx]
     ff3:	01 12                	add    DWORD PTR [rdx],edx
     ff5:	07                   	(bad)
     ff6:	01 13                	add    DWORD PTR [rbx],edx
     ff8:	00 00                	add    BYTE PTR [rax],al
     ffa:	41                   	rex.B
     ffb:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     ffe:	19 03                	sbb    DWORD PTR [rbx],eax
    1000:	0e                   	(bad)
    1001:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1003:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1005:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1007:	49 13 20             	adc    rsp,QWORD PTR [r8]
    100a:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
    100d:	01 13                	add    DWORD PTR [rbx],edx
    100f:	00 00                	add    BYTE PTR [rax],al
    1011:	42                   	rex.X
    1012:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1015:	13 11                	adc    edx,DWORD PTR [rcx]
    1017:	01 12                	add    DWORD PTR [rdx],edx
    1019:	07                   	(bad)
    101a:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    101e:	01 13                	add    DWORD PTR [rbx],edx
    1020:	00 00                	add    BYTE PTR [rax],al
    1022:	43 34 00             	rex.XB xor al,0x0
    1025:	31 13                	xor    DWORD PTR [rbx],edx
    1027:	00 00                	add    BYTE PTR [rax],al
    1029:	44 05 00 31 13 00    	rex.R add eax,0x133100
    102f:	00 45 2e             	add    BYTE PTR [rbp+0x2e],al
    1032:	01 31                	add    DWORD PTR [rcx],esi
    1034:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1037:	11 01                	adc    DWORD PTR [rcx],eax
    1039:	12 07                	adc    al,BYTE PTR [rdi]
    103b:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    103f:	01 13                	add    DWORD PTR [rbx],edx
    1041:	00 00                	add    BYTE PTR [rax],al
    1043:	46 05 00 31 13 02    	rex.RX add eax,0x2133100
    1049:	18 00                	sbb    BYTE PTR [rax],al
    104b:	00 47 49             	add    BYTE PTR [rdi+0x49],al
    104e:	00 80 01 13 7e 18    	add    BYTE PTR [rax+0x187e1301],al
    1054:	00 00                	add    BYTE PTR [rax],al
    1056:	48                   	rex.W
    1057:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    105a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    105d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    105e:	0e                   	(bad)
    105f:	03 0e                	add    ecx,DWORD PTR [rsi]
    1061:	00 00                	add    BYTE PTR [rax],al
    1063:	00 01                	add    BYTE PTR [rcx],al
    1065:	05 00 49 13 00       	add    eax,0x134900
    106a:	00 02                	add    BYTE PTR [rdx],al
    106c:	08 00                	or     BYTE PTR [rax],al
    106e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1070:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1072:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1074:	18 13                	sbb    BYTE PTR [rbx],dl
    1076:	00 00                	add    BYTE PTR [rax],al
    1078:	03 0d 00 03 0e 3a    	add    ecx,DWORD PTR [rip+0x3a0e0300]        # 3a0e137e <_end+0x3a0db366>
    107e:	0b 3b                	or     edi,DWORD PTR [rbx]
    1080:	0b 39                	or     edi,DWORD PTR [rcx]
    1082:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1085:	38 0b                	cmp    BYTE PTR [rbx],cl
    1087:	00 00                	add    BYTE PTR [rax],al
    1089:	04 16                	add    al,0x16
    108b:	00 03                	add    BYTE PTR [rbx],al
    108d:	0e                   	(bad)
    108e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1090:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1092:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1094:	49 13 00             	adc    rax,QWORD PTR [r8]
    1097:	00 05 49 00 02 18    	add    BYTE PTR [rip+0x18020049],al        # 180210e6 <_end+0x1801b0ce>
    109d:	7e 18                	jle    10b7 <stat@plt+0x7>
    109f:	00 00                	add    BYTE PTR [rax],al
    10a1:	06                   	(bad)
    10a2:	24 00                	and    al,0x0
    10a4:	0b 0b                	or     ecx,DWORD PTR [rbx]
    10a6:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    10a9:	0e                   	(bad)
    10aa:	00 00                	add    BYTE PTR [rax],al
    10ac:	07                   	(bad)
    10ad:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    10b0:	19 03                	sbb    DWORD PTR [rbx],eax
    10b2:	0e                   	(bad)
    10b3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10b5:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491bf4 <_end+0x1348bbdc>
    10bb:	3c 19                	cmp    al,0x19
    10bd:	01 13                	add    DWORD PTR [rbx],edx
    10bf:	00 00                	add    BYTE PTR [rax],al
    10c1:	08 2e                	or     BYTE PTR [rsi],ch
    10c3:	01 3f                	add    DWORD PTR [rdi],edi
    10c5:	19 03                	sbb    DWORD PTR [rbx],eax
    10c7:	0e                   	(bad)
    10c8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10ca:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10cc:	39 0b                	cmp    DWORD PTR [rbx],ecx
    10ce:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    10d2:	01 13                	add    DWORD PTR [rbx],edx
    10d4:	00 00                	add    BYTE PTR [rax],al
    10d6:	09 0f                	or     DWORD PTR [rdi],ecx
    10d8:	00 0b                	add    BYTE PTR [rbx],cl
    10da:	21 08                	and    DWORD PTR [rax],ecx
    10dc:	49 13 00             	adc    rax,QWORD PTR [r8]
    10df:	00 0a                	add    BYTE PTR [rdx],cl
    10e1:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    10e4:	19 03                	sbb    DWORD PTR [rbx],eax
    10e6:	08 3a                	or     BYTE PTR [rdx],bh
    10e8:	21 0b                	and    DWORD PTR [rbx],ecx
    10ea:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10ec:	39 21                	cmp    DWORD PTR [rcx],esp
    10ee:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    10f1:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    10f5:	01 13                	add    DWORD PTR [rbx],edx
    10f7:	00 00                	add    BYTE PTR [rax],al
    10f9:	0b 2e                	or     ebp,DWORD PTR [rsi]
    10fb:	01 3f                	add    DWORD PTR [rdi],edi
    10fd:	19 03                	sbb    DWORD PTR [rbx],eax
    10ff:	0e                   	(bad)
    1100:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1102:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1104:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1106:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1107:	0e                   	(bad)
    1108:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    110c:	01 13                	add    DWORD PTR [rbx],edx
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	0c 05                	or     al,0x5
    1112:	00 31                	add    BYTE PTR [rcx],dh
    1114:	13 02                	adc    eax,DWORD PTR [rdx]
    1116:	17                   	(bad)
    1117:	b7 42                	mov    bh,0x42
    1119:	17                   	(bad)
    111a:	00 00                	add    BYTE PTR [rax],al
    111c:	0d 34 00 03 0e       	or     eax,0xe030034
    1121:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1123:	01 3b                	add    DWORD PTR [rbx],edi
    1125:	0b 39                	or     edi,DWORD PTR [rcx]
    1127:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    112a:	02 17                	add    dl,BYTE PTR [rdi]
    112c:	b7 42                	mov    bh,0x42
    112e:	17                   	(bad)
    112f:	00 00                	add    BYTE PTR [rax],al
    1131:	0e                   	(bad)
    1132:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    1137:	0b 3b                	or     edi,DWORD PTR [rbx]
    1139:	0b 39                	or     edi,DWORD PTR [rcx]
    113b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	0f 26                	(bad)
    1142:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1145:	00 00                	add    BYTE PTR [rax],al
    1147:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e144d <_end+0x3a0db435>
    114d:	21 01                	and    DWORD PTR [rcx],eax
    114f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1151:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1153:	49 13 02             	adc    rax,QWORD PTR [r10]
    1156:	17                   	(bad)
    1157:	b7 42                	mov    bh,0x42
    1159:	17                   	(bad)
    115a:	00 00                	add    BYTE PTR [rax],al
    115c:	11 48 01             	adc    DWORD PTR [rax+0x1],ecx
    115f:	7d 01                	jge    1162 <realloc@plt+0x2>
    1161:	7f 13                	jg     1176 <__fprintf_chk@plt+0x6>
    1163:	00 00                	add    BYTE PTR [rax],al
    1165:	12 48 01             	adc    cl,BYTE PTR [rax+0x1]
    1168:	7d 01                	jge    116b <realloc@plt+0xb>
    116a:	7f 13                	jg     117f <__fprintf_chk@plt+0xf>
    116c:	01 13                	add    DWORD PTR [rbx],edx
    116e:	00 00                	add    BYTE PTR [rax],al
    1170:	13 13                	adc    edx,DWORD PTR [rbx]
    1172:	01 0b                	add    DWORD PTR [rbx],ecx
    1174:	0b 3a                	or     edi,DWORD PTR [rdx]
    1176:	21 06                	and    DWORD PTR [rsi],eax
    1178:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    117a:	39 21                	cmp    DWORD PTR [rcx],esp
    117c:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    117f:	01 13                	add    DWORD PTR [rbx],edx
    1181:	00 00                	add    BYTE PTR [rax],al
    1183:	14 0d                	adc    al,0xd
    1185:	00 03                	add    BYTE PTR [rbx],al
    1187:	08 3a                	or     BYTE PTR [rdx],bh
    1189:	21 06                	and    DWORD PTR [rsi],eax
    118b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    118d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    118f:	49 13 38             	adc    rdi,QWORD PTR [r8]
    1192:	0b 00                	or     eax,DWORD PTR [rax]
    1194:	00 15 01 01 49 13    	add    BYTE PTR [rip+0x13490101],dl        # 1349129b <_end+0x1348b283>
    119a:	01 13                	add    DWORD PTR [rbx],edx
    119c:	00 00                	add    BYTE PTR [rax],al
    119e:	16                   	(bad)
    119f:	21 00                	and    DWORD PTR [rax],eax
    11a1:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    11a4:	0b 00                	or     eax,DWORD PTR [rax]
    11a6:	00 17                	add    BYTE PTR [rdi],dl
    11a8:	13 01                	adc    eax,DWORD PTR [rcx]
    11aa:	03 0e                	add    ecx,DWORD PTR [rsi]
    11ac:	0b 0b                	or     ecx,DWORD PTR [rbx]
    11ae:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11b0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    11b2:	39 21                	cmp    DWORD PTR [rcx],esp
    11b4:	08 01                	or     BYTE PTR [rcx],al
    11b6:	13 00                	adc    eax,DWORD PTR [rax]
    11b8:	00 18                	add    BYTE PTR [rax],bl
    11ba:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    11bd:	19 03                	sbb    DWORD PTR [rbx],eax
    11bf:	08 3a                	or     BYTE PTR [rdx],bh
    11c1:	21 0a                	and    DWORD PTR [rdx],ecx
    11c3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    11c5:	39 21                	cmp    DWORD PTR [rcx],esp
    11c7:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    11ca:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    11ce:	00 00                	add    BYTE PTR [rax],al
    11d0:	19 2e                	sbb    DWORD PTR [rsi],ebp
    11d2:	01 3f                	add    DWORD PTR [rdi],edi
    11d4:	19 03                	sbb    DWORD PTR [rbx],eax
    11d6:	0e                   	(bad)
    11d7:	3a 21                	cmp    ah,BYTE PTR [rcx]
    11d9:	06                   	(bad)
    11da:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d3319 <_end+0x3c0cd301>
    11e0:	19 01                	sbb    DWORD PTR [rcx],eax
    11e2:	13 00                	adc    eax,DWORD PTR [rax]
    11e4:	00 1a                	add    BYTE PTR [rdx],bl
    11e6:	18 00                	sbb    BYTE PTR [rax],al
    11e8:	00 00                	add    BYTE PTR [rax],al
    11ea:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    11ec:	00 3f                	add    BYTE PTR [rdi],bh
    11ee:	19 03                	sbb    DWORD PTR [rbx],eax
    11f0:	0e                   	(bad)
    11f1:	3a 21                	cmp    ah,BYTE PTR [rcx]
    11f3:	02 3b                	add    bh,BYTE PTR [rbx]
    11f5:	0b 39                	or     edi,DWORD PTR [rcx]
    11f7:	21 01                	and    DWORD PTR [rcx],eax
    11f9:	3c 19                	cmp    al,0x19
    11fb:	00 00                	add    BYTE PTR [rax],al
    11fd:	1c 2e                	sbb    al,0x2e
    11ff:	01 3f                	add    DWORD PTR [rdi],edi
    1201:	19 03                	sbb    DWORD PTR [rbx],eax
    1203:	0e                   	(bad)
    1204:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1206:	01 3b                	add    DWORD PTR [rbx],edi
    1208:	0b 39                	or     edi,DWORD PTR [rcx]
    120a:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    120d:	49 13 11             	adc    rdx,QWORD PTR [r9]
    1210:	01 12                	add    DWORD PTR [rdx],edx
    1212:	07                   	(bad)
    1213:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    1217:	01 13                	add    DWORD PTR [rbx],edx
    1219:	00 00                	add    BYTE PTR [rax],al
    121b:	1d 34 00 03 0e       	sbb    eax,0xe030034
    1220:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    1224:	6c                   	ins    BYTE PTR es:[rdi],dx
    1225:	19 02                	sbb    DWORD PTR [rdx],eax
    1227:	18 00                	sbb    BYTE PTR [rax],al
    1229:	00 1e                	add    BYTE PTR [rsi],bl
    122b:	1d 01 31 13 52       	sbb    eax,0x52133101
    1230:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
    1236:	58                   	pop    rax
    1237:	21 01                	and    DWORD PTR [rcx],eax
    1239:	59                   	pop    rcx
    123a:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    123d:	01 13                	add    DWORD PTR [rbx],edx
    123f:	00 00                	add    BYTE PTR [rax],al
    1241:	1f                   	(bad)
    1242:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1245:	19 03                	sbb    DWORD PTR [rbx],eax
    1247:	0e                   	(bad)
    1248:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    124a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    124c:	39 21                	cmp    DWORD PTR [rcx],esp
    124e:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    1251:	20 21                	and    BYTE PTR [rcx],ah
    1253:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
    1256:	01 13                	add    DWORD PTR [rbx],edx
    1258:	00 00                	add    BYTE PTR [rax],al
    125a:	20 05 00 03 08 3a    	and    BYTE PTR [rip+0x3a080300],al        # 3a081560 <_end+0x3a07b548>
    1260:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1263:	0b 39                	or     edi,DWORD PTR [rcx]
    1265:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1268:	00 00                	add    BYTE PTR [rax],al
    126a:	21 2e                	and    DWORD PTR [rsi],ebp
    126c:	00 3f                	add    BYTE PTR [rdi],bh
    126e:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1271:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1272:	0e                   	(bad)
    1273:	03 0e                	add    ecx,DWORD PTR [rsi]
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	22 11                	and    dl,BYTE PTR [rcx]
    1279:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b258d <_end+0x30ac575>
    127f:	1f                   	(bad)
    1280:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    1282:	11 01                	adc    DWORD PTR [rcx],eax
    1284:	12 07                	adc    al,BYTE PTR [rdi]
    1286:	10 17                	adc    BYTE PTR [rdi],dl
    1288:	00 00                	add    BYTE PTR [rax],al
    128a:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
    128d:	0b 0b                	or     ecx,DWORD PTR [rbx]
    128f:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    1292:	08 00                	or     BYTE PTR [rax],al
    1294:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
    1297:	00 0b                	add    BYTE PTR [rbx],cl
    1299:	0b 00                	or     eax,DWORD PTR [rax]
    129b:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e0312b7 <_end+0xe02b29f>
    12a1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12a3:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491de2 <_end+0x1348bdca>
    12a9:	00 00                	add    BYTE PTR [rax],al
    12ab:	26 15 01 49 13 01    	es adc eax,0x1134901
    12b1:	13 00                	adc    eax,DWORD PTR [rax]
    12b3:	00 27                	add    BYTE PTR [rdi],ah
    12b5:	26 00 00             	es add BYTE PTR [rax],al
    12b8:	00 28                	add    BYTE PTR [rax],ch
    12ba:	39 01                	cmp    DWORD PTR [rcx],eax
    12bc:	03 08                	add    ecx,DWORD PTR [rax]
    12be:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12c0:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011dff <_end+0x1300bde7>
    12c6:	00 00                	add    BYTE PTR [rax],al
    12c8:	29 08                	sub    DWORD PTR [rax],ecx
    12ca:	00 3a                	add    BYTE PTR [rdx],bh
    12cc:	0b 3b                	or     edi,DWORD PTR [rbx]
    12ce:	05 39 0b 18 13       	add    eax,0x13180b39
    12d3:	00 00                	add    BYTE PTR [rax],al
    12d5:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b0012db <_end+0x2affb2c3>
    12db:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    12de:	19 03                	sbb    DWORD PTR [rbx],eax
    12e0:	0e                   	(bad)
    12e1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12e3:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1e22 <_end+0xe6dbe0a>
    12e9:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    12ed:	01 13                	add    DWORD PTR [rbx],edx
    12ef:	00 00                	add    BYTE PTR [rax],al
    12f1:	2c 2e                	sub    al,0x2e
    12f3:	01 3f                	add    DWORD PTR [rdi],edi
    12f5:	19 03                	sbb    DWORD PTR [rbx],eax
    12f7:	08 3a                	or     BYTE PTR [rdx],bh
    12f9:	0b 3b                	or     edi,DWORD PTR [rbx]
    12fb:	05 39 0b 49 13       	add    eax,0x13490b39
    1300:	3c 19                	cmp    al,0x19
    1302:	01 13                	add    DWORD PTR [rbx],edx
    1304:	00 00                	add    BYTE PTR [rax],al
    1306:	2d 2e 01 3f 19       	sub    eax,0x193f012e
    130b:	03 0e                	add    ecx,DWORD PTR [rsi]
    130d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    130f:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871e4e <_end+0x186be36>
    1315:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1318:	01 13                	add    DWORD PTR [rbx],edx
    131a:	00 00                	add    BYTE PTR [rax],al
    131c:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
    1320:	19 03                	sbb    DWORD PTR [rbx],eax
    1322:	0e                   	(bad)
    1323:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1325:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491e64 <_end+0x1348be4c>
    132b:	3c 19                	cmp    al,0x19
    132d:	00 00                	add    BYTE PTR [rax],al
    132f:	2f                   	(bad)
    1330:	39 01                	cmp    DWORD PTR [rcx],eax
    1332:	03 0e                	add    ecx,DWORD PTR [rsi]
    1334:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1336:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011e75 <_end+0x1300be5d>
    133c:	00 00                	add    BYTE PTR [rax],al
    133e:	30 2e                	xor    BYTE PTR [rsi],ch
    1340:	01 3f                	add    DWORD PTR [rdi],edi
    1342:	19 03                	sbb    DWORD PTR [rbx],eax
    1344:	0e                   	(bad)
    1345:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1347:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1349:	39 0b                	cmp    DWORD PTR [rbx],ecx
    134b:	87 01                	xchg   DWORD PTR [rcx],eax
    134d:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1350:	01 13                	add    DWORD PTR [rbx],edx
    1352:	00 00                	add    BYTE PTR [rax],al
    1354:	31 34 00             	xor    DWORD PTR [rax+rax*1],esi
    1357:	03 0e                	add    ecx,DWORD PTR [rsi]
    1359:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    135b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    135d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    135f:	49 13 02             	adc    rax,QWORD PTR [r10]
    1362:	18 00                	sbb    BYTE PTR [rax],al
    1364:	00 32                	add    BYTE PTR [rdx],dh
    1366:	34 00                	xor    al,0x0
    1368:	03 0e                	add    ecx,DWORD PTR [rsi]
    136a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    136c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    136e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1370:	49 13 00             	adc    rax,QWORD PTR [r8]
    1373:	00 33                	add    BYTE PTR [rbx],dh
    1375:	1d 01 31 13 52       	sbb    eax,0x52133101
    137a:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
    1380:	12 07                	adc    al,BYTE PTR [rdi]
    1382:	58                   	pop    rax
    1383:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    1386:	57                   	push   rdi
    1387:	0b 01                	or     eax,DWORD PTR [rcx]
    1389:	13 00                	adc    eax,DWORD PTR [rax]
    138b:	00 34 48             	add    BYTE PTR [rax+rcx*2],dh
    138e:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
    1391:	83 01 18             	add    DWORD PTR [rcx],0x18
    1394:	00 00                	add    BYTE PTR [rax],al
    1396:	35 48 00 7d 01       	xor    eax,0x17d0048
    139b:	7f 13                	jg     13b0 <_Z16buildStringArrayPcj+0xb0>
    139d:	00 00                	add    BYTE PTR [rax],al
    139f:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
    13a3:	19 03                	sbb    DWORD PTR [rbx],eax
    13a5:	0e                   	(bad)
    13a6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13a8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13aa:	39 0b                	cmp    DWORD PTR [rbx],ecx
    13ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13ad:	0e                   	(bad)
    13ae:	49 13 20             	adc    rsp,QWORD PTR [r8]
    13b1:	0b 01                	or     eax,DWORD PTR [rcx]
    13b3:	13 00                	adc    eax,DWORD PTR [rax]
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 135cbd <_end+0x12fca5>
    13bd:	00 02                	add    BYTE PTR [rdx],al
    13bf:	08 00                	or     BYTE PTR [rax],al
    13c1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13c3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13c5:	39 0b                	cmp    DWORD PTR [rbx],ecx
    13c7:	18 13                	sbb    BYTE PTR [rbx],dl
    13c9:	00 00                	add    BYTE PTR [rax],al
    13cb:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
    13ce:	02 18                	add    bl,BYTE PTR [rax]
    13d0:	7e 18                	jle    13ea <_Z16buildStringArrayPcj+0xea>
    13d2:	00 00                	add    BYTE PTR [rax],al
    13d4:	04 2e                	add    al,0x2e
    13d6:	01 3f                	add    DWORD PTR [rdi],edi
    13d8:	19 03                	sbb    DWORD PTR [rbx],eax
    13da:	0e                   	(bad)
    13db:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13dd:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1f1c <_end+0xe6dbf04>
    13e3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    13e7:	01 13                	add    DWORD PTR [rbx],edx
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	05 05 00 31 13       	add    eax,0x13310005
    13f0:	02 17                	add    dl,BYTE PTR [rdi]
    13f2:	b7 42                	mov    bh,0x42
    13f4:	17                   	(bad)
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	06                   	(bad)
    13f8:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    13fd:	0b 3b                	or     edi,DWORD PTR [rbx]
    13ff:	0b 39                	or     edi,DWORD PTR [rcx]
    1401:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1404:	38 0b                	cmp    BYTE PTR [rbx],cl
    1406:	00 00                	add    BYTE PTR [rax],al
    1408:	07                   	(bad)
    1409:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
    140d:	7f 13                	jg     1422 <_Z16buildStringArrayPcj+0x122>
    140f:	00 00                	add    BYTE PTR [rax],al
    1411:	08 16                	or     BYTE PTR [rsi],dl
    1413:	00 03                	add    BYTE PTR [rbx],al
    1415:	0e                   	(bad)
    1416:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1418:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    141a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    141c:	49 13 00             	adc    rax,QWORD PTR [r8]
    141f:	00 09                	add    BYTE PTR [rcx],cl
    1421:	1d 01 31 13 52       	sbb    eax,0x52133101
    1426:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    142c:	12 07                	adc    al,BYTE PTR [rdi]
    142e:	58                   	pop    rax
    142f:	21 01                	and    DWORD PTR [rcx],eax
    1431:	59                   	pop    rcx
    1432:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1435:	01 13                	add    DWORD PTR [rbx],edx
    1437:	00 00                	add    BYTE PTR [rax],al
    1439:	0a 48 01             	or     cl,BYTE PTR [rax+0x1]
    143c:	7d 01                	jge    143f <_Z16buildStringArrayPcj+0x13f>
    143e:	7f 13                	jg     1453 <_Z16buildStringArrayPcj+0x153>
    1440:	01 13                	add    DWORD PTR [rbx],edx
    1442:	00 00                	add    BYTE PTR [rax],al
    1444:	0b 05 00 31 13 00    	or     eax,DWORD PTR [rip+0x133100]        # 13454a <_end+0x12e532>
    144a:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
    144d:	01 3f                	add    DWORD PTR [rdi],edi
    144f:	19 03                	sbb    DWORD PTR [rbx],eax
    1451:	0e                   	(bad)
    1452:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1454:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1456:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1458:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    145c:	01 13                	add    DWORD PTR [rbx],edx
    145e:	00 00                	add    BYTE PTR [rax],al
    1460:	0d 0f 00 0b 21       	or     eax,0x210b000f
    1465:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    1468:	00 00                	add    BYTE PTR [rax],al
    146a:	0e                   	(bad)
    146b:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    146e:	19 03                	sbb    DWORD PTR [rbx],eax
    1470:	0e                   	(bad)
    1471:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1473:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491fb2 <_end+0x1348bf9a>
    1479:	3c 19                	cmp    al,0x19
    147b:	01 13                	add    DWORD PTR [rbx],edx
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    1482:	3f                   	(bad)
    1483:	19 03                	sbb    DWORD PTR [rbx],eax
    1485:	0e                   	(bad)
    1486:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1488:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    148a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    148c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    148d:	0e                   	(bad)
    148e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1492:	01 13                	add    DWORD PTR [rbx],edx
    1494:	00 00                	add    BYTE PTR [rax],al
    1496:	10 05 00 49 13 34    	adc    BYTE PTR [rip+0x34134900],al        # 34135d9c <_end+0x3412fd84>
    149c:	19 00                	sbb    DWORD PTR [rax],eax
    149e:	00 11                	add    BYTE PTR [rcx],dl
    14a0:	2f                   	(bad)
    14a1:	00 03                	add    BYTE PTR [rbx],al
    14a3:	0e                   	(bad)
    14a4:	49 13 00             	adc    rax,QWORD PTR [r8]
    14a7:	00 12                	add    BYTE PTR [rdx],dl
    14a9:	24 00                	and    al,0x0
    14ab:	0b 0b                	or     ecx,DWORD PTR [rbx]
    14ad:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    14b0:	0e                   	(bad)
    14b1:	00 00                	add    BYTE PTR [rax],al
    14b3:	13 26                	adc    esp,DWORD PTR [rsi]
    14b5:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    14b8:	00 00                	add    BYTE PTR [rax],al
    14ba:	14 2e                	adc    al,0x2e
    14bc:	01 3f                	add    DWORD PTR [rdi],edi
    14be:	19 03                	sbb    DWORD PTR [rbx],eax
    14c0:	0e                   	(bad)
    14c1:	3a 21                	cmp    ah,BYTE PTR [rcx]
    14c3:	04 3b                	add    al,0x3b
    14c5:	05 39 21 02 6e       	add    eax,0x6e022139
    14ca:	0e                   	(bad)
    14cb:	49 13 32             	adc    rsi,QWORD PTR [r10]
    14ce:	21 01                	and    DWORD PTR [rcx],eax
    14d0:	3c 19                	cmp    al,0x19
    14d2:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    14d5:	13 00                	adc    eax,DWORD PTR [rax]
    14d7:	00 15 34 00 31 13    	add    BYTE PTR [rip+0x13310034],dl        # 13311511 <_end+0x1330b4f9>
    14dd:	02 17                	add    dl,BYTE PTR [rdi]
    14df:	b7 42                	mov    bh,0x42
    14e1:	17                   	(bad)
    14e2:	00 00                	add    BYTE PTR [rax],al
    14e4:	16                   	(bad)
    14e5:	0b 01                	or     eax,DWORD PTR [rcx]
    14e7:	11 01                	adc    DWORD PTR [rcx],eax
    14e9:	12 07                	adc    al,BYTE PTR [rdi]
    14eb:	01 13                	add    DWORD PTR [rbx],edx
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	17                   	(bad)
    14f0:	34 00                	xor    al,0x0
    14f2:	03 0e                	add    ecx,DWORD PTR [rsi]
    14f4:	3a 21                	cmp    ah,BYTE PTR [rcx]
    14f6:	01 3b                	add    DWORD PTR [rbx],edi
    14f8:	0b 39                	or     edi,DWORD PTR [rcx]
    14fa:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	18 08                	sbb    BYTE PTR [rax],cl
    1501:	00 3a                	add    BYTE PTR [rdx],bh
    1503:	0b 3b                	or     edi,DWORD PTR [rbx]
    1505:	05 39 0b 18 13       	add    eax,0x13180b39
    150a:	00 00                	add    BYTE PTR [rax],al
    150c:	19 1d 01 31 13 52    	sbb    DWORD PTR [rip+0x52133101],ebx        # 52134613 <_end+0x5212e5fb>
    1512:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1518:	12 07                	adc    al,BYTE PTR [rdi]
    151a:	58                   	pop    rax
    151b:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    151e:	57                   	push   rdi
    151f:	0b 00                	or     eax,DWORD PTR [rax]
    1521:	00 1a                	add    BYTE PTR [rdx],bl
    1523:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1526:	19 03                	sbb    DWORD PTR [rbx],eax
    1528:	08 3a                	or     BYTE PTR [rdx],bh
    152a:	0b 3b                	or     edi,DWORD PTR [rbx]
    152c:	0b 39                	or     edi,DWORD PTR [rcx]
    152e:	21 03                	and    DWORD PTR [rbx],eax
    1530:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1531:	0e                   	(bad)
    1532:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1536:	01 13                	add    DWORD PTR [rbx],edx
    1538:	00 00                	add    BYTE PTR [rax],al
    153a:	1b 13                	sbb    edx,DWORD PTR [rbx]
    153c:	01 03                	add    DWORD PTR [rbx],eax
    153e:	0e                   	(bad)
    153f:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1541:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1543:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1545:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1547:	01 13                	add    DWORD PTR [rbx],edx
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	1c 05                	sbb    al,0x5
    154d:	00 03                	add    BYTE PTR [rbx],al
    154f:	0e                   	(bad)
    1550:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1552:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1554:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1556:	49 13 00             	adc    rax,QWORD PTR [r8]
    1559:	00 1d 05 00 03 0e    	add    BYTE PTR [rip+0xe030005],bl        # e031564 <_end+0xe02b54c>
    155f:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1561:	01 3b                	add    DWORD PTR [rbx],edi
    1563:	0b 39                	or     edi,DWORD PTR [rcx]
    1565:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1568:	02 17                	add    dl,BYTE PTR [rdi]
    156a:	b7 42                	mov    bh,0x42
    156c:	17                   	(bad)
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	1e                   	(bad)
    1570:	1d 01 31 13 52       	sbb    eax,0x52133101
    1575:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    157b:	58                   	pop    rax
    157c:	21 01                	and    DWORD PTR [rcx],eax
    157e:	59                   	pop    rcx
    157f:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1582:	01 13                	add    DWORD PTR [rbx],edx
    1584:	00 00                	add    BYTE PTR [rax],al
    1586:	1f                   	(bad)
    1587:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    158a:	19 03                	sbb    DWORD PTR [rbx],eax
    158c:	08 3a                	or     BYTE PTR [rdx],bh
    158e:	21 03                	and    DWORD PTR [rbx],eax
    1590:	3b 05 39 21 03 6e    	cmp    eax,DWORD PTR [rip+0x6e032139]        # 6e0336cf <_end+0x6e02d6b7>
    1596:	0e                   	(bad)
    1597:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    159b:	01 13                	add    DWORD PTR [rbx],edx
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    15a2:	03 0e                	add    ecx,DWORD PTR [rsi]
    15a4:	3a 21                	cmp    ah,BYTE PTR [rcx]
    15a6:	01 3b                	add    DWORD PTR [rbx],edi
    15a8:	0b 39                	or     edi,DWORD PTR [rcx]
    15aa:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    15ad:	02 17                	add    dl,BYTE PTR [rdi]
    15af:	b7 42                	mov    bh,0x42
    15b1:	17                   	(bad)
    15b2:	00 00                	add    BYTE PTR [rax],al
    15b4:	21 48 00             	and    DWORD PTR [rax+0x0],ecx
    15b7:	7d 01                	jge    15ba <_Z17hashMapAddElementP7HashMap8string_t+0x4a>
    15b9:	83 01 18             	add    DWORD PTR [rcx],0x18
    15bc:	00 00                	add    BYTE PTR [rax],al
    15be:	22 18                	and    bl,BYTE PTR [rax]
    15c0:	00 00                	add    BYTE PTR [rax],al
    15c2:	00 23                	add    BYTE PTR [rbx],ah
    15c4:	10 00                	adc    BYTE PTR [rax],al
    15c6:	0b 21                	or     esp,DWORD PTR [rcx]
    15c8:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    15cb:	00 00                	add    BYTE PTR [rax],al
    15cd:	24 48                	and    al,0x48
    15cf:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
    15d2:	7f 13                	jg     15e7 <_Z17hashMapAddElementP7HashMap8string_t+0x77>
    15d4:	00 00                	add    BYTE PTR [rax],al
    15d6:	25 36 00 02 18       	and    eax,0x18020036
    15db:	00 00                	add    BYTE PTR [rax],al
    15dd:	26 01 01             	es add DWORD PTR [rcx],eax
    15e0:	49 13 01             	adc    rax,QWORD PTR [r9]
    15e3:	13 00                	adc    eax,DWORD PTR [rax]
    15e5:	00 27                	add    BYTE PTR [rdi],ah
    15e7:	21 00                	and    DWORD PTR [rax],eax
    15e9:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    15ec:	0b 00                	or     eax,DWORD PTR [rax]
    15ee:	00 28                	add    BYTE PTR [rax],ch
    15f0:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    15f3:	19 03                	sbb    DWORD PTR [rbx],eax
    15f5:	0e                   	(bad)
    15f6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15f8:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d3737 <_end+0x3c0cd71f>
    15fe:	19 01                	sbb    DWORD PTR [rcx],eax
    1600:	13 00                	adc    eax,DWORD PTR [rax]
    1602:	00 29                	add    BYTE PTR [rcx],ch
    1604:	34 00                	xor    al,0x0
    1606:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
    1609:	00 2a                	add    BYTE PTR [rdx],ch
    160b:	34 00                	xor    al,0x0
    160d:	03 08                	add    ecx,DWORD PTR [rax]
    160f:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1611:	01 3b                	add    DWORD PTR [rbx],edi
    1613:	0b 39                	or     edi,DWORD PTR [rcx]
    1615:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1618:	02 17                	add    dl,BYTE PTR [rdi]
    161a:	b7 42                	mov    bh,0x42
    161c:	17                   	(bad)
    161d:	00 00                	add    BYTE PTR [rax],al
    161f:	2b 2e                	sub    ebp,DWORD PTR [rsi]
    1621:	01 3f                	add    DWORD PTR [rdi],edi
    1623:	19 03                	sbb    DWORD PTR [rbx],eax
    1625:	0e                   	(bad)
    1626:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1628:	04 3b                	add    al,0x3b
    162a:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    162f:	32 21                	xor    ah,BYTE PTR [rcx]
    1631:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    1634:	8b 01                	mov    eax,DWORD PTR [rcx]
    1636:	21 01                	and    DWORD PTR [rcx],eax
    1638:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    163b:	13 00                	adc    eax,DWORD PTR [rax]
    163d:	00 2c 2e             	add    BYTE PTR [rsi+rbp*1],ch
    1640:	00 3f                	add    BYTE PTR [rdi],bh
    1642:	19 03                	sbb    DWORD PTR [rbx],eax
    1644:	08 3a                	or     BYTE PTR [rdx],bh
    1646:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1649:	05 39 21 02 6e       	add    eax,0x6e022139
    164e:	0e                   	(bad)
    164f:	49 13 32             	adc    rsi,QWORD PTR [r10]
    1652:	21 01                	and    DWORD PTR [rcx],eax
    1654:	3c 19                	cmp    al,0x19
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	2d 05 00 03 0e       	sub    eax,0xe030005
    165d:	3a 21                	cmp    ah,BYTE PTR [rcx]
    165f:	04 3b                	add    al,0x3b
    1661:	05 39 0b 49 13       	add    eax,0x13490b39
    1666:	00 00                	add    BYTE PTR [rax],al
    1668:	2e 0b 01             	cs or  eax,DWORD PTR [rcx]
    166b:	55                   	push   rbp
    166c:	17                   	(bad)
    166d:	00 00                	add    BYTE PTR [rax],al
    166f:	2f                   	(bad)
    1670:	30 00                	xor    BYTE PTR [rax],al
    1672:	03 0e                	add    ecx,DWORD PTR [rsi]
    1674:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
    1678:	00 00                	add    BYTE PTR [rax],al
    167a:	30 2e                	xor    BYTE PTR [rsi],ch
    167c:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    167f:	64 13 20             	adc    esp,DWORD PTR fs:[rax]
    1682:	0b 01                	or     eax,DWORD PTR [rcx]
    1684:	13 00                	adc    eax,DWORD PTR [rax]
    1686:	00 31                	add    BYTE PTR [rcx],dh
    1688:	05 00 03 0e 49       	add    eax,0x490e0300
    168d:	13 34 19             	adc    esi,DWORD PTR [rcx+rbx*1]
    1690:	00 00                	add    BYTE PTR [rax],al
    1692:	32 2e                	xor    ch,BYTE PTR [rsi]
    1694:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1697:	20 21                	and    BYTE PTR [rcx],ah
    1699:	03 01                	add    eax,DWORD PTR [rcx]
    169b:	13 00                	adc    eax,DWORD PTR [rax]
    169d:	00 33                	add    BYTE PTR [rbx],dh
    169f:	39 01                	cmp    DWORD PTR [rcx],eax
    16a1:	03 0e                	add    ecx,DWORD PTR [rsi]
    16a3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    16a5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16a7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16a9:	01 13                	add    DWORD PTR [rbx],edx
    16ab:	00 00                	add    BYTE PTR [rax],al
    16ad:	34 34                	xor    al,0x34
    16af:	00 03                	add    BYTE PTR [rbx],al
    16b1:	0e                   	(bad)
    16b2:	3a 21                	cmp    ah,BYTE PTR [rcx]
    16b4:	10 3b                	adc    BYTE PTR [rbx],bh
    16b6:	21 b2 02 39 21 14    	and    DWORD PTR [rdx+0x14213902],esi
    16bc:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    16c0:	1c 21                	sbb    al,0x21
    16c2:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    16c6:	00 35 13 01 0b 0b    	add    BYTE PTR [rip+0xb0b0113],dh        # b0b17df <_end+0xb0ab7c7>
    16cc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    16ce:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16d0:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16d3:	0e                   	(bad)
    16d4:	01 13                	add    DWORD PTR [rbx],edx
    16d6:	00 00                	add    BYTE PTR [rax],al
    16d8:	36 0d 00 03 0e 3a    	ss or  eax,0x3a0e0300
    16de:	21 1c 3b             	and    DWORD PTR [rbx+rdi*1],ebx
    16e1:	21 00                	and    DWORD PTR [rax],eax
    16e3:	49 13 38             	adc    rdi,QWORD PTR [r8]
    16e6:	0b 00                	or     eax,DWORD PTR [rax]
    16e8:	00 37                	add    BYTE PTR [rdi],dh
    16ea:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    16ed:	19 03                	sbb    DWORD PTR [rbx],eax
    16ef:	0e                   	(bad)
    16f0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    16f2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16f4:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16f6:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    16fa:	00 00                	add    BYTE PTR [rax],al
    16fc:	38 1d 01 31 13 52    	cmp    BYTE PTR [rip+0x52133101],bl        # 52134803 <_end+0x5212e7eb>
    1702:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    1708:	58                   	pop    rax
    1709:	21 01                	and    DWORD PTR [rcx],eax
    170b:	59                   	pop    rcx
    170c:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    170f:	00 00                	add    BYTE PTR [rax],al
    1711:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1713:	01 31                	add    DWORD PTR [rcx],esi
    1715:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
    1718:	01 13                	add    DWORD PTR [rbx],edx
    171a:	00 00                	add    BYTE PTR [rax],al
    171c:	3a 34 00             	cmp    dh,BYTE PTR [rax+rax*1]
    171f:	31 13                	xor    DWORD PTR [rbx],edx
    1721:	00 00                	add    BYTE PTR [rax],al
    1723:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
    1725:	00 3f                	add    BYTE PTR [rdi],bh
    1727:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    172a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    172b:	0e                   	(bad)
    172c:	03 0e                	add    ecx,DWORD PTR [rsi]
    172e:	00 00                	add    BYTE PTR [rax],al
    1730:	3c 39                	cmp    al,0x39
    1732:	00 03                	add    BYTE PTR [rbx],al
    1734:	0e                   	(bad)
    1735:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1737:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1739:	39 0b                	cmp    DWORD PTR [rbx],ecx
    173b:	00 00                	add    BYTE PTR [rax],al
    173d:	3d 34 00 03 0e       	cmp    eax,0xe030034
    1742:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1744:	0e                   	(bad)
    1745:	3b 21                	cmp    esp,DWORD PTR [rcx]
    1747:	30 39                	xor    BYTE PTR [rcx],bh
    1749:	21 14 49             	and    DWORD PTR [rcx+rcx*2],edx
    174c:	13 3c 19             	adc    edi,DWORD PTR [rcx+rbx*1]
    174f:	1c 21                	sbb    al,0x21
    1751:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    1755:	00 3e                	add    BYTE PTR [rsi],bh
    1757:	02 01                	add    al,BYTE PTR [rcx]
    1759:	03 0e                	add    ecx,DWORD PTR [rsi]
    175b:	0b 21                	or     esp,DWORD PTR [rcx]
    175d:	08 3a                	or     BYTE PTR [rdx],bh
    175f:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1762:	05 39 21 0d 01       	add    eax,0x10d2139
    1767:	13 00                	adc    eax,DWORD PTR [rax]
    1769:	00 3f                	add    BYTE PTR [rdi],bh
    176b:	0d 00 03 08 3a       	or     eax,0x3a080300
    1770:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1773:	05 39 0b 49 13       	add    eax,0x13490b39
    1778:	38 21                	cmp    BYTE PTR [rcx],ah
    177a:	00 00                	add    BYTE PTR [rax],al
    177c:	00 40 2e             	add    BYTE PTR [rax+0x2e],al
    177f:	01 3f                	add    DWORD PTR [rdi],edi
    1781:	19 03                	sbb    DWORD PTR [rbx],eax
    1783:	0e                   	(bad)
    1784:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1786:	04 3b                	add    al,0x3b
    1788:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    178d:	32 21                	xor    ah,BYTE PTR [rcx]
    178f:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    1792:	63 19                	movsxd ebx,DWORD PTR [rcx]
    1794:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1797:	13 00                	adc    eax,DWORD PTR [rax]
    1799:	00 41 16             	add    BYTE PTR [rcx+0x16],al
    179c:	00 03                	add    BYTE PTR [rbx],al
    179e:	0e                   	(bad)
    179f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    17a1:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134922e0 <_end+0x1348c2c8>
    17a7:	00 00                	add    BYTE PTR [rax],al
    17a9:	42 2f                	rex.X (bad)
    17ab:	00 03                	add    BYTE PTR [rbx],al
    17ad:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    17b0:	00 00                	add    BYTE PTR [rax],al
    17b2:	43 13 01             	rex.XB adc eax,DWORD PTR [r9]
    17b5:	03 0e                	add    ecx,DWORD PTR [rsi]
    17b7:	0b 21                	or     esp,DWORD PTR [rcx]
    17b9:	01 3a                	add    DWORD PTR [rdx],edi
    17bb:	21 10                	and    DWORD PTR [rax],edx
    17bd:	3b 21                	cmp    esp,DWORD PTR [rcx]
    17bf:	8a 02                	mov    al,BYTE PTR [rdx]
    17c1:	39 21                	cmp    DWORD PTR [rcx],esp
    17c3:	0c 01                	or     al,0x1
    17c5:	13 00                	adc    eax,DWORD PTR [rax]
    17c7:	00 44 34 00          	add    BYTE PTR [rsp+rsi*1+0x0],al
    17cb:	03 08                	add    ecx,DWORD PTR [rax]
    17cd:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17cf:	10 3b                	adc    BYTE PTR [rbx],bh
    17d1:	21 91 02 39 21 21    	and    DWORD PTR [rcx+0x21213902],edx
    17d7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17d8:	0e                   	(bad)
    17d9:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    17dc:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    17df:	1c 21                	sbb    al,0x21
    17e1:	01 6c 19 20          	add    DWORD PTR [rcx+rbx*1+0x20],ebp
    17e5:	21 01                	and    DWORD PTR [rcx],eax
    17e7:	00 00                	add    BYTE PTR [rax],al
    17e9:	45 0d 00 03 08 3a    	rex.RB or eax,0x3a080300
    17ef:	21 16                	and    DWORD PTR [rsi],edx
    17f1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    17f3:	39 0b                	cmp    DWORD PTR [rbx],ecx
    17f5:	49 13 38             	adc    rdi,QWORD PTR [r8]
    17f8:	0b 00                	or     eax,DWORD PTR [rax]
    17fa:	00 46 13             	add    BYTE PTR [rsi+0x13],al
    17fd:	00 03                	add    BYTE PTR [rbx],al
    17ff:	0e                   	(bad)
    1800:	3c 19                	cmp    al,0x19
    1802:	00 00                	add    BYTE PTR [rax],al
    1804:	47 34 00             	rex.RXB xor al,0x0
    1807:	03 0e                	add    ecx,DWORD PTR [rsi]
    1809:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    180b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    180d:	39 21                	cmp    DWORD PTR [rcx],esp
    180f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1812:	1c 0b                	sbb    al,0xb
    1814:	00 00                	add    BYTE PTR [rax],al
    1816:	48 0b 01             	or     rax,QWORD PTR [rcx]
    1819:	00 00                	add    BYTE PTR [rax],al
    181b:	49 34 00             	rex.WB xor al,0x0
    181e:	03 08                	add    ecx,DWORD PTR [rax]
    1820:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1822:	01 3b                	add    DWORD PTR [rbx],edi
    1824:	0b 39                	or     edi,DWORD PTR [rcx]
    1826:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1829:	00 00                	add    BYTE PTR [rax],al
    182b:	4a                   	rex.WX
    182c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    182f:	19 03                	sbb    DWORD PTR [rbx],eax
    1831:	0e                   	(bad)
    1832:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1834:	01 3b                	add    DWORD PTR [rbx],edi
    1836:	0b 39                	or     edi,DWORD PTR [rcx]
    1838:	21 06                	and    DWORD PTR [rsi],eax
    183a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    183b:	0e                   	(bad)
    183c:	11 01                	adc    DWORD PTR [rcx],eax
    183e:	12 07                	adc    al,BYTE PTR [rdi]
    1840:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    1844:	01 13                	add    DWORD PTR [rbx],edx
    1846:	00 00                	add    BYTE PTR [rax],al
    1848:	4b 34 00             	rex.WXB xor al,0x0
    184b:	03 0e                	add    ecx,DWORD PTR [rsi]
    184d:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    1851:	6c                   	ins    BYTE PTR es:[rdi],dx
    1852:	19 02                	sbb    DWORD PTR [rdx],eax
    1854:	18 00                	sbb    BYTE PTR [rax],al
    1856:	00 4c 34 00          	add    BYTE PTR [rsp+rsi*1+0x0],cl
    185a:	03 0e                	add    ecx,DWORD PTR [rsi]
    185c:	3a 21                	cmp    ah,BYTE PTR [rcx]
    185e:	01 3b                	add    DWORD PTR [rbx],edi
    1860:	0b 39                	or     edi,DWORD PTR [rcx]
    1862:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1865:	02 18                	add    bl,BYTE PTR [rax]
    1867:	00 00                	add    BYTE PTR [rax],al
    1869:	4d 0b 01             	or     r8,QWORD PTR [r9]
    186c:	31 13                	xor    DWORD PTR [rbx],edx
    186e:	55                   	push   rbp
    186f:	17                   	(bad)
    1870:	00 00                	add    BYTE PTR [rax],al
    1872:	4e                   	rex.WRX
    1873:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1876:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1879:	11 01                	adc    DWORD PTR [rcx],eax
    187b:	12 07                	adc    al,BYTE PTR [rdi]
    187d:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    1881:	01 13                	add    DWORD PTR [rbx],edx
    1883:	00 00                	add    BYTE PTR [rax],al
    1885:	4f 39 00             	rex.WRXB cmp QWORD PTR [r8],r8
    1888:	03 0e                	add    ecx,DWORD PTR [rsi]
    188a:	3a 21                	cmp    ah,BYTE PTR [rcx]
    188c:	05 3b 05 39 21       	add    eax,0x2139053b
    1891:	0d 00 00 50 39       	or     eax,0x39500000
    1896:	00 03                	add    BYTE PTR [rbx],al
    1898:	0e                   	(bad)
    1899:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    189b:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 18923da <_end+0x188c3c2>
    18a1:	19 00                	sbb    DWORD PTR [rax],eax
    18a3:	00 51 2e             	add    BYTE PTR [rcx+0x2e],dl
    18a6:	01 3f                	add    DWORD PTR [rdi],edi
    18a8:	19 03                	sbb    DWORD PTR [rbx],eax
    18aa:	0e                   	(bad)
    18ab:	3a 21                	cmp    ah,BYTE PTR [rcx]
    18ad:	04 3b                	add    al,0x3b
    18af:	21 c9                	and    ecx,ecx
    18b1:	04 39                	add    al,0x39
    18b3:	21 0c 6e             	and    DWORD PTR [rsi+rbp*2],ecx
    18b6:	0e                   	(bad)
    18b7:	49 13 32             	adc    rsi,QWORD PTR [r10]
    18ba:	21 01                	and    DWORD PTR [rcx],eax
    18bc:	3c 19                	cmp    al,0x19
    18be:	8b 01                	mov    eax,DWORD PTR [rcx]
    18c0:	21 01                	and    DWORD PTR [rcx],eax
    18c2:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    18c5:	13 00                	adc    eax,DWORD PTR [rax]
    18c7:	00 52 16             	add    BYTE PTR [rdx+0x16],dl
    18ca:	00 03                	add    BYTE PTR [rbx],al
    18cc:	08 3a                	or     BYTE PTR [rdx],bh
    18ce:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    18d1:	21 b0 04 39 21 08    	and    DWORD PTR [rax+0x8213904],esi
    18d7:	49 13 32             	adc    rsi,QWORD PTR [r10]
    18da:	21 01                	and    DWORD PTR [rcx],eax
    18dc:	00 00                	add    BYTE PTR [rax],al
    18de:	53                   	push   rbx
    18df:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    18e2:	19 03                	sbb    DWORD PTR [rbx],eax
    18e4:	0e                   	(bad)
    18e5:	3a 21                	cmp    ah,BYTE PTR [rcx]
    18e7:	04 3b                	add    al,0x3b
    18e9:	21 a1 05 39 21 02    	and    DWORD PTR [rcx+0x2213905],esp
    18ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18f0:	0e                   	(bad)
    18f1:	49 13 32             	adc    rsi,QWORD PTR [r10]
    18f4:	21 01                	and    DWORD PTR [rcx],eax
    18f6:	3c 19                	cmp    al,0x19
    18f8:	00 00                	add    BYTE PTR [rax],al
    18fa:	54                   	push   rsp
    18fb:	34 00                	xor    al,0x0
    18fd:	03 08                	add    ecx,DWORD PTR [rax]
    18ff:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1901:	10 3b                	adc    BYTE PTR [rbx],bh
    1903:	21 94 02 39 21 21 6e 	and    DWORD PTR [rdx+rax*1+0x6e212139],edx
    190a:	0e                   	(bad)
    190b:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    190e:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1911:	1c 06                	sbb    al,0x6
    1913:	6c                   	ins    BYTE PTR es:[rdi],dx
    1914:	19 20                	sbb    DWORD PTR [rax],esp
    1916:	21 01                	and    DWORD PTR [rcx],eax
    1918:	00 00                	add    BYTE PTR [rax],al
    191a:	55                   	push   rbp
    191b:	30 00                	xor    BYTE PTR [rax],al
    191d:	03 0e                	add    ecx,DWORD PTR [rsi]
    191f:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    1923:	00 00                	add    BYTE PTR [rax],al
    1925:	56                   	push   rsi
    1926:	2f                   	(bad)
    1927:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    192a:	00 00                	add    BYTE PTR [rax],al
    192c:	57                   	push   rdi
    192d:	37                   	(bad)
    192e:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1931:	00 00                	add    BYTE PTR [rax],al
    1933:	58                   	pop    rax
    1934:	15 01 49 13 01       	adc    eax,0x1134901
    1939:	13 00                	adc    eax,DWORD PTR [rax]
    193b:	00 59 0d             	add    BYTE PTR [rcx+0xd],bl
    193e:	00 03                	add    BYTE PTR [rbx],al
    1940:	0e                   	(bad)
    1941:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1943:	1d 3b 0b 39 0b       	sbb    eax,0xb390b3b
    1948:	49 13 00             	adc    rax,QWORD PTR [r8]
    194b:	00 5a 2e             	add    BYTE PTR [rdx+0x2e],bl
    194e:	00 3f                	add    BYTE PTR [rdi],bh
    1950:	19 03                	sbb    DWORD PTR [rbx],eax
    1952:	0e                   	(bad)
    1953:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1955:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492494 <_end+0x1348c47c>
    195b:	3c 19                	cmp    al,0x19
    195d:	00 00                	add    BYTE PTR [rax],al
    195f:	5b                   	pop    rbx
    1960:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    1965:	21 15 3b 05 39 0b    	and    DWORD PTR [rip+0xb39053b],edx        # b391ea6 <_end+0xb38be8e>
    196b:	49 13 88 01 0b 38 0b 	adc    rcx,QWORD PTR [r8+0xb380b01]
    1972:	00 00                	add    BYTE PTR [rax],al
    1974:	5c                   	pop    rsp
    1975:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1978:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    197b:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    197e:	13 00                	adc    eax,DWORD PTR [rax]
    1980:	00 5d 05             	add    BYTE PTR [rbp+0x5],bl
    1983:	00 03                	add    BYTE PTR [rbx],al
    1985:	08 3a                	or     BYTE PTR [rdx],bh
    1987:	0b 3b                	or     edi,DWORD PTR [rbx]
    1989:	05 39 0b 49 13       	add    eax,0x13490b39
    198e:	00 00                	add    BYTE PTR [rax],al
    1990:	5e                   	pop    rsi
    1991:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1994:	19 03                	sbb    DWORD PTR [rbx],eax
    1996:	0e                   	(bad)
    1997:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1999:	01 3b                	add    DWORD PTR [rbx],edi
    199b:	0b 39                	or     edi,DWORD PTR [rcx]
    199d:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    19a0:	49 13 20             	adc    rsp,QWORD PTR [r8]
    19a3:	21 01                	and    DWORD PTR [rcx],eax
    19a5:	01 13                	add    DWORD PTR [rbx],edx
    19a7:	00 00                	add    BYTE PTR [rax],al
    19a9:	5f                   	pop    rdi
    19aa:	34 00                	xor    al,0x0
    19ac:	03 0e                	add    ecx,DWORD PTR [rsi]
    19ae:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    19b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    19b3:	19 00                	sbb    DWORD PTR [rax],eax
    19b5:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
    19b8:	01 31                	add    DWORD PTR [rcx],esi
    19ba:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
    19bd:	b8 42 05 11 01       	mov    eax,0x1110542
    19c2:	12 07                	adc    al,BYTE PTR [rdi]
    19c4:	58                   	pop    rax
    19c5:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    19c8:	21 f7                	and    edi,esi
    19ca:	08 57 0b             	or     BYTE PTR [rdi+0xb],dl
    19cd:	01 13                	add    DWORD PTR [rbx],edx
    19cf:	00 00                	add    BYTE PTR [rax],al
    19d1:	61                   	(bad)
    19d2:	1d 01 31 13 52       	sbb    eax,0x52133101
    19d7:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    19dd:	58                   	pop    rax
    19de:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    19e1:	05 57 0b 00 00       	add    eax,0xb57
    19e6:	62 0b 01 55 17       	(bad)
    19eb:	01 13                	add    DWORD PTR [rbx],edx
    19ed:	00 00                	add    BYTE PTR [rax],al
    19ef:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    19f1:	01 3f                	add    DWORD PTR [rdi],edi
    19f3:	19 03                	sbb    DWORD PTR [rbx],eax
    19f5:	0e                   	(bad)
    19f6:	3a 21                	cmp    ah,BYTE PTR [rcx]
    19f8:	02 3b                	add    bh,BYTE PTR [rbx]
    19fa:	0b 39                	or     edi,DWORD PTR [rcx]
    19fc:	21 01                	and    DWORD PTR [rcx],eax
    19fe:	49 13 20             	adc    rsp,QWORD PTR [r8]
    1a01:	21 03                	and    DWORD PTR [rbx],eax
    1a03:	34 19                	xor    al,0x19
    1a05:	01 13                	add    DWORD PTR [rbx],edx
    1a07:	00 00                	add    BYTE PTR [rax],al
    1a09:	64 48 00 7d 01       	rex.W add BYTE PTR fs:[rbp+0x1],dil
    1a0e:	82                   	(bad)
    1a0f:	01 19                	add    DWORD PTR [rcx],ebx
    1a11:	7f 13                	jg     1a26 <_Z6resizeP7HashMapj+0x196>
    1a13:	00 00                	add    BYTE PTR [rax],al
    1a15:	65 05 00 31 13 1c    	gs add eax,0x1c133100
    1a1b:	21 00                	and    DWORD PTR [rax],eax
    1a1d:	00 00                	add    BYTE PTR [rax],al
    1a1f:	66 11 01             	adc    WORD PTR [rcx],ax
    1a22:	25 0e 13 0b 03       	and    eax,0x30b130e
    1a27:	1f                   	(bad)
    1a28:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    1a2a:	11 01                	adc    DWORD PTR [rcx],eax
    1a2c:	12 07                	adc    al,BYTE PTR [rdi]
    1a2e:	10 17                	adc    BYTE PTR [rdi],dl
    1a30:	00 00                	add    BYTE PTR [rax],al
    1a32:	67 39 01             	cmp    DWORD PTR [ecx],eax
    1a35:	03 08                	add    ecx,DWORD PTR [rax]
    1a37:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a39:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13012578 <_end+0x1300c560>
    1a3f:	00 00                	add    BYTE PTR [rax],al
    1a41:	68 39 00 03 08       	push   0x8030039
    1a46:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a48:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a4a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a4c:	00 00                	add    BYTE PTR [rax],al
    1a4e:	69 39 01 03 08 3a    	imul   edi,DWORD PTR [rcx],0x3a080301
    1a54:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a56:	05 39 0b 89 01       	add    eax,0x1890b39
    1a5b:	19 01                	sbb    DWORD PTR [rcx],eax
    1a5d:	13 00                	adc    eax,DWORD PTR [rax]
    1a5f:	00 6a 13             	add    BYTE PTR [rdx+0x13],ch
    1a62:	01 03                	add    DWORD PTR [rbx],eax
    1a64:	0e                   	(bad)
    1a65:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1a67:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a69:	3b 05 39 0b 00 00    	cmp    eax,DWORD PTR [rip+0xb39]        # 25a8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1d8>
    1a6f:	6b 34 00 03          	imul   esi,DWORD PTR [rax+rax*1],0x3
    1a73:	0e                   	(bad)
    1a74:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a76:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e25b5 <_end+0xe6dc59d>
    1a7c:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1a7f:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1a82:	1c 0b                	sbb    al,0xb
    1a84:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a85:	19 20                	sbb    DWORD PTR [rax],esp
    1a87:	0b 00                	or     eax,DWORD PTR [rax]
    1a89:	00 6c 2e 00          	add    BYTE PTR [rsi+rbp*1+0x0],ch
    1a8d:	3f                   	(bad)
    1a8e:	19 03                	sbb    DWORD PTR [rbx],eax
    1a90:	08 3a                	or     BYTE PTR [rdx],bh
    1a92:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a94:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1a99:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1a9d:	00 00                	add    BYTE PTR [rax],al
    1a9f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1aa0:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1aa3:	19 03                	sbb    DWORD PTR [rbx],eax
    1aa5:	0e                   	(bad)
    1aa6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1aa8:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e25e7 <_end+0xe6dc5cf>
    1aae:	32 0b                	xor    cl,BYTE PTR [rbx]
    1ab0:	3c 19                	cmp    al,0x19
    1ab2:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1ab5:	13 00                	adc    eax,DWORD PTR [rax]
    1ab7:	00 6e 16             	add    BYTE PTR [rsi+0x16],ch
    1aba:	00 03                	add    BYTE PTR [rbx],al
    1abc:	0e                   	(bad)
    1abd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1abf:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134925fe <_end+0x1348c5e6>
    1ac5:	32 0b                	xor    cl,BYTE PTR [rbx]
    1ac7:	00 00                	add    BYTE PTR [rax],al
    1ac9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1aca:	3a 00                	cmp    al,BYTE PTR [rax]
    1acc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ace:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 1318260d <_end+0x1317c5f5>
    1ad4:	00 00                	add    BYTE PTR [rax],al
    1ad6:	70 2e                	jo     1b06 <_Z25_mm_crc32UnrollHashString8string_t+0x6>
    1ad8:	01 3f                	add    DWORD PTR [rdi],edi
    1ada:	19 03                	sbb    DWORD PTR [rbx],eax
    1adc:	0e                   	(bad)
    1add:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1adf:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e261e <_end+0xe6dc606>
    1ae5:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1ae9:	00 00                	add    BYTE PTR [rax],al
    1aeb:	71 87                	jno    1a74 <_Z6resizeP7HashMapj+0x1e4>
    1aed:	82                   	(bad)
    1aee:	01 01                	add    DWORD PTR [rcx],eax
    1af0:	03 08                	add    ecx,DWORD PTR [rax]
    1af2:	00 00                	add    BYTE PTR [rax],al
    1af4:	72 34                	jb     1b2a <_Z25_mm_crc32UnrollHashString8string_t+0x2a>
    1af6:	00 03                	add    BYTE PTR [rbx],al
    1af8:	08 3a                	or     BYTE PTR [rdx],bh
    1afa:	0b 3b                	or     edi,DWORD PTR [rbx]
    1afc:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1b01:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1b04:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1b07:	1c 05                	sbb    al,0x5
    1b09:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b0a:	19 20                	sbb    DWORD PTR [rax],esp
    1b0c:	0b 00                	or     eax,DWORD PTR [rax]
    1b0e:	00 73 30             	add    BYTE PTR [rbx+0x30],dh
    1b11:	00 03                	add    BYTE PTR [rbx],al
    1b13:	0e                   	(bad)
    1b14:	49 13 1c 05 00 00 74 	adc    rbx,QWORD PTR [rax*1+0x39740000]
    1b1b:	39 
    1b1c:	01 03                	add    DWORD PTR [rbx],eax
    1b1e:	0e                   	(bad)
    1b1f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b21:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 1892660 <_end+0x188c648>
    1b27:	19 01                	sbb    DWORD PTR [rcx],eax
    1b29:	13 00                	adc    eax,DWORD PTR [rax]
    1b2b:	00 75 39             	add    BYTE PTR [rbp+0x39],dh
    1b2e:	01 03                	add    DWORD PTR [rbx],eax
    1b30:	0e                   	(bad)
    1b31:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b33:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13012672 <_end+0x1300c65a>
    1b39:	00 00                	add    BYTE PTR [rax],al
    1b3b:	76 24                	jbe    1b61 <_Z17murmur2HashString8string_t+0x1>
    1b3d:	00 0b                	add    BYTE PTR [rbx],cl
    1b3f:	0b 3e                	or     edi,DWORD PTR [rsi]
    1b41:	0b 03                	or     eax,DWORD PTR [rbx]
    1b43:	08 00                	or     BYTE PTR [rax],al
    1b45:	00 77 0f             	add    BYTE PTR [rdi+0xf],dh
    1b48:	00 0b                	add    BYTE PTR [rbx],cl
    1b4a:	0b 00                	or     eax,DWORD PTR [rax]
    1b4c:	00 78 26             	add    BYTE PTR [rax+0x26],bh
    1b4f:	00 00                	add    BYTE PTR [rax],al
    1b51:	00 79 3a             	add    BYTE PTR [rcx+0x3a],bh
    1b54:	00 3a                	add    BYTE PTR [rdx],bh
    1b56:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b58:	0b 39                	or     edi,DWORD PTR [rcx]
    1b5a:	0b 18                	or     ebx,DWORD PTR [rax]
    1b5c:	13 00                	adc    eax,DWORD PTR [rax]
    1b5e:	00 7a 13             	add    BYTE PTR [rdx+0x13],bh
    1b61:	01 03                	add    DWORD PTR [rbx],eax
    1b63:	0e                   	(bad)
    1b64:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1b66:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b68:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b6a:	01 13                	add    DWORD PTR [rbx],edx
    1b6c:	00 00                	add    BYTE PTR [rax],al
    1b6e:	7b 17                	jnp    1b87 <_Z17adler32HashString8string_t+0x7>
    1b70:	01 0b                	add    DWORD PTR [rbx],ecx
    1b72:	0b 3a                	or     edi,DWORD PTR [rdx]
    1b74:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b76:	0b 39                	or     edi,DWORD PTR [rcx]
    1b78:	0b 01                	or     eax,DWORD PTR [rcx]
    1b7a:	13 00                	adc    eax,DWORD PTR [rax]
    1b7c:	00 7c 16 00          	add    BYTE PTR [rsi+rdx*1+0x0],bh
    1b80:	03 0e                	add    ecx,DWORD PTR [rsi]
    1b82:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b84:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b86:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b88:	00 00                	add    BYTE PTR [rax],al
    1b8a:	7d 15                	jge    1ba1 <_Z17adler32HashString8string_t+0x21>
    1b8c:	00 00                	add    BYTE PTR [rax],al
    1b8e:	00 7e 2e             	add    BYTE PTR [rsi+0x2e],bh
    1b91:	01 3f                	add    DWORD PTR [rdi],edi
    1b93:	19 03                	sbb    DWORD PTR [rbx],eax
    1b95:	08 3a                	or     BYTE PTR [rdx],bh
    1b97:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b99:	05 39 0b 49 13       	add    eax,0x13490b39
    1b9e:	3c 19                	cmp    al,0x19
    1ba0:	01 13                	add    DWORD PTR [rbx],edx
    1ba2:	00 00                	add    BYTE PTR [rax],al
    1ba4:	7f 2e                	jg     1bd4 <_Z17adler32HashString8string_t+0x54>
    1ba6:	01 3f                	add    DWORD PTR [rdi],edi
    1ba8:	19 03                	sbb    DWORD PTR [rbx],eax
    1baa:	0e                   	(bad)
    1bab:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1bad:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18726ec <_end+0x186c6d4>
    1bb3:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1bb6:	01 13                	add    DWORD PTR [rbx],edx
    1bb8:	00 00                	add    BYTE PTR [rax],al
    1bba:	80 01 13             	add    BYTE PTR [rcx],0x13
    1bbd:	01 0b                	add    DWORD PTR [rbx],ecx
    1bbf:	0b 88 01 0b 3a 0b    	or     ecx,DWORD PTR [rax+0xb3a0b01]
    1bc5:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e2704 <_end+0xe6dc6ec>
    1bcb:	01 13                	add    DWORD PTR [rbx],edx
    1bcd:	00 00                	add    BYTE PTR [rax],al
    1bcf:	81 01 16 00 03 0e    	add    DWORD PTR [rcx],0xe030016
    1bd5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1bd7:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492716 <_end+0x1348c6fe>
    1bdd:	88 01                	mov    BYTE PTR [rcx],al
    1bdf:	0b 00                	or     eax,DWORD PTR [rax]
    1be1:	00 82 01 01 01 87    	add    BYTE PTR [rdx-0x78fefeff],al
    1be7:	42 19 49 13          	rex.X sbb DWORD PTR [rcx+0x13],ecx
    1beb:	01 13                	add    DWORD PTR [rbx],edx
    1bed:	00 00                	add    BYTE PTR [rax],al
    1bef:	83 01 21             	add    DWORD PTR [rcx],0x21
    1bf2:	00 2f                	add    BYTE PTR [rdi],ch
    1bf4:	0b 00                	or     eax,DWORD PTR [rax]
    1bf6:	00 84 01 13 01 03 08 	add    BYTE PTR [rcx+rax*1+0x8030113],al
    1bfd:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1bff:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c01:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c03:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c05:	01 13                	add    DWORD PTR [rbx],edx
    1c07:	00 00                	add    BYTE PTR [rax],al
    1c09:	85 01                	test   DWORD PTR [rcx],eax
    1c0b:	39 01                	cmp    DWORD PTR [rcx],eax
    1c0d:	03 0e                	add    ecx,DWORD PTR [rsi]
    1c0f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c11:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c13:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c15:	00 00                	add    BYTE PTR [rax],al
    1c17:	86 01                	xchg   BYTE PTR [rcx],al
    1c19:	39 00                	cmp    DWORD PTR [rax],eax
    1c1b:	03 08                	add    ecx,DWORD PTR [rax]
    1c1d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c1f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c21:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c23:	89 01                	mov    DWORD PTR [rcx],eax
    1c25:	19 00                	sbb    DWORD PTR [rax],eax
    1c27:	00 87 01 34 00 03    	add    BYTE PTR [rdi+0x3003401],al
    1c2d:	0e                   	(bad)
    1c2e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c30:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c32:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c34:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    1c38:	00 00                	add    BYTE PTR [rax],al
    1c3a:	88 01                	mov    BYTE PTR [rcx],al
    1c3c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1c3f:	19 03                	sbb    DWORD PTR [rbx],eax
    1c41:	0e                   	(bad)
    1c42:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c44:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c46:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c49:	0e                   	(bad)
    1c4a:	3c 19                	cmp    al,0x19
    1c4c:	01 13                	add    DWORD PTR [rbx],edx
    1c4e:	00 00                	add    BYTE PTR [rax],al
    1c50:	89 01                	mov    DWORD PTR [rcx],eax
    1c52:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1c55:	19 03                	sbb    DWORD PTR [rbx],eax
    1c57:	0e                   	(bad)
    1c58:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c5a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c5c:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c5e:	87 01                	xchg   DWORD PTR [rcx],eax
    1c60:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1c63:	01 13                	add    DWORD PTR [rbx],edx
    1c65:	00 00                	add    BYTE PTR [rax],al
    1c67:	8a 01                	mov    al,BYTE PTR [rcx]
    1c69:	05 00 03 08 3a       	add    eax,0x3a080300
    1c6e:	0b 3b                	or     edi,DWORD PTR [rbx]
    1c70:	0b 39                	or     edi,DWORD PTR [rcx]
    1c72:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1c75:	00 00                	add    BYTE PTR [rax],al
    1c77:	8b 01                	mov    eax,DWORD PTR [rcx]
    1c79:	0b 00                	or     eax,DWORD PTR [rax]
    1c7b:	00 00                	add    BYTE PTR [rax],al
    1c7d:	8c 01                	mov    WORD PTR [rcx],es
    1c7f:	1d 01 31 13 52       	sbb    eax,0x52133101
    1c84:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1c8a:	12 07                	adc    al,BYTE PTR [rdi]
    1c8c:	58                   	pop    rax
    1c8d:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
    1c90:	57                   	push   rdi
    1c91:	0b 00                	or     eax,DWORD PTR [rax]
    1c93:	00 8d 01 48 01 7d    	add    BYTE PTR [rbp+0x7d014801],cl
    1c99:	01 82 01 19 7f 13    	add    DWORD PTR [rdx+0x137f1901],eax
    1c9f:	01 13                	add    DWORD PTR [rbx],edx
    1ca1:	00 00                	add    BYTE PTR [rax],al
    1ca3:	8e 01                	mov    es,WORD PTR [rcx]
    1ca5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1ca8:	19 03                	sbb    DWORD PTR [rbx],eax
    1caa:	0e                   	(bad)
    1cab:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1cad:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1caf:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1cb1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cb2:	0e                   	(bad)
    1cb3:	20 0b                	and    BYTE PTR [rbx],cl
    1cb5:	01 13                	add    DWORD PTR [rbx],edx
    1cb7:	00 00                	add    BYTE PTR [rax],al
    1cb9:	8f 01                	pop    QWORD PTR [rcx]
    1cbb:	05 00 31 13 02       	add    eax,0x2133100
    1cc0:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	ef                   	out    dx,eax
       1:	00 00                	add    BYTE PTR [rax],al
       3:	00 05 00 08 00 8b    	add    BYTE PTR [rip+0xffffffff8b000800],al        # ffffffff8b000809 <_end+0xffffffff8affa7f1>
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 01                	add    BYTE PTR [rcx],al
       d:	01 01                	add    DWORD PTR [rcx],eax
       f:	fb                   	sti
      10:	0e                   	(bad)
      11:	0d 00 01 01 01       	or     eax,0x1010100
      16:	01 00                	add    DWORD PTR [rax],eax
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	01 00                	add    DWORD PTR [rax],eax
      1c:	00 01                	add    BYTE PTR [rcx],al
      1e:	01 01                	add    DWORD PTR [rcx],eax
      20:	1f                   	(bad)
      21:	09 00                	or     DWORD PTR [rax],eax
      23:	00 00                	add    BYTE PTR [rax],al
      25:	00 2f                	add    BYTE PTR [rdi],ch
      27:	00 00                	add    BYTE PTR [rax],al
      29:	00 41 00             	add    BYTE PTR [rcx+0x0],al
      2c:	00 00                	add    BYTE PTR [rax],al
      2e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
      31:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
      34:	00 00                	add    BYTE PTR [rax],al
      36:	9a                   	(bad)
      37:	00 00                	add    BYTE PTR [rax],al
      39:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
      3f:	00 00                	add    BYTE PTR [rax],al
      41:	00 dd                	add    ch,bl
      43:	00 00                	add    BYTE PTR [rax],al
      45:	00 02                	add    BYTE PTR [rdx],al
      47:	01 1f                	add    DWORD PTR [rdi],ebx
      49:	02 0f                	add    cl,BYTE PTR [rdi]
      4b:	0f 26                	(bad)
      4d:	00 00                	add    BYTE PTR [rax],al
      4f:	00 01                	add    BYTE PTR [rcx],al
      51:	26 00 00             	es add BYTE PTR [rax],al
      54:	00 01                	add    BYTE PTR [rcx],al
      56:	07                   	(bad)
      57:	01 00                	add    DWORD PTR [rax],eax
      59:	00 02                	add    BYTE PTR [rdx],al
      5b:	10 01                	adc    BYTE PTR [rcx],al
      5d:	00 00                	add    BYTE PTR [rax],al
      5f:	03 19                	add    ebx,DWORD PTR [rcx]
      61:	01 00                	add    DWORD PTR [rax],eax
      63:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
      66:	01 00                	add    DWORD PTR [rax],eax
      68:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 197 <__abi_tag-0x1e5>
      6e:	06                   	(bad)
      6f:	33 01                	xor    eax,DWORD PTR [rcx]
      71:	00 00                	add    BYTE PTR [rax],al
      73:	04 42                	add    al,0x42
      75:	01 00                	add    DWORD PTR [rax],eax
      77:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7a:	01 00                	add    DWORD PTR [rax],eax
      7c:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7f:	01 00                	add    DWORD PTR [rax],eax
      81:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 1da <__abi_tag-0x1a2>
      87:	04 62                	add    al,0x62
      89:	01 00                	add    DWORD PTR [rax],eax
      8b:	00 07                	add    BYTE PTR [rdi],al
      8d:	6d                   	ins    DWORD PTR es:[rdi],dx
      8e:	01 00                	add    DWORD PTR [rax],eax
      90:	00 07                	add    BYTE PTR [rdi],al
      92:	75 01                	jne    95 <__abi_tag-0x2e7>
      94:	00 00                	add    BYTE PTR [rax],al
      96:	08 05 21 00 09 02    	or     BYTE PTR [rip+0x2090021],al        # 20900bd <_end+0x208a0a5>
      9c:	d0 11                	rcl    BYTE PTR [rcx],1
      9e:	00 00                	add    BYTE PTR [rax],al
      a0:	00 00                	add    BYTE PTR [rax],al
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	19 06                	sbb    DWORD PTR [rsi],eax
      a6:	01 05 05 06 4c 04    	add    DWORD PTR [rip+0x44c0605],eax        # 44c06b1 <_end+0x44ba699>
      ac:	02 05 01 03 d7 03    	add    al,BYTE PTR [rip+0x3d70301]        # 3d703b3 <_end+0x3d6a39b>
      b2:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 10414bb <_end+0x103b4a3>
      b8:	05 21 06 03 a5       	add    eax,0xa5030621
      bd:	7c 01                	jl     c0 <__abi_tag-0x2bc>
      bf:	04 02                	add    al,0x2
      c1:	05 17 03 db 03       	add    eax,0x3db0317
      c6:	20 4a 04             	and    BYTE PTR [rdx+0x4],cl
      c9:	01 05 21 03 a5 7c    	add    DWORD PTR [rip+0x7ca50321],eax        # 7ca503f0 <_end+0x7ca4a3d8>
      cf:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
      d2:	05 17 03 db 03       	add    eax,0x3db0317
      d7:	3c 74                	cmp    al,0x74
      d9:	58                   	pop    rax
      da:	04 01                	add    al,0x1
      dc:	05 05 06 03 a8       	add    eax,0xa8030605
      e1:	7c 01                	jl     e4 <__abi_tag-0x298>
      e3:	15 14 05 0c 06       	adc    eax,0x60c0514
      e8:	01 05 01 08 67 3c    	add    DWORD PTR [rip+0x3c670801],eax        # 3c6708ef <_end+0x3c66a8d7>
      ee:	02 01                	add    al,BYTE PTR [rcx]
      f0:	00 01                	add    BYTE PTR [rcx],al
      f2:	01 58 08             	add    DWORD PTR [rax+0x8],ebx
      f5:	00 00                	add    BYTE PTR [rax],al
      f7:	05 00 08 00 bd       	add    eax,0xbd000800
      fc:	00 00                	add    BYTE PTR [rax],al
      fe:	00 01                	add    BYTE PTR [rcx],al
     100:	01 01                	add    DWORD PTR [rcx],eax
     102:	fb                   	sti
     103:	0e                   	(bad)
     104:	0d 00 01 01 01       	or     eax,0x1010100
     109:	01 00                	add    DWORD PTR [rax],eax
     10b:	00 00                	add    BYTE PTR [rax],al
     10d:	01 00                	add    DWORD PTR [rax],eax
     10f:	00 01                	add    BYTE PTR [rcx],al
     111:	01 01                	add    DWORD PTR [rcx],eax
     113:	1f                   	(bad)
     114:	09 00                	or     DWORD PTR [rax],eax
     116:	00 00                	add    BYTE PTR [rax],al
     118:	00 2f                	add    BYTE PTR [rdi],ch
     11a:	00 00                	add    BYTE PTR [rax],al
     11c:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     11f:	00 00                	add    BYTE PTR [rax],al
     121:	77 00                	ja     123 <__abi_tag-0x259>
     123:	00 00                	add    BYTE PTR [rax],al
     125:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     128:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     12e:	00 00                	add    BYTE PTR [rax],al
     130:	00 c7                	add    bh,al
     132:	00 00                	add    BYTE PTR [rax],al
     134:	00 dd                	add    ch,bl
     136:	00 00                	add    BYTE PTR [rax],al
     138:	00 02                	add    BYTE PTR [rdx],al
     13a:	01 1f                	add    DWORD PTR [rdi],ebx
     13c:	02 0f                	add    cl,BYTE PTR [rdi]
     13e:	19 93 01 00 00 01    	sbb    DWORD PTR [rbx+0x1000001],edx
     144:	93                   	xchg   ebx,eax
     145:	01 00                	add    DWORD PTR [rax],eax
     147:	00 01                	add    BYTE PTR [rcx],al
     149:	a0 01 00 00 02 a9 01 	movabs al,ds:0x1a902000001
     150:	00 00 
     152:	03 bc 01 00 00 03 c5 	add    edi,DWORD PTR [rcx+rax*1-0x3afd0000]
     159:	01 00                	add    DWORD PTR [rax],eax
     15b:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
     15e:	01 00                	add    DWORD PTR [rax],eax
     160:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
     163:	01 00                	add    DWORD PTR [rax],eax
     165:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     168:	01 00                	add    DWORD PTR [rax],eax
     16a:	00 02                	add    BYTE PTR [rdx],al
     16c:	19 01                	sbb    DWORD PTR [rcx],eax
     16e:	00 00                	add    BYTE PTR [rax],al
     170:	03 21                	add    esp,DWORD PTR [rcx]
     172:	01 00                	add    DWORD PTR [rax],eax
     174:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 2a3 <__abi_tag-0xd9>
     17a:	06                   	(bad)
     17b:	33 01                	xor    eax,DWORD PTR [rcx]
     17d:	00 00                	add    BYTE PTR [rax],al
     17f:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     182:	00 00                	add    BYTE PTR [rax],al
     184:	03 07                	add    eax,DWORD PTR [rdi]
     186:	01 00                	add    DWORD PTR [rax],eax
     188:	00 03                	add    BYTE PTR [rbx],al
     18a:	07                   	(bad)
     18b:	01 00                	add    DWORD PTR [rax],eax
     18d:	00 05 dd 01 00 00    	add    BYTE PTR [rip+0x1dd],al        # 370 <__abi_tag-0xc>
     193:	04 53                	add    al,0x53
     195:	01 00                	add    DWORD PTR [rax],eax
     197:	00 03                	add    BYTE PTR [rbx],al
     199:	e9 01 00 00 02       	jmp    200019f <_end+0x1ffa187>
     19e:	f2 01 00             	repnz add DWORD PTR [rax],eax
     1a1:	00 07                	add    BYTE PTR [rdi],al
     1a3:	62 01 00 00 07       	(bad)
     1a8:	fd                   	std
     1a9:	01 00                	add    DWORD PTR [rax],eax
     1ab:	00 07                	add    BYTE PTR [rdi],al
     1ad:	04 02                	add    al,0x2
     1af:	00 00                	add    BYTE PTR [rax],al
     1b1:	03 12                	add    edx,DWORD PTR [rdx]
     1b3:	02 00                	add    al,BYTE PTR [rax]
     1b5:	00 02                	add    BYTE PTR [rdx],al
     1b7:	75 01                	jne    1ba <__abi_tag-0x1c2>
     1b9:	00 00                	add    BYTE PTR [rax],al
     1bb:	08 05 37 00 09 02    	or     BYTE PTR [rip+0x2090037],al        # 20901f8 <_end+0x208a1e0>
     1c1:	00 13                	add    BYTE PTR [rbx],dl
     1c3:	00 00                	add    BYTE PTR [rax],al
     1c5:	00 00                	add    BYTE PTR [rax],al
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	03 13                	add    edx,DWORD PTR [rbx]
     1cb:	01 06                	add    DWORD PTR [rsi],eax
     1cd:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b07d8 <_end+0x54aa7c0>
     1d3:	37                   	(bad)
     1d4:	06                   	(bad)
     1d5:	11 08                	adc    DWORD PTR [rax],ecx
     1d7:	4a 05 05 4b 05 2f    	rex.WX add rax,0x2f054b05
     1dd:	bc 2e 05 05 06       	mov    esp,0x605052e
     1e2:	3c 05                	cmp    al,0x5
     1e4:	2f                   	(bad)
     1e5:	06                   	(bad)
     1e6:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
     1e9:	52                   	push   rdx
     1ea:	83 05 32 3c 05 2f 81 	add    DWORD PTR [rip+0x2f053c32],0xffffff81        # 2f053e23 <_end+0x2f04de0b>
     1f1:	05 05 06 3d 05       	add    eax,0x53d0605
     1f6:	32 06                	xor    al,BYTE PTR [rsi]
     1f8:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
     1fb:	05 06 3d 13 14       	add    eax,0x14133d06
     200:	05 1c 00 02 04       	add    eax,0x402001c
     205:	01 93 05 13 06 3c    	add    DWORD PTR [rbx+0x3c061305],edx
     20b:	05 1c 00 02 04       	add    eax,0x402001c
     210:	01 3c 00             	add    DWORD PTR [rax+rax*1],edi
     213:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     216:	08 74 04 02          	or     BYTE PTR [rsp+rax*1+0x2],dh
     21a:	05 1b 03 cc 01       	add    eax,0x1cc031b
     21f:	3c c8                	cmp    al,0xc8
     221:	04 01                	add    al,0x1
     223:	05 09 06 03 b5       	add    eax,0xb5030609
     228:	7e 01                	jle    22b <__abi_tag-0x151>
     22a:	14 04                	adc    al,0x4
     22c:	02 05 01 03 c7 01    	add    al,BYTE PTR [rip+0x1c70301]        # 1c70533 <_end+0x1c6a51b>
     232:	01 05 03 14 05 1b    	add    DWORD PTR [rip+0x1b051403],eax        # 1b05163b <_end+0x1b04b623>
     238:	06                   	(bad)
     239:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
     23c:	01 05 09 06 03 b8    	add    DWORD PTR [rip+0xffffffffb8030609],eax        # ffffffffb803084b <_end+0xffffffffb802a833>
     242:	7e 01                	jle    245 <__abi_tag-0x137>
     244:	05 23 06 40 05       	add    eax,0x5400623
     249:	0d 38 05 09 06       	or     eax,0x6090538
     24e:	4c 05 23 06 14 05    	rex.WR add rax,0x5140623
     254:	10 4a 05             	adc    BYTE PTR [rdx+0x5],cl
     257:	17                   	(bad)
     258:	56                   	push   rsi
     259:	04 03                	add    al,0x3
     25b:	05 22 00 02 04       	add    eax,0x4020022
     260:	01 03                	add    DWORD PTR [rbx],eax
     262:	3a 3c 04             	cmp    bh,BYTE PTR [rsp+rax*1]
     265:	01 05 17 03 46 82    	add    DWORD PTR [rip+0xffffffff82460317],eax        # ffffffff82460582 <_end+0xffffffff8245a56a>
     26b:	05 09 06 3e 04       	add    eax,0x43e0609
     270:	03 05 22 00 02 04    	add    eax,DWORD PTR [rip+0x4020022]        # 4020298 <_end+0x401a280>
     276:	01 06                	add    DWORD PTR [rsi],eax
     278:	03 38                	add    edi,DWORD PTR [rax]
     27a:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     27d:	05 10 03 48 3c       	add    eax,0x3c480310
     282:	04 03                	add    al,0x3
     284:	05 22 00 02 04       	add    eax,0x4020022
     289:	01 03                	add    DWORD PTR [rbx],eax
     28b:	38 4a 04             	cmp    BYTE PTR [rdx+0x4],cl
     28e:	01 05 10 03 48 4a    	add    DWORD PTR [rip+0x4a480310],eax        # 4a4805a4 <_end+0x4a47a58c>
     294:	04 03                	add    al,0x3
     296:	05 01 06 03 35       	add    eax,0x35030601
     29b:	3c 05                	cmp    al,0x5
     29d:	03 15 05 22 00 02    	add    edx,DWORD PTR [rip+0x2002205]        # 20024a8 <_end+0x1ffc490>
     2a3:	04 01                	add    al,0x1
     2a5:	06                   	(bad)
     2a6:	01 00                	add    DWORD PTR [rax],eax
     2a8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2ab:	f2 04 01             	repnz add al,0x1
     2ae:	05 09 06 03 49       	add    eax,0x49030609
     2b3:	01 05 26 06 01 04    	add    DWORD PTR [rip+0x4010626],eax        # 40108df <_end+0x400a8c7>
     2b9:	03 05 01 06 03 11    	add    eax,DWORD PTR [rip+0x11030601]        # 110308c0 <_end+0x1102a8a8>
     2bf:	08 2e                	or     BYTE PTR [rsi],ch
     2c1:	05 03 14 04 01       	add    eax,0x1041403
     2c6:	05 0f 06 03 6d       	add    eax,0x6d03060f
     2cb:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
     2ce:	05 21 00 02 04       	add    eax,0x4020021
     2d3:	01 03                	add    DWORD PTR [rbx],eax
     2d5:	13 58 04             	adc    ebx,DWORD PTR [rax+0x4]
     2d8:	01 05 0f 03 6d 9e    	add    DWORD PTR [rip+0xffffffff9e6d030f],eax        # ffffffff9e6d05ed <_end+0xffffffff9e6ca5d5>
     2de:	04 03                	add    al,0x3
     2e0:	05 21 00 02 04       	add    eax,0x4020021
     2e5:	01 03                	add    DWORD PTR [rbx],eax
     2e7:	13 3c 04             	adc    edi,DWORD PTR [rsp+rax*1]
     2ea:	01 05 26 03 6d 58    	add    DWORD PTR [rip+0x586d0326],eax        # 586d0616 <_end+0x586ca5fe>
     2f0:	04 03                	add    al,0x3
     2f2:	05 21 00 02 04       	add    eax,0x4020021
     2f7:	01 03                	add    DWORD PTR [rbx],eax
     2f9:	13 3c 00             	adc    edi,DWORD PTR [rax+rax*1]
     2fc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2ff:	58                   	pop    rax
     300:	04 01                	add    al,0x1
     302:	05 0d 06 03 74       	add    eax,0x7403060d
     307:	01 04 04             	add    DWORD PTR [rsp+rax*1],eax
     30a:	05 01 03 25 01       	add    eax,0x1250301
     30f:	05 03 14 05 17       	add    eax,0x17051403
     314:	06                   	(bad)
     315:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     318:	05 05 00 02 04       	add    eax,0x4020005
     31d:	02 03                	add    al,BYTE PTR [rbx]
     31f:	49 08 12             	rex.WB or BYTE PTR [r10],dl
     322:	04 04                	add    al,0x4
     324:	05 17 03 37 4a       	add    eax,0x4a370317
     329:	58                   	pop    rax
     32a:	04 01                	add    al,0x1
     32c:	05 0d 06 03 5a       	add    eax,0x5a03060d
     331:	01 04 04             	add    DWORD PTR [rsp+rax*1],eax
     334:	05 01 03 24 01       	add    eax,0x1240301
     339:	05 03 14 05 17       	add    eax,0x17051403
     33e:	06                   	(bad)
     33f:	01 08                	add    DWORD PTR [rax],ecx
     341:	ba 04 01 05 0d       	mov    edx,0xd050104
     346:	06                   	(bad)
     347:	03 5d 01             	add    ebx,DWORD PTR [rbp+0x1]
     34a:	04 05                	add    al,0x5
     34c:	05 01 03 ec 06       	add    eax,0x6ec0301
     351:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 106175a <_end+0x105b742>
     357:	04 01                	add    al,0x1
     359:	05 09 06 03 95       	add    eax,0x95030609
     35e:	79 01                	jns    361 <__abi_tag-0x1b>
     360:	05 24 00 02 04       	add    eax,0x4020024
     365:	01 06                	add    DWORD PTR [rsi],eax
     367:	0f 05                	syscall
     369:	20 a1 05 05 00 02    	and    BYTE PTR [rcx+0x2000505],ah
     36f:	04 02                	add    al,0x2
     371:	06                   	(bad)
     372:	03 69 4a             	add    ebp,DWORD PTR [rcx+0x4a]
     375:	05 1c 00 02 04       	add    eax,0x402001c
     37a:	01 01                	add    DWORD PTR [rcx],eax
     37c:	05 24 00 02 04       	add    eax,0x4020024
     381:	01 06                	add    DWORD PTR [rsi],eax
     383:	03 14 4a             	add    edx,DWORD PTR [rdx+rcx*2]
     386:	05 1c 00 02 04       	add    eax,0x402001c
     38b:	01 03                	add    DWORD PTR [rbx],eax
     38d:	6c                   	ins    BYTE PTR es:[rdi],dx
     38e:	66 00 02             	data16 add BYTE PTR [rdx],al
     391:	04 01                	add    al,0x1
     393:	08 4a 00             	or     BYTE PTR [rdx+0x0],cl
     396:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     399:	3c 05                	cmp    al,0x5
     39b:	09 06                	or     DWORD PTR [rsi],eax
     39d:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
     3a0:	05 0d 06 01 05       	add    eax,0x501060d
     3a5:	05 06 86 05 01       	add    eax,0x1058606
     3aa:	06                   	(bad)
     3ab:	13 4a 66             	adc    ecx,DWORD PTR [rdx+0x66]
     3ae:	74 05                	je     3b5 <__abi_tag+0x39>
     3b0:	05 00 02 04 01       	add    eax,0x1040200
     3b5:	03 55 20             	add    edx,DWORD PTR [rbp+0x20]
     3b8:	00 02                	add    BYTE PTR [rdx],al
     3ba:	04 01                	add    al,0x1
     3bc:	08 2e                	or     BYTE PTR [rsi],ch
     3be:	00 02                	add    BYTE PTR [rdx],al
     3c0:	04 01                	add    al,0x1
     3c2:	74 00                	je     3c4 <__abi_tag+0x48>
     3c4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     3c7:	5f                   	pop    rdi
     3c8:	00 02                	add    BYTE PTR [rdx],al
     3ca:	04 01                	add    al,0x1
     3cc:	08 d6                	or     dh,dl
     3ce:	05 39 06 00 09       	add    eax,0x9000639
     3d3:	02 c0                	add    al,al
     3d5:	14 00                	adc    al,0x0
     3d7:	00 00                	add    BYTE PTR [rax],al
     3d9:	00 00                	add    BYTE PTR [rax],al
     3db:	00 03                	add    BYTE PTR [rbx],al
     3dd:	26 01 06             	es add DWORD PTR [rsi],eax
     3e0:	01 08                	add    DWORD PTR [rax],ecx
     3e2:	ba 05 05 06 f3       	mov    edx,0xf3060505
     3e7:	05 2e 06 15 05       	add    eax,0x515062e
     3ec:	05 06 4c 05 22       	add    eax,0x22054c06
     3f1:	06                   	(bad)
     3f2:	01 05 0d 53 05 2e    	add    DWORD PTR [rip+0x2e05530d],eax        # 2e055705 <_end+0x2e04f6ed>
     3f8:	77 05                	ja     3ff <__abi_tag+0x83>
     3fa:	22 4c 3c 05          	and    cl,BYTE PTR [rsp+rdi*1+0x5]
     3fe:	13 00                	adc    eax,DWORD PTR [rax]
     400:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     403:	58                   	pop    rax
     404:	05 05 06 4c 05       	add    eax,0x54c0605
     409:	1c 00                	sbb    al,0x0
     40b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     40e:	01 05 09 08 2f 05    	add    DWORD PTR [rip+0x52f0809],eax        # 52f0c1d <_end+0x52eac05>
     414:	24 06                	and    al,0x6
     416:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4020438 <_end+0x401a420>
     41c:	01 3b                	add    DWORD PTR [rbx],edi
     41e:	05 24 4b 05 05       	add    eax,0x5054b24
     423:	00 02                	add    BYTE PTR [rdx],al
     425:	04 03                	add    al,0x3
     427:	06                   	(bad)
     428:	08 73 05             	or     BYTE PTR [rbx+0x5],dh
     42b:	1c 00                	sbb    al,0x0
     42d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     430:	01 05 01 06 5d 08    	add    DWORD PTR [rip+0x85d0601],eax        # 85d0a37 <_end+0x85caa1f>
     436:	90                   	nop
     437:	66 05 3a 06          	add    ax,0x63a
     43b:	bc 06 01 05 05       	mov    esp,0x5050106
     440:	06                   	(bad)
     441:	9f                   	lahf
     442:	05 23 06 92 05       	add    eax,0x5920623
     447:	05 06 74 05 23       	add    eax,0x23057406
     44c:	06                   	(bad)
     44d:	01 05 0e 08 e5 05    	add    DWORD PTR [rip+0x5e5080e],eax        # 5e50c61 <_end+0x5e4ac49>
     453:	24 30                	and    al,0x30
     455:	05 23 63 05 05       	add    eax,0x5056323
     45a:	06                   	(bad)
     45b:	2f                   	(bad)
     45c:	05 0e 06 01 05       	add    eax,0x501060e
     461:	24 3e                	and    al,0x3e
     463:	05 0e f0 05 34       	add    eax,0x3405f00e
     468:	30 05 0e 48 05 05    	xor    BYTE PTR [rip+0x505480e],al        # 5054c7c <_end+0x504ec64>
     46e:	06                   	(bad)
     46f:	3e 05 24 06 01 3c    	ds add eax,0x3c010624
     475:	05 05 06 08 68       	add    eax,0x68080605
     47a:	05 09 91 05 36       	add    eax,0x36059109
     47f:	06                   	(bad)
     480:	01 3c 05 4a d6 05 4f 	add    DWORD PTR [rax*1+0x4f05d64a],edi
     487:	82                   	(bad)
     488:	05 1e 4a 05 05       	add    eax,0x5054a1e
     48d:	06                   	(bad)
     48e:	5a                   	pop    rdx
     48f:	05 01 06 13 74       	add    eax,0x74130601
     494:	20 05 05 00 02 04    	and    BYTE PTR [rip+0x4020005],al        # 402049f <_end+0x401a487>
     49a:	01 03                	add    DWORD PTR [rbx],eax
     49c:	75 20                	jne    4be <__abi_tag+0x142>
     49e:	00 02                	add    BYTE PTR [rdx],al
     4a0:	04 01                	add    al,0x1
     4a2:	08 90 05 3a 06 03    	or     BYTE PTR [rax+0x3063a05],dl
     4a8:	0d 82 06 01 05       	or     eax,0x5010682
     4ad:	05 06 9f 05 23       	add    eax,0x23059f06
     4b2:	06                   	(bad)
     4b3:	92                   	xchg   edx,eax
     4b4:	05 05 06 74 05       	add    eax,0x5740605
     4b9:	23 06                	and    eax,DWORD PTR [rsi]
     4bb:	01 05 0e 08 e5 05    	add    DWORD PTR [rip+0x5e5080e],eax        # 5e50ccf <_end+0x5e4acb7>
     4c1:	14 30                	adc    al,0x30
     4c3:	05 23 63 05 05       	add    eax,0x5056323
     4c8:	06                   	(bad)
     4c9:	2f                   	(bad)
     4ca:	05 0e 06 01 05       	add    eax,0x501060e
     4cf:	14 3e                	adc    al,0x3e
     4d1:	05 0e f0 05 24       	add    eax,0x2405f00e
     4d6:	30 05 0e 48 05 05    	xor    BYTE PTR [rip+0x505480e],al        # 5054cea <_end+0x504ecd2>
     4dc:	06                   	(bad)
     4dd:	3e 05 14 06 01 3c    	ds add eax,0x3c010614
     4e3:	05 05 00 02 04       	add    eax,0x4020005
     4e8:	01 08                	add    DWORD PTR [rax],ecx
     4ea:	66 06                	data16 (bad)
     4ec:	84 05 32 06 01 05    	test   BYTE PTR [rip+0x5010632],al        # 5010b24 <_end+0x500ab0c>
     4f2:	01 08                	add    DWORD PTR [rax],ecx
     4f4:	15 05 46 2b 05       	adc    eax,0x52b4605
     4f9:	4b 82                	rex.WXB (bad)
     4fb:	05 1a 4a 05 05       	add    eax,0x5054a1a
     500:	06                   	(bad)
     501:	5a                   	pop    rdx
     502:	05 01 06 13 58       	add    eax,0x58130601
     507:	20 05 37 00 02 04    	and    BYTE PTR [rip+0x4020037],al        # 4020544 <_end+0x401a52c>
     50d:	01 06                	add    DWORD PTR [rsi],eax
     50f:	45 05 47 00 02 04    	rex.RB add eax,0x4020047
     515:	01 06                	add    DWORD PTR [rsi],eax
     517:	01 05 01 41 58 05    	add    DWORD PTR [rip+0x5584101],eax        # 558461e <_end+0x557e606>
     51d:	05 00 02 04 01       	add    eax,0x1040200
     522:	03 76 4a             	add    esi,DWORD PTR [rsi+0x4a]
     525:	00 02                	add    BYTE PTR [rdx],al
     527:	04 01                	add    al,0x1
     529:	08 90 05 39 06 03    	or     BYTE PTR [rax+0x3063905],dl
     52f:	0c 9e                	or     al,0x9e
     531:	06                   	(bad)
     532:	01 05 05 06 d7 04    	add    DWORD PTR [rip+0x4d70605],eax        # 4d70b3d <_end+0x4d6ab25>
     538:	06                   	(bad)
     539:	05 21 06 03 de       	add    eax,0xde030621
     53e:	05 90 05 26 03       	add    eax,0x3260590
     543:	fe                   	(bad)
     544:	7c 58                	jl     59e <__abi_tag+0x222>
     546:	04 01                	add    al,0x1
     548:	05 09 06 03 b4       	add    eax,0xb4030609
     54d:	7d 82                	jge    4d1 <__abi_tag+0x155>
     54f:	13 05 0d 03 0b 01    	adc    eax,DWORD PTR [rip+0x10b030d]        # 10b0862 <_end+0x10aa84a>
     555:	04 05                	add    al,0x5
     557:	05 01 03 a5 03       	add    eax,0x3a50301
     55c:	01 05 03 14 05 01    	add    DWORD PTR [rip+0x1051403],eax        # 1051965 <_end+0x104b94d>
     562:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
     565:	05 03 14 06 01       	add    eax,0x1061403
     56a:	06                   	(bad)
     56b:	03 1d 01 04 06 05    	add    ebx,DWORD PTR [rip+0x5060401]        # 5060972 <_end+0x505a95a>
     571:	01 03                	add    DWORD PTR [rbx],eax
     573:	96                   	xchg   esi,eax
     574:	7f 01                	jg     577 <__abi_tag+0x1fb>
     576:	05 03 14 06 01       	add    eax,0x1061403
     57b:	04 01                	add    al,0x1
     57d:	05 0d 06 03 c1       	add    eax,0xc103060d
     582:	7d 01                	jge    585 <__abi_tag+0x209>
     584:	04 05                	add    al,0x5
     586:	05 01 03 a4 03       	add    eax,0x3a40301
     58b:	01 05 03 14 13 04    	add    DWORD PTR [rip+0x4131403],eax        # 4131994 <_end+0x412b97c>
     591:	06                   	(bad)
     592:	05 01 03 96 7f       	add    eax,0x7f960301
     597:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 10419a0 <_end+0x103b988>
     59d:	05 21 06 03 da       	add    eax,0xda030621
     5a2:	7d 01                	jge    5a5 <__abi_tag+0x229>
     5a4:	04 06                	add    al,0x6
     5a6:	03 a8 05 4a 05 26    	add    ebp,DWORD PTR [rax+0x26054a05]
     5ac:	03 fe                	add    edi,esi
     5ae:	7c 2e                	jl     5de <__abi_tag+0x262>
     5b0:	66 04 01             	data16 add al,0x1
     5b3:	05 0d 06 03 c2       	add    eax,0xc203060d
     5b8:	7d 01                	jge    5bb <__abi_tag+0x23f>
     5ba:	04 05                	add    al,0x5
     5bc:	05 01 03 a3 03       	add    eax,0x3a30301
     5c1:	01 05 03 14 05 01    	add    DWORD PTR [rip+0x1051403],eax        # 10519ca <_end+0x104b9b2>
     5c7:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
     5ca:	05 03 14 05 36       	add    eax,0x36051403
     5cf:	06                   	(bad)
     5d0:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
     5d3:	03 06                	add    eax,DWORD PTR [rsi]
     5d5:	03 1d 01 04 06 05    	add    ebx,DWORD PTR [rip+0x5060401]        # 50609dc <_end+0x505a9c4>
     5db:	01 03                	add    DWORD PTR [rbx],eax
     5dd:	96                   	xchg   esi,eax
     5de:	7f 01                	jg     5e1 <__abi_tag+0x265>
     5e0:	05 03 14 04 01       	add    eax,0x1041403
     5e5:	05 21 06 03 da       	add    eax,0xda030621
     5ea:	7d 01                	jge    5ed <__abi_tag+0x271>
     5ec:	04 06                	add    al,0x6
     5ee:	03 a8 05 66 90 05    	add    ebp,DWORD PTR [rax+0x5906605]
     5f4:	26 03 fe             	es add edi,esi
     5f7:	7c 01                	jl     5fa <__abi_tag+0x27e>
     5f9:	04 01                	add    al,0x1
     5fb:	05 21 03 da 7d       	add    eax,0x7dda0321
     600:	66 04 06             	data16 add al,0x6
     603:	05 26 03 a6 02       	add    eax,0x2a60326
     608:	90                   	nop
     609:	58                   	pop    rax
     60a:	04 01                	add    al,0x1
     60c:	05 0d 06 03 c3       	add    eax,0xc303060d
     611:	7d 01                	jge    614 <__abi_tag+0x298>
     613:	04 05                	add    al,0x5
     615:	05 01 03 a2 03       	add    eax,0x3a20301
     61a:	01 05 03 14 13 04    	add    DWORD PTR [rip+0x4131403],eax        # 4131a23 <_end+0x412ba0b>
     620:	06                   	(bad)
     621:	05 01 03 96 7f       	add    eax,0x7f960301
     626:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 1061a2f <_end+0x105ba17>
     62c:	04 01                	add    al,0x1
     62e:	05 09 06 03 c7       	add    eax,0xc7030609
     633:	7d 01                	jge    636 <__abi_tag+0x2ba>
     635:	04 06                	add    al,0x6
     637:	05 01 03 b9 05       	add    eax,0x5b90301
     63c:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 1061a45 <_end+0x105ba2d>
     642:	04 01                	add    al,0x1
     644:	05 09 06 03 c6       	add    eax,0xc6030609
     649:	7a 01                	jp     64c <__abi_tag+0x2d0>
     64b:	04 06                	add    al,0x6
     64d:	05 01 03 b8 05       	add    eax,0x5b80301
     652:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a5b <_end+0x2104ba43>
     658:	06                   	(bad)
     659:	01 66 04             	add    DWORD PTR [rsi+0x4],esp
     65c:	01 05 09 06 03 c7    	add    DWORD PTR [rip+0xffffffffc7030609],eax        # ffffffffc7030c6b <_end+0xffffffffc702ac53>
     662:	7a 01                	jp     665 <__abi_tag+0x2e9>
     664:	04 06                	add    al,0x6
     666:	05 01 03 b7 05       	add    eax,0x5b70301
     66b:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a74 <_end+0x2104ba5c>
     671:	06                   	(bad)
     672:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     675:	05 17 03 ca 7a       	add    eax,0x7aca0317
     67a:	2e 04 06             	cs add al,0x6
     67d:	05 21 03 b6 05       	add    eax,0x5b60321
     682:	3c 66                	cmp    al,0x66
     684:	04 01                	add    al,0x1
     686:	05 09 06 03 c8       	add    eax,0xc8030609
     68b:	7a 01                	jp     68e <__abi_tag+0x312>
     68d:	04 06                	add    al,0x6
     68f:	05 01 03 b6 05       	add    eax,0x5b60301
     694:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a9d <_end+0x2104ba85>
     69a:	06                   	(bad)
     69b:	01 66 04             	add    DWORD PTR [rsi+0x4],esp
     69e:	01 05 09 06 03 ca    	add    DWORD PTR [rip+0xffffffffca030609],eax        # ffffffffca030cad <_end+0xffffffffca02ac95>
     6a4:	7a 01                	jp     6a7 <__abi_tag+0x32b>
     6a6:	05 0d 1a 05 05       	add    eax,0x5051a0d
     6ab:	18 05 41 06 03 7a    	sbb    BYTE PTR [rip+0x7a030641],al        # 7a030cf2 <_end+0x7a02acda>
     6b1:	01 05 1f 03 78 3c    	add    DWORD PTR [rip+0x3c78031f],eax        # 3c7809d6 <_end+0x3c77a9be>
     6b7:	05 0f 2e 05 41       	add    eax,0x41052e0f
     6bc:	36 05 32 42 05 40    	ss add eax,0x40054232
     6c2:	2e 05 21 4a 08 20    	cs add eax,0x20084a21
     6c8:	05 05 06 84 05       	add    eax,0x5840605
     6cd:	01 06                	add    DWORD PTR [rsi],eax
     6cf:	5b                   	pop    rbx
     6d0:	05 05 00 02 04       	add    eax,0x4020005
     6d5:	01 03                	add    DWORD PTR [rbx],eax
     6d7:	45 58                	rex.RB pop r8
     6d9:	00 02                	add    BYTE PTR [rdx],al
     6db:	04 01                	add    al,0x1
     6dd:	08 90 00 02 04 01    	or     BYTE PTR [rax+0x1040200],dl
     6e3:	82                   	(bad)
     6e4:	05 26 06 00 09       	add    eax,0x9000626
     6e9:	02 f0                	add    dh,al
     6eb:	17                   	(bad)
     6ec:	00 00                	add    BYTE PTR [rax],al
     6ee:	00 00                	add    BYTE PTR [rax],al
     6f0:	00 00                	add    BYTE PTR [rax],al
     6f2:	03 3d 01 06 01 05    	add    edi,DWORD PTR [rip+0x5010601]        # 5010cf9 <_end+0x500ace1>
     6f8:	05 06 4b 5a 05       	add    eax,0x55a4b06
     6fd:	15 00 02 04 01       	adc    eax,0x1040200
     702:	06                   	(bad)
     703:	01 05 01 59 05 26    	add    DWORD PTR [rip+0x26055901],eax        # 2605600a <_end+0x2604fff2>
     709:	1c 05                	sbb    al,0x5
     70b:	05 00 02 04 01       	add    eax,0x1040200
     710:	21 00                	and    DWORD PTR [rax],eax
     712:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     715:	08 90 05 23 06 6b    	or     BYTE PTR [rax+0x6b062305],dl
     71b:	06                   	(bad)
     71c:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0d27 <_end+0x54aad0f>
     722:	23 06                	and    eax,DWORD PTR [rsi]
     724:	11 05 05 67 05 1c    	adc    DWORD PTR [rip+0x1c056705],eax        # 1c056e2f <_end+0x1c050e17>
     72a:	00 02                	add    BYTE PTR [rdx],al
     72c:	04 01                	add    al,0x1
     72e:	5a                   	pop    rdx
     72f:	00 02                	add    BYTE PTR [rdx],al
     731:	04 01                	add    al,0x1
     733:	06                   	(bad)
     734:	66 05 09 ad          	add    ax,0xad09
     738:	05 11 06 01 05       	add    eax,0x5010611
     73d:	1c 00                	sbb    al,0x0
     73f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     742:	81 05 11 4b 05 05 00 	add    DWORD PTR [rip+0x5054b11],0x3040200        # 505525d <_end+0x504f245>
     749:	02 04 03 
     74c:	06                   	(bad)
     74d:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 402076f <_end+0x401a757>
     753:	01 01                	add    DWORD PTR [rcx],eax
     755:	00 02                	add    BYTE PTR [rdx],al
     757:	04 01                	add    al,0x1
     759:	06                   	(bad)
     75a:	58                   	pop    rax
     75b:	05 05 06 16 05       	add    eax,0x5160605
     760:	09 06                	or     DWORD PTR [rsi],eax
     762:	01 05 01 4b 05 09    	add    DWORD PTR [rip+0x9054b01],eax        # 9055269 <_end+0x904f251>
     768:	65 05 06 06 03 79    	gs add eax,0x79030606
     76e:	58                   	pop    rax
     76f:	05 05 00 02 04       	add    eax,0x4020005
     774:	01 06                	add    DWORD PTR [rsi],eax
     776:	13 00                	adc    eax,DWORD PTR [rax]
     778:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     77b:	08 90 05 38 06 03    	or     BYTE PTR [rax+0x3063805],dl
     781:	13 c8                	adc    ecx,eax
     783:	06                   	(bad)
     784:	01 02                	add    DWORD PTR [rdx],eax
     786:	27                   	(bad)
     787:	12 05 05 06 08 59    	adc    al,BYTE PTR [rip+0x59080605]        # 59080d92 <_end+0x5907ad7a>
     78d:	05 26 06 92 05       	add    eax,0x5920626
     792:	2e 03 ff             	cs add edi,edi
     795:	7e 4a                	jle    7e1 <__abi_tag+0x465>
     797:	05 05 06 03 81       	add    eax,0x81030605
     79c:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
     79f:	09 03                	or     DWORD PTR [rbx],eax
     7a1:	fb                   	sti
     7a2:	7e 01                	jle    7a5 <__abi_tag+0x429>
     7a4:	05 05 13 05 22       	add    eax,0x22051305
     7a9:	06                   	(bad)
     7aa:	41 58                	pop    r8
     7ac:	05 2e 2c 05 05       	add    eax,0x5052c2e
     7b1:	06                   	(bad)
     7b2:	4c 05 22 06 01 2e    	rex.WR add rax,0x2e010622
     7b8:	3c 05                	cmp    al,0x5
     7ba:	13 00                	adc    eax,DWORD PTR [rax]
     7bc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7bf:	ba 05 05 06 3e       	mov    edx,0x3e060505
     7c4:	05 1c 00 02 04       	add    eax,0x402001c
     7c9:	01 01                	add    DWORD PTR [rcx],eax
     7cb:	05 22 06 10 05       	add    eax,0x5100622
     7d0:	1c 00                	sbb    al,0x0
     7d2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7d5:	3e 05 09 06 02 2b    	ds add eax,0x2b020609
     7db:	13 05 24 06 01 05    	adc    eax,DWORD PTR [rip+0x5010624]        # 5010e05 <_end+0x500aded>
     7e1:	1c 00                	sbb    al,0x0
     7e3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7e6:	73 05                	jae    7ed <__abi_tag+0x471>
     7e8:	24 4b                	and    al,0x4b
     7ea:	05 05 00 02 04       	add    eax,0x4020005
     7ef:	03 06                	add    eax,DWORD PTR [rsi]
     7f1:	08 c7                	or     bh,al
     7f3:	05 1c 00 02 04       	add    eax,0x402001c
     7f8:	01 01                	add    DWORD PTR [rcx],eax
     7fa:	00 02                	add    BYTE PTR [rdx],al
     7fc:	04 01                	add    al,0x1
     7fe:	06                   	(bad)
     7ff:	58                   	pop    rax
     800:	05 05 06 16 06       	add    eax,0x6160605
     805:	01 06                	add    DWORD PTR [rsi],eax
     807:	03 fa                	add    edi,edx
     809:	00 01                	add    BYTE PTR [rcx],al
     80b:	05 34 06 4a 05       	add    eax,0x54a0634
     810:	55                   	push   rbp
     811:	74 05                	je     818 <__abi_tag+0x49c>
     813:	1c 00                	sbb    al,0x0
     815:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     818:	5a                   	pop    rdx
     819:	05 36 aa 05 13       	add    eax,0x1305aa36
     81e:	03 6f 90             	add    ebp,DWORD PTR [rdi-0x70]
     821:	05 4a 03 11 4a       	add    eax,0x4a11034a
     826:	05 55 58 05 1d       	add    eax,0x1d055855
     82b:	3c 05                	cmp    al,0x5
     82d:	13 03                	adc    eax,DWORD PTR [rbx]
     82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     830:	74 05                	je     837 <__abi_tag+0x4bb>
     832:	34 03                	xor    al,0x3
     834:	11 3c 05 4a 4a 05 1d 	adc    DWORD PTR [rax*1+0x1d054a4a],edi
     83b:	4a 05 05 06 5a 05    	rex.WX add rax,0x55a0605
     841:	1c 00                	sbb    al,0x0
     843:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     846:	01 05 09 ad 05 33    	add    DWORD PTR [rip+0x3305ad09],eax        # 3305b555 <_end+0x3305553d>
     84c:	06                   	(bad)
     84d:	ac                   	lods   al,BYTE PTR ds:[rsi]
     84e:	05 12 ba 05 09       	add    eax,0x905ba12
     853:	06                   	(bad)
     854:	30 05 19 01 05 0d    	xor    BYTE PTR [rip+0xd050119],al        # d050973 <_end+0xd04a95b>
     85a:	75 05                	jne    861 <__abi_tag+0x4e5>
     85c:	44 06                	rex.R (bad)
     85e:	01 05 24 03 71 4a    	add    DWORD PTR [rip+0x4a710324],eax        # 4a710b88 <_end+0x4a70ab70>
     864:	05 44 03 0f 4a       	add    eax,0x4a0f0344
     869:	74 05                	je     870 <__abi_tag+0x4f4>
     86b:	14 3c                	adc    al,0x3c
     86d:	05 0d 06 59 05       	add    eax,0x559060d
     872:	36 06                	ss (bad)
     874:	03 70 58             	add    esi,DWORD PTR [rax+0x58]
     877:	05 0e 2c 4a 05       	add    eax,0x54a2c0e
     87c:	11 06                	adc    DWORD PTR [rsi],eax
     87e:	55                   	push   rbp
     87f:	05 05 13 14 14       	add    eax,0x14141305
     884:	05 36 06 01 2e       	add    eax,0x2e010636
     889:	05 24 82 05 34       	add    eax,0x34058224
     88e:	f2 05 24 4a 05 05    	repnz add eax,0x5054a24
     894:	06                   	(bad)
     895:	bc 06 01 05 0d       	mov    esp,0xd050106
     89a:	06                   	(bad)
     89b:	03 10                	add    edx,DWORD PTR [rax]
     89d:	01 05 22 06 01 05    	add    DWORD PTR [rip+0x5010622],eax        # 5010ec5 <_end+0x500aead>
     8a3:	19 46 05             	sbb    DWORD PTR [rsi+0x5],eax
     8a6:	2e 4e 05 22 4a 05 16 	cs rex.WRX add rax,0x16054a22
     8ad:	3c 4a                	cmp    al,0x4a
     8af:	05 19 06 0e 05       	add    eax,0x50e0619
     8b4:	27                   	(bad)
     8b5:	00 02                	add    BYTE PTR [rdx],al
     8b7:	04 01                	add    al,0x1
     8b9:	06                   	(bad)
     8ba:	47 05 05 00 02 04    	rex.RXB add eax,0x4020005
     8c0:	02 06                	add    al,BYTE PTR [rsi]
     8c2:	58                   	pop    rax
     8c3:	05 1c 00 02 04       	add    eax,0x402001c
     8c8:	01 01                	add    DWORD PTR [rcx],eax
     8ca:	00 02                	add    BYTE PTR [rdx],al
     8cc:	04 01                	add    al,0x1
     8ce:	06                   	(bad)
     8cf:	82                   	(bad)
     8d0:	00 02                	add    BYTE PTR [rdx],al
     8d2:	04 01                	add    al,0x1
     8d4:	74 00                	je     8d6 <__abi_tag+0x55a>
     8d6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     8d9:	82                   	(bad)
     8da:	00 02                	add    BYTE PTR [rdx],al
     8dc:	04 01                	add    al,0x1
     8de:	06                   	(bad)
     8df:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
     8e2:	00 02                	add    BYTE PTR [rdx],al
     8e4:	04 01                	add    al,0x1
     8e6:	06                   	(bad)
     8e7:	66 00 02             	data16 add BYTE PTR [rdx],al
     8ea:	04 01                	add    al,0x1
     8ec:	66 05 13 16          	add    ax,0x1613
     8f0:	05 09 06 47 05       	add    eax,0x5470609
     8f5:	11 06                	adc    DWORD PTR [rsi],eax
     8f7:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4020919 <_end+0x401a901>
     8fd:	01 49 05             	add    DWORD PTR [rcx+0x5],ecx
     900:	11 4b 05             	adc    DWORD PTR [rbx+0x5],ecx
     903:	05 00 02 04 03       	add    eax,0x3040200
     908:	06                   	(bad)
     909:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 402092b <_end+0x401a913>
     90f:	01 01                	add    DWORD PTR [rcx],eax
     911:	00 02                	add    BYTE PTR [rdx],al
     913:	04 01                	add    al,0x1
     915:	06                   	(bad)
     916:	ac                   	lods   al,BYTE PTR ds:[rsi]
     917:	05 05 06 16 05       	add    eax,0x5160605
     91c:	09 06                	or     DWORD PTR [rsi],eax
     91e:	01 05 05 06 03 20    	add    DWORD PTR [rip+0x20030605],eax        # 20030f29 <_end+0x2002af11>
     924:	58                   	pop    rax
     925:	05 01 06 13 08       	add    eax,0x8130601
     92a:	d6                   	(bad)
     92b:	74 4a                	je     977 <__abi_tag+0x5fb>
     92d:	05 05 00 02 04       	add    eax,0x4020005
     932:	01 03                	add    DWORD PTR [rbx],eax
     934:	6d                   	ins    DWORD PTR es:[rdi],dx
     935:	20 00                	and    BYTE PTR [rax],al
     937:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     93a:	ba 00 02 04 01       	mov    edx,0x1040200
     93f:	74 00                	je     941 <__abi_tag+0x5c5>
     941:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     944:	74 05                	je     94b <__abi_tag+0x5cf>
     946:	01 03                	add    DWORD PTR [rbx],eax
     948:	13 58 02             	adc    ebx,DWORD PTR [rax+0x2]
     94b:	05 00 01 01 43       	add    eax,0x43010100
     950:	05 00 00 05 00       	add    eax,0x50000
     955:	08 00                	or     BYTE PTR [rax],al
     957:	95                   	xchg   ebp,eax
     958:	00 00                	add    BYTE PTR [rax],al
     95a:	00 01                	add    BYTE PTR [rcx],al
     95c:	01 01                	add    DWORD PTR [rcx],eax
     95e:	fb                   	sti
     95f:	0e                   	(bad)
     960:	0d 00 01 01 01       	or     eax,0x1010100
     965:	01 00                	add    DWORD PTR [rax],eax
     967:	00 00                	add    BYTE PTR [rax],al
     969:	01 00                	add    DWORD PTR [rax],eax
     96b:	00 01                	add    BYTE PTR [rcx],al
     96d:	01 01                	add    DWORD PTR [rcx],eax
     96f:	1f                   	(bad)
     970:	09 00                	or     DWORD PTR [rax],eax
     972:	00 00                	add    BYTE PTR [rax],al
     974:	00 2f                	add    BYTE PTR [rdi],ch
     976:	00 00                	add    BYTE PTR [rax],al
     978:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
     97b:	00 00                	add    BYTE PTR [rax],al
     97d:	77 00                	ja     97f <__abi_tag+0x603>
     97f:	00 00                	add    BYTE PTR [rax],al
     981:	41 00 00             	add    BYTE PTR [r8],al
     984:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     98a:	00 00                	add    BYTE PTR [rax],al
     98c:	00 c7                	add    bh,al
     98e:	00 00                	add    BYTE PTR [rax],al
     990:	00 dd                	add    ch,bl
     992:	00 00                	add    BYTE PTR [rax],al
     994:	00 02                	add    BYTE PTR [rdx],al
     996:	01 1f                	add    DWORD PTR [rdi],ebx
     998:	02 0f                	add    cl,BYTE PTR [rdi]
     99a:	11 2d 02 00 00 01    	adc    DWORD PTR [rip+0x1000002],ebp        # 10009a2 <_end+0xffa98a>
     9a0:	2d 02 00 00 01       	sub    eax,0x1000002
     9a5:	c5 01 00             	(bad)
     9a8:	00 02                	add    BYTE PTR [rdx],al
     9aa:	d1 01                	rol    DWORD PTR [rcx],1
     9ac:	00 00                	add    BYTE PTR [rax],al
     9ae:	02 19                	add    bl,BYTE PTR [rcx]
     9b0:	01 00                	add    DWORD PTR [rax],eax
     9b2:	00 03                	add    BYTE PTR [rbx],al
     9b4:	53                   	push   rbx
     9b5:	01 00                	add    DWORD PTR [rax],eax
     9b7:	00 03                	add    BYTE PTR [rbx],al
     9b9:	10 01                	adc    BYTE PTR [rcx],al
     9bb:	00 00                	add    BYTE PTR [rax],al
     9bd:	02 07                	add    al,BYTE PTR [rdi]
     9bf:	01 00                	add    DWORD PTR [rax],eax
     9c1:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
     9c4:	01 00                	add    DWORD PTR [rax],eax
     9c6:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # af5 <__abi_tag+0x779>
     9cc:	06                   	(bad)
     9cd:	33 01                	xor    eax,DWORD PTR [rcx]
     9cf:	00 00                	add    BYTE PTR [rax],al
     9d1:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     9d4:	00 00                	add    BYTE PTR [rax],al
     9d6:	03 07                	add    eax,DWORD PTR [rdi]
     9d8:	01 00                	add    DWORD PTR [rax],eax
     9da:	00 03                	add    BYTE PTR [rbx],al
     9dc:	07                   	(bad)
     9dd:	01 00                	add    DWORD PTR [rax],eax
     9df:	00 05 dd 01 00 00    	add    BYTE PTR [rip+0x1dd],al        # bc2 <__abi_tag+0x846>
     9e5:	02 f2                	add    dh,dl
     9e7:	01 00                	add    DWORD PTR [rax],eax
     9e9:	00 07                	add    BYTE PTR [rdi],al
     9eb:	75 01                	jne    9ee <__abi_tag+0x672>
     9ed:	00 00                	add    BYTE PTR [rax],al
     9ef:	08 05 2a 00 09 02    	or     BYTE PTR [rip+0x209002a],al        # 2090a1f <_end+0x208aa07>
     9f5:	e0 1a                	loopne a11 <__abi_tag+0x695>
     9f7:	00 00                	add    BYTE PTR [rax],al
     9f9:	00 00                	add    BYTE PTR [rax],al
     9fb:	00 00                	add    BYTE PTR [rax],al
     9fd:	03 0a                	add    ecx,DWORD PTR [rdx]
     9ff:	01 05 05 4b 03 10    	add    DWORD PTR [rip+0x10034b05],eax        # 1003550a <_end+0x1002f4f2>
     a05:	01 05 01 06 13 05    	add    DWORD PTR [rip+0x5130601],eax        # 513100c <_end+0x512aff4>
     a0b:	0a 06                	or     al,BYTE PTR [rsi]
     a0d:	bc 05 34 03 13       	mov    esp,0x13033405
     a12:	f2 05 05 4b 13 05    	repnz add eax,0x5134b05
     a18:	09 03                	or     DWORD PTR [rbx],eax
     a1a:	0b 01                	or     eax,DWORD PTR [rcx]
     a1c:	04 02                	add    al,0x2
     a1e:	05 01 03 ef 03       	add    eax,0x3ef0301
     a23:	01 05 03 14 05 01    	add    DWORD PTR [rip+0x1051403],eax        # 1051e2c <_end+0x104be14>
     a29:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
     a2c:	05 03 14 05 36       	add    eax,0x36051403
     a31:	06                   	(bad)
     a32:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
     a35:	03 06                	add    eax,DWORD PTR [rsi]
     a37:	03 1d 01 04 03 05    	add    ebx,DWORD PTR [rip+0x5030401]        # 5030e3e <_end+0x502ae26>
     a3d:	01 03                	add    DWORD PTR [rbx],eax
     a3f:	96                   	xchg   esi,eax
     a40:	7f 01                	jg     a43 <__abi_tag+0x6c7>
     a42:	05 03 14 05 21       	add    eax,0x21051403
     a47:	06                   	(bad)
     a48:	03 82 03 01 04 02    	add    eax,DWORD PTR [rdx+0x2040103]
     a4e:	05 36 03 c9 7d       	add    eax,0x7dc90336
     a53:	58                   	pop    rax
     a54:	04 03                	add    al,0x3
     a56:	05 21 03 b7 02       	add    eax,0x2b70321
     a5b:	66 05 26 03          	add    ax,0x326
     a5f:	fe                   	(bad)
     a60:	7c 2e                	jl     a90 <__abi_tag+0x714>
     a62:	58                   	pop    rax
     a63:	04 01                	add    al,0x1
     a65:	05 09 06 03 f7       	add    eax,0xf7030609
     a6a:	7c 01                	jl     a6d <__abi_tag+0x6f1>
     a6c:	04 02                	add    al,0x2
     a6e:	05 01 03 ee 03       	add    eax,0x3ee0301
     a73:	01 05 03 14 13 04    	add    DWORD PTR [rip+0x4131403],eax        # 4131e7c <_end+0x412be64>
     a79:	03 05 01 03 96 7f    	add    eax,DWORD PTR [rip+0x7f960301]        # 7f960d80 <_end+0x7f95ad68>
     a7f:	01 05 03 14 05 26    	add    DWORD PTR [rip+0x26051403],eax        # 26051e88 <_end+0x2604be70>
     a85:	06                   	(bad)
     a86:	01 66 04             	add    DWORD PTR [rsi+0x4],esp
     a89:	01 05 09 06 03 f8    	add    DWORD PTR [rip+0xfffffffff8030609],eax        # fffffffff8031098 <_end+0xfffffffff802b080>
     a8f:	7c 01                	jl     a92 <__abi_tag+0x716>
     a91:	04 02                	add    al,0x2
     a93:	05 01 03 ed 03       	add    eax,0x3ed0301
     a98:	01 05 03 14 05 01    	add    DWORD PTR [rip+0x1051403],eax        # 1051ea1 <_end+0x104be89>
     a9e:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
     aa1:	05 03 14 05 36       	add    eax,0x36051403
     aa6:	06                   	(bad)
     aa7:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
     aaa:	03 06                	add    eax,DWORD PTR [rsi]
     aac:	03 1d 01 04 03 05    	add    ebx,DWORD PTR [rip+0x5030401]        # 5030eb3 <_end+0x502ae9b>
     ab2:	01 03                	add    DWORD PTR [rbx],eax
     ab4:	96                   	xchg   esi,eax
     ab5:	7f 01                	jg     ab8 <__abi_tag+0x73c>
     ab7:	05 03 14 05 21       	add    eax,0x21051403
     abc:	06                   	(bad)
     abd:	03 82 03 01 82 05    	add    eax,DWORD PTR [rdx+0x5820103]
     ac3:	26 03 fe             	es add edi,esi
     ac6:	7c 01                	jl     ac9 <__abi_tag+0x74d>
     ac8:	58                   	pop    rax
     ac9:	04 01                	add    al,0x1
     acb:	05 09 06 03 f9       	add    eax,0xf9030609
     ad0:	7c 01                	jl     ad3 <__abi_tag+0x757>
     ad2:	04 02                	add    al,0x2
     ad4:	05 01 03 ec 03       	add    eax,0x3ec0301
     ad9:	01 05 03 14 13 04    	add    DWORD PTR [rip+0x4131403],eax        # 4131ee2 <_end+0x412beca>
     adf:	03 05 01 03 96 7f    	add    eax,DWORD PTR [rip+0x7f960301]        # 7f960de6 <_end+0x7f95adce>
     ae5:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051eee <_end+0x2104bed6>
     aeb:	06                   	(bad)
     aec:	03 82 03 01 82 05    	add    eax,DWORD PTR [rdx+0x5820103]
     af2:	26 03 fe             	es add edi,esi
     af5:	7c 01                	jl     af8 <__abi_tag+0x77c>
     af7:	66 04 01             	data16 add al,0x1
     afa:	05 05 06 03 fd       	add    eax,0xfd030605
     aff:	7c 01                	jl     b02 <__abi_tag+0x786>
     b01:	04 03                	add    al,0x3
     b03:	05 01 03 83 06       	add    eax,0x6830301
     b08:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 1061f11 <_end+0x105bef9>
     b0e:	04 01                	add    al,0x1
     b10:	05 05 06 03 fc       	add    eax,0xfc030605
     b15:	79 01                	jns    b18 <__abi_tag+0x79c>
     b17:	04 03                	add    al,0x3
     b19:	05 01 03 82 06       	add    eax,0x6820301
     b1e:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 1061f27 <_end+0x105bf0f>
     b24:	04 01                	add    al,0x1
     b26:	05 05 06 03 fd       	add    eax,0xfd030605
     b2b:	79 01                	jns    b2e <__abi_tag+0x7b2>
     b2d:	04 03                	add    al,0x3
     b2f:	05 01 03 81 06       	add    eax,0x6810301
     b34:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041f3d <_end+0x103bf25>
     b3a:	05 13 06 03 80       	add    eax,0x80030613
     b3f:	7a 01                	jp     b42 <__abi_tag+0x7c6>
     b41:	04 03                	add    al,0x3
     b43:	05 21 03 80 06       	add    eax,0x6800321
     b48:	2e 66 04 01          	cs data16 add al,0x1
     b4c:	05 05 06 03 fe       	add    eax,0xfe030605
     b51:	79 01                	jns    b54 <__abi_tag+0x7d8>
     b53:	04 03                	add    al,0x3
     b55:	05 01 03 80 06       	add    eax,0x6800301
     b5a:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051f63 <_end+0x2104bf4b>
     b60:	06                   	(bad)
     b61:	01 66 04             	add    DWORD PTR [rsi+0x4],esp
     b64:	01 05 05 06 03 80    	add    DWORD PTR [rip+0xffffffff80030605],eax        # ffffffff8003116f <_end+0xffffffff8002b157>
     b6a:	7a 01                	jp     b6d <__abi_tag+0x7f1>
     b6c:	14 05                	adc    al,0x5
     b6e:	1b 06                	sbb    eax,DWORD PTR [rsi]
     b70:	10 05 0b 2e 05 01    	adc    BYTE PTR [rip+0x1052e0b],al        # 1053981 <_end+0x104d969>
     b76:	5b                   	pop    rbx
     b77:	05 0a 06 84 03       	add    eax,0x384060a
     b7c:	34 f2                	xor    al,0xf2
     b7e:	05 2c 03 1b f2       	add    eax,0xf21b032c
     b83:	05 05 4b 13 13       	add    eax,0x13134b05
     b88:	14 05                	adc    al,0x5
     b8a:	17                   	(bad)
     b8b:	00 02                	add    BYTE PTR [rdx],al
     b8d:	04 01                	add    al,0x1
     b8f:	01 05 20 00 02 04    	add    DWORD PTR [rip+0x4020020],eax        # 4020bb5 <_end+0x401ab9d>
     b95:	01 06                	add    DWORD PTR [rsi],eax
     b97:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020bb4 <_end+0x401ab9c>
     b9d:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     ba0:	09 06                	or     DWORD PTR [rsi],eax
     ba2:	84 05 10 06 01 05    	test   BYTE PTR [rip+0x5010610],al        # 50111b8 <_end+0x500b1a0>
     ba8:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     bab:	24 65                	and    al,0x65
     bad:	05 10 9e 05 24       	add    eax,0x24059e10
     bb2:	4a 05 0b 08 f3 05    	rex.WX add rax,0x5f3080b
     bb8:	24 2d                	and    al,0x2d
     bba:	05 0b 3c 05 09       	add    eax,0x9053c0b
     bbf:	06                   	(bad)
     bc0:	3d 05 0b 06 01       	cmp    eax,0x1060b05
     bc5:	3c 05                	cmp    al,0x5
     bc7:	05 00 02 04 03       	add    eax,0x3040200
     bcc:	06                   	(bad)
     bcd:	08 1d 05 17 00 02    	or     BYTE PTR [rip+0x2001705],bl        # 20022d8 <_end+0x1ffc2c0>
     bd3:	04 01                	add    al,0x1
     bd5:	01 05 09 92 05 10    	add    DWORD PTR [rip+0x10059209],eax        # 10059de4 <_end+0x10053dcc>
     bdb:	06                   	(bad)
     bdc:	01 05 24 58 05 10    	add    DWORD PTR [rip+0x10055824],eax        # 10056406 <_end+0x100503ee>
     be2:	08 f3                	or     bl,dh
     be4:	05 24 2d 05 0b       	add    eax,0xb052d24
     be9:	3c 05                	cmp    al,0x5
     beb:	09 06                	or     DWORD PTR [rsi],eax
     bed:	3d 05 10 06 01       	cmp    eax,0x1061005
     bf2:	05 0b 58 d6 05       	add    eax,0x5d6580b
     bf7:	05 00 02 04 03       	add    eax,0x3040200
     bfc:	06                   	(bad)
     bfd:	47 05 17 00 02 04    	rex.RXB add eax,0x4020017
     c03:	01 01                	add    DWORD PTR [rcx],eax
     c05:	05 09 92 05 10       	add    eax,0x10059209
     c0a:	06                   	(bad)
     c0b:	01 05 24 74 3c 05    	add    DWORD PTR [rip+0x53c7424],eax        # 53c8035 <_end+0x53c201d>
     c11:	10 08                	adc    BYTE PTR [rax],cl
     c13:	c9                   	leave
     c14:	05 24 2d 05 0b       	add    eax,0xb052d24
     c19:	3c 05                	cmp    al,0x5
     c1b:	09 06                	or     DWORD PTR [rsi],eax
     c1d:	3d 05 10 06 01       	cmp    eax,0x1061005
     c22:	05 0b 58 d6 05       	add    eax,0x5d6580b
     c27:	05 00 02 04 03       	add    eax,0x3040200
     c2c:	06                   	(bad)
     c2d:	47 05 17 00 02 04    	rex.RXB add eax,0x4020017
     c33:	01 01                	add    DWORD PTR [rcx],eax
     c35:	05 09 92 05 10       	add    eax,0x10059209
     c3a:	06                   	(bad)
     c3b:	01 05 24 74 3c 05    	add    DWORD PTR [rip+0x53c7424],eax        # 53c8065 <_end+0x53c204d>
     c41:	10 08                	adc    BYTE PTR [rax],cl
     c43:	c9                   	leave
     c44:	05 24 2d 05 0b       	add    eax,0xb052d24
     c49:	3c 05                	cmp    al,0x5
     c4b:	09 06                	or     DWORD PTR [rsi],eax
     c4d:	3d 05 10 06 01       	cmp    eax,0x1061005
     c52:	05 0b 58 d6 05       	add    eax,0x5d6580b
     c57:	05 00 02 04 03       	add    eax,0x3040200
     c5c:	06                   	(bad)
     c5d:	47 05 17 00 02 04    	rex.RXB add eax,0x4020017
     c63:	01 01                	add    DWORD PTR [rcx],eax
     c65:	05 09 92 05 10       	add    eax,0x10059209
     c6a:	06                   	(bad)
     c6b:	01 05 24 74 3c 05    	add    DWORD PTR [rip+0x53c7424],eax        # 53c8095 <_end+0x53c207d>
     c71:	10 08                	adc    BYTE PTR [rax],cl
     c73:	d7                   	xlat   BYTE PTR ds:[rbx]
     c74:	05 0b 2d 05 09       	add    eax,0x9052d0b
     c79:	06                   	(bad)
     c7a:	3d 05 10 06 01       	cmp    eax,0x1061005
     c7f:	05 0b 3c 05 05       	add    eax,0x5053c0b
     c84:	00 02                	add    BYTE PTR [rdx],al
     c86:	04 03                	add    al,0x3
     c88:	06                   	(bad)
     c89:	08 1d 05 17 00 02    	or     BYTE PTR [rip+0x2001705],bl        # 2002394 <_end+0x1ffc37c>
     c8f:	04 01                	add    al,0x1
     c91:	01 05 09 a0 05 10    	add    DWORD PTR [rip+0x1005a009],eax        # 1005aca0 <_end+0x10054c88>
     c97:	06                   	(bad)
     c98:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020cb5 <_end+0x401ac9d>
     c9e:	01 56 05             	add    DWORD PTR [rsi+0x5],edx
     ca1:	24 4c                	and    al,0x4c
     ca3:	05 10 02 24 13       	add    eax,0x13240210
     ca8:	05 0b 2d 05 09       	add    eax,0x9052d0b
     cad:	06                   	(bad)
     cae:	3d 05 10 06 01       	cmp    eax,0x1061005
     cb3:	05 0b 3c 05 05       	add    eax,0x5053c0b
     cb8:	00 02                	add    BYTE PTR [rdx],al
     cba:	04 03                	add    al,0x3
     cbc:	06                   	(bad)
     cbd:	08 1d 05 17 00 02    	or     BYTE PTR [rip+0x2001705],bl        # 20023c8 <_end+0x1ffc3b0>
     cc3:	04 01                	add    al,0x1
     cc5:	01 00                	add    DWORD PTR [rax],eax
     cc7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     cca:	06                   	(bad)
     ccb:	4a 05 0f 18 05 18    	rex.WX add rax,0x1805180f
     cd1:	58                   	pop    rax
     cd2:	05 17 00 02 04       	add    eax,0x4020017
     cd7:	01 03                	add    DWORD PTR [rbx],eax
     cd9:	7a 58                	jp     d33 <__abi_tag+0x9b7>
     cdb:	05 05 06 5e 05       	add    eax,0x55e0605
     ce0:	01 06                	add    DWORD PTR [rsi],eax
     ce2:	13 05 28 06 ae 05    	adc    eax,DWORD PTR [rip+0x5ae0628]        # 5ae1310 <_end+0x5adb2f8>
     ce8:	05 4b 13 13 05       	add    eax,0x513134b
     ced:	17                   	(bad)
     cee:	00 02                	add    BYTE PTR [rdx],al
     cf0:	04 01                	add    al,0x1
     cf2:	01 05 20 00 02 04    	add    DWORD PTR [rip+0x4020020],eax        # 4020d18 <_end+0x401ad00>
     cf8:	01 06                	add    DWORD PTR [rsi],eax
     cfa:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020d17 <_end+0x401acff>
     d00:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     d03:	09 06                	or     DWORD PTR [rsi],eax
     d05:	83 05 1c 06 01 05 09 	add    DWORD PTR [rip+0x501061c],0x9        # 5011328 <_end+0x500b310>
     d0c:	06                   	(bad)
     d0d:	5a                   	pop    rdx
     d0e:	05 12 06 01 05       	add    eax,0x5010612
     d13:	2c 00                	sub    al,0x0
     d15:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     d18:	82                   	(bad)
     d19:	05 11 92 05 2c       	add    eax,0x2c059211
     d1e:	00 02                	add    BYTE PTR [rdx],al
     d20:	04 01                	add    al,0x1
     d22:	2c 05                	sub    al,0x5
     d24:	09 06                	or     DWORD PTR [rsi],eax
     d26:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     d2c:	05 00 02 04 02       	add    eax,0x2040200
     d31:	06                   	(bad)
     d32:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020d4f <_end+0x401ad37>
     d38:	01 01                	add    DWORD PTR [rcx],eax
     d3a:	05 09 91 05 0e       	add    eax,0xe059109
     d3f:	06                   	(bad)
     d40:	01 05 16 4a 05 0e    	add    DWORD PTR [rip+0xe054a16],eax        # e05575c <_end+0xe04f744>
     d46:	3c 05                	cmp    al,0x5
     d48:	09 06                	or     DWORD PTR [rsi],eax
     d4a:	30 05 12 06 01 05    	xor    BYTE PTR [rip+0x5010612],al        # 5011362 <_end+0x500b34a>
     d50:	2c 00                	sub    al,0x0
     d52:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     d55:	82                   	(bad)
     d56:	05 11 92 05 2c       	add    eax,0x2c059211
     d5b:	00 02                	add    BYTE PTR [rdx],al
     d5d:	04 01                	add    al,0x1
     d5f:	2c 05                	sub    al,0x5
     d61:	09 06                	or     DWORD PTR [rsi],eax
     d63:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     d69:	05 00 02 04 02       	add    eax,0x2040200
     d6e:	06                   	(bad)
     d6f:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020d8c <_end+0x401ad74>
     d75:	01 01                	add    DWORD PTR [rcx],eax
     d77:	05 09 91 05 0e       	add    eax,0xe059109
     d7c:	06                   	(bad)
     d7d:	01 05 16 4a 05 0e    	add    DWORD PTR [rip+0xe054a16],eax        # e055799 <_end+0xe04f781>
     d83:	3c 05                	cmp    al,0x5
     d85:	09 06                	or     DWORD PTR [rsi],eax
     d87:	30 05 12 06 01 05    	xor    BYTE PTR [rip+0x5010612],al        # 501139f <_end+0x500b387>
     d8d:	2c 00                	sub    al,0x0
     d8f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     d92:	82                   	(bad)
     d93:	05 11 92 05 2c       	add    eax,0x2c059211
     d98:	00 02                	add    BYTE PTR [rdx],al
     d9a:	04 01                	add    al,0x1
     d9c:	2c 05                	sub    al,0x5
     d9e:	09 06                	or     DWORD PTR [rsi],eax
     da0:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     da6:	05 00 02 04 02       	add    eax,0x2040200
     dab:	06                   	(bad)
     dac:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020dc9 <_end+0x401adb1>
     db2:	01 01                	add    DWORD PTR [rcx],eax
     db4:	05 09 59 05 0e       	add    eax,0xe055909
     db9:	06                   	(bad)
     dba:	01 05 16 4a 05 0e    	add    DWORD PTR [rip+0xe054a16],eax        # e0557d6 <_end+0xe04f7be>
     dc0:	3c 05                	cmp    al,0x5
     dc2:	09 06                	or     DWORD PTR [rsi],eax
     dc4:	30 05 12 06 01 05    	xor    BYTE PTR [rip+0x5010612],al        # 50113dc <_end+0x500b3c4>
     dca:	2c 00                	sub    al,0x0
     dcc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     dcf:	82                   	(bad)
     dd0:	05 11 92 05 2c       	add    eax,0x2c059211
     dd5:	00 02                	add    BYTE PTR [rdx],al
     dd7:	04 01                	add    al,0x1
     dd9:	2c 05                	sub    al,0x5
     ddb:	09 06                	or     DWORD PTR [rsi],eax
     ddd:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     de3:	05 00 02 04 02       	add    eax,0x2040200
     de8:	06                   	(bad)
     de9:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020e06 <_end+0x401adee>
     def:	01 01                	add    DWORD PTR [rcx],eax
     df1:	05 09 59 05 0e       	add    eax,0xe055909
     df6:	06                   	(bad)
     df7:	01 05 16 4a 05 0e    	add    DWORD PTR [rip+0xe054a16],eax        # e055813 <_end+0xe04f7fb>
     dfd:	3c 05                	cmp    al,0x5
     dff:	09 06                	or     DWORD PTR [rsi],eax
     e01:	30 05 12 06 01 05    	xor    BYTE PTR [rip+0x5010612],al        # 5011419 <_end+0x500b401>
     e07:	2c 00                	sub    al,0x0
     e09:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e0c:	82                   	(bad)
     e0d:	05 11 92 05 2c       	add    eax,0x2c059211
     e12:	00 02                	add    BYTE PTR [rdx],al
     e14:	04 01                	add    al,0x1
     e16:	2c 05                	sub    al,0x5
     e18:	09 06                	or     DWORD PTR [rsi],eax
     e1a:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     e20:	05 00 02 04 02       	add    eax,0x2040200
     e25:	06                   	(bad)
     e26:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020e43 <_end+0x401ae2b>
     e2c:	01 01                	add    DWORD PTR [rcx],eax
     e2e:	00 02                	add    BYTE PTR [rdx],al
     e30:	04 01                	add    al,0x1
     e32:	06                   	(bad)
     e33:	58                   	pop    rax
     e34:	05 09 06 59 05       	add    eax,0x5590609
     e39:	16                   	(bad)
     e3a:	06                   	(bad)
     e3b:	01 05 0e 3c 05 09    	add    DWORD PTR [rip+0x9053c0e],eax        # 9054a4f <_end+0x904ea37>
     e41:	06                   	(bad)
     e42:	4c 06                	rex.WR (bad)
     e44:	01 82 05 27 00 02    	add    DWORD PTR [rdx+0x2002705],eax
     e4a:	04 01                	add    al,0x1
     e4c:	06                   	(bad)
     e4d:	2e 05 34 00 02 04    	cs add eax,0x4020034
     e53:	01 06                	add    DWORD PTR [rsi],eax
     e55:	01 05 11 30 05 34    	add    DWORD PTR [rip+0x34053011],eax        # 34053e6c <_end+0x3404de54>
     e5b:	00 02                	add    BYTE PTR [rdx],al
     e5d:	04 01                	add    al,0x1
     e5f:	2c 05                	sub    al,0x5
     e61:	2c 00                	sub    al,0x0
     e63:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e66:	3c 05                	cmp    al,0x5
     e68:	09 06                	or     DWORD PTR [rsi],eax
     e6a:	30 05 0e 06 01 05    	xor    BYTE PTR [rip+0x501060e],al        # 501147e <_end+0x500b466>
     e70:	05 00 02 04 02       	add    eax,0x2040200
     e75:	06                   	(bad)
     e76:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020e93 <_end+0x401ae7b>
     e7c:	01 01                	add    DWORD PTR [rcx],eax
     e7e:	00 02                	add    BYTE PTR [rdx],al
     e80:	04 01                	add    al,0x1
     e82:	06                   	(bad)
     e83:	4a 05 0e 4f 2e 05    	rex.WX add rax,0x52e4f0e
     e89:	01 15 05 0e 39 05    	add    DWORD PTR [rip+0x5390e05],edx        # 5391c94 <_end+0x538bc7c>
     e8f:	01 31                	add    DWORD PTR [rcx],esi
     e91:	02 03                	add    al,BYTE PTR [rbx]
     e93:	00 01                	add    BYTE PTR [rcx],al
     e95:	01 b0 04 00 00 05    	add    DWORD PTR [rax+0x5000004],esi
     e9b:	00 08                	add    BYTE PTR [rax],cl
     e9d:	00 9f 00 00 00 01    	add    BYTE PTR [rdi+0x1000000],bl
     ea3:	01 01                	add    DWORD PTR [rcx],eax
     ea5:	fb                   	sti
     ea6:	0e                   	(bad)
     ea7:	0d 00 01 01 01       	or     eax,0x1010100
     eac:	01 00                	add    DWORD PTR [rax],eax
     eae:	00 00                	add    BYTE PTR [rax],al
     eb0:	01 00                	add    DWORD PTR [rax],eax
     eb2:	00 01                	add    BYTE PTR [rcx],al
     eb4:	01 01                	add    DWORD PTR [rcx],eax
     eb6:	1f                   	(bad)
     eb7:	09 00                	or     DWORD PTR [rax],eax
     eb9:	00 00                	add    BYTE PTR [rax],al
     ebb:	00 2f                	add    BYTE PTR [rdi],ch
     ebd:	00 00                	add    BYTE PTR [rax],al
     ebf:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
     ec2:	00 00                	add    BYTE PTR [rax],al
     ec4:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     ec7:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     eca:	00 00                	add    BYTE PTR [rax],al
     ecc:	9a                   	(bad)
     ecd:	00 00                	add    BYTE PTR [rax],al
     ecf:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
     ed5:	00 00                	add    BYTE PTR [rax],al
     ed7:	00 dd                	add    ch,bl
     ed9:	00 00                	add    BYTE PTR [rax],al
     edb:	00 02                	add    BYTE PTR [rdx],al
     edd:	01 1f                	add    DWORD PTR [rdi],ebx
     edf:	02 0f                	add    cl,BYTE PTR [rdi]
     ee1:	13 4e 02             	adc    ecx,DWORD PTR [rsi+0x2]
     ee4:	00 00                	add    BYTE PTR [rax],al
     ee6:	01 4e 02             	add    DWORD PTR [rsi+0x2],ecx
     ee9:	00 00                	add    BYTE PTR [rax],al
     eeb:	01 a9 01 00 00 02    	add    DWORD PTR [rcx+0x2000001],ebp
     ef1:	10 01                	adc    BYTE PTR [rcx],al
     ef3:	00 00                	add    BYTE PTR [rax],al
     ef5:	03 07                	add    eax,DWORD PTR [rdi]
     ef7:	01 00                	add    DWORD PTR [rax],eax
     ef9:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
     efc:	01 00                	add    DWORD PTR [rax],eax
     efe:	00 02                	add    BYTE PTR [rdx],al
     f00:	21 01                	and    DWORD PTR [rcx],eax
     f02:	00 00                	add    BYTE PTR [rax],al
     f04:	05 29 01 00 00       	add    eax,0x129
     f09:	06                   	(bad)
     f0a:	33 01                	xor    eax,DWORD PTR [rcx]
     f0c:	00 00                	add    BYTE PTR [rax],al
     f0e:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
     f11:	00 00                	add    BYTE PTR [rax],al
     f13:	02 07                	add    al,BYTE PTR [rdi]
     f15:	01 00                	add    DWORD PTR [rax],eax
     f17:	00 02                	add    BYTE PTR [rdx],al
     f19:	07                   	(bad)
     f1a:	01 00                	add    DWORD PTR [rax],eax
     f1c:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 1075 <__assert_fail@plt+0x5>
     f22:	02 c5                	add    al,ch
     f24:	01 00                	add    DWORD PTR [rax],eax
     f26:	00 03                	add    BYTE PTR [rbx],al
     f28:	f2 01 00             	repnz add DWORD PTR [rax],eax
     f2b:	00 07                	add    BYTE PTR [rdi],al
     f2d:	62 01 00 00 07       	(bad)
     f32:	fd                   	std
     f33:	01 00                	add    DWORD PTR [rax],eax
     f35:	00 07                	add    BYTE PTR [rdi],al
     f37:	12 02                	adc    al,BYTE PTR [rdx]
     f39:	00 00                	add    BYTE PTR [rax],al
     f3b:	04 75                	add    al,0x75
     f3d:	01 00                	add    DWORD PTR [rax],eax
     f3f:	00 08                	add    BYTE PTR [rax],cl
     f41:	05 05 00 09 02       	add    eax,0x2090005
     f46:	a0 1e 00 00 00 00 00 	movabs al,ds:0x30000000000001e
     f4d:	00 03 
     f4f:	d5 00 01 00          	{rex2 0x0} add DWORD PTR [rax],eax
     f53:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     f56:	06                   	(bad)
     f57:	2f                   	(bad)
     f58:	08 8f 00 02 04 01    	or     BYTE PTR [rdi+0x1040200],cl
     f5e:	4b 05 10 06 03 b6    	rex.WXB add rax,0xffffffffb6030610
     f64:	7f f2                	jg     f58 <__abi_tag+0xbdc>
     f66:	06                   	(bad)
     f67:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b1572 <_end+0x134ab55a>
     f6d:	05 10 06 10 05       	add    eax,0x5100610
     f72:	28 22                	sub    BYTE PTR [rdx],ah
     f74:	05 10 56 05 28       	add    eax,0x28055610
     f79:	3e 58                	ds pop rax
     f7b:	05 25 5f 05 13       	add    eax,0x13055f25
     f80:	72 05                	jb     f87 <__abi_tag+0xc0b>
     f82:	0a 03                	or     al,BYTE PTR [rbx]
     f84:	7a 9e                	jp     f24 <__abi_tag+0xba8>
     f86:	05 15 00 02 04       	add    eax,0x4020015
     f8b:	01 83 05 05 06 3d    	add    DWORD PTR [rbx+0x3d060505],eax
     f91:	13 05 25 06 17 05    	adc    eax,DWORD PTR [rip+0x5170625]        # 51715bc <_end+0x516b5a4>
     f97:	21 03                	and    DWORD PTR [rbx],eax
     f99:	7a ac                	jp     f47 <__abi_tag+0xbcb>
     f9b:	05 05 06 76 14       	add    eax,0x14760605
     fa0:	13 05 1c 00 02 04    	adc    eax,DWORD PTR [rip+0x402001c]        # 4020fc2 <_end+0x401afaa>
     fa6:	01 01                	add    DWORD PTR [rcx],eax
     fa8:	05 09 13 13 05       	add    eax,0x5131309
     fad:	05 00 02 04 03       	add    eax,0x3040200
     fb2:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4020fd4 <_end+0x401afbc>
     fb8:	01 01                	add    DWORD PTR [rcx],eax
     fba:	05 09 13 13 05       	add    eax,0x5131309
     fbf:	25 06 11 05 05       	and    eax,0x5051106
     fc4:	00 02                	add    BYTE PTR [rdx],al
     fc6:	04 03                	add    al,0x3
     fc8:	06                   	(bad)
     fc9:	73 05                	jae    fd0 <__abi_tag+0xc54>
     fcb:	1c 00                	sbb    al,0x0
     fcd:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     fd0:	01 05 09 13 13 05    	add    DWORD PTR [rip+0x5131309],eax        # 51322df <_end+0x512c2c7>
     fd6:	25 06 11 05 13       	and    eax,0x13051106
     fdb:	72 05                	jb     fe2 <__abi_tag+0xc66>
     fdd:	25 4c 05 05 00       	and    eax,0x5054c
     fe2:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
     fe5:	06                   	(bad)
     fe6:	73 05                	jae    fed <__abi_tag+0xc71>
     fe8:	1c 00                	sbb    al,0x0
     fea:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     fed:	01 05 05 17 05 01    	add    DWORD PTR [rip+0x1051705],eax        # 10526f8 <_end+0x104c6e0>
     ff3:	06                   	(bad)
     ff4:	13 4a 05             	adc    ecx,DWORD PTR [rdx+0x5]
     ff7:	2a 06                	sub    al,BYTE PTR [rsi]
     ff9:	d8 06                	fadd   DWORD PTR [rsi]
     ffb:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1606 <_end+0x54ab5ee>
    1001:	2a 06                	sub    al,BYTE PTR [rsi]
    1003:	11 05 05 4b 06 bc    	adc    DWORD PTR [rip+0xffffffffbc064b05],eax        # ffffffffbc065b0e <_end+0xffffffffbc05faf6>
    1009:	05 1a 06 03 39       	add    eax,0x3903061a
    100e:	01 3c 66             	add    DWORD PTR [rsi+riz*2],edi
    1011:	05 05 06 0f 13       	add    eax,0x130f0605
    1016:	14 05                	adc    al,0x5
    1018:	0e                   	(bad)
    1019:	06                   	(bad)
    101a:	01 05 05 06 30 05    	add    DWORD PTR [rip+0x5300605],eax        # 5301625 <_end+0x52fb60d>
    1020:	10 01                	adc    BYTE PTR [rcx],al
    1022:	05 09 08 15 05       	add    eax,0x5150809
    1027:	0d 06 01 05 10       	or     eax,0x10050106
    102c:	06                   	(bad)
    102d:	2b 05 09 83 05 36    	sub    eax,DWORD PTR [rip+0x36058309]        # 3605933c <_end+0x36053324>
    1033:	06                   	(bad)
    1034:	01 05 0c 06 03 16    	add    DWORD PTR [rip+0x1603060c],eax        # 16031646 <_end+0x1602b62e>
    103a:	ba 05 05 14 14       	mov    edx,0x14140505
    103f:	03 0b                	add    ecx,DWORD PTR [rbx]
    1041:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    1044:	01 05 09 00 02 04    	add    DWORD PTR [rip+0x4020009],eax        # 4021053 <_end+0x401b03b>
    104a:	01 03                	add    DWORD PTR [rbx],eax
    104c:	5b                   	pop    rbx
    104d:	01 05 44 00 02 04    	add    DWORD PTR [rip+0x4020044],eax        # 4021097 <_end+0x401b07f>
    1053:	01 06                	add    DWORD PTR [rsi],eax
    1055:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1058:	04 01                	add    al,0x1
    105a:	06                   	(bad)
    105b:	01 05 05 06 03 46    	add    DWORD PTR [rip+0x46030605],eax        # 46031666 <_end+0x4602b64e>
    1061:	01 05 22 06 03 11    	add    DWORD PTR [rip+0x11030622],eax        # 11031689 <_end+0x1102b671>
    1067:	01 05 0f 3e 05 05    	add    DWORD PTR [rip+0x5053e0f],eax        # 5054e7c <_end+0x504ee64>
    106d:	06                   	(bad)
    106e:	3a 05 22 06 01 05    	cmp    al,BYTE PTR [rip+0x5010622]        # 5011696 <_end+0x500b67e>
    1074:	05 06 68 05 2b       	add    eax,0x2b056806
    1079:	00 02                	add    BYTE PTR [rdx],al
    107b:	04 01                	add    al,0x1
    107d:	90                   	nop
    107e:	05 0d 03 2f 01       	add    eax,0x12f030d
    1083:	05 05 13 05 15       	add    eax,0x15051305
    1088:	06                   	(bad)
    1089:	01 05 05 06 59 05    	add    DWORD PTR [rip+0x5590605],eax        # 5591694 <_end+0x558b67c>
    108f:	2a 06                	sub    al,BYTE PTR [rsi]
    1091:	01 05 48 08 2f 04    	add    DWORD PTR [rip+0x42f0848],eax        # 42f18df <_end+0x42eb8c7>
    1097:	02 05 21 00 02 04    	add    al,BYTE PTR [rip+0x4020021]        # 40210be <_end+0x401b0a6>
    109d:	01 03                	add    DWORD PTR [rbx],eax
    109f:	54                   	push   rsp
    10a0:	3c 04                	cmp    al,0x4
    10a2:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 40210be <_end+0x401b0a6>
    10a8:	01 03                	add    DWORD PTR [rbx],eax
    10aa:	2b 3c 05 05 06 4b 05 	sub    edi,DWORD PTR [rax*1+0x54b0605]
    10b1:	48 06                	rex.W (bad)
    10b3:	01 05 0b 2e 04 02    	add    DWORD PTR [rip+0x2042e0b],eax        # 2043ec4 <_end+0x203deac>
    10b9:	05 01 06 03 52       	add    eax,0x52030601
    10be:	82                   	(bad)
    10bf:	05 03 14 05 21       	add    eax,0x21051403
    10c4:	00 02                	add    BYTE PTR [rdx],al
    10c6:	04 01                	add    al,0x1
    10c8:	06                   	(bad)
    10c9:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    10cc:	05 1d 03 2c 3c       	add    eax,0x3c2c031d
    10d1:	04 02                	add    al,0x2
    10d3:	05 21 00 02 04       	add    eax,0x4020021
    10d8:	01 03                	add    DWORD PTR [rbx],eax
    10da:	54                   	push   rsp
    10db:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    10de:	04 01                	add    al,0x1
    10e0:	d6                   	(bad)
    10e1:	04 01                	add    al,0x1
    10e3:	05 05 06 03 2d       	add    eax,0x2d030605
    10e8:	01 05 13 06 01 05    	add    DWORD PTR [rip+0x5010613],eax        # 5011701 <_end+0x500b6e9>
    10ee:	29 00                	sub    DWORD PTR [rax],eax
    10f0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    10f3:	06                   	(bad)
    10f4:	3c 05                	cmp    al,0x5
    10f6:	31 00                	xor    DWORD PTR [rax],eax
    10f8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    10fb:	06                   	(bad)
    10fc:	01 05 29 00 02 04    	add    DWORD PTR [rip+0x4020029],eax        # 402112b <_end+0x401b113>
    1102:	01 3c 05 0f 9f 05 09 	add    DWORD PTR [rax*1+0x9059f0f],edi
    1109:	06                   	(bad)
    110a:	08 82 05 2a 06 2e    	or     BYTE PTR [rdx+0x2e062a05],al
    1110:	05 29 00 02 04       	add    eax,0x4020029
    1115:	01 3b                	add    DWORD PTR [rbx],edi
    1117:	05 26 4b 05 09       	add    eax,0x9054b26
    111c:	06                   	(bad)
    111d:	3d 05 26 06 01       	cmp    eax,0x1062605
    1122:	05 05 00 02 04       	add    eax,0x4020005
    1127:	03 06                	add    eax,DWORD PTR [rsi]
    1129:	3a 05 29 00 02 04    	cmp    al,BYTE PTR [rip+0x4020029]        # 4021158 <_end+0x401b140>
    112f:	01 01                	add    DWORD PTR [rcx],eax
    1131:	05 22 06 03 4f       	add    eax,0x4f030622
    1136:	4a 05 05 06 4a 05    	rex.WX add rax,0x54a0605
    113c:	01 06                	add    DWORD PTR [rsi],eax
    113e:	13 2e                	adc    ebp,DWORD PTR [rsi]
    1140:	05 05 06 03 6a       	add    eax,0x6a030605
    1145:	74 05                	je     114c <read@plt+0xc>
    1147:	09 13                	or     DWORD PTR [rbx],edx
    1149:	05 18 06 01 05       	add    eax,0x5010618
    114e:	12 41 05             	adc    al,BYTE PTR [rcx+0x5]
    1151:	27                   	(bad)
    1152:	3a 05 2e b8 05 18    	cmp    al,BYTE PTR [rip+0x1805b82e]        # 1805c986 <_end+0x1805696e>
    1158:	49 05 09 06 3d 05    	rex.WB add rax,0x53d0609
    115e:	2e 06                	cs (bad)
    1160:	01 05 30 82 05 18    	add    DWORD PTR [rip+0x18058230],eax        # 18059396 <_end+0x1805337e>
    1166:	2e 05 09 06 3e 05    	cs add eax,0x53e0609
    116c:	28 06                	sub    BYTE PTR [rsi],al
    116e:	17                   	(bad)
    116f:	05 31 3f 05 27       	add    eax,0x27053f31
    1174:	03 79 82             	add    edi,DWORD PTR [rcx-0x7e]
    1177:	05 28 77 05 27       	add    eax,0x27057728
    117c:	62 05 09 06 9f       	(bad)
    1181:	13 14 13             	adc    edx,DWORD PTR [rbx+rdx*1]
    1184:	14 05                	adc    al,0x5
    1186:	31 06                	xor    DWORD PTR [rsi],eax
    1188:	01 05 09 06 3d 05    	add    DWORD PTR [rip+0x53d0609],eax        # 53d1797 <_end+0x53cb77f>
    118e:	31 06                	xor    DWORD PTR [rsi],eax
    1190:	01 05 09 06 3e 06    	add    DWORD PTR [rip+0x63e0609],eax        # 63e179f <_end+0x63db787>
    1196:	58                   	pop    rax
    1197:	05 05 06 15 05       	add    eax,0x5150605
    119c:	1e                   	(bad)
    119d:	06                   	(bad)
    119e:	0f 05                	syscall
    11a0:	22 4d 05             	and    cl,BYTE PTR [rbp+0x5]
    11a3:	05 06 3e 06 90       	add    eax,0x90063e06
    11a8:	06                   	(bad)
    11a9:	3e 05 01 06 13 4a    	ds add eax,0x4a130601
    11af:	05 22 3b 4a 05       	add    eax,0x54a3b22
    11b4:	05 00 02 04 01       	add    eax,0x1040200
    11b9:	03 67 66             	add    esp,DWORD PTR [rdi+0x66]
    11bc:	00 02                	add    BYTE PTR [rdx],al
    11be:	04 01                	add    al,0x1
    11c0:	08 90 05 29 06 03    	or     BYTE PTR [rax+0x3062905],dl
    11c6:	1c e4                	sbb    al,0xe4
    11c8:	06                   	(bad)
    11c9:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b17d4 <_end+0x54ab7bc>
    11cf:	29 06                	sub    DWORD PTR [rsi],eax
    11d1:	11 05 05 4b 06 bc    	adc    DWORD PTR [rip+0xffffffffbc064b05],eax        # ffffffffbc065cdc <_end+0xffffffffbc05fcc4>
    11d7:	05 1a 06 03 1c       	add    eax,0x1c03061a
    11dc:	01 3c 66             	add    DWORD PTR [rsi+riz*2],edi
    11df:	05 05 06 0f 13       	add    eax,0x130f0605
    11e4:	14 05                	adc    al,0x5
    11e6:	0e                   	(bad)
    11e7:	06                   	(bad)
    11e8:	01 05 09 06 af 05    	add    DWORD PTR [rip+0x5af0609],eax        # 5af17f7 <_end+0x5aeb7df>
    11ee:	33 06                	xor    eax,DWORD PTR [rsi]
    11f0:	01 05 36 2e 05 0c    	add    DWORD PTR [rip+0xc052e36],eax        # c05402c <_end+0xc04e014>
    11f6:	06                   	(bad)
    11f7:	03 16                	add    edx,DWORD PTR [rsi]
    11f9:	ac                   	lods   al,BYTE PTR ds:[rsi]
    11fa:	05 05 14 14 03       	add    eax,0x3141405
    11ff:	0b 08                	or     ecx,DWORD PTR [rax]
    1201:	66 06                	data16 (bad)
    1203:	01 05 0e 03 47 2e    	add    DWORD PTR [rip+0x2e47030e],eax        # 2e471517 <_end+0x2e46b4ff>
    1209:	05 09 00 02 04       	add    eax,0x4020009
    120e:	01 03                	add    DWORD PTR [rbx],eax
    1210:	14 2e                	adc    al,0x2e
    1212:	05 05 06 49 05       	add    eax,0x5490605
    1217:	10 01                	adc    BYTE PTR [rcx],al
    1219:	06                   	(bad)
    121a:	4a 05 05 06 03 64    	rex.WX add rax,0x64030605
    1220:	01 05 1a 00 02 04    	add    DWORD PTR [rip+0x402001a],eax        # 4021240 <_end+0x401b228>
    1226:	01 06                	add    DWORD PTR [rsi],eax
    1228:	01 05 01 03 15 58    	add    DWORD PTR [rip+0x58150301],eax        # 5815152f <_end+0x5814b517>
    122e:	05 44 00 02 04       	add    eax,0x4020044
    1233:	01 06                	add    DWORD PTR [rsi],eax
    1235:	b4 00                	mov    ah,0x0
    1237:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    123a:	06                   	(bad)
    123b:	01 05 05 06 03 63    	add    DWORD PTR [rip+0x63030605],eax        # 63031846 <_end+0x6302b82e>
    1241:	01 14 05 0e 06 18 05 	add    DWORD PTR [rax*1+0x518060e],edx
    1248:	24 43                	and    al,0x43
    124a:	05 25 03 73 66       	add    eax,0x66730325
    124f:	05 05 06 7a 05       	add    eax,0x57a0605
    1254:	0e                   	(bad)
    1255:	06                   	(bad)
    1256:	01 05 05 06 3d 14    	add    DWORD PTR [rip+0x143d0605],eax        # 143d1861 <_end+0x143cb849>
    125c:	05 29 06 01 05       	add    eax,0x5010629
    1261:	24 4e                	and    al,0x4e
    1263:	05 29 62 05 05       	add    eax,0x5056229
    1268:	06                   	(bad)
    1269:	75 05                	jne    1270 <register_tm_clones>
    126b:	29 06                	sub    DWORD PTR [rsi],eax
    126d:	01 05 05 06 ca 13    	add    DWORD PTR [rip+0x13ca0605],eax        # 13ca1878 <_end+0x13c9b860>
    1273:	05 24 06 01 05       	add    eax,0x5010624
    1278:	05 06 4b 05 1a       	add    eax,0x1a054b06
    127d:	06                   	(bad)
    127e:	14 05                	adc    al,0x5
    1280:	14 56                	adc    al,0x56
    1282:	05 05 06 4c 14       	add    eax,0x144c0605
    1287:	05 01 06 3d 05       	add    eax,0x53d0601
    128c:	05 00 02 04 01       	add    eax,0x1040200
    1291:	03 67 58             	add    esp,DWORD PTR [rdi+0x58]
    1294:	00 02                	add    BYTE PTR [rdx],al
    1296:	04 01                	add    al,0x1
    1298:	08 90 05 2b 06 03    	or     BYTE PTR [rax+0x3062b05],dl
    129e:	1b 82 06 01 05 05    	sbb    eax,DWORD PTR [rdx+0x5050106]
    12a4:	06                   	(bad)
    12a5:	4b 05 2b 06 11 05    	rex.WXB add rax,0x511062b
    12ab:	05 4b 06 5a 05       	add    eax,0x55a064b
    12b0:	1a 06                	sbb    al,BYTE PTR [rsi]
    12b2:	01 05 0e 3c 05 05    	add    DWORD PTR [rip+0x5053c0e],eax        # 5054ec6 <_end+0x504eeae>
    12b8:	06                   	(bad)
    12b9:	30 05 10 01 05 16    	xor    BYTE PTR [rip+0x16050110],al        # 160513cf <_end+0x1604b3b7>
    12bf:	06                   	(bad)
    12c0:	03 22                	add    esp,DWORD PTR [rdx]
    12c2:	4a 9e                	rex.WX sahf
    12c4:	05 09 06 03 61       	add    eax,0x61030609
    12c9:	01 05 0d 06 01 05    	add    DWORD PTR [rip+0x501060d],eax        # 50118dc <_end+0x500b8c4>
    12cf:	10 06                	adc    BYTE PTR [rsi],al
    12d1:	2b 05 09 4b 05 33    	sub    eax,DWORD PTR [rip+0x33054b09]        # 33055de0 <_end+0x3304fdc8>
    12d7:	06                   	(bad)
    12d8:	01 05 36 2e 05 0c    	add    DWORD PTR [rip+0xc052e36],eax        # c054114 <_end+0xc04e0fc>
    12de:	06                   	(bad)
    12df:	03 16                	add    edx,DWORD PTR [rsi]
    12e1:	ac                   	lods   al,BYTE PTR ds:[rsi]
    12e2:	05 05 14 14 03       	add    eax,0x3141405
    12e7:	0b 08                	or     ecx,DWORD PTR [rax]
    12e9:	66 06                	data16 (bad)
    12eb:	01 05 09 00 02 04    	add    DWORD PTR [rip+0x4020009],eax        # 40212fa <_end+0x401b2e2>
    12f1:	01 03                	add    DWORD PTR [rbx],eax
    12f3:	5b                   	pop    rbx
    12f4:	01 00                	add    DWORD PTR [rax],eax
    12f6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    12f9:	4a 05 01 42 05 0c    	rex.WX add rax,0xc054201
    12ff:	57                   	push   rdi
    1300:	2e 2e 58             	cs cs pop rax
    1303:	05 1a 06 00 09       	add    eax,0x900061a
    1308:	02 10                	add    dl,BYTE PTR [rax]
    130a:	22 00                	and    al,BYTE PTR [rax]
    130c:	00 00                	add    BYTE PTR [rax],al
    130e:	00 00                	add    BYTE PTR [rax],al
    1310:	00 03                	add    BYTE PTR [rbx],al
    1312:	cc                   	int3
    1313:	00 01                	add    BYTE PTR [rcx],al
    1315:	06                   	(bad)
    1316:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1921 <_end+0x54ab909>
    131c:	1a 06                	sbb    al,BYTE PTR [rsi]
    131e:	11 05 05 21 06 84    	adc    DWORD PTR [rip+0xffffffff84062105],eax        # ffffffff84063429 <_end+0xffffffff8405d411>
    1324:	05 09 06 01 3c       	add    eax,0x3c010609
    1329:	05 05 06 5a 13       	add    eax,0x135a0605
    132e:	05 14 06 01 05       	add    eax,0x5010614
    1333:	01 83 20 05 05 00    	add    DWORD PTR [rbx+0x50520],eax
    1339:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    133c:	03 7a 20             	add    edi,DWORD PTR [rdx+0x20]
    133f:	00 02                	add    BYTE PTR [rdx],al
    1341:	04 01                	add    al,0x1
    1343:	08 90 02 05 00 01    	or     BYTE PTR [rax+0x1000502],dl
    1349:	01 ff                	add    edi,edi
    134b:	01 00                	add    DWORD PTR [rax],eax
    134d:	00 05 00 08 00 b7    	add    BYTE PTR [rip+0xffffffffb7000800],al        # ffffffffb7001b53 <_end+0xffffffffb6ffbb3b>
    1353:	00 00                	add    BYTE PTR [rax],al
    1355:	00 01                	add    BYTE PTR [rcx],al
    1357:	01 01                	add    DWORD PTR [rcx],eax
    1359:	fb                   	sti
    135a:	0e                   	(bad)
    135b:	0d 00 01 01 01       	or     eax,0x1010100
    1360:	01 00                	add    DWORD PTR [rax],eax
    1362:	00 00                	add    BYTE PTR [rax],al
    1364:	01 00                	add    DWORD PTR [rax],eax
    1366:	00 01                	add    BYTE PTR [rcx],al
    1368:	01 01                	add    DWORD PTR [rcx],eax
    136a:	1f                   	(bad)
    136b:	0a 00                	or     al,BYTE PTR [rax]
    136d:	00 00                	add    BYTE PTR [rax],al
    136f:	00 2f                	add    BYTE PTR [rdi],ch
    1371:	00 00                	add    BYTE PTR [rax],al
    1373:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    1376:	00 00                	add    BYTE PTR [rax],al
    1378:	41 00 00             	add    BYTE PTR [r8],al
    137b:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
    137e:	00 00                	add    BYTE PTR [rax],al
    1380:	73 02                	jae    1384 <_Z16buildStringArrayPcj+0x84>
    1382:	00 00                	add    BYTE PTR [rax],al
    1384:	95                   	xchg   ebp,eax
    1385:	02 00                	add    al,BYTE PTR [rax]
    1387:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
    138d:	00 00                	add    BYTE PTR [rax],al
    138f:	00 dd                	add    ch,bl
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	00 02                	add    BYTE PTR [rdx],al
    1395:	01 1f                	add    DWORD PTR [rdi],ebx
    1397:	02 0f                	add    cl,BYTE PTR [rdi]
    1399:	17                   	(bad)
    139a:	69 02 00 00 01 69    	imul   eax,DWORD PTR [rdx],0x69010000
    13a0:	02 00                	add    al,BYTE PTR [rax]
    13a2:	00 01                	add    BYTE PTR [rcx],al
    13a4:	be 02 00 00 02       	mov    esi,0x2000002
    13a9:	c7 02 00 00 02 a0    	mov    DWORD PTR [rdx],0xa0020000
    13af:	01 00                	add    DWORD PTR [rax],eax
    13b1:	00 03                	add    BYTE PTR [rbx],al
    13b3:	10 01                	adc    BYTE PTR [rcx],al
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	04 07                	add    al,0x7
    13b9:	01 00                	add    DWORD PTR [rax],eax
    13bb:	00 03                	add    BYTE PTR [rbx],al
    13bd:	19 01                	sbb    DWORD PTR [rcx],eax
    13bf:	00 00                	add    BYTE PTR [rax],al
    13c1:	02 19                	add    bl,BYTE PTR [rcx]
    13c3:	01 00                	add    DWORD PTR [rax],eax
    13c5:	00 05 d0 02 00 00    	add    BYTE PTR [rip+0x2d0],al        # 169b <_Z17hashMapPopElementP7HashMap8string_t+0x5b>
    13cb:	06                   	(bad)
    13cc:	21 01                	and    DWORD PTR [rcx],eax
    13ce:	00 00                	add    BYTE PTR [rax],al
    13d0:	07                   	(bad)
    13d1:	29 01                	sub    DWORD PTR [rcx],eax
    13d3:	00 00                	add    BYTE PTR [rax],al
    13d5:	08 33                	or     BYTE PTR [rbx],dh
    13d7:	01 00                	add    DWORD PTR [rax],eax
    13d9:	00 02                	add    BYTE PTR [rdx],al
    13db:	42 01 00             	rex.X add DWORD PTR [rax],eax
    13de:	00 02                	add    BYTE PTR [rdx],al
    13e0:	07                   	(bad)
    13e1:	01 00                	add    DWORD PTR [rax],eax
    13e3:	00 02                	add    BYTE PTR [rdx],al
    13e5:	07                   	(bad)
    13e6:	01 00                	add    DWORD PTR [rax],eax
    13e8:	00 07                	add    BYTE PTR [rdi],al
    13ea:	e2 02                	loop   13ee <_Z16buildStringArrayPcj+0xee>
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	02 53 01             	add    dl,BYTE PTR [rbx+0x1]
    13f1:	00 00                	add    BYTE PTR [rax],al
    13f3:	02 f0                	add    dh,al
    13f5:	02 00                	add    al,BYTE PTR [rax]
    13f7:	00 02                	add    BYTE PTR [rdx],al
    13f9:	c7 02 00 00 03 e9    	mov    DWORD PTR [rdx],0xe9030000
    13ff:	02 00                	add    al,BYTE PTR [rax]
    1401:	00 05 12 02 00 00    	add    BYTE PTR [rip+0x212],al        # 1619 <_Z17hashMapAddElementP7HashMap8string_t+0xa9>
    1407:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
    140a:	00 00                	add    BYTE PTR [rax],al
    140c:	09 05 33 00 09 02    	or     DWORD PTR [rip+0x2090033],eax        # 2091445 <_end+0x208b42d>
    1412:	50                   	push   rax
    1413:	22 00                	and    al,BYTE PTR [rax]
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	00 00                	add    BYTE PTR [rax],al
    1419:	00 03                	add    BYTE PTR [rbx],al
    141b:	0a 01                	or     al,BYTE PTR [rcx]
    141d:	06                   	(bad)
    141e:	01 08                	add    DWORD PTR [rax],ecx
    1420:	3c 05                	cmp    al,0x5
    1422:	05 06 08 2f 05       	add    eax,0x52f0806
    1427:	11 06                	adc    DWORD PTR [rsi],eax
    1429:	92                   	xchg   edx,eax
    142a:	05 05 06 74 05       	add    eax,0x5740605
    142f:	0e                   	(bad)
    1430:	06                   	(bad)
    1431:	13 3c 05 11 3b 05 05 	adc    edi,DWORD PTR [rax*1+0x5053b11]
    1438:	06                   	(bad)
    1439:	08 e5                	or     ch,ah
    143b:	05 0e 06 01 05       	add    eax,0x501060e
    1440:	05 00 02 04 01       	add    eax,0x1040200
    1445:	82                   	(bad)
    1446:	06                   	(bad)
    1447:	5a                   	pop    rdx
    1448:	05 0c 06 01 05       	add    eax,0x501060c
    144d:	05 06 59 04 02       	add    eax,0x2045906
    1452:	05 1b 06 03 23       	add    eax,0x2303061b
    1457:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    145a:	05 0b 03 5d 74       	add    eax,0x745d030b
    145f:	05 05 06 4c 04       	add    eax,0x44c0605
    1464:	02 05 01 03 15 01    	add    al,BYTE PTR [rip+0x1150301]        # 115176b <_end+0x114b753>
    146a:	05 03 14 15 05       	add    eax,0x5151403
    146f:	07                   	(bad)
    1470:	14 17                	adc    al,0x17
    1472:	05 1b 06 01 82       	add    eax,0x8201061b
    1477:	04 01                	add    al,0x1
    1479:	05 05 06 03 60       	add    eax,0x60030605
    147e:	01 5a 05             	add    DWORD PTR [rdx+0x5],ebx
    1481:	1f                   	(bad)
    1482:	06                   	(bad)
    1483:	01 c8                	add    eax,ecx
    1485:	05 05 06 3d 5a       	add    eax,0x5a3d0605
    148a:	04 03                	add    al,0x3
    148c:	05 01 01 05 03       	add    eax,0x3050101
    1491:	14 05                	adc    al,0x5
    1493:	0a 00                	or     al,BYTE PTR [rax]
    1495:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    1498:	06                   	(bad)
    1499:	01 00                	add    DWORD PTR [rax],eax
    149b:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    149e:	d6                   	(bad)
    149f:	04 01                	add    al,0x1
    14a1:	05 05 06 01 05       	add    eax,0x5010605
    14a6:	0a 06                	or     al,BYTE PTR [rsi]
    14a8:	01 05 01 85 05 34    	add    DWORD PTR [rip+0x34058501],eax        # 340599af <_end+0x34053997>
    14ae:	00 02                	add    BYTE PTR [rdx],al
    14b0:	04 01                	add    al,0x1
    14b2:	03 70 02             	add    esi,DWORD PTR [rax+0x2]
    14b5:	2e 01 00             	cs add DWORD PTR [rax],eax
    14b8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    14bb:	2e 05 05 00 02 04    	cs add eax,0x4020005
    14c1:	01 2b                	add    DWORD PTR [rbx],ebp
    14c3:	00 02                	add    BYTE PTR [rdx],al
    14c5:	04 01                	add    al,0x1
    14c7:	08 2e                	or     BYTE PTR [rsi],ch
    14c9:	00 02                	add    BYTE PTR [rdx],al
    14cb:	04 01                	add    al,0x1
    14cd:	74 05                	je     14d4 <_Z11hashMapCtorPFj8string_tEj+0x14>
    14cf:	01 03                	add    DWORD PTR [rbx],eax
    14d1:	13 58 05             	adc    ebx,DWORD PTR [rax+0x5]
    14d4:	32 06                	xor    al,BYTE PTR [rsi]
    14d6:	ca 06 01             	retf   0x106
    14d9:	05 05 06 4b 05       	add    eax,0x54b0605
    14de:	32 06                	xor    al,BYTE PTR [rsi]
    14e0:	11 05 05 4b 05 1b    	adc    DWORD PTR [rip+0x1b054b05],eax        # 1b055feb <_end+0x1b04ffd3>
    14e6:	06                   	(bad)
    14e7:	b1 05                	mov    cl,0x5
    14e9:	0e                   	(bad)
    14ea:	06                   	(bad)
    14eb:	10 05 1b 30 05 09    	adc    BYTE PTR [rip+0x905301b],al        # 905450c <_end+0x904e4f4>
    14f1:	06                   	(bad)
    14f2:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    14f3:	04 04                	add    al,0x4
    14f5:	05 1b 06 03 c3       	add    eax,0xc303061b
    14fa:	01 01                	add    DWORD PTR [rcx],eax
    14fc:	04 01                	add    al,0x1
    14fe:	05 0e 03 bd 7e       	add    eax,0x7ebd030e
    1503:	58                   	pop    rax
    1504:	05 09 06 3d 04       	add    eax,0x43d0609
    1509:	04 05                	add    al,0x5
    150b:	01 03                	add    DWORD PTR [rbx],eax
    150d:	c0 01 01             	rol    BYTE PTR [rcx],0x1
    1510:	05 03 14 05 1b       	add    eax,0x1b051403
    1515:	06                   	(bad)
    1516:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    1519:	01 05 13 00 02 04    	add    DWORD PTR [rip+0x4020013],eax        # 4021532 <_end+0x401b51a>
    151f:	01 03                	add    DWORD PTR [rbx],eax
    1521:	be 7e 01 05 1b       	mov    esi,0x1b05017e
    1526:	06                   	(bad)
    1527:	48 05 14 06 01 05    	add    rax,0x5010614
    152d:	1b 66 05             	sbb    esp,DWORD PTR [rsi+0x5]
    1530:	01 5e 4a             	add    DWORD PTR [rsi+0x4a],ebx
    1533:	2e 05 05 00 02 04    	cs add eax,0x4020005
    1539:	01 03                	add    DWORD PTR [rbx],eax
    153b:	75 20                	jne    155d <_Z11hashMapCtorPFj8string_tEj+0x9d>
    153d:	00 02                	add    BYTE PTR [rdx],al
    153f:	04 01                	add    al,0x1
    1541:	08 2e                	or     BYTE PTR [rsi],ch
    1543:	00 02                	add    BYTE PTR [rdx],al
    1545:	04 01                	add    al,0x1
    1547:	74 02                	je     154b <_Z11hashMapCtorPFj8string_tEj+0x8b>
    1549:	05 00 01 01 32       	add    eax,0x32010100
    154e:	16                   	(bad)
    154f:	00 00                	add    BYTE PTR [rax],al
    1551:	05 00 08 00 87       	add    eax,0x87000800
    1556:	01 00                	add    DWORD PTR [rax],eax
    1558:	00 01                	add    BYTE PTR [rcx],al
    155a:	01 01                	add    DWORD PTR [rcx],eax
    155c:	fb                   	sti
    155d:	0e                   	(bad)
    155e:	0d 00 01 01 01       	or     eax,0x1010100
    1563:	01 00                	add    DWORD PTR [rax],eax
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	01 00                	add    DWORD PTR [rax],eax
    1569:	00 01                	add    BYTE PTR [rcx],al
    156b:	01 01                	add    DWORD PTR [rcx],eax
    156d:	1f                   	(bad)
    156e:	0c 00                	or     al,0x0
    1570:	00 00                	add    BYTE PTR [rax],al
    1572:	00 2f                	add    BYTE PTR [rdi],ch
    1574:	00 00                	add    BYTE PTR [rax],al
    1576:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    1579:	00 00                	add    BYTE PTR [rax],al
    157b:	9a                   	(bad)
    157c:	00 00                	add    BYTE PTR [rax],al
    157e:	00 ae 00 00 00 1a    	add    BYTE PTR [rsi+0x1a000000],ch
    1584:	03 00                	add    eax,DWORD PTR [rax]
    1586:	00 dd                	add    ch,bl
    1588:	00 00                	add    BYTE PTR [rax],al
    158a:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    158d:	00 00                	add    BYTE PTR [rax],al
    158f:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    1592:	00 95 02 00 00 34    	add    BYTE PTR [rbp+0x34000002],dl
    1598:	03 00                	add    eax,DWORD PTR [rax]
    159a:	00 c7                	add    bh,al
    159c:	00 00                	add    BYTE PTR [rax],al
    159e:	00 02                	add    BYTE PTR [rdx],al
    15a0:	01 1f                	add    DWORD PTR [rdi],ebx
    15a2:	02 0f                	add    cl,BYTE PTR [rdi]
    15a4:	3f                   	(bad)
    15a5:	10 03                	adc    BYTE PTR [rbx],al
    15a7:	00 00                	add    BYTE PTR [rax],al
    15a9:	01 10                	add    DWORD PTR [rax],edx
    15ab:	03 00                	add    eax,DWORD PTR [rax]
    15ad:	00 01                	add    BYTE PTR [rcx],al
    15af:	bc 01 00 00 02       	mov    esp,0x2000001
    15b4:	4d 03 00             	add    r8,QWORD PTR [r8]
    15b7:	00 03                	add    BYTE PTR [rbx],al
    15b9:	53                   	push   rbx
    15ba:	03 00                	add    eax,DWORD PTR [rax]
    15bc:	00 04 5c             	add    BYTE PTR [rsp+rbx*2],al
    15bf:	03 00                	add    eax,DWORD PTR [rax]
    15c1:	00 03                	add    BYTE PTR [rbx],al
    15c3:	68 03 00 00 05       	push   0x5000003
    15c8:	29 01                	sub    DWORD PTR [rcx],eax
    15ca:	00 00                	add    BYTE PTR [rax],al
    15cc:	04 21                	add    al,0x21
    15ce:	01 00                	add    DWORD PTR [rax],eax
    15d0:	00 03                	add    BYTE PTR [rbx],al
    15d2:	70 03                	jo     15d7 <_Z17hashMapAddElementP7HashMap8string_t+0x67>
    15d4:	00 00                	add    BYTE PTR [rax],al
    15d6:	03 77 03             	add    esi,DWORD PTR [rdi+0x3]
    15d9:	00 00                	add    BYTE PTR [rax],al
    15db:	03 7f 03             	add    edi,DWORD PTR [rdi+0x3]
    15de:	00 00                	add    BYTE PTR [rax],al
    15e0:	03 86 03 00 00 03    	add    eax,DWORD PTR [rsi+0x3000003]
    15e6:	8e 03                	mov    es,WORD PTR [rbx]
    15e8:	00 00                	add    BYTE PTR [rax],al
    15ea:	03 96 03 00 00 04    	add    edx,DWORD PTR [rsi+0x4000003]
    15f0:	a1 03 00 00 03 a7 03 	movabs eax,ds:0x3a703000003
    15f7:	00 00 
    15f9:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	06                   	(bad)
    15ff:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1600:	03 00                	add    eax,DWORD PTR [rax]
    1602:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    1605:	01 00                	add    DWORD PTR [rax],eax
    1607:	00 02                	add    BYTE PTR [rdx],al
    1609:	be 03 00 00 07       	mov    esi,0x7000003
    160e:	10 01                	adc    BYTE PTR [rcx],al
    1610:	00 00                	add    BYTE PTR [rax],al
    1612:	08 07                	or     BYTE PTR [rdi],al
    1614:	01 00                	add    DWORD PTR [rax],eax
    1616:	00 07                	add    BYTE PTR [rdi],al
    1618:	c5 03 00             	(bad)
    161b:	00 09                	add    BYTE PTR [rcx],cl
    161d:	cf                   	iret
    161e:	03 00                	add    eax,DWORD PTR [rax]
    1620:	00 09                	add    BYTE PTR [rcx],cl
    1622:	d8 03                	fadd   DWORD PTR [rbx]
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	02 d0                	add    dl,al
    1628:	02 00                	add    al,BYTE PTR [rax]
    162a:	00 09                	add    BYTE PTR [rcx],cl
    162c:	be 03 00 00 03       	mov    esi,0x3000003
    1631:	e6 03                	out    0x3,al
    1633:	00 00                	add    BYTE PTR [rax],al
    1635:	00 f1                	add    cl,dh
    1637:	03 00                	add    eax,DWORD PTR [rax]
    1639:	00 09                	add    BYTE PTR [rcx],cl
    163b:	ff 03                	inc    DWORD PTR [rbx]
    163d:	00 00                	add    BYTE PTR [rax],al
    163f:	09 0a                	or     DWORD PTR [rdx],ecx
    1641:	04 00                	add    al,0x0
    1643:	00 09                	add    BYTE PTR [rcx],cl
    1645:	13 04 00             	adc    eax,DWORD PTR [rax+rax*1]
    1648:	00 09                	add    BYTE PTR [rcx],cl
    164a:	0c 04                	or     al,0x4
    164c:	00 00                	add    BYTE PTR [rax],al
    164e:	09 21                	or     DWORD PTR [rcx],esp
    1650:	04 00                	add    al,0x0
    1652:	00 07                	add    BYTE PTR [rdi],al
    1654:	53                   	push   rbx
    1655:	01 00                	add    DWORD PTR [rax],eax
    1657:	00 02                	add    BYTE PTR [rdx],al
    1659:	29 04 00             	sub    DWORD PTR [rax+rax*1],eax
    165c:	00 02                	add    BYTE PTR [rdx],al
    165e:	e9 01 00 00 07       	jmp    7001664 <_end+0x6ffb64c>
    1663:	33 01                	xor    eax,DWORD PTR [rcx]
    1665:	00 00                	add    BYTE PTR [rax],al
    1667:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
    166a:	00 00                	add    BYTE PTR [rax],al
    166c:	02 07                	add    al,BYTE PTR [rdi]
    166e:	01 00                	add    DWORD PTR [rax],eax
    1670:	00 02                	add    BYTE PTR [rdx],al
    1672:	07                   	(bad)
    1673:	01 00                	add    DWORD PTR [rax],eax
    1675:	00 03                	add    BYTE PTR [rbx],al
    1677:	c5 01 00             	(bad)
    167a:	00 08                	add    BYTE PTR [rax],cl
    167c:	38 04 00             	cmp    BYTE PTR [rax+rax*1],al
    167f:	00 09                	add    BYTE PTR [rcx],cl
    1681:	f3 03 00             	repz add eax,DWORD PTR [rax]
    1684:	00 09                	add    BYTE PTR [rcx],cl
    1686:	41 04 00             	rex.B add al,0x0
    1689:	00 07                	add    BYTE PTR [rdi],al
    168b:	49 04 00             	rex.WB add al,0x0
    168e:	00 02                	add    BYTE PTR [rdx],al
    1690:	52                   	push   rdx
    1691:	04 00                	add    al,0x0
    1693:	00 09                	add    BYTE PTR [rcx],cl
    1695:	5e                   	pop    rsi
    1696:	04 00                	add    al,0x0
    1698:	00 07                	add    BYTE PTR [rdi],al
    169a:	21 04 00             	and    DWORD PTR [rax+rax*1],eax
    169d:	00 02                	add    BYTE PTR [rdx],al
    169f:	67 04 00             	addr32 add al,0x0
    16a2:	00 0a                	add    BYTE PTR [rdx],cl
    16a4:	78 04                	js     16aa <_Z17hashMapPopElementP7HashMap8string_t+0x6a>
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	07                   	(bad)
    16a9:	f2 01 00             	repnz add DWORD PTR [rax],eax
    16ac:	00 0b                	add    BYTE PTR [rbx],cl
    16ae:	62 01 00 00 0b       	(bad)
    16b3:	fd                   	std
    16b4:	01 00                	add    DWORD PTR [rax],eax
    16b6:	00 0b                	add    BYTE PTR [rbx],cl
    16b8:	6d                   	ins    DWORD PTR es:[rdi],dx
    16b9:	01 00                	add    DWORD PTR [rax],eax
    16bb:	00 0b                	add    BYTE PTR [rbx],cl
    16bd:	04 02                	add    al,0x2
    16bf:	00 00                	add    BYTE PTR [rax],al
    16c1:	02 7f 04             	add    bh,BYTE PTR [rdi+0x4]
    16c4:	00 00                	add    BYTE PTR [rax],al
    16c6:	0b a0 01 00 00 07    	or     esp,DWORD PTR [rax+0x7000001]
    16cc:	8c 04 00             	mov    WORD PTR [rax+rax*1],es
    16cf:	00 0b                	add    BYTE PTR [rbx],cl
    16d1:	12 02                	adc    al,BYTE PTR [rdx]
    16d3:	00 00                	add    BYTE PTR [rax],al
    16d5:	07                   	(bad)
    16d6:	94                   	xchg   esp,eax
    16d7:	04 00                	add    al,0x0
    16d9:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    16dc:	04 00                	add    al,0x0
    16de:	00 03                	add    BYTE PTR [rbx],al
    16e0:	05 59 00 09 02       	add    eax,0x2090059
    16e5:	d0 23                	shl    BYTE PTR [rbx],1
    16e7:	00 00                	add    BYTE PTR [rax],al
    16e9:	00 00                	add    BYTE PTR [rax],al
    16eb:	00 00                	add    BYTE PTR [rax],al
    16ed:	03 c6                	add    eax,esi
    16ef:	00 01                	add    BYTE PTR [rcx],al
    16f1:	06                   	(bad)
    16f2:	01 02                	add    DWORD PTR [rdx],eax
    16f4:	24 12                	and    al,0x12
    16f6:	05 05 06 e5 05       	add    eax,0x5e50605
    16fb:	22 06                	and    al,BYTE PTR [rsi]
    16fd:	92                   	xchg   edx,eax
    16fe:	9e                   	sahf
    16ff:	3c 05                	cmp    al,0x5
    1701:	05 06 3c 05 22       	add    eax,0x22053c06
    1706:	06                   	(bad)
    1707:	01 3c 05 17 00 02 04 	add    DWORD PTR [rax*1+0x4020017],edi
    170e:	01 06                	add    DWORD PTR [rsi],eax
    1710:	5a                   	pop    rdx
    1711:	00 02                	add    BYTE PTR [rdx],al
    1713:	04 01                	add    al,0x1
    1715:	06                   	(bad)
    1716:	82                   	(bad)
    1717:	05 09 06 bb 05       	add    eax,0x5bb0609
    171c:	1a 06                	sbb    al,BYTE PTR [rsi]
    171e:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021729 <_end+0x401b711>
    1724:	02 06                	add    al,BYTE PTR [rsi]
    1726:	02 23                	add    ah,BYTE PTR [rbx]
    1728:	11 05 17 00 02 04    	adc    DWORD PTR [rip+0x4020017],eax        # 4021745 <_end+0x401b72d>
    172e:	01 01                	add    DWORD PTR [rcx],eax
    1730:	00 02                	add    BYTE PTR [rdx],al
    1732:	04 01                	add    al,0x1
    1734:	06                   	(bad)
    1735:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1738:	04 01                	add    al,0x1
    173a:	90                   	nop
    173b:	05 05 06 16 14       	add    eax,0x14160605
    1740:	04 02                	add    al,0x2
    1742:	05 01 0d 05 03       	add    eax,0x3050d01
    1747:	14 05                	adc    al,0x5
    1749:	18 06                	sbb    BYTE PTR [rsi],al
    174b:	01 08                	add    DWORD PTR [rax],ecx
    174d:	82                   	(bad)
    174e:	04 01                	add    al,0x1
    1750:	05 1c 00 02 04       	add    eax,0x402001c
    1755:	01 06                	add    DWORD PTR [rsi],eax
    1757:	17                   	(bad)
    1758:	05 0b 06 70 05       	add    eax,0x570060b
    175d:	1c 00                	sbb    al,0x0
    175f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1762:	4e 05 2d 4b 66 05    	rex.WRX add rax,0x5664b2d
    1768:	0b 0d 08 20 04 02    	or     ecx,DWORD PTR [rip+0x2042008]        # 2043776 <_end+0x203d75e>
    176e:	05 18 49 08 58       	add    eax,0x58084918
    1773:	04 01                	add    al,0x1
    1775:	05 09 06 18 04       	add    eax,0x4180609
    177a:	02 05 01 03 78 01    	add    al,BYTE PTR [rip+0x1780301]        # 1781a81 <_end+0x177ba69>
    1780:	05 03 14 04 01       	add    eax,0x1041403
    1785:	05 1c 00 02 04       	add    eax,0x402001c
    178a:	01 06                	add    DWORD PTR [rsi],eax
    178c:	17                   	(bad)
    178d:	04 02                	add    al,0x2
    178f:	05 18 45 ba 04       	add    eax,0x4ba4518
    1794:	01 05 09 06 19 05    	add    DWORD PTR [rip+0x5190609],eax        # 5191da3 <_end+0x518bd8b>
    179a:	26 06                	es (bad)
    179c:	01 05 1b 4a 05 26    	add    DWORD PTR [rip+0x26054a1b],eax        # 260561bd <_end+0x260501a5>
    17a2:	00 02                	add    BYTE PTR [rdx],al
    17a4:	04 01                	add    al,0x1
    17a6:	08 2c 05 1b 3e 05 05 	or     BYTE PTR [rax*1+0x5053e1b],ch
    17ad:	00 02                	add    BYTE PTR [rdx],al
    17af:	04 02                	add    al,0x2
    17b1:	06                   	(bad)
    17b2:	48 05 1c 00 02 04    	add    rax,0x402001c
    17b8:	01 01                	add    DWORD PTR [rcx],eax
    17ba:	05 17 06 4f 05       	add    eax,0x54f0617
    17bf:	05 06 58 05 17       	add    eax,0x17055806
    17c4:	06                   	(bad)
    17c5:	01 05 05 06 4c 04    	add    DWORD PTR [rip+0x44c0605],eax        # 44c1dd0 <_end+0x44bbdb8>
    17cb:	02 05 01 03 79 01    	add    al,BYTE PTR [rip+0x1790301]        # 1791ad2 <_end+0x178baba>
    17d1:	05 03 14 05 17       	add    eax,0x17051403
    17d6:	06                   	(bad)
    17d7:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    17da:	05 0b 08 17 04       	add    eax,0x417080b
    17df:	02 05 17 8b 58 04    	add    al,BYTE PTR [rip+0x4588b17]        # 458a2fc <_end+0x45842e4>
    17e5:	01 05 05 06 18 05    	add    DWORD PTR [rip+0x5180605],eax        # 5181df0 <_end+0x517bdd8>
    17eb:	07                   	(bad)
    17ec:	03 dc                	add    ebx,esp
    17ee:	00 01                	add    BYTE PTR [rcx],al
    17f0:	05 05 13 05 1c       	add    eax,0x1c051305
    17f5:	00 02                	add    BYTE PTR [rdx],al
    17f7:	04 01                	add    al,0x1
    17f9:	15 05 27 00 02       	adc    eax,0x2002705
    17fe:	04 01                	add    al,0x1
    1800:	06                   	(bad)
    1801:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4021823 <_end+0x401b80b>
    1807:	01 3c 05 23 ad 05 0b 	add    DWORD PTR [rax*1+0xb05ad23],edi
    180e:	08 9c 05 12 08 22 05 	or     BYTE PTR [rbp+rax*1+0x5220812],bl
    1815:	26 d7                	xlat   BYTE PTR ds:[rbx]
    1817:	05 09 06 08 9d       	add    eax,0x9d080609
    181c:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 5111e34 <_end+0x510be1c>
    1822:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    1829:	02 23                	add    ah,BYTE PTR [rbx]
    182b:	12 c8                	adc    cl,al
    182d:	05 1c 02 2c 12       	add    eax,0x122c021c
    1832:	c8 05 05 00          	enter  0x505,0x0
    1836:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    1839:	06                   	(bad)
    183a:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 402185c <_end+0x401b844>
    1840:	01 01                	add    DWORD PTR [rcx],eax
    1842:	00 02                	add    BYTE PTR [rdx],al
    1844:	04 01                	add    al,0x1
    1846:	06                   	(bad)
    1847:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    184d:	13 05 26 06 01 f2    	adc    eax,DWORD PTR [rip+0xfffffffff2010626]        # fffffffff2011e79 <_end+0xfffffffff200be61>
    1853:	05 12 81 05 26       	add    eax,0x26058112
    1858:	d7                   	xlat   BYTE PTR ds:[rbx]
    1859:	05 12 57 05 26       	add    eax,0x26055712
    185e:	08 4b 05             	or     BYTE PTR [rbx+0x5],cl
    1861:	31 02                	xor    DWORD PTR [rdx],eax
    1863:	27                   	(bad)
    1864:	12 05 1c 08 4a c8    	adc    al,BYTE PTR [rip+0xffffffffc84a081c]        # ffffffffc84a2086 <_end+0xffffffffc849c06e>
    186a:	05 05 00 02 04       	add    eax,0x4020005
    186f:	03 06                	add    eax,DWORD PTR [rsi]
    1871:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021893 <_end+0x401b87b>
    1877:	01 01                	add    DWORD PTR [rcx],eax
    1879:	05 09 2f 13 05       	add    eax,0x5132f09
    187e:	29 06                	sub    DWORD PTR [rsi],eax
    1880:	11 05 26 2f 05 12    	adc    DWORD PTR [rip+0x12052f26],eax        # 120547ac <_end+0x1204e794>
    1886:	49 05 26 4b 05 05    	rex.WB add rax,0x5054b26
    188c:	00 02                	add    BYTE PTR [rdx],al
    188e:	04 03                	add    al,0x3
    1890:	8e 05 26 3e 05 31    	mov    es,WORD PTR [rip+0x31053e26]        # 310556bc <_end+0x3104f6a4>
    1896:	4a 05 1c 4a 4a 05    	rex.WX add rax,0x54a4a1c
    189c:	05 00 02 04 03       	add    eax,0x3040200
    18a1:	06                   	(bad)
    18a2:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 40218c4 <_end+0x401b8ac>
    18a8:	01 01                	add    DWORD PTR [rcx],eax
    18aa:	05 09 4b 13 05       	add    eax,0x5134b09
    18af:	12 06                	adc    al,BYTE PTR [rsi]
    18b1:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    18b4:	05 00 02 04 03       	add    eax,0x3040200
    18b9:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 310556e5 <_end+0x3104f6cd>
    18bf:	c8 05 1c 4a          	enter  0x1c05,0x4a
    18c3:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    18c9:	03 06                	add    eax,DWORD PTR [rsi]
    18cb:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 40218ed <_end+0x401b8d5>
    18d1:	01 01                	add    DWORD PTR [rcx],eax
    18d3:	05 09 4b 13 05       	add    eax,0x5134b09
    18d8:	12 06                	adc    al,BYTE PTR [rsi]
    18da:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 31056406 <_end+0x310503ee>
    18e0:	c8 05 1c 4a          	enter  0x1c05,0x4a
    18e4:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    18ea:	03 06                	add    eax,DWORD PTR [rsi]
    18ec:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 402190e <_end+0x401b8f6>
    18f2:	01 01                	add    DWORD PTR [rcx],eax
    18f4:	00 02                	add    BYTE PTR [rdx],al
    18f6:	04 01                	add    al,0x1
    18f8:	06                   	(bad)
    18f9:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 5161f04 <_end+0x515beec>
    18ff:	1e                   	(bad)
    1900:	06                   	(bad)
    1901:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    1904:	05 03 06 03 f6       	add    eax,0xf6030603
    1909:	01 c8                	add    eax,ecx
    190b:	05 05 13 05 1b       	add    eax,0x1b051305
    1910:	06                   	(bad)
    1911:	9e                   	sahf
    1912:	4a 04 01             	rex.WX add al,0x1
    1915:	05 05 06 03 8b       	add    eax,0x8b030605
    191a:	7e 01                	jle    191d <_Z6resizeP7HashMapj+0x8d>
    191c:	06                   	(bad)
    191d:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    1920:	05 01 06 03 92       	add    eax,0x92030601
    1925:	7f 01                	jg     1928 <_Z6resizeP7HashMapj+0x98>
    1927:	05 03 14 05 17       	add    eax,0x17051403
    192c:	06                   	(bad)
    192d:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1930:	05 0b 00 02 04       	add    eax,0x402000b
    1935:	01 08                	add    DWORD PTR [rax],ecx
    1937:	18 04 02             	sbb    BYTE PTR [rdx+rax*1],al
    193a:	05 17 03 7a 4a       	add    eax,0x4a7a0317
    193f:	58                   	pop    rax
    1940:	04 01                	add    al,0x1
    1942:	05 05 06 1a 05       	add    eax,0x51a0605
    1947:	10 06                	adc    BYTE PTR [rsi],al
    1949:	01 05 01 83 08 3c    	add    DWORD PTR [rip+0x3c088301],eax        # 3c089c50 <_end+0x3c083c38>
    194f:	66 2e 05 05 06       	cs add ax,0x605
    1954:	03 e1                	add    esp,ecx
    1956:	00 90 05 1e 06 01    	add    BYTE PTR [rax+0x1061e05],dl
    195c:	04 03                	add    al,0x3
    195e:	05 03 06 03 f6       	add    eax,0xf6030603
    1963:	01 82 05 05 13 06    	add    DWORD PTR [rdx+0x6130505],eax
    1969:	82                   	(bad)
    196a:	3c 2e                	cmp    al,0x2e
    196c:	04 01                	add    al,0x1
    196e:	05 0b 03 84 7e       	add    eax,0x7e84030b
    1973:	01 05 13 4b 74 04    	add    DWORD PTR [rip+0x4744b13],eax        # 474648c <_end+0x4740474>
    1979:	03 05 1b 03 fb 01    	add    eax,DWORD PTR [rip+0x1fb031b]        # 1fb1c9a <_end+0x1fabc82>
    197f:	01 90 66 04 01 05    	add    DWORD PTR [rax+0x5010466],edx
    1985:	05 00 02 04 01       	add    eax,0x1040200
    198a:	03 91 7d 01 00 02    	add    edx,DWORD PTR [rcx+0x200017d]
    1990:	04 01                	add    al,0x1
    1992:	ba 00 02 04 01       	mov    edx,0x1040200
    1997:	74 00                	je     1999 <_Z6resizeP7HashMapj+0x109>
    1999:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    199c:	74 05                	je     19a3 <_Z6resizeP7HashMapj+0x113>
    199e:	01 03                	add    DWORD PTR [rbx],eax
    19a0:	17                   	(bad)
    19a1:	58                   	pop    rax
    19a2:	05 6f 06 08 22       	add    eax,0x2208066f
    19a7:	06                   	(bad)
    19a8:	01 08                	add    DWORD PTR [rax],ecx
    19aa:	e4 9e                	in     al,0x9e
    19ac:	05 05 06 08 91       	add    eax,0x91080605
    19b1:	05 0a 06 91 58       	add    eax,0x5891060a
    19b6:	05 05 06 4a 06       	add    eax,0x64a0605
    19bb:	3c 05                	cmp    al,0x5
    19bd:	22 68 05             	and    ch,BYTE PTR [rax+0x5]
    19c0:	0a 48 05             	or     cl,BYTE PTR [rax+0x5]
    19c3:	05 06 5a 05 22       	add    eax,0x22055a06
    19c8:	06                   	(bad)
    19c9:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 40219e6 <_end+0x401b9ce>
    19cf:	01 06                	add    DWORD PTR [rsi],eax
    19d1:	e5 00                	in     eax,0x0
    19d3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19d6:	06                   	(bad)
    19d7:	66 00 02             	data16 add BYTE PTR [rdx],al
    19da:	04 01                	add    al,0x1
    19dc:	3c 05                	cmp    al,0x5
    19de:	09 06                	or     DWORD PTR [rsi],eax
    19e0:	75 05                	jne    19e7 <_Z6resizeP7HashMapj+0x157>
    19e2:	1a 06                	sbb    al,BYTE PTR [rsi]
    19e4:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40219ef <_end+0x401b9d7>
    19ea:	02 06                	add    al,BYTE PTR [rsi]
    19ec:	02 25 11 05 17 00    	add    ah,BYTE PTR [rip+0x170511]        # 171f03 <_end+0x16beeb>
    19f2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19f5:	01 00                	add    DWORD PTR [rax],eax
    19f7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19fa:	06                   	(bad)
    19fb:	c8 05 05 06          	enter  0x505,0x6
    19ff:	16                   	(bad)
    1a00:	05 2e 06 01 05       	add    eax,0x501062e
    1a05:	30 e5                	xor    ch,ah
    1a07:	05 2e 57 05 05       	add    eax,0x505572e
    1a0c:	06                   	(bad)
    1a0d:	9f                   	lahf
    1a0e:	05 30 06 01 66       	add    eax,0x66010630
    1a13:	3c 05                	cmp    al,0x5
    1a15:	05 06 08 67 14       	add    eax,0x14670806
    1a1a:	05 17 00 02 04       	add    eax,0x4020017
    1a1f:	01 01                	add    DWORD PTR [rcx],eax
    1a21:	05 09 03 17 90       	add    eax,0x90170309
    1a26:	05 1e 06 01 05       	add    eax,0x501061e
    1a2b:	21 00                	and    DWORD PTR [rax],eax
    1a2d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1a30:	58                   	pop    rax
    1a31:	05 17 00 02 04       	add    eax,0x4020017
    1a36:	01 03                	add    DWORD PTR [rbx],eax
    1a38:	69 2e 05 21 00 02    	imul   ebp,DWORD PTR [rsi],0x2002105
    1a3e:	04 01                	add    al,0x1
    1a40:	03 17                	add    edx,DWORD PTR [rdi]
    1a42:	4a 05 18 00 02 04    	rex.WX add rax,0x4020018
    1a48:	01 3c 05 05 00 02 04 	add    DWORD PTR [rax*1+0x4020005],edi
    1a4f:	03 06                	add    eax,DWORD PTR [rsi]
    1a51:	03 69 4a             	add    ebp,DWORD PTR [rcx+0x4a]
    1a54:	05 17 00 02 04       	add    eax,0x4020017
    1a59:	01 01                	add    DWORD PTR [rcx],eax
    1a5b:	00 02                	add    BYTE PTR [rdx],al
    1a5d:	04 01                	add    al,0x1
    1a5f:	06                   	(bad)
    1a60:	58                   	pop    rax
    1a61:	00 02                	add    BYTE PTR [rdx],al
    1a63:	04 01                	add    al,0x1
    1a65:	06                   	(bad)
    1a66:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    1a69:	05 09 02 25 13       	add    eax,0x13250209
    1a6e:	05 34 06 01 05       	add    eax,0x5010634
    1a73:	09 06                	or     DWORD PTR [rsi],eax
    1a75:	08 30                	or     BYTE PTR [rax],dh
    1a77:	05 1b 00 02 04       	add    eax,0x402001b
    1a7c:	01 01                	add    DWORD PTR [rcx],eax
    1a7e:	05 0d 21 05 4e       	add    eax,0x4e05210d
    1a83:	06                   	(bad)
    1a84:	01 05 21 3c 05 09    	add    DWORD PTR [rip+0x9053c21],eax        # 90556ab <_end+0x904f693>
    1a8a:	00 02                	add    BYTE PTR [rdx],al
    1a8c:	04 02                	add    al,0x2
    1a8e:	06                   	(bad)
    1a8f:	02 2a                	add    ch,BYTE PTR [rdx]
    1a91:	11 05 1b 00 02 04    	adc    DWORD PTR [rip+0x402001b],eax        # 4021ab2 <_end+0x401ba9a>
    1a97:	01 01                	add    DWORD PTR [rcx],eax
    1a99:	05 09 cc 05 32       	add    eax,0x3205cc09
    1a9e:	06                   	(bad)
    1a9f:	01 05 09 06 59 04    	add    DWORD PTR [rip+0x4590609],eax        # 45920ae <_end+0x458c096>
    1aa5:	04 05                	add    al,0x5
    1aa7:	07                   	(bad)
    1aa8:	03 e3                	add    esp,ebx
    1aaa:	07                   	(bad)
    1aab:	01 05 02 03 c0 7e    	add    DWORD PTR [rip+0x7ec00302],eax        # 7ec01db3 <_end+0x7ebfbd9b>
    1ab1:	01 06                	add    DWORD PTR [rsi],eax
    1ab3:	01 06                	add    DWORD PTR [rsi],eax
    1ab5:	01 06                	add    DWORD PTR [rsi],eax
    1ab7:	01 05 07 06 03 91    	add    DWORD PTR [rip+0xffffffff91030607],eax        # ffffffff910320c4 <_end+0xffffffff9102c0ac>
    1abd:	7e 01                	jle    1ac0 <_Z6resizeP7HashMapj+0x230>
    1abf:	05 17 03 f7 7e       	add    eax,0x7ef70317
    1ac4:	01 06                	add    DWORD PTR [rsi],eax
    1ac6:	01 05 07 06 03 d4    	add    DWORD PTR [rip+0xffffffffd4030607],eax        # ffffffffd40320d3 <_end+0xffffffffd402c0bb>
    1acc:	7d 01                	jge    1acf <_Z6resizeP7HashMapj+0x23f>
    1ace:	05 04 03 bf 7f       	add    eax,0x7fbf0304
    1ad3:	01 05 17 03 ed 02    	add    DWORD PTR [rip+0x2ed0317],eax        # 2ed1df0 <_end+0x2ecbdd8>
    1ad9:	01 06                	add    DWORD PTR [rsi],eax
    1adb:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1ade:	05 09 06 03 d7       	add    eax,0xd7030609
    1ae3:	7c 01                	jl     1ae6 <_Z15crc32HashString8string_t+0x6>
    1ae5:	04 04                	add    al,0x4
    1ae7:	05 22 00 02 04       	add    eax,0x4020022
    1aec:	02 06                	add    al,BYTE PTR [rsi]
    1aee:	03 b8 04 01 00 02    	add    edi,DWORD PTR [rax+0x2000104]
    1af4:	04 02                	add    al,0x2
    1af6:	74 04                	je     1afc <_Z19_mm_crc32HashString8string_t+0xc>
    1af8:	01 05 1e 00 02 04    	add    DWORD PTR [rip+0x402001e],eax        # 4021b1c <_end+0x401bb04>
    1afe:	01 03                	add    DWORD PTR [rbx],eax
    1b00:	c8 7b 01 05          	enter  0x17b,0x5
    1b04:	17                   	(bad)
    1b05:	00 02                	add    BYTE PTR [rdx],al
    1b07:	04 01                	add    al,0x1
    1b09:	03 76 4a             	add    esi,DWORD PTR [rsi+0x4a]
    1b0c:	04 04                	add    al,0x4
    1b0e:	05 22 00 02 04       	add    eax,0x4020022
    1b13:	02 03                	add    al,BYTE PTR [rbx]
    1b15:	c2 04 4a             	ret    0x4a04
    1b18:	00 02                	add    BYTE PTR [rdx],al
    1b1a:	04 02                	add    al,0x2
    1b1c:	3c 00                	cmp    al,0x0
    1b1e:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1b21:	3c 05                	cmp    al,0x5
    1b23:	26 00 02             	es add BYTE PTR [rdx],al
    1b26:	04 01                	add    al,0x1
    1b28:	03 88 7c 01 04 01    	add    ecx,DWORD PTR [rax+0x104017c]
    1b2e:	05 17 00 02 04       	add    eax,0x4020017
    1b33:	01 03                	add    DWORD PTR [rbx],eax
    1b35:	b6 7f                	mov    dh,0x7f
    1b37:	08 12                	or     BYTE PTR [rdx],dl
    1b39:	04 04                	add    al,0x4
    1b3b:	05 26 00 02 04       	add    eax,0x4020026
    1b40:	01 03                	add    DWORD PTR [rbx],eax
    1b42:	ca 00 4a             	retf   0x4a00
    1b45:	04 01                	add    al,0x1
    1b47:	05 1e 00 02 04       	add    eax,0x402001e
    1b4c:	01 03                	add    DWORD PTR [rbx],eax
    1b4e:	40 74 00             	rex je 1b51 <_Z25_mm_crc32UnrollHashString8string_t+0x51>
    1b51:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1b54:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1b55:	05 05 00 02 04       	add    eax,0x4020005
    1b5a:	02 06                	add    al,BYTE PTR [rsi]
    1b5c:	03 76 01             	add    esi,DWORD PTR [rsi+0x1]
    1b5f:	05 17 00 02 04       	add    eax,0x4020017
    1b64:	01 01                	add    DWORD PTR [rcx],eax
    1b66:	05 05 03 0d 90       	add    eax,0x900d0305
    1b6b:	05 10 06 01 04       	add    eax,0x4010610
    1b70:	02 05 18 03 b8 7f    	add    al,BYTE PTR [rip+0x7fb80318]        # 7fb81e8e <_end+0x7fb7be76>
    1b76:	9e                   	sahf
    1b77:	04 01                	add    al,0x1
    1b79:	05 10 03 c8 00       	add    eax,0xc80310
    1b7e:	3c 05                	cmp    al,0x5
    1b80:	05 06 5a 14 04       	add    eax,0x4145a06
    1b85:	02 05 01 03 b2 7f    	add    al,BYTE PTR [rip+0x7fb20301]        # 7fb21e8c <_end+0x7fb1be74>
    1b8b:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 18052f94 <_end+0x1804cf7c>
    1b91:	06                   	(bad)
    1b92:	01 08                	add    DWORD PTR [rax],ecx
    1b94:	90                   	nop
    1b95:	04 01                	add    al,0x1
    1b97:	05 1c 00 02 04       	add    eax,0x402001c
    1b9c:	01 06                	add    DWORD PTR [rsi],eax
    1b9e:	03 cd                	add    ecx,ebp
    1ba0:	00 01                	add    BYTE PTR [rcx],al
    1ba2:	05 0c 06 0f 05       	add    eax,0x50f060c
    1ba7:	10 4e 04             	adc    BYTE PTR [rsi+0x4],cl
    1baa:	02 05 18 03 b2 7f    	add    al,BYTE PTR [rip+0x7fb20318]        # 7fb21ec8 <_end+0x7fb1beb0>
    1bb0:	4a 08 3c 04          	rex.WX or BYTE PTR [rsp+r8*1],dil
    1bb4:	01 05 09 06 03 ce    	add    DWORD PTR [rip+0xffffffffce030609],eax        # ffffffffce0321c3 <_end+0xffffffffce02c1ab>
    1bba:	00 01                	add    BYTE PTR [rcx],al
    1bbc:	05 10 06 01 04       	add    eax,0x4010610
    1bc1:	02 05 01 06 03 b0    	add    al,BYTE PTR [rip+0xffffffffb0030601]        # ffffffffb00321c8 <_end+0xffffffffb002c1b0>
    1bc7:	7f 66                	jg     1c2f <_Z17adler32HashString8string_t+0xaf>
    1bc9:	05 03 14 05 18       	add    eax,0x18051403
    1bce:	06                   	(bad)
    1bcf:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1bd2:	05 1c 00 02 04       	add    eax,0x402001c
    1bd7:	01 03                	add    DWORD PTR [rbx],eax
    1bd9:	cd 00                	int    0x0
    1bdb:	58                   	pop    rax
    1bdc:	04 02                	add    al,0x2
    1bde:	05 18 03 b3 7f       	add    eax,0x7fb30318
    1be3:	4a c8 04 01 05       	rex.WX enter 0x104,0x5
    1be8:	09 06                	or     DWORD PTR [rsi],eax
    1bea:	03 cf                	add    ecx,edi
    1bec:	00 01                	add    BYTE PTR [rcx],al
    1bee:	05 16 06 01 05       	add    eax,0x5010616
    1bf3:	05 00 02 04 02       	add    eax,0x2040200
    1bf8:	06                   	(bad)
    1bf9:	fe 05 1c 00 02 04    	inc    BYTE PTR [rip+0x402001c]        # 4021c1b <_end+0x401bc03>
    1bff:	01 01                	add    DWORD PTR [rcx],eax
    1c01:	05 05 6b 05 12       	add    eax,0x12056b05
    1c06:	06                   	(bad)
    1c07:	01 05 05 06 08 67    	add    DWORD PTR [rip+0x67080605],eax        # 67082212 <_end+0x6707c1fa>
    1c0d:	05 08 03 0a 01       	add    eax,0x10a0308
    1c12:	05 05 13 05 0c       	add    eax,0xc051305
    1c17:	06                   	(bad)
    1c18:	08 3e                	or     BYTE PTR [rsi],bh
    1c1a:	05 09 06 d8 05       	add    eax,0x5d80609
    1c1f:	2c 06                	sub    al,0x6
    1c21:	01 05 2e 08 58 05    	add    DWORD PTR [rip+0x558082e],eax        # 5582455 <_end+0x557c43d>
    1c27:	2c 4a                	sub    al,0x4a
    1c29:	05 39 82 82 05       	add    eax,0x5828239
    1c2e:	1c d6                	sbb    al,0xd6
    1c30:	05 05 00 02 04       	add    eax,0x4020005
    1c35:	03 06                	add    eax,DWORD PTR [rsi]
    1c37:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    1c3c:	04 01                	add    al,0x1
    1c3e:	01 00                	add    DWORD PTR [rax],eax
    1c40:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1c43:	06                   	(bad)
    1c44:	08 82 05 09 06 c9    	or     BYTE PTR [rdx-0x36f9f6fb],al
    1c4a:	05 2c 06 01 05       	add    eax,0x501062c
    1c4f:	2e 66 05 2c 4a       	cs add ax,0x4a2c
    1c54:	05 2e 58 05 39       	add    eax,0x3905582e
    1c59:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    1c5f:	00 02                	add    BYTE PTR [rdx],al
    1c61:	04 03                	add    al,0x3
    1c63:	06                   	(bad)
    1c64:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 4021c8a <_end+0x401bc72>
    1c6b:	01 05 09 
    1c6e:	9f                   	lahf
    1c6f:	05 2e 06 01 05       	add    eax,0x501062e
    1c74:	39 c8                	cmp    eax,ecx
    1c76:	05 1c 4a 05 05       	add    eax,0x5054a1c
    1c7b:	00 02                	add    BYTE PTR [rdx],al
    1c7d:	04 03                	add    al,0x3
    1c7f:	06                   	(bad)
    1c80:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    1c86:	01 01                	add    DWORD PTR [rcx],eax
    1c88:	00 02                	add    BYTE PTR [rdx],al
    1c8a:	04 01                	add    al,0x1
    1c8c:	06                   	(bad)
    1c8d:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 5152298 <_end+0x514c280>
    1c93:	1e                   	(bad)
    1c94:	06                   	(bad)
    1c95:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e0566ba <_end+0x1e0506a2>
    1c9b:	4a 04 03             	rex.WX add al,0x3
    1c9e:	05 03 06 03 83       	add    eax,0x83030603
    1ca3:	02 ba 05 05 13 05    	add    bh,BYTE PTR [rdx+0x5130505]
    1ca9:	1b 06                	sbb    eax,DWORD PTR [rsi]
    1cab:	d6                   	(bad)
    1cac:	4a 04 01             	rex.WX add al,0x1
    1caf:	05 18 00 02 04       	add    eax,0x4020018
    1cb4:	01 03                	add    DWORD PTR [rbx],eax
    1cb6:	fc                   	cld
    1cb7:	7d 01                	jge    1cba <_Z17adler32HashString8string_t+0x13a>
    1cb9:	04 02                	add    al,0x2
    1cbb:	05 17 03 a3 7f       	add    eax,0x7fa30317
    1cc0:	4a 04 01             	rex.WX add al,0x1
    1cc3:	05 18 00 02 04       	add    eax,0x4020018
    1cc8:	01 03                	add    DWORD PTR [rbx],eax
    1cca:	dd 00                	fld    QWORD PTR [rax]
    1ccc:	74 05                	je     1cd3 <_Z17adler32HashString8string_t+0x153>
    1cce:	05 06 5a 06 01       	add    eax,0x1065a06
    1cd3:	06                   	(bad)
    1cd4:	03 6f 01             	add    ebp,DWORD PTR [rdi+0x1]
    1cd7:	04 02                	add    al,0x2
    1cd9:	05 01 03 b0 7f       	add    eax,0x7fb00301
    1cde:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170530e7 <_end+0x1704d0cf>
    1ce4:	06                   	(bad)
    1ce5:	01 08                	add    DWORD PTR [rax],ecx
    1ce7:	9e                   	sahf
    1ce8:	04 01                	add    al,0x1
    1cea:	05 05 06 03 cf       	add    eax,0xcf030605
    1cef:	00 01                	add    BYTE PTR [rcx],al
    1cf1:	04 02                	add    al,0x2
    1cf3:	05 01 03 af 7f       	add    eax,0x7faf0301
    1cf8:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17053101 <_end+0x1704d0e9>
    1cfe:	06                   	(bad)
    1cff:	01 08                	add    DWORD PTR [rax],ecx
    1d01:	9e                   	sahf
    1d02:	04 01                	add    al,0x1
    1d04:	05 05 06 03 d0       	add    eax,0xd0030605
    1d09:	00 01                	add    BYTE PTR [rcx],al
    1d0b:	04 02                	add    al,0x2
    1d0d:	05 01 03 ae 7f       	add    eax,0x7fae0301
    1d12:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 104311b <_end+0x103d103>
    1d18:	05 39 06 03 d0       	add    eax,0xd0030639
    1d1d:	00 01                	add    BYTE PTR [rcx],al
    1d1f:	04 02                	add    al,0x2
    1d21:	05 17 03 b0 7f       	add    eax,0x7fb00317
    1d26:	c8 04 01 05          	enter  0x104,0x5
    1d2a:	39 03                	cmp    DWORD PTR [rbx],eax
    1d2c:	d0 00                	rol    BYTE PTR [rax],1
    1d2e:	08 12                	or     BYTE PTR [rdx],dl
    1d30:	05 0b 4a 04 02       	add    eax,0x2044a0b
    1d35:	05 17 03 b0 7f       	add    eax,0x7fb00317
    1d3a:	82                   	(bad)
    1d3b:	58                   	pop    rax
    1d3c:	04 01                	add    al,0x1
    1d3e:	05 05 06 03 d2       	add    eax,0xd2030605
    1d43:	00 01                	add    BYTE PTR [rcx],al
    1d45:	05 09 06 01 05       	add    eax,0x5010609
    1d4a:	05 06 91 05 09       	add    eax,0x9059106
    1d4f:	06                   	(bad)
    1d50:	01 05 01 08 91 58    	add    DWORD PTR [rip+0x58910801],eax        # 58912557 <_end+0x5890c53f>
    1d56:	4a 58                	rex.WX pop rax
    1d58:	4a 05 09 2d 58 05    	rex.WX add rax,0x5582d09
    1d5e:	05 06 03 6e 82       	add    eax,0x826e0306
    1d63:	05 10 06 01 05       	add    eax,0x5010610
    1d68:	05 06 84 14 04       	add    eax,0x4148406
    1d6d:	02 05 01 03 b2 7f    	add    al,BYTE PTR [rip+0x7fb20301]        # 7fb22074 <_end+0x7fb1c05c>
    1d73:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 1805317c <_end+0x1804d164>
    1d79:	06                   	(bad)
    1d7a:	01 08                	add    DWORD PTR [rax],ecx
    1d7c:	90                   	nop
    1d7d:	04 01                	add    al,0x1
    1d7f:	05 1c 00 02 04       	add    eax,0x402001c
    1d84:	01 06                	add    DWORD PTR [rsi],eax
    1d86:	03 cd                	add    ecx,ebp
    1d88:	00 01                	add    BYTE PTR [rcx],al
    1d8a:	05 05 17 05 12       	add    eax,0x12051705
    1d8f:	06                   	(bad)
    1d90:	01 05 05 03 0c 4a    	add    DWORD PTR [rip+0x4a0c0305],eax        # 4a0c209b <_end+0x4a0bc083>
    1d96:	05 12 03 74 58       	add    eax,0x58740312
    1d9b:	05 05 06 4b 05       	add    eax,0x54b0605
    1da0:	08 03                	or     BYTE PTR [rbx],al
    1da2:	0a 01                	or     al,BYTE PTR [rcx]
    1da4:	05 05 13 34 05       	add    eax,0x5341305
    1da9:	1e                   	(bad)
    1daa:	06                   	(bad)
    1dab:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    1dae:	05 03 06 03 83       	add    eax,0x83030603
    1db3:	02 82 05 05 13 06    	add    al,BYTE PTR [rdx+0x6130505]
    1db9:	58                   	pop    rax
    1dba:	04 01                	add    al,0x1
    1dbc:	05 0c 03 f8 7d       	add    eax,0x7df8030c
    1dc1:	01 05 13 4b 74 05    	add    DWORD PTR [rip+0x5744b13],eax        # 57468da <_end+0x57408c2>
    1dc7:	08 06                	or     BYTE PTR [rsi],al
    1dc9:	0e                   	(bad)
    1dca:	05 05 00 02 04       	add    eax,0x4020005
    1dcf:	01 06                	add    DWORD PTR [rsi],eax
    1dd1:	13 00                	adc    eax,DWORD PTR [rax]
    1dd3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1dd6:	08 d6                	or     dh,dl
    1dd8:	00 02                	add    BYTE PTR [rdx],al
    1dda:	04 01                	add    al,0x1
    1ddc:	03 b5 7f 01 00 02    	add    esi,DWORD PTR [rbp+0x200017f]
    1de2:	04 01                	add    al,0x1
    1de4:	08 2e                	or     BYTE PTR [rsi],ch
    1de6:	00 02                	add    BYTE PTR [rdx],al
    1de8:	04 01                	add    al,0x1
    1dea:	74 05                	je     1df1 <_Z13elfHashString8string_t+0x61>
    1dec:	09 03                	or     DWORD PTR [rbx],eax
    1dee:	c7 00 58 58 04 03    	mov    DWORD PTR [rax],0x3045858
    1df4:	05 1b 03 8e 02       	add    eax,0x28e031b
    1df9:	82                   	(bad)
    1dfa:	58                   	pop    rax
    1dfb:	04 01                	add    al,0x1
    1dfd:	05 6e 06 03 80       	add    eax,0x8003066e
    1e02:	7d 08                	jge    1e0c <_Z13elfHashString8string_t+0x7c>
    1e04:	3c 06                	cmp    al,0x6
    1e06:	01 05 05 06 03 0b    	add    DWORD PTR [rip+0xb030605],eax        # b032411 <_end+0xb02c3f9>
    1e0c:	4a 05 6e 06 03 75    	rex.WX add rax,0x7503066e
    1e12:	01 05 1e 03 0b 2e    	add    DWORD PTR [rip+0x2e0b031e],eax        # 2e0b2136 <_end+0x2e0ac11e>
    1e18:	05 6e 03 75 74       	add    eax,0x7475036e
    1e1d:	9e                   	sahf
    1e1e:	58                   	pop    rax
    1e1f:	74 58                	je     1e79 <_Z13elfHashString8string_t+0xe9>
    1e21:	05 1e 03 0b 58       	add    eax,0x580b031e
    1e26:	05 13 59 05 1e       	add    eax,0x1e055913
    1e2b:	08 1f                	or     BYTE PTR [rdi],bl
    1e2d:	05 05 06 3d 05       	add    eax,0x53d0605
    1e32:	13 06                	adc    eax,DWORD PTR [rsi]
    1e34:	01 05 05 06 59 05    	add    DWORD PTR [rip+0x5590605],eax        # 559243f <_end+0x558c427>
    1e3a:	01 06                	add    DWORD PTR [rsi],eax
    1e3c:	13 05 0b 49 05 01    	adc    eax,DWORD PTR [rip+0x105490b]        # 105674d <_end+0x1050735>
    1e42:	3d 20 20 2e 2e       	cmp    eax,0x2e2e2020
    1e47:	2e 05 0b 2d 58 05    	cs add eax,0x5582d0b
    1e4d:	63 06                	movsxd eax,DWORD PTR [rsi]
    1e4f:	00 09                	add    BYTE PTR [rcx],cl
    1e51:	02 70 2d             	add    dh,BYTE PTR [rax+0x2d]
    1e54:	00 00                	add    BYTE PTR [rax],al
    1e56:	00 00                	add    BYTE PTR [rax],al
    1e58:	00 00                	add    BYTE PTR [rax],al
    1e5a:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    1e5d:	06                   	(bad)
    1e5e:	01 08                	add    DWORD PTR [rax],ecx
    1e60:	20 05 05 06 08 3d    	and    BYTE PTR [rip+0x3d080605],al        # 3d08246b <_end+0x3d07c453>
    1e66:	bb 05 1a 06 93       	mov    ebx,0x93061a05
    1e6b:	74 05                	je     1e72 <_Z13elfHashString8string_t+0xe2>
    1e6d:	05 06 3b 05 1a       	add    eax,0x1a053b06
    1e72:	06                   	(bad)
    1e73:	13 05 0c 57 05 05    	adc    eax,DWORD PTR [rip+0x505570c]        # 5057585 <_end+0x505156d>
    1e79:	06                   	(bad)
    1e7a:	91                   	xchg   ecx,eax
    1e7b:	05 1a 06 01 05       	add    eax,0x501061a
    1e80:	20 5a 05             	and    BYTE PTR [rdx+0x5],bl
    1e83:	1a 80 05 05 06 84    	sbb    al,BYTE PTR [rax-0x7bf9fafb]
    1e89:	05 20 06 01 05       	add    eax,0x5010620
    1e8e:	39 5a 05             	cmp    DWORD PTR [rdx+0x5],ebx
    1e91:	20 3a                	and    BYTE PTR [rdx],bh
    1e93:	05 05 06 3e 05       	add    eax,0x53e0605
    1e98:	39 06                	cmp    DWORD PTR [rsi],eax
    1e9a:	01 05 0f 85 05 39    	add    DWORD PTR [rip+0x3905850f],eax        # 3905a3af <_end+0x39054397>
    1ea0:	9b                   	fwait
    1ea1:	05 05 06 3f 05       	add    eax,0x53f0605
    1ea6:	0f 06                	clts
    1ea8:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021eb3 <_end+0x401be9b>
    1eae:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    1eb1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1eb4:	82                   	(bad)
    1eb5:	05 3f 00 02 04       	add    eax,0x402003f
    1eba:	02 06                	add    al,BYTE PTR [rsi]
    1ebc:	01 05 05 13 05 0f    	add    DWORD PTR [rip+0xf051305],eax        # f0531c7 <_end+0xf04d1af>
    1ec2:	06                   	(bad)
    1ec3:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021ece <_end+0x401beb6>
    1ec9:	01 e4                	add    esp,esp
    1ecb:	05 43 00 02 04       	add    eax,0x4020043
    1ed0:	02 06                	add    al,BYTE PTR [rsi]
    1ed2:	82                   	(bad)
    1ed3:	05 05 13 05 0f       	add    eax,0xf051305
    1ed8:	06                   	(bad)
    1ed9:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021ee4 <_end+0x401becc>
    1edf:	01 e4                	add    esp,esp
    1ee1:	05 41 00 02 04       	add    eax,0x4020041
    1ee6:	02 06                	add    al,BYTE PTR [rsi]
    1ee8:	82                   	(bad)
    1ee9:	05 05 13 05 0f       	add    eax,0xf051305
    1eee:	06                   	(bad)
    1eef:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021efa <_end+0x401bee2>
    1ef5:	01 e4                	add    esp,esp
    1ef7:	05 3d 00 02 04       	add    eax,0x402003d
    1efc:	02 06                	add    al,BYTE PTR [rsi]
    1efe:	82                   	(bad)
    1eff:	05 05 13 05 0f       	add    eax,0xf051305
    1f04:	06                   	(bad)
    1f05:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f10 <_end+0x401bef8>
    1f0b:	01 e4                	add    esp,esp
    1f0d:	05 41 00 02 04       	add    eax,0x4020041
    1f12:	02 06                	add    al,BYTE PTR [rsi]
    1f14:	82                   	(bad)
    1f15:	05 05 13 05 0f       	add    eax,0xf051305
    1f1a:	06                   	(bad)
    1f1b:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f26 <_end+0x401bf0e>
    1f21:	01 e4                	add    esp,esp
    1f23:	05 3d 00 02 04       	add    eax,0x402003d
    1f28:	02 06                	add    al,BYTE PTR [rsi]
    1f2a:	82                   	(bad)
    1f2b:	05 05 13 05 0f       	add    eax,0xf051305
    1f30:	06                   	(bad)
    1f31:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f3c <_end+0x401bf24>
    1f37:	01 08                	add    DWORD PTR [rax],ecx
    1f39:	20 05 49 00 02 04    	and    BYTE PTR [rip+0x4020049],al        # 4021f88 <_end+0x401bf70>
    1f3f:	02 06                	add    al,BYTE PTR [rsi]
    1f41:	82                   	(bad)
    1f42:	05 05 13 05 0f       	add    eax,0xf051305
    1f47:	06                   	(bad)
    1f48:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f53 <_end+0x401bf3b>
    1f4e:	01 e4                	add    esp,esp
    1f50:	00 02                	add    BYTE PTR [rdx],al
    1f52:	04 01                	add    al,0x1
    1f54:	82                   	(bad)
    1f55:	06                   	(bad)
    1f56:	03 0a                	add    ecx,DWORD PTR [rdx]
    1f58:	01 05 09 06 01 05    	add    DWORD PTR [rip+0x5010609],eax        # 5012567 <_end+0x500c54f>
    1f5e:	05 06 a4 05 09       	add    eax,0x905a406
    1f63:	06                   	(bad)
    1f64:	01 05 01 83 08 e4    	add    DWORD PTR [rip+0xffffffffe4088301],eax        # ffffffffe408a26b <_end+0xffffffffe4084253>
    1f6a:	05 34 00 02 04       	add    eax,0x4020034
    1f6f:	01 06                	add    DWORD PTR [rsi],eax
    1f71:	03 68 58             	add    ebp,DWORD PTR [rax+0x58]
    1f74:	04 02                	add    al,0x2
    1f76:	05 01 03 37 01       	add    eax,0x1370301
    1f7b:	05 03 14 05 17       	add    eax,0x17051403
    1f80:	06                   	(bad)
    1f81:	01 e4                	add    esp,esp
    1f83:	04 01                	add    al,0x1
    1f85:	05 34 00 02 04       	add    eax,0x4020034
    1f8a:	03 06                	add    eax,DWORD PTR [rsi]
    1f8c:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    1f8f:	04 02                	add    al,0x2
    1f91:	05 01 03 37 01       	add    eax,0x1370301
    1f96:	05 03 14 05 17       	add    eax,0x17051403
    1f9b:	06                   	(bad)
    1f9c:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    1fa2:	00 02                	add    BYTE PTR [rdx],al
    1fa4:	04 04                	add    al,0x4
    1fa6:	06                   	(bad)
    1fa7:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    1faa:	04 02                	add    al,0x2
    1fac:	05 01 03 37 01       	add    eax,0x1370301
    1fb1:	05 03 14 05 17       	add    eax,0x17051403
    1fb6:	06                   	(bad)
    1fb7:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    1fbd:	00 02                	add    BYTE PTR [rdx],al
    1fbf:	04 05                	add    al,0x5
    1fc1:	06                   	(bad)
    1fc2:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    1fc5:	00 02                	add    BYTE PTR [rdx],al
    1fc7:	04 05                	add    al,0x5
    1fc9:	01 05 06 03 1a 01    	add    DWORD PTR [rip+0x11a0306],eax        # 11a22d5 <_end+0x119c2bd>
    1fcf:	05 05 03 0b 01       	add    eax,0x10b0305
    1fd4:	05 1e 06 01 05       	add    eax,0x501061e
    1fd9:	13 08                	adc    ecx,DWORD PTR [rax]
    1fdb:	2f                   	(bad)
    1fdc:	05 1e 08 1f 05       	add    eax,0x51f081e
    1fe1:	05 06 3d 05 13       	add    eax,0x13053d06
    1fe6:	06                   	(bad)
    1fe7:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad25f2 <_end+0x5acc5da>
    1fed:	0b 06                	or     eax,DWORD PTR [rsi]
    1fef:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    1ff5:	04 06                	add    al,0x6
    1ff7:	06                   	(bad)
    1ff8:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    1ffb:	04 02                	add    al,0x2
    1ffd:	05 01 03 37 01       	add    eax,0x1370301
    2002:	05 03 14 05 17       	add    eax,0x17051403
    2007:	06                   	(bad)
    2008:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    200e:	09 06                	or     DWORD PTR [rsi],eax
    2010:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2013:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    2016:	05 01 03 2f 01       	add    eax,0x12f0301
    201b:	05 03 14 05 17       	add    eax,0x17051403
    2020:	06                   	(bad)
    2021:	01 e4                	add    esp,esp
    2023:	04 01                	add    al,0x1
    2025:	05 09 00 02 04       	add    eax,0x4020009
    202a:	01 06                	add    DWORD PTR [rsi],eax
    202c:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    202f:	04 02                	add    al,0x2
    2031:	05 01 03 2f 01       	add    eax,0x12f0301
    2036:	05 03 14 05 17       	add    eax,0x17051403
    203b:	06                   	(bad)
    203c:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2042:	00 02                	add    BYTE PTR [rdx],al
    2044:	04 02                	add    al,0x2
    2046:	06                   	(bad)
    2047:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    204a:	04 02                	add    al,0x2
    204c:	05 01 03 2f 01       	add    eax,0x12f0301
    2051:	05 03 14 05 17       	add    eax,0x17051403
    2056:	06                   	(bad)
    2057:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    205d:	00 02                	add    BYTE PTR [rdx],al
    205f:	04 03                	add    al,0x3
    2061:	06                   	(bad)
    2062:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2065:	00 02                	add    BYTE PTR [rdx],al
    2067:	04 03                	add    al,0x3
    2069:	01 05 06 03 12 01    	add    DWORD PTR [rip+0x1120306],eax        # 1122375 <_end+0x111c35d>
    206f:	05 05 03 0b 01       	add    eax,0x10b0305
    2074:	05 1e 06 3c 05       	add    eax,0x53c061e
    2079:	13 08                	adc    ecx,DWORD PTR [rax]
    207b:	75 05                	jne    2082 <_Z12pushListElemP4List8string_t+0x142>
    207d:	1e                   	(bad)
    207e:	08 49 05             	or     BYTE PTR [rcx+0x5],cl
    2081:	05 06 3d 05 13       	add    eax,0x13053d06
    2086:	06                   	(bad)
    2087:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 5832692 <_end+0x582c67a>
    208d:	0b 06                	or     eax,DWORD PTR [rsi]
    208f:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    2092:	05 17 03 12 3c       	add    eax,0x3c120317
    2097:	74 04                	je     209d <_Z12pushListElemP4List8string_t+0x15d>
    2099:	01 05 0b 03 6e 01    	add    DWORD PTR [rip+0x16e030b],eax        # 16e23aa <_end+0x16dc392>
    209f:	58                   	pop    rax
    20a0:	05 09 00 02 04       	add    eax,0x4020009
    20a5:	04 06                	add    al,0x6
    20a7:	03 61 01             	add    esp,DWORD PTR [rcx+0x1]
    20aa:	04 02                	add    al,0x2
    20ac:	05 01 03 2f 01       	add    eax,0x12f0301
    20b1:	05 03 14 05 17       	add    eax,0x17051403
    20b6:	06                   	(bad)
    20b7:	01 82 04 01 05 14    	add    DWORD PTR [rdx+0x14050104],eax
    20bd:	06                   	(bad)
    20be:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    20c1:	05 09 13 01 04       	add    eax,0x4011309
    20c6:	02 05 01 03 2e 01    	add    al,BYTE PTR [rip+0x12e0301]        # 12e23cd <_end+0x12dc3b5>
    20cc:	05 03 14 05 17       	add    eax,0x17051403
    20d1:	06                   	(bad)
    20d2:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    20d8:	00 02                	add    BYTE PTR [rdx],al
    20da:	04 01                	add    al,0x1
    20dc:	06                   	(bad)
    20dd:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    20e0:	04 02                	add    al,0x2
    20e2:	05 01 03 2e 01       	add    eax,0x12e0301
    20e7:	05 03 14 05 17       	add    eax,0x17051403
    20ec:	06                   	(bad)
    20ed:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    20f3:	00 02                	add    BYTE PTR [rdx],al
    20f5:	04 02                	add    al,0x2
    20f7:	06                   	(bad)
    20f8:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    20fb:	04 02                	add    al,0x2
    20fd:	05 01 03 2e 01       	add    eax,0x12e0301
    2102:	05 03 14 05 17       	add    eax,0x17051403
    2107:	06                   	(bad)
    2108:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    210e:	00 02                	add    BYTE PTR [rdx],al
    2110:	04 03                	add    al,0x3
    2112:	06                   	(bad)
    2113:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2116:	00 02                	add    BYTE PTR [rdx],al
    2118:	04 03                	add    al,0x3
    211a:	01 00                	add    DWORD PTR [rax],eax
    211c:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    211f:	06                   	(bad)
    2120:	01 05 06 06 03 11    	add    DWORD PTR [rip+0x11030606],eax        # 1103272c <_end+0x1102c714>
    2126:	58                   	pop    rax
    2127:	05 05 03 0b 01       	add    eax,0x10b0305
    212c:	05 1e 06 01 05       	add    eax,0x501061e
    2131:	13 08                	adc    ecx,DWORD PTR [rax]
    2133:	2f                   	(bad)
    2134:	05 1e 08 49 05       	add    eax,0x549081e
    2139:	05 06 3d 05 13       	add    eax,0x13053d06
    213e:	06                   	(bad)
    213f:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
    2142:	05 06 59 05 0b       	add    eax,0xb055906
    2147:	06                   	(bad)
    2148:	01 9e 05 09 00 02    	add    DWORD PTR [rsi+0x2000905],ebx
    214e:	04 04                	add    al,0x4
    2150:	06                   	(bad)
    2151:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
    2154:	04 02                	add    al,0x2
    2156:	05 01 03 2e 01       	add    eax,0x12e0301
    215b:	05 03 14 05 17       	add    eax,0x17051403
    2160:	06                   	(bad)
    2161:	01 82 04 01 05 18    	add    DWORD PTR [rdx+0x18050104],eax
    2167:	06                   	(bad)
    2168:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    216b:	05 09 13 01 04       	add    eax,0x4011309
    2170:	02 05 01 03 2d 01    	add    al,BYTE PTR [rip+0x12d0301]        # 12d2477 <_end+0x12cc45f>
    2176:	05 03 14 05 17       	add    eax,0x17051403
    217b:	06                   	(bad)
    217c:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2182:	00 02                	add    BYTE PTR [rdx],al
    2184:	04 01                	add    al,0x1
    2186:	06                   	(bad)
    2187:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    218a:	04 02                	add    al,0x2
    218c:	05 01 03 2d 01       	add    eax,0x12d0301
    2191:	05 03 14 05 17       	add    eax,0x17051403
    2196:	06                   	(bad)
    2197:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    219d:	00 02                	add    BYTE PTR [rdx],al
    219f:	04 02                	add    al,0x2
    21a1:	06                   	(bad)
    21a2:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    21a5:	04 02                	add    al,0x2
    21a7:	05 01 03 2d 01       	add    eax,0x12d0301
    21ac:	05 03 14 05 17       	add    eax,0x17051403
    21b1:	06                   	(bad)
    21b2:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    21b8:	00 02                	add    BYTE PTR [rdx],al
    21ba:	04 03                	add    al,0x3
    21bc:	06                   	(bad)
    21bd:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    21c0:	00 02                	add    BYTE PTR [rdx],al
    21c2:	04 03                	add    al,0x3
    21c4:	01 05 06 03 10 01    	add    DWORD PTR [rip+0x1100306],eax        # 11024d0 <_end+0x10fc4b8>
    21ca:	05 05 03 0b 01       	add    eax,0x10b0305
    21cf:	05 1e 06 01 05       	add    eax,0x501061e
    21d4:	13 08                	adc    ecx,DWORD PTR [rax]
    21d6:	2f                   	(bad)
    21d7:	05 1e 08 49 05       	add    eax,0x549081e
    21dc:	05 06 3d 05 13       	add    eax,0x13053d06
    21e1:	06                   	(bad)
    21e2:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 58327ed <_end+0x582c7d5>
    21e8:	0b 06                	or     eax,DWORD PTR [rsi]
    21ea:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    21f0:	04 04                	add    al,0x4
    21f2:	06                   	(bad)
    21f3:	03 63 01             	add    esp,DWORD PTR [rbx+0x1]
    21f6:	04 02                	add    al,0x2
    21f8:	05 01 03 2d 01       	add    eax,0x12d0301
    21fd:	05 03 14 05 17       	add    eax,0x17051403
    2202:	06                   	(bad)
    2203:	01 82 04 01 05 1e    	add    DWORD PTR [rdx+0x1e050104],eax
    2209:	06                   	(bad)
    220a:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    220d:	05 09 13 01 04       	add    eax,0x4011309
    2212:	02 05 01 03 2c 01    	add    al,BYTE PTR [rip+0x12c0301]        # 12c2519 <_end+0x12bc501>
    2218:	05 03 14 05 17       	add    eax,0x17051403
    221d:	06                   	(bad)
    221e:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2224:	00 02                	add    BYTE PTR [rdx],al
    2226:	04 01                	add    al,0x1
    2228:	06                   	(bad)
    2229:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    222c:	04 02                	add    al,0x2
    222e:	05 01 03 2c 01       	add    eax,0x12c0301
    2233:	05 03 14 05 17       	add    eax,0x17051403
    2238:	06                   	(bad)
    2239:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    223f:	00 02                	add    BYTE PTR [rdx],al
    2241:	04 02                	add    al,0x2
    2243:	06                   	(bad)
    2244:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    2247:	04 02                	add    al,0x2
    2249:	05 01 03 2c 01       	add    eax,0x12c0301
    224e:	05 03 14 05 17       	add    eax,0x17051403
    2253:	06                   	(bad)
    2254:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    225a:	00 02                	add    BYTE PTR [rdx],al
    225c:	04 03                	add    al,0x3
    225e:	06                   	(bad)
    225f:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    2262:	00 02                	add    BYTE PTR [rdx],al
    2264:	04 03                	add    al,0x3
    2266:	01 05 06 03 0f 01    	add    DWORD PTR [rip+0x10f0306],eax        # 10f2572 <_end+0x10ec55a>
    226c:	05 05 03 0b 01       	add    eax,0x10b0305
    2271:	05 1e 06 01 05       	add    eax,0x501061e
    2276:	13 08                	adc    ecx,DWORD PTR [rax]
    2278:	2f                   	(bad)
    2279:	05 1e 08 49 05       	add    eax,0x549081e
    227e:	05 06 3d 05 13       	add    eax,0x13053d06
    2283:	06                   	(bad)
    2284:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 583288f <_end+0x582c877>
    228a:	0b 06                	or     eax,DWORD PTR [rsi]
    228c:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2292:	04 04                	add    al,0x4
    2294:	06                   	(bad)
    2295:	03 64 01 04          	add    esp,DWORD PTR [rcx+rax*1+0x4]
    2299:	02 05 01 03 2c 01    	add    al,BYTE PTR [rip+0x12c0301]        # 12c25a0 <_end+0x12bc588>
    229f:	05 03 14 05 17       	add    eax,0x17051403
    22a4:	06                   	(bad)
    22a5:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    22ab:	06                   	(bad)
    22ac:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    22af:	05 09 13 01 04       	add    eax,0x4011309
    22b4:	02 05 01 03 2b 01    	add    al,BYTE PTR [rip+0x12b0301]        # 12b25bb <_end+0x12ac5a3>
    22ba:	05 03 14 05 17       	add    eax,0x17051403
    22bf:	06                   	(bad)
    22c0:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    22c6:	00 02                	add    BYTE PTR [rdx],al
    22c8:	04 01                	add    al,0x1
    22ca:	06                   	(bad)
    22cb:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    22ce:	04 02                	add    al,0x2
    22d0:	05 01 03 2b 01       	add    eax,0x12b0301
    22d5:	05 03 14 05 17       	add    eax,0x17051403
    22da:	06                   	(bad)
    22db:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    22e1:	00 02                	add    BYTE PTR [rdx],al
    22e3:	04 02                	add    al,0x2
    22e5:	06                   	(bad)
    22e6:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    22e9:	04 02                	add    al,0x2
    22eb:	05 01 03 2b 01       	add    eax,0x12b0301
    22f0:	05 03 14 05 17       	add    eax,0x17051403
    22f5:	06                   	(bad)
    22f6:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    22fc:	00 02                	add    BYTE PTR [rdx],al
    22fe:	04 03                	add    al,0x3
    2300:	06                   	(bad)
    2301:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2304:	00 02                	add    BYTE PTR [rdx],al
    2306:	04 03                	add    al,0x3
    2308:	01 05 06 03 0e 01    	add    DWORD PTR [rip+0x10e0306],eax        # 10e2614 <_end+0x10dc5fc>
    230e:	05 05 03 0b 01       	add    eax,0x10b0305
    2313:	05 1e 06 01 05       	add    eax,0x501061e
    2318:	13 08                	adc    ecx,DWORD PTR [rax]
    231a:	2f                   	(bad)
    231b:	05 1e 08 49 05       	add    eax,0x549081e
    2320:	05 06 3d 05 13       	add    eax,0x13053d06
    2325:	06                   	(bad)
    2326:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 5832931 <_end+0x582c919>
    232c:	0b 06                	or     eax,DWORD PTR [rsi]
    232e:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2334:	04 04                	add    al,0x4
    2336:	06                   	(bad)
    2337:	03 65 01             	add    esp,DWORD PTR [rbp+0x1]
    233a:	04 02                	add    al,0x2
    233c:	05 01 03 2b 01       	add    eax,0x12b0301
    2341:	05 03 14 05 17       	add    eax,0x17051403
    2346:	06                   	(bad)
    2347:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    234d:	06                   	(bad)
    234e:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2351:	05 09 13 01 04       	add    eax,0x4011309
    2356:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a265d <_end+0x129c645>
    235c:	05 03 14 05 17       	add    eax,0x17051403
    2361:	06                   	(bad)
    2362:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2368:	00 02                	add    BYTE PTR [rdx],al
    236a:	04 01                	add    al,0x1
    236c:	06                   	(bad)
    236d:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    2371:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2678 <_end+0x129c660>
    2377:	05 03 14 05 17       	add    eax,0x17051403
    237c:	06                   	(bad)
    237d:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2383:	00 02                	add    BYTE PTR [rdx],al
    2385:	04 02                	add    al,0x2
    2387:	06                   	(bad)
    2388:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    238c:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2693 <_end+0x129c67b>
    2392:	05 03 14 05 17       	add    eax,0x17051403
    2397:	06                   	(bad)
    2398:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    239e:	00 02                	add    BYTE PTR [rdx],al
    23a0:	04 03                	add    al,0x3
    23a2:	06                   	(bad)
    23a3:	03 54 01 00          	add    edx,DWORD PTR [rcx+rax*1+0x0]
    23a7:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    23aa:	01 05 06 03 0d 01    	add    DWORD PTR [rip+0x10d0306],eax        # 10d26b6 <_end+0x10cc69e>
    23b0:	05 05 03 0b 01       	add    eax,0x10b0305
    23b5:	05 1e 06 01 05       	add    eax,0x501061e
    23ba:	13 08                	adc    ecx,DWORD PTR [rax]
    23bc:	2f                   	(bad)
    23bd:	05 1e 08 49 05       	add    eax,0x549081e
    23c2:	05 06 3d 05 13       	add    eax,0x13053d06
    23c7:	06                   	(bad)
    23c8:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 58329d3 <_end+0x582c9bb>
    23ce:	0b 06                	or     eax,DWORD PTR [rsi]
    23d0:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    23d6:	04 04                	add    al,0x4
    23d8:	06                   	(bad)
    23d9:	03 66 01             	add    esp,DWORD PTR [rsi+0x1]
    23dc:	04 02                	add    al,0x2
    23de:	05 01 03 2a 01       	add    eax,0x12a0301
    23e3:	05 03 14 05 17       	add    eax,0x17051403
    23e8:	06                   	(bad)
    23e9:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    23ef:	06                   	(bad)
    23f0:	03 54 01 05          	add    edx,DWORD PTR [rcx+rax*1+0x5]
    23f4:	09 13                	or     DWORD PTR [rbx],edx
    23f6:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    23f9:	05 01 03 29 01       	add    eax,0x1290301
    23fe:	05 03 14 05 17       	add    eax,0x17051403
    2403:	06                   	(bad)
    2404:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    240a:	00 02                	add    BYTE PTR [rdx],al
    240c:	04 01                	add    al,0x1
    240e:	06                   	(bad)
    240f:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2412:	04 02                	add    al,0x2
    2414:	05 01 03 29 01       	add    eax,0x1290301
    2419:	05 03 14 05 17       	add    eax,0x17051403
    241e:	06                   	(bad)
    241f:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2425:	00 02                	add    BYTE PTR [rdx],al
    2427:	04 02                	add    al,0x2
    2429:	06                   	(bad)
    242a:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    242d:	04 02                	add    al,0x2
    242f:	05 01 03 29 01       	add    eax,0x1290301
    2434:	05 03 14 05 17       	add    eax,0x17051403
    2439:	06                   	(bad)
    243a:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2440:	00 02                	add    BYTE PTR [rdx],al
    2442:	04 03                	add    al,0x3
    2444:	06                   	(bad)
    2445:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2448:	00 02                	add    BYTE PTR [rdx],al
    244a:	04 03                	add    al,0x3
    244c:	01 05 06 03 0c 01    	add    DWORD PTR [rip+0x10c0306],eax        # 10c2758 <_end+0x10bc740>
    2452:	05 05 03 0b 01       	add    eax,0x10b0305
    2457:	05 1e 06 01 05       	add    eax,0x501061e
    245c:	13 08                	adc    ecx,DWORD PTR [rax]
    245e:	2f                   	(bad)
    245f:	05 1e 08 1f 05       	add    eax,0x51f081e
    2464:	05 06 3d 05 13       	add    eax,0x13053d06
    2469:	06                   	(bad)
    246a:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2a75 <_end+0x5acca5d>
    2470:	0b 06                	or     eax,DWORD PTR [rsi]
    2472:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2478:	04 04                	add    al,0x4
    247a:	06                   	(bad)
    247b:	03 67 01             	add    esp,DWORD PTR [rdi+0x1]
    247e:	04 02                	add    al,0x2
    2480:	05 01 03 29 01       	add    eax,0x1290301
    2485:	05 03 14 05 17       	add    eax,0x17051403
    248a:	06                   	(bad)
    248b:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    2491:	06                   	(bad)
    2492:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2495:	06                   	(bad)
    2496:	82                   	(bad)
    2497:	05 34 00 02 04       	add    eax,0x4020034
    249c:	01 06                	add    DWORD PTR [rsi],eax
    249e:	03 78 01             	add    edi,DWORD PTR [rax+0x1]
    24a1:	04 02                	add    al,0x2
    24a3:	05 01 03 31 01       	add    eax,0x1310301
    24a8:	05 03 14 05 17       	add    eax,0x17051403
    24ad:	06                   	(bad)
    24ae:	01 e4                	add    esp,esp
    24b0:	04 01                	add    al,0x1
    24b2:	05 34 00 02 04       	add    eax,0x4020034
    24b7:	03 06                	add    eax,DWORD PTR [rsi]
    24b9:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    24bc:	04 02                	add    al,0x2
    24be:	05 01 03 31 01       	add    eax,0x1310301
    24c3:	05 03 14 05 17       	add    eax,0x17051403
    24c8:	06                   	(bad)
    24c9:	01 82 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],eax
    24cf:	00 02                	add    BYTE PTR [rdx],al
    24d1:	04 04                	add    al,0x4
    24d3:	06                   	(bad)
    24d4:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    24d7:	04 02                	add    al,0x2
    24d9:	05 01 03 31 01       	add    eax,0x1310301
    24de:	05 03 14 05 17       	add    eax,0x17051403
    24e3:	06                   	(bad)
    24e4:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    24ea:	00 02                	add    BYTE PTR [rdx],al
    24ec:	04 05                	add    al,0x5
    24ee:	06                   	(bad)
    24ef:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    24f2:	00 02                	add    BYTE PTR [rdx],al
    24f4:	04 05                	add    al,0x5
    24f6:	01 05 06 03 14 01    	add    DWORD PTR [rip+0x1140306],eax        # 1142802 <_end+0x113c7ea>
    24fc:	05 05 03 0b 01       	add    eax,0x10b0305
    2501:	05 1e 06 01 05       	add    eax,0x501061e
    2506:	13 08                	adc    ecx,DWORD PTR [rax]
    2508:	2f                   	(bad)
    2509:	05 1e 08 1f 05       	add    eax,0x51f081e
    250e:	05 06 3d 05 13       	add    eax,0x13053d06
    2513:	06                   	(bad)
    2514:	01 05 05 06 c9 05    	add    DWORD PTR [rip+0x5c90605],eax        # 5c92b1f <_end+0x5c8cb07>
    251a:	0b 06                	or     eax,DWORD PTR [rsi]
    251c:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2522:	04 06                	add    al,0x6
    2524:	06                   	(bad)
    2525:	03 5f 01             	add    ebx,DWORD PTR [rdi+0x1]
    2528:	04 02                	add    al,0x2
    252a:	05 01 03 31 01       	add    eax,0x1310301
    252f:	05 03 14 05 17       	add    eax,0x17051403
    2534:	06                   	(bad)
    2535:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    253b:	34 00                	xor    al,0x0
    253d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2540:	06                   	(bad)
    2541:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    2545:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 132284c <_end+0x131c834>
    254b:	05 03 14 05 17       	add    eax,0x17051403
    2550:	06                   	(bad)
    2551:	01 e4                	add    esp,esp
    2553:	04 01                	add    al,0x1
    2555:	05 34 00 02 04       	add    eax,0x4020034
    255a:	03 06                	add    eax,DWORD PTR [rsi]
    255c:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    2560:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322867 <_end+0x131c84f>
    2566:	05 03 14 05 17       	add    eax,0x17051403
    256b:	06                   	(bad)
    256c:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2572:	00 02                	add    BYTE PTR [rdx],al
    2574:	04 04                	add    al,0x4
    2576:	06                   	(bad)
    2577:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    257b:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322882 <_end+0x131c86a>
    2581:	05 03 14 05 17       	add    eax,0x17051403
    2586:	06                   	(bad)
    2587:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    258d:	00 02                	add    BYTE PTR [rdx],al
    258f:	04 05                	add    al,0x5
    2591:	06                   	(bad)
    2592:	03 4c 01 00          	add    ecx,DWORD PTR [rcx+rax*1+0x0]
    2596:	02 04 05 01 05 06 03 	add    al,BYTE PTR [rax*1+0x3060501]
    259d:	15 01 05 05 03       	adc    eax,0x3050501
    25a2:	0b 01                	or     eax,DWORD PTR [rcx]
    25a4:	05 1e 06 01 05       	add    eax,0x501061e
    25a9:	13 08                	adc    ecx,DWORD PTR [rax]
    25ab:	2f                   	(bad)
    25ac:	05 1e 08 1f 05       	add    eax,0x51f081e
    25b1:	05 06 3d 05 13       	add    eax,0x13053d06
    25b6:	06                   	(bad)
    25b7:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2bc2 <_end+0x5accbaa>
    25bd:	0b 06                	or     eax,DWORD PTR [rsi]
    25bf:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    25c5:	04 06                	add    al,0x6
    25c7:	06                   	(bad)
    25c8:	03 5e 01             	add    ebx,DWORD PTR [rsi+0x1]
    25cb:	04 02                	add    al,0x2
    25cd:	05 01 03 32 01       	add    eax,0x1320301
    25d2:	05 03 14 05 17       	add    eax,0x17051403
    25d7:	06                   	(bad)
    25d8:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    25de:	34 00                	xor    al,0x0
    25e0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    25e3:	06                   	(bad)
    25e4:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    25e7:	04 02                	add    al,0x2
    25e9:	05 01 03 33 01       	add    eax,0x1330301
    25ee:	05 03 14 05 17       	add    eax,0x17051403
    25f3:	06                   	(bad)
    25f4:	01 e4                	add    esp,esp
    25f6:	04 01                	add    al,0x1
    25f8:	05 34 00 02 04       	add    eax,0x4020034
    25fd:	03 06                	add    eax,DWORD PTR [rsi]
    25ff:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2602:	04 02                	add    al,0x2
    2604:	05 01 03 33 01       	add    eax,0x1330301
    2609:	05 03 14 05 17       	add    eax,0x17051403
    260e:	06                   	(bad)
    260f:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2615:	00 02                	add    BYTE PTR [rdx],al
    2617:	04 04                	add    al,0x4
    2619:	06                   	(bad)
    261a:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    261d:	04 02                	add    al,0x2
    261f:	05 01 03 33 01       	add    eax,0x1330301
    2624:	05 03 14 05 17       	add    eax,0x17051403
    2629:	06                   	(bad)
    262a:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2630:	00 02                	add    BYTE PTR [rdx],al
    2632:	04 05                	add    al,0x5
    2634:	06                   	(bad)
    2635:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2638:	00 02                	add    BYTE PTR [rdx],al
    263a:	04 05                	add    al,0x5
    263c:	01 05 06 03 16 01    	add    DWORD PTR [rip+0x1160306],eax        # 1162948 <_end+0x115c930>
    2642:	05 05 03 0b 01       	add    eax,0x10b0305
    2647:	05 1e 06 01 05       	add    eax,0x501061e
    264c:	13 08                	adc    ecx,DWORD PTR [rax]
    264e:	2f                   	(bad)
    264f:	05 1e 08 1f 05       	add    eax,0x51f081e
    2654:	05 06 3d 05 13       	add    eax,0x13053d06
    2659:	06                   	(bad)
    265a:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2c65 <_end+0x5accc4d>
    2660:	0b 06                	or     eax,DWORD PTR [rsi]
    2662:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    2668:	04 06                	add    al,0x6
    266a:	06                   	(bad)
    266b:	03 5d 01             	add    ebx,DWORD PTR [rbp+0x1]
    266e:	04 02                	add    al,0x2
    2670:	05 01 03 33 01       	add    eax,0x1330301
    2675:	05 03 14 05 17       	add    eax,0x17051403
    267a:	06                   	(bad)
    267b:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    2681:	34 00                	xor    al,0x0
    2683:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2686:	06                   	(bad)
    2687:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    268a:	04 02                	add    al,0x2
    268c:	05 01 03 34 01       	add    eax,0x1340301
    2691:	05 03 14 05 17       	add    eax,0x17051403
    2696:	06                   	(bad)
    2697:	01 e4                	add    esp,esp
    2699:	04 01                	add    al,0x1
    269b:	05 34 00 02 04       	add    eax,0x4020034
    26a0:	03 06                	add    eax,DWORD PTR [rsi]
    26a2:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    26a5:	04 02                	add    al,0x2
    26a7:	05 01 03 34 01       	add    eax,0x1340301
    26ac:	05 03 14 05 17       	add    eax,0x17051403
    26b1:	06                   	(bad)
    26b2:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    26b8:	00 02                	add    BYTE PTR [rdx],al
    26ba:	04 04                	add    al,0x4
    26bc:	06                   	(bad)
    26bd:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    26c0:	04 02                	add    al,0x2
    26c2:	05 01 03 34 01       	add    eax,0x1340301
    26c7:	05 03 14 05 17       	add    eax,0x17051403
    26cc:	06                   	(bad)
    26cd:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    26d3:	00 02                	add    BYTE PTR [rdx],al
    26d5:	04 05                	add    al,0x5
    26d7:	06                   	(bad)
    26d8:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    26db:	00 02                	add    BYTE PTR [rdx],al
    26dd:	04 05                	add    al,0x5
    26df:	01 05 06 03 17 01    	add    DWORD PTR [rip+0x1170306],eax        # 11729eb <_end+0x116c9d3>
    26e5:	05 05 03 0b 01       	add    eax,0x10b0305
    26ea:	05 1e 06 01 05       	add    eax,0x501061e
    26ef:	13 08                	adc    ecx,DWORD PTR [rax]
    26f1:	2f                   	(bad)
    26f2:	05 1e 08 1f 05       	add    eax,0x51f081e
    26f7:	05 06 3d 05 13       	add    eax,0x13053d06
    26fc:	06                   	(bad)
    26fd:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2d08 <_end+0x5acccf0>
    2703:	0b 06                	or     eax,DWORD PTR [rsi]
    2705:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    270b:	04 06                	add    al,0x6
    270d:	06                   	(bad)
    270e:	03 5c 01 04          	add    ebx,DWORD PTR [rcx+rax*1+0x4]
    2712:	02 05 01 03 34 01    	add    al,BYTE PTR [rip+0x1340301]        # 1342a19 <_end+0x133ca01>
    2718:	05 03 14 05 17       	add    eax,0x17051403
    271d:	06                   	(bad)
    271e:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    2724:	34 00                	xor    al,0x0
    2726:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2729:	06                   	(bad)
    272a:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    272d:	04 02                	add    al,0x2
    272f:	05 01 03 35 01       	add    eax,0x1350301
    2734:	05 03 14 05 17       	add    eax,0x17051403
    2739:	06                   	(bad)
    273a:	01 e4                	add    esp,esp
    273c:	04 01                	add    al,0x1
    273e:	05 34 00 02 04       	add    eax,0x4020034
    2743:	03 06                	add    eax,DWORD PTR [rsi]
    2745:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2748:	04 02                	add    al,0x2
    274a:	05 01 03 35 01       	add    eax,0x1350301
    274f:	05 03 14 05 17       	add    eax,0x17051403
    2754:	06                   	(bad)
    2755:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    275b:	00 02                	add    BYTE PTR [rdx],al
    275d:	04 04                	add    al,0x4
    275f:	06                   	(bad)
    2760:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2763:	04 02                	add    al,0x2
    2765:	05 01 03 35 01       	add    eax,0x1350301
    276a:	05 03 14 05 17       	add    eax,0x17051403
    276f:	06                   	(bad)
    2770:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2776:	00 02                	add    BYTE PTR [rdx],al
    2778:	04 05                	add    al,0x5
    277a:	06                   	(bad)
    277b:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    277e:	00 02                	add    BYTE PTR [rdx],al
    2780:	04 05                	add    al,0x5
    2782:	01 05 06 03 18 01    	add    DWORD PTR [rip+0x1180306],eax        # 1182a8e <_end+0x117ca76>
    2788:	05 05 03 0b 01       	add    eax,0x10b0305
    278d:	05 1e 06 01 05       	add    eax,0x501061e
    2792:	13 08                	adc    ecx,DWORD PTR [rax]
    2794:	2f                   	(bad)
    2795:	05 1e 08 1f 05       	add    eax,0x51f081e
    279a:	05 06 3d 05 13       	add    eax,0x13053d06
    279f:	06                   	(bad)
    27a0:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2dab <_end+0x5accd93>
    27a6:	0b 06                	or     eax,DWORD PTR [rsi]
    27a8:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    27ae:	04 06                	add    al,0x6
    27b0:	06                   	(bad)
    27b1:	03 5b 01             	add    ebx,DWORD PTR [rbx+0x1]
    27b4:	04 02                	add    al,0x2
    27b6:	05 01 03 35 01       	add    eax,0x1350301
    27bb:	05 03 14 05 17       	add    eax,0x17051403
    27c0:	06                   	(bad)
    27c1:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    27c7:	34 00                	xor    al,0x0
    27c9:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    27cc:	06                   	(bad)
    27cd:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    27d0:	04 02                	add    al,0x2
    27d2:	05 01 03 36 01       	add    eax,0x1360301
    27d7:	05 03 14 05 17       	add    eax,0x17051403
    27dc:	06                   	(bad)
    27dd:	01 e4                	add    esp,esp
    27df:	04 01                	add    al,0x1
    27e1:	05 34 00 02 04       	add    eax,0x4020034
    27e6:	03 06                	add    eax,DWORD PTR [rsi]
    27e8:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    27eb:	04 02                	add    al,0x2
    27ed:	05 01 03 36 01       	add    eax,0x1360301
    27f2:	05 03 14 05 17       	add    eax,0x17051403
    27f7:	06                   	(bad)
    27f8:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    27fe:	00 02                	add    BYTE PTR [rdx],al
    2800:	04 04                	add    al,0x4
    2802:	06                   	(bad)
    2803:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2806:	04 02                	add    al,0x2
    2808:	05 01 03 36 01       	add    eax,0x1360301
    280d:	05 03 14 05 17       	add    eax,0x17051403
    2812:	06                   	(bad)
    2813:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2819:	00 02                	add    BYTE PTR [rdx],al
    281b:	04 05                	add    al,0x5
    281d:	06                   	(bad)
    281e:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2821:	00 02                	add    BYTE PTR [rdx],al
    2823:	04 05                	add    al,0x5
    2825:	01 05 06 03 19 01    	add    DWORD PTR [rip+0x1190306],eax        # 1192b31 <_end+0x118cb19>
    282b:	05 05 03 0b 01       	add    eax,0x10b0305
    2830:	05 1e 06 01 05       	add    eax,0x501061e
    2835:	13 08                	adc    ecx,DWORD PTR [rax]
    2837:	2f                   	(bad)
    2838:	05 1e 08 1f 05       	add    eax,0x51f081e
    283d:	05 06 3d 05 13       	add    eax,0x13053d06
    2842:	06                   	(bad)
    2843:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2e4e <_end+0x5acce36>
    2849:	0b 06                	or     eax,DWORD PTR [rsi]
    284b:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    2851:	04 06                	add    al,0x6
    2853:	06                   	(bad)
    2854:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    2857:	04 02                	add    al,0x2
    2859:	05 01 03 36 01       	add    eax,0x1360301
    285e:	05 03 14 05 17       	add    eax,0x17051403
    2863:	06                   	(bad)
    2864:	01 ba 58 04 01 05    	add    DWORD PTR [rdx+0x5010458],edi
    286a:	01 03                	add    DWORD PTR [rbx],eax
    286c:	5f                   	pop    rdi
    286d:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022878 <_end+0x401c860>
    2873:	01 03                	add    DWORD PTR [rbx],eax
    2875:	5e                   	pop    rsi
    2876:	58                   	pop    rax
    2877:	00 02                	add    BYTE PTR [rdx],al
    2879:	04 01                	add    al,0x1
    287b:	74 00                	je     287d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3d>
    287d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2880:	58                   	pop    rax
    2881:	00 02                	add    BYTE PTR [rdx],al
    2883:	04 01                	add    al,0x1
    2885:	74 00                	je     2887 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x47>
    2887:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    288a:	74 00                	je     288c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x4c>
    288c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    288f:	57                   	push   rdi
    2890:	00 02                	add    BYTE PTR [rdx],al
    2892:	04 01                	add    al,0x1
    2894:	74 00                	je     2896 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x56>
    2896:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2899:	58                   	pop    rax
    289a:	00 02                	add    BYTE PTR [rdx],al
    289c:	04 01                	add    al,0x1
    289e:	74 00                	je     28a0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x60>
    28a0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28a3:	74 05                	je     28aa <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x6a>
    28a5:	52                   	push   rdx
    28a6:	06                   	(bad)
    28a7:	03 9a 01 74 06 01    	add    ebx,DWORD PTR [rdx+0x1067401]
    28ad:	05 05 06 4b 05       	add    eax,0x54b0605
    28b2:	52                   	push   rdx
    28b3:	06                   	(bad)
    28b4:	11 05 05 08 67 05    	adc    DWORD PTR [rip+0x5670805],eax        # 56730bf <_end+0x566d0a7>
    28ba:	1c 00                	sbb    al,0x0
    28bc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28bf:	06                   	(bad)
    28c0:	af                   	scas   eax,DWORD PTR es:[rdi]
    28c1:	00 02                	add    BYTE PTR [rdx],al
    28c3:	04 01                	add    al,0x1
    28c5:	06                   	(bad)
    28c6:	08 ba 05 0c 57 4a    	or     BYTE PTR [rdx+0x4a570c05],bh
    28cc:	05 09 06 08 3e       	add    eax,0x3e080609
    28d1:	05 2e 06 01 05       	add    eax,0x501062e
    28d6:	39 ba 82 05 1c d6    	cmp    DWORD PTR [rdx-0x29e3fa7e],edi
    28dc:	05 05 00 02 04       	add    eax,0x4020005
    28e1:	03 06                	add    eax,DWORD PTR [rsi]
    28e3:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    28e8:	04 01                	add    al,0x1
    28ea:	01 00                	add    DWORD PTR [rax],eax
    28ec:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28ef:	06                   	(bad)
    28f0:	08 20                	or     BYTE PTR [rax],ah
    28f2:	05 09 06 91 05       	add    eax,0x5910609
    28f7:	2c 06                	sub    al,0x6
    28f9:	01 05 2e 2e 05 2c    	add    DWORD PTR [rip+0x2c052e2e],eax        # 2c05572d <_end+0x2c04f715>
    28ff:	4a 05 2e 58 05 39    	rex.WX add rax,0x3905582e
    2905:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    290b:	00 02                	add    BYTE PTR [rdx],al
    290d:	04 03                	add    al,0x3
    290f:	06                   	(bad)
    2910:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 4022936 <_end+0x401c91e>
    2917:	01 05 09 
    291a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    291b:	05 2e 06 01 05       	add    eax,0x501062e
    2920:	39 90 05 1c 4a 05    	cmp    DWORD PTR [rax+0x54a1c05],edx
    2926:	05 00 02 04 03       	add    eax,0x3040200
    292b:	06                   	(bad)
    292c:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    2932:	01 01                	add    DWORD PTR [rcx],eax
    2934:	00 02                	add    BYTE PTR [rdx],al
    2936:	04 01                	add    al,0x1
    2938:	06                   	(bad)
    2939:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 5152f44 <_end+0x514cf2c>
    293f:	1e                   	(bad)
    2940:	06                   	(bad)
    2941:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e057366 <_end+0x1e05134e>
    2947:	4a 04 03             	rex.WX add al,0x3
    294a:	05 03 06 03 83       	add    eax,0x83030603
    294f:	02 90 05 05 13 05    	add    dl,BYTE PTR [rax+0x5130505]
    2955:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2957:	9e                   	sahf
    2958:	4a 04 01             	rex.WX add al,0x1
    295b:	05 05 06 03 fe       	add    eax,0xfe030605
    2960:	7d 01                	jge    2963 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x123>
    2962:	05 01 06 13 05       	add    eax,0x5130601
    2967:	18 00                	sbb    BYTE PTR [rax],al
    2969:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    296c:	47 05 01 4d c8 05    	rex.RXB add eax,0x5c84d01
    2972:	05 06 7f 05 1e       	add    eax,0x1e057f06
    2977:	06                   	(bad)
    2978:	01 4a 04             	add    DWORD PTR [rdx+0x4],ecx
    297b:	03 05 03 06 03 83    	add    eax,DWORD PTR [rip+0xffffffff83030603]        # ffffffff83032f84 <_end+0xffffffff8302cf6c>
    2981:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
    2984:	05 13 06 2e 04       	add    eax,0x42e0613
    2989:	01 05 13 03 f9 7d    	add    DWORD PTR [rip+0x7df90313],eax        # 7df92ca2 <_end+0x7df8cc8a>
    298f:	01 05 0c 2d 4a 04    	add    DWORD PTR [rip+0x44a2d0c],eax        # 44a56a1 <_end+0x449f689>
    2995:	03 05 1b 03 88 02    	add    eax,DWORD PTR [rip+0x288031b]        # 2882cb6 <_end+0x287cc9e>
    299b:	58                   	pop    rax
    299c:	58                   	pop    rax
    299d:	2e 04 01             	cs add al,0x1
    29a0:	05 08 06 03 f5       	add    eax,0xf5030608
    29a5:	7d 01                	jge    29a8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x168>
    29a7:	05 05 00 02 04       	add    eax,0x4020005
    29ac:	01 06                	add    DWORD PTR [rsi],eax
    29ae:	13 00                	adc    eax,DWORD PTR [rax]
    29b0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    29b3:	08 2e                	or     BYTE PTR [rsi],ch
    29b5:	00 02                	add    BYTE PTR [rdx],al
    29b7:	04 01                	add    al,0x1
    29b9:	74 00                	je     29bb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x17b>
    29bb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    29be:	58                   	pop    rax
    29bf:	05 43 06 00 09       	add    eax,0x9000643
    29c4:	02 a0 36 00 00 00    	add    ah,BYTE PTR [rax+0x36]
    29ca:	00 00                	add    BYTE PTR [rax],al
    29cc:	00 03                	add    BYTE PTR [rbx],al
    29ce:	0b 01                	or     eax,DWORD PTR [rcx]
    29d0:	06                   	(bad)
    29d1:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b2fdc <_end+0x54acfc4>
    29d7:	43 06                	rex.XB (bad)
    29d9:	11 05 05 08 83 05    	adc    DWORD PTR [rip+0x5830805],eax        # 58331e4 <_end+0x582d1cc>
    29df:	1c 00                	sbb    al,0x0
    29e1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    29e4:	06                   	(bad)
    29e5:	93                   	xchg   ebx,eax
    29e6:	05 27 00 02 04       	add    eax,0x4020027
    29eb:	01 06                	add    DWORD PTR [rsi],eax
    29ed:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4022a0f <_end+0x401c9f7>
    29f3:	01 3c 05 23 ad 3c 05 	add    DWORD PTR [rax*1+0x53cad23],edi
    29fa:	0b 08                	or     ecx,DWORD PTR [rax]
    29fc:	8e 05 12 08 30 05    	mov    es,WORD PTR [rip+0x5300812]        # 5303214 <_end+0x52fd1fc>
    2a02:	26 d7                	xlat   BYTE PTR ds:[rbx]
    2a04:	05 09 06 08 c7       	add    eax,0xc7080609
    2a09:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 5113021 <_end+0x510d009>
    2a0f:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    2a16:	02 23                	add    ah,BYTE PTR [rbx]
    2a18:	12 c8                	adc    cl,al
    2a1a:	05 1c 02 2e 12       	add    eax,0x122e021c
    2a1f:	c8 05 05 00          	enter  0x505,0x0
    2a23:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2a26:	06                   	(bad)
    2a27:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022a49 <_end+0x401ca31>
    2a2d:	01 01                	add    DWORD PTR [rcx],eax
    2a2f:	00 02                	add    BYTE PTR [rdx],al
    2a31:	04 01                	add    al,0x1
    2a33:	06                   	(bad)
    2a34:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    2a3a:	13 05 26 06 01 05    	adc    eax,DWORD PTR [rip+0x5010626]        # 5013066 <_end+0x500d04e>
    2a40:	12 e3                	adc    ah,bl
    2a42:	05 26 08 c9 05       	add    eax,0x5c90826
    2a47:	31 02                	xor    DWORD PTR [rdx],eax
    2a49:	3a 12                	cmp    dl,BYTE PTR [rdx]
    2a4b:	05 1c 08 4a c8       	add    eax,0xc84a081c
    2a50:	05 05 00 02 04       	add    eax,0x4020005
    2a55:	03 06                	add    eax,DWORD PTR [rsi]
    2a57:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022a79 <_end+0x401ca61>
    2a5d:	01 01                	add    DWORD PTR [rcx],eax
    2a5f:	05 09 2f 13 05       	add    eax,0x5132f09
    2a64:	29 06                	sub    DWORD PTR [rsi],eax
    2a66:	11 05 12 2e 05 26    	adc    DWORD PTR [rip+0x26052e12],eax        # 2605587e <_end+0x2604f866>
    2a6c:	4b 05 05 00 02 04    	rex.WXB add rax,0x4020005
    2a72:	03 8e 05 26 3e 05    	add    ecx,DWORD PTR [rsi+0x53e2605]
    2a78:	31 4a 05             	xor    DWORD PTR [rdx+0x5],ecx
    2a7b:	1c 4a                	sbb    al,0x4a
    2a7d:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2a83:	03 06                	add    eax,DWORD PTR [rsi]
    2a85:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022aa7 <_end+0x401ca8f>
    2a8b:	01 01                	add    DWORD PTR [rcx],eax
    2a8d:	05 09 4b 13 05       	add    eax,0x5134b09
    2a92:	12 06                	adc    al,BYTE PTR [rsi]
    2a94:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    2a97:	05 00 02 04 03       	add    eax,0x3040200
    2a9c:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 310568c8 <_end+0x310508b0>
    2aa2:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2aa6:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2aac:	03 06                	add    eax,DWORD PTR [rsi]
    2aae:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022ad0 <_end+0x401cab8>
    2ab4:	01 01                	add    DWORD PTR [rcx],eax
    2ab6:	05 09 4b 13 05       	add    eax,0x5134b09
    2abb:	12 06                	adc    al,BYTE PTR [rsi]
    2abd:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 310575e9 <_end+0x310515d1>
    2ac3:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2ac7:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2acd:	03 06                	add    eax,DWORD PTR [rsi]
    2acf:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022af1 <_end+0x401cad9>
    2ad5:	01 01                	add    DWORD PTR [rcx],eax
    2ad7:	00 02                	add    BYTE PTR [rdx],al
    2ad9:	04 01                	add    al,0x1
    2adb:	06                   	(bad)
    2adc:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 51630e7 <_end+0x515d0cf>
    2ae2:	1e                   	(bad)
    2ae3:	06                   	(bad)
    2ae4:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    2ae7:	05 03 06 03 f6       	add    eax,0xf6030603
    2aec:	01 c8                	add    eax,ecx
    2aee:	05 05 13 04 01       	add    eax,0x1041305
    2af3:	05 01 06 03 8c       	add    eax,0x8c030601
    2af8:	7e 74                	jle    2b6e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x32e>
    2afa:	04 03                	add    al,0x3
    2afc:	05 1b 03 f4 01       	add    eax,0x1f4031b
    2b01:	4a 04 01             	rex.WX add al,0x1
    2b04:	05 01 03 8c 7e       	add    eax,0x7e8c0301
    2b09:	58                   	pop    rax
    2b0a:	05 05 06 e1 05       	add    eax,0x5e10605
    2b0f:	1e                   	(bad)
    2b10:	06                   	(bad)
    2b11:	01 05 01 5b 05 1e    	add    DWORD PTR [rip+0x1e055b01],eax        # 1e058618 <_end+0x1e052600>
    2b17:	47 04 03             	rex.RXB add al,0x3
    2b1a:	05 03 06 03 f6       	add    eax,0xf6030603
    2b1f:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
    2b22:	05 13 04 01 05       	add    eax,0x5010413
    2b27:	01 06                	add    DWORD PTR [rsi],eax
    2b29:	03 8c 7e 01 04 03 05 	add    ecx,DWORD PTR [rsi+rdi*2+0x5030401]
    2b30:	1b 03                	sbb    eax,DWORD PTR [rbx]
    2b32:	f4                   	hlt
    2b33:	01 74 58 04          	add    DWORD PTR [rax+rbx*2+0x4],esi
    2b37:	01 05 01 03 8c 7e    	add    DWORD PTR [rip+0x7e8c0301],eax        # 7e8c2e3e <_end+0x7e8bce26>
    2b3d:	01 66 3c             	add    DWORD PTR [rsi+0x3c],esp
    2b40:	05 13 03 79 2e       	add    eax,0x2e790313
    2b45:	05 0b 2d 05 01       	add    eax,0x1052d0b
    2b4a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2b4b:	04 03                	add    al,0x3
    2b4d:	05 1b 03 f4 01       	add    eax,0x1f4031b
    2b52:	4a 04 01             	rex.WX add al,0x1
    2b55:	05 01 03 8c 7e       	add    eax,0x7e8c0301
    2b5a:	4a 04 03             	rex.WX add al,0x3
    2b5d:	05 1b 03 f4 01       	add    eax,0x1f4031b
    2b62:	74 58                	je     2bbc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x37c>
    2b64:	04 01                	add    al,0x1
    2b66:	05 07 06 03 81       	add    eax,0x81030607
    2b6b:	7e 01                	jle    2b6e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x32e>
    2b6d:	05 05 00 02 04       	add    eax,0x4020005
    2b72:	01 06                	add    DWORD PTR [rsi],eax
    2b74:	13 00                	adc    eax,DWORD PTR [rax]
    2b76:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2b79:	08 90 00 02 04 01    	or     BYTE PTR [rax+0x1040200],dl
    2b7f:	58                   	pop    rax
    2b80:	00 01                	add    BYTE PTR [rcx],al
    2b82:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
       3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
       4:	61                   	(bad)
       5:	74 31                	je     38 <__abi_tag-0x344>
       7:	36 00 36             	ss add BYTE PTR [rsi],dh
       a:	6c                   	ins    BYTE PTR es:[rdi],dx
       b:	64 69 76 5f 74 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x5a5f0074
      12:	5a 
      13:	53                   	push   rbx
      14:	74 33                	je     49 <__abi_tag-0x333>
      16:	61                   	(bad)
      17:	62 73 6c 00 5f       	(bad)
      1c:	5a                   	pop    rdx
      1d:	53                   	push   rbx
      1e:	74 33                	je     53 <__abi_tag-0x329>
      20:	61                   	(bad)
      21:	62 73 6e 00 71       	(bad)
      26:	73 6f                	jae    97 <__abi_tag-0x2e5>
      28:	72 74                	jb     9e <__abi_tag-0x2de>
      2a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
      2d:	72 74                	jb     a3 <__abi_tag-0x2d9>
      2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      30:	6c                   	ins    BYTE PTR es:[rdi],dx
      31:	64 00 47 4e          	add    BYTE PTR fs:[rdi+0x4e],al
      35:	55                   	push   rbp
      36:	20 43 2b             	and    BYTE PTR [rbx+0x2b],al
      39:	2b 31                	sub    esi,DWORD PTR [rcx]
      3b:	37                   	(bad)
      3c:	20 31                	and    BYTE PTR [rcx],dh
      3e:	33 2e                	xor    ebp,DWORD PTR [rsi]
      40:	33 2e                	xor    ebp,DWORD PTR [rsi]
      42:	30 20                	xor    BYTE PTR [rax],ah
      44:	2d 6d 73 73 65       	sub    eax,0x6573736d
      49:	34 2e                	xor    al,0x2e
      4b:	32 20                	xor    ah,BYTE PTR [rax]
      4d:	2d 6d 61 76 78       	sub    eax,0x7876616d
      52:	20 2d 6d 61 76 78    	and    BYTE PTR [rip+0x7876616d],ch        # 787661c5 <_end+0x787601ad>
      58:	32 20                	xor    ah,BYTE PTR [rax]
      5a:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
      5f:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
      65:	72 69                	jb     d0 <__abi_tag-0x2ac>
      67:	63 20                	movsxd esp,DWORD PTR [rax]
      69:	2d 6d 61 72 63       	sub    eax,0x6372616d
      6e:	68 3d 78 38 36       	push   0x3638783d
      73:	2d 36 34 20 2d       	sub    eax,0x2d203436
      78:	67 20 2d 4f 33 20 2d 	and    BYTE PTR [eip+0x2d20334f],ch        # 2d2033ce <_end+0x2d1fd3b6>
      7f:	66 61                	data16 (bad)
      81:	73 79                	jae    fc <__abi_tag-0x280>
      83:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      84:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
      87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      88:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      8a:	75 73                	jne    ff <__abi_tag-0x27d>
      8c:	2d 75 6e 77 69       	sub    eax,0x69776e75
      91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      92:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
      98:	65 73 20             	gs jae bb <__abi_tag-0x2c1>
      9b:	2d 66 73 74 61       	sub    eax,0x61747366
      a0:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
      a3:	70 72                	jo     117 <__abi_tag-0x265>
      a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      a6:	74 65                	je     10d <__abi_tag-0x26f>
      a8:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
      ac:	2d 73 74 72 6f       	sub    eax,0x6f727473
      b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      b2:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 6174741f <_end+0x61741407>
      b9:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
      bc:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
      c0:	68 2d 70 72 6f       	push   0x6f72702d
      c5:	74 65                	je     12c <__abi_tag-0x250>
      c7:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
      cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      cc:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d666438 <_end+0x2d660420>
      d2:	70 72                	jo     146 <__abi_tag-0x236>
      d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      d5:	74 65                	je     13c <__abi_tag-0x240>
      d7:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
      db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      dc:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
      df:	5f                   	pop    rdi
      e0:	71 75                	jno    157 <__abi_tag-0x225>
      e2:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
      e9:	74 00                	je     eb <__abi_tag-0x291>
      eb:	5f                   	pop    rdi
      ec:	5a                   	pop    rdx
      ed:	53                   	push   rbx
      ee:	74 33                	je     123 <__abi_tag-0x259>
      f0:	61                   	(bad)
      f1:	62 73 78 00 5f       	(bad)
      f6:	5f                   	pop    rdi
      f7:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
      fe:	73 74                	jae    174 <__abi_tag-0x208>
     100:	72 74                	jb     176 <__abi_tag-0x206>
     102:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     103:	6c                   	ins    BYTE PTR es:[rdi],dx
     104:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
     107:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     108:	72 74                	jb     17e <__abi_tag-0x1fe>
     10a:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     10d:	74 00                	je     10f <__abi_tag-0x26d>
     10f:	62 73 65 61 72       	(bad)
     114:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     117:	61                   	(bad)
     118:	74 65                	je     17f <__abi_tag-0x1fd>
     11a:	78 69                	js     185 <__abi_tag-0x1f7>
     11c:	74 00                	je     11e <__abi_tag-0x25e>
     11e:	5f                   	pop    rdi
     11f:	5a                   	pop    rdx
     120:	53                   	push   rbx
     121:	74 33                	je     156 <__abi_tag-0x226>
     123:	64 69 76 6c 6c 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x6c],0x5f5f006c
     12a:	5f 
     12b:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     132:	73 74                	jae    1a8 <__abi_tag-0x1d4>
     134:	72 74                	jb     1aa <__abi_tag-0x1d2>
     136:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     137:	6c                   	ins    BYTE PTR es:[rdi],dx
     138:	6c                   	ins    BYTE PTR es:[rdi],dx
     139:	00 53 45             	add    BYTE PTR [rbx+0x45],dl
     13c:	41 52                	push   r10
     13e:	43                   	rex.XB
     13f:	48 5f                	rex.W pop rdi
     141:	45                   	rex.RB
     142:	4c                   	rex.WR
     143:	45                   	rex.RB
     144:	4d 53                	rex.WRB push r11
     146:	5f                   	pop    rdi
     147:	41                   	rex.B
     148:	4d                   	rex.WRB
     149:	4f 55                	rex.WRXB push r13
     14b:	4e 54                	rex.WRX push rsp
     14d:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
     150:	69 6e 00 5f 5f 75 69 	imul   ebp,DWORD PTR [rsi+0x0],0x69755f5f
     157:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     158:	74 33                	je     18d <__abi_tag-0x1ef>
     15a:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
     15d:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
     161:	74 5f                	je     1c2 <__abi_tag-0x1ba>
     163:	61                   	(bad)
     164:	6d                   	ins    DWORD PTR es:[rdi],dx
     165:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     166:	75 6e                	jne    1d6 <__abi_tag-0x1a6>
     168:	74 00                	je     16a <__abi_tag-0x212>
     16a:	67 65 74 65          	addr32 gs je 1d3 <__abi_tag-0x1a9>
     16e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     16f:	76 00                	jbe    171 <__abi_tag-0x20b>
     171:	59                   	pop    rcx
     172:	4d                   	rex.WRB
     173:	4d 5f                	rex.WRB pop r15
     175:	42 59                	rex.X pop rcx
     177:	54                   	push   rsp
     178:	45 53                	rex.RB push r11
     17a:	5f                   	pop    rdi
     17b:	53                   	push   rbx
     17c:	49 5a                	rex.WB pop r10
     17e:	45 00 66 6c          	add    BYTE PTR [r14+0x6c],r12b
     182:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     183:	61                   	(bad)
     184:	74 00                	je     186 <__abi_tag-0x1f6>
     186:	6d                   	ins    DWORD PTR es:[rdi],dx
     187:	62                   	(bad)
     188:	74 6f                	je     1f9 <__abi_tag-0x183>
     18a:	77 63                	ja     1ef <__abi_tag-0x18d>
     18c:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
     190:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
     195:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     199:	74 00                	je     19b <__abi_tag-0x1e1>
     19b:	6c                   	ins    BYTE PTR es:[rdi],dx
     19c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     19d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     19e:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
     1a3:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     1a7:	73 69                	jae    212 <__abi_tag-0x16a>
     1a9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1ab:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     1b0:	74 00                	je     1b2 <__abi_tag-0x1ca>
     1b2:	5f                   	pop    rdi
     1b3:	5a                   	pop    rdx
     1b4:	37                   	(bad)
     1b5:	74 65                	je     21c <__abi_tag-0x160>
     1b7:	73 74                	jae    22d <__abi_tag-0x14f>
     1b9:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
     1bb:	6c                   	ins    BYTE PTR es:[rdi],dx
     1bc:	50                   	push   rax
     1bd:	4b 63 6a 53          	rex.WXB movsxd rbp,DWORD PTR [r10+0x53]
     1c1:	30 5f 6a             	xor    BYTE PTR [rdi+0x6a],bl
     1c4:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     1c7:	72 74                	jb     23d <__abi_tag-0x13f>
     1c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1ca:	64 00 74 65 73       	add    BYTE PTR fs:[rbp+riz*2+0x73],dh
     1cf:	74 41                	je     212 <__abi_tag-0x16a>
     1d1:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d2:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d3:	00 37                	add    BYTE PTR [rdi],dh
     1d5:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d6:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d7:	64 69 76 5f 74 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x5a5f0074
     1de:	5a 
     1df:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     1e3:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1e5:	75 5f                	jne    246 <__abi_tag-0x136>
     1e7:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     1ea:	33 64 69 76          	xor    esp,DWORD PTR [rcx+rbp*2+0x76]
     1ee:	45 78 78             	rex.RB js 269 <__abi_tag-0x113>
     1f1:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     1f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1f5:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
     1f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1fa:	69 00 61 72 67 76    	imul   eax,DWORD PTR [rax],0x76677261
     200:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     203:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     204:	6c                   	ins    BYTE PTR es:[rdi],dx
     205:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
     208:	73 74                	jae    27e <__abi_tag-0xfe>
     20a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     20b:	6d                   	ins    DWORD PTR es:[rdi],dx
     20c:	62 73 00 5f 5f       	(bad)
     211:	69 6e 74 31 32 38 00 	imul   ebp,DWORD PTR [rsi+0x74],0x383231
     218:	6c                   	ins    BYTE PTR es:[rdi],dx
     219:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     21a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     21b:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
     220:	62 6c 65             	(bad)
     223:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
     226:	73 69                	jae    291 <__abi_tag-0xeb>
     228:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     22a:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     22f:	61                   	(bad)
     230:	72 00                	jb     232 <__abi_tag-0x14a>
     232:	61                   	(bad)
     233:	72 67                	jb     29c <__abi_tag-0xe0>
     235:	63 00                	movsxd eax,DWORD PTR [rax]
     237:	5f                   	pop    rdi
     238:	5f                   	pop    rdi
     239:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     23b:	75 5f                	jne    29c <__abi_tag-0xe0>
     23d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     240:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     243:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     24a:	73 74                	jae    2c0 <__abi_tag-0xbc>
     24c:	72 74                	jb     2c2 <__abi_tag-0xba>
     24e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     24f:	75 6c                	jne    2bd <__abi_tag-0xbf>
     251:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     254:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     255:	6c                   	ins    BYTE PTR es:[rdi],dx
     256:	6c                   	ins    BYTE PTR es:[rdi],dx
     257:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     25a:	6c                   	ins    BYTE PTR es:[rdi],dx
     25b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     25d:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     260:	73 74                	jae    2d6 <__abi_tag-0xa6>
     262:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     263:	77 63                	ja     2c8 <__abi_tag-0xb4>
     265:	73 00                	jae    267 <__abi_tag-0x115>
     267:	77 63                	ja     2cc <__abi_tag-0xb0>
     269:	74 6f                	je     2da <__abi_tag-0xa2>
     26b:	6d                   	ins    DWORD PTR es:[rdi],dx
     26c:	62                   	(bad)
     26d:	00 71 75             	add    BYTE PTR [rcx+0x75],dh
     270:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     271:	74 00                	je     273 <__abi_tag-0x109>
     273:	73 68                	jae    2dd <__abi_tag-0x9f>
     275:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     276:	72 74                	jb     2ec <__abi_tag-0x90>
     278:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     27b:	73 69                	jae    2e6 <__abi_tag-0x96>
     27d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     27f:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     284:	74 00                	je     286 <__abi_tag-0xf6>
     286:	77 63                	ja     2eb <__abi_tag-0x91>
     288:	68 61 72 5f 74       	push   0x745f7261
     28d:	00 4c 4f 41          	add    BYTE PTR [rdi+rcx*2+0x41],cl
     291:	44 5f                	rex.R pop rdi
     293:	46                   	rex.RX
     294:	41                   	rex.B
     295:	43 54                	rex.XB push r12
     297:	4f 52                	rex.WRXB push r10
     299:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
     29d:	74 5f                	je     2fe <__abi_tag-0x7e>
     29f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2a0:	61                   	(bad)
     2a1:	6d                   	ins    DWORD PTR es:[rdi],dx
     2a2:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
     2a6:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     2a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2a9:	61                   	(bad)
     2aa:	74 31                	je     2dd <__abi_tag-0x9f>
     2ac:	32 38                	xor    bh,BYTE PTR [rax]
     2ae:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     2b1:	72 74                	jb     327 <__abi_tag-0x55>
     2b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2b4:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     2b8:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     2bf:	73 74                	jae    335 <__abi_tag-0x47>
     2c1:	72 74                	jb     337 <__abi_tag-0x45>
     2c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2c4:	75 6c                	jne    332 <__abi_tag-0x4a>
     2c6:	6c                   	ins    BYTE PTR es:[rdi],dx
     2c7:	00 6c 6c 64          	add    BYTE PTR [rsp+rbp*2+0x64],ch
     2cb:	69 76 00 5f 5f 62 66 	imul   esi,DWORD PTR [rsi+0x0],0x66625f5f
     2d2:	31 36                	xor    DWORD PTR [rsi],esi
     2d4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2d7:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     2da:	70 61                	jo     33d <__abi_tag-0x3f>
     2dc:	72 5f                	jb     33d <__abi_tag-0x3f>
     2de:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
     2e0:	5f                   	pop    rdi
     2e1:	74 00                	je     2e3 <__abi_tag-0x99>
     2e3:	35 64 69 76 5f       	xor    eax,0x5f766964
     2e8:	74 00                	je     2ea <__abi_tag-0x92>
     2ea:	5f                   	pop    rdi
     2eb:	5f                   	pop    rdi
     2ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2ed:	70 74                	jo     363 <__abi_tag-0x19>
     2ef:	72 00                	jb     2f1 <__abi_tag-0x8b>
     2f1:	73 72                	jae    365 <__abi_tag-0x17>
     2f3:	61                   	(bad)
     2f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2f5:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     2f9:	53                   	push   rbx
     2fa:	74 33                	je     32f <__abi_tag-0x4d>
     2fc:	61                   	(bad)
     2fd:	62 73 64 00 5f       	(bad)
     302:	5a                   	pop    rdx
     303:	53                   	push   rbx
     304:	74 33                	je     339 <__abi_tag-0x43>
     306:	61                   	(bad)
     307:	62 73 65 00 5f       	(bad)
     30c:	5a                   	pop    rdx
     30d:	53                   	push   rbx
     30e:	74 33                	je     343 <__abi_tag-0x39>
     310:	61                   	(bad)
     311:	62 73 66 00 5f       	(bad)
     316:	5a                   	pop    rdx
     317:	53                   	push   rbx
     318:	74 33                	je     34d <__abi_tag-0x2f>
     31a:	61                   	(bad)
     31b:	62 73 67 00 75       	(bad)
     320:	69 6e 74 70 74 72 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f727470
     327:	74 00                	je     329 <__abi_tag-0x53>
     329:	5f                   	pop    rdi
     32a:	5a                   	pop    rdx
     32b:	31 33                	xor    DWORD PTR [rbx],esi
     32d:	5f                   	pop    rdi
     32e:	6d                   	ins    DWORD PTR es:[rdi],dx
     32f:	6d                   	ins    DWORD PTR es:[rdi],dx
     330:	5f                   	pop    rdi
     331:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     334:	33 32                	xor    esi,DWORD PTR [rdx]
     336:	5f                   	pop    rdi
     337:	75 36                	jne    36f <__abi_tag-0xd>
     339:	34 79                	xor    al,0x79
     33b:	79 00                	jns    33d <__abi_tag-0x3f>
     33d:	64 61                	fs (bad)
     33f:	74 61                	je     3a2 <__abi_tag+0x26>
     341:	5f                   	pop    rdi
     342:	74 00                	je     344 <__abi_tag-0x38>
     344:	68 61 73 68 4d       	push   0x4d687361
     349:	61                   	(bad)
     34a:	70 43                	jo     38f <__abi_tag+0x13>
     34c:	74 6f                	je     3bd <__abi_tag+0x41>
     34e:	72 00                	jb     350 <__abi_tag-0x2c>
     350:	77 6f                	ja     3c1 <__abi_tag+0x45>
     352:	72 64                	jb     3b8 <__abi_tag+0x3c>
     354:	5f                   	pop    rdi
     355:	62 65 67 69 6e       	(bad)
     35a:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
     35d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     35f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     361:	74 73                	je     3d6 <__abi_tag+0x5a>
     363:	5f                   	pop    rdi
     364:	61                   	(bad)
     365:	6d                   	ins    DWORD PTR es:[rdi],dx
     366:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     367:	75 6e                	jne    3d7 <__abi_tag+0x5b>
     369:	74 00                	je     36b <__abi_tag-0x11>
     36b:	5f                   	pop    rdi
     36c:	5f                   	pop    rdi
     36d:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     370:	5f                   	pop    rdi
     371:	5a                   	pop    rdx
     372:	31 36                	xor    DWORD PTR [rsi],esi
     374:	62 75 69 6c 64       	(bad)
     379:	53                   	push   rbx
     37a:	74 72                	je     3ee <__abi_tag+0x72>
     37c:	69 6e 67 41 72 72 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
     383:	79 50                	jns    3d5 <__abi_tag+0x59>
     385:	63 6a 00             	movsxd ebp,DWORD PTR [rdx+0x0]
     388:	61                   	(bad)
     389:	6c                   	ins    BYTE PTR es:[rdi],dx
     38a:	69 67 6e 65 64 5f 74 	imul   esp,DWORD PTR [rdi+0x6e],0x745f6465
     391:	65 78 74             	gs js  408 <__abi_tag+0x8c>
     394:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     397:	72 69                	jb     402 <__abi_tag+0x86>
     399:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     39a:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     39e:	73 72                	jae    412 <__abi_tag+0x96>
     3a0:	63 00                	movsxd eax,DWORD PTR [rax]
     3a2:	66 72 65             	data16 jb 40a <__abi_tag+0x8e>
     3a5:	65 00 68 61          	add    BYTE PTR gs:[rax+0x61],ch
     3a9:	73 68                	jae    413 <__abi_tag+0x97>
     3ab:	31 00                	xor    DWORD PTR [rax],eax
     3ad:	68 61 73 68 32       	push   0x32687361
     3b2:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     3b5:	73 68                	jae    41f <__abi_tag+0xa3>
     3b7:	33 00                	xor    eax,DWORD PTR [rax]
     3b9:	68 61 73 68 34       	push   0x34687361
     3be:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     3c1:	36 72 65             	ss jb  429 <__abi_tag+0xad>
     3c4:	73 69                	jae    42f <__abi_tag+0xb3>
     3c6:	7a 65                	jp     42d <__abi_tag+0xb1>
     3c8:	50                   	push   rax
     3c9:	37                   	(bad)
     3ca:	48 61                	rex.W (bad)
     3cc:	73 68                	jae    436 <__abi_tag+0xba>
     3ce:	4d 61                	rex.WRB (bad)
     3d0:	70 6a                	jo     43c <__abi_tag+0xc0>
     3d2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     3d5:	50                   	push   rax
     3d6:	52                   	push   rdx
     3d7:	45 54                	rex.RB push r12
     3d9:	54                   	push   rsp
     3da:	59                   	pop    rcx
     3db:	5f                   	pop    rdi
     3dc:	46 55                	rex.RX push rbp
     3de:	4e                   	rex.WRX
     3df:	43 54                	rex.XB push r12
     3e1:	49                   	rex.WB
     3e2:	4f                   	rex.WRXB
     3e3:	4e 5f                	rex.WRX pop rdi
     3e5:	5f                   	pop    rdi
     3e6:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
     3e9:	6d                   	ins    DWORD PTR es:[rdi],dx
     3ea:	5f                   	pop    rdi
     3eb:	65 78 74             	gs js  462 <__abi_tag+0xe6>
     3ee:	72 61                	jb     451 <__abi_tag+0xd5>
     3f0:	63 74 5f 65          	movsxd esi,DWORD PTR [rdi+rbx*2+0x65]
     3f4:	70 69                	jo     45f <__abi_tag+0xe3>
     3f6:	36 34 00             	ss xor al,0x0
     3f9:	68 61 73 68 4d       	push   0x4d687361
     3fe:	61                   	(bad)
     3ff:	70 41                	jo     442 <__abi_tag+0xc6>
     401:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     405:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     407:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     409:	74 00                	je     40b <__abi_tag+0x8f>
     40b:	5f                   	pop    rdi
     40c:	5f                   	pop    rdi
     40d:	70 72                	jo     481 <__abi_tag+0x105>
     40f:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
     416:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
     419:	6d                   	ins    DWORD PTR es:[rdi],dx
     41a:	6d                   	ins    DWORD PTR es:[rdi],dx
     41b:	32 35 36 5f 65 78    	xor    dh,BYTE PTR [rip+0x78655f36]        # 78656357 <_end+0x7865033f>
     421:	74 72                	je     495 <__abi_tag+0x119>
     423:	61                   	(bad)
     424:	63 74 66 31          	movsxd esi,DWORD PTR [rsi+riz*2+0x31]
     428:	32 38                	xor    bh,BYTE PTR [rax]
     42a:	5f                   	pop    rdi
     42b:	73 69                	jae    496 <__abi_tag+0x11a>
     42d:	32 35 36 00 70 6f    	xor    dh,BYTE PTR [rip+0x6f700036]        # 6f700469 <_end+0x6f6fa451>
     433:	70 4c                	jo     481 <__abi_tag+0x105>
     435:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     43c:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     43f:	73 68                	jae    4a9 <__abi_tag+0x12d>
     441:	5f                   	pop    rdi
     442:	66 75 6e             	data16 jne 4b3 <__abi_tag+0x137>
     445:	63 00                	movsxd eax,DWORD PTR [rax]
     447:	73 75                	jae    4be <__abi_tag+0x142>
     449:	70 70                	jo     4bb <__abi_tag+0x13f>
     44b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     44c:	73 65                	jae    4b3 <__abi_tag+0x137>
     44e:	64 5f                	fs pop rdi
     450:	69 6e 64 65 78 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007865
     457:	5a                   	pop    rdx
     458:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     45c:	74 44                	je     4a2 <__abi_tag+0x126>
     45e:	74 6f                	je     4cf <__abi_tag+0x153>
     460:	72 50                	jb     4b2 <__abi_tag+0x136>
     462:	34 4c                	xor    al,0x4c
     464:	69 73 74 00 5f 5f 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d5f5f00
     46b:	32 35 36 69 00 68    	xor    dh,BYTE PTR [rip+0x68006936]        # 68006da7 <_end+0x68000d8f>
     471:	61                   	(bad)
     472:	73 68                	jae    4dc <__abi_tag+0x160>
     474:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
     477:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     479:	5f                   	pop    rdi
     47a:	69 6e 78 00 5f 5f 6c 	imul   ebp,DWORD PTR [rsi+0x78],0x6c5f5f00
     481:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     483:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     486:	72 6e                	jb     4f6 <__abi_tag+0x17a>
     488:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     48b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     48e:	31 31                	xor    DWORD PTR [rcx],esi
     490:	68 61 73 68 4d       	push   0x4d687361
     495:	61                   	(bad)
     496:	70 44                	jo     4dc <__abi_tag+0x160>
     498:	74 6f                	je     509 <__abi_tag+0x18d>
     49a:	72 50                	jb     4ec <__abi_tag+0x170>
     49c:	37                   	(bad)
     49d:	48 61                	rex.W (bad)
     49f:	73 68                	jae    509 <__abi_tag+0x18d>
     4a1:	4d 61                	rex.WRB (bad)
     4a3:	70 00                	jo     4a5 <__abi_tag+0x129>
     4a5:	70 72                	jo     519 <__abi_tag+0x19d>
     4a7:	65 76 5f             	gs jbe 509 <__abi_tag+0x18d>
     4aa:	69 6e 78 00 6c 69 73 	imul   ebp,DWORD PTR [rsi+0x78],0x73696c00
     4b1:	74 44                	je     4f7 <__abi_tag+0x17b>
     4b3:	74 6f                	je     524 <__abi_tag+0x1a8>
     4b5:	72 00                	jb     4b7 <__abi_tag+0x13b>
     4b7:	5f                   	pop    rdi
     4b8:	5a                   	pop    rdx
     4b9:	31 37                	xor    DWORD PTR [rdi],esi
     4bb:	5f                   	pop    rdi
     4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
     4bd:	6d                   	ins    DWORD PTR es:[rdi],dx
     4be:	5f                   	pop    rdi
     4bf:	65 78 74             	gs js  536 <__abi_tag+0x1ba>
     4c2:	72 61                	jb     525 <__abi_tag+0x1a9>
     4c4:	63 74 5f 65          	movsxd esi,DWORD PTR [rdi+rbx*2+0x65]
     4c8:	70 69                	jo     533 <__abi_tag+0x1b7>
     4ca:	36 34 44             	ss xor al,0x44
     4cd:	76 32                	jbe    501 <__abi_tag+0x185>
     4cf:	5f                   	pop    rdi
     4d0:	78 69                	js     53b <__abi_tag+0x1bf>
     4d2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     4d5:	31 33                	xor    DWORD PTR [rbx],esi
     4d7:	67 65 74 4c          	addr32 gs je 527 <__abi_tag+0x1ab>
     4db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4dc:	61                   	(bad)
     4dd:	64 46 61             	fs rex.RX (bad)
     4e0:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     4e4:	50                   	push   rax
     4e5:	37                   	(bad)
     4e6:	48 61                	rex.W (bad)
     4e8:	73 68                	jae    552 <__abi_tag+0x1d6>
     4ea:	4d 61                	rex.WRB (bad)
     4ec:	70 00                	jo     4ee <__abi_tag+0x172>
     4ee:	67 65 74 4c          	addr32 gs je 53e <__abi_tag+0x1c2>
     4f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4f3:	61                   	(bad)
     4f4:	64 46 61             	fs rex.RX (bad)
     4f7:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     4fb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4fe:	62 75 69 6c 74       	(bad)
     503:	69 6e 5f 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x5f],0x656d5f5f
     50a:	6d                   	ins    DWORD PTR es:[rdi],dx
     50b:	73 65                	jae    572 <__abi_tag+0x1f6>
     50d:	74 5f                	je     56e <__abi_tag+0x1f2>
     50f:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     512:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
     516:	65 73 00             	gs jae 519 <__abi_tag+0x19d>
     519:	5f                   	pop    rdi
     51a:	5f                   	pop    rdi
     51b:	62 75 69 6c 74       	(bad)
     520:	69 6e 5f 5f 5f 73 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74735f5f
     527:	72 6e                	jb     597 <__abi_tag+0x21b>
     529:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     52c:	5f                   	pop    rdi
     52d:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     530:	00 62 6f             	add    BYTE PTR [rdx+0x6f],ah
     533:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     534:	6c                   	ins    BYTE PTR es:[rdi],dx
     535:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
     538:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
     53f:	6c                   	ins    BYTE PTR es:[rdi],dx
     540:	6c                   	ins    BYTE PTR es:[rdi],dx
     541:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     542:	63 00                	movsxd eax,DWORD PTR [rax]
     544:	6c                   	ins    BYTE PTR es:[rdi],dx
     545:	69 73 74 73 00 6c 69 	imul   esi,DWORD PTR [rbx+0x74],0x696c0073
     54c:	73 74                	jae    5c2 <__abi_tag+0x246>
     54e:	43 74 6f             	rex.XB je 5c0 <__abi_tag+0x244>
     551:	72 00                	jb     553 <__abi_tag+0x1d7>
     553:	5f                   	pop    rdi
     554:	5a                   	pop    rdx
     555:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     559:	74 43                	je     59e <__abi_tag+0x222>
     55b:	74 6f                	je     5cc <__abi_tag+0x250>
     55d:	72 76                	jb     5d5 <__abi_tag+0x259>
     55f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     562:	31 33                	xor    DWORD PTR [rbx],esi
     564:	73 65                	jae    5cb <__abi_tag+0x24f>
     566:	61                   	(bad)
     567:	72 63                	jb     5cc <__abi_tag+0x250>
     569:	68 45 6c 65 6d       	push   0x6d656c45
     56e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     570:	74 50                	je     5c2 <__abi_tag+0x246>
     572:	34 4c                	xor    al,0x4c
     574:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     57b:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     582:	5f                   	pop    rdi
     583:	64 65 73 74          	fs gs jae 5fb <__abi_tag+0x27f>
     587:	00 70 75             	add    BYTE PTR [rax+0x75],dh
     58a:	73 68                	jae    5f4 <__abi_tag+0x278>
     58c:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     593:	6d 
     594:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     597:	62 75 69 6c 74       	(bad)
     59c:	69 6e 5f 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x63727473
     5a3:	68 72 00 74 61       	push   0x61740072
     5a8:	69 6c 5f 69 6e 78 00 	imul   ebp,DWORD PTR [rdi+rbx*2+0x69],0x7300786e
     5af:	73 
     5b0:	65 61                	gs (bad)
     5b2:	72 63                	jb     617 <__abi_tag+0x29b>
     5b4:	68 45 6c 65 6d       	push   0x6d656c45
     5b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5bb:	74 00                	je     5bd <__abi_tag+0x241>
     5bd:	5f                   	pop    rdi
     5be:	5f                   	pop    rdi
     5bf:	75 69                	jne    62a <__abi_tag+0x2ae>
     5c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5c2:	74 36                	je     5fa <__abi_tag+0x27e>
     5c4:	34 5f                	xor    al,0x5f
     5c6:	74 00                	je     5c8 <__abi_tag+0x24c>
     5c8:	5f                   	pop    rdi
     5c9:	5a                   	pop    rdx
     5ca:	32 34 5f             	xor    dh,BYTE PTR [rdi+rbx*2]
     5cd:	6d                   	ins    DWORD PTR es:[rdi],dx
     5ce:	6d                   	ins    DWORD PTR es:[rdi],dx
     5cf:	32 35 36 5f 65 78    	xor    dh,BYTE PTR [rip+0x78655f36]        # 7865650b <_end+0x786504f3>
     5d5:	74 72                	je     649 <__abi_tag+0x2cd>
     5d7:	61                   	(bad)
     5d8:	63 74 66 31          	movsxd esi,DWORD PTR [rsi+riz*2+0x31]
     5dc:	32 38                	xor    bh,BYTE PTR [rax]
     5de:	5f                   	pop    rdi
     5df:	73 69                	jae    64a <__abi_tag+0x2ce>
     5e1:	32 35 36 44 76 34    	xor    dh,BYTE PTR [rip+0x34764436]        # 34764a1d <_end+0x3475ea05>
     5e7:	5f                   	pop    rdi
     5e8:	78 69                	js     653 <__abi_tag+0x2d7>
     5ea:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
     5ed:	77 5f                	ja     64e <__abi_tag+0x2d2>
     5ef:	68 61 73 68 4d       	push   0x4d687361
     5f4:	61                   	(bad)
     5f5:	70 00                	jo     5f7 <__abi_tag+0x27b>
     5f7:	72 65                	jb     65e <__abi_tag+0x2e2>
     5f9:	68 61 73 68 41       	push   0x41687361
     5fe:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     602:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     604:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     606:	74 00                	je     608 <__abi_tag+0x28c>
     608:	5f                   	pop    rdi
     609:	5f                   	pop    rdi
     60a:	61                   	(bad)
     60b:	73 73                	jae    680 <__abi_tag+0x304>
     60d:	65 72 74             	gs jb  684 <__abi_tag+0x308>
     610:	5f                   	pop    rdi
     611:	66 61                	data16 (bad)
     613:	69 6c 00 68 61 73 68 	imul   ebp,DWORD PTR [rax+rax*1+0x68],0x4d687361
     61a:	4d 
     61b:	61                   	(bad)
     61c:	70 53                	jo     671 <__abi_tag+0x2f5>
     61e:	65 61                	gs (bad)
     620:	72 63                	jb     685 <__abi_tag+0x309>
     622:	68 45 6c 65 6d       	push   0x6d656c45
     627:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     629:	74 00                	je     62b <__abi_tag+0x2af>
     62b:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     62e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     62f:	74 65                	je     696 <__abi_tag+0x31a>
     631:	72 00                	jb     633 <__abi_tag+0x2b7>
     633:	6c                   	ins    BYTE PTR es:[rdi],dx
     634:	69 73 74 5f 65 6c 65 	imul   esi,DWORD PTR [rbx+0x74],0x656c655f
     63b:	6d                   	ins    DWORD PTR es:[rdi],dx
     63c:	73 00                	jae    63e <__abi_tag+0x2c2>
     63e:	5f                   	pop    rdi
     63f:	5f                   	pop    rdi
     640:	76 38                	jbe    67a <__abi_tag+0x2fe>
     642:	73 69                	jae    6ad <__abi_tag+0x331>
     644:	00 6c 65 6e          	add    BYTE PTR [rbp+riz*2+0x6e],ch
     648:	67 74 68             	addr32 je 6b3 <__abi_tag+0x337>
     64b:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
     64e:	6d                   	ins    DWORD PTR es:[rdi],dx
     64f:	32 35 36 5f 65 78    	xor    dh,BYTE PTR [rip+0x78655f36]        # 7865658b <_end+0x78650573>
     655:	74 72                	je     6c9 <__abi_tag+0x34d>
     657:	61                   	(bad)
     658:	63 74 5f 65          	movsxd esi,DWORD PTR [rdi+rbx*2+0x65]
     65c:	70 69                	jo     6c7 <__abi_tag+0x34b>
     65e:	36 34 00             	ss xor al,0x0
     661:	5f                   	pop    rdi
     662:	5f                   	pop    rdi
     663:	76 32                	jbe    697 <__abi_tag+0x31b>
     665:	64 69 00 68 61 73 68 	imul   eax,DWORD PTR fs:[rax],0x68736168
     66c:	4d 61                	rex.WRB (bad)
     66e:	70 50                	jo     6c0 <__abi_tag+0x344>
     670:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     671:	70 45                	jo     6b8 <__abi_tag+0x33c>
     673:	6c                   	ins    BYTE PTR es:[rdi],dx
     674:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     676:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     678:	74 00                	je     67a <__abi_tag+0x2fe>
     67a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     67b:	65 78 74             	gs js  6f2 <__abi_tag+0x376>
     67e:	5f                   	pop    rdi
     67f:	69 6e 78 00 5f 5f 6d 	imul   ebp,DWORD PTR [rsi+0x78],0x6d5f5f00
     686:	31 32                	xor    DWORD PTR [rdx],esi
     688:	38 69 00             	cmp    BYTE PTR [rcx+0x0],ch
     68b:	5f                   	pop    rdi
     68c:	5a                   	pop    rdx
     68d:	31 31                	xor    DWORD PTR [rcx],esi
     68f:	68 61 73 68 4d       	push   0x4d687361
     694:	61                   	(bad)
     695:	70 43                	jo     6da <__abi_tag+0x35e>
     697:	74 6f                	je     708 <__abi_tag+0x38c>
     699:	72 50                	jb     6eb <__abi_tag+0x36f>
     69b:	46 6a 38             	rex.RX push 0x38
     69e:	73 74                	jae    714 <__abi_tag+0x398>
     6a0:	72 69                	jb     70b <__abi_tag+0x38f>
     6a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6a3:	67 5f                	addr32 pop rdi
     6a5:	74 45                	je     6ec <__abi_tag+0x370>
     6a7:	6a 00                	push   0x0
     6a9:	5f                   	pop    rdi
     6aa:	5f                   	pop    rdi
     6ab:	66 6d                	ins    WORD PTR es:[rdi],dx
     6ad:	74 00                	je     6af <__abi_tag+0x333>
     6af:	5f                   	pop    rdi
     6b0:	5a                   	pop    rdx
     6b1:	32 30                	xor    dh,BYTE PTR [rax]
     6b3:	5f                   	pop    rdi
     6b4:	6d                   	ins    DWORD PTR es:[rdi],dx
     6b5:	6d                   	ins    DWORD PTR es:[rdi],dx
     6b6:	32 35 36 5f 65 78    	xor    dh,BYTE PTR [rip+0x78655f36]        # 786565f2 <_end+0x786505da>
     6bc:	74 72                	je     730 <__abi_tag+0x3b4>
     6be:	61                   	(bad)
     6bf:	63 74 5f 65          	movsxd esi,DWORD PTR [rdi+rbx*2+0x65]
     6c3:	70 69                	jo     72e <__abi_tag+0x3b2>
     6c5:	36 34 44             	ss xor al,0x44
     6c8:	76 34                	jbe    6fe <__abi_tag+0x382>
     6ca:	5f                   	pop    rdi
     6cb:	78 69                	js     736 <__abi_tag+0x3ba>
     6cd:	00 62 75             	add    BYTE PTR [rdx+0x75],ah
     6d0:	69 6c 64 53 74 72 69 	imul   ebp,DWORD PTR [rsp+riz*2+0x53],0x6e697274
     6d7:	6e 
     6d8:	67 41 72 72          	addr32 rex.B jb 74e <__abi_tag+0x3d2>
     6dc:	61                   	(bad)
     6dd:	79 00                	jns    6df <__abi_tag+0x363>
     6df:	5f                   	pop    rdi
     6e0:	5a                   	pop    rdx
     6e1:	31 31                	xor    DWORD PTR [rcx],esi
     6e3:	70 6f                	jo     754 <__abi_tag+0x3d8>
     6e5:	70 4c                	jo     733 <__abi_tag+0x3b7>
     6e7:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     6ee:	50                   	push   rax
     6ef:	34 4c                	xor    al,0x4c
     6f1:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     6f8:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     6ff:	5a                   	pop    rdx
     700:	31 32                	xor    DWORD PTR [rdx],esi
     702:	70 75                	jo     779 <__abi_tag+0x3fd>
     704:	73 68                	jae    76e <__abi_tag+0x3f2>
     706:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     70d:	6d 
     70e:	50                   	push   rax
     70f:	34 4c                	xor    al,0x4c
     711:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     718:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     71f:	5f                   	pop    rdi
     720:	73 74                	jae    796 <__abi_tag+0x41a>
     722:	61                   	(bad)
     723:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     726:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     729:	5f                   	pop    rdi
     72a:	66 61                	data16 (bad)
     72c:	69 6c 00 63 61 6c 6c 	imul   ebp,DWORD PTR [rax+rax*1+0x63],0x6f6c6c61
     733:	6f 
     734:	63 00                	movsxd eax,DWORD PTR [rax]
     736:	5f                   	pop    rdi
     737:	5a                   	pop    rdx
     738:	32 30                	xor    dh,BYTE PTR [rax]
     73a:	68 61 73 68 4d       	push   0x4d687361
     73f:	61                   	(bad)
     740:	70 53                	jo     795 <__abi_tag+0x419>
     742:	65 61                	gs (bad)
     744:	72 63                	jb     7a9 <__abi_tag+0x42d>
     746:	68 45 6c 65 6d       	push   0x6d656c45
     74b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     74d:	74 50                	je     79f <__abi_tag+0x423>
     74f:	37                   	(bad)
     750:	48 61                	rex.W (bad)
     752:	73 68                	jae    7bc <__abi_tag+0x440>
     754:	4d 61                	rex.WRB (bad)
     756:	70 38                	jo     790 <__abi_tag+0x414>
     758:	73 74                	jae    7ce <__abi_tag+0x452>
     75a:	72 69                	jb     7c5 <__abi_tag+0x449>
     75c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     75d:	67 5f                	addr32 pop rdi
     75f:	74 00                	je     761 <__abi_tag+0x3e5>
     761:	73 74                	jae    7d7 <__abi_tag+0x45b>
     763:	72 69                	jb     7ce <__abi_tag+0x452>
     765:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     766:	67 5f                	addr32 pop rdi
     768:	61                   	(bad)
     769:	72 72                	jb     7dd <__abi_tag+0x461>
     76b:	61                   	(bad)
     76c:	79 00                	jns    76e <__abi_tag+0x3f2>
     76e:	5f                   	pop    rdi
     76f:	5a                   	pop    rdx
     770:	31 38                	xor    DWORD PTR [rax],edi
     772:	5f                   	pop    rdi
     773:	6d                   	ins    DWORD PTR es:[rdi],dx
     774:	6d                   	ins    DWORD PTR es:[rdi],dx
     775:	32 35 36 5f 6c 6f    	xor    dh,BYTE PTR [rip+0x6f6c5f36]        # 6f6c66b1 <_end+0x6f6c0699>
     77b:	61                   	(bad)
     77c:	64 75 5f             	fs jne 7de <__abi_tag+0x462>
     77f:	73 69                	jae    7ea <__abi_tag+0x46e>
     781:	32 35 36 50 4b 44    	xor    dh,BYTE PTR [rip+0x444b5036]        # 444b57bd <_end+0x444af7a5>
     787:	76 34                	jbe    7bd <__abi_tag+0x441>
     789:	5f                   	pop    rdi
     78a:	78 00                	js     78c <__abi_tag+0x410>
     78c:	5f                   	pop    rdi
     78d:	5a                   	pop    rdx
     78e:	31 37                	xor    DWORD PTR [rdi],esi
     790:	68 61 73 68 4d       	push   0x4d687361
     795:	61                   	(bad)
     796:	70 41                	jo     7d9 <__abi_tag+0x45d>
     798:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     79c:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     79e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     7a0:	74 50                	je     7f2 <__abi_tag+0x476>
     7a2:	37                   	(bad)
     7a3:	48 61                	rex.W (bad)
     7a5:	73 68                	jae    80f <__abi_tag+0x493>
     7a7:	4d 61                	rex.WRB (bad)
     7a9:	70 38                	jo     7e3 <__abi_tag+0x467>
     7ab:	73 74                	jae    821 <__abi_tag+0x4a5>
     7ad:	72 69                	jb     818 <__abi_tag+0x49c>
     7af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b0:	67 5f                	addr32 pop rdi
     7b2:	74 00                	je     7b4 <__abi_tag+0x438>
     7b4:	4c                   	rex.WR
     7b5:	49 53                	rex.WB push r11
     7b7:	54                   	push   rsp
     7b8:	5f                   	pop    rdi
     7b9:	42                   	rex.X
     7ba:	41 53                	push   r11
     7bc:	45 5f                	rex.RB pop r15
     7be:	43                   	rex.XB
     7bf:	41 50                	push   r8
     7c1:	41                   	rex.B
     7c2:	43                   	rex.XB
     7c3:	49 54                	rex.WB push r12
     7c5:	59                   	pop    rcx
     7c6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     7c9:	31 37                	xor    DWORD PTR [rdi],esi
     7cb:	68 61 73 68 4d       	push   0x4d687361
     7d0:	61                   	(bad)
     7d1:	70 50                	jo     823 <__abi_tag+0x4a7>
     7d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7d4:	70 45                	jo     81b <__abi_tag+0x49f>
     7d6:	6c                   	ins    BYTE PTR es:[rdi],dx
     7d7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     7d9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     7db:	74 50                	je     82d <__abi_tag+0x4b1>
     7dd:	37                   	(bad)
     7de:	48 61                	rex.W (bad)
     7e0:	73 68                	jae    84a <__abi_tag+0x4ce>
     7e2:	4d 61                	rex.WRB (bad)
     7e4:	70 38                	jo     81e <__abi_tag+0x4a2>
     7e6:	73 74                	jae    85c <__abi_tag+0x4e0>
     7e8:	72 69                	jb     853 <__abi_tag+0x4d7>
     7ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7eb:	67 5f                	addr32 pop rdi
     7ed:	74 00                	je     7ef <__abi_tag+0x473>
     7ef:	5f                   	pop    rdi
     7f0:	6d                   	ins    DWORD PTR es:[rdi],dx
     7f1:	6d                   	ins    DWORD PTR es:[rdi],dx
     7f2:	32 35 36 5f 6c 6f    	xor    dh,BYTE PTR [rip+0x6f6c5f36]        # 6f6c672e <_end+0x6f6c0716>
     7f8:	61                   	(bad)
     7f9:	64 75 5f             	fs jne 85b <__abi_tag+0x4df>
     7fc:	73 69                	jae    867 <__abi_tag+0x4eb>
     7fe:	32 35 36 00 5f 5f    	xor    dh,BYTE PTR [rip+0x5f5f0036]        # 5f5f083a <_end+0x5f5ea822>
     804:	6d                   	ins    DWORD PTR es:[rdi],dx
     805:	32 35 36 69 5f 75    	xor    dh,BYTE PTR [rip+0x755f6936]        # 755f7141 <_end+0x755f1129>
     80b:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     80e:	73 68                	jae    878 <__abi_tag+0x4fc>
     810:	4d 61                	rex.WRB (bad)
     812:	70 44                	jo     858 <__abi_tag+0x4dc>
     814:	74 6f                	je     885 <__abi_tag+0x509>
     816:	72 00                	jb     818 <__abi_tag+0x49c>
     818:	6c                   	ins    BYTE PTR es:[rdi],dx
     819:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     81a:	61                   	(bad)
     81b:	64 5f                	fs pop rdi
     81d:	66 61                	data16 (bad)
     81f:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     823:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
     826:	77 5f                	ja     887 <__abi_tag+0x50b>
     828:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
     82b:	61                   	(bad)
     82c:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
     82f:	79 00                	jns    831 <__abi_tag+0x4b5>
     831:	72 65                	jb     898 <__abi_tag+0x51c>
     833:	73 69                	jae    89e <__abi_tag+0x522>
     835:	7a 65                	jp     89c <__abi_tag+0x520>
     837:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
     83a:	6d                   	ins    DWORD PTR es:[rdi],dx
     83b:	5f                   	pop    rdi
     83c:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     83f:	33 32                	xor    esi,DWORD PTR [rdx]
     841:	5f                   	pop    rdi
     842:	75 36                	jne    87a <__abi_tag+0x4fe>
     844:	34 00                	xor    al,0x0
     846:	68 61 73 68 5f       	push   0x5f687361
     84b:	74 00                	je     84d <__abi_tag+0x4d1>
     84d:	5f                   	pop    rdi
     84e:	5f                   	pop    rdi
     84f:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
     856:	75 6e                	jne    8c6 <__abi_tag+0x54a>
     858:	73 69                	jae    8c3 <__abi_tag+0x547>
     85a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     85c:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
     861:	31 39                	xor    DWORD PTR [rcx],edi
     863:	5f                   	pop    rdi
     864:	6d                   	ins    DWORD PTR es:[rdi],dx
     865:	6d                   	ins    DWORD PTR es:[rdi],dx
     866:	5f                   	pop    rdi
     867:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     86a:	33 32                	xor    esi,DWORD PTR [rdx]
     86c:	48 61                	rex.W (bad)
     86e:	73 68                	jae    8d8 <__abi_tag+0x55c>
     870:	53                   	push   rbx
     871:	74 72                	je     8e5 <__abi_tag+0x569>
     873:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     87a:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     881:	5a                   	pop    rdx
     882:	31 35 63 72 63 33    	xor    DWORD PTR [rip+0x33637263],esi        # 33637aeb <_end+0x33631ad3>
     888:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     88b:	73 68                	jae    8f5 <__abi_tag+0x579>
     88d:	53                   	push   rbx
     88e:	74 72                	je     902 <__abi_tag+0x586>
     890:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     897:	69 6e 67 5f 74 00 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d00745f
     89e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     89f:	64 5f                	fs pop rdi
     8a1:	61                   	(bad)
     8a2:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     8a4:	65 72 00             	gs jb  8a7 <__abi_tag+0x52b>
     8a7:	5f                   	pop    rdi
     8a8:	5a                   	pop    rdx
     8a9:	32 35 5f 6d 6d 5f    	xor    dh,BYTE PTR [rip+0x5f6d6d5f]        # 5f6d760e <_end+0x5f6d15f6>
     8af:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     8b2:	33 32                	xor    esi,DWORD PTR [rdx]
     8b4:	55                   	push   rbp
     8b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     8b6:	72 6f                	jb     927 <__abi_tag+0x5ab>
     8b8:	6c                   	ins    BYTE PTR es:[rdi],dx
     8b9:	6c                   	ins    BYTE PTR es:[rdi],dx
     8ba:	48 61                	rex.W (bad)
     8bc:	73 68                	jae    926 <__abi_tag+0x5aa>
     8be:	53                   	push   rbx
     8bf:	74 72                	je     933 <__abi_tag+0x5b7>
     8c1:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     8c8:	69 6e 67 5f 74 00 61 	imul   ebp,DWORD PTR [rsi+0x67],0x6100745f
     8cf:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     8d1:	65 72 33             	gs jb  907 <__abi_tag+0x58b>
     8d4:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     8d7:	73 68                	jae    941 <__abi_tag+0x5c5>
     8d9:	53                   	push   rbx
     8da:	74 72                	je     94e <__abi_tag+0x5d2>
     8dc:	69 6e 67 00 5f 6d 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d6d5f00
     8e3:	5f                   	pop    rdi
     8e4:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     8e7:	33 32                	xor    esi,DWORD PTR [rdx]
     8e9:	48 61                	rex.W (bad)
     8eb:	73 68                	jae    955 <__abi_tag+0x5d9>
     8ed:	53                   	push   rbx
     8ee:	74 72                	je     962 <__abi_tag+0x5e6>
     8f0:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     8f7:	37                   	(bad)
     8f8:	6d                   	ins    DWORD PTR es:[rdi],dx
     8f9:	75 72                	jne    96d <__abi_tag+0x5f1>
     8fb:	6d                   	ins    DWORD PTR es:[rdi],dx
     8fc:	75 72                	jne    970 <__abi_tag+0x5f4>
     8fe:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     901:	73 68                	jae    96b <__abi_tag+0x5ef>
     903:	53                   	push   rbx
     904:	74 72                	je     978 <__abi_tag+0x5fc>
     906:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     90d:	69 6e 67 5f 74 00 68 	imul   ebp,DWORD PTR [rsi+0x67],0x6800745f
     914:	69 67 68 00 5f 6d 6d 	imul   esp,DWORD PTR [rdi+0x68],0x6d6d5f00
     91b:	5f                   	pop    rdi
     91c:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     91f:	33 32                	xor    esi,DWORD PTR [rdx]
     921:	55                   	push   rbp
     922:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     923:	72 6f                	jb     994 <__abi_tag+0x618>
     925:	6c                   	ins    BYTE PTR es:[rdi],dx
     926:	6c                   	ins    BYTE PTR es:[rdi],dx
     927:	48 61                	rex.W (bad)
     929:	73 68                	jae    993 <__abi_tag+0x617>
     92b:	53                   	push   rbx
     92c:	74 72                	je     9a0 <__abi_tag+0x624>
     92e:	69 6e 67 00 73 75 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d757300
     935:	48 61                	rex.W (bad)
     937:	73 68                	jae    9a1 <__abi_tag+0x625>
     939:	53                   	push   rbx
     93a:	74 72                	je     9ae <__abi_tag+0x632>
     93c:	69 6e 67 00 65 6c 66 	imul   ebp,DWORD PTR [rsi+0x67],0x666c6500
     943:	48 61                	rex.W (bad)
     945:	73 68                	jae    9af <__abi_tag+0x633>
     947:	53                   	push   rbx
     948:	74 72                	je     9bc <__abi_tag+0x640>
     94a:	69 6e 67 00 6d 75 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72756d00
     951:	6d                   	ins    DWORD PTR es:[rdi],dx
     952:	75 72                	jne    9c6 <__abi_tag+0x64a>
     954:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     957:	73 68                	jae    9c1 <__abi_tag+0x645>
     959:	53                   	push   rbx
     95a:	74 72                	je     9ce <__abi_tag+0x652>
     95c:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     963:	33 65 6c             	xor    esp,DWORD PTR [rbp+0x6c]
     966:	66 48 61             	data16 rex.W (bad)
     969:	73 68                	jae    9d3 <__abi_tag+0x657>
     96b:	53                   	push   rbx
     96c:	74 72                	je     9e0 <__abi_tag+0x664>
     96e:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     975:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     97c:	5a                   	pop    rdx
     97d:	31 37                	xor    DWORD PTR [rdi],esi
     97f:	61                   	(bad)
     980:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     982:	65 72 33             	gs jb  9b8 <__abi_tag+0x63c>
     985:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     988:	73 68                	jae    9f2 <__abi_tag+0x676>
     98a:	53                   	push   rbx
     98b:	74 72                	je     9ff <__abi_tag+0x683>
     98d:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     994:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     99b:	5a                   	pop    rdx
     99c:	31 33                	xor    DWORD PTR [rbx],esi
     99e:	73 75                	jae    a15 <__abi_tag+0x699>
     9a0:	6d                   	ins    DWORD PTR es:[rdi],dx
     9a1:	48 61                	rex.W (bad)
     9a3:	73 68                	jae    a0d <__abi_tag+0x691>
     9a5:	53                   	push   rbx
     9a6:	74 72                	je     a1a <__abi_tag+0x69e>
     9a8:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     9af:	69 6e 67 5f 74 00 6f 	imul   ebp,DWORD PTR [rsi+0x67],0x6f00745f
     9b6:	6c                   	ins    BYTE PTR es:[rdi],dx
     9b7:	64 5f                	fs pop rdi
     9b9:	6c                   	ins    BYTE PTR es:[rdi],dx
     9ba:	61                   	(bad)
     9bb:	73 74                	jae    a31 <__abi_tag+0x6b5>
     9bd:	5f                   	pop    rdi
     9be:	69 6e 78 00 72 65 73 	imul   ebp,DWORD PTR [rsi+0x78],0x73657200
     9c5:	75 6c                	jne    a33 <__abi_tag+0x6b7>
     9c7:	74 00                	je     9c9 <__abi_tag+0x64d>
     9c9:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
     9cc:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     9d3:	6d 
     9d4:	73 00                	jae    9d6 <__abi_tag+0x65a>
     9d6:	72 65                	jb     a3d <__abi_tag+0x6c1>
     9d8:	61                   	(bad)
     9d9:	6c                   	ins    BYTE PTR es:[rdi],dx
     9da:	6c                   	ins    BYTE PTR es:[rdi],dx
     9db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9dc:	63 00                	movsxd eax,DWORD PTR [rax]
     9de:	72 65                	jb     a45 <__abi_tag+0x6c9>
     9e0:	73 69                	jae    a4b <__abi_tag+0x6cf>
     9e2:	7a 65                	jp     a49 <__abi_tag+0x6cd>
     9e4:	55                   	push   rbp
     9e5:	70 00                	jo     9e7 <__abi_tag+0x66b>
     9e7:	64 61                	fs (bad)
     9e9:	74 61                	je     a4c <__abi_tag+0x6d0>
     9eb:	31 00                	xor    DWORD PTR [rax],eax
     9ed:	64 61                	fs (bad)
     9ef:	74 61                	je     a52 <__abi_tag+0x6d6>
     9f1:	32 00                	xor    al,BYTE PTR [rax]
     9f3:	5f                   	pop    rdi
     9f4:	5f                   	pop    rdi
     9f5:	67 69 64 5f 74 00 73 	imul   esp,DWORD PTR [edi+ebx*2+0x74],0x5f747300
     9fc:	74 5f 
     9fe:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     a02:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a05:	72 65                	jb     a6c <__abi_tag+0x6f0>
     a07:	61                   	(bad)
     a08:	64 5f                	fs pop rdi
     a0a:	61                   	(bad)
     a0b:	6c                   	ins    BYTE PTR es:[rdi],dx
     a0c:	69 61 73 00 5f 5f 70 	imul   esp,DWORD PTR [rcx+0x73],0x705f5f00
     a13:	61                   	(bad)
     a14:	74 68                	je     a7e <__abi_tag+0x702>
     a16:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     a19:	31 30                	xor    DWORD PTR [rax],esi
     a1b:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     a1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a1f:	74 4c                	je     a6d <__abi_tag+0x6f1>
     a21:	69 6e 65 73 50 63 6d 	imul   ebp,DWORD PTR [rsi+0x65],0x6d635073
     a28:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     a2b:	61                   	(bad)
     a2c:	64 46 69 6c 65 00 5f 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x72385a5f
     a33:	5a 38 72 
     a36:	65 61                	gs (bad)
     a38:	64 46 69 6c 65 50 4b 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x50],0x6d50634b
     a3f:	63 50 6d 
     a42:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a46:	70 65                	jo     aad <__abi_tag+0x731>
     a48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a49:	5f                   	pop    rdi
     a4a:	74 6f                	je     abb <__abi_tag+0x73f>
     a4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a4d:	5f                   	pop    rdi
     a4e:	6d                   	ins    DWORD PTR es:[rdi],dx
     a4f:	61                   	(bad)
     a50:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a51:	79 5f                	jns    ab2 <__abi_tag+0x736>
     a53:	61                   	(bad)
     a54:	72 67                	jb     abd <__abi_tag+0x741>
     a56:	73 00                	jae    a58 <__abi_tag+0x6dc>
     a58:	5f                   	pop    rdi
     a59:	5f                   	pop    rdi
     a5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a5b:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     a5d:	61                   	(bad)
     a5e:	67 00 73 74          	add    BYTE PTR [ebx+0x74],dh
     a62:	5f                   	pop    rdi
     a63:	69 6e 6f 00 5f 5f 6d 	imul   ebp,DWORD PTR [rsi+0x6f],0x6d5f5f00
     a6a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a6b:	64 65 5f             	fs gs pop rdi
     a6e:	74 00                	je     a70 <__abi_tag+0x6f4>
     a70:	5f                   	pop    rdi
     a71:	5f                   	pop    rdi
     a72:	62 6c 6b             	(bad)  {k3}
     a75:	63 6e 74             	movsxd ebp,DWORD PTR [rsi+0x74]
     a78:	5f                   	pop    rdi
     a79:	74 00                	je     a7b <__abi_tag+0x6ff>
     a7b:	5f                   	pop    rdi
     a7c:	5f                   	pop    rdi
     a7d:	73 73                	jae    af2 <__abi_tag+0x776>
     a7f:	69 7a 65 5f 74 00 64 	imul   edi,DWORD PTR [rdx+0x65],0x6400745f
     a86:	75 6d                	jne    af5 <__abi_tag+0x779>
     a88:	6d                   	ins    DWORD PTR es:[rdi],dx
     a89:	79 00                	jns    a8b <__abi_tag+0x70f>
     a8b:	73 74                	jae    b01 <__abi_tag+0x785>
     a8d:	5f                   	pop    rdi
     a8e:	62 6c 6f             	(bad)  {k3}
     a91:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
     a94:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a97:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a98:	62 79 74 65 73       	(bad)
     a9d:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     aa0:	5f                   	pop    rdi
     aa1:	75 69                	jne    b0c <__abi_tag+0x790>
     aa3:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     aa7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     aa8:	70 65                	jo     b0f <__abi_tag+0x793>
     aaa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aab:	5f                   	pop    rdi
     aac:	6d                   	ins    DWORD PTR es:[rdi],dx
     aad:	69 73 73 69 6e 67 5f 	imul   esi,DWORD PTR [rbx+0x73],0x5f676e69
     ab4:	6d                   	ins    DWORD PTR es:[rdi],dx
     ab5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ab6:	64 65 00 5f 5f       	fs add BYTE PTR gs:[rdi+0x5f],bl
     abb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     abc:	6c                   	ins    BYTE PTR es:[rdi],dx
     abd:	69 6e 6b 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f00745f
     ac4:	5f                   	pop    rdi
     ac5:	72 65                	jb     b2c <__abi_tag+0x7b0>
     ac7:	61                   	(bad)
     ac8:	64 5f                	fs pop rdi
     aca:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     acd:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     ad0:	75 6e                	jne    b40 <__abi_tag+0x7c4>
     ad2:	74 4c                	je     b20 <__abi_tag+0x7a4>
     ad4:	69 6e 65 73 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f0073
     adb:	66 64 00 73 74       	data16 add BYTE PTR fs:[rbx+0x74],dh
     ae0:	5f                   	pop    rdi
     ae1:	73 69                	jae    b4c <__abi_tag+0x7d0>
     ae3:	7a 65                	jp     b4a <__abi_tag+0x7ce>
     ae5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ae8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ae9:	70 65                	jo     b50 <__abi_tag+0x7d4>
     aeb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aec:	5f                   	pop    rdi
     aed:	32 00                	xor    al,BYTE PTR [rax]
     aef:	73 74                	jae    b65 <__abi_tag+0x7e9>
     af1:	5f                   	pop    rdi
     af2:	6d                   	ins    DWORD PTR es:[rdi],dx
     af3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     af4:	64 65 00 73 74       	fs add BYTE PTR gs:[rbx+0x74],dh
     af9:	5f                   	pop    rdi
     afa:	61                   	(bad)
     afb:	74 69                	je     b66 <__abi_tag+0x7ea>
     afd:	6d                   	ins    DWORD PTR es:[rdi],dx
     afe:	00 74 76 5f          	add    BYTE PTR [rsi+rsi*2+0x5f],dh
     b02:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b03:	73 65                	jae    b6a <__abi_tag+0x7ee>
     b05:	63 00                	movsxd eax,DWORD PTR [rax]
     b07:	5f                   	pop    rdi
     b08:	5f                   	pop    rdi
     b09:	64 65 76 5f          	fs gs jbe b6c <__abi_tag+0x7f0>
     b0d:	74 00                	je     b0f <__abi_tag+0x793>
     b0f:	74 76                	je     b87 <__abi_tag+0x80b>
     b11:	5f                   	pop    rdi
     b12:	73 65                	jae    b79 <__abi_tag+0x7fd>
     b14:	63 00                	movsxd eax,DWORD PTR [rax]
     b16:	5f                   	pop    rdi
     b17:	5f                   	pop    rdi
     b18:	73 79                	jae    b93 <__abi_tag+0x817>
     b1a:	73 63                	jae    b7f <__abi_tag+0x803>
     b1c:	61                   	(bad)
     b1d:	6c                   	ins    BYTE PTR es:[rdi],dx
     b1e:	6c                   	ins    BYTE PTR es:[rdi],dx
     b1f:	5f                   	pop    rdi
     b20:	73 6c                	jae    b8e <__abi_tag+0x812>
     b22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b24:	67 5f                	addr32 pop rdi
     b26:	74 00                	je     b28 <__abi_tag+0x7ac>
     b28:	66 69 6c 65 5f 73 74 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7473
     b2f:	61                   	(bad)
     b30:	74 00                	je     b32 <__abi_tag+0x7b6>
     b32:	5f                   	pop    rdi
     b33:	5f                   	pop    rdi
     b34:	62                   	(bad)
     b35:	6c                   	ins    BYTE PTR es:[rdi],dx
     b36:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     b3a:	65 5f                	gs pop rdi
     b3c:	74 00                	je     b3e <__abi_tag+0x7c2>
     b3e:	5f                   	pop    rdi
     b3f:	5f                   	pop    rdi
     b40:	62 75 66 00 5f 5f 70 	vmaxsh xmm11,xmm19,WORD PTR [rdi+0xe0]
     b47:	61                   	(bad)
     b48:	64 30 00             	xor    BYTE PTR fs:[rax],al
     b4b:	5f                   	pop    rdi
     b4c:	5f                   	pop    rdi
     b4d:	67 6c                	ins    BYTE PTR es:[edi],dx
     b4f:	69 62 63 5f 72 65 73 	imul   esp,DWORD PTR [rdx+0x63],0x7365725f
     b56:	65 72 76             	gs jb  bcf <__abi_tag+0x853>
     b59:	65 64 00 73 74       	gs add BYTE PTR fs:[rbx+0x74],dh
     b5e:	5f                   	pop    rdi
     b5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b60:	6c                   	ins    BYTE PTR es:[rdi],dx
     b61:	69 6e 6b 00 73 74 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f747300
     b68:	62                   	(bad)
     b69:	6c                   	ins    BYTE PTR es:[rdi],dx
     b6a:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     b6e:	65 00 74 69 6d       	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
     b73:	65 73 70             	gs jae be6 <__abi_tag+0x86a>
     b76:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
     b79:	5f                   	pop    rdi
     b7a:	5f                   	pop    rdi
     b7b:	69 6e 6f 5f 74 00 66 	imul   ebp,DWORD PTR [rsi+0x6f],0x6600745f
     b82:	69 6c 65 5f 64 65 73 	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
     b89:	63 
     b8a:	72 00                	jb     b8c <__abi_tag+0x810>
     b8c:	73 74                	jae    c02 <__abi_tag+0x886>
     b8e:	5f                   	pop    rdi
     b8f:	72 64                	jb     bf5 <__abi_tag+0x879>
     b91:	65 76 00             	gs jbe b94 <__abi_tag+0x818>
     b94:	5f                   	pop    rdi
     b95:	5f                   	pop    rdi
     b96:	75 69                	jne    c01 <__abi_tag+0x885>
     b98:	64 5f                	fs pop rdi
     b9a:	74 00                	je     b9c <__abi_tag+0x820>
     b9c:	73 74                	jae    c12 <__abi_tag+0x896>
     b9e:	5f                   	pop    rdi
     b9f:	67 69 64 00 5f 5f 74 	imul   esp,DWORD PTR [eax+eax*1+0x5f],0x6d69745f
     ba6:	69 6d 
     ba8:	65 5f                	gs pop rdi
     baa:	74 00                	je     bac <__abi_tag+0x830>
     bac:	5f                   	pop    rdi
     bad:	5f                   	pop    rdi
     bae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     baf:	66 66 5f             	data16 pop di
     bb2:	74 00                	je     bb4 <__abi_tag+0x838>
     bb4:	73 74                	jae    c2a <__abi_tag+0x8ae>
     bb6:	5f                   	pop    rdi
     bb7:	64 65 76 00          	fs gs jbe bbb <__abi_tag+0x83f>
     bbb:	5f                   	pop    rdi
     bbc:	5f                   	pop    rdi
     bbd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bbe:	70 65                	jo     c25 <__abi_tag+0x8a9>
     bc0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bc1:	5f                   	pop    rdi
     bc2:	61                   	(bad)
     bc3:	6c                   	ins    BYTE PTR es:[rdi],dx
     bc4:	69 61 73 00 6e 65 77 	imul   esp,DWORD PTR [rcx+0x73],0x77656e00
     bcb:	5f                   	pop    rdi
     bcc:	74 65                	je     c33 <__abi_tag+0x8b7>
     bce:	78 74                	js     c44 <__abi_tag+0x8c8>
     bd0:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     bd3:	5f                   	pop    rdi
     bd4:	6d                   	ins    DWORD PTR es:[rdi],dx
     bd5:	74 69                	je     c40 <__abi_tag+0x8c4>
     bd7:	6d                   	ins    DWORD PTR es:[rdi],dx
     bd8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     bdb:	72 65                	jb     c42 <__abi_tag+0x8c6>
     bdd:	61                   	(bad)
     bde:	64 5f                	fs pop rdi
     be0:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     be3:	5f                   	pop    rdi
     be4:	77 61                	ja     c47 <__abi_tag+0x8cb>
     be6:	72 6e                	jb     c56 <__abi_tag+0x8da>
     be8:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
     beb:	6c                   	ins    BYTE PTR es:[rdi],dx
     bec:	65 5f                	gs pop rdi
     bee:	73 69                	jae    c59 <__abi_tag+0x8dd>
     bf0:	7a 65                	jp     c57 <__abi_tag+0x8db>
     bf2:	00 66 64             	add    BYTE PTR [rsi+0x64],ah
     bf5:	69 6d 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rbp+0x0],0x74535a5f
     bfc:	34 66                	xor    al,0x66
     bfe:	6d                   	ins    DWORD PTR es:[rdi],dx
     bff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c00:	64 65 65 00 5f 5a    	fs gs add BYTE PTR gs:[rdi+0x5a],bl
     c06:	4e 53                	rex.WRX push rbx
     c08:	74 36                	je     c40 <__abi_tag+0x8c4>
     c0a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c0d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c0e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c10:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     c14:	61                   	(bad)
     c15:	74 69                	je     c80 <__abi_tag+0x904>
     c17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c19:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     c1b:	53                   	push   rbx
     c1c:	74 35                	je     c53 <__abi_tag+0x8d7>
     c1e:	72 61                	jb     c81 <__abi_tag+0x905>
     c20:	74 69                	je     c8b <__abi_tag+0x90f>
     c22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c23:	49                   	rex.WB
     c24:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     c26:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     c29:	6c                   	ins    BYTE PTR es:[rdi],dx
     c2a:	31 30                	xor    DWORD PTR [rax],esi
     c2c:	30 30                	xor    BYTE PTR [rax],dh
     c2e:	30 30                	xor    BYTE PTR [rax],dh
     c30:	30 30                	xor    BYTE PTR [rax],dh
     c32:	30 30                	xor    BYTE PTR [rax],dh
     c34:	45                   	rex.RB
     c35:	45                   	rex.RB
     c36:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     c38:	6d                   	ins    DWORD PTR es:[rdi],dx
     c39:	45 76 00             	rex.RB jbe c3c <__abi_tag+0x8c0>
     c3c:	66 67 65 74 63       	data16 addr32 gs je ca4 <__abi_tag+0x928>
     c41:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     c44:	53                   	push   rbx
     c45:	74 36                	je     c7d <__abi_tag+0x901>
     c47:	73 63                	jae    cac <__abi_tag+0x930>
     c49:	61                   	(bad)
     c4a:	6c                   	ins    BYTE PTR es:[rdi],dx
     c4b:	62 6e 66 69 00       	(bad)
     c50:	5f                   	pop    rdi
     c51:	5a                   	pop    rdx
     c52:	53                   	push   rbx
     c53:	74 37                	je     c8c <__abi_tag+0x910>
     c55:	73 69                	jae    cc0 <__abi_tag+0x944>
     c57:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c59:	62 69 74 64 00       	(bad)
     c5e:	5f                   	pop    rdi
     c5f:	5a                   	pop    rdx
     c60:	53                   	push   rbx
     c61:	74 37                	je     c9a <__abi_tag+0x91e>
     c63:	73 69                	jae    cce <__abi_tag+0x952>
     c65:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c67:	62 69 74 66 00       	(bad)
     c6c:	5f                   	pop    rdi
     c6d:	5a                   	pop    rdx
     c6e:	4e 53                	rex.WRX push rbx
     c70:	74 36                	je     ca8 <__abi_tag+0x92c>
     c72:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c75:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c76:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c78:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     c7c:	61                   	(bad)
     c7d:	74 69                	je     ce8 <__abi_tag+0x96c>
     c7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c81:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     c83:	53                   	push   rbx
     c84:	74 35                	je     cbb <__abi_tag+0x93f>
     c86:	72 61                	jb     ce9 <__abi_tag+0x96d>
     c88:	74 69                	je     cf3 <__abi_tag+0x977>
     c8a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c8b:	49                   	rex.WB
     c8c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     c8e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     c91:	6c                   	ins    BYTE PTR es:[rdi],dx
     c92:	31 30                	xor    DWORD PTR [rax],esi
     c94:	30 30                	xor    BYTE PTR [rax],dh
     c96:	30 30                	xor    BYTE PTR [rax],dh
     c98:	30 30                	xor    BYTE PTR [rax],dh
     c9a:	30 30                	xor    BYTE PTR [rax],dh
     c9c:	45                   	rex.RB
     c9d:	45                   	rex.RB
     c9e:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
     ca2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ca3:	45 76 00             	rex.RB jbe ca6 <__abi_tag+0x92a>
     ca6:	66 67 65 74 73       	data16 addr32 gs je d1e <__abi_tag+0x9a2>
     cab:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
     caf:	68 6f 75 72 00       	push   0x72756f
     cb4:	5f                   	pop    rdi
     cb5:	5f                   	pop    rdi
     cb6:	76 61                	jbe    d19 <__abi_tag+0x99d>
     cb8:	6c                   	ins    BYTE PTR es:[rdi],dx
     cb9:	75 65                	jne    d20 <__abi_tag+0x9a4>
     cbb:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
     cbe:	6c                   	ins    BYTE PTR es:[rdi],dx
     cbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cc0:	61                   	(bad)
     cc1:	74 36                	je     cf9 <__abi_tag+0x97d>
     cc3:	34 78                	xor    al,0x78
     cc5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     cc8:	53                   	push   rbx
     cc9:	74 34                	je     cff <__abi_tag+0x983>
     ccb:	66 6d                	ins    WORD PTR es:[rdi],dx
     ccd:	69 6e 66 66 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x66],0x5a5f0066
     cd4:	53                   	push   rbx
     cd5:	74 35                	je     d0c <__abi_tag+0x990>
     cd7:	6c                   	ins    BYTE PTR es:[rdi],dx
     cd8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cd9:	67 31 30             	xor    DWORD PTR [eax],esi
     cdc:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     ce0:	53                   	push   rbx
     ce1:	74 35                	je     d18 <__abi_tag+0x99c>
     ce3:	6c                   	ins    BYTE PTR es:[rdi],dx
     ce4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ce5:	67 31 30             	xor    DWORD PTR [eax],esi
     ce8:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     cec:	4e 53                	rex.WRX push rbx
     cee:	74 36                	je     d26 <__abi_tag+0x9aa>
     cf0:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     cf3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cf4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     cf5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cf6:	31 30                	xor    DWORD PTR [rax],esi
     cf8:	74 69                	je     d63 <__abi_tag+0x9e7>
     cfa:	6d                   	ins    DWORD PTR es:[rdi],dx
     cfb:	65 5f                	gs pop rdi
     cfd:	70 6f                	jo     d6e <__abi_tag+0x9f2>
     cff:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     d06:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     d09:	32 31                	xor    dh,BYTE PTR [rcx]
     d0b:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     d0e:	65 61                	gs (bad)
     d10:	64 79 5f             	fs jns d72 <__abi_tag+0x9f6>
     d13:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     d17:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     d1b:	5f                   	pop    rdi
     d1c:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     d20:	61                   	(bad)
     d21:	74 69                	je     d8c <__abi_tag+0xa10>
     d23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d24:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d25:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     d27:	53                   	push   rbx
     d28:	74 35                	je     d5f <__abi_tag+0x9e3>
     d2a:	72 61                	jb     d8d <__abi_tag+0xa11>
     d2c:	74 69                	je     d97 <__abi_tag+0xa1b>
     d2e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d2f:	49                   	rex.WB
     d30:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     d32:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     d35:	6c                   	ins    BYTE PTR es:[rdi],dx
     d36:	31 30                	xor    DWORD PTR [rax],esi
     d38:	30 30                	xor    BYTE PTR [rax],dh
     d3a:	30 30                	xor    BYTE PTR [rax],dh
     d3c:	30 30                	xor    BYTE PTR [rax],dh
     d3e:	30 30                	xor    BYTE PTR [rax],dh
     d40:	45                   	rex.RB
     d41:	45                   	rex.RB
     d42:	45                   	rex.RB
     d43:	45                   	rex.RB
     d44:	45                   	rex.RB
     d45:	43 34 45             	rex.XB xor al,0x45
     d48:	52                   	push   rdx
     d49:	4b 53                	rex.WXB push r11
     d4b:	36 5f                	ss pop rdi
     d4d:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
     d50:	72 6f                	jb     dc1 <__abi_tag+0xa45>
     d52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d54:	5f                   	pop    rdi
     d55:	6c                   	ins    BYTE PTR es:[rdi],dx
     d56:	69 74 65 72 61 6c 73 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x736c61
     d5d:	00 
     d5e:	69 6e 64 65 78 5f 61 	imul   ebp,DWORD PTR [rsi+0x64],0x615f7865
     d65:	72 72                	jb     dd9 <__abi_tag+0xa5d>
     d67:	61                   	(bad)
     d68:	79 00                	jns    d6a <__abi_tag+0x9ee>
     d6a:	74 65                	je     dd1 <__abi_tag+0xa55>
     d6c:	73 74                	jae    de2 <__abi_tag+0xa66>
     d6e:	5f                   	pop    rdi
     d6f:	64 61                	fs (bad)
     d71:	74 61                	je     dd4 <__abi_tag+0xa58>
     d73:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     d76:	4e 53                	rex.WRX push rbx
     d78:	74 36                	je     db0 <__abi_tag+0xa34>
     d7a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     d7d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d7e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d80:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     d84:	61                   	(bad)
     d85:	74 69                	je     df0 <__abi_tag+0xa74>
     d87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d88:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d89:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     d8b:	53                   	push   rbx
     d8c:	74 35                	je     dc3 <__abi_tag+0xa47>
     d8e:	72 61                	jb     df1 <__abi_tag+0xa75>
     d90:	74 69                	je     dfb <__abi_tag+0xa7f>
     d92:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d93:	49                   	rex.WB
     d94:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     d96:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     d99:	6c                   	ins    BYTE PTR es:[rdi],dx
     d9a:	31 30                	xor    DWORD PTR [rax],esi
     d9c:	30 30                	xor    BYTE PTR [rax],dh
     d9e:	30 30                	xor    BYTE PTR [rax],dh
     da0:	30 30                	xor    BYTE PTR [rax],dh
     da2:	30 30                	xor    BYTE PTR [rax],dh
     da4:	45                   	rex.RB
     da5:	45                   	rex.RB
     da6:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     da8:	4c                   	rex.WR
     da9:	45 52                	rex.RB push r10
     dab:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
     dad:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
     db0:	6d                   	ins    DWORD PTR es:[rdi],dx
     db1:	5f                   	pop    rdi
     db2:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
     db9:	5f                   	pop    rdi
     dba:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     dbc:	61                   	(bad)
     dbd:	62                   	(bad)
     dbe:	6c                   	ins    BYTE PTR es:[rdi],dx
     dbf:	65 5f                	gs pop rdi
     dc1:	69 66 5f 69 73 5f 64 	imul   esp,DWORD PTR [rsi+0x5f],0x645f7369
     dc8:	75 72                	jne    e3c <__abi_tag+0xac0>
     dca:	61                   	(bad)
     dcb:	74 69                	je     e36 <__abi_tag+0xaba>
     dcd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dcf:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
     dd3:	65 5f                	gs pop rdi
     dd5:	70 6f                	jo     e46 <__abi_tag+0xaca>
     dd7:	69 6e 74 00 7e 64 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75647e00
     dde:	72 61                	jb     e41 <__abi_tag+0xac5>
     de0:	74 69                	je     e4b <__abi_tag+0xacf>
     de2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     de3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     de4:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
     de7:	75 74                	jne    e5d <__abi_tag+0xae1>
     de9:	77 73                	ja     e5e <__abi_tag+0xae2>
     deb:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
     dee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     def:	74 5f                	je     e50 <__abi_tag+0xad4>
     df1:	66 61                	data16 (bad)
     df3:	73 74                	jae    e69 <__abi_tag+0xaed>
     df5:	36 34 5f             	ss xor al,0x5f
     df8:	74 00                	je     dfa <__abi_tag+0xa7e>
     dfa:	5f                   	pop    rdi
     dfb:	5f                   	pop    rdi
     dfc:	75 69                	jne    e67 <__abi_tag+0xaeb>
     dfe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dff:	74 5f                	je     e60 <__abi_tag+0xae4>
     e01:	6c                   	ins    BYTE PTR es:[rdi],dx
     e02:	65 61                	gs (bad)
     e04:	73 74                	jae    e7a <__abi_tag+0xafe>
     e06:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
     e09:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     e0c:	4f 5f                	rex.WRXB pop r15
     e0e:	73 61                	jae    e71 <__abi_tag+0xaf5>
     e10:	76 65                	jbe    e77 <__abi_tag+0xafb>
     e12:	5f                   	pop    rdi
     e13:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e15:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     e19:	4e 53                	rex.WRX push rbx
     e1b:	74 36                	je     e53 <__abi_tag+0xad7>
     e1d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     e20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e21:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e23:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     e27:	61                   	(bad)
     e28:	74 69                	je     e93 <__abi_tag+0xb17>
     e2a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e2b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e2c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     e2e:	53                   	push   rbx
     e2f:	74 35                	je     e66 <__abi_tag+0xaea>
     e31:	72 61                	jb     e94 <__abi_tag+0xb18>
     e33:	74 69                	je     e9e <__abi_tag+0xb22>
     e35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e36:	49                   	rex.WB
     e37:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     e39:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     e3c:	6c                   	ins    BYTE PTR es:[rdi],dx
     e3d:	31 30                	xor    DWORD PTR [rax],esi
     e3f:	30 30                	xor    BYTE PTR [rax],dh
     e41:	30 30                	xor    BYTE PTR [rax],dh
     e43:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
     e46:	45 70 4c             	rex.RB jo e95 <__abi_tag+0xb19>
     e49:	45 52                	rex.RB push r10
     e4b:	4b 53                	rex.WXB push r11
     e4d:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     e50:	73 71                	jae    ec3 <__abi_tag+0xb47>
     e52:	72 74                	jb     ec8 <__abi_tag+0xb4c>
     e54:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     e57:	53                   	push   rbx
     e58:	74 33                	je     e8d <__abi_tag+0xb11>
     e5a:	65 78 70             	gs js  ecd <__abi_tag+0xb51>
     e5d:	65 00 61 73          	add    BYTE PTR gs:[rcx+0x73],ah
     e61:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     e65:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e69:	53                   	push   rbx
     e6a:	74 39                	je     ea5 <__abi_tag+0xb29>
     e6c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e6d:	65 78 74             	gs js  ee4 <__abi_tag+0xb68>
     e70:	61                   	(bad)
     e71:	66 74 65             	data16 je ed9 <__abi_tag+0xb5d>
     e74:	72 65                	jb     edb <__abi_tag+0xb5f>
     e76:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
     e7a:	73 63                	jae    edf <__abi_tag+0xb63>
     e7c:	73 70                	jae    eee <__abi_tag+0xb72>
     e7e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e7f:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     e82:	5f                   	pop    rdi
     e83:	67 63 64 00 66       	movsxd esp,DWORD PTR [eax+eax*1+0x66]
     e88:	6d                   	ins    DWORD PTR es:[rdi],dx
     e89:	69 6e 00 6c 6f 63 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61636f6c
     e90:	6c                   	ins    BYTE PTR es:[rdi],dx
     e91:	65 63 6f 6e          	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
     e95:	76 00                	jbe    e97 <__abi_tag+0xb1b>
     e97:	5f                   	pop    rdi
     e98:	5a                   	pop    rdx
     e99:	53                   	push   rbx
     e9a:	74 36                	je     ed2 <__abi_tag+0xb56>
     e9c:	6c                   	ins    BYTE PTR es:[rdi],dx
     e9d:	67 61                	addr32 (bad)
     e9f:	6d                   	ins    DWORD PTR es:[rdi],dx
     ea0:	6d                   	ins    DWORD PTR es:[rdi],dx
     ea1:	61                   	(bad)
     ea2:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     ea6:	53                   	push   rbx
     ea7:	74 36                	je     edf <__abi_tag+0xb63>
     ea9:	6c                   	ins    BYTE PTR es:[rdi],dx
     eaa:	67 61                	addr32 (bad)
     eac:	6d                   	ins    DWORD PTR es:[rdi],dx
     ead:	6d                   	ins    DWORD PTR es:[rdi],dx
     eae:	61                   	(bad)
     eaf:	66 00 73 65          	data16 add BYTE PTR [rbx+0x65],dh
     eb3:	61                   	(bad)
     eb4:	72 63                	jb     f19 <__abi_tag+0xb9d>
     eb6:	68 5f 66 69 6c       	push   0x6c69665f
     ebb:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     ebd:	61                   	(bad)
     ebe:	6d                   	ins    DWORD PTR es:[rdi],dx
     ebf:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     ec3:	4e 53                	rex.WRX push rbx
     ec5:	74 36                	je     efd <__abi_tag+0xb81>
     ec7:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     eca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ecb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ecc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ecd:	31 30                	xor    DWORD PTR [rax],esi
     ecf:	74 69                	je     f3a <__abi_tag+0xbbe>
     ed1:	6d                   	ins    DWORD PTR es:[rdi],dx
     ed2:	65 5f                	gs pop rdi
     ed4:	70 6f                	jo     f45 <__abi_tag+0xbc9>
     ed6:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     edd:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     ee0:	32 31                	xor    dh,BYTE PTR [rcx]
     ee2:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     ee5:	65 61                	gs (bad)
     ee7:	64 79 5f             	fs jns f49 <__abi_tag+0xbcd>
     eea:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     eee:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     ef2:	5f                   	pop    rdi
     ef3:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     ef7:	61                   	(bad)
     ef8:	74 69                	je     f63 <__abi_tag+0xbe7>
     efa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     efb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     efc:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     efe:	53                   	push   rbx
     eff:	74 35                	je     f36 <__abi_tag+0xbba>
     f01:	72 61                	jb     f64 <__abi_tag+0xbe8>
     f03:	74 69                	je     f6e <__abi_tag+0xbf2>
     f05:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f06:	49                   	rex.WB
     f07:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     f09:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     f0c:	6c                   	ins    BYTE PTR es:[rdi],dx
     f0d:	31 30                	xor    DWORD PTR [rax],esi
     f0f:	30 30                	xor    BYTE PTR [rax],dh
     f11:	30 30                	xor    BYTE PTR [rax],dh
     f13:	30 30                	xor    BYTE PTR [rax],dh
     f15:	30 30                	xor    BYTE PTR [rax],dh
     f17:	45                   	rex.RB
     f18:	45                   	rex.RB
     f19:	45                   	rex.RB
     f1a:	45                   	rex.RB
     f1b:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     f1d:	49                   	rex.WB
     f1e:	45 52                	rex.RB push r10
     f20:	4b 53                	rex.WXB push r11
     f22:	36 5f                	ss pop rdi
     f24:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f27:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     f2e:	77 63                	ja     f93 <__abi_tag+0xc17>
     f30:	73 74                	jae    fa6 <__abi_tag+0xc2a>
     f32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f33:	75 6c                	jne    fa1 <__abi_tag+0xc25>
     f35:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f38:	4e 53                	rex.WRX push rbx
     f3a:	74 36                	je     f72 <__abi_tag+0xbf6>
     f3c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     f3f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f40:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f41:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f42:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     f46:	61                   	(bad)
     f47:	74 69                	je     fb2 <__abi_tag+0xc36>
     f49:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f4a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f4b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     f4d:	53                   	push   rbx
     f4e:	74 35                	je     f85 <__abi_tag+0xc09>
     f50:	72 61                	jb     fb3 <__abi_tag+0xc37>
     f52:	74 69                	je     fbd <__abi_tag+0xc41>
     f54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f55:	49                   	rex.WB
     f56:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     f58:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     f5b:	6c                   	ins    BYTE PTR es:[rdi],dx
     f5c:	31 30                	xor    DWORD PTR [rax],esi
     f5e:	30 30                	xor    BYTE PTR [rax],dh
     f60:	30 30                	xor    BYTE PTR [rax],dh
     f62:	30 30                	xor    BYTE PTR [rax],dh
     f64:	30 30                	xor    BYTE PTR [rax],dh
     f66:	45                   	rex.RB
     f67:	45                   	rex.RB
     f68:	45                   	rex.RB
     f69:	43 31 49 6c          	rex.XB xor DWORD PTR [r9+0x6c],ecx
     f6d:	76 45                	jbe    fb4 <__abi_tag+0xc38>
     f6f:	45 52                	rex.RB push r10
     f71:	4b 54                	rex.WXB push r12
     f73:	5f                   	pop    rdi
     f74:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     f77:	4f 5f                	rex.WRXB pop r15
     f79:	77 72                	ja     fed <__abi_tag+0xc71>
     f7b:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
     f82:	65 
     f83:	00 74 6d 70          	add    BYTE PTR [rbp+rbp*2+0x70],dh
     f87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f88:	61                   	(bad)
     f89:	6d                   	ins    DWORD PTR es:[rdi],dx
     f8a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f8d:	53                   	push   rbx
     f8e:	74 31                	je     fc1 <__abi_tag+0xc45>
     f90:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
     f93:	78 74                	js     1009 <_init+0x9>
     f95:	74 6f                	je     1006 <_init+0x6>
     f97:	77 61                	ja     ffa <__abi_tag+0xc7e>
     f99:	72 64                	jb     fff <__abi_tag+0xc83>
     f9b:	66 65 00 5f 5f       	data16 add BYTE PTR gs:[rdi+0x5f],bl
     fa0:	6c                   	ins    BYTE PTR es:[rdi],dx
     fa1:	68 73 00 5f 6c       	push   0x6c5f0073
     fa6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fa7:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     faa:	69 73 75 6e 6f 72 64 	imul   esi,DWORD PTR [rbx+0x75],0x64726f6e
     fb1:	65 72 65             	gs jb  1019 <_init+0x19>
     fb4:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
     fb8:	74 5f                	je     1019 <_init+0x19>
     fba:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
     fbd:	72 5f                	jb     101e <_init+0x1e>
     fbf:	73 79                	jae    103a <__printf_chk@plt+0xa>
     fc1:	6d                   	ins    DWORD PTR es:[rdi],dx
     fc2:	62 6f 6c 00 5f       	(bad)
     fc7:	5a                   	pop    rdx
     fc8:	53                   	push   rbx
     fc9:	74 33                	je     ffe <__abi_tag+0xc82>
     fcb:	66 6d                	ins    WORD PTR es:[rdi],dx
     fcd:	61                   	(bad)
     fce:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
     fd4:	4e 53                	rex.WRX push rbx
     fd6:	74 36                	je     100e <_init+0xe>
     fd8:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     fdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fdc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fdd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fde:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     fe2:	61                   	(bad)
     fe3:	74 69                	je     104e <rand@plt+0xe>
     fe5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fe6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fe7:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     fe9:	53                   	push   rbx
     fea:	74 35                	je     1021 <_init+0x21>
     fec:	72 61                	jb     104f <rand@plt+0xf>
     fee:	74 69                	je     1059 <strchr@plt+0x9>
     ff0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ff1:	49                   	rex.WB
     ff2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     ff4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     ff7:	6c                   	ins    BYTE PTR es:[rdi],dx
     ff8:	31 30                	xor    DWORD PTR [rax],esi
     ffa:	30 30                	xor    BYTE PTR [rax],dh
     ffc:	30 30                	xor    BYTE PTR [rax],dh
     ffe:	30 30                	xor    BYTE PTR [rax],dh
    1000:	30 30                	xor    BYTE PTR [rax],dh
    1002:	45                   	rex.RB
    1003:	45                   	rex.RB
    1004:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    1006:	49                   	rex.WB
    1007:	45 52                	rex.RB push r10
    1009:	4b 53                	rex.WXB push r11
    100b:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    100e:	5f                   	pop    rdi
    100f:	5a                   	pop    rdx
    1010:	4e 53                	rex.WRX push rbx
    1012:	74 36                	je     104a <rand@plt+0xa>
    1014:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1017:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1018:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1019:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    101a:	31 30                	xor    DWORD PTR [rax],esi
    101c:	74 69                	je     1087 <calloc@plt+0x7>
    101e:	6d                   	ins    DWORD PTR es:[rdi],dx
    101f:	65 5f                	gs pop rdi
    1021:	70 6f                	jo     1092 <open@plt+0x2>
    1023:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    102a:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    102d:	32 31                	xor    dh,BYTE PTR [rcx]
    102f:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1032:	65 61                	gs (bad)
    1034:	64 79 5f             	fs jns 1096 <open@plt+0x6>
    1037:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    103b:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    103f:	5f                   	pop    rdi
    1040:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1044:	61                   	(bad)
    1045:	74 69                	je     10b0 <stat@plt>
    1047:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1048:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1049:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    104b:	53                   	push   rbx
    104c:	74 35                	je     1083 <calloc@plt+0x3>
    104e:	72 61                	jb     10b1 <stat@plt+0x1>
    1050:	74 69                	je     10bb <stat@plt+0xb>
    1052:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1053:	49                   	rex.WB
    1054:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1056:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1059:	6c                   	ins    BYTE PTR es:[rdi],dx
    105a:	31 30                	xor    DWORD PTR [rax],esi
    105c:	30 30                	xor    BYTE PTR [rax],dh
    105e:	30 30                	xor    BYTE PTR [rax],dh
    1060:	30 30                	xor    BYTE PTR [rax],dh
    1062:	30 30                	xor    BYTE PTR [rax],dh
    1064:	45                   	rex.RB
    1065:	45                   	rex.RB
    1066:	45                   	rex.RB
    1067:	45                   	rex.RB
    1068:	45                   	rex.RB
    1069:	43 34 45             	rex.XB xor al,0x45
    106c:	76 00                	jbe    106e <__strncpy_chk@plt+0xe>
    106e:	5f                   	pop    rdi
    106f:	5a                   	pop    rdx
    1070:	53                   	push   rbx
    1071:	74 36                	je     10a9 <aligned_alloc@plt+0x9>
    1073:	73 63                	jae    10d8 <fclose@plt+0x8>
    1075:	61                   	(bad)
    1076:	6c                   	ins    BYTE PTR es:[rdi],dx
    1077:	62 6e 65 69 00       	(bad)
    107c:	64 69 66 66 74 69 6d 	imul   esp,DWORD PTR fs:[rsi+0x66],0x656d6974
    1083:	65 
    1084:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
    1087:	65 72 61             	gs jb  10eb <__stack_chk_fail@plt+0xb>
    108a:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    108f:	53                   	push   rbx
    1090:	74 34                	je     10c6 <srand@plt+0x6>
    1092:	74 61                	je     10f5 <fopen@plt+0x5>
    1094:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1095:	68 65 00 5f 5a       	push   0x5a5f0065
    109a:	53                   	push   rbx
    109b:	74 34                	je     10d1 <fclose@plt+0x1>
    109d:	74 61                	je     1100 <free@plt>
    109f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10a0:	68 66 00 5f 49       	push   0x495f0066
    10a5:	4f 5f                	rex.WRXB pop r15
    10a7:	62 75 66 5f 65       	(bad)
    10ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10ad:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
    10b1:	4f 5f                	rex.WRXB pop r15
    10b3:	73 61                	jae    1116 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x6>
    10b5:	76 65                	jbe    111c <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0xc>
    10b7:	5f                   	pop    rdi
    10b8:	62 61 73 65 00       	(bad)
    10bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    10be:	62 72 74 6f 77       	(bad)
    10c3:	63 00                	movsxd eax,DWORD PTR [rax]
    10c5:	5f                   	pop    rdi
    10c6:	5a                   	pop    rdx
    10c7:	53                   	push   rbx
    10c8:	74 35                	je     10ff <fopen@plt+0xf>
    10ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    10cb:	72 69                	jb     1136 <strcmp@plt+0x6>
    10cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10ce:	74 66                	je     1136 <strcmp@plt+0x6>
    10d0:	00 31                	add    BYTE PTR [rcx],dh
    10d2:	31 6d 61             	xor    DWORD PTR [rbp+0x61],ebp
    10d5:	78 5f                	js     1136 <strcmp@plt+0x6>
    10d7:	61                   	(bad)
    10d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    10d9:	69 67 6e 5f 74 00 77 	imul   esp,DWORD PTR [rdi+0x6e],0x7700745f
    10e0:	63 73 78             	movsxd esi,DWORD PTR [rbx+0x78]
    10e3:	66 72 6d             	data16 jb 1153 <puts@plt+0x3>
    10e6:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    10e9:	74 5f                	je     114a <read@plt+0xa>
    10eb:	66 72 61             	data16 jb 114f <read@plt+0xf>
    10ee:	63 5f 64             	movsxd ebx,DWORD PTR [rdi+0x64]
    10f1:	69 67 69 74 73 00 5f 	imul   esp,DWORD PTR [rdi+0x69],0x5f007374
    10f8:	5a                   	pop    rdx
    10f9:	53                   	push   rbx
    10fa:	74 39                	je     1135 <strcmp@plt+0x5>
    10fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10fd:	65 78 74             	gs js  1174 <__fprintf_chk@plt+0x4>
    1100:	61                   	(bad)
    1101:	66 74 65             	data16 je 1169 <realloc@plt+0x9>
    1104:	72 66                	jb     116c <realloc@plt+0xc>
    1106:	66 00 66 67          	data16 add BYTE PTR [rsi+0x67],ah
    110a:	65 74 70             	gs je  117d <__fprintf_chk@plt+0xd>
    110d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    110e:	73 00                	jae    1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    1110:	5f                   	pop    rdi
    1111:	5f                   	pop    rdi
    1112:	70 6f                	jo     1183 <sqrtf@plt+0x3>
    1114:	73 00                	jae    1116 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x6>
    1116:	5f                   	pop    rdi
    1117:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    111a:	69 6e 00 73 74 65 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61657473
    1121:	64 79 5f             	fs jns 1183 <sqrtf@plt+0x3>
    1124:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1128:	6b 00 77             	imul   eax,DWORD PTR [rax],0x77
    112b:	63 73 63             	movsxd esi,DWORD PTR [rbx+0x63]
    112e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    112f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1130:	6c                   	ins    BYTE PTR es:[rdi],dx
    1131:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    1134:	65 61                	gs (bad)
    1136:	72 65                	jb     119d <fwrite@plt+0xd>
    1138:	72 72                	jb     11ac <close@plt+0xc>
    113a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    113d:	53                   	push   rbx
    113e:	74 31                	je     1171 <__fprintf_chk@plt+0x1>
    1140:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    1143:	75 6e                	jne    11b3 <__isoc23_strtol@plt+0x3>
    1145:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1146:	72 64                	jb     11ac <close@plt+0xc>
    1148:	65 72 65             	gs jb  11b0 <__isoc23_strtol@plt>
    114b:	64 64 64 00 5f 63    	fs fs add BYTE PTR fs:[rdi+0x63],bl
    1151:	75 72                	jne    11c5 <__cxa_finalize@plt+0x5>
    1153:	5f                   	pop    rdi
    1154:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    1157:	75 6d                	jne    11c6 <__cxa_finalize@plt+0x6>
    1159:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    115a:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    115d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    115e:	74 5f                	je     11bf <__isoc23_strtol@plt+0xf>
    1160:	66 61                	data16 (bad)
    1162:	73 74                	jae    11d8 <main+0x8>
    1164:	33 32                	xor    esi,DWORD PTR [rdx]
    1166:	5f                   	pop    rdi
    1167:	74 00                	je     1169 <realloc@plt+0x9>
    1169:	5f                   	pop    rdi
    116a:	5a                   	pop    rdx
    116b:	4e 53                	rex.WRX push rbx
    116d:	74 36                	je     11a5 <close@plt+0x5>
    116f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1172:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1173:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1174:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1175:	31 30                	xor    DWORD PTR [rax],esi
    1177:	74 69                	je     11e2 <main+0x12>
    1179:	6d                   	ins    DWORD PTR es:[rdi],dx
    117a:	65 5f                	gs pop rdi
    117c:	70 6f                	jo     11ed <main+0x1d>
    117e:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1185:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1188:	32 31                	xor    dh,BYTE PTR [rcx]
    118a:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    118d:	65 61                	gs (bad)
    118f:	64 79 5f             	fs jns 11f1 <main+0x21>
    1192:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1196:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    119a:	5f                   	pop    rdi
    119b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    119f:	61                   	(bad)
    11a0:	74 69                	je     120b <main+0x3b>
    11a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11a4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    11a6:	53                   	push   rbx
    11a7:	74 35                	je     11de <main+0xe>
    11a9:	72 61                	jb     120c <main+0x3c>
    11ab:	74 69                	je     1216 <_start+0x6>
    11ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11ae:	49                   	rex.WB
    11af:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    11b1:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    11b4:	6c                   	ins    BYTE PTR es:[rdi],dx
    11b5:	31 30                	xor    DWORD PTR [rax],esi
    11b7:	30 30                	xor    BYTE PTR [rax],dh
    11b9:	30 30                	xor    BYTE PTR [rax],dh
    11bb:	30 30                	xor    BYTE PTR [rax],dh
    11bd:	30 30                	xor    BYTE PTR [rax],dh
    11bf:	45                   	rex.RB
    11c0:	45                   	rex.RB
    11c1:	45                   	rex.RB
    11c2:	45                   	rex.RB
    11c3:	45 70 4c             	rex.RB jo 1212 <_start+0x2>
    11c6:	45 52                	rex.RB push r10
    11c8:	4b 53                	rex.WXB push r11
    11ca:	36 5f                	ss pop rdi
    11cc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    11cf:	4e 53                	rex.WRX push rbx
    11d1:	74 36                	je     1209 <main+0x39>
    11d3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    11d6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11d7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11d9:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    11dd:	61                   	(bad)
    11de:	74 69                	je     1249 <deregister_tm_clones+0x9>
    11e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11e2:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    11e4:	53                   	push   rbx
    11e5:	74 35                	je     121c <_start+0xc>
    11e7:	72 61                	jb     124a <deregister_tm_clones+0xa>
    11e9:	74 69                	je     1254 <deregister_tm_clones+0x14>
    11eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11ec:	49                   	rex.WB
    11ed:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    11ef:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    11f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    11f3:	31 30                	xor    DWORD PTR [rax],esi
    11f5:	30 30                	xor    BYTE PTR [rax],dh
    11f7:	30 30                	xor    BYTE PTR [rax],dh
    11f9:	30 30                	xor    BYTE PTR [rax],dh
    11fb:	30 30                	xor    BYTE PTR [rax],dh
    11fd:	45                   	rex.RB
    11fe:	45                   	rex.RB
    11ff:	45 70 70             	rex.RB jo 1272 <register_tm_clones+0x2>
    1202:	45 69 00 6c 64 65 78 	imul   r8d,DWORD PTR [r8],0x7865646c
    1209:	70 00                	jo     120b <main+0x3b>
    120b:	70 6f                	jo     127c <register_tm_clones+0xc>
    120d:	73 69                	jae    1278 <register_tm_clones+0x8>
    120f:	74 69                	je     127a <register_tm_clones+0xa>
    1211:	76 65                	jbe    1278 <register_tm_clones+0x8>
    1213:	5f                   	pop    rdi
    1214:	73 69                	jae    127f <register_tm_clones+0xf>
    1216:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1218:	00 5f 44             	add    BYTE PTR [rdi+0x44],bl
    121b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    121d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1220:	53                   	push   rbx
    1221:	74 35                	je     1258 <deregister_tm_clones+0x18>
    1223:	6c                   	ins    BYTE PTR es:[rdi],dx
    1224:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1225:	67 31 70 65          	xor    DWORD PTR [eax+0x65],esi
    1229:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    122c:	75 69                	jne    1297 <register_tm_clones+0x27>
    122e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    122f:	74 38                	je     1269 <deregister_tm_clones+0x29>
    1231:	5f                   	pop    rdi
    1232:	74 00                	je     1234 <_start+0x24>
    1234:	5f                   	pop    rdi
    1235:	5a                   	pop    rdx
    1236:	4e 53                	rex.WRX push rbx
    1238:	74 36                	je     1270 <register_tm_clones>
    123a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    123d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    123e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    123f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1240:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1244:	61                   	(bad)
    1245:	74 69                	je     12b0 <__do_global_dtors_aux>
    1247:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1248:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1249:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    124b:	53                   	push   rbx
    124c:	74 35                	je     1283 <register_tm_clones+0x13>
    124e:	72 61                	jb     12b1 <__do_global_dtors_aux+0x1>
    1250:	74 69                	je     12bb <__do_global_dtors_aux+0xb>
    1252:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1253:	49                   	rex.WB
    1254:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1256:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1259:	6c                   	ins    BYTE PTR es:[rdi],dx
    125a:	31 30                	xor    DWORD PTR [rax],esi
    125c:	30 30                	xor    BYTE PTR [rax],dh
    125e:	30 30                	xor    BYTE PTR [rax],dh
    1260:	30 30                	xor    BYTE PTR [rax],dh
    1262:	30 30                	xor    BYTE PTR [rax],dh
    1264:	45                   	rex.RB
    1265:	45                   	rex.RB
    1266:	45 70 70             	rex.RB jo 12d9 <__do_global_dtors_aux+0x29>
    1269:	45 76 00             	rex.RB jbe 126c <deregister_tm_clones+0x2c>
    126c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    126d:	65 78 74             	gs js  12e4 <__do_global_dtors_aux+0x34>
    1270:	74 6f                	je     12e1 <__do_global_dtors_aux+0x31>
    1272:	77 61                	ja     12d5 <__do_global_dtors_aux+0x25>
    1274:	72 64                	jb     12da <__do_global_dtors_aux+0x2a>
    1276:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    1279:	61                   	(bad)
    127a:	62                   	(bad)
    127b:	6c                   	ins    BYTE PTR es:[rdi],dx
    127c:	65 5f                	gs pop rdi
    127e:	69 66 3c 74 72 75 65 	imul   esp,DWORD PTR [rsi+0x3c],0x65757274
    1285:	2c 20                	sub    al,0x20
    1287:	73 74                	jae    12fd <frame_dummy+0xd>
    1289:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    128c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    128f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1290:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1291:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1292:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1294:	64 75 72             	fs jne 1309 <_Z16buildStringArrayPcj+0x9>
    1297:	61                   	(bad)
    1298:	74 69                	je     1303 <_Z16buildStringArrayPcj+0x3>
    129a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    129b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    129c:	3c 6c                	cmp    al,0x6c
    129e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    129f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12a0:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    12a4:	74 2c                	je     12d2 <__do_global_dtors_aux+0x22>
    12a6:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    12a9:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    12ac:	72 61                	jb     130f <_Z16buildStringArrayPcj+0xf>
    12ae:	74 69                	je     1319 <_Z16buildStringArrayPcj+0x19>
    12b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12b1:	3c 31                	cmp    al,0x31
    12b3:	2c 20                	sub    al,0x20
    12b5:	31 30                	xor    DWORD PTR [rax],esi
    12b7:	30 30                	xor    BYTE PTR [rax],dh
    12b9:	30 30                	xor    BYTE PTR [rax],dh
    12bb:	30 3e                	xor    BYTE PTR [rsi],bh
    12bd:	20 3e                	and    BYTE PTR [rsi],bh
    12bf:	20 3e                	and    BYTE PTR [rsi],bh
    12c1:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
    12c4:	66 5f                	pop    di
    12c6:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
    12cd:	5f                   	pop    rdi
    12ce:	77 63                	ja     1333 <_Z16buildStringArrayPcj+0x33>
    12d0:	68 00 77 63 73       	push   0x73637700
    12d5:	72 63                	jb     133a <_Z16buildStringArrayPcj+0x3a>
    12d7:	68 72 00 6d 6f       	push   0x6f6d0072
    12dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12dd:	5f                   	pop    rdi
    12de:	64 65 63 69 6d       	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
    12e3:	61                   	(bad)
    12e4:	6c                   	ins    BYTE PTR es:[rdi],dx
    12e5:	5f                   	pop    rdi
    12e6:	70 6f                	jo     1357 <_Z16buildStringArrayPcj+0x57>
    12e8:	69 6e 74 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535a5f00
    12ef:	74 35                	je     1326 <_Z16buildStringArrayPcj+0x26>
    12f1:	68 79 70 6f 74       	push   0x746f7079
    12f6:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    12fb:	4e 53                	rex.WRX push rbx
    12fd:	74 36                	je     1335 <_Z16buildStringArrayPcj+0x35>
    12ff:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1302:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1303:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1304:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1305:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1309:	61                   	(bad)
    130a:	74 69                	je     1375 <_Z16buildStringArrayPcj+0x75>
    130c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    130d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    130e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1310:	53                   	push   rbx
    1311:	74 35                	je     1348 <_Z16buildStringArrayPcj+0x48>
    1313:	72 61                	jb     1376 <_Z16buildStringArrayPcj+0x76>
    1315:	74 69                	je     1380 <_Z16buildStringArrayPcj+0x80>
    1317:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1318:	49                   	rex.WB
    1319:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    131b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    131e:	6c                   	ins    BYTE PTR es:[rdi],dx
    131f:	31 30                	xor    DWORD PTR [rax],esi
    1321:	30 30                	xor    BYTE PTR [rax],dh
    1323:	30 30                	xor    BYTE PTR [rax],dh
    1325:	30 30                	xor    BYTE PTR [rax],dh
    1327:	30 30                	xor    BYTE PTR [rax],dh
    1329:	45                   	rex.RB
    132a:	45                   	rex.RB
    132b:	45                   	rex.RB
    132c:	44 34 45             	rex.R xor al,0x45
    132f:	76 00                	jbe    1331 <_Z16buildStringArrayPcj+0x31>
    1331:	5f                   	pop    rdi
    1332:	5a                   	pop    rdx
    1333:	4e 53                	rex.WRX push rbx
    1335:	74 36                	je     136d <_Z16buildStringArrayPcj+0x6d>
    1337:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    133a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    133b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    133c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    133d:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1341:	61                   	(bad)
    1342:	74 69                	je     13ad <_Z16buildStringArrayPcj+0xad>
    1344:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1345:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1346:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1348:	53                   	push   rbx
    1349:	74 35                	je     1380 <_Z16buildStringArrayPcj+0x80>
    134b:	72 61                	jb     13ae <_Z16buildStringArrayPcj+0xae>
    134d:	74 69                	je     13b8 <_Z16buildStringArrayPcj+0xb8>
    134f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1350:	49                   	rex.WB
    1351:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1353:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1356:	6c                   	ins    BYTE PTR es:[rdi],dx
    1357:	31 30                	xor    DWORD PTR [rax],esi
    1359:	30 30                	xor    BYTE PTR [rax],dh
    135b:	30 30                	xor    BYTE PTR [rax],dh
    135d:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1360:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    1362:	6d                   	ins    DWORD PTR es:[rdi],dx
    1363:	45 69 00 74 6d 5f 69 	imul   r8d,DWORD PTR [r8],0x695f6d74
    136a:	73 64                	jae    13d0 <_Z16buildStringArrayPcj+0xd0>
    136c:	73 74                	jae    13e2 <_Z16buildStringArrayPcj+0xe2>
    136e:	00 76 77             	add    BYTE PTR [rsi+0x77],dh
    1371:	70 72                	jo     13e5 <_Z16buildStringArrayPcj+0xe5>
    1373:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
    137a:	66 70 72             	data16 jo 13ef <_Z16buildStringArrayPcj+0xef>
    137d:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
    1384:	6b 00 63             	imul   eax,DWORD PTR [rax],0x63
    1387:	68 72 6f 6e 6f       	push   0x6f6e6f72
    138c:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
    1390:	74 00                	je     1392 <_Z16buildStringArrayPcj+0x92>
    1392:	5f                   	pop    rdi
    1393:	5a                   	pop    rdx
    1394:	53                   	push   rbx
    1395:	74 39                	je     13d0 <_Z16buildStringArrayPcj+0xd0>
    1397:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1398:	65 61                	gs (bad)
    139a:	72 62                	jb     13fe <_Z16buildStringArrayPcj+0xfe>
    139c:	79 69                	jns    1407 <_Z16buildStringArrayPcj+0x107>
    139e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    139f:	74 66                	je     1407 <_Z16buildStringArrayPcj+0x107>
    13a1:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    13a4:	4f 5f                	rex.WRXB pop r15
    13a6:	6d                   	ins    DWORD PTR es:[rdi],dx
    13a7:	61                   	(bad)
    13a8:	72 6b                	jb     1415 <_Z16buildStringArrayPcj+0x115>
    13aa:	65 72 00             	gs jb  13ad <_Z16buildStringArrayPcj+0xad>
    13ad:	69 6e 74 5f 6e 5f 63 	imul   ebp,DWORD PTR [rsi+0x74],0x635f6e5f
    13b4:	73 5f                	jae    1415 <_Z16buildStringArrayPcj+0x115>
    13b6:	70 72                	jo     142a <_Z16buildStringArrayPcj+0x12a>
    13b8:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    13bc:	65 73 00             	gs jae 13bf <_Z16buildStringArrayPcj+0xbf>
    13bf:	77 63                	ja     1424 <_Z16buildStringArrayPcj+0x124>
    13c1:	73 63                	jae    1426 <_Z16buildStringArrayPcj+0x126>
    13c3:	68 72 00 74 79       	push   0x79740072
    13c8:	70 65                	jo     142f <_Z16buildStringArrayPcj+0x12f>
    13ca:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    13cd:	6c                   	ins    BYTE PTR es:[rdi],dx
    13ce:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    13d0:	61                   	(bad)
    13d1:	6d                   	ins    DWORD PTR es:[rdi],dx
    13d2:	65 73 00             	gs jae 13d5 <_Z16buildStringArrayPcj+0xd5>
    13d5:	5f                   	pop    rdi
    13d6:	5a                   	pop    rdx
    13d7:	53                   	push   rbx
    13d8:	74 34                	je     140e <_Z16buildStringArrayPcj+0x10e>
    13da:	66 64 69 6d 65 65 00 	imul   bp,WORD PTR fs:[rbp+0x65],0x65
    13e1:	65 78 65             	gs js  1449 <_Z16buildStringArrayPcj+0x149>
    13e4:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
    13e7:	69 6f 6e 00 5f 5a 53 	imul   ebp,DWORD PTR [rdi+0x6e],0x535a5f00
    13ee:	74 35                	je     1425 <_Z16buildStringArrayPcj+0x125>
    13f0:	68 79 70 6f 74       	push   0x746f7079
    13f5:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    13fa:	4e 53                	rex.WRX push rbx
    13fc:	74 35                	je     1433 <_Z16buildStringArrayPcj+0x133>
    13fe:	72 61                	jb     1461 <_Z16buildStringArrayPcj+0x161>
    1400:	74 69                	je     146b <_Z16buildStringArrayPcj+0x16b>
    1402:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1403:	49                   	rex.WB
    1404:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1406:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1409:	6c                   	ins    BYTE PTR es:[rdi],dx
    140a:	31 30                	xor    DWORD PTR [rax],esi
    140c:	30 30                	xor    BYTE PTR [rax],dh
    140e:	45                   	rex.RB
    140f:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    1414:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1418:	4e                   	rex.WRX
    1419:	4b 53                	rex.WXB push r11
    141b:	74 36                	je     1453 <_Z16buildStringArrayPcj+0x153>
    141d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1420:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1421:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1422:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1423:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1427:	61                   	(bad)
    1428:	74 69                	je     1493 <_Z16buildStringArrayPcj+0x193>
    142a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    142b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    142c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    142e:	53                   	push   rbx
    142f:	74 35                	je     1466 <_Z16buildStringArrayPcj+0x166>
    1431:	72 61                	jb     1494 <_Z16buildStringArrayPcj+0x194>
    1433:	74 69                	je     149e <_Z16buildStringArrayPcj+0x19e>
    1435:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1436:	49                   	rex.WB
    1437:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1439:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    143c:	6c                   	ins    BYTE PTR es:[rdi],dx
    143d:	31 30                	xor    DWORD PTR [rax],esi
    143f:	30 30                	xor    BYTE PTR [rax],dh
    1441:	30 30                	xor    BYTE PTR [rax],dh
    1443:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1446:	45 70 73             	rex.RB jo 14bc <_Z16buildStringArrayPcj+0x1bc>
    1449:	45 76 00             	rex.RB jbe 144c <_Z16buildStringArrayPcj+0x14c>
    144c:	74 65                	je     14b3 <_Z16buildStringArrayPcj+0x1b3>
    144e:	73 74                	jae    14c4 <_Z11hashMapCtorPFj8string_tEj+0x4>
    1450:	53                   	push   rbx
    1451:	65 61                	gs (bad)
    1453:	72 63                	jb     14b8 <_Z16buildStringArrayPcj+0x1b8>
    1455:	68 54 69 6d 65       	push   0x656d6954
    145a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    145d:	53                   	push   rbx
    145e:	74 35                	je     1495 <_Z16buildStringArrayPcj+0x195>
    1460:	68 79 70 6f 74       	push   0x746f7079
    1465:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
    146b:	53                   	push   rbx
    146c:	74 39                	je     14a7 <_Z16buildStringArrayPcj+0x1a7>
    146e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    146f:	65 61                	gs (bad)
    1471:	72 62                	jb     14d5 <_Z11hashMapCtorPFj8string_tEj+0x15>
    1473:	79 69                	jns    14de <_Z11hashMapCtorPFj8string_tEj+0x1e>
    1475:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1476:	74 65                	je     14dd <_Z11hashMapCtorPFj8string_tEj+0x1d>
    1478:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    147b:	53                   	push   rbx
    147c:	74 31                	je     14af <_Z16buildStringArrayPcj+0x1af>
    147e:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    1481:	6c                   	ins    BYTE PTR es:[rdi],dx
    1482:	65 73 73             	gs jae 14f8 <_Z11hashMapCtorPFj8string_tEj+0x38>
    1485:	65 71 75             	gs jno 14fd <_Z11hashMapCtorPFj8string_tEj+0x3d>
    1488:	61                   	(bad)
    1489:	6c                   	ins    BYTE PTR es:[rdi],dx
    148a:	64 64 00 5f 5a       	fs add BYTE PTR fs:[rdi+0x5a],bl
    148f:	53                   	push   rbx
    1490:	74 34                	je     14c6 <_Z11hashMapCtorPFj8string_tEj+0x6>
    1492:	66 61                	data16 (bad)
    1494:	62 73 66 00 64       	(bad)
    1499:	75 72                	jne    150d <_Z11hashMapCtorPFj8string_tEj+0x4d>
    149b:	61                   	(bad)
    149c:	74 69                	je     1507 <_Z11hashMapCtorPFj8string_tEj+0x47>
    149e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    149f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14a0:	3c 6c                	cmp    al,0x6c
    14a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14a4:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    14a8:	74 2c                	je     14d6 <_Z11hashMapCtorPFj8string_tEj+0x16>
    14aa:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    14ad:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    14b0:	72 61                	jb     1513 <_Z11hashMapCtorPFj8string_tEj+0x53>
    14b2:	74 69                	je     151d <_Z11hashMapCtorPFj8string_tEj+0x5d>
    14b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14b5:	3c 31                	cmp    al,0x31
    14b7:	2c 20                	sub    al,0x20
    14b9:	31 30                	xor    DWORD PTR [rax],esi
    14bb:	30 30                	xor    BYTE PTR [rax],dh
    14bd:	30 30                	xor    BYTE PTR [rax],dh
    14bf:	30 3e                	xor    BYTE PTR [rsi],bh
    14c1:	20 3e                	and    BYTE PTR [rsi],bh
    14c3:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    14c6:	61                   	(bad)
    14c7:	72 62                	jb     152b <_Z11hashMapCtorPFj8string_tEj+0x6b>
    14c9:	79 69                	jns    1534 <_Z11hashMapCtorPFj8string_tEj+0x74>
    14cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14cc:	74 00                	je     14ce <_Z11hashMapCtorPFj8string_tEj+0xe>
    14ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14cf:	70 65                	jo     1536 <_Z11hashMapCtorPFj8string_tEj+0x76>
    14d1:	72 61                	jb     1534 <_Z11hashMapCtorPFj8string_tEj+0x74>
    14d3:	74 6f                	je     1544 <_Z11hashMapCtorPFj8string_tEj+0x84>
    14d5:	72 2b                	jb     1502 <_Z11hashMapCtorPFj8string_tEj+0x42>
    14d7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    14da:	53                   	push   rbx
    14db:	74 34                	je     1511 <_Z11hashMapCtorPFj8string_tEj+0x51>
    14dd:	61                   	(bad)
    14de:	74 61                	je     1541 <_Z11hashMapCtorPFj8string_tEj+0x81>
    14e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14e1:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    14e5:	53                   	push   rbx
    14e6:	74 34                	je     151c <_Z11hashMapCtorPFj8string_tEj+0x5c>
    14e8:	61                   	(bad)
    14e9:	74 61                	je     154c <_Z11hashMapCtorPFj8string_tEj+0x8c>
    14eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14ec:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    14f0:	4f 5f                	rex.WRXB pop r15
    14f2:	46                   	rex.RX
    14f3:	49                   	rex.WB
    14f4:	4c                   	rex.WR
    14f5:	45 00 6d 6f          	add    BYTE PTR [r13+0x6f],r13b
    14f9:	64 66 00 5f 5a       	data16 add BYTE PTR fs:[rdi+0x5a],bl
    14fe:	53                   	push   rbx
    14ff:	74 31                	je     1532 <_Z11hashMapCtorPFj8string_tEj+0x72>
    1501:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    1504:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    1508:	73 69                	jae    1573 <_Z17hashMapAddElementP7HashMap8string_t+0x3>
    150a:	66 79 64             	data16 jns 1571 <_Z17hashMapAddElementP7HashMap8string_t+0x1>
    150d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1510:	53                   	push   rbx
    1511:	74 31                	je     1544 <_Z11hashMapCtorPFj8string_tEj+0x84>
    1513:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    1516:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    151a:	73 69                	jae    1585 <_Z17hashMapAddElementP7HashMap8string_t+0x15>
    151c:	66 79 65             	data16 jns 1584 <_Z17hashMapAddElementP7HashMap8string_t+0x14>
    151f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1522:	53                   	push   rbx
    1523:	74 31                	je     1556 <_Z11hashMapCtorPFj8string_tEj+0x96>
    1525:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    1528:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    152c:	73 69                	jae    1597 <_Z17hashMapAddElementP7HashMap8string_t+0x27>
    152e:	66 79 66             	data16 jns 1597 <_Z17hashMapAddElementP7HashMap8string_t+0x27>
    1531:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    1534:	6d                   	ins    DWORD PTR es:[rdi],dx
    1535:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1536:	76 65                	jbe    159d <_Z17hashMapAddElementP7HashMap8string_t+0x2d>
    1538:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    153b:	4f 5f                	rex.WRXB pop r15
    153d:	77 69                	ja     15a8 <_Z17hashMapAddElementP7HashMap8string_t+0x38>
    153f:	64 65 5f             	fs gs pop rdi
    1542:	64 61                	fs (bad)
    1544:	74 61                	je     15a7 <_Z17hashMapAddElementP7HashMap8string_t+0x37>
    1546:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1549:	53                   	push   rbx
    154a:	74 34                	je     1580 <_Z17hashMapAddElementP7HashMap8string_t+0x10>
    154c:	66 64 69 6d 66 66 00 	imul   bp,WORD PTR fs:[rbp+0x66],0x66
    1553:	5f                   	pop    rdi
    1554:	5a                   	pop    rdx
    1555:	53                   	push   rbx
    1556:	74 34                	je     158c <_Z17hashMapAddElementP7HashMap8string_t+0x1c>
    1558:	6c                   	ins    BYTE PTR es:[rdi],dx
    1559:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    155a:	67 32 65 00          	xor    ah,BYTE PTR [ebp+0x0]
    155e:	5f                   	pop    rdi
    155f:	5a                   	pop    rdx
    1560:	53                   	push   rbx
    1561:	74 34                	je     1597 <_Z17hashMapAddElementP7HashMap8string_t+0x27>
    1563:	6c                   	ins    BYTE PTR es:[rdi],dx
    1564:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1565:	67 32 66 00          	xor    ah,BYTE PTR [esi+0x0]
    1569:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    156a:	70 65                	jo     15d1 <_Z17hashMapAddElementP7HashMap8string_t+0x61>
    156c:	72 61                	jb     15cf <_Z17hashMapAddElementP7HashMap8string_t+0x5f>
    156e:	74 6f                	je     15df <_Z17hashMapAddElementP7HashMap8string_t+0x6f>
    1570:	72 3d                	jb     15af <_Z17hashMapAddElementP7HashMap8string_t+0x3f>
    1572:	00 66 67             	add    BYTE PTR [rsi+0x67],ah
    1575:	65 74 77             	gs je  15ef <_Z17hashMapAddElementP7HashMap8string_t+0x7f>
    1578:	63 00                	movsxd eax,DWORD PTR [rax]
    157a:	69 73 69 6e 66 00 66 	imul   esi,DWORD PTR [rbx+0x69],0x6600666e
    1581:	70 63                	jo     15e6 <_Z17hashMapAddElementP7HashMap8string_t+0x76>
    1583:	6c                   	ins    BYTE PTR es:[rdi],dx
    1584:	61                   	(bad)
    1585:	73 73                	jae    15fa <_Z17hashMapAddElementP7HashMap8string_t+0x8a>
    1587:	69 66 79 00 67 65 74 	imul   esp,DWORD PTR [rsi+0x79],0x74656700
    158e:	77 63                	ja     15f3 <_Z17hashMapAddElementP7HashMap8string_t+0x83>
    1590:	68 61 72 00 5f       	push   0x5f007261
    1595:	5a                   	pop    rdx
    1596:	53                   	push   rbx
    1597:	74 34                	je     15cd <_Z17hashMapAddElementP7HashMap8string_t+0x5d>
    1599:	65 72 66             	gs jb  1602 <_Z17hashMapAddElementP7HashMap8string_t+0x92>
    159c:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    159f:	5f                   	pop    rdi
    15a0:	5a                   	pop    rdx
    15a1:	53                   	push   rbx
    15a2:	74 34                	je     15d8 <_Z17hashMapAddElementP7HashMap8string_t+0x68>
    15a4:	65 72 66             	gs jb  160d <_Z17hashMapAddElementP7HashMap8string_t+0x9d>
    15a7:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    15aa:	66 67 65 74 77       	data16 addr32 gs je 1626 <_Z17hashMapAddElementP7HashMap8string_t+0xb6>
    15af:	73 00                	jae    15b1 <_Z17hashMapAddElementP7HashMap8string_t+0x41>
    15b1:	5f                   	pop    rdi
    15b2:	5f                   	pop    rdi
    15b3:	75 69                	jne    161e <_Z17hashMapAddElementP7HashMap8string_t+0xae>
    15b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15b6:	74 5f                	je     1617 <_Z17hashMapAddElementP7HashMap8string_t+0xa7>
    15b8:	6c                   	ins    BYTE PTR es:[rdi],dx
    15b9:	65 61                	gs (bad)
    15bb:	73 74                	jae    1631 <_Z17hashMapAddElementP7HashMap8string_t+0xc1>
    15bd:	31 36                	xor    DWORD PTR [rsi],esi
    15bf:	5f                   	pop    rdi
    15c0:	74 00                	je     15c2 <_Z17hashMapAddElementP7HashMap8string_t+0x52>
    15c2:	5f                   	pop    rdi
    15c3:	5a                   	pop    rdx
    15c4:	4e 53                	rex.WRX push rbx
    15c6:	74 35                	je     15fd <_Z17hashMapAddElementP7HashMap8string_t+0x8d>
    15c8:	72 61                	jb     162b <_Z17hashMapAddElementP7HashMap8string_t+0xbb>
    15ca:	74 69                	je     1635 <_Z17hashMapAddElementP7HashMap8string_t+0xc5>
    15cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15cd:	49                   	rex.WB
    15ce:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    15d0:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    15d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    15d4:	31 30                	xor    DWORD PTR [rax],esi
    15d6:	30 30                	xor    BYTE PTR [rax],dh
    15d8:	30 30                	xor    BYTE PTR [rax],dh
    15da:	30 30                	xor    BYTE PTR [rax],dh
    15dc:	30 30                	xor    BYTE PTR [rax],dh
    15de:	45                   	rex.RB
    15df:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    15e4:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    15e8:	53                   	push   rbx
    15e9:	74 34                	je     161f <_Z17hashMapAddElementP7HashMap8string_t+0xaf>
    15eb:	6d                   	ins    DWORD PTR es:[rdi],dx
    15ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15ed:	64 66 65 50          	fs gs push ax
    15f1:	65 00 66 63          	add    BYTE PTR gs:[rsi+0x63],ah
    15f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    15f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15f7:	73 65                	jae    165e <_Z17hashMapPopElementP7HashMap8string_t+0x1e>
    15f9:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    15fc:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    15fe:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1601:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    1604:	70 79                	jo     167f <_Z17hashMapPopElementP7HashMap8string_t+0x3f>
    1606:	73 69                	jae    1671 <_Z17hashMapPopElementP7HashMap8string_t+0x31>
    1608:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    160a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    160d:	53                   	push   rbx
    160e:	74 33                	je     1643 <_Z17hashMapPopElementP7HashMap8string_t+0x3>
    1610:	74 61                	je     1673 <_Z17hashMapPopElementP7HashMap8string_t+0x33>
    1612:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1613:	66 00 5f 6d          	data16 add BYTE PTR [rdi+0x6d],bl
    1617:	6d                   	ins    DWORD PTR es:[rdi],dx
    1618:	5f                   	pop    rdi
    1619:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    161c:	33 32                	xor    esi,DWORD PTR [rdx]
    161e:	5f                   	pop    rdi
    161f:	66 69 6c 65 73 00 69 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6900
    1626:	73 6c                	jae    1694 <_Z17hashMapPopElementP7HashMap8string_t+0x54>
    1628:	65 73 73             	gs jae 169e <_Z17hashMapPopElementP7HashMap8string_t+0x5e>
    162b:	65 71 75             	gs jno 16a3 <_Z17hashMapPopElementP7HashMap8string_t+0x63>
    162e:	61                   	(bad)
    162f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1630:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1633:	53                   	push   rbx
    1634:	74 38                	je     166e <_Z17hashMapPopElementP7HashMap8string_t+0x2e>
    1636:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    163d:	6c                   	ins    BYTE PTR es:[rdi],dx
    163e:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    1642:	53                   	push   rbx
    1643:	74 38                	je     167d <_Z17hashMapPopElementP7HashMap8string_t+0x3d>
    1645:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    164c:	6c                   	ins    BYTE PTR es:[rdi],dx
    164d:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1651:	53                   	push   rbx
    1652:	74 38                	je     168c <_Z17hashMapPopElementP7HashMap8string_t+0x4c>
    1654:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    165b:	6c                   	ins    BYTE PTR es:[rdi],dx
    165c:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1660:	4e 53                	rex.WRX push rbx
    1662:	74 36                	je     169a <_Z17hashMapPopElementP7HashMap8string_t+0x5a>
    1664:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1667:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1668:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1669:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    166a:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    166e:	61                   	(bad)
    166f:	74 69                	je     16da <_Z17hashMapPopElementP7HashMap8string_t+0x9a>
    1671:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1672:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1673:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1675:	53                   	push   rbx
    1676:	74 35                	je     16ad <_Z17hashMapPopElementP7HashMap8string_t+0x6d>
    1678:	72 61                	jb     16db <_Z17hashMapPopElementP7HashMap8string_t+0x9b>
    167a:	74 69                	je     16e5 <_Z17hashMapPopElementP7HashMap8string_t+0xa5>
    167c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    167d:	49                   	rex.WB
    167e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1680:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1683:	6c                   	ins    BYTE PTR es:[rdi],dx
    1684:	31 30                	xor    DWORD PTR [rax],esi
    1686:	30 30                	xor    BYTE PTR [rax],dh
    1688:	30 30                	xor    BYTE PTR [rax],dh
    168a:	30 30                	xor    BYTE PTR [rax],dh
    168c:	30 30                	xor    BYTE PTR [rax],dh
    168e:	45                   	rex.RB
    168f:	45                   	rex.RB
    1690:	45 34 7a             	rex.RB xor al,0x7a
    1693:	65 72 6f             	gs jb  1705 <_Z17hashMapPopElementP7HashMap8string_t+0xc5>
    1696:	45 76 00             	rex.RB jbe 1699 <_Z17hashMapPopElementP7HashMap8string_t+0x59>
    1699:	73 74                	jae    170f <_Z17hashMapPopElementP7HashMap8string_t+0xcf>
    169b:	61                   	(bad)
    169c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    169d:	64 61                	fs (bad)
    169f:	72 74                	jb     1715 <_Z17hashMapPopElementP7HashMap8string_t+0xd5>
    16a1:	5f                   	pop    rdi
    16a2:	64 65 76 69          	fs gs jbe 170f <_Z17hashMapPopElementP7HashMap8string_t+0xcf>
    16a6:	61                   	(bad)
    16a7:	74 69                	je     1712 <_Z17hashMapPopElementP7HashMap8string_t+0xd2>
    16a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16ab:	00 66 6d             	add    BYTE PTR [rsi+0x6d],ah
    16ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16af:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    16b3:	73 63                	jae    1718 <_Z17hashMapPopElementP7HashMap8string_t+0xd8>
    16b5:	6d                   	ins    DWORD PTR es:[rdi],dx
    16b6:	70 00                	jo     16b8 <_Z17hashMapPopElementP7HashMap8string_t+0x78>
    16b8:	5f                   	pop    rdi
    16b9:	5f                   	pop    rdi
    16ba:	72 65                	jb     1721 <_Z20hashMapSearchElementP7HashMap8string_t+0x1>
    16bc:	70 00                	jo     16be <_Z17hashMapPopElementP7HashMap8string_t+0x7e>
    16be:	77 63                	ja     1723 <_Z20hashMapSearchElementP7HashMap8string_t+0x3>
    16c0:	73 70                	jae    1732 <_Z20hashMapSearchElementP7HashMap8string_t+0x12>
    16c2:	62 72 6b 00 5f       	(bad)
    16c7:	5a                   	pop    rdx
    16c8:	4e 53                	rex.WRX push rbx
    16ca:	74 36                	je     1702 <_Z17hashMapPopElementP7HashMap8string_t+0xc2>
    16cc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    16cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16d2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    16d6:	61                   	(bad)
    16d7:	74 69                	je     1742 <_Z20hashMapSearchElementP7HashMap8string_t+0x22>
    16d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16db:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    16dd:	53                   	push   rbx
    16de:	74 35                	je     1715 <_Z17hashMapPopElementP7HashMap8string_t+0xd5>
    16e0:	72 61                	jb     1743 <_Z20hashMapSearchElementP7HashMap8string_t+0x23>
    16e2:	74 69                	je     174d <_Z20hashMapSearchElementP7HashMap8string_t+0x2d>
    16e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16e5:	49                   	rex.WB
    16e6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    16e8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    16eb:	6c                   	ins    BYTE PTR es:[rdi],dx
    16ec:	31 30                	xor    DWORD PTR [rax],esi
    16ee:	30 30                	xor    BYTE PTR [rax],dh
    16f0:	30 30                	xor    BYTE PTR [rax],dh
    16f2:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    16f5:	45                   	rex.RB
    16f6:	43 32 49 6c          	rex.XB xor cl,BYTE PTR [r9+0x6c]
    16fa:	76 45                	jbe    1741 <_Z20hashMapSearchElementP7HashMap8string_t+0x21>
    16fc:	45 52                	rex.RB push r10
    16fe:	4b 54                	rex.WXB push r12
    1700:	5f                   	pop    rdi
    1701:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1704:	53                   	push   rbx
    1705:	74 36                	je     173d <_Z20hashMapSearchElementP7HashMap8string_t+0x1d>
    1707:	72 65                	jb     176e <_Z20hashMapSearchElementP7HashMap8string_t+0x4e>
    1709:	6d                   	ins    DWORD PTR es:[rdi],dx
    170a:	71 75                	jno    1781 <_Z20hashMapSearchElementP7HashMap8string_t+0x61>
    170c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    170d:	65 65 50             	gs gs push rax
    1710:	69 00 5f 5a 4e 53    	imul   eax,DWORD PTR [rax],0x534e5a5f
    1716:	74 36                	je     174e <_Z20hashMapSearchElementP7HashMap8string_t+0x2e>
    1718:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    171b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    171c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    171d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    171e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1722:	61                   	(bad)
    1723:	74 69                	je     178e <_Z20hashMapSearchElementP7HashMap8string_t+0x6e>
    1725:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1726:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1727:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1729:	53                   	push   rbx
    172a:	74 35                	je     1761 <_Z20hashMapSearchElementP7HashMap8string_t+0x41>
    172c:	72 61                	jb     178f <_Z20hashMapSearchElementP7HashMap8string_t+0x6f>
    172e:	74 69                	je     1799 <_Z20hashMapSearchElementP7HashMap8string_t+0x79>
    1730:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1731:	49                   	rex.WB
    1732:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1734:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1737:	6c                   	ins    BYTE PTR es:[rdi],dx
    1738:	31 30                	xor    DWORD PTR [rax],esi
    173a:	30 30                	xor    BYTE PTR [rax],dh
    173c:	30 30                	xor    BYTE PTR [rax],dh
    173e:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1741:	45 70 70             	rex.RB jo 17b4 <_Z20hashMapSearchElementP7HashMap8string_t+0x94>
    1744:	45 69 00 5f 5f 69 73 	imul   r8d,DWORD PTR [r8],0x73695f5f
    174b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    174c:	63 32                	movsxd esi,DWORD PTR [rdx]
    174e:	33 5f 77             	xor    ebx,DWORD PTR [rdi+0x77]
    1751:	73 63                	jae    17b6 <_Z20hashMapSearchElementP7HashMap8string_t+0x96>
    1753:	61                   	(bad)
    1754:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1755:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1759:	4e                   	rex.WRX
    175a:	4b 53                	rex.WXB push r11
    175c:	74 36                	je     1794 <_Z20hashMapSearchElementP7HashMap8string_t+0x74>
    175e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1761:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1762:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1763:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1764:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1768:	61                   	(bad)
    1769:	74 69                	je     17d4 <_Z20hashMapSearchElementP7HashMap8string_t+0xb4>
    176b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    176c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    176d:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    176f:	53                   	push   rbx
    1770:	74 35                	je     17a7 <_Z20hashMapSearchElementP7HashMap8string_t+0x87>
    1772:	72 61                	jb     17d5 <_Z20hashMapSearchElementP7HashMap8string_t+0xb5>
    1774:	74 69                	je     17df <_Z20hashMapSearchElementP7HashMap8string_t+0xbf>
    1776:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1777:	49                   	rex.WB
    1778:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    177a:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    177d:	6c                   	ins    BYTE PTR es:[rdi],dx
    177e:	31 30                	xor    DWORD PTR [rax],esi
    1780:	30 30                	xor    BYTE PTR [rax],dh
    1782:	30 30                	xor    BYTE PTR [rax],dh
    1784:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1787:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    178d:	74 45                	je     17d4 <_Z20hashMapSearchElementP7HashMap8string_t+0xb4>
    178f:	76 00                	jbe    1791 <_Z20hashMapSearchElementP7HashMap8string_t+0x71>
    1791:	67 70 5f             	addr32 jo 17f3 <_Z13getLoadFactorP7HashMap+0x3>
    1794:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1795:	66 66 73 65          	data16 data16 jae 17fe <_Z13getLoadFactorP7HashMap+0xe>
    1799:	74 00                	je     179b <_Z20hashMapSearchElementP7HashMap8string_t+0x7b>
    179b:	5f                   	pop    rdi
    179c:	5f                   	pop    rdi
    179d:	72 68                	jb     1807 <_Z13getLoadFactorP7HashMap+0x17>
    179f:	73 00                	jae    17a1 <_Z20hashMapSearchElementP7HashMap8string_t+0x81>
    17a1:	77 63                	ja     1806 <_Z13getLoadFactorP7HashMap+0x16>
    17a3:	73 6e                	jae    1813 <_Z13getLoadFactorP7HashMap+0x23>
    17a5:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    17a8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17ab:	53                   	push   rbx
    17ac:	74 34                	je     17e2 <_Z20hashMapSearchElementP7HashMap8string_t+0xc2>
    17ae:	73 69                	jae    1819 <_Z13getLoadFactorP7HashMap+0x29>
    17b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17b1:	68 66 00 5f 49       	push   0x495f0066
    17b6:	4f 5f                	rex.WRXB pop r15
    17b8:	6c                   	ins    BYTE PTR es:[rdi],dx
    17b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17ba:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    17bd:	74 00                	je     17bf <_Z20hashMapSearchElementP7HashMap8string_t+0x9f>
    17bf:	5f                   	pop    rdi
    17c0:	5f                   	pop    rdi
    17c1:	75 69                	jne    182c <_Z11hashMapDtorP7HashMap+0xc>
    17c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17c4:	74 31                	je     17f7 <_Z13getLoadFactorP7HashMap+0x7>
    17c6:	36 5f                	ss pop rdi
    17c8:	74 00                	je     17ca <_Z20hashMapSearchElementP7HashMap8string_t+0xaa>
    17ca:	77 6d                	ja     1839 <_Z11hashMapDtorP7HashMap+0x19>
    17cc:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    17ce:	6d                   	ins    DWORD PTR es:[rdi],dx
    17cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17d0:	76 65                	jbe    1837 <_Z11hashMapDtorP7HashMap+0x17>
    17d2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17d5:	53                   	push   rbx
    17d6:	74 36                	je     180e <_Z13getLoadFactorP7HashMap+0x1e>
    17d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    17d9:	72 6f                	jb     184a <_Z11hashMapDtorP7HashMap+0x2a>
    17db:	75 6e                	jne    184b <_Z11hashMapDtorP7HashMap+0x2b>
    17dd:	64 66 00 6c 6f 67    	data16 add BYTE PTR fs:[rdi+rbp*2+0x67],ch
    17e3:	31 30                	xor    DWORD PTR [rax],esi
    17e5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17e8:	4e 53                	rex.WRX push rbx
    17ea:	74 36                	je     1822 <_Z11hashMapDtorP7HashMap+0x2>
    17ec:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    17ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17f2:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    17f5:	32 31                	xor    dh,BYTE PTR [rcx]
    17f7:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    17fa:	65 61                	gs (bad)
    17fc:	64 79 5f             	fs jns 185e <_Z11hashMapDtorP7HashMap+0x3e>
    17ff:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1803:	6b 39 69             	imul   edi,DWORD PTR [rcx],0x69
    1806:	73 5f                	jae    1867 <_Z11hashMapDtorP7HashMap+0x47>
    1808:	73 74                	jae    187e <_Z11hashMapDtorP7HashMap+0x5e>
    180a:	65 61                	gs (bad)
    180c:	64 79 45             	fs jns 1854 <_Z11hashMapDtorP7HashMap+0x34>
    180f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1812:	4e 53                	rex.WRX push rbx
    1814:	74 36                	je     184c <_Z11hashMapDtorP7HashMap+0x2c>
    1816:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1819:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    181a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    181b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    181c:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1820:	61                   	(bad)
    1821:	74 69                	je     188c <_Z11hashMapDtorP7HashMap+0x6c>
    1823:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1824:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1825:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1827:	53                   	push   rbx
    1828:	74 35                	je     185f <_Z11hashMapDtorP7HashMap+0x3f>
    182a:	72 61                	jb     188d <_Z11hashMapDtorP7HashMap+0x6d>
    182c:	74 69                	je     1897 <_Z6resizeP7HashMapj+0x7>
    182e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    182f:	49                   	rex.WB
    1830:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1832:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1835:	6c                   	ins    BYTE PTR es:[rdi],dx
    1836:	31 30                	xor    DWORD PTR [rax],esi
    1838:	30 30                	xor    BYTE PTR [rax],dh
    183a:	30 30                	xor    BYTE PTR [rax],dh
    183c:	30 30                	xor    BYTE PTR [rax],dh
    183e:	30 30                	xor    BYTE PTR [rax],dh
    1840:	45                   	rex.RB
    1841:	45                   	rex.RB
    1842:	45                   	rex.RB
    1843:	43 34 45             	rex.XB xor al,0x45
    1846:	76 00                	jbe    1848 <_Z11hashMapDtorP7HashMap+0x28>
    1848:	5f                   	pop    rdi
    1849:	6d                   	ins    DWORD PTR es:[rdi],dx
    184a:	6d                   	ins    DWORD PTR es:[rdi],dx
    184b:	5f                   	pop    rdi
    184c:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    184f:	33 32                	xor    esi,DWORD PTR [rdx]
    1851:	55                   	push   rbp
    1852:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1853:	72 6f                	jb     18c4 <_Z6resizeP7HashMapj+0x34>
    1855:	6c                   	ins    BYTE PTR es:[rdi],dx
    1856:	6c                   	ins    BYTE PTR es:[rdi],dx
    1857:	5f                   	pop    rdi
    1858:	66 69 6c 65 73 00 77 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7700
    185f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1860:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1862:	73 65                	jae    18c9 <_Z6resizeP7HashMapj+0x39>
    1864:	74 00                	je     1866 <_Z11hashMapDtorP7HashMap+0x46>
    1866:	74 6d                	je     18d5 <_Z6resizeP7HashMapj+0x45>
    1868:	5f                   	pop    rdi
    1869:	6d                   	ins    DWORD PTR es:[rdi],dx
    186a:	69 6e 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74535a5f
    1871:	38 63 6f             	cmp    BYTE PTR [rbx+0x6f],ah
    1874:	70 79                	jo     18ef <_Z6resizeP7HashMapj+0x5f>
    1876:	73 69                	jae    18e1 <_Z6resizeP7HashMapj+0x51>
    1878:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    187a:	65 65 00 5f 49       	gs add BYTE PTR gs:[rdi+0x49],bl
    187f:	4f 5f                	rex.WRXB pop r15
    1881:	72 65                	jb     18e8 <_Z6resizeP7HashMapj+0x58>
    1883:	61                   	(bad)
    1884:	64 5f                	fs pop rdi
    1886:	70 74                	jo     18fc <_Z6resizeP7HashMapj+0x6c>
    1888:	72 00                	jb     188a <_Z11hashMapDtorP7HashMap+0x6a>
    188a:	5f                   	pop    rdi
    188b:	5a                   	pop    rdx
    188c:	53                   	push   rbx
    188d:	74 38                	je     18c7 <_Z6resizeP7HashMapj+0x37>
    188f:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    1892:	79 73                	jns    1907 <_Z6resizeP7HashMapj+0x77>
    1894:	69 67 6e 66 66 00 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f006666
    189b:	5a                   	pop    rdx
    189c:	53                   	push   rbx
    189d:	74 35                	je     18d4 <_Z6resizeP7HashMapj+0x44>
    189f:	69 73 69 6e 66 66 00 	imul   esi,DWORD PTR [rbx+0x69],0x66666e
    18a6:	6d                   	ins    DWORD PTR es:[rdi],dx
    18a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18a9:	5f                   	pop    rdi
    18aa:	74 68                	je     1914 <_Z6resizeP7HashMapj+0x84>
    18ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18ad:	75 73                	jne    1922 <_Z6resizeP7HashMapj+0x92>
    18af:	61                   	(bad)
    18b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18b1:	64 73 5f             	fs jae 1913 <_Z6resizeP7HashMapj+0x83>
    18b4:	73 65                	jae    191b <_Z6resizeP7HashMapj+0x8b>
    18b6:	70 00                	jo     18b8 <_Z6resizeP7HashMapj+0x28>
    18b8:	69 73 6c 65 73 73 67 	imul   esi,DWORD PTR [rbx+0x6c],0x67737365
    18bf:	72 65                	jb     1926 <_Z6resizeP7HashMapj+0x96>
    18c1:	61                   	(bad)
    18c2:	74 65                	je     1929 <_Z6resizeP7HashMapj+0x99>
    18c4:	72 00                	jb     18c6 <_Z6resizeP7HashMapj+0x36>
    18c6:	75 6e                	jne    1936 <_Z6resizeP7HashMapj+0xa6>
    18c8:	67 65 74 77          	addr32 gs je 1943 <_Z6resizeP7HashMapj+0xb3>
    18cc:	63 00                	movsxd eax,DWORD PTR [rax]
    18ce:	66 70 5f             	data16 jo 1930 <_Z6resizeP7HashMapj+0xa0>
    18d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18d2:	66 66 73 65          	data16 data16 jae 193b <_Z6resizeP7HashMapj+0xab>
    18d6:	74 00                	je     18d8 <_Z6resizeP7HashMapj+0x48>
    18d8:	66 74 65             	data16 je 1940 <_Z6resizeP7HashMapj+0xb0>
    18db:	6c                   	ins    BYTE PTR es:[rdi],dx
    18dc:	6c                   	ins    BYTE PTR es:[rdi],dx
    18dd:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    18e0:	53                   	push   rbx
    18e1:	74 34                	je     1917 <_Z6resizeP7HashMapj+0x87>
    18e3:	61                   	(bad)
    18e4:	73 69                	jae    194f <_Z6resizeP7HashMapj+0xbf>
    18e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18e7:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    18eb:	53                   	push   rbx
    18ec:	74 34                	je     1922 <_Z6resizeP7HashMapj+0x92>
    18ee:	61                   	(bad)
    18ef:	73 69                	jae    195a <_Z6resizeP7HashMapj+0xca>
    18f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18f2:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    18f6:	53                   	push   rbx
    18f7:	74 33                	je     192c <_Z6resizeP7HashMapj+0x9c>
    18f9:	66 6d                	ins    WORD PTR es:[rdi],dx
    18fb:	61                   	(bad)
    18fc:	66 66 66 00 5f 5a    	data16 data16 data16 add BYTE PTR [rdi+0x5a],bl
    1902:	4e 53                	rex.WRX push rbx
    1904:	74 36                	je     193c <_Z6resizeP7HashMapj+0xac>
    1906:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1909:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    190a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    190b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    190c:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1910:	61                   	(bad)
    1911:	74 69                	je     197c <_Z6resizeP7HashMapj+0xec>
    1913:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1914:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1915:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1917:	53                   	push   rbx
    1918:	74 35                	je     194f <_Z6resizeP7HashMapj+0xbf>
    191a:	72 61                	jb     197d <_Z6resizeP7HashMapj+0xed>
    191c:	74 69                	je     1987 <_Z6resizeP7HashMapj+0xf7>
    191e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    191f:	49                   	rex.WB
    1920:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1922:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1925:	6c                   	ins    BYTE PTR es:[rdi],dx
    1926:	31 30                	xor    DWORD PTR [rax],esi
    1928:	30 30                	xor    BYTE PTR [rax],dh
    192a:	30 30                	xor    BYTE PTR [rax],dh
    192c:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    192f:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    1931:	6d                   	ins    DWORD PTR es:[rdi],dx
    1932:	45 76 00             	rex.RB jbe 1935 <_Z6resizeP7HashMapj+0xa5>
    1935:	6d                   	ins    DWORD PTR es:[rdi],dx
    1936:	62 72 6c 65 6e       	(bad)
    193b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    193e:	72 63                	jb     19a3 <_Z6resizeP7HashMapj+0x113>
    1940:	6d                   	ins    DWORD PTR es:[rdi],dx
    1941:	70 00                	jo     1943 <_Z6resizeP7HashMapj+0xb3>
    1943:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1944:	70 65                	jo     19ab <_Z6resizeP7HashMapj+0x11b>
    1946:	72 61                	jb     19a9 <_Z6resizeP7HashMapj+0x119>
    1948:	74 6f                	je     19b9 <_Z6resizeP7HashMapj+0x129>
    194a:	72 2d                	jb     1979 <_Z6resizeP7HashMapj+0xe9>
    194c:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    194f:	67 61                	addr32 (bad)
    1951:	74 69                	je     19bc <_Z6resizeP7HashMapj+0x12c>
    1953:	76 65                	jbe    19ba <_Z6resizeP7HashMapj+0x12a>
    1955:	5f                   	pop    rdi
    1956:	73 69                	jae    19c1 <_Z6resizeP7HashMapj+0x131>
    1958:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    195a:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    195e:	31 70 00             	xor    DWORD PTR [rax+0x0],esi
    1961:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1968:	65 72 00             	gs jb  196b <_Z6resizeP7HashMapj+0xdb>
    196b:	5f                   	pop    rdi
    196c:	52                   	push   rdx
    196d:	65 70 31             	gs jo  19a1 <_Z6resizeP7HashMapj+0x111>
    1970:	00 5f 52             	add    BYTE PTR [rdi+0x52],bl
    1973:	65 70 32             	gs jo  19a8 <_Z6resizeP7HashMapj+0x118>
    1976:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    1979:	74 5f                	je     19da <_Z6resizeP7HashMapj+0x14a>
    197b:	70 5f                	jo     19dc <_Z6resizeP7HashMapj+0x14c>
    197d:	63 73 5f             	movsxd esi,DWORD PTR [rbx+0x5f]
    1980:	70 72                	jo     19f4 <_Z6resizeP7HashMapj+0x164>
    1982:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    1986:	65 73 00             	gs jae 1989 <_Z6resizeP7HashMapj+0xf9>
    1989:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    198b:	61                   	(bad)
    198c:	70 73                	jo     1a01 <_Z6resizeP7HashMapj+0x171>
    198e:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    1993:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
    199a:	5f                   	pop    rdi
    199b:	74 6f                	je     1a0c <_Z6resizeP7HashMapj+0x17c>
    199d:	5f                   	pop    rdi
    199e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    19a1:	72 73                	jb     1a16 <_Z6resizeP7HashMapj+0x186>
    19a3:	5f                   	pop    rdi
    19a4:	69 73 5f 75 6e 73 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69736e75
    19ab:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    19ad:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    19b2:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    19b9:	76 73                	jbe    1a2e <_Z6resizeP7HashMapj+0x19e>
    19bb:	77 73                	ja     1a30 <_Z6resizeP7HashMapj+0x1a0>
    19bd:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    19c0:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    19c4:	53                   	push   rbx
    19c5:	74 31                	je     19f8 <_Z6resizeP7HashMapj+0x168>
    19c7:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    19ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    19cb:	65 73 73             	gs jae 1a41 <_Z6resizeP7HashMapj+0x1b1>
    19ce:	67 72 65             	addr32 jb 1a36 <_Z6resizeP7HashMapj+0x1a6>
    19d1:	61                   	(bad)
    19d2:	74 65                	je     1a39 <_Z6resizeP7HashMapj+0x1a9>
    19d4:	72 64                	jb     1a3a <_Z6resizeP7HashMapj+0x1aa>
    19d6:	64 00 5f 6d          	add    BYTE PTR fs:[rdi+0x6d],bl
    19da:	61                   	(bad)
    19db:	72 6b                	jb     1a48 <_Z6resizeP7HashMapj+0x1b8>
    19dd:	65 72 73             	gs jb  1a53 <_Z6resizeP7HashMapj+0x1c3>
    19e0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19e3:	53                   	push   rbx
    19e4:	74 35                	je     1a1b <_Z6resizeP7HashMapj+0x18b>
    19e6:	65 78 70             	gs js  1a59 <_Z6resizeP7HashMapj+0x1c9>
    19e9:	6d                   	ins    DWORD PTR es:[rdi],dx
    19ea:	31 65 00             	xor    DWORD PTR [rbp+0x0],esp
    19ed:	5f                   	pop    rdi
    19ee:	5a                   	pop    rdx
    19ef:	53                   	push   rbx
    19f0:	74 35                	je     1a27 <_Z6resizeP7HashMapj+0x197>
    19f2:	65 78 70             	gs js  1a65 <_Z6resizeP7HashMapj+0x1d5>
    19f5:	6d                   	ins    DWORD PTR es:[rdi],dx
    19f6:	31 66 00             	xor    DWORD PTR [rsi+0x0],esp
    19f9:	74 6d                	je     1a68 <_Z6resizeP7HashMapj+0x1d8>
    19fb:	5f                   	pop    rdi
    19fc:	6d                   	ins    DWORD PTR es:[rdi],dx
    19fd:	64 61                	fs (bad)
    19ff:	79 00                	jns    1a01 <_Z6resizeP7HashMapj+0x171>
    1a01:	5f                   	pop    rdi
    1a02:	5a                   	pop    rdx
    1a03:	53                   	push   rbx
    1a04:	74 33                	je     1a39 <_Z6resizeP7HashMapj+0x1a9>
    1a06:	73 69                	jae    1a71 <_Z6resizeP7HashMapj+0x1e1>
    1a08:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a09:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1a0d:	53                   	push   rbx
    1a0e:	74 33                	je     1a43 <_Z6resizeP7HashMapj+0x1b3>
    1a10:	73 69                	jae    1a7b <_Z6resizeP7HashMapj+0x1eb>
    1a12:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a13:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    1a17:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a18:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a19:	61                   	(bad)
    1a1a:	74 33                	je     1a4f <_Z6resizeP7HashMapj+0x1bf>
    1a1c:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    1a1f:	5f                   	pop    rdi
    1a20:	47 5f                	rex.RXB pop r15
    1a22:	66 70 6f             	data16 jo 1a94 <_Z6resizeP7HashMapj+0x204>
    1a25:	73 5f                	jae    1a86 <_Z6resizeP7HashMapj+0x1f6>
    1a27:	74 00                	je     1a29 <_Z6resizeP7HashMapj+0x199>
    1a29:	5f                   	pop    rdi
    1a2a:	5f                   	pop    rdi
    1a2b:	75 69                	jne    1a96 <_Z6resizeP7HashMapj+0x206>
    1a2d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a2e:	74 5f                	je     1a8f <_Z6resizeP7HashMapj+0x1ff>
    1a30:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a31:	65 61                	gs (bad)
    1a33:	73 74                	jae    1aa9 <_Z6resizeP7HashMapj+0x219>
    1a35:	36 34 5f             	ss xor al,0x5f
    1a38:	74 00                	je     1a3a <_Z6resizeP7HashMapj+0x1aa>
    1a3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a3b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a3c:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    1a3f:	74 69                	je     1aaa <_Z6resizeP7HashMapj+0x21a>
    1a41:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a42:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    1a46:	73 63                	jae    1aab <_Z6resizeP7HashMapj+0x21b>
    1a48:	70 79                	jo     1ac3 <_Z6resizeP7HashMapj+0x233>
    1a4a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1a4d:	53                   	push   rbx
    1a4e:	74 37                	je     1a87 <_Z6resizeP7HashMapj+0x1f7>
    1a50:	73 63                	jae    1ab5 <_Z6resizeP7HashMapj+0x225>
    1a52:	61                   	(bad)
    1a53:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a54:	62 6c 6e             	(bad)  {k5}
    1a57:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1a59:	00 76 73             	add    BYTE PTR [rsi+0x73],dh
    1a5c:	77 70                	ja     1ace <_Z6resizeP7HashMapj+0x23e>
    1a5e:	72 69                	jb     1ac9 <_Z6resizeP7HashMapj+0x239>
    1a60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a61:	74 66                	je     1ac9 <_Z6resizeP7HashMapj+0x239>
    1a63:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1a66:	4e 53                	rex.WRX push rbx
    1a68:	74 36                	je     1aa0 <_Z6resizeP7HashMapj+0x210>
    1a6a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1a6d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a6e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a6f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a70:	31 33                	xor    DWORD PTR [rbx],esi
    1a72:	64 75 72             	fs jne 1ae7 <_Z15crc32HashString8string_t+0x7>
    1a75:	61                   	(bad)
    1a76:	74 69                	je     1ae1 <_Z15crc32HashString8string_t+0x1>
    1a78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a7a:	5f                   	pop    rdi
    1a7b:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    1a7e:	74 49                	je     1ac9 <_Z6resizeP7HashMapj+0x239>
    1a80:	4e 53                	rex.WRX push rbx
    1a82:	5f                   	pop    rdi
    1a83:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1a87:	61                   	(bad)
    1a88:	74 69                	je     1af3 <_Z19_mm_crc32HashString8string_t+0x3>
    1a8a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a8b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a8c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1a8e:	53                   	push   rbx
    1a8f:	74 35                	je     1ac6 <_Z6resizeP7HashMapj+0x236>
    1a91:	72 61                	jb     1af4 <_Z19_mm_crc32HashString8string_t+0x4>
    1a93:	74 69                	je     1afe <_Z19_mm_crc32HashString8string_t+0xe>
    1a95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a96:	49                   	rex.WB
    1a97:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1a99:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1a9c:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a9d:	31 30                	xor    DWORD PTR [rax],esi
    1a9f:	30 30                	xor    BYTE PTR [rax],dh
    1aa1:	30 30                	xor    BYTE PTR [rax],dh
    1aa3:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1aa6:	45                   	rex.RB
    1aa7:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    1aa9:	53                   	push   rbx
    1aaa:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    1aad:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1aaf:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1ab2:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ab3:	31 30                	xor    DWORD PTR [rax],esi
    1ab5:	30 30                	xor    BYTE PTR [rax],dh
    1ab7:	30 30                	xor    BYTE PTR [rax],dh
    1ab9:	30 30                	xor    BYTE PTR [rax],dh
    1abb:	30 30                	xor    BYTE PTR [rax],dh
    1abd:	45                   	rex.RB
    1abe:	45                   	rex.RB
    1abf:	45                   	rex.RB
    1ac0:	45                   	rex.RB
    1ac1:	4e 53                	rex.WRX push rbx
    1ac3:	74 39                	je     1afe <_Z19_mm_crc32HashString8string_t+0xe>
    1ac5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1ac7:	61                   	(bad)
    1ac8:	62                   	(bad)
    1ac9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1aca:	65 5f                	gs pop rdi
    1acc:	69 66 49 58 73 72 4e 	imul   esp,DWORD PTR [rsi+0x49],0x4e727358
    1ad3:	53                   	push   rbx
    1ad4:	5f                   	pop    rdi
    1ad5:	31 33                	xor    DWORD PTR [rbx],esi
    1ad7:	5f                   	pop    rdi
    1ad8:	5f                   	pop    rdi
    1ad9:	69 73 5f 64 75 72 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61727564
    1ae0:	74 69                	je     1b4b <_Z25_mm_crc32UnrollHashString8string_t+0x4b>
    1ae2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ae3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ae4:	49 54                	rex.WB push r12
    1ae6:	5f                   	pop    rdi
    1ae7:	45                   	rex.RB
    1ae8:	45 35 76 61 6c 75    	rex.RB xor eax,0x756c6176
    1aee:	65 45 53             	gs rex.RB push r11
    1af1:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    1af4:	34 74                	xor    al,0x74
    1af6:	79 70                	jns    1b68 <_Z17murmur2HashString8string_t+0x8>
    1af8:	65 45 52             	gs rex.RB push r10
    1afb:	4b                   	rex.WXB
    1afc:	4e 53                	rex.WRX push rbx
    1afe:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    1b01:	54                   	push   rsp
    1b02:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    1b05:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    1b08:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1b0c:	53                   	push   rbx
    1b0d:	74 33                	je     1b42 <_Z25_mm_crc32UnrollHashString8string_t+0x42>
    1b0f:	65 78 70             	gs js  1b82 <_Z17adler32HashString8string_t+0x2>
    1b12:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    1b16:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1b1d:	76 66                	jbe    1b85 <_Z17adler32HashString8string_t+0x5>
    1b1f:	77 73                	ja     1b94 <_Z17adler32HashString8string_t+0x14>
    1b21:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    1b24:	66 00 64 61 74       	data16 add BYTE PTR [rcx+riz*2+0x74],ah
    1b29:	61                   	(bad)
    1b2a:	5f                   	pop    rdi
    1b2b:	61                   	(bad)
    1b2c:	72 72                	jb     1ba0 <_Z17adler32HashString8string_t+0x20>
    1b2e:	61                   	(bad)
    1b2f:	79 00                	jns    1b31 <_Z25_mm_crc32UnrollHashString8string_t+0x31>
    1b31:	5f                   	pop    rdi
    1b32:	5a                   	pop    rdx
    1b33:	53                   	push   rbx
    1b34:	74 34                	je     1b6a <_Z17murmur2HashString8string_t+0xa>
    1b36:	66 6d                	ins    WORD PTR es:[rdi],dx
    1b38:	61                   	(bad)
    1b39:	78 65                	js     1ba0 <_Z17adler32HashString8string_t+0x20>
    1b3b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1b3f:	4e 53                	rex.WRX push rbx
    1b41:	74 36                	je     1b79 <_Z13sumHashString8string_t+0x9>
    1b43:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1b46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b49:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1b4d:	61                   	(bad)
    1b4e:	74 69                	je     1bb9 <_Z17adler32HashString8string_t+0x39>
    1b50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b52:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1b54:	53                   	push   rbx
    1b55:	74 35                	je     1b8c <_Z17adler32HashString8string_t+0xc>
    1b57:	72 61                	jb     1bba <_Z17adler32HashString8string_t+0x3a>
    1b59:	74 69                	je     1bc4 <_Z17adler32HashString8string_t+0x44>
    1b5b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b5c:	49                   	rex.WB
    1b5d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1b5f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1b62:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b63:	31 30                	xor    DWORD PTR [rax],esi
    1b65:	30 30                	xor    BYTE PTR [rax],dh
    1b67:	30 30                	xor    BYTE PTR [rax],dh
    1b69:	30 30                	xor    BYTE PTR [rax],dh
    1b6b:	30 30                	xor    BYTE PTR [rax],dh
    1b6d:	45                   	rex.RB
    1b6e:	45                   	rex.RB
    1b6f:	45                   	rex.RB
    1b70:	43 34 45             	rex.XB xor al,0x45
    1b73:	52                   	push   rdx
    1b74:	4b 53                	rex.WXB push r11
    1b76:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    1b79:	5f                   	pop    rdi
    1b7a:	5a                   	pop    rdx
    1b7b:	4e                   	rex.WRX
    1b7c:	4b 53                	rex.WXB push r11
    1b7e:	74 36                	je     1bb6 <_Z17adler32HashString8string_t+0x36>
    1b80:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1b83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b84:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b86:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1b8a:	61                   	(bad)
    1b8b:	74 69                	je     1bf6 <_Z17adler32HashString8string_t+0x76>
    1b8d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b8e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b8f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1b91:	53                   	push   rbx
    1b92:	74 35                	je     1bc9 <_Z17adler32HashString8string_t+0x49>
    1b94:	72 61                	jb     1bf7 <_Z17adler32HashString8string_t+0x77>
    1b96:	74 69                	je     1c01 <_Z17adler32HashString8string_t+0x81>
    1b98:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b99:	49                   	rex.WB
    1b9a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1b9c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1b9f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ba0:	31 30                	xor    DWORD PTR [rax],esi
    1ba2:	30 30                	xor    BYTE PTR [rax],dh
    1ba4:	30 30                	xor    BYTE PTR [rax],dh
    1ba6:	30 30                	xor    BYTE PTR [rax],dh
    1ba8:	30 30                	xor    BYTE PTR [rax],dh
    1baa:	45                   	rex.RB
    1bab:	45                   	rex.RB
    1bac:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    1bb2:	74 45                	je     1bf9 <_Z17adler32HashString8string_t+0x79>
    1bb4:	76 00                	jbe    1bb6 <_Z17adler32HashString8string_t+0x36>
    1bb6:	5f                   	pop    rdi
    1bb7:	5a                   	pop    rdx
    1bb8:	53                   	push   rbx
    1bb9:	74 31                	je     1bec <_Z17adler32HashString8string_t+0x6c>
    1bbb:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1bbe:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bbf:	65 73 73             	gs jae 1c35 <_Z17adler32HashString8string_t+0xb5>
    1bc2:	67 72 65             	addr32 jb 1c2a <_Z17adler32HashString8string_t+0xaa>
    1bc5:	61                   	(bad)
    1bc6:	74 65                	je     1c2d <_Z17adler32HashString8string_t+0xad>
    1bc8:	72 65                	jb     1c2f <_Z17adler32HashString8string_t+0xaf>
    1bca:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
    1bce:	69 64 65 00 69 73 5f 	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x735f7369
    1bd5:	73 
    1bd6:	74 65                	je     1c3d <_Z17adler32HashString8string_t+0xbd>
    1bd8:	61                   	(bad)
    1bd9:	64 79 00             	fs jns 1bdc <_Z17adler32HashString8string_t+0x5c>
    1bdc:	74 67                	je     1c45 <_Z17adler32HashString8string_t+0xc5>
    1bde:	61                   	(bad)
    1bdf:	6d                   	ins    DWORD PTR es:[rdi],dx
    1be0:	6d                   	ins    DWORD PTR es:[rdi],dx
    1be1:	61                   	(bad)
    1be2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1be5:	53                   	push   rbx
    1be6:	74 37                	je     1c1f <_Z17adler32HashString8string_t+0x9f>
    1be8:	6c                   	ins    BYTE PTR es:[rdi],dx
    1be9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bea:	72 6f                	jb     1c5b <_Z17adler32HashString8string_t+0xdb>
    1bec:	75 6e                	jne    1c5c <_Z17adler32HashString8string_t+0xdc>
    1bee:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1bf3:	53                   	push   rbx
    1bf4:	74 37                	je     1c2d <_Z17adler32HashString8string_t+0xad>
    1bf6:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bf7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bf8:	72 6f                	jb     1c69 <_Z17adler32HashString8string_t+0xe9>
    1bfa:	75 6e                	jne    1c6a <_Z17adler32HashString8string_t+0xea>
    1bfc:	64 66 00 74 6d 5f    	data16 add BYTE PTR fs:[rbp+rbp*2+0x5f],dh
    1c02:	73 65                	jae    1c69 <_Z17adler32HashString8string_t+0xe9>
    1c04:	63 00                	movsxd eax,DWORD PTR [rax]
    1c06:	5f                   	pop    rdi
    1c07:	5f                   	pop    rdi
    1c08:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1c0f:	77 63                	ja     1c74 <_Z17adler32HashString8string_t+0xf4>
    1c11:	73 74                	jae    1c87 <_Z17adler32HashString8string_t+0x107>
    1c13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c14:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c15:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1c18:	53                   	push   rbx
    1c19:	74 37                	je     1c52 <_Z17adler32HashString8string_t+0xd2>
    1c1b:	73 63                	jae    1c80 <_Z17adler32HashString8string_t+0x100>
    1c1d:	61                   	(bad)
    1c1e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c1f:	62 6c 6e             	(bad)  {k6}
    1c22:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1c24:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1c27:	53                   	push   rbx
    1c28:	74 39                	je     1c63 <_Z17adler32HashString8string_t+0xe3>
    1c2a:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1c31:	65 72 64             	gs jb  1c98 <_Z17adler32HashString8string_t+0x118>
    1c34:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    1c38:	70 73                	jo     1cad <_Z17adler32HashString8string_t+0x12d>
    1c3a:	74 6c                	je     1ca8 <_Z17adler32HashString8string_t+0x128>
    1c3c:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    1c3f:	73 6e                	jae    1caf <_Z17adler32HashString8string_t+0x12f>
    1c41:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    1c44:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    1c47:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c49:	72 00                	jb     1c4b <_Z17adler32HashString8string_t+0xcb>
    1c4b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c4c:	70 65                	jo     1cb3 <_Z17adler32HashString8string_t+0x133>
    1c4e:	72 61                	jb     1cb1 <_Z17adler32HashString8string_t+0x131>
    1c50:	74 6f                	je     1cc1 <_Z17adler32HashString8string_t+0x141>
    1c52:	72 2d                	jb     1c81 <_Z17adler32HashString8string_t+0x101>
    1c54:	3c 73                	cmp    al,0x73
    1c56:	74 64                	je     1cbc <_Z17adler32HashString8string_t+0x13c>
    1c58:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c5a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c5e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c60:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c62:	5f                   	pop    rdi
    1c63:	56                   	push   rsi
    1c64:	32 3a                	xor    bh,BYTE PTR [rdx]
    1c66:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    1c69:	65 61                	gs (bad)
    1c6b:	64 79 5f             	fs jns 1ccd <_Z17adler32HashString8string_t+0x14d>
    1c6e:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1c72:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    1c76:	74 64                	je     1cdc <_Z17adler32HashString8string_t+0x15c>
    1c78:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c7a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c7d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c7e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c80:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c82:	64 75 72             	fs jne 1cf7 <_Z17adler32HashString8string_t+0x177>
    1c85:	61                   	(bad)
    1c86:	74 69                	je     1cf1 <_Z17adler32HashString8string_t+0x171>
    1c88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c8a:	3c 6c                	cmp    al,0x6c
    1c8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c8e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1c92:	74 2c                	je     1cc0 <_Z17adler32HashString8string_t+0x140>
    1c94:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1c97:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c9a:	72 61                	jb     1cfd <_Z17adler32HashString8string_t+0x17d>
    1c9c:	74 69                	je     1d07 <_Z17adler32HashString8string_t+0x187>
    1c9e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c9f:	3c 31                	cmp    al,0x31
    1ca1:	2c 20                	sub    al,0x20
    1ca3:	31 30                	xor    DWORD PTR [rax],esi
    1ca5:	30 30                	xor    BYTE PTR [rax],dh
    1ca7:	30 30                	xor    BYTE PTR [rax],dh
    1ca9:	30 30                	xor    BYTE PTR [rax],dh
    1cab:	30 30                	xor    BYTE PTR [rax],dh
    1cad:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1cb0:	2c 20                	sub    al,0x20
    1cb2:	73 74                	jae    1d28 <_Z17adler32HashString8string_t+0x1a8>
    1cb4:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1cb7:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1cba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cbc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cbd:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1cbf:	64 75 72             	fs jne 1d34 <_Z17adler32HashString8string_t+0x1b4>
    1cc2:	61                   	(bad)
    1cc3:	74 69                	je     1d2e <_Z17adler32HashString8string_t+0x1ae>
    1cc5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cc6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cc7:	3c 6c                	cmp    al,0x6c
    1cc9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ccb:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1ccf:	74 2c                	je     1cfd <_Z17adler32HashString8string_t+0x17d>
    1cd1:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1cd4:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1cd7:	72 61                	jb     1d3a <_Z17adler32HashString8string_t+0x1ba>
    1cd9:	74 69                	je     1d44 <_Z17adler32HashString8string_t+0x1c4>
    1cdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cdc:	3c 31                	cmp    al,0x31
    1cde:	2c 20                	sub    al,0x20
    1ce0:	31 30                	xor    DWORD PTR [rax],esi
    1ce2:	30 30                	xor    BYTE PTR [rax],dh
    1ce4:	30 30                	xor    BYTE PTR [rax],dh
    1ce6:	30 30                	xor    BYTE PTR [rax],dh
    1ce8:	30 30                	xor    BYTE PTR [rax],dh
    1cea:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1ced:	20 3e                	and    BYTE PTR [rsi],bh
    1cef:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    1cf3:	32 00                	xor    al,BYTE PTR [rax]
    1cf5:	70 75                	jo     1d6c <_Z17adler32HashString8string_t+0x1ec>
    1cf7:	74 77                	je     1d70 <_Z17adler32HashString8string_t+0x1f0>
    1cf9:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1cfc:	72 00                	jb     1cfe <_Z17adler32HashString8string_t+0x17e>
    1cfe:	5f                   	pop    rdi
    1cff:	5f                   	pop    rdi
    1d00:	62 75 69 6c 74       	(bad)
    1d05:	69 6e 5f 73 71 72 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74727173
    1d0c:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1d10:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d11:	61                   	(bad)
    1d12:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d13:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    1d16:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1d18:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1d1b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d1e:	53                   	push   rbx
    1d1f:	74 31                	je     1d52 <_Z17adler32HashString8string_t+0x1d2>
    1d21:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1d24:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d25:	65 73 73             	gs jae 1d9b <_Z13elfHashString8string_t+0xb>
    1d28:	67 72 65             	addr32 jb 1d90 <_Z13elfHashString8string_t>
    1d2b:	61                   	(bad)
    1d2c:	74 65                	je     1d93 <_Z13elfHashString8string_t+0x3>
    1d2e:	72 66                	jb     1d96 <_Z13elfHashString8string_t+0x6>
    1d30:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1d34:	53                   	push   rbx
    1d35:	74 35                	je     1d6c <_Z17adler32HashString8string_t+0x1ec>
    1d37:	66 72 65             	data16 jb 1d9f <_Z13elfHashString8string_t+0xf>
    1d3a:	78 70                	js     1dac <_Z13elfHashString8string_t+0x1c>
    1d3c:	65 50                	gs push rax
    1d3e:	69 00 66 61 62 73    	imul   eax,DWORD PTR [rax],0x73626166
    1d44:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d47:	62 75 69 6c 74       	(bad)
    1d4c:	69 6e 5f 66 77 72 69 	imul   ebp,DWORD PTR [rsi+0x5f],0x69727766
    1d53:	74 65                	je     1dba <_Z13elfHashString8string_t+0x2a>
    1d55:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d58:	53                   	push   rbx
    1d59:	74 35                	je     1d90 <_Z13elfHashString8string_t>
    1d5b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d5d:	67 31 70 66          	xor    DWORD PTR [eax+0x66],esi
    1d61:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    1d64:	74 69                	je     1dcf <_Z13elfHashString8string_t+0x3f>
    1d66:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d67:	3c 31                	cmp    al,0x31
    1d69:	2c 20                	sub    al,0x20
    1d6b:	31 30                	xor    DWORD PTR [rax],esi
    1d6d:	30 30                	xor    BYTE PTR [rax],dh
    1d6f:	30 30                	xor    BYTE PTR [rax],dh
    1d71:	30 3e                	xor    BYTE PTR [rsi],bh
    1d73:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d76:	53                   	push   rbx
    1d77:	74 39                	je     1db2 <_Z13elfHashString8string_t+0x22>
    1d79:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1d80:	65 72 65             	gs jb  1de8 <_Z13elfHashString8string_t+0x58>
    1d83:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1d87:	4e                   	rex.WRX
    1d88:	4b 53                	rex.WXB push r11
    1d8a:	74 36                	je     1dc2 <_Z13elfHashString8string_t+0x32>
    1d8c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1d8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d91:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d92:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1d96:	61                   	(bad)
    1d97:	74 69                	je     1e02 <_Z13elfHashString8string_t+0x72>
    1d99:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d9b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1d9d:	53                   	push   rbx
    1d9e:	74 35                	je     1dd5 <_Z13elfHashString8string_t+0x45>
    1da0:	72 61                	jb     1e03 <_Z13elfHashString8string_t+0x73>
    1da2:	74 69                	je     1e0d <_Z13elfHashString8string_t+0x7d>
    1da4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1da5:	49                   	rex.WB
    1da6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1da8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1dab:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dac:	31 30                	xor    DWORD PTR [rax],esi
    1dae:	30 30                	xor    BYTE PTR [rax],dh
    1db0:	30 30                	xor    BYTE PTR [rax],dh
    1db2:	30 30                	xor    BYTE PTR [rax],dh
    1db4:	30 30                	xor    BYTE PTR [rax],dh
    1db6:	45                   	rex.RB
    1db7:	45                   	rex.RB
    1db8:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    1dba:	67 45 76 00          	addr32 rex.RB jbe 1dbe <_Z13elfHashString8string_t+0x2e>
    1dbe:	5f                   	pop    rdi
    1dbf:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1dc1:	61                   	(bad)
    1dc2:	67 73 32             	addr32 jae 1df7 <_Z13elfHashString8string_t+0x67>
    1dc5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1dc8:	4e 53                	rex.WRX push rbx
    1dca:	74 35                	je     1e01 <_Z13elfHashString8string_t+0x71>
    1dcc:	72 61                	jb     1e2f <_Z13elfHashString8string_t+0x9f>
    1dce:	74 69                	je     1e39 <_Z13elfHashString8string_t+0xa9>
    1dd0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1dd1:	49                   	rex.WB
    1dd2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1dd4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1dd7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dd8:	31 30                	xor    DWORD PTR [rax],esi
    1dda:	30 30                	xor    BYTE PTR [rax],dh
    1ddc:	45                   	rex.RB
    1ddd:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    1de1:	6d                   	ins    DWORD PTR es:[rdi],dx
    1de2:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1de6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1de8:	75 5f                	jne    1e49 <_Z13elfHashString8string_t+0xb9>
    1dea:	64 65 62 75 67 00 5f 	(bad)
    1df1:	5f                   	pop    rdi
    1df2:	75 69                	jne    1e5d <_Z13elfHashString8string_t+0xcd>
    1df4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1df5:	74 5f                	je     1e56 <_Z13elfHashString8string_t+0xc6>
    1df7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1df8:	65 61                	gs (bad)
    1dfa:	73 74                	jae    1e70 <_Z13elfHashString8string_t+0xe0>
    1dfc:	33 32                	xor    esi,DWORD PTR [rdx]
    1dfe:	5f                   	pop    rdi
    1dff:	74 00                	je     1e01 <_Z13elfHashString8string_t+0x71>
    1e01:	5f                   	pop    rdi
    1e02:	5a                   	pop    rdx
    1e03:	53                   	push   rbx
    1e04:	74 34                	je     1e3a <_Z13elfHashString8string_t+0xaa>
    1e06:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1e09:	74 65                	je     1e70 <_Z13elfHashString8string_t+0xe0>
    1e0b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1e0e:	53                   	push   rbx
    1e0f:	74 34                	je     1e45 <_Z13elfHashString8string_t+0xb5>
    1e11:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1e14:	74 66                	je     1e7c <_Z13elfHashString8string_t+0xec>
    1e16:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1e19:	4f 5f                	rex.WRXB pop r15
    1e1b:	72 65                	jb     1e82 <_Z13elfHashString8string_t+0xf2>
    1e1d:	61                   	(bad)
    1e1e:	64 5f                	fs pop rdi
    1e20:	62 61 73 65 00       	(bad)
    1e25:	5f                   	pop    rdi
    1e26:	5a                   	pop    rdx
    1e27:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    1e2a:	65 73 74             	gs jae 1ea1 <_Z13searchElementP4List8string_t.part.0+0x1>
    1e2d:	53                   	push   rbx
    1e2e:	65 61                	gs (bad)
    1e30:	72 63                	jb     1e95 <_Z13elfHashString8string_t+0x105>
    1e32:	68 54 69 6d 65       	push   0x656d6954
    1e37:	50                   	push   rax
    1e38:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    1e3b:	4f 5f                	rex.WRXB pop r15
    1e3d:	46                   	rex.RX
    1e3e:	49                   	rex.WB
    1e3f:	4c                   	rex.WR
    1e40:	45 50                	rex.RB push r8
    1e42:	46 6a 38             	rex.RX push 0x38
    1e45:	73 74                	jae    1ebb <_Z13searchElementP4List8string_t.part.0+0x1b>
    1e47:	72 69                	jb     1eb2 <_Z13searchElementP4List8string_t.part.0+0x12>
    1e49:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e4a:	67 5f                	addr32 pop rdi
    1e4c:	74 45                	je     1e93 <_Z13elfHashString8string_t+0x103>
    1e4e:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    1e52:	74 44                	je     1e98 <_Z13elfHashString8string_t+0x108>
    1e54:	61                   	(bad)
    1e55:	74 61                	je     1eb8 <_Z13searchElementP4List8string_t.part.0+0x18>
    1e57:	6a 6a                	push   0x6a
    1e59:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e5c:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1e63:	77 63                	ja     1ec8 <_Z13searchElementP4List8string_t.part.0+0x28>
    1e65:	73 74                	jae    1edb <_Z8listCtorv+0xb>
    1e67:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e68:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e69:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e6a:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    1e6d:	72 6d                	jb     1edc <_Z8listCtorv+0xc>
    1e6f:	75 72                	jne    1ee3 <_Z8listCtorv+0x13>
    1e71:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    1e74:	69 6c 65 73 00 5f 5a 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x535a5f00
    1e7b:	53 
    1e7c:	74 34                	je     1eb2 <_Z13searchElementP4List8string_t.part.0+0x12>
    1e7e:	6d                   	ins    DWORD PTR es:[rdi],dx
    1e7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e80:	64 66 66 50          	fs data16 push ax
    1e84:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1e88:	67 72 65             	addr32 jb 1ef0 <_Z8listCtorv+0x20>
    1e8b:	61                   	(bad)
    1e8c:	74 65                	je     1ef3 <_Z8listCtorv+0x23>
    1e8e:	72 65                	jb     1ef5 <_Z8listCtorv+0x25>
    1e90:	71 75                	jno    1f07 <_Z8listCtorv+0x37>
    1e92:	61                   	(bad)
    1e93:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e94:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    1e97:	67 5f                	addr32 pop rdi
    1e99:	73 61                	jae    1efc <_Z8listCtorv+0x2c>
    1e9b:	76 65                	jbe    1f02 <_Z8listCtorv+0x32>
    1e9d:	5f                   	pop    rdi
    1e9e:	61                   	(bad)
    1e9f:	72 65                	jb     1f06 <_Z8listCtorv+0x36>
    1ea1:	61                   	(bad)
    1ea2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1ea5:	53                   	push   rbx
    1ea6:	74 35                	je     1edd <_Z8listCtorv+0xd>
    1ea8:	72 6f                	jb     1f19 <_Z8listCtorv+0x49>
    1eaa:	75 6e                	jne    1f1a <_Z8listCtorv+0x4a>
    1eac:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1eb1:	53                   	push   rbx
    1eb2:	74 35                	je     1ee9 <_Z8listCtorv+0x19>
    1eb4:	72 6f                	jb     1f25 <_Z8listCtorv+0x55>
    1eb6:	75 6e                	jne    1f26 <_Z8listCtorv+0x56>
    1eb8:	64 66 00 74 68 69    	data16 add BYTE PTR fs:[rax+rbp*2+0x69],dh
    1ebe:	73 00                	jae    1ec0 <_Z13searchElementP4List8string_t.part.0+0x20>
    1ec0:	5f                   	pop    rdi
    1ec1:	5a                   	pop    rdx
    1ec2:	4e 53                	rex.WRX push rbx
    1ec4:	74 35                	je     1efb <_Z8listCtorv+0x2b>
    1ec6:	72 61                	jb     1f29 <_Z8listCtorv+0x59>
    1ec8:	74 69                	je     1f33 <_Z8listCtorv+0x63>
    1eca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ecb:	49                   	rex.WB
    1ecc:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1ece:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1ed1:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ed2:	31 30                	xor    DWORD PTR [rax],esi
    1ed4:	30 30                	xor    BYTE PTR [rax],dh
    1ed6:	30 30                	xor    BYTE PTR [rax],dh
    1ed8:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1edb:	33 64 65 6e          	xor    esp,DWORD PTR [rbp+riz*2+0x6e]
    1edf:	45 00 5f 75          	add    BYTE PTR [r15+0x75],r11b
    1ee3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ee4:	75 73                	jne    1f59 <_Z12pushListElemP4List8string_t+0x19>
    1ee6:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    1eea:	5f                   	pop    rdi
    1eeb:	5a                   	pop    rdx
    1eec:	4e 53                	rex.WRX push rbx
    1eee:	74 36                	je     1f26 <_Z8listCtorv+0x56>
    1ef0:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1ef3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ef4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ef5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ef6:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1efa:	61                   	(bad)
    1efb:	74 69                	je     1f66 <_Z12pushListElemP4List8string_t+0x26>
    1efd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1efe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1eff:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f01:	53                   	push   rbx
    1f02:	74 35                	je     1f39 <_Z8listCtorv+0x69>
    1f04:	72 61                	jb     1f67 <_Z12pushListElemP4List8string_t+0x27>
    1f06:	74 69                	je     1f71 <_Z12pushListElemP4List8string_t+0x31>
    1f08:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f09:	49                   	rex.WB
    1f0a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f0c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f0f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f10:	31 30                	xor    DWORD PTR [rax],esi
    1f12:	30 30                	xor    BYTE PTR [rax],dh
    1f14:	30 30                	xor    BYTE PTR [rax],dh
    1f16:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1f19:	45 70 70             	rex.RB jo 1f8c <_Z12pushListElemP4List8string_t+0x4c>
    1f1c:	45 76 00             	rex.RB jbe 1f1f <_Z8listCtorv+0x4f>
    1f1f:	74 6d                	je     1f8e <_Z12pushListElemP4List8string_t+0x4e>
    1f21:	5f                   	pop    rdi
    1f22:	67 6d                	ins    DWORD PTR es:[edi],dx
    1f24:	74 6f                	je     1f95 <_Z12pushListElemP4List8string_t+0x55>
    1f26:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    1f2b:	4e 53                	rex.WRX push rbx
    1f2d:	74 36                	je     1f65 <_Z12pushListElemP4List8string_t+0x25>
    1f2f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1f32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f33:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f34:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f35:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f39:	61                   	(bad)
    1f3a:	74 69                	je     1fa5 <_Z12pushListElemP4List8string_t+0x65>
    1f3c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f3d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f3e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f40:	53                   	push   rbx
    1f41:	74 35                	je     1f78 <_Z12pushListElemP4List8string_t+0x38>
    1f43:	72 61                	jb     1fa6 <_Z12pushListElemP4List8string_t+0x66>
    1f45:	74 69                	je     1fb0 <_Z12pushListElemP4List8string_t+0x70>
    1f47:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f48:	49                   	rex.WB
    1f49:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f4b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f4f:	31 30                	xor    DWORD PTR [rax],esi
    1f51:	30 30                	xor    BYTE PTR [rax],dh
    1f53:	30 30                	xor    BYTE PTR [rax],dh
    1f55:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1f58:	45                   	rex.RB
    1f59:	43 34 45             	rex.XB xor al,0x45
    1f5c:	76 00                	jbe    1f5e <_Z12pushListElemP4List8string_t+0x1e>
    1f5e:	65 72 66             	gs jb  1fc7 <_Z12pushListElemP4List8string_t+0x87>
    1f61:	63 00                	movsxd eax,DWORD PTR [rax]
    1f63:	74 65                	je     1fca <_Z12pushListElemP4List8string_t+0x8a>
    1f65:	73 74                	jae    1fdb <_Z12pushListElemP4List8string_t+0x9b>
    1f67:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    1f69:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f6a:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f6b:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    1f72:	5f                   	pop    rdi
    1f73:	5a                   	pop    rdx
    1f74:	53                   	push   rbx
    1f75:	74 34                	je     1fab <_Z12pushListElemP4List8string_t+0x6b>
    1f77:	73 69                	jae    1fe2 <_Z12pushListElemP4List8string_t+0xa2>
    1f79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f7a:	68 65 00 61 73       	push   0x73610065
    1f7f:	69 6e 68 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x68],0x535a5f00
    1f86:	74 36                	je     1fbe <_Z12pushListElemP4List8string_t+0x7e>
    1f88:	74 67                	je     1ff1 <_Z12pushListElemP4List8string_t+0xb1>
    1f8a:	61                   	(bad)
    1f8b:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f8c:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f8d:	61                   	(bad)
    1f8e:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1f92:	53                   	push   rbx
    1f93:	74 36                	je     1fcb <_Z12pushListElemP4List8string_t+0x8b>
    1f95:	74 67                	je     1ffe <_Z12pushListElemP4List8string_t+0xbe>
    1f97:	61                   	(bad)
    1f98:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f99:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f9a:	61                   	(bad)
    1f9b:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1f9f:	4e 53                	rex.WRX push rbx
    1fa1:	74 36                	je     1fd9 <_Z12pushListElemP4List8string_t+0x99>
    1fa3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1fa6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fa7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fa8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fa9:	31 30                	xor    DWORD PTR [rax],esi
    1fab:	74 69                	je     2016 <_Z12pushListElemP4List8string_t+0xd6>
    1fad:	6d                   	ins    DWORD PTR es:[rdi],dx
    1fae:	65 5f                	gs pop rdi
    1fb0:	70 6f                	jo     2021 <_Z12pushListElemP4List8string_t+0xe1>
    1fb2:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1fb9:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1fbc:	32 31                	xor    dh,BYTE PTR [rcx]
    1fbe:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1fc1:	65 61                	gs (bad)
    1fc3:	64 79 5f             	fs jns 2025 <_Z12pushListElemP4List8string_t+0xe5>
    1fc6:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1fca:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    1fce:	5f                   	pop    rdi
    1fcf:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1fd3:	61                   	(bad)
    1fd4:	74 69                	je     203f <_Z12pushListElemP4List8string_t+0xff>
    1fd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fd7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fd8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1fda:	53                   	push   rbx
    1fdb:	74 35                	je     2012 <_Z12pushListElemP4List8string_t+0xd2>
    1fdd:	72 61                	jb     2040 <_Z12pushListElemP4List8string_t+0x100>
    1fdf:	74 69                	je     204a <_Z12pushListElemP4List8string_t+0x10a>
    1fe1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fe2:	49                   	rex.WB
    1fe3:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1fe5:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1fe8:	6c                   	ins    BYTE PTR es:[rdi],dx
    1fe9:	31 30                	xor    DWORD PTR [rax],esi
    1feb:	30 30                	xor    BYTE PTR [rax],dh
    1fed:	30 30                	xor    BYTE PTR [rax],dh
    1fef:	30 30                	xor    BYTE PTR [rax],dh
    1ff1:	30 30                	xor    BYTE PTR [rax],dh
    1ff3:	45                   	rex.RB
    1ff4:	45                   	rex.RB
    1ff5:	45                   	rex.RB
    1ff6:	45                   	rex.RB
    1ff7:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    1ffb:	78 45                	js     2042 <_Z12pushListElemP4List8string_t+0x102>
    1ffd:	76 00                	jbe    1fff <_Z12pushListElemP4List8string_t+0xbf>
    1fff:	5f                   	pop    rdi
    2000:	5a                   	pop    rdx
    2001:	53                   	push   rbx
    2002:	74 35                	je     2039 <_Z12pushListElemP4List8string_t+0xf9>
    2004:	6c                   	ins    BYTE PTR es:[rdi],dx
    2005:	64 65 78 70          	fs gs js 2079 <_Z12pushListElemP4List8string_t+0x139>
    2009:	66 69 00 5f 5a       	imul   ax,WORD PTR [rax],0x5a5f
    200e:	4e 53                	rex.WRX push rbx
    2010:	74 36                	je     2048 <_Z12pushListElemP4List8string_t+0x108>
    2012:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2015:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2016:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2017:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2018:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    201c:	61                   	(bad)
    201d:	74 69                	je     2088 <_Z12pushListElemP4List8string_t+0x148>
    201f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2020:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2021:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2023:	53                   	push   rbx
    2024:	74 35                	je     205b <_Z12pushListElemP4List8string_t+0x11b>
    2026:	72 61                	jb     2089 <_Z12pushListElemP4List8string_t+0x149>
    2028:	74 69                	je     2093 <_Z12pushListElemP4List8string_t+0x153>
    202a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    202b:	49                   	rex.WB
    202c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    202e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2031:	6c                   	ins    BYTE PTR es:[rdi],dx
    2032:	31 30                	xor    DWORD PTR [rax],esi
    2034:	30 30                	xor    BYTE PTR [rax],dh
    2036:	30 30                	xor    BYTE PTR [rax],dh
    2038:	30 30                	xor    BYTE PTR [rax],dh
    203a:	30 30                	xor    BYTE PTR [rax],dh
    203c:	45                   	rex.RB
    203d:	45                   	rex.RB
    203e:	45 70 4c             	rex.RB jo 208d <_Z12pushListElemP4List8string_t+0x14d>
    2041:	45 52                	rex.RB push r10
    2043:	4b 53                	rex.WXB push r11
    2045:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    2048:	5f                   	pop    rdi
    2049:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    204a:	6c                   	ins    BYTE PTR es:[rdi],dx
    204b:	64 5f                	fs pop rdi
    204d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    204e:	66 66 73 65          	data16 data16 jae 20b7 <_Z12pushListElemP4List8string_t+0x177>
    2052:	74 00                	je     2054 <_Z12pushListElemP4List8string_t+0x114>
    2054:	66 73 65             	data16 jae 20bc <_Z12pushListElemP4List8string_t+0x17c>
    2057:	74 70                	je     20c9 <_Z12pushListElemP4List8string_t+0x189>
    2059:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    205a:	73 00                	jae    205c <_Z12pushListElemP4List8string_t+0x11c>
    205c:	72 61                	jb     20bf <_Z12pushListElemP4List8string_t+0x17f>
    205e:	74 69                	je     20c9 <_Z12pushListElemP4List8string_t+0x189>
    2060:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2061:	3c 31                	cmp    al,0x31
    2063:	2c 20                	sub    al,0x20
    2065:	31 30                	xor    DWORD PTR [rax],esi
    2067:	30 30                	xor    BYTE PTR [rax],dh
    2069:	30 30                	xor    BYTE PTR [rax],dh
    206b:	30 30                	xor    BYTE PTR [rax],dh
    206d:	30 30                	xor    BYTE PTR [rax],dh
    206f:	3e 00 69 6e          	ds add BYTE PTR [rcx+0x6e],ch
    2073:	74 5f                	je     20d4 <_Z12pushListElemP4List8string_t+0x194>
    2075:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2076:	5f                   	pop    rdi
    2077:	73 65                	jae    20de <_Z12pushListElemP4List8string_t+0x19e>
    2079:	70 5f                	jo     20da <_Z12pushListElemP4List8string_t+0x19a>
    207b:	62 79 5f 73 70       	(bad)
    2080:	61                   	(bad)
    2081:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    2084:	5f                   	pop    rdi
    2085:	5a                   	pop    rdx
    2086:	4e 53                	rex.WRX push rbx
    2088:	74 35                	je     20bf <_Z12pushListElemP4List8string_t+0x17f>
    208a:	72 61                	jb     20ed <_Z11popListElemP4List8string_t+0xd>
    208c:	74 69                	je     20f7 <_Z11popListElemP4List8string_t+0x17>
    208e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    208f:	49                   	rex.WB
    2090:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2092:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2095:	6c                   	ins    BYTE PTR es:[rdi],dx
    2096:	31 30                	xor    DWORD PTR [rax],esi
    2098:	30 30                	xor    BYTE PTR [rax],dh
    209a:	30 30                	xor    BYTE PTR [rax],dh
    209c:	30 30                	xor    BYTE PTR [rax],dh
    209e:	30 30                	xor    BYTE PTR [rax],dh
    20a0:	45                   	rex.RB
    20a1:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    20a5:	6d                   	ins    DWORD PTR es:[rdi],dx
    20a6:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    20aa:	53                   	push   rbx
    20ab:	74 35                	je     20e2 <_Z11popListElemP4List8string_t+0x2>
    20ad:	69 73 6e 61 6e 64 00 	imul   esi,DWORD PTR [rbx+0x6e],0x646e61
    20b4:	5f                   	pop    rdi
    20b5:	5a                   	pop    rdx
    20b6:	53                   	push   rbx
    20b7:	74 35                	je     20ee <_Z11popListElemP4List8string_t+0xe>
    20b9:	69 73 6e 61 6e 65 00 	imul   esi,DWORD PTR [rbx+0x6e],0x656e61
    20c0:	5f                   	pop    rdi
    20c1:	5a                   	pop    rdx
    20c2:	53                   	push   rbx
    20c3:	74 35                	je     20fa <_Z11popListElemP4List8string_t+0x1a>
    20c5:	69 73 6e 61 6e 66 00 	imul   esi,DWORD PTR [rbx+0x6e],0x666e61
    20cc:	5f                   	pop    rdi
    20cd:	5f                   	pop    rdi
    20ce:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    20d5:	73 77                	jae    214e <_Z11popListElemP4List8string_t+0x6e>
    20d7:	73 63                	jae    213c <_Z11popListElemP4List8string_t+0x5c>
    20d9:	61                   	(bad)
    20da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20db:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    20df:	4e 53                	rex.WRX push rbx
    20e1:	74 36                	je     2119 <_Z11popListElemP4List8string_t+0x39>
    20e3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    20e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20e9:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    20ed:	61                   	(bad)
    20ee:	74 69                	je     2159 <_Z11popListElemP4List8string_t+0x79>
    20f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20f2:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    20f4:	53                   	push   rbx
    20f5:	74 35                	je     212c <_Z11popListElemP4List8string_t+0x4c>
    20f7:	72 61                	jb     215a <_Z11popListElemP4List8string_t+0x7a>
    20f9:	74 69                	je     2164 <_Z11popListElemP4List8string_t+0x84>
    20fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20fc:	49                   	rex.WB
    20fd:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    20ff:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2102:	6c                   	ins    BYTE PTR es:[rdi],dx
    2103:	31 30                	xor    DWORD PTR [rax],esi
    2105:	30 30                	xor    BYTE PTR [rax],dh
    2107:	30 30                	xor    BYTE PTR [rax],dh
    2109:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    210c:	45 34 7a             	rex.RB xor al,0x7a
    210f:	65 72 6f             	gs jb  2181 <_Z11popListElemP4List8string_t+0xa1>
    2112:	45 76 00             	rex.RB jbe 2115 <_Z11popListElemP4List8string_t+0x35>
    2115:	5f                   	pop    rdi
    2116:	5a                   	pop    rdx
    2117:	4e 53                	rex.WRX push rbx
    2119:	74 36                	je     2151 <_Z11popListElemP4List8string_t+0x71>
    211b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    211e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    211f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2120:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2121:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2125:	61                   	(bad)
    2126:	74 69                	je     2191 <_Z11popListElemP4List8string_t+0xb1>
    2128:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2129:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    212a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    212c:	53                   	push   rbx
    212d:	74 35                	je     2164 <_Z11popListElemP4List8string_t+0x84>
    212f:	72 61                	jb     2192 <_Z11popListElemP4List8string_t+0xb2>
    2131:	74 69                	je     219c <_Z11popListElemP4List8string_t+0xbc>
    2133:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2134:	49                   	rex.WB
    2135:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2137:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    213a:	6c                   	ins    BYTE PTR es:[rdi],dx
    213b:	31 30                	xor    DWORD PTR [rax],esi
    213d:	30 30                	xor    BYTE PTR [rax],dh
    213f:	30 30                	xor    BYTE PTR [rax],dh
    2141:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2144:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    2146:	4c                   	rex.WR
    2147:	45 52                	rex.RB push r10
    2149:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    214b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    214e:	4e 53                	rex.WRX push rbx
    2150:	74 36                	je     2188 <_Z11popListElemP4List8string_t+0xa8>
    2152:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2155:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2156:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2157:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2158:	31 30                	xor    DWORD PTR [rax],esi
    215a:	74 69                	je     21c5 <_Z13searchElementP4List8string_t+0x15>
    215c:	6d                   	ins    DWORD PTR es:[rdi],dx
    215d:	65 5f                	gs pop rdi
    215f:	70 6f                	jo     21d0 <_Z13searchElementP4List8string_t+0x20>
    2161:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    2168:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    216b:	32 31                	xor    dh,BYTE PTR [rcx]
    216d:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2170:	65 61                	gs (bad)
    2172:	64 79 5f             	fs jns 21d4 <_Z13searchElementP4List8string_t+0x24>
    2175:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2179:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    217d:	5f                   	pop    rdi
    217e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2182:	61                   	(bad)
    2183:	74 69                	je     21ee <_Z13searchElementP4List8string_t+0x3e>
    2185:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2186:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2187:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2189:	53                   	push   rbx
    218a:	74 35                	je     21c1 <_Z13searchElementP4List8string_t+0x11>
    218c:	72 61                	jb     21ef <_Z13searchElementP4List8string_t+0x3f>
    218e:	74 69                	je     21f9 <_Z13searchElementP4List8string_t+0x49>
    2190:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2191:	49                   	rex.WB
    2192:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2194:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2197:	6c                   	ins    BYTE PTR es:[rdi],dx
    2198:	31 30                	xor    DWORD PTR [rax],esi
    219a:	30 30                	xor    BYTE PTR [rax],dh
    219c:	30 30                	xor    BYTE PTR [rax],dh
    219e:	30 30                	xor    BYTE PTR [rax],dh
    21a0:	30 30                	xor    BYTE PTR [rax],dh
    21a2:	45                   	rex.RB
    21a3:	45                   	rex.RB
    21a4:	45                   	rex.RB
    21a5:	45                   	rex.RB
    21a6:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    21aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21ab:	45 76 00             	rex.RB jbe 21ae <_Z11popListElemP4List8string_t+0xce>
    21ae:	5f                   	pop    rdi
    21af:	5f                   	pop    rdi
    21b0:	63 64 00 5f          	movsxd esp,DWORD PTR [rax+rax*1+0x5f]
    21b4:	5a                   	pop    rdx
    21b5:	53                   	push   rbx
    21b6:	74 35                	je     21ed <_Z13searchElementP4List8string_t+0x3d>
    21b8:	74 72                	je     222c <_Z8listDtorP4List+0x1c>
    21ba:	75 6e                	jne    222a <_Z8listDtorP4List+0x1a>
    21bc:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    21bf:	5f                   	pop    rdi
    21c0:	5a                   	pop    rdx
    21c1:	53                   	push   rbx
    21c2:	74 35                	je     21f9 <_Z13searchElementP4List8string_t+0x49>
    21c4:	74 72                	je     2238 <_Z8listDtorP4List+0x28>
    21c6:	75 6e                	jne    2236 <_Z8listDtorP4List+0x26>
    21c8:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    21cb:	5f                   	pop    rdi
    21cc:	5a                   	pop    rdx
    21cd:	53                   	push   rbx
    21ce:	74 34                	je     2204 <_Z13searchElementP4List8string_t+0x54>
    21d0:	66 6d                	ins    WORD PTR es:[rdi],dx
    21d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21d3:	64 66 66 00 77 6d    	data16 data16 add BYTE PTR fs:[rdi+0x6d],dh
    21d9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    21db:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    21de:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21e1:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    21e8:	66 77 73             	data16 ja 225e <_Z8readFilePKcPm+0xe>
    21eb:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    21ee:	66 00 74 6d 5f       	data16 add BYTE PTR [rbp+rbp*2+0x5f],dh
    21f3:	6d                   	ins    DWORD PTR es:[rdi],dx
    21f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21f6:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    21f9:	64 5f                	fs pop rdi
    21fb:	64 65 76 69          	fs gs jbe 2268 <_Z8readFilePKcPm+0x18>
    21ff:	61                   	(bad)
    2200:	74 69                	je     226b <_Z8readFilePKcPm+0x1b>
    2202:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2203:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2204:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
    2207:	72 65                	jb     226e <_Z8readFilePKcPm+0x1e>
    2209:	65 72 65             	gs jb  2271 <_Z8readFilePKcPm+0x21>
    220c:	73 5f                	jae    226d <_Z8readFilePKcPm+0x1d>
    220e:	6c                   	ins    BYTE PTR es:[rdi],dx
    220f:	69 73 74 00 5f 5a 4e 	imul   esi,DWORD PTR [rbx+0x74],0x4e5a5f00
    2216:	53                   	push   rbx
    2217:	74 36                	je     224f <_Z8listDtorP4List+0x3f>
    2219:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    221c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    221d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    221e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    221f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2220:	69 49 6c 53 74 35 72 	imul   ecx,DWORD PTR [rcx+0x6c],0x72357453
    2227:	61                   	(bad)
    2228:	74 69                	je     2293 <_Z8readFilePKcPm+0x43>
    222a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    222b:	49                   	rex.WB
    222c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    222e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2231:	6c                   	ins    BYTE PTR es:[rdi],dx
    2232:	31 30                	xor    DWORD PTR [rax],esi
    2234:	30 30                	xor    BYTE PTR [rax],dh
    2236:	30 30                	xor    BYTE PTR [rax],dh
    2238:	30 30                	xor    BYTE PTR [rax],dh
    223a:	30 30                	xor    BYTE PTR [rax],dh
    223c:	45                   	rex.RB
    223d:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    223f:	53                   	push   rbx
    2240:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    2243:	45                   	rex.RB
    2244:	4e 53                	rex.WRX push rbx
    2246:	74 31                	je     2279 <_Z8readFilePKcPm+0x29>
    2248:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    224b:	6d                   	ins    DWORD PTR es:[rdi],dx
    224c:	6d                   	ins    DWORD PTR es:[rdi],dx
    224d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    224e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    224f:	5f                   	pop    rdi
    2250:	74 79                	je     22cb <_Z8readFilePKcPm+0x7b>
    2252:	70 65                	jo     22b9 <_Z8readFilePKcPm+0x69>
    2254:	49                   	rex.WB
    2255:	4a                   	rex.WX
    2256:	4e 53                	rex.WRX push rbx
    2258:	5f                   	pop    rdi
    2259:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    225d:	61                   	(bad)
    225e:	74 69                	je     22c9 <_Z8readFilePKcPm+0x79>
    2260:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2261:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2262:	49 54                	rex.WB push r12
    2264:	5f                   	pop    rdi
    2265:	54                   	push   rsp
    2266:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    2269:	45                   	rex.RB
    226a:	4e 53                	rex.WRX push rbx
    226c:	34 5f                	xor    al,0x5f
    226e:	49 54                	rex.WB push r12
    2270:	31 5f 54             	xor    DWORD PTR [rdi+0x54],ebx
    2273:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    2276:	45                   	rex.RB
    2277:	45                   	rex.RB
    2278:	45 34 74             	rex.RB xor al,0x74
    227b:	79 70                	jns    22ed <_Z8readFilePKcPm+0x9d>
    227d:	65 45 52             	gs rex.RB push r10
    2280:	4b 53                	rex.WXB push r11
    2282:	37                   	(bad)
    2283:	5f                   	pop    rdi
    2284:	52                   	push   rdx
    2285:	4b 53                	rex.WXB push r11
    2287:	41 5f                	pop    r15
    2289:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    228c:	4e 53                	rex.WRX push rbx
    228e:	74 36                	je     22c6 <_Z8readFilePKcPm+0x76>
    2290:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2294:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2295:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2296:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    229a:	61                   	(bad)
    229b:	74 69                	je     2306 <_Z8readFilePKcPm+0xb6>
    229d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    229e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    229f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    22a1:	53                   	push   rbx
    22a2:	74 35                	je     22d9 <_Z8readFilePKcPm+0x89>
    22a4:	72 61                	jb     2307 <_Z8readFilePKcPm+0xb7>
    22a6:	74 69                	je     2311 <_Z8readFilePKcPm+0xc1>
    22a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22a9:	49                   	rex.WB
    22aa:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    22ac:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    22af:	6c                   	ins    BYTE PTR es:[rdi],dx
    22b0:	31 30                	xor    DWORD PTR [rax],esi
    22b2:	30 30                	xor    BYTE PTR [rax],dh
    22b4:	30 30                	xor    BYTE PTR [rax],dh
    22b6:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    22b9:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    22bd:	78 45                	js     2304 <_Z8readFilePKcPm+0xb4>
    22bf:	76 00                	jbe    22c1 <_Z8readFilePKcPm+0x71>
    22c1:	5f                   	pop    rdi
    22c2:	49                   	rex.WB
    22c3:	4f 5f                	rex.WRXB pop r15
    22c5:	77 72                	ja     2339 <_Z8readFilePKcPm+0xe9>
    22c7:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
    22ce:	00 
    22cf:	5f                   	pop    rdi
    22d0:	54                   	push   rsp
    22d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22d2:	44 75 72             	rex.R jne 2347 <_Z8readFilePKcPm+0xf7>
    22d5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    22d8:	4e 53                	rex.WRX push rbx
    22da:	74 36                	je     2312 <_Z8readFilePKcPm+0xc2>
    22dc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    22df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22e2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    22e6:	61                   	(bad)
    22e7:	74 69                	je     2352 <_Z8readFilePKcPm+0x102>
    22e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22eb:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    22ed:	53                   	push   rbx
    22ee:	74 35                	je     2325 <_Z8readFilePKcPm+0xd5>
    22f0:	72 61                	jb     2353 <_Z8readFilePKcPm+0x103>
    22f2:	74 69                	je     235d <_Z8readFilePKcPm+0x10d>
    22f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22f5:	49                   	rex.WB
    22f6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    22f8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    22fb:	6c                   	ins    BYTE PTR es:[rdi],dx
    22fc:	31 30                	xor    DWORD PTR [rax],esi
    22fe:	30 30                	xor    BYTE PTR [rax],dh
    2300:	30 30                	xor    BYTE PTR [rax],dh
    2302:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2305:	45 61                	rex.RB (bad)
    2307:	53                   	push   rbx
    2308:	45 52                	rex.RB push r10
    230a:	4b 53                	rex.WXB push r11
    230c:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    230f:	5f                   	pop    rdi
    2310:	5a                   	pop    rdx
    2311:	53                   	push   rbx
    2312:	74 34                	je     2348 <_Z8readFilePKcPm+0xf8>
    2314:	73 71                	jae    2387 <_Z10countLinesPcm+0x27>
    2316:	72 74                	jb     238c <_Z10countLinesPcm+0x2c>
    2318:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    231c:	53                   	push   rbx
    231d:	74 34                	je     2353 <_Z8readFilePKcPm+0x103>
    231f:	73 71                	jae    2392 <_Z10countLinesPcm+0x32>
    2321:	72 74                	jb     2397 <_Z10countLinesPcm+0x37>
    2323:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    2327:	34 74                	xor    al,0x74
    2329:	65 73 74             	gs jae 23a0 <_Z10countLinesPcm+0x40>
    232c:	50                   	push   rax
    232d:	46 6a 38             	rex.RX push 0x38
    2330:	73 74                	jae    23a6 <_Z10countLinesPcm+0x46>
    2332:	72 69                	jb     239d <_Z10countLinesPcm+0x3d>
    2334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2335:	67 5f                	addr32 pop rdi
    2337:	74 45                	je     237e <_Z10countLinesPcm+0x1e>
    2339:	39 46 69             	cmp    DWORD PTR [rsi+0x69],eax
    233c:	6c                   	ins    BYTE PTR es:[rdi],dx
    233d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    233f:	61                   	(bad)
    2340:	6d                   	ins    DWORD PTR es:[rdi],dx
    2341:	65 73 38             	gs jae 237c <_Z10countLinesPcm+0x1c>
    2344:	54                   	push   rsp
    2345:	65 73 74             	gs jae 23bc <_Z10countLinesPcm+0x5c>
    2348:	44 61                	rex.R (bad)
    234a:	74 61                	je     23ad <_Z10countLinesPcm+0x4d>
    234c:	6a 6a                	push   0x6a
    234e:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    2351:	74 6f                	je     23c2 <_Z10countLinesPcm+0x62>
    2353:	62                   	(bad)
    2354:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2357:	62 75 69 6c 74       	(bad)
    235c:	69 6e 5f 70 75 74 73 	imul   ebp,DWORD PTR [rsi+0x5f],0x73747570
    2363:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2366:	65 72 69             	gs jb  23d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2>
    2369:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    236a:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    236d:	61                   	(bad)
    236e:	76 65                	jbe    23d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x5>
    2370:	72 61                	jb     23d3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3>
    2372:	67 65 5f             	addr32 gs pop rdi
    2375:	74 69                	je     23e0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x10>
    2377:	6d                   	ins    DWORD PTR es:[rdi],dx
    2378:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
    237c:	61                   	(bad)
    237d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    237e:	64 61                	fs (bad)
    2380:	72 74                	jb     23f6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x26>
    2382:	44                   	rex.R
    2383:	65 76 69             	gs jbe 23ef <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1f>
    2386:	61                   	(bad)
    2387:	74 69                	je     23f2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x22>
    2389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    238a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    238b:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    238d:	6c                   	ins    BYTE PTR es:[rdi],dx
    238e:	6c                   	ins    BYTE PTR es:[rdi],dx
    238f:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    2396:	5f                   	pop    rdi
    2397:	44 75 72             	rex.R jne 240c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3c>
    239a:	31 00                	xor    DWORD PTR [rax],eax
    239c:	5f                   	pop    rdi
    239d:	44 75 72             	rex.R jne 2412 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x42>
    23a0:	32 00                	xor    al,BYTE PTR [rax]
    23a2:	73 65                	jae    2409 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x39>
    23a4:	61                   	(bad)
    23a5:	72 63                	jb     240a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3a>
    23a7:	68 5f 74 69 6d       	push   0x6d69745f
    23ac:	65 5f                	gs pop rdi
    23ae:	61                   	(bad)
    23af:	72 72                	jb     2423 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x53>
    23b1:	61                   	(bad)
    23b2:	79 00                	jns    23b4 <_Z10countLinesPcm+0x54>
    23b4:	5f                   	pop    rdi
    23b5:	5f                   	pop    rdi
    23b6:	74 6f                	je     2427 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x57>
    23b8:	5f                   	pop    rdi
    23b9:	72 65                	jb     2420 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x50>
    23bb:	70 00                	jo     23bd <_Z10countLinesPcm+0x5d>
    23bd:	76 66                	jbe    2425 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x55>
    23bf:	77 70                	ja     2431 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x61>
    23c1:	72 69                	jb     242c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x5c>
    23c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23c4:	74 66                	je     242c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x5c>
    23c6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23c9:	69 6e 74 6d 61 78 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f78616d
    23d0:	74 00                	je     23d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2>
    23d2:	5f                   	pop    rdi
    23d3:	49                   	rex.WB
    23d4:	4f 5f                	rex.WRXB pop r15
    23d6:	62 75 66 5f 62       	(bad)
    23db:	61                   	(bad)
    23dc:	73 65                	jae    2443 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x73>
    23de:	00 54 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dl
    23e2:	74 44                	je     2428 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x58>
    23e4:	61                   	(bad)
    23e5:	74 61                	je     2448 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x78>
    23e7:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    23eb:	62                   	(bad)
    23ec:	6c                   	ins    BYTE PTR es:[rdi],dx
    23ed:	65 5f                	gs pop rdi
    23ef:	74 00                	je     23f1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x21>
    23f1:	6c                   	ins    BYTE PTR es:[rdi],dx
    23f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    23f3:	72 6f                	jb     2464 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x94>
    23f5:	75 6e                	jne    2465 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x95>
    23f7:	64 00 70 65          	add    BYTE PTR fs:[rax+0x65],dh
    23fb:	72 72                	jb     246f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x9f>
    23fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23fe:	72 00                	jb     2400 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x30>
    2400:	77 63                	ja     2465 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x95>
    2402:	73 73                	jae    2477 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa7>
    2404:	70 6e                	jo     2474 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa4>
    2406:	00 66 73             	add    BYTE PTR [rsi+0x73],ah
    2409:	65 65 6b 00 5f       	gs imul eax,DWORD PTR gs:[rax],0x5f
    240e:	5f                   	pop    rdi
    240f:	70 61                	jo     2472 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa2>
    2411:	64 35 00 73 65 74    	fs xor eax,0x74657300
    2417:	76 62                	jbe    247b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xab>
    2419:	75 66                	jne    2481 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xb1>
    241b:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    241e:	65 72 69             	gs jb  248a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xba>
    2421:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2422:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
    2426:	6d                   	ins    DWORD PTR es:[rdi],dx
    2427:	71 75                	jno    249e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xce>
    2429:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    242a:	00 6d 6b             	add    BYTE PTR [rbp+0x6b],ch
    242d:	74 69                	je     2498 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xc8>
    242f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2430:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2434:	53                   	push   rbx
    2435:	74 35                	je     246c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x9c>
    2437:	61                   	(bad)
    2438:	74 61                	je     249b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xcb>
    243a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    243b:	32 65 65             	xor    ah,BYTE PTR [rbp+0x65]
    243e:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    2442:	65 5f                	gs pop rdi
    2444:	73 69                	jae    24af <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xdf>
    2446:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2447:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    244a:	65 70 6f             	gs jo  24bc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xec>
    244d:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
    2450:	7a 65                	jp     24b7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xe7>
    2452:	72 6f                	jb     24c3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xf3>
    2454:	00 6f 76             	add    BYTE PTR [rdi+0x76],ch
    2457:	65 72 66             	gs jb  24c0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xf0>
    245a:	6c                   	ins    BYTE PTR es:[rdi],dx
    245b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    245c:	77 5f                	ja     24bd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xed>
    245e:	61                   	(bad)
    245f:	72 67                	jb     24c8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xf8>
    2461:	5f                   	pop    rdi
    2462:	61                   	(bad)
    2463:	72 65                	jb     24ca <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xfa>
    2465:	61                   	(bad)
    2466:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2469:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    246a:	61                   	(bad)
    246b:	6d                   	ins    DWORD PTR es:[rdi],dx
    246c:	65 00 5f 66          	add    BYTE PTR gs:[rdi+0x66],bl
    2470:	6c                   	ins    BYTE PTR es:[rdi],dx
    2471:	61                   	(bad)
    2472:	67 73 00             	addr32 jae 2475 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa5>
    2475:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2478:	6d                   	ins    DWORD PTR es:[rdi],dx
    2479:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    247a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    247b:	5f                   	pop    rdi
    247c:	74 79                	je     24f7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x127>
    247e:	70 65                	jo     24e5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x115>
    2480:	3c 73                	cmp    al,0x73
    2482:	74 64                	je     24e8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x118>
    2484:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2486:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2489:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    248a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    248b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    248c:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    248e:	64 75 72             	fs jne 2503 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x133>
    2491:	61                   	(bad)
    2492:	74 69                	je     24fd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x12d>
    2494:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2495:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2496:	3c 6c                	cmp    al,0x6c
    2498:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2499:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    249a:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    249e:	74 2c                	je     24cc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xfc>
    24a0:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    24a3:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    24a6:	72 61                	jb     2509 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x139>
    24a8:	74 69                	je     2513 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x143>
    24aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24ab:	3c 31                	cmp    al,0x31
    24ad:	2c 20                	sub    al,0x20
    24af:	31 30                	xor    DWORD PTR [rax],esi
    24b1:	30 30                	xor    BYTE PTR [rax],dh
    24b3:	30 30                	xor    BYTE PTR [rax],dh
    24b5:	30 30                	xor    BYTE PTR [rax],dh
    24b7:	30 30                	xor    BYTE PTR [rax],dh
    24b9:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    24bc:	2c 20                	sub    al,0x20
    24be:	73 74                	jae    2534 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x164>
    24c0:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    24c3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    24c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24c8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24c9:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    24cb:	64 75 72             	fs jne 2540 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x170>
    24ce:	61                   	(bad)
    24cf:	74 69                	je     253a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x16a>
    24d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24d3:	3c 6c                	cmp    al,0x6c
    24d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24d7:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    24db:	74 2c                	je     2509 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x139>
    24dd:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    24e0:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    24e3:	72 61                	jb     2546 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x176>
    24e5:	74 69                	je     2550 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x180>
    24e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24e8:	3c 31                	cmp    al,0x31
    24ea:	2c 20                	sub    al,0x20
    24ec:	31 30                	xor    DWORD PTR [rax],esi
    24ee:	30 30                	xor    BYTE PTR [rax],dh
    24f0:	30 30                	xor    BYTE PTR [rax],dh
    24f2:	30 30                	xor    BYTE PTR [rax],dh
    24f4:	30 30                	xor    BYTE PTR [rax],dh
    24f6:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    24f9:	20 3e                	and    BYTE PTR [rsi],bh
    24fb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    24fe:	53                   	push   rbx
    24ff:	74 35                	je     2536 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x166>
    2501:	66 72 65             	data16 jb 2569 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x199>
    2504:	78 70                	js     2576 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1a6>
    2506:	66 50                	push   ax
    2508:	69 00 5f 44 65 6e    	imul   eax,DWORD PTR [rax],0x6e65445f
    250e:	49 73 4f             	rex.WB jae 2560 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x190>
    2511:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2512:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2516:	53                   	push   rbx
    2517:	74 35                	je     254e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x17e>
    2519:	61                   	(bad)
    251a:	74 61                	je     257d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1ad>
    251c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    251d:	68 65 00 5f 5a       	push   0x5a5f0065
    2522:	53                   	push   rbx
    2523:	74 35                	je     255a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x18a>
    2525:	61                   	(bad)
    2526:	74 61                	je     2589 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1b9>
    2528:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2529:	68 66 00 5f 5a       	push   0x5a5f0066
    252e:	53                   	push   rbx
    252f:	74 34                	je     2565 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x195>
    2531:	61                   	(bad)
    2532:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2535:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2539:	53                   	push   rbx
    253a:	74 34                	je     2570 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1a0>
    253c:	61                   	(bad)
    253d:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2540:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    2544:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2548:	6b 5f 74 00          	imul   ebx,DWORD PTR [rdi+0x74],0x0
    254c:	5f                   	pop    rdi
    254d:	5f                   	pop    rdi
    254e:	6d                   	ins    DWORD PTR es:[rdi],dx
    254f:	61                   	(bad)
    2550:	78 5f                	js     25b1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1e1>
    2552:	61                   	(bad)
    2553:	6c                   	ins    BYTE PTR es:[rdi],dx
    2554:	69 67 6e 5f 6c 6c 00 	imul   esp,DWORD PTR [rdi+0x6e],0x6c6c5f
    255b:	77 63                	ja     25c0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1f0>
    255d:	73 6c                	jae    25cb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1fb>
    255f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2561:	00 63 62             	add    BYTE PTR [rbx+0x62],ah
    2564:	72 74                	jb     25da <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x20a>
    2566:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2569:	53                   	push   rbx
    256a:	74 37                	je     25a3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1d3>
    256c:	73 69                	jae    25d7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x207>
    256e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2570:	62 69 74 65 00       	(bad)
    2575:	67 65 74 63          	addr32 gs je 25dc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x20c>
    2579:	68 61 72 00 5f       	push   0x5f007261
    257e:	5a                   	pop    rdx
    257f:	53                   	push   rbx
    2580:	74 35                	je     25b7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1e7>
    2582:	61                   	(bad)
    2583:	74 61                	je     25e6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x216>
    2585:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2586:	32 66 66             	xor    ah,BYTE PTR [rsi+0x66]
    2589:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    258c:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    258f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2590:	74 00                	je     2592 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1c2>
    2592:	5f                   	pop    rdi
    2593:	5f                   	pop    rdi
    2594:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    259b:	76 77                	jbe    2614 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x244>
    259d:	73 63                	jae    2602 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x232>
    259f:	61                   	(bad)
    25a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25a1:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
    25a5:	61                   	(bad)
    25a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25a7:	68 00 5f 5a 53       	push   0x535a5f00
    25ac:	74 31                	je     25df <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x20f>
    25ae:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
    25b1:	78 74                	js     2627 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x257>
    25b3:	74 6f                	je     2624 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x254>
    25b5:	77 61                	ja     2618 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x248>
    25b7:	72 64                	jb     261d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x24d>
    25b9:	65 65 00 73 63       	gs add BYTE PTR gs:[rbx+0x63],dh
    25be:	61                   	(bad)
    25bf:	6c                   	ins    BYTE PTR es:[rdi],dx
    25c0:	62 6c 6e             	(bad)
    25c3:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    25c6:	74 62                	je     262a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x25a>
    25c8:	75 66                	jne    2630 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x260>
    25ca:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
    25cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25ce:	66 00 74 69 6d       	data16 add BYTE PTR [rcx+rbp*2+0x6d],dh
    25d3:	65 5f                	gs pop rdi
    25d5:	70 6f                	jo     2646 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x276>
    25d7:	69 6e 74 3c 73 74 64 	imul   ebp,DWORD PTR [rsi+0x74],0x6474733c
    25de:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    25e0:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    25e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25e4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25e6:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    25e8:	5f                   	pop    rdi
    25e9:	56                   	push   rsi
    25ea:	32 3a                	xor    bh,BYTE PTR [rdx]
    25ec:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    25ef:	65 61                	gs (bad)
    25f1:	64 79 5f             	fs jns 2653 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x283>
    25f4:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    25f8:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    25fc:	74 64                	je     2662 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x292>
    25fe:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2600:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2603:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2604:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2605:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2606:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2608:	64 75 72             	fs jne 267d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2ad>
    260b:	61                   	(bad)
    260c:	74 69                	je     2677 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2a7>
    260e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    260f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2610:	3c 6c                	cmp    al,0x6c
    2612:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2613:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2614:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2618:	74 2c                	je     2646 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x276>
    261a:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    261d:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2620:	72 61                	jb     2683 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2b3>
    2622:	74 69                	je     268d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2bd>
    2624:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2625:	3c 31                	cmp    al,0x31
    2627:	2c 20                	sub    al,0x20
    2629:	31 30                	xor    DWORD PTR [rax],esi
    262b:	30 30                	xor    BYTE PTR [rax],dh
    262d:	30 30                	xor    BYTE PTR [rax],dh
    262f:	30 30                	xor    BYTE PTR [rax],dh
    2631:	30 30                	xor    BYTE PTR [rax],dh
    2633:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2636:	20 3e                	and    BYTE PTR [rsi],bh
    2638:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    263b:	53                   	push   rbx
    263c:	74 33                	je     2671 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2a1>
    263e:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2641:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2645:	53                   	push   rbx
    2646:	74 33                	je     267b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2ab>
    2648:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    264b:	66 00 63 6f          	data16 add BYTE PTR [rbx+0x6f],ah
    264f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2650:	6c                   	ins    BYTE PTR es:[rdi],dx
    2651:	69 73 69 6f 6e 5f 66 	imul   esi,DWORD PTR [rbx+0x69],0x665f6e6f
    2658:	69 6c 65 6e 61 6d 65 	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x656d61
    265f:	00 
    2660:	66 69 6c 65 73 79 73 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7379
    2667:	74 65                	je     26ce <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2fe>
    2669:	6d                   	ins    DWORD PTR es:[rdi],dx
    266a:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    266d:	74 61                	je     26d0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x300>
    266f:	62                   	(bad)
    2670:	6c                   	ins    BYTE PTR es:[rdi],dx
    2671:	65 5f                	gs pop rdi
    2673:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2674:	66 66 73 65          	data16 data16 jae 26dd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x30d>
    2678:	74 00                	je     267a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2aa>
    267a:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    267c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    267d:	61                   	(bad)
    267e:	74 5f                	je     26df <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x30f>
    2680:	74 00                	je     2682 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2b2>
    2682:	5f                   	pop    rdi
    2683:	44 75 72             	rex.R jne 26f8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x328>
    2686:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2689:	65 72 61             	gs jb  26ed <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x31d>
    268c:	74 6f                	je     26fd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x32d>
    268e:	72 2d                	jb     26bd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2ed>
    2690:	3c 6c                	cmp    al,0x6c
    2692:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2693:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2694:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2698:	74 2c                	je     26c6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2f6>
    269a:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    269d:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    26a0:	72 61                	jb     2703 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x333>
    26a2:	74 69                	je     270d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x33d>
    26a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26a5:	3c 31                	cmp    al,0x31
    26a7:	2c 20                	sub    al,0x20
    26a9:	31 30                	xor    DWORD PTR [rax],esi
    26ab:	30 30                	xor    BYTE PTR [rax],dh
    26ad:	30 30                	xor    BYTE PTR [rax],dh
    26af:	30 30                	xor    BYTE PTR [rax],dh
    26b1:	30 30                	xor    BYTE PTR [rax],dh
    26b3:	3e 2c 20             	ds sub al,0x20
    26b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    26b7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26b9:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    26bd:	74 2c                	je     26eb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x31b>
    26bf:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    26c2:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    26c5:	72 61                	jb     2728 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x358>
    26c7:	74 69                	je     2732 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x362>
    26c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26ca:	3c 31                	cmp    al,0x31
    26cc:	2c 20                	sub    al,0x20
    26ce:	31 30                	xor    DWORD PTR [rax],esi
    26d0:	30 30                	xor    BYTE PTR [rax],dh
    26d2:	30 30                	xor    BYTE PTR [rax],dh
    26d4:	30 30                	xor    BYTE PTR [rax],dh
    26d6:	30 30                	xor    BYTE PTR [rax],dh
    26d8:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    26db:	00 69 6c             	add    BYTE PTR [rcx+0x6c],ch
    26de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26df:	67 62                	addr32 (bad)
    26e1:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    26e4:	61                   	(bad)
    26e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26e6:	64 61                	fs (bad)
    26e8:	72 74                	jb     275e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x38e>
    26ea:	44                   	rex.R
    26eb:	65 76 69             	gs jbe 2757 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x387>
    26ee:	61                   	(bad)
    26ef:	74 69                	je     275a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x38a>
    26f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26f3:	54                   	push   rsp
    26f4:	69 6d 65 00 5f 5a 53 	imul   ebp,DWORD PTR [rbp+0x65],0x535a5f00
    26fb:	74 38                	je     2735 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x365>
    26fd:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2704:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    2709:	53                   	push   rbx
    270a:	74 34                	je     2740 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x370>
    270c:	65 78 70             	gs js  277f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3af>
    270f:	32 65 00             	xor    ah,BYTE PTR [rbp+0x0]
    2712:	5f                   	pop    rdi
    2713:	5a                   	pop    rdx
    2714:	53                   	push   rbx
    2715:	74 34                	je     274b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x37b>
    2717:	65 78 70             	gs js  278a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ba>
    271a:	32 66 00             	xor    ah,BYTE PTR [rsi+0x0]
    271d:	5f                   	pop    rdi
    271e:	4e 75 6d             	rex.WRX jne 278e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3be>
    2721:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2724:	77 63                	ja     2789 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3b9>
    2726:	68 62 00 61 74       	push   0x74610062
    272b:	61                   	(bad)
    272c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    272d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2730:	69 6e 74 38 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x74],0x745f38
    2737:	5f                   	pop    rdi
    2738:	5a                   	pop    rdx
    2739:	4e 53                	rex.WRX push rbx
    273b:	74 35                	je     2772 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3a2>
    273d:	72 61                	jb     27a0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3d0>
    273f:	74 69                	je     27aa <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3da>
    2741:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2742:	49                   	rex.WB
    2743:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2745:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2748:	6c                   	ins    BYTE PTR es:[rdi],dx
    2749:	31 30                	xor    DWORD PTR [rax],esi
    274b:	30 30                	xor    BYTE PTR [rax],dh
    274d:	30 30                	xor    BYTE PTR [rax],dh
    274f:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2752:	33 6e 75             	xor    ebp,DWORD PTR [rsi+0x75]
    2755:	6d                   	ins    DWORD PTR es:[rdi],dx
    2756:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    275a:	53                   	push   rbx
    275b:	74 31                	je     278e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3be>
    275d:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    2760:	6c                   	ins    BYTE PTR es:[rdi],dx
    2761:	65 73 73             	gs jae 27d7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x407>
    2764:	65 71 75             	gs jno 27dc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x40c>
    2767:	61                   	(bad)
    2768:	6c                   	ins    BYTE PTR es:[rdi],dx
    2769:	65 65 00 64 75 72    	gs add BYTE PTR gs:[rbp+rsi*2+0x72],ah
    276f:	61                   	(bad)
    2770:	74 69                	je     27db <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x40b>
    2772:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2773:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2774:	5f                   	pop    rdi
    2775:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    2778:	74 3c                	je     27b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3e6>
    277a:	73 74                	jae    27f0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x420>
    277c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    277f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2782:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2783:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2784:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2785:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2787:	64 75 72             	fs jne 27fc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x42c>
    278a:	61                   	(bad)
    278b:	74 69                	je     27f6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x426>
    278d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    278e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    278f:	3c 6c                	cmp    al,0x6c
    2791:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2792:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2793:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2797:	74 2c                	je     27c5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3f5>
    2799:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    279c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    279f:	72 61                	jb     2802 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x432>
    27a1:	74 69                	je     280c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x43c>
    27a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27a4:	3c 31                	cmp    al,0x31
    27a6:	2c 20                	sub    al,0x20
    27a8:	31 30                	xor    DWORD PTR [rax],esi
    27aa:	30 30                	xor    BYTE PTR [rax],dh
    27ac:	30 30                	xor    BYTE PTR [rax],dh
    27ae:	30 3e                	xor    BYTE PTR [rsi],bh
    27b0:	20 3e                	and    BYTE PTR [rsi],bh
    27b2:	2c 20                	sub    al,0x20
    27b4:	6c                   	ins    BYTE PTR es:[rdi],dx
    27b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27b7:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    27bb:	74 2c                	je     27e9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x419>
    27bd:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    27c0:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    27c3:	72 61                	jb     2826 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x456>
    27c5:	74 69                	je     2830 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x460>
    27c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27c8:	3c 31                	cmp    al,0x31
    27ca:	2c 20                	sub    al,0x20
    27cc:	31 30                	xor    DWORD PTR [rax],esi
    27ce:	30 30                	xor    BYTE PTR [rax],dh
    27d0:	30 30                	xor    BYTE PTR [rax],dh
    27d2:	30 30                	xor    BYTE PTR [rax],dh
    27d4:	30 30                	xor    BYTE PTR [rax],dh
    27d6:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    27d9:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    27dc:	73 74                	jae    2852 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x12>
    27de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27df:	6c                   	ins    BYTE PTR es:[rdi],dx
    27e0:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
    27e4:	74 5f                	je     2845 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x5>
    27e6:	70 5f                	jo     2847 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x7>
    27e8:	73 65                	jae    284f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xf>
    27ea:	70 5f                	jo     284b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xb>
    27ec:	62 79 5f 73 70       	(bad)
    27f1:	61                   	(bad)
    27f2:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    27f5:	5f                   	pop    rdi
    27f6:	5a                   	pop    rdx
    27f7:	53                   	push   rbx
    27f8:	74 38                	je     2832 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x462>
    27fa:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2801:	65 64 00 61 76       	gs add BYTE PTR fs:[rcx+0x76],ah
    2806:	65 72 61             	gs jb  286a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2a>
    2809:	67 65 5f             	addr32 gs pop rdi
    280c:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    280f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2810:	69 73 69 6f 6e 00 5f 	imul   esi,DWORD PTR [rbx+0x69],0x5f006e6f
    2817:	5a                   	pop    rdx
    2818:	53                   	push   rbx
    2819:	74 38                	je     2853 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x13>
    281b:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2822:	65 66 00 5f 5a       	data16 add BYTE PTR gs:[rdi+0x5a],bl
    2827:	53                   	push   rbx
    2828:	74 31                	je     285b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1b>
    282a:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    282d:	75 6e                	jne    289d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x5d>
    282f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2830:	72 64                	jb     2896 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x56>
    2832:	65 72 65             	gs jb  289a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x5a>
    2835:	64 65 65 00 66 72    	fs gs add BYTE PTR gs:[rsi+0x72],ah
    283b:	65 78 70             	gs js  28ae <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x6e>
    283e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2841:	4e 53                	rex.WRX push rbx
    2843:	74 36                	je     287b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3b>
    2845:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2848:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2849:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    284a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    284b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    284f:	61                   	(bad)
    2850:	74 69                	je     28bb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x7b>
    2852:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2853:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2854:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2856:	53                   	push   rbx
    2857:	74 35                	je     288e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x4e>
    2859:	72 61                	jb     28bc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x7c>
    285b:	74 69                	je     28c6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x86>
    285d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    285e:	49                   	rex.WB
    285f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2861:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2864:	6c                   	ins    BYTE PTR es:[rdi],dx
    2865:	31 30                	xor    DWORD PTR [rax],esi
    2867:	30 30                	xor    BYTE PTR [rax],dh
    2869:	30 30                	xor    BYTE PTR [rax],dh
    286b:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    286e:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    2872:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2873:	45 76 00             	rex.RB jbe 2876 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x36>
    2876:	77 63                	ja     28db <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x9b>
    2878:	73 73                	jae    28ed <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xad>
    287a:	74 72                	je     28ee <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xae>
    287c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    287f:	4f 5f                	rex.WRXB pop r15
    2881:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    2884:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
    2888:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    288b:	78 74                	js     2901 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xc1>
    288d:	61                   	(bad)
    288e:	66 74 65             	data16 je 28f6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xb6>
    2891:	72 00                	jb     2893 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x53>
    2893:	65 78 70             	gs js  2906 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xc6>
    2896:	6d                   	ins    DWORD PTR es:[rdi],dx
    2897:	31 00                	xor    DWORD PTR [rax],eax
    2899:	5f                   	pop    rdi
    289a:	5f                   	pop    rdi
    289b:	6d                   	ins    DWORD PTR es:[rdi],dx
    289c:	61                   	(bad)
    289d:	78 5f                	js     28fe <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xbe>
    289f:	61                   	(bad)
    28a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    28a1:	69 67 6e 5f 6c 64 00 	imul   esp,DWORD PTR [rdi+0x6e],0x646c5f
    28a8:	5f                   	pop    rdi
    28a9:	5a                   	pop    rdx
    28aa:	4e 53                	rex.WRX push rbx
    28ac:	74 36                	je     28e4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xa4>
    28ae:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    28b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28b4:	32 30                	xor    dh,BYTE PTR [rax]
    28b6:	5f                   	pop    rdi
    28b7:	5f                   	pop    rdi
    28b8:	64 75 72             	fs jne 292d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xed>
    28bb:	61                   	(bad)
    28bc:	74 69                	je     2927 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xe7>
    28be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28c0:	5f                   	pop    rdi
    28c1:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    28c4:	74 5f                	je     2925 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xe5>
    28c6:	69 6d 70 6c 49 4e 53 	imul   ebp,DWORD PTR [rbp+0x70],0x534e496c
    28cd:	5f                   	pop    rdi
    28ce:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    28d2:	61                   	(bad)
    28d3:	74 69                	je     293e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xfe>
    28d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28d7:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    28d9:	53                   	push   rbx
    28da:	74 35                	je     2911 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xd1>
    28dc:	72 61                	jb     293f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xff>
    28de:	74 69                	je     2949 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x109>
    28e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28e1:	49                   	rex.WB
    28e2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    28e4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    28e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    28e8:	31 30                	xor    DWORD PTR [rax],esi
    28ea:	30 30                	xor    BYTE PTR [rax],dh
    28ec:	30 30                	xor    BYTE PTR [rax],dh
    28ee:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    28f1:	45                   	rex.RB
    28f2:	45 53                	rex.RB push r11
    28f4:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    28f7:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    28f9:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    28fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    28fd:	31 30                	xor    DWORD PTR [rax],esi
    28ff:	30 30                	xor    BYTE PTR [rax],dh
    2901:	45                   	rex.RB
    2902:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    2904:	4c 62 31 45 4c 62 30 	rex.WR vpunpckldq zmm14{k4},zmm7,ZMMWORD PTR [rax]
    290b:	45                   	rex.RB
    290c:	45                   	rex.RB
    290d:	36 5f                	ss pop rdi
    290f:	5f                   	pop    rdi
    2910:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    2913:	74 49                	je     295e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x11e>
    2915:	6c                   	ins    BYTE PTR es:[rdi],dx
    2916:	53                   	push   rbx
    2917:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    291a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    291c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    291f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2920:	31 30                	xor    DWORD PTR [rax],esi
    2922:	30 30                	xor    BYTE PTR [rax],dh
    2924:	30 30                	xor    BYTE PTR [rax],dh
    2926:	30 30                	xor    BYTE PTR [rax],dh
    2928:	30 30                	xor    BYTE PTR [rax],dh
    292a:	45                   	rex.RB
    292b:	45                   	rex.RB
    292c:	45                   	rex.RB
    292d:	45 53                	rex.RB push r11
    292f:	34 5f                	xor    al,0x5f
    2931:	52                   	push   rdx
    2932:	4b                   	rex.WXB
    2933:	4e 53                	rex.WRX push rbx
    2935:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    2938:	54                   	push   rsp
    2939:	5f                   	pop    rdi
    293a:	54                   	push   rsp
    293b:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    293e:	45 00 5f 43          	add    BYTE PTR [r15+0x43],r11b
    2942:	6c                   	ins    BYTE PTR es:[rdi],dx
    2943:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2944:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    2947:	77 63                	ja     29ac <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x16c>
    2949:	73 72                	jae    29bd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x17d>
    294b:	74 6f                	je     29bc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x17c>
    294d:	6d                   	ins    DWORD PTR es:[rdi],dx
    294e:	62 73 00 5f 5f       	(bad)
    2953:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    295a:	73 74                	jae    29d0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x190>
    295c:	31 36                	xor    DWORD PTR [rsi],esi
    295e:	5f                   	pop    rdi
    295f:	74 00                	je     2961 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x121>
    2961:	5f                   	pop    rdi
    2962:	66 72 65             	data16 jb 29ca <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x18a>
    2965:	65 72 65             	gs jb  29cd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x18d>
    2968:	73 5f                	jae    29c9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x189>
    296a:	62 75 66 00 74       	(bad)
    296f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2970:	5f                   	pop    rdi
    2971:	77 64                	ja     29d7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x197>
    2973:	61                   	(bad)
    2974:	79 00                	jns    2976 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x136>
    2976:	5f                   	pop    rdi
    2977:	5a                   	pop    rdx
    2978:	53                   	push   rbx
    2979:	74 31                	je     29ac <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x16c>
    297b:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    297e:	6c                   	ins    BYTE PTR es:[rdi],dx
    297f:	65 73 73             	gs jae 29f5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1b5>
    2982:	65 71 75             	gs jno 29fa <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1ba>
    2985:	61                   	(bad)
    2986:	6c                   	ins    BYTE PTR es:[rdi],dx
    2987:	66 66 00 5f 5f       	data16 data16 add BYTE PTR [rdi+0x5f],bl
    298c:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    298f:	74 3c                	je     29cd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x18d>
    2991:	6c                   	ins    BYTE PTR es:[rdi],dx
    2992:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2993:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2994:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2998:	74 2c                	je     29c6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x186>
    299a:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    299d:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    29a0:	72 61                	jb     2a03 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1c3>
    29a2:	74 69                	je     2a0d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1cd>
    29a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29a5:	3c 31                	cmp    al,0x31
    29a7:	2c 20                	sub    al,0x20
    29a9:	31 30                	xor    DWORD PTR [rax],esi
    29ab:	30 30                	xor    BYTE PTR [rax],dh
    29ad:	30 30                	xor    BYTE PTR [rax],dh
    29af:	30 30                	xor    BYTE PTR [rax],dh
    29b1:	30 30                	xor    BYTE PTR [rax],dh
    29b3:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    29b6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    29b9:	53                   	push   rbx
    29ba:	74 35                	je     29f1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1b1>
    29bc:	68 79 70 6f 74       	push   0x746f7079
    29c1:	66 66 66 00 6d 62    	data16 data16 data16 add BYTE PTR [rbp+0x62],ch
    29c7:	73 69                	jae    2a32 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1f2>
    29c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29ca:	69 74 00 61 63 6f 73 	imul   esi,DWORD PTR [rax+rax*1+0x61],0x736f63
    29d1:	00 
    29d2:	74 6d                	je     2a41 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x201>
    29d4:	5f                   	pop    rdi
    29d5:	79 64                	jns    2a3b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1fb>
    29d7:	61                   	(bad)
    29d8:	79 00                	jns    29da <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x19a>
    29da:	5f                   	pop    rdi
    29db:	5a                   	pop    rdx
    29dc:	53                   	push   rbx
    29dd:	74 39                	je     2a18 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1d8>
    29df:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    29e6:	65 72 66             	gs jb  2a4f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x20f>
    29e9:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    29ed:	73 74                	jae    2a63 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x223>
    29ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29f0:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    29f4:	73 74                	jae    2a6a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x22a>
    29f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29f7:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    29fb:	4e 53                	rex.WRX push rbx
    29fd:	74 36                	je     2a35 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1f5>
    29ff:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2a02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a03:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a05:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2a09:	61                   	(bad)
    2a0a:	74 69                	je     2a75 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x235>
    2a0c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a0d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a0e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2a10:	53                   	push   rbx
    2a11:	74 35                	je     2a48 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x208>
    2a13:	72 61                	jb     2a76 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x236>
    2a15:	74 69                	je     2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x240>
    2a17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a18:	49                   	rex.WB
    2a19:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2a1b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2a1e:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a1f:	31 30                	xor    DWORD PTR [rax],esi
    2a21:	30 30                	xor    BYTE PTR [rax],dh
    2a23:	30 30                	xor    BYTE PTR [rax],dh
    2a25:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a28:	45                   	rex.RB
    2a29:	43 34 49             	rex.XB xor al,0x49
    2a2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a2d:	76 45                	jbe    2a74 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x234>
    2a2f:	45 52                	rex.RB push r10
    2a31:	4b 54                	rex.WXB push r12
    2a33:	5f                   	pop    rdi
    2a34:	00 61 73             	add    BYTE PTR [rcx+0x73],ah
    2a37:	69 6e 00 77 63 73 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74736377
    2a3e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a3f:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    2a42:	5f                   	pop    rdi
    2a43:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2a46:	31 31                	xor    DWORD PTR [rcx],esi
    2a48:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2a4b:	66 70 6f             	data16 jo 2abd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x27d>
    2a4e:	73 5f                	jae    2aaf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x26f>
    2a50:	74 00                	je     2a52 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x212>
    2a52:	5f                   	pop    rdi
    2a53:	5a                   	pop    rdx
    2a54:	4e 53                	rex.WRX push rbx
    2a56:	74 36                	je     2a8e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x24e>
    2a58:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2a5b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a5e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2a62:	61                   	(bad)
    2a63:	74 69                	je     2ace <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x28e>
    2a65:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a66:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a67:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2a69:	53                   	push   rbx
    2a6a:	74 35                	je     2aa1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x261>
    2a6c:	72 61                	jb     2acf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x28f>
    2a6e:	74 69                	je     2ad9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x299>
    2a70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a71:	49                   	rex.WB
    2a72:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2a74:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2a77:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a78:	31 30                	xor    DWORD PTR [rax],esi
    2a7a:	30 30                	xor    BYTE PTR [rax],dh
    2a7c:	30 30                	xor    BYTE PTR [rax],dh
    2a7e:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a81:	45                   	rex.RB
    2a82:	64 56                	fs push rsi
    2a84:	45 52                	rex.RB push r10
    2a86:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    2a88:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2a8b:	65 72 61             	gs jb  2aef <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2af>
    2a8e:	74 6f                	je     2aff <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2bf>
    2a90:	72 2b                	jb     2abd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x27d>
    2a92:	3d 00 5f 5f 46       	cmp    eax,0x465f5f00
    2a97:	49                   	rex.WB
    2a98:	4c                   	rex.WR
    2a99:	45 00 61 63          	add    BYTE PTR [r9+0x63],r12b
    2a9d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a9e:	73 68                	jae    2b08 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2c8>
    2aa0:	00 74 72 75          	add    BYTE PTR [rdx+rsi*2+0x75],dh
    2aa4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2aa5:	63 00                	movsxd eax,DWORD PTR [rax]
    2aa7:	5f                   	pop    rdi
    2aa8:	5f                   	pop    rdi
    2aa9:	69 6e 74 31 36 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3631
    2ab0:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2ab3:	4f 5f                	rex.WRXB pop r15
    2ab5:	62 61 63 6b 75       	(bad)
    2aba:	70 5f                	jo     2b1b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2db>
    2abc:	62 61 73 65 00       	(bad)
    2ac1:	73 65                	jae    2b28 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2e8>
    2ac3:	74 6c                	je     2b31 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2f1>
    2ac5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ac6:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    2ac9:	65 00 5f 73          	add    BYTE PTR gs:[rdi+0x73],bl
    2acd:	68 6f 72 74 62       	push   0x6274726f
    2ad2:	75 66                	jne    2b3a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2fa>
    2ad4:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    2ad7:	74 69                	je     2b42 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x302>
    2ad9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ada:	3c 31                	cmp    al,0x31
    2adc:	2c 20                	sub    al,0x20
    2ade:	31 30                	xor    DWORD PTR [rax],esi
    2ae0:	30 30                	xor    BYTE PTR [rax],dh
    2ae2:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    2ae6:	4e 53                	rex.WRX push rbx
    2ae8:	74 36                	je     2b20 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2e0>
    2aea:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2aed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2aee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2aef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2af0:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2af4:	61                   	(bad)
    2af5:	74 69                	je     2b60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x320>
    2af7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2af8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2af9:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2afb:	53                   	push   rbx
    2afc:	74 35                	je     2b33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2f3>
    2afe:	72 61                	jb     2b61 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x321>
    2b00:	74 69                	je     2b6b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x32b>
    2b02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b03:	49                   	rex.WB
    2b04:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b06:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b09:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b0a:	31 30                	xor    DWORD PTR [rax],esi
    2b0c:	30 30                	xor    BYTE PTR [rax],dh
    2b0e:	30 30                	xor    BYTE PTR [rax],dh
    2b10:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2b13:	45                   	rex.RB
    2b14:	36 5f                	ss pop rdi
    2b16:	53                   	push   rbx
    2b17:	5f                   	pop    rdi
    2b18:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2b1d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b1e:	00 77 69             	add    BYTE PTR [rdi+0x69],dh
    2b21:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b22:	74 5f                	je     2b83 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x343>
    2b24:	74 00                	je     2b26 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2e6>
    2b26:	5f                   	pop    rdi
    2b27:	5a                   	pop    rdx
    2b28:	4e                   	rex.WRX
    2b29:	4b 53                	rex.WXB push r11
    2b2b:	74 36                	je     2b63 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x323>
    2b2d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b30:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b31:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b33:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b37:	61                   	(bad)
    2b38:	74 69                	je     2ba3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x363>
    2b3a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b3c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b3e:	53                   	push   rbx
    2b3f:	74 35                	je     2b76 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x336>
    2b41:	72 61                	jb     2ba4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x364>
    2b43:	74 69                	je     2bae <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x36e>
    2b45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b46:	49                   	rex.WB
    2b47:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b49:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b4c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b4d:	31 30                	xor    DWORD PTR [rax],esi
    2b4f:	30 30                	xor    BYTE PTR [rax],dh
    2b51:	30 30                	xor    BYTE PTR [rax],dh
    2b53:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2b56:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    2b58:	67 45 76 00          	addr32 rex.RB jbe 2b5c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x31c>
    2b5c:	5f                   	pop    rdi
    2b5d:	5a                   	pop    rdx
    2b5e:	53                   	push   rbx
    2b5f:	74 31                	je     2b92 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x352>
    2b61:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    2b64:	75 6e                	jne    2bd4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x394>
    2b66:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b67:	72 64                	jb     2bcd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x38d>
    2b69:	65 72 65             	gs jb  2bd1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x391>
    2b6c:	64 66 66 00 74 69 6d 	data16 data16 add BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    2b73:	65 73 70             	gs jae 2be6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3a6>
    2b76:	65 63 5f 67          	movsxd ebx,DWORD PTR gs:[rdi+0x67]
    2b7a:	65 74 00             	gs je  2b7d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x33d>
    2b7d:	5f                   	pop    rdi
    2b7e:	5f                   	pop    rdi
    2b7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b80:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
    2b85:	74 00                	je     2b87 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x347>
    2b87:	5f                   	pop    rdi
    2b88:	5a                   	pop    rdx
    2b89:	4e 53                	rex.WRX push rbx
    2b8b:	74 36                	je     2bc3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x383>
    2b8d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b90:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b92:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b93:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b97:	61                   	(bad)
    2b98:	74 69                	je     2c03 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3c3>
    2b9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b9b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b9c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b9e:	53                   	push   rbx
    2b9f:	74 35                	je     2bd6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x396>
    2ba1:	72 61                	jb     2c04 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3c4>
    2ba3:	74 69                	je     2c0e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3ce>
    2ba5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ba6:	49                   	rex.WB
    2ba7:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2ba9:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2bac:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bad:	31 30                	xor    DWORD PTR [rax],esi
    2baf:	30 30                	xor    BYTE PTR [rax],dh
    2bb1:	30 30                	xor    BYTE PTR [rax],dh
    2bb3:	30 30                	xor    BYTE PTR [rax],dh
    2bb5:	30 30                	xor    BYTE PTR [rax],dh
    2bb7:	45                   	rex.RB
    2bb8:	45                   	rex.RB
    2bb9:	45                   	rex.RB
    2bba:	36 5f                	ss pop rdi
    2bbc:	53                   	push   rbx
    2bbd:	5f                   	pop    rdi
    2bbe:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2bc3:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bc4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2bc7:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    2bca:	65 73 74             	gs jae 2c41 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x401>
    2bcd:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    2bcf:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bd0:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bd1:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2bd8:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    2bdb:	4f 5f                	rex.WRXB pop r15
    2bdd:	46                   	rex.RX
    2bde:	49                   	rex.WB
    2bdf:	4c                   	rex.WR
    2be0:	45 50                	rex.RB push r8
    2be2:	46 6a 38             	rex.RX push 0x38
    2be5:	73 74                	jae    2c5b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x41b>
    2be7:	72 69                	jb     2c52 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x412>
    2be9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bea:	67 5f                	addr32 pop rdi
    2bec:	74 45                	je     2c33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3f3>
    2bee:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    2bf2:	74 44                	je     2c38 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3f8>
    2bf4:	61                   	(bad)
    2bf5:	74 61                	je     2c58 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x418>
    2bf7:	6a 00                	push   0x0
    2bf9:	5f                   	pop    rdi
    2bfa:	5a                   	pop    rdx
    2bfb:	4e 53                	rex.WRX push rbx
    2bfd:	74 36                	je     2c35 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3f5>
    2bff:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2c02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c03:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c05:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2c09:	61                   	(bad)
    2c0a:	74 69                	je     2c75 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x435>
    2c0c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c0d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c0e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2c10:	53                   	push   rbx
    2c11:	74 35                	je     2c48 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x408>
    2c13:	72 61                	jb     2c76 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x436>
    2c15:	74 69                	je     2c80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x440>
    2c17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c18:	49                   	rex.WB
    2c19:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2c1b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2c1e:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c1f:	31 30                	xor    DWORD PTR [rax],esi
    2c21:	30 30                	xor    BYTE PTR [rax],dh
    2c23:	30 30                	xor    BYTE PTR [rax],dh
    2c25:	30 30                	xor    BYTE PTR [rax],dh
    2c27:	30 30                	xor    BYTE PTR [rax],dh
    2c29:	45                   	rex.RB
    2c2a:	45                   	rex.RB
    2c2b:	45                   	rex.RB
    2c2c:	43 34 49             	rex.XB xor al,0x49
    2c2f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c30:	76 45                	jbe    2c77 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x437>
    2c32:	45 52                	rex.RB push r10
    2c34:	4b 54                	rex.WXB push r12
    2c36:	5f                   	pop    rdi
    2c37:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2c3a:	53                   	push   rbx
    2c3b:	74 34                	je     2c71 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x431>
    2c3d:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2c40:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c41:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2c45:	53                   	push   rbx
    2c46:	74 34                	je     2c7c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x43c>
    2c48:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2c4b:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c4c:	66 00 66 6f          	data16 add BYTE PTR [rsi+0x6f],ah
    2c50:	70 65                	jo     2cb7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x477>
    2c52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c53:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2c56:	53                   	push   rbx
    2c57:	74 36                	je     2c8f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x44f>
    2c59:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c5b:	72 69                	jb     2cc6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x486>
    2c5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c5e:	74 65                	je     2cc5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x485>
    2c60:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    2c63:	61                   	(bad)
    2c64:	72 63                	jb     2cc9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x489>
    2c66:	68 5f 66 69 6c       	push   0x6c69665f
    2c6b:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    2c6f:	73 77                	jae    2ce8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x4a8>
    2c71:	61                   	(bad)
    2c72:	70 70                	jo     2ce4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x4a4>
    2c74:	61                   	(bad)
    2c75:	62                   	(bad)
    2c76:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c77:	65 5f                	gs pop rdi
    2c79:	64 65 74 61          	fs gs je 2cde <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x49e>
    2c7d:	69 6c 73 00 5f 5a 53 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x74535a5f
    2c84:	74 
    2c85:	33 6c 6f 67          	xor    ebp,DWORD PTR [rdi+rbp*2+0x67]
    2c89:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2c8d:	53                   	push   rbx
    2c8e:	74 33                	je     2cc3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x483>
    2c90:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c91:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c92:	67 66 00 63 68       	data16 add BYTE PTR [ebx+0x68],ah
    2c97:	61                   	(bad)
    2c98:	72 33                	jb     2ccd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x48d>
    2c9a:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    2c9d:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2ca0:	77 69                	ja     2d0b <_Z4testPFj8string_tE9Filenames8TestDatajj+0xb>
    2ca2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ca3:	64 00 72 61          	add    BYTE PTR fs:[rdx+0x61],dh
    2ca7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ca8:	64 5f                	fs pop rdi
    2caa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cab:	75 6d                	jne    2d1a <_Z4testPFj8string_tE9Filenames8TestDatajj+0x1a>
    2cad:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2cb0:	53                   	push   rbx
    2cb1:	74 34                	je     2ce7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x4a7>
    2cb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    2cb4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cb5:	67 62 65 00 5f 5a    	(bad)
    2cbb:	53                   	push   rbx
    2cbc:	74 34                	je     2cf2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x4b2>
    2cbe:	6c                   	ins    BYTE PTR es:[rdi],dx
    2cbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cc0:	67 62 66 00 5f 5a    	(bad)
    2cc6:	4e 53                	rex.WRX push rbx
    2cc8:	74 36                	je     2d00 <_Z4testPFj8string_tE9Filenames8TestDatajj>
    2cca:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2ccd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ccf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cd0:	6d                   	ins    DWORD PTR es:[rdi],dx
    2cd1:	69 49 4e 53 5f 33 5f 	imul   ecx,DWORD PTR [rcx+0x4e],0x5f335f53
    2cd8:	56                   	push   rsi
    2cd9:	32 31                	xor    dh,BYTE PTR [rcx]
    2cdb:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2cde:	65 61                	gs (bad)
    2ce0:	64 79 5f             	fs jns 2d42 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x42>
    2ce3:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2ce7:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2ceb:	5f                   	pop    rdi
    2cec:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2cf0:	61                   	(bad)
    2cf1:	74 69                	je     2d5c <_Z4testPFj8string_tE9Filenames8TestDatajj+0x5c>
    2cf3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cf4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cf5:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2cf7:	53                   	push   rbx
    2cf8:	74 35                	je     2d2f <_Z4testPFj8string_tE9Filenames8TestDatajj+0x2f>
    2cfa:	72 61                	jb     2d5d <_Z4testPFj8string_tE9Filenames8TestDatajj+0x5d>
    2cfc:	74 69                	je     2d67 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x67>
    2cfe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cff:	49                   	rex.WB
    2d00:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2d02:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2d05:	6c                   	ins    BYTE PTR es:[rdi],dx
    2d06:	31 30                	xor    DWORD PTR [rax],esi
    2d08:	30 30                	xor    BYTE PTR [rax],dh
    2d0a:	30 30                	xor    BYTE PTR [rax],dh
    2d0c:	30 30                	xor    BYTE PTR [rax],dh
    2d0e:	30 30                	xor    BYTE PTR [rax],dh
    2d10:	45                   	rex.RB
    2d11:	45                   	rex.RB
    2d12:	45                   	rex.RB
    2d13:	45 53                	rex.RB push r11
    2d15:	36 5f                	ss pop rdi
    2d17:	45                   	rex.RB
    2d18:	45                   	rex.RB
    2d19:	4e 53                	rex.WRX push rbx
    2d1b:	74 31                	je     2d4e <_Z4testPFj8string_tE9Filenames8TestDatajj+0x4e>
    2d1d:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    2d20:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d21:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d24:	5f                   	pop    rdi
    2d25:	74 79                	je     2da0 <_Z7testAllPKcjS0_j+0x30>
    2d27:	70 65                	jo     2d8e <_Z7testAllPKcjS0_j+0x1e>
    2d29:	49                   	rex.WB
    2d2a:	4a 54                	rex.WX push rsp
    2d2c:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    2d2f:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    2d32:	45 34 74             	rex.RB xor al,0x74
    2d35:	79 70                	jns    2da7 <_Z7testAllPKcjS0_j+0x37>
    2d37:	65 45 52             	gs rex.RB push r10
    2d3a:	4b                   	rex.WXB
    2d3b:	4e 53                	rex.WRX push rbx
    2d3d:	5f                   	pop    rdi
    2d3e:	31 30                	xor    DWORD PTR [rax],esi
    2d40:	74 69                	je     2dab <_Z7testAllPKcjS0_j+0x3b>
    2d42:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d43:	65 5f                	gs pop rdi
    2d45:	70 6f                	jo     2db6 <_Z7testAllPKcjS0_j+0x46>
    2d47:	69 6e 74 49 54 5f 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535f5449
    2d4e:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    2d51:	45 52                	rex.RB push r10
    2d53:	4b                   	rex.WXB
    2d54:	4e 53                	rex.WRX push rbx
    2d56:	43 5f                	rex.XB pop r15
    2d58:	49 53                	rex.WB push r11
    2d5a:	44 5f                	rex.R pop rdi
    2d5c:	53                   	push   rbx
    2d5d:	39 5f 45             	cmp    DWORD PTR [rdi+0x45],ebx
    2d60:	45 00 66 6d          	add    BYTE PTR [r14+0x6d],r12b
    2d64:	61                   	(bad)
    2d65:	78 00                	js     2d67 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x67>
    2d67:	5f                   	pop    rdi
    2d68:	5a                   	pop    rdx
    2d69:	4e                   	rex.WRX
    2d6a:	4b 53                	rex.WXB push r11
    2d6c:	74 36                	je     2da4 <_Z7testAllPKcjS0_j+0x34>
    2d6e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2d71:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d72:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d74:	31 30                	xor    DWORD PTR [rax],esi
    2d76:	74 69                	je     2de1 <_Z7testAllPKcjS0_j+0x71>
    2d78:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d79:	65 5f                	gs pop rdi
    2d7b:	70 6f                	jo     2dec <_Z7testAllPKcjS0_j+0x7c>
    2d7d:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    2d84:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    2d87:	32 31                	xor    dh,BYTE PTR [rcx]
    2d89:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2d8c:	65 61                	gs (bad)
    2d8e:	64 79 5f             	fs jns 2df0 <_Z7testAllPKcjS0_j+0x80>
    2d91:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2d95:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2d99:	5f                   	pop    rdi
    2d9a:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2d9e:	61                   	(bad)
    2d9f:	74 69                	je     2e0a <_Z7testAllPKcjS0_j+0x9a>
    2da1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2da2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2da3:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2da5:	53                   	push   rbx
    2da6:	74 35                	je     2ddd <_Z7testAllPKcjS0_j+0x6d>
    2da8:	72 61                	jb     2e0b <_Z7testAllPKcjS0_j+0x9b>
    2daa:	74 69                	je     2e15 <_Z7testAllPKcjS0_j+0xa5>
    2dac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dad:	49                   	rex.WB
    2dae:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2db0:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2db3:	6c                   	ins    BYTE PTR es:[rdi],dx
    2db4:	31 30                	xor    DWORD PTR [rax],esi
    2db6:	30 30                	xor    BYTE PTR [rax],dh
    2db8:	30 30                	xor    BYTE PTR [rax],dh
    2dba:	30 30                	xor    BYTE PTR [rax],dh
    2dbc:	30 30                	xor    BYTE PTR [rax],dh
    2dbe:	45                   	rex.RB
    2dbf:	45                   	rex.RB
    2dc0:	45                   	rex.RB
    2dc1:	45                   	rex.RB
    2dc2:	45 31 36             	xor    DWORD PTR [r14],r14d
    2dc5:	74 69                	je     2e30 <_Z7testAllPKcjS0_j+0xc0>
    2dc7:	6d                   	ins    DWORD PTR es:[rdi],dx
    2dc8:	65 5f                	gs pop rdi
    2dca:	73 69                	jae    2e35 <_Z7testAllPKcjS0_j+0xc5>
    2dcc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dcd:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2dd0:	65 70 6f             	gs jo  2e42 <_Z7testAllPKcjS0_j+0xd2>
    2dd3:	63 68 45             	movsxd ebp,DWORD PTR [rax+0x45]
    2dd6:	76 00                	jbe    2dd8 <_Z7testAllPKcjS0_j+0x68>
    2dd8:	5f                   	pop    rdi
    2dd9:	5a                   	pop    rdx
    2dda:	53                   	push   rbx
    2ddb:	74 36                	je     2e13 <_Z7testAllPKcjS0_j+0xa3>
    2ddd:	69 73 6c 65 73 73 66 	imul   esi,DWORD PTR [rbx+0x6c],0x66737365
    2de4:	66 00 5f 4e          	data16 add BYTE PTR [rdi+0x4e],bl
    2de8:	75 6d                	jne    2e57 <_Z7testAllPKcjS0_j+0xe7>
    2dea:	49 73 4f             	rex.WB jae 2e3c <_Z7testAllPKcjS0_j+0xcc>
    2ded:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dee:	65 00 6c 67 61       	add    BYTE PTR gs:[rdi+riz*2+0x61],ch
    2df3:	6d                   	ins    DWORD PTR es:[rdi],dx
    2df4:	6d                   	ins    DWORD PTR es:[rdi],dx
    2df5:	61                   	(bad)
    2df6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2df9:	53                   	push   rbx
    2dfa:	74 36                	je     2e32 <_Z7testAllPKcjS0_j+0xc2>
    2dfc:	69 73 6c 65 73 73 64 	imul   esi,DWORD PTR [rbx+0x6c],0x64737365
    2e03:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    2e07:	53                   	push   rbx
    2e08:	74 35                	je     2e3f <_Z7testAllPKcjS0_j+0xcf>
    2e0a:	69 73 69 6e 66 64 00 	imul   esi,DWORD PTR [rbx+0x69],0x64666e
    2e11:	5f                   	pop    rdi
    2e12:	5a                   	pop    rdx
    2e13:	53                   	push   rbx
    2e14:	74 35                	je     2e4b <_Z7testAllPKcjS0_j+0xdb>
    2e16:	69 73 69 6e 66 65 00 	imul   esi,DWORD PTR [rbx+0x69],0x65666e
    2e1d:	5f                   	pop    rdi
    2e1e:	5a                   	pop    rdx
    2e1f:	53                   	push   rbx
    2e20:	74 35                	je     2e57 <_Z7testAllPKcjS0_j+0xe7>
    2e22:	61                   	(bad)
    2e23:	73 69                	jae    2e8e <_Z7testAllPKcjS0_j+0x11e>
    2e25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e26:	68 65 00 5f 5a       	push   0x5a5f0065
    2e2b:	53                   	push   rbx
    2e2c:	74 35                	je     2e63 <_Z7testAllPKcjS0_j+0xf3>
    2e2e:	61                   	(bad)
    2e2f:	73 69                	jae    2e9a <_Z7testAllPKcjS0_j+0x12a>
    2e31:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e32:	68 66 00 77 63       	push   0x63770066
    2e37:	73 66                	jae    2e9f <_Z7testAllPKcjS0_j+0x12f>
    2e39:	74 69                	je     2ea4 <_Z7testAllPKcjS0_j+0x134>
    2e3b:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e3c:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2e40:	53                   	push   rbx
    2e41:	74 34                	je     2e77 <_Z7testAllPKcjS0_j+0x107>
    2e43:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2e46:	68 65 00 5f 5a       	push   0x5a5f0065
    2e4b:	53                   	push   rbx
    2e4c:	74 34                	je     2e82 <_Z7testAllPKcjS0_j+0x112>
    2e4e:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2e51:	68 66 00 66 70       	push   0x70660066
    2e56:	72 69                	jb     2ec1 <_Z7testAllPKcjS0_j+0x151>
    2e58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e59:	74 66                	je     2ec1 <_Z7testAllPKcjS0_j+0x151>
    2e5b:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2e5e:	65 72 61             	gs jb  2ec2 <_Z7testAllPKcjS0_j+0x152>
    2e61:	74 6f                	je     2ed2 <_Z7testAllPKcjS0_j+0x162>
    2e63:	72 2a                	jb     2e8f <_Z7testAllPKcjS0_j+0x11f>
    2e65:	3d 00 75 69 6e       	cmp    eax,0x6e697500
    2e6a:	74 5f                	je     2ecb <_Z7testAllPKcjS0_j+0x15b>
    2e6c:	66 61                	data16 (bad)
    2e6e:	73 74                	jae    2ee4 <_Z7testAllPKcjS0_j+0x174>
    2e70:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2e73:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2e76:	69 73 5f 72 61 74 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69746172
    2e7d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e7e:	5f                   	pop    rdi
    2e7f:	76 00                	jbe    2e81 <_Z7testAllPKcjS0_j+0x111>
    2e81:	66 72 65             	data16 jb 2ee9 <_Z7testAllPKcjS0_j+0x179>
    2e84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e85:	70 65                	jo     2eec <_Z7testAllPKcjS0_j+0x17c>
    2e87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e88:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2e8b:	64 65 62 75 67 00 66 	(bad)
    2e92:	65 72 72             	gs jb  2f07 <_Z7testAllPKcjS0_j+0x197>
    2e95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e96:	72 00                	jb     2e98 <_Z7testAllPKcjS0_j+0x128>
    2e98:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    2e9b:	72 65                	jb     2f02 <_Z7testAllPKcjS0_j+0x192>
    2e9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e9e:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    2ea1:	73 79                	jae    2f1c <_Z7testAllPKcjS0_j+0x1ac>
    2ea3:	6d                   	ins    DWORD PTR es:[rdi],dx
    2ea4:	62 6f 6c 00 5f       	(bad)
    2ea9:	5a                   	pop    rdx
    2eaa:	53                   	push   rbx
    2eab:	74 31                	je     2ede <_Z7testAllPKcjS0_j+0x16e>
    2ead:	34 69                	xor    al,0x69
    2eaf:	73 67                	jae    2f18 <_Z7testAllPKcjS0_j+0x1a8>
    2eb1:	72 65                	jb     2f18 <_Z7testAllPKcjS0_j+0x1a8>
    2eb3:	61                   	(bad)
    2eb4:	74 65                	je     2f1b <_Z7testAllPKcjS0_j+0x1ab>
    2eb6:	72 65                	jb     2f1d <_Z7testAllPKcjS0_j+0x1ad>
    2eb8:	71 75                	jno    2f2f <_Z7testAllPKcjS0_j+0x1bf>
    2eba:	61                   	(bad)
    2ebb:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ebc:	64 64 00 73 63       	fs add BYTE PTR fs:[rbx+0x63],dh
    2ec1:	61                   	(bad)
    2ec2:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ec3:	62 6e 00 5f 5a       	(bad)
    2ec8:	53                   	push   rbx
    2ec9:	74 33                	je     2efe <_Z7testAllPKcjS0_j+0x18e>
    2ecb:	65 72 66             	gs jb  2f34 <_Z7testAllPKcjS0_j+0x1c4>
    2ece:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2ed2:	53                   	push   rbx
    2ed3:	74 33                	je     2f08 <_Z7testAllPKcjS0_j+0x198>
    2ed5:	65 72 66             	gs jb  2f3e <_Z7testAllPKcjS0_j+0x1ce>
    2ed8:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    2edc:	6c                   	ins    BYTE PTR es:[rdi],dx
    2edd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ede:	61                   	(bad)
    2edf:	74 33                	je     2f14 <_Z7testAllPKcjS0_j+0x1a4>
    2ee1:	32 00                	xor    al,BYTE PTR [rax]
    2ee3:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2eea:	65 00 66 69          	add    BYTE PTR gs:[rsi+0x69],ah
    2eee:	6c                   	ins    BYTE PTR es:[rdi],dx
    2eef:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2ef1:	61                   	(bad)
    2ef2:	6d                   	ins    DWORD PTR es:[rdi],dx
    2ef3:	65 73 00             	gs jae 2ef6 <_Z7testAllPKcjS0_j+0x186>
    2ef6:	5f                   	pop    rdi
    2ef7:	5f                   	pop    rdi
    2ef8:	73 74                	jae    2f6e <_Z7testAllPKcjS0_j+0x1fe>
    2efa:	61                   	(bad)
    2efb:	74 65                	je     2f62 <_Z7testAllPKcjS0_j+0x1f2>
    2efd:	00 64 75 72          	add    BYTE PTR [rbp+rsi*2+0x72],ah
    2f01:	61                   	(bad)
    2f02:	74 69                	je     2f6d <_Z7testAllPKcjS0_j+0x1fd>
    2f04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f05:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f06:	3c 6c                	cmp    al,0x6c
    2f08:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f09:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f0a:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2f0e:	74 2c                	je     2f3c <_Z7testAllPKcjS0_j+0x1cc>
    2f10:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2f13:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2f16:	72 61                	jb     2f79 <_Z7testAllPKcjS0_j+0x209>
    2f18:	74 69                	je     2f83 <_Z7testAllPKcjS0_j+0x213>
    2f1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f1b:	3c 31                	cmp    al,0x31
    2f1d:	2c 20                	sub    al,0x20
    2f1f:	31 30                	xor    DWORD PTR [rax],esi
    2f21:	30 30                	xor    BYTE PTR [rax],dh
    2f23:	30 30                	xor    BYTE PTR [rax],dh
    2f25:	30 30                	xor    BYTE PTR [rax],dh
    2f27:	30 30                	xor    BYTE PTR [rax],dh
    2f29:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2f2c:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2f2f:	65 72 61             	gs jb  2f93 <_Z7testAllPKcjS0_j+0x223>
    2f32:	74 6f                	je     2fa3 <_Z7testAllPKcjS0_j+0x233>
    2f34:	72 2b                	jb     2f61 <_Z7testAllPKcjS0_j+0x1f1>
    2f36:	2b 00                	sub    eax,DWORD PTR [rax]
    2f38:	5f                   	pop    rdi
    2f39:	5a                   	pop    rdx
    2f3a:	53                   	push   rbx
    2f3b:	74 36                	je     2f73 <_Z7testAllPKcjS0_j+0x203>
    2f3d:	69 73 6c 65 73 73 65 	imul   esi,DWORD PTR [rbx+0x6c],0x65737365
    2f44:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2f48:	53                   	push   rbx
    2f49:	74 34                	je     2f7f <_Z7testAllPKcjS0_j+0x20f>
    2f4b:	72 69                	jb     2fb6 <_Z7testAllPKcjS0_j+0x246>
    2f4d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f4e:	74 65                	je     2fb5 <_Z7testAllPKcjS0_j+0x245>
    2f50:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f53:	53                   	push   rbx
    2f54:	74 34                	je     2f8a <_Z7testAllPKcjS0_j+0x21a>
    2f56:	72 69                	jb     2fc1 <_Z7testAllPKcjS0_j+0x251>
    2f58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f59:	74 66                	je     2fc1 <_Z7testAllPKcjS0_j+0x251>
    2f5b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2f5e:	61                   	(bad)
    2f5f:	72 74                	jb     2fd5 <_Z7testAllPKcjS0_j+0x265>
    2f61:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f64:	73 74                	jae    2fda <_Z7testAllPKcjS0_j+0x26a>
    2f66:	72 65                	jb     2fcd <_Z7testAllPKcjS0_j+0x25d>
    2f68:	61                   	(bad)
    2f69:	6d                   	ins    DWORD PTR es:[rdi],dx
    2f6a:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2f6d:	6d                   	ins    DWORD PTR es:[rdi],dx
    2f6e:	61                   	(bad)
    2f6f:	69 6e 64 65 72 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007265
    2f76:	5f                   	pop    rdi
    2f77:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2f7e:	73 74                	jae    2ff4 <_Z7testAllPKcjS0_j+0x284>
    2f80:	36 34 5f             	ss xor al,0x5f
    2f83:	74 00                	je     2f85 <_Z7testAllPKcjS0_j+0x215>
    2f85:	64 75 72             	fs jne 2ffa <_Z7testAllPKcjS0_j+0x28a>
    2f88:	61                   	(bad)
    2f89:	74 69                	je     2ff4 <_Z7testAllPKcjS0_j+0x284>
    2f8b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f8c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f8d:	3c 6c                	cmp    al,0x6c
    2f8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f91:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2f95:	74 3e                	je     2fd5 <_Z7testAllPKcjS0_j+0x265>
    2f97:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
    2f9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f9b:	5f                   	pop    rdi
    2f9c:	67 72 6f             	addr32 jb 300e <_Z7testAllPKcjS0_j+0x29e>
    2f9f:	75 70                	jne    3011 <_Z7testAllPKcjS0_j+0x2a1>
    2fa1:	69 6e 67 00 5f 5a 32 	imul   ebp,DWORD PTR [rsi+0x67],0x325a5f00
    2fa8:	37                   	(bad)
    2fa9:	73 74                	jae    301f <_Z7testAllPKcjS0_j+0x2af>
    2fab:	61                   	(bad)
    2fac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fad:	64 61                	fs (bad)
    2faf:	72 74                	jb     3025 <_Z7testAllPKcjS0_j+0x2b5>
    2fb1:	44                   	rex.R
    2fb2:	65 76 69             	gs jbe 301e <_Z7testAllPKcjS0_j+0x2ae>
    2fb5:	61                   	(bad)
    2fb6:	74 69                	je     3021 <_Z7testAllPKcjS0_j+0x2b1>
    2fb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fb9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fba:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    2fbc:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fbd:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fbe:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2fc5:	37                   	(bad)
    2fc6:	48 61                	rex.W (bad)
    2fc8:	73 68                	jae    3032 <_Z7testAllPKcjS0_j+0x2c2>
    2fca:	4d 61                	rex.WRB (bad)
    2fcc:	70 66                	jo     3034 <_Z7testAllPKcjS0_j+0x2c4>
    2fce:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fd1:	75 69                	jne    303c <_Z7testAllPKcjS0_j+0x2cc>
    2fd3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fd4:	74 6d                	je     3043 <_Z7testAllPKcjS0_j+0x2d3>
    2fd6:	61                   	(bad)
    2fd7:	78 5f                	js     3038 <_Z7testAllPKcjS0_j+0x2c8>
    2fd9:	74 00                	je     2fdb <_Z7testAllPKcjS0_j+0x26b>
    2fdb:	68 79 70 6f 74       	push   0x746f7079
    2fe0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2fe3:	53                   	push   rbx
    2fe4:	74 31                	je     3017 <_Z7testAllPKcjS0_j+0x2a7>
    2fe6:	34 69                	xor    al,0x69
    2fe8:	73 67                	jae    3051 <_Z7testAllPKcjS0_j+0x2e1>
    2fea:	72 65                	jb     3051 <_Z7testAllPKcjS0_j+0x2e1>
    2fec:	61                   	(bad)
    2fed:	74 65                	je     3054 <_Z7testAllPKcjS0_j+0x2e4>
    2fef:	72 65                	jb     3056 <_Z7testAllPKcjS0_j+0x2e6>
    2ff1:	71 75                	jno    3068 <_Z7testAllPKcjS0_j+0x2f8>
    2ff3:	61                   	(bad)
    2ff4:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ff5:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    2ffa:	53                   	push   rbx
    2ffb:	74 35                	je     3032 <_Z7testAllPKcjS0_j+0x2c2>
    2ffd:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2fff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3000:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3001:	72 65                	jb     3068 <_Z7testAllPKcjS0_j+0x2f8>
    3003:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3006:	53                   	push   rbx
    3007:	74 35                	je     303e <_Z7testAllPKcjS0_j+0x2ce>
    3009:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    300b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    300c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    300d:	72 66                	jb     3075 <_Z7testAllPKcjS0_j+0x305>
    300f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3012:	4e                   	rex.WRX
    3013:	4b 53                	rex.WXB push r11
    3015:	74 36                	je     304d <_Z7testAllPKcjS0_j+0x2dd>
    3017:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    301a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    301b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    301c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    301d:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3021:	61                   	(bad)
    3022:	74 69                	je     308d <_Z7testAllPKcjS0_j+0x31d>
    3024:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3025:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3026:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3028:	53                   	push   rbx
    3029:	74 35                	je     3060 <_Z7testAllPKcjS0_j+0x2f0>
    302b:	72 61                	jb     308e <_Z7testAllPKcjS0_j+0x31e>
    302d:	74 69                	je     3098 <_Z7testAllPKcjS0_j+0x328>
    302f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3030:	49                   	rex.WB
    3031:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3033:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3036:	6c                   	ins    BYTE PTR es:[rdi],dx
    3037:	31 30                	xor    DWORD PTR [rax],esi
    3039:	30 30                	xor    BYTE PTR [rax],dh
    303b:	30 30                	xor    BYTE PTR [rax],dh
    303d:	30 30                	xor    BYTE PTR [rax],dh
    303f:	30 30                	xor    BYTE PTR [rax],dh
    3041:	45                   	rex.RB
    3042:	45                   	rex.RB
    3043:	45 70 73             	rex.RB jo 30b9 <_Z7testAllPKcjS0_j+0x349>
    3046:	45 76 00             	rex.RB jbe 3049 <_Z7testAllPKcjS0_j+0x2d9>
    3049:	77 63                	ja     30ae <_Z7testAllPKcjS0_j+0x33e>
    304b:	73 63                	jae    30b0 <_Z7testAllPKcjS0_j+0x340>
    304d:	61                   	(bad)
    304e:	74 00                	je     3050 <_Z7testAllPKcjS0_j+0x2e0>
    3050:	74 6d                	je     30bf <_Z7testAllPKcjS0_j+0x34f>
    3052:	70 66                	jo     30ba <_Z7testAllPKcjS0_j+0x34a>
    3054:	69 6c 65 00 31 31 5f 	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x5f5f3131
    305b:	5f 
    305c:	6d                   	ins    DWORD PTR es:[rdi],dx
    305d:	62 73 74 61 74       	(bad)
    3062:	65 5f                	gs pop rdi
    3064:	74 00                	je     3066 <_Z7testAllPKcjS0_j+0x2f6>
    3066:	69 6e 74 5f 70 5f 73 	imul   ebp,DWORD PTR [rsi+0x74],0x735f705f
    306d:	69 67 6e 5f 70 6f 73 	imul   esp,DWORD PTR [rdi+0x6e],0x736f705f
    3074:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3075:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    3078:	65 72 69             	gs jb  30e4 <_Z7testAllPKcjS0_j+0x374>
    307b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    307c:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    307f:	5f                   	pop    rdi
    3080:	5f                   	pop    rdi
    3081:	73 77                	jae    30fa <_Z7testAllPKcjS0_j+0x38a>
    3083:	61                   	(bad)
    3084:	70 70                	jo     30f6 <_Z7testAllPKcjS0_j+0x386>
    3086:	61                   	(bad)
    3087:	62                   	(bad)
    3088:	6c                   	ins    BYTE PTR es:[rdi],dx
    3089:	65 5f                	gs pop rdi
    308b:	77 69                	ja     30f6 <_Z7testAllPKcjS0_j+0x386>
    308d:	74 68                	je     30f7 <_Z7testAllPKcjS0_j+0x387>
    308f:	5f                   	pop    rdi
    3090:	64 65 74 61          	fs gs je 30f5 <_Z7testAllPKcjS0_j+0x385>
    3094:	69 6c 73 00 74 6d 5f 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x7a5f6d74
    309b:	7a 
    309c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    309d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    309e:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    30a2:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3436
    30a9:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    30ac:	67 65 74 63          	addr32 gs je 3113 <_Z7testAllPKcjS0_j+0x3a3>
    30b0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    30b3:	4e 53                	rex.WRX push rbx
    30b5:	74 36                	je     30ed <_Z7testAllPKcjS0_j+0x37d>
    30b7:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    30ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30bd:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    30c1:	61                   	(bad)
    30c2:	74 69                	je     312d <_Z7testAllPKcjS0_j+0x3bd>
    30c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30c6:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    30c8:	53                   	push   rbx
    30c9:	74 35                	je     3100 <_Z7testAllPKcjS0_j+0x390>
    30cb:	72 61                	jb     312e <_Z7testAllPKcjS0_j+0x3be>
    30cd:	74 69                	je     3138 <_Z7testAllPKcjS0_j+0x3c8>
    30cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30d0:	49                   	rex.WB
    30d1:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    30d3:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    30d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    30d7:	31 30                	xor    DWORD PTR [rax],esi
    30d9:	30 30                	xor    BYTE PTR [rax],dh
    30db:	30 30                	xor    BYTE PTR [rax],dh
    30dd:	30 30                	xor    BYTE PTR [rax],dh
    30df:	30 30                	xor    BYTE PTR [rax],dh
    30e1:	45                   	rex.RB
    30e2:	45                   	rex.RB
    30e3:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    30e7:	78 45                	js     312e <_Z7testAllPKcjS0_j+0x3be>
    30e9:	76 00                	jbe    30eb <_Z7testAllPKcjS0_j+0x37b>
    30eb:	5f                   	pop    rdi
    30ec:	5a                   	pop    rdx
    30ed:	53                   	push   rbx
    30ee:	74 35                	je     3125 <_Z7testAllPKcjS0_j+0x3b5>
    30f0:	69 6c 6f 67 62 66 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006662
    30f7:	5f 
    30f8:	5a                   	pop    rdx
    30f9:	53                   	push   rbx
    30fa:	74 33                	je     312f <_Z7testAllPKcjS0_j+0x3bf>
    30fc:	70 6f                	jo     316d <_Z7testAllPKcjS0_j+0x3fd>
    30fe:	77 65                	ja     3165 <_Z7testAllPKcjS0_j+0x3f5>
    3100:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    3104:	72 74                	jb     317a <_Z7testAllPKcjS0_j+0x40a>
    3106:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3107:	6d                   	ins    DWORD PTR es:[rdi],dx
    3108:	62                   	(bad)
    3109:	00 6c 63 6f          	add    BYTE PTR [rbx+riz*2+0x6f],ch
    310d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    310e:	76 00                	jbe    3110 <_Z7testAllPKcjS0_j+0x3a0>
    3110:	5f                   	pop    rdi
    3111:	5a                   	pop    rdx
    3112:	53                   	push   rbx
    3113:	74 35                	je     314a <_Z7testAllPKcjS0_j+0x3da>
    3115:	69 6c 6f 67 62 65 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006562
    311c:	5f 
    311d:	5a                   	pop    rdx
    311e:	53                   	push   rbx
    311f:	74 31                	je     3152 <_Z7testAllPKcjS0_j+0x3e2>
    3121:	34 69                	xor    al,0x69
    3123:	73 67                	jae    318c <_Z7testAllPKcjS0_j+0x41c>
    3125:	72 65                	jb     318c <_Z7testAllPKcjS0_j+0x41c>
    3127:	61                   	(bad)
    3128:	74 65                	je     318f <_Z7testAllPKcjS0_j+0x41f>
    312a:	72 65                	jb     3191 <_Z7testAllPKcjS0_j+0x421>
    312c:	71 75                	jno    31a3 <_Z7testAllPKcjS0_j+0x433>
    312e:	61                   	(bad)
    312f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3130:	66 66 00 5f 49       	data16 data16 add BYTE PTR [rdi+0x49],bl
    3135:	4f 5f                	rex.WRXB pop r15
    3137:	72 65                	jb     319e <_Z7testAllPKcjS0_j+0x42e>
    3139:	61                   	(bad)
    313a:	64 5f                	fs pop rdi
    313c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    313e:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    3142:	53                   	push   rbx
    3143:	74 35                	je     317a <_Z7testAllPKcjS0_j+0x40a>
    3145:	6c                   	ins    BYTE PTR es:[rdi],dx
    3146:	72 69                	jb     31b1 <_Z7testAllPKcjS0_j+0x441>
    3148:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3149:	74 65                	je     31b0 <_Z7testAllPKcjS0_j+0x440>
    314b:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    314e:	73 6e                	jae    31be <_Z7testAllPKcjS0_j+0x44e>
    3150:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    3153:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3156:	53                   	push   rbx
    3157:	74 39                	je     3192 <_Z7testAllPKcjS0_j+0x422>
    3159:	72 65                	jb     31c0 <_Z7testAllPKcjS0_j+0x450>
    315b:	6d                   	ins    DWORD PTR es:[rdi],dx
    315c:	61                   	(bad)
    315d:	69 6e 64 65 72 65 65 	imul   ebp,DWORD PTR [rsi+0x64],0x65657265
    3164:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    3167:	65 72 61             	gs jb  31cb <_Z7testAllPKcjS0_j+0x45b>
    316a:	74 6f                	je     31db <_Z7testAllPKcjS0_j+0x46b>
    316c:	72 2d                	jb     319b <_Z7testAllPKcjS0_j+0x42b>
    316e:	2d 00 69 6e 74       	sub    eax,0x746e6900
    3173:	5f                   	pop    rdi
    3174:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3175:	5f                   	pop    rdi
    3176:	73 69                	jae    31e1 <_Z7testAllPKcjS0_j+0x471>
    3178:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    317a:	5f                   	pop    rdi
    317b:	70 6f                	jo     31ec <_Z7testAllPKcjS0_j+0x47c>
    317d:	73 6e                	jae    31ed <_Z7testAllPKcjS0_j+0x47d>
    317f:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    3182:	65 72 61             	gs jb  31e6 <_Z7testAllPKcjS0_j+0x476>
    3185:	74 6f                	je     31f6 <_Z7testAllPKcjS0_j+0x486>
    3187:	72 2d                	jb     31b6 <_Z7testAllPKcjS0_j+0x446>
    3189:	3d 00 5f 66 69       	cmp    eax,0x69665f00
    318e:	6c                   	ins    BYTE PTR es:[rdi],dx
    318f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3191:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3192:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    3195:	6c                   	ins    BYTE PTR es:[rdi],dx
    3196:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3197:	61                   	(bad)
    3198:	74 31                	je     31cb <_Z7testAllPKcjS0_j+0x45b>
    319a:	32 38                	xor    bh,BYTE PTR [rax]
    319c:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    319f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31a0:	74 5f                	je     3201 <_Z7testAllPKcjS0_j+0x491>
    31a2:	66 61                	data16 (bad)
    31a4:	73 74                	jae    321a <_Z7testAllPKcjS0_j+0x4aa>
    31a6:	31 36                	xor    DWORD PTR [rsi],esi
    31a8:	5f                   	pop    rdi
    31a9:	74 00                	je     31ab <_Z7testAllPKcjS0_j+0x43b>
    31ab:	5f                   	pop    rdi
    31ac:	5a                   	pop    rdx
    31ad:	53                   	push   rbx
    31ae:	74 33                	je     31e3 <_Z7testAllPKcjS0_j+0x473>
    31b0:	70 6f                	jo     3221 <_Z7testAllPKcjS0_j+0x4b1>
    31b2:	77 66                	ja     321a <_Z7testAllPKcjS0_j+0x4aa>
    31b4:	66 00 6d 62          	data16 add BYTE PTR [rbp+0x62],ch
    31b8:	73 72                	jae    322c <_Z7testAllPKcjS0_j+0x4bc>
    31ba:	74 6f                	je     322b <_Z7testAllPKcjS0_j+0x4bb>
    31bc:	77 63                	ja     3221 <_Z7testAllPKcjS0_j+0x4b1>
    31be:	73 00                	jae    31c0 <_Z7testAllPKcjS0_j+0x450>
    31c0:	69 73 6c 65 73 73 00 	imul   esi,DWORD PTR [rbx+0x6c],0x737365
    31c7:	5f                   	pop    rdi
    31c8:	5f                   	pop    rdi
    31c9:	64 75 72             	fs jne 323e <_Z7testAllPKcjS0_j+0x4ce>
    31cc:	61                   	(bad)
    31cd:	74 69                	je     3238 <_Z7testAllPKcjS0_j+0x4c8>
    31cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31d1:	5f                   	pop    rdi
    31d2:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    31d5:	74 5f                	je     3236 <_Z7testAllPKcjS0_j+0x4c6>
    31d7:	69 6d 70 6c 3c 73 74 	imul   ebp,DWORD PTR [rbp+0x70],0x74733c6c
    31de:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    31e1:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    31e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31e7:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    31e9:	64 75 72             	fs jne 325e <_Z7testAllPKcjS0_j+0x4ee>
    31ec:	61                   	(bad)
    31ed:	74 69                	je     3258 <_Z7testAllPKcjS0_j+0x4e8>
    31ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31f1:	3c 6c                	cmp    al,0x6c
    31f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31f5:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    31f9:	74 2c                	je     3227 <_Z7testAllPKcjS0_j+0x4b7>
    31fb:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    31fe:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3201:	72 61                	jb     3264 <_Z7testAllPKcjS0_j+0x4f4>
    3203:	74 69                	je     326e <_Z7testAllPKcjS0_j+0x4fe>
    3205:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3206:	3c 31                	cmp    al,0x31
    3208:	2c 20                	sub    al,0x20
    320a:	31 30                	xor    DWORD PTR [rax],esi
    320c:	30 30                	xor    BYTE PTR [rax],dh
    320e:	30 30                	xor    BYTE PTR [rax],dh
    3210:	30 3e                	xor    BYTE PTR [rsi],bh
    3212:	20 3e                	and    BYTE PTR [rsi],bh
    3214:	2c 20                	sub    al,0x20
    3216:	73 74                	jae    328c <_Z7testAllPKcjS0_j+0x51c>
    3218:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    321b:	72 61                	jb     327e <_Z7testAllPKcjS0_j+0x50e>
    321d:	74 69                	je     3288 <_Z7testAllPKcjS0_j+0x518>
    321f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3220:	3c 31                	cmp    al,0x31
    3222:	2c 20                	sub    al,0x20
    3224:	31 30                	xor    DWORD PTR [rax],esi
    3226:	30 30                	xor    BYTE PTR [rax],dh
    3228:	3e 2c 20             	ds sub al,0x20
    322b:	6c                   	ins    BYTE PTR es:[rdi],dx
    322c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    322d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    322e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3232:	74 2c                	je     3260 <_Z7testAllPKcjS0_j+0x4f0>
    3234:	20 74 72 75          	and    BYTE PTR [rdx+rsi*2+0x75],dh
    3238:	65 2c 20             	gs sub al,0x20
    323b:	66 61                	data16 (bad)
    323d:	6c                   	ins    BYTE PTR es:[rdi],dx
    323e:	73 65                	jae    32a5 <_Z7testAllPKcjS0_j+0x535>
    3240:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    3244:	53                   	push   rbx
    3245:	74 33                	je     327a <_Z7testAllPKcjS0_j+0x50a>
    3247:	74 61                	je     32aa <_Z7testAllPKcjS0_j+0x53a>
    3249:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    324a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    324e:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    3255:	73 74                	jae    32cb <_Z7testAllPKcjS0_j+0x55b>
    3257:	33 32                	xor    esi,DWORD PTR [rdx]
    3259:	5f                   	pop    rdi
    325a:	74 00                	je     325c <_Z7testAllPKcjS0_j+0x4ec>
    325c:	5f                   	pop    rdi
    325d:	5a                   	pop    rdx
    325e:	53                   	push   rbx
    325f:	74 35                	je     3296 <_Z7testAllPKcjS0_j+0x526>
    3261:	6c                   	ins    BYTE PTR es:[rdi],dx
    3262:	64 65 78 70          	fs gs js 32d6 <_Z7testAllPKcjS0_j+0x566>
    3266:	65 69 00 63 65 69 6c 	imul   eax,DWORD PTR gs:[rax],0x6c696563
    326d:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    3270:	6c                   	ins    BYTE PTR es:[rdi],dx
    3271:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3272:	61                   	(bad)
    3273:	74 36                	je     32ab <_Z7testAllPKcjS0_j+0x53b>
    3275:	34 00                	xor    al,0x0
    3277:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    327a:	72 31                	jb     32ad <_Z7testAllPKcjS0_j+0x53d>
    327c:	36 5f                	ss pop rdi
    327e:	74 00                	je     3280 <_Z7testAllPKcjS0_j+0x510>
    3280:	66 70 75             	data16 jo 32f8 <_Z7testAllPKcjS0_j+0x588>
    3283:	74 77                	je     32fc <_Z7testAllPKcjS0_j+0x58c>
    3285:	63 00                	movsxd eax,DWORD PTR [rax]
    3287:	74 6d                	je     32f6 <_Z7testAllPKcjS0_j+0x586>
    3289:	5f                   	pop    rdi
    328a:	79 65                	jns    32f1 <_Z7testAllPKcjS0_j+0x581>
    328c:	61                   	(bad)
    328d:	72 00                	jb     328f <_Z7testAllPKcjS0_j+0x51f>
    328f:	5f                   	pop    rdi
    3290:	5a                   	pop    rdx
    3291:	53                   	push   rbx
    3292:	74 39                	je     32cd <_Z7testAllPKcjS0_j+0x55d>
    3294:	72 65                	jb     32fb <_Z7testAllPKcjS0_j+0x58b>
    3296:	6d                   	ins    DWORD PTR es:[rdi],dx
    3297:	61                   	(bad)
    3298:	69 6e 64 65 72 66 66 	imul   ebp,DWORD PTR [rsi+0x64],0x66667265
    329f:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
    32a2:	61                   	(bad)
    32a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32a4:	32 00                	xor    al,BYTE PTR [rax]
    32a6:	5f                   	pop    rdi
    32a7:	5f                   	pop    rdi
    32a8:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    32af:	73 74                	jae    3325 <_Z7testAllPKcjS0_j+0x5b5>
    32b1:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    32b4:	00 67 6d             	add    BYTE PTR [rdi+0x6d],ah
    32b7:	74 69                	je     3322 <_Z7testAllPKcjS0_j+0x5b2>
    32b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    32ba:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    32be:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    32c5:	77 63                	ja     332a <_Z7testAllPKcjS0_j+0x5ba>
    32c7:	73 74                	jae    333d <_Z7testAllPKcjS0_j+0x5cd>
    32c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32ca:	75 6c                	jne    3338 <_Z7testAllPKcjS0_j+0x5c8>
    32cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    32cd:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    32d0:	65 61                	gs (bad)
    32d2:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    32d6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32d7:	70 73                	jo     334c <_Z7testAllPKcjS0_j+0x5dc>
    32d9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    32dc:	64 65 74 61          	fs gs je 3341 <_Z7testAllPKcjS0_j+0x5d1>
    32e0:	69 6c 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x775f4f49
    32e7:	77 
    32e8:	72 69                	jb     3353 <_Z7testAllPKcjS0_j+0x5e3>
    32ea:	74 65                	je     3351 <_Z7testAllPKcjS0_j+0x5e1>
    32ec:	5f                   	pop    rdi
    32ed:	70 74                	jo     3363 <_Z7testAllPKcjS0_j+0x5f3>
    32ef:	72 00                	jb     32f1 <_Z7testAllPKcjS0_j+0x581>
    32f1:	5f                   	pop    rdi
    32f2:	52                   	push   rdx
    32f3:	65 70 00             	gs jo  32f6 <_Z7testAllPKcjS0_j+0x586>
    32f6:	5f                   	pop    rdi
    32f7:	5a                   	pop    rdx
    32f8:	4e 53                	rex.WRX push rbx
    32fa:	74 36                	je     3332 <_Z7testAllPKcjS0_j+0x5c2>
    32fc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    32ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3300:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3301:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3302:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3306:	61                   	(bad)
    3307:	74 69                	je     3372 <_Z7testAllPKcjS0_j+0x602>
    3309:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    330a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    330b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    330d:	53                   	push   rbx
    330e:	74 35                	je     3345 <_Z7testAllPKcjS0_j+0x5d5>
    3310:	72 61                	jb     3373 <_Z7testAllPKcjS0_j+0x603>
    3312:	74 69                	je     337d <_Z7testAllPKcjS0_j+0x60d>
    3314:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3315:	49                   	rex.WB
    3316:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3318:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    331b:	6c                   	ins    BYTE PTR es:[rdi],dx
    331c:	31 30                	xor    DWORD PTR [rax],esi
    331e:	30 30                	xor    BYTE PTR [rax],dh
    3320:	30 30                	xor    BYTE PTR [rax],dh
    3322:	30 30                	xor    BYTE PTR [rax],dh
    3324:	30 30                	xor    BYTE PTR [rax],dh
    3326:	45                   	rex.RB
    3327:	45                   	rex.RB
    3328:	45 61                	rex.RB (bad)
    332a:	53                   	push   rbx
    332b:	45 52                	rex.RB push r10
    332d:	4b 53                	rex.WXB push r11
    332f:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    3332:	5f                   	pop    rdi
    3333:	5a                   	pop    rdx
    3334:	4e 53                	rex.WRX push rbx
    3336:	74 36                	je     336e <_Z7testAllPKcjS0_j+0x5fe>
    3338:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    333b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    333c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    333d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    333e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3342:	61                   	(bad)
    3343:	74 69                	je     33ae <_Z7testAllPKcjS0_j+0x63e>
    3345:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3346:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3347:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3349:	53                   	push   rbx
    334a:	74 35                	je     3381 <_Z7testAllPKcjS0_j+0x611>
    334c:	72 61                	jb     33af <_Z7testAllPKcjS0_j+0x63f>
    334e:	74 69                	je     33b9 <_Z7testAllPKcjS0_j+0x649>
    3350:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3351:	49                   	rex.WB
    3352:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3354:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3357:	6c                   	ins    BYTE PTR es:[rdi],dx
    3358:	31 30                	xor    DWORD PTR [rax],esi
    335a:	30 30                	xor    BYTE PTR [rax],dh
    335c:	30 30                	xor    BYTE PTR [rax],dh
    335e:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    3361:	45                   	rex.RB
    3362:	43 34 45             	rex.XB xor al,0x45
    3365:	52                   	push   rdx
    3366:	4b 53                	rex.WXB push r11
    3368:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    336b:	5f                   	pop    rdi
    336c:	5a                   	pop    rdx
    336d:	53                   	push   rbx
    336e:	74 36                	je     33a6 <_Z7testAllPKcjS0_j+0x636>
    3370:	6c                   	ins    BYTE PTR es:[rdi],dx
    3371:	72 6f                	jb     33e2 <_Z7testAllPKcjS0_j+0x672>
    3373:	75 6e                	jne    33e3 <_Z7testAllPKcjS0_j+0x673>
    3375:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    337a:	53                   	push   rbx
    337b:	74 36                	je     33b3 <_Z7testAllPKcjS0_j+0x643>
    337d:	6c                   	ins    BYTE PTR es:[rdi],dx
    337e:	6c                   	ins    BYTE PTR es:[rdi],dx
    337f:	72 69                	jb     33ea <_Z7testAllPKcjS0_j+0x67a>
    3381:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3382:	74 66                	je     33ea <_Z7testAllPKcjS0_j+0x67a>
    3384:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3387:	4e 53                	rex.WRX push rbx
    3389:	74 36                	je     33c1 <_Z7testAllPKcjS0_j+0x651>
    338b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    338e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    338f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3390:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3391:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    3394:	32 31                	xor    dh,BYTE PTR [rcx]
    3396:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    3399:	65 61                	gs (bad)
    339b:	64 79 5f             	fs jns 33fd <_Z7testAllPKcjS0_j+0x68d>
    339e:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    33a2:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
    33a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33a6:	77 45                	ja     33ed <_Z7testAllPKcjS0_j+0x67d>
    33a8:	76 00                	jbe    33aa <_Z7testAllPKcjS0_j+0x63a>
    33aa:	5f                   	pop    rdi
    33ab:	5f                   	pop    rdi
    33ac:	69 6e 74 33 32 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3233
    33b3:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
    33b6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    33b8:	62 69 74 00 5f 5a 4e 	vmaxps xmm27,xmm17,XMMWORD PTR [r18+0x4e0]
    33bf:	53                   	push   rbx
    33c0:	74 36                	je     33f8 <_Z7testAllPKcjS0_j+0x688>
    33c2:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    33c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33c8:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    33cc:	61                   	(bad)
    33cd:	74 69                	je     3438 <_Z7testAllPKcjS0_j+0x6c8>
    33cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33d1:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    33d3:	53                   	push   rbx
    33d4:	74 35                	je     340b <_Z7testAllPKcjS0_j+0x69b>
    33d6:	72 61                	jb     3439 <_Z7testAllPKcjS0_j+0x6c9>
    33d8:	74 69                	je     3443 <_Z7testAllPKcjS0_j+0x6d3>
    33da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33db:	49                   	rex.WB
    33dc:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    33de:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    33e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    33e2:	31 30                	xor    DWORD PTR [rax],esi
    33e4:	30 30                	xor    BYTE PTR [rax],dh
    33e6:	30 30                	xor    BYTE PTR [rax],dh
    33e8:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    33eb:	45                   	rex.RB
    33ec:	44 34 45             	rex.R xor al,0x45
    33ef:	76 00                	jbe    33f1 <_Z7testAllPKcjS0_j+0x681>
    33f1:	5f                   	pop    rdi
    33f2:	5a                   	pop    rdx
    33f3:	53                   	push   rbx
    33f4:	74 34                	je     342a <_Z7testAllPKcjS0_j+0x6ba>
    33f6:	66 61                	data16 (bad)
    33f8:	62 73 65 00 5f       	(bad)
    33fd:	5a                   	pop    rdx
    33fe:	53                   	push   rbx
    33ff:	74 35                	je     3436 <_Z7testAllPKcjS0_j+0x6c6>
    3401:	68 79 70 6f 74       	push   0x746f7079
    3406:	64 64 64 00 65 78    	fs fs add BYTE PTR fs:[rbp+0x78],ah
    340c:	70 32                	jo     3440 <_Z7testAllPKcjS0_j+0x6d0>
    340e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3411:	4e 53                	rex.WRX push rbx
    3413:	74 36                	je     344b <_Z7testAllPKcjS0_j+0x6db>
    3415:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3418:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3419:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    341a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    341b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    341f:	61                   	(bad)
    3420:	74 69                	je     348b <_Z7testAllPKcjS0_j+0x71b>
    3422:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3423:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3424:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3426:	53                   	push   rbx
    3427:	74 35                	je     345e <_Z7testAllPKcjS0_j+0x6ee>
    3429:	72 61                	jb     348c <_Z7testAllPKcjS0_j+0x71c>
    342b:	74 69                	je     3496 <_Z7testAllPKcjS0_j+0x726>
    342d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    342e:	49                   	rex.WB
    342f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3431:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3434:	6c                   	ins    BYTE PTR es:[rdi],dx
    3435:	31 30                	xor    DWORD PTR [rax],esi
    3437:	30 30                	xor    BYTE PTR [rax],dh
    3439:	30 30                	xor    BYTE PTR [rax],dh
    343b:	30 30                	xor    BYTE PTR [rax],dh
    343d:	30 30                	xor    BYTE PTR [rax],dh
    343f:	45                   	rex.RB
    3440:	45                   	rex.RB
    3441:	45                   	rex.RB
    3442:	64 56                	fs push rsi
    3444:	45 52                	rex.RB push r10
    3446:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    3448:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    344b:	65 72 61             	gs jb  34af <_Z7testAllPKcjS0_j+0x73f>
    344e:	74 6f                	je     34bf <_Z7testAllPKcjS0_j+0x74f>
    3450:	72 2f                	jb     3481 <_Z7testAllPKcjS0_j+0x711>
    3452:	3d 00 5f 5a 53       	cmp    eax,0x535a5f00
    3457:	74 36                	je     348f <_Z7testAllPKcjS0_j+0x71f>
    3459:	72 65                	jb     34c0 <_Z7testAllPKcjS0_j+0x750>
    345b:	6d                   	ins    DWORD PTR es:[rdi],dx
    345c:	71 75                	jno    34d3 <_Z7testAllPKcjS0_j+0x763>
    345e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    345f:	66 66 50             	data16 push ax
    3462:	69 00 61 64 6c 65    	imul   eax,DWORD PTR [rax],0x656c6461
    3468:	72 33                	jb     349d <_Z7testAllPKcjS0_j+0x72d>
    346a:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    346d:	69 6c 65 73 00 66 66 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x6c666600
    3474:	6c 
    3475:	75 73                	jne    34ea <_Z7testAllPKcjS0_j+0x77a>
    3477:	68 00 6c 6c 72       	push   0x726c6c00
    347c:	69 6e 74 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x74],0x4e5a5f00
    3483:	53                   	push   rbx
    3484:	74 36                	je     34bc <_Z7testAllPKcjS0_j+0x74c>
    3486:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3489:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    348a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    348b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    348c:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3490:	61                   	(bad)
    3491:	74 69                	je     34fc <_Z7testAllPKcjS0_j+0x78c>
    3493:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3494:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3495:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3497:	53                   	push   rbx
    3498:	74 35                	je     34cf <_Z7testAllPKcjS0_j+0x75f>
    349a:	72 61                	jb     34fd <_Z7testAllPKcjS0_j+0x78d>
    349c:	74 69                	je     3507 <_Z7testAllPKcjS0_j+0x797>
    349e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    349f:	49                   	rex.WB
    34a0:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    34a2:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    34a5:	6c                   	ins    BYTE PTR es:[rdi],dx
    34a6:	31 30                	xor    DWORD PTR [rax],esi
    34a8:	30 30                	xor    BYTE PTR [rax],dh
    34aa:	30 30                	xor    BYTE PTR [rax],dh
    34ac:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    34af:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    34b1:	49                   	rex.WB
    34b2:	45 52                	rex.RB push r10
    34b4:	4b 53                	rex.WXB push r11
    34b6:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    34b9:	5f                   	pop    rdi
    34ba:	5a                   	pop    rdx
    34bb:	53                   	push   rbx
    34bc:	74 34                	je     34f2 <_Z7testAllPKcjS0_j+0x782>
    34be:	66 6d                	ins    WORD PTR es:[rdi],dx
    34c0:	69 6e 65 65 00 74 79 	imul   ebp,DWORD PTR [rsi+0x65],0x79740065
    34c7:	70 65                	jo     352e <_Z7testAllPKcjS0_j+0x7be>
    34c9:	64 65 66 20 5f 5f    	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
    34cf:	76 61                	jbe    3532 <_Z7testAllPKcjS0_j+0x7c2>
    34d1:	5f                   	pop    rdi
    34d2:	6c                   	ins    BYTE PTR es:[rdi],dx
    34d3:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    34da:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    34dd:	76 61                	jbe    3540 <_Z21standartDeviationTimePdjd>
    34df:	5f                   	pop    rdi
    34e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    34e1:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    34e8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    34eb:	53                   	push   rbx
    34ec:	74 34                	je     3522 <_Z7testAllPKcjS0_j+0x7b2>
    34ee:	66 6d                	ins    WORD PTR es:[rdi],dx
    34f0:	61                   	(bad)
    34f1:	78 66                	js     3559 <_Z21standartDeviationTimePdjd+0x19>
    34f3:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    34f7:	32 31                	xor    dh,BYTE PTR [rcx]
    34f9:	73 74                	jae    356f <_Z21standartDeviationTimePdjd+0x2f>
    34fb:	61                   	(bad)
    34fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34fd:	64 61                	fs (bad)
    34ff:	72 74                	jb     3575 <_Z21standartDeviationTimePdjd+0x35>
    3501:	44                   	rex.R
    3502:	65 76 69             	gs jbe 356e <_Z21standartDeviationTimePdjd+0x2e>
    3505:	61                   	(bad)
    3506:	74 69                	je     3571 <_Z21standartDeviationTimePdjd+0x31>
    3508:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3509:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    350a:	54                   	push   rsp
    350b:	69 6d 65 50 64 6a 64 	imul   ebp,DWORD PTR [rbp+0x65],0x646a6450
    3512:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
    3515:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3516:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3517:	72 6d                	jb     3586 <_Z21standartDeviationTimePdjd+0x46>
    3519:	61                   	(bad)
    351a:	6c                   	ins    BYTE PTR es:[rdi],dx
    351b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    351e:	4e 53                	rex.WRX push rbx
    3520:	74 36                	je     3558 <_Z21standartDeviationTimePdjd+0x18>
    3522:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3525:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3526:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3527:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3528:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    352c:	61                   	(bad)
    352d:	74 69                	je     3598 <_Z21standartDeviationTimePdjd+0x58>
    352f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3530:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3531:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3533:	53                   	push   rbx
    3534:	74 35                	je     356b <_Z21standartDeviationTimePdjd+0x2b>
    3536:	72 61                	jb     3599 <_Z21standartDeviationTimePdjd+0x59>
    3538:	74 69                	je     35a3 <_Z21standartDeviationTimePdjd+0x63>
    353a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    353b:	49                   	rex.WB
    353c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    353e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3541:	6c                   	ins    BYTE PTR es:[rdi],dx
    3542:	31 30                	xor    DWORD PTR [rax],esi
    3544:	30 30                	xor    BYTE PTR [rax],dh
    3546:	30 30                	xor    BYTE PTR [rax],dh
    3548:	30 30                	xor    BYTE PTR [rax],dh
    354a:	30 30                	xor    BYTE PTR [rax],dh
    354c:	45                   	rex.RB
    354d:	45                   	rex.RB
    354e:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    3550:	6d                   	ins    DWORD PTR es:[rdi],dx
    3551:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    3558:	35 61 63 6f 73       	xor    eax,0x736f6361
    355d:	68 65 00 5f 5a       	push   0x5a5f0065
    3562:	53                   	push   rbx
    3563:	74 35                	je     359a <_Z21standartDeviationTimePdjd+0x5a>
    3565:	61                   	(bad)
    3566:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    3569:	68                   	.byte 0x68
    356a:	66                   	data16
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	72 6f                	jb     72 <__abi_tag-0x30a>
   3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   4:	74 2f                	je     35 <__abi_tag-0x347>
   6:	68 61 73 68 4d       	push   0x4d687361
   b:	61                   	(bad)
   c:	70 2f                	jo     3d <__abi_tag-0x33f>
   e:	62 75 69 6c 64       	(bad)
  13:	00 2f                	add    BYTE PTR [rdi],ch
  15:	72 6f                	jb     86 <__abi_tag-0x2f6>
  17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  18:	74 2f                	je     49 <__abi_tag-0x333>
  1a:	68 61 73 68 4d       	push   0x4d687361
  1f:	61                   	(bad)
  20:	70 2f                	jo     51 <__abi_tag-0x32b>
  22:	73 72                	jae    96 <__abi_tag-0x2e6>
  24:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  26:	6d                   	ins    DWORD PTR es:[rdi],dx
  27:	61                   	(bad)
  28:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
  2f:	2f                   	(bad)
  30:	72 6f                	jb     a1 <__abi_tag-0x2db>
  32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  33:	74 2f                	je     64 <__abi_tag-0x318>
  35:	68 61 73 68 4d       	push   0x4d687361
  3a:	61                   	(bad)
  3b:	70 2f                	jo     6c <__abi_tag-0x310>
  3d:	73 72                	jae    b1 <__abi_tag-0x2cb>
  3f:	63 00                	movsxd eax,DWORD PTR [rax]
  41:	2f                   	(bad)
  42:	75 73                	jne    b7 <__abi_tag-0x2c5>
  44:	72 2f                	jb     75 <__abi_tag-0x307>
  46:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4d:	00 2f                	add    BYTE PTR [rdi],ch
  4f:	75 73                	jne    c4 <__abi_tag-0x2b8>
  51:	72 2f                	jb     82 <__abi_tag-0x2fa>
  53:	6c                   	ins    BYTE PTR es:[rdi],dx
  54:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  5b:	78 38                	js     95 <__abi_tag-0x2e7>
  5d:	36 5f                	ss pop rdi
  5f:	36 34 2d             	ss xor al,0x2d
  62:	6c                   	ins    BYTE PTR es:[rdi],dx
  63:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  6a:	75 2f                	jne    9b <__abi_tag-0x2e1>
  6c:	31 33                	xor    DWORD PTR [rbx],esi
  6e:	2f                   	(bad)
  6f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  76:	00 2f                	add    BYTE PTR [rdi],ch
  78:	75 73                	jne    ed <__abi_tag-0x28f>
  7a:	72 2f                	jb     ab <__abi_tag-0x2d1>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	2f                   	(bad)
  84:	78 38                	js     be <__abi_tag-0x2be>
  86:	36 5f                	ss pop rdi
  88:	36 34 2d             	ss xor al,0x2d
  8b:	6c                   	ins    BYTE PTR es:[rdi],dx
  8c:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  93:	75 2f                	jne    c4 <__abi_tag-0x2b8>
  95:	62 69 74 73 00       	(bad)
  9a:	2f                   	(bad)
  9b:	75 73                	jne    110 <__abi_tag-0x26c>
  9d:	72 2f                	jb     ce <__abi_tag-0x2ae>
  9f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a6:	2f                   	(bad)
  a7:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  a9:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ab:	31 33                	xor    DWORD PTR [rbx],esi
  ad:	00 2f                	add    BYTE PTR [rdi],ch
  af:	75 73                	jne    124 <__abi_tag-0x258>
  b1:	72 2f                	jb     e2 <__abi_tag-0x29a>
  b3:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  ba:	2f                   	(bad)
  bb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  bd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  bf:	31 33                	xor    DWORD PTR [rbx],esi
  c1:	2f                   	(bad)
  c2:	62 69 74 73 00       	(bad)
  c7:	2f                   	(bad)
  c8:	72 6f                	jb     139 <__abi_tag-0x243>
  ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  cb:	74 2f                	je     fc <__abi_tag-0x280>
  cd:	68 61 73 68 4d       	push   0x4d687361
  d2:	61                   	(bad)
  d3:	70 2f                	jo     104 <__abi_tag-0x278>
  d5:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  dc:	00 2f                	add    BYTE PTR [rdi],ch
  de:	75 73                	jne    153 <__abi_tag-0x229>
  e0:	72 2f                	jb     111 <__abi_tag-0x26b>
  e2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e9:	2f                   	(bad)
  ea:	78 38                	js     124 <__abi_tag-0x258>
  ec:	36 5f                	ss pop rdi
  ee:	36 34 2d             	ss xor al,0x2d
  f1:	6c                   	ins    BYTE PTR es:[rdi],dx
  f2:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  f9:	75 2f                	jne    12a <__abi_tag-0x252>
  fb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  fd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ff:	31 33                	xor    DWORD PTR [rbx],esi
 101:	2f                   	(bad)
 102:	62 69 74 73 00       	(bad)
 107:	73 74                	jae    17d <__abi_tag-0x1ff>
 109:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 10b:	69 62 2e 68 00 73 74 	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
 112:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x7400
 119:	74 
 11a:	79 70                	jns    18c <__abi_tag-0x1f0>
 11c:	65 73 2e             	gs jae 14d <__abi_tag-0x22f>
 11f:	68 00 63 73 74       	push   0x74736300
 124:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 126:	69 62 00 73 74 64 5f 	imul   esp,DWORD PTR [rdx+0x0],0x5f647473
 12d:	61                   	(bad)
 12e:	62 73 2e 68 00       	(bad)
 133:	73 74                	jae    1a9 <__abi_tag-0x1d3>
 135:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 137:	69 62 2d 66 6c 6f 61 	imul   esp,DWORD PTR [rdx+0x2d],0x616f6c66
 13e:	74 2e                	je     16e <__abi_tag-0x20e>
 140:	68 00 73 74 64       	push   0x64747300
 145:	6c                   	ins    BYTE PTR es:[rdi],dx
 146:	69 62 2d 62 73 65 61 	imul   esp,DWORD PTR [rdx+0x2d],0x61657362
 14d:	72 63                	jb     1b2 <__abi_tag-0x1ca>
 14f:	68 2e 68 00 73       	push   0x7300682e
 154:	74 64                	je     1ba <__abi_tag-0x1c2>
 156:	69 6e 74 2d 75 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e69752d
 15d:	74 6e                	je     1cd <__abi_tag-0x1af>
 15f:	2e 68 00 68 61 73    	cs push 0x73616800
 165:	68 5f 6d 61 70       	push   0x70616d5f
 16a:	2e 68 00 74 65 73    	cs push 0x73657400
 170:	74 73                	je     1e5 <__abi_tag-0x197>
 172:	2e 68 00 63 2b 2b    	cs push 0x2b2b6300
 178:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 17b:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 181:	2f                   	(bad)
 182:	72 6f                	jb     1f3 <__abi_tag-0x189>
 184:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 185:	74 2f                	je     1b6 <__abi_tag-0x1c6>
 187:	68 61 73 68 4d       	push   0x4d687361
 18c:	61                   	(bad)
 18d:	70 2f                	jo     1be <__abi_tag-0x1be>
 18f:	73 72                	jae    203 <__abi_tag-0x179>
 191:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 193:	68 61 73 68 5f       	push   0x5f687361
 198:	6d                   	ins    DWORD PTR es:[rdi],dx
 199:	61                   	(bad)
 19a:	70 2e                	jo     1ca <__abi_tag-0x1b2>
 19c:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 19f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 1a2:	72 69                	jb     20d <__abi_tag-0x16f>
 1a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1a5:	67 2e 68 00 73 74 72 	addr32 cs push 0x72747300
 1ac:	69 6e 67 5f 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f665f
 1b3:	74 69                	je     21e <__abi_tag-0x15e>
 1b5:	66 69 65 64 2e 68    	imul   sp,WORD PTR [rbp+0x64],0x682e
 1bb:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 1be:	64 69 6f 32 2e 68 00 	imul   ebp,DWORD PTR fs:[rdi+0x32],0x6100682e
 1c5:	61 
 1c6:	76 78                	jbe    240 <__abi_tag-0x13c>
 1c8:	69 6e 74 72 69 6e 2e 	imul   ebp,DWORD PTR [rsi+0x74],0x2e6e6972
 1cf:	68 00 73 6d 6d       	push   0x6d6d7300
 1d4:	69 6e 74 72 69 6e 2e 	imul   ebp,DWORD PTR [rsi+0x74],0x2e6e6972
 1db:	68 00 65 6d 6d       	push   0x6d6d6500
 1e0:	69 6e 74 72 69 6e 2e 	imul   ebp,DWORD PTR [rsi+0x74],0x2e6e6972
 1e7:	68 00 73 74 64       	push   0x64747300
 1ec:	69 6e 74 2e 68 00 73 	imul   ebp,DWORD PTR [rsi+0x74],0x7300682e
 1f3:	74 72                	je     267 <__abi_tag-0x115>
 1f5:	69 6e 67 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x67],0x682e745f
 1fc:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
 200:	74 2e                	je     230 <__abi_tag-0x14c>
 202:	68 00 73 74 64       	push   0x64747300
 207:	69 6f 32 2d 64 65 63 	imul   ebp,DWORD PTR [rdi+0x32],0x6365642d
 20e:	6c                   	ins    BYTE PTR es:[rdi],dx
 20f:	2e 68 00 61 73 73    	cs push 0x73736100
 215:	65 72 74             	gs jb  28c <__abi_tag-0xf0>
 218:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 21e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 21f:	74 2f                	je     250 <__abi_tag-0x12c>
 221:	68 61 73 68 4d       	push   0x4d687361
 226:	61                   	(bad)
 227:	70 2f                	jo     258 <__abi_tag-0x124>
 229:	73 72                	jae    29d <__abi_tag-0xdf>
 22b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 22d:	68 61 73 68 5f       	push   0x5f687361
 232:	66 75 6e             	data16 jne 2a3 <__abi_tag-0xd9>
 235:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 238:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 23b:	00 2f                	add    BYTE PTR [rdi],ch
 23d:	72 6f                	jb     2ae <__abi_tag-0xce>
 23f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 240:	74 2f                	je     271 <__abi_tag-0x10b>
 242:	68 61 73 68 4d       	push   0x4d687361
 247:	61                   	(bad)
 248:	70 2f                	jo     279 <__abi_tag-0x103>
 24a:	73 72                	jae    2be <__abi_tag-0xbe>
 24c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 24e:	6c                   	ins    BYTE PTR es:[rdi],dx
 24f:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
 256:	00 2f                	add    BYTE PTR [rdi],ch
 258:	72 6f                	jb     2c9 <__abi_tag-0xb3>
 25a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 25b:	74 2f                	je     28c <__abi_tag-0xf0>
 25d:	68 61 73 68 4d       	push   0x4d687361
 262:	61                   	(bad)
 263:	70 2f                	jo     294 <__abi_tag-0xe8>
 265:	73 72                	jae    2d9 <__abi_tag-0xa3>
 267:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 269:	75 74                	jne    2df <__abi_tag-0x9d>
 26b:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
 272:	00 
 273:	2f                   	(bad)
 274:	75 73                	jne    2e9 <__abi_tag-0x93>
 276:	72 2f                	jb     2a7 <__abi_tag-0xd5>
 278:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 27f:	2f                   	(bad)
 280:	78 38                	js     2ba <__abi_tag-0xc2>
 282:	36 5f                	ss pop rdi
 284:	36 34 2d             	ss xor al,0x2d
 287:	6c                   	ins    BYTE PTR es:[rdi],dx
 288:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 28f:	75 2f                	jne    2c0 <__abi_tag-0xbc>
 291:	73 79                	jae    30c <__abi_tag-0x70>
 293:	73 00                	jae    295 <__abi_tag-0xe7>
 295:	2f                   	(bad)
 296:	75 73                	jne    30b <__abi_tag-0x71>
 298:	72 2f                	jb     2c9 <__abi_tag-0xb3>
 29a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 2a1:	2f                   	(bad)
 2a2:	78 38                	js     2dc <__abi_tag-0xa0>
 2a4:	36 5f                	ss pop rdi
 2a6:	36 34 2d             	ss xor al,0x2d
 2a9:	6c                   	ins    BYTE PTR es:[rdi],dx
 2aa:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 2b1:	75 2f                	jne    2e2 <__abi_tag-0x9a>
 2b3:	62 69 74 73 2f       	(bad)
 2b8:	74 79                	je     333 <__abi_tag-0x49>
 2ba:	70 65                	jo     321 <__abi_tag-0x5b>
 2bc:	73 00                	jae    2be <__abi_tag-0xbe>
 2be:	66 63 6e 74          	movsxd bp,DWORD PTR [rsi+0x74]
 2c2:	6c                   	ins    BYTE PTR es:[rdi],dx
 2c3:	32 2e                	xor    ch,BYTE PTR [rsi]
 2c5:	68 00 75 6e 69       	push   0x696e7500
 2ca:	73 74                	jae    340 <__abi_tag-0x3c>
 2cc:	64 2e 68 00 73 74 72 	fs cs push 0x72747300
 2d3:	75 63                	jne    338 <__abi_tag-0x44>
 2d5:	74 5f                	je     336 <__abi_tag-0x46>
 2d7:	74 69                	je     342 <__abi_tag-0x3a>
 2d9:	6d                   	ins    DWORD PTR es:[rdi],dx
 2da:	65 73 70             	gs jae 34d <__abi_tag-0x2f>
 2dd:	65 63 2e             	movsxd ebp,DWORD PTR gs:[rsi]
 2e0:	68 00 73 74 72       	push   0x72747300
 2e5:	75 63                	jne    34a <__abi_tag-0x32>
 2e7:	74 5f                	je     348 <__abi_tag-0x34>
 2e9:	73 74                	jae    35f <__abi_tag-0x1d>
 2eb:	61                   	(bad)
 2ec:	74 2e                	je     31c <__abi_tag-0x60>
 2ee:	68 00 75 6e 69       	push   0x696e7500
 2f3:	73 74                	jae    369 <__abi_tag-0x13>
 2f5:	64 2d 64 65 63 6c    	fs sub eax,0x6c636564
 2fb:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 301:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 302:	74 2f                	je     333 <__abi_tag-0x49>
 304:	68 61 73 68 4d       	push   0x4d687361
 309:	61                   	(bad)
 30a:	70 2f                	jo     33b <__abi_tag-0x41>
 30c:	73 72                	jae    380 <__abi_tag+0x4>
 30e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 310:	74 65                	je     377 <__abi_tag-0x5>
 312:	73 74                	jae    388 <__abi_tag+0xc>
 314:	73 2e                	jae    344 <__abi_tag-0x38>
 316:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 319:	00 2f                	add    BYTE PTR [rdi],ch
 31b:	75 73                	jne    390 <__abi_tag+0x14>
 31d:	72 2f                	jb     34e <__abi_tag-0x2e>
 31f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 326:	2f                   	(bad)
 327:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 329:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 32b:	31 33                	xor    DWORD PTR [rbx],esi
 32d:	2f                   	(bad)
 32e:	64 65 62 75 67 00 2f 	(bad)
 335:	75 73                	jne    3aa <__abi_tag+0x2e>
 337:	72 2f                	jb     368 <__abi_tag-0x14>
 339:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 340:	2f                   	(bad)
 341:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 343:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 345:	31 33                	xor    DWORD PTR [rbx],esi
 347:	2f                   	(bad)
 348:	70 73                	jo     3bd <__abi_tag+0x41>
 34a:	74 6c                	je     3b8 <__abi_tag+0x3c>
 34c:	00 63 6d             	add    BYTE PTR [rbx+0x6d],ah
 34f:	61                   	(bad)
 350:	74 68                	je     3ba <__abi_tag+0x3e>
 352:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
 355:	72 6f                	jb     3c6 <__abi_tag+0x4a>
 357:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 358:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 359:	2e 68 00 74 79 70    	cs push 0x70797400
 35f:	65 5f                	gs pop rdi
 361:	74 72                	je     3d5 <__abi_tag+0x59>
 363:	61                   	(bad)
 364:	69 74 73 00 64 65 62 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x75626564
 36b:	75 
 36c:	67 2e 68 00 63 77 63 	addr32 cs push 0x63776300
 373:	68 61 72 00 63       	push   0x63007261
 378:	6c                   	ins    BYTE PTR es:[rdi],dx
 379:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 37a:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 37d:	65 00 63 73          	add    BYTE PTR gs:[rbx+0x73],ah
 381:	74 64                	je     3e7 <__abi_tag+0x6b>
 383:	69 6f 00 63 73 74 64 	imul   ebp,DWORD PTR [rdi+0x0],0x64747363
 38a:	64 65 66 00 63 73    	fs data16 add BYTE PTR gs:[rbx+0x73],ah
 390:	74 64                	je     3f6 <__abi_tag+0x7a>
 392:	69 6e 74 00 63 68 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61686300
 399:	72 63                	jb     3fe <__abi_tag+0x82>
 39b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 39c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 39d:	76 2e                	jbe    3cd <__abi_tag+0x51>
 39f:	68 00 63 74 69       	push   0x69746300
 3a4:	6d                   	ins    DWORD PTR es:[rdi],dx
 3a5:	65 00 72 61          	add    BYTE PTR gs:[rdx+0x61],dh
 3a9:	74 69                	je     414 <__abi_tag+0x98>
 3ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3ac:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 3af:	65 64 65 66 69 6e 65 	gs fs imul bp,WORD PTR gs:[rsi+0x65],0x5f64
 3b6:	64 5f 
 3b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3b9:	70 73                	jo     42e <__abi_tag+0xb2>
 3bb:	2e 68 00 6d 61 74    	cs push 0x74616d00
 3c1:	68 2e 68 00 63       	push   0x6300682e
 3c6:	6c                   	ins    BYTE PTR es:[rdi],dx
 3c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3c8:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 3cb:	74 2e                	je     3fb <__abi_tag+0x7f>
 3cd:	68 00 74 69 6d       	push   0x6d697400
 3d2:	65 5f                	gs pop rdi
 3d4:	74 2e                	je     404 <__abi_tag+0x88>
 3d6:	68 00 73 74 64       	push   0x64747300
 3db:	69 6e 74 2d 69 6e 74 	imul   ebp,DWORD PTR [rsi+0x74],0x746e692d
 3e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3e3:	2e 68 00 3c 62 75    	cs push 0x75623c00
 3e9:	69 6c 74 2d 69 6e 3e 	imul   ebp,DWORD PTR [rsp+rsi*2+0x2d],0x3e6e69
 3f0:	00 
 3f1:	5f                   	pop    rdi
 3f2:	5f                   	pop    rdi
 3f3:	6d                   	ins    DWORD PTR es:[rdi],dx
 3f4:	62 73 74 61 74       	(bad)
 3f9:	65 5f                	gs pop rdi
 3fb:	74 2e                	je     42b <__abi_tag+0xaf>
 3fd:	68 00 5f 5f 66       	push   0x665f5f00
 402:	70 6f                	jo     473 <__abi_tag+0xf7>
 404:	73 5f                	jae    465 <__abi_tag+0xe9>
 406:	74 2e                	je     436 <__abi_tag+0xba>
 408:	68 00 5f 5f 46       	push   0x465f5f00
 40d:	49                   	rex.WB
 40e:	4c                   	rex.WR
 40f:	45                   	rex.RB
 410:	2e 68 00 73 74 72    	cs push 0x72747300
 416:	75 63                	jne    47b <__abi_tag+0xff>
 418:	74 5f                	je     479 <__abi_tag+0xfd>
 41a:	46                   	rex.RX
 41b:	49                   	rex.WB
 41c:	4c                   	rex.WR
 41d:	45                   	rex.RB
 41e:	2e 68 00 73 74 64    	cs push 0x64747300
 424:	69 6f 2e 68 00 73 74 	imul   ebp,DWORD PTR [rdi+0x2e],0x74730068
 42b:	64 69 6e 74 2d 6c 65 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x61656c2d
 432:	61 
 433:	73 74                	jae    4a9 <__abi_tag+0x12d>
 435:	2e 68 00 77 69 6e    	cs push 0x6e697700
 43b:	74 5f                	je     49c <__abi_tag+0x120>
 43d:	74 2e                	je     46d <__abi_tag+0xf1>
 43f:	68 00 77 63 68       	push   0x68637700
 444:	61                   	(bad)
 445:	72 2e                	jb     475 <__abi_tag+0xf9>
 447:	68 00 77 63 68       	push   0x68637700
 44c:	61                   	(bad)
 44d:	72 32                	jb     481 <__abi_tag+0x105>
 44f:	2e 68 00 73 74 72    	cs push 0x72747300
 455:	75 63                	jne    4ba <__abi_tag+0x13e>
 457:	74 5f                	je     4b8 <__abi_tag+0x13c>
 459:	74 6d                	je     4c8 <__abi_tag+0x14c>
 45b:	2e 68 00 6c 6f 63    	cs push 0x636f6c00
 461:	61                   	(bad)
 462:	6c                   	ins    BYTE PTR es:[rdi],dx
 463:	65 2e 68 00 65 78 65 	gs cs push 0x65786500
 46a:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
 46d:	69 6f 6e 5f 64 65 66 	imul   ebp,DWORD PTR [rdi+0x6e],0x6665645f
 474:	73 2e                	jae    4a4 <__abi_tag+0x128>
 476:	68 00 74 69 6d       	push   0x6d697400
 47b:	65 2e 68 00 68 61 73 	gs cs push 0x73616800
 482:	68 5f 66 75 6e       	push   0x6e75665f
 487:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 48a:	68 00 75 74 69       	push   0x69747500
 48f:	6c                   	ins    BYTE PTR es:[rdi],dx
 490:	73 2e                	jae    4c0 <__abi_tag+0x144>
 492:	68 00 6d 65 6d       	push   0x6d656d00
 497:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 498:	72 79                	jb     513 <__abi_tag+0x197>
 49a:	5f                   	pop    rdi
 49b:	72 65                	jb     502 <__abi_tag+0x186>
 49d:	73 6f                	jae    50e <__abi_tag+0x192>
 49f:	75 72                	jne    513 <__abi_tag+0x197>
 4a1:	63 65 2e             	movsxd esp,DWORD PTR [rbp+0x2e]
 4a4:	68 00 73 74 72       	push   0x72747300
 4a9:	69 6e 67 5f 76 69 65 	imul   ebp,DWORD PTR [rsi+0x67],0x6569765f
 4b0:	77 00                	ja     4b2 <__abi_tag+0x136>

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
       0:	74 00                	je     2 <__abi_tag-0x37a>
       2:	00 00                	add    BYTE PTR [rax],al
       4:	05 00 08 00 00       	add    eax,0x800
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 00                	add    BYTE PTR [rax],al
       d:	00 00                	add    BYTE PTR [rax],al
       f:	00 06                	add    BYTE PTR [rsi],al
      11:	d0 11                	rcl    BYTE PTR [rcx],1
      13:	00 00                	add    BYTE PTR [rax],al
      15:	00 00                	add    BYTE PTR [rax],al
      17:	00 00                	add    BYTE PTR [rax],al
      19:	04 00                	add    al,0x0
      1b:	09 01                	or     DWORD PTR [rcx],eax
      1d:	55                   	push   rbp
      1e:	04 09                	add    al,0x9
      20:	33 04 a3             	xor    eax,DWORD PTR [rbx+riz*4]
      23:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
      26:	00 00                	add    BYTE PTR [rax],al
      28:	00 00                	add    BYTE PTR [rax],al
      2a:	00 00                	add    BYTE PTR [rax],al
      2c:	00 06                	add    BYTE PTR [rsi],al
      2e:	d0 11                	rcl    BYTE PTR [rcx],1
      30:	00 00                	add    BYTE PTR [rax],al
      32:	00 00                	add    BYTE PTR [rax],al
      34:	00 00                	add    BYTE PTR [rax],al
      36:	04 00                	add    al,0x0
      38:	13 01                	adc    eax,DWORD PTR [rcx]
      3a:	54                   	push   rsp
      3b:	04 13                	add    al,0x13
      3d:	32 01                	xor    al,BYTE PTR [rcx]
      3f:	53                   	push   rbx
      40:	04 32                	add    al,0x32
      42:	33 04 a3             	xor    eax,DWORD PTR [rbx+riz*4]
      45:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
      49:	00 00                	add    BYTE PTR [rax],al
      4b:	08 e8                	or     al,ch
      4d:	11 00                	adc    DWORD PTR [rax],eax
      4f:	00 00                	add    BYTE PTR [rax],al
      51:	00 00                	add    BYTE PTR [rax],al
      53:	00 16                	add    BYTE PTR [rsi],dl
      55:	01 50 00             	add    DWORD PTR [rax+0x0],edx
      58:	02 00                	add    al,BYTE PTR [rax]
      5a:	08 e8                	or     al,ch
      5c:	11 00                	adc    DWORD PTR [rax],eax
      5e:	00 00                	add    BYTE PTR [rax],al
      60:	00 00                	add    BYTE PTR [rax],al
      62:	00 16                	add    BYTE PTR [rsi],dl
      64:	02 73 10             	add    dh,BYTE PTR [rbx+0x10]
      67:	00 01                	add    BYTE PTR [rcx],al
      69:	00 08                	add    BYTE PTR [rax],cl
      6b:	d4                   	(bad)
      6c:	11 00                	adc    DWORD PTR [rax],eax
      6e:	00 00                	add    BYTE PTR [rax],al
      70:	00 00                	add    BYTE PTR [rax],al
      72:	00 01                	add    BYTE PTR [rcx],al
      74:	02 74 08 00          	add    dh,BYTE PTR [rax+rcx*1+0x0]
      78:	0a 08                	or     cl,BYTE PTR [rax]
      7a:	00 00                	add    BYTE PTR [rax],al
      7c:	05 00 08 00 00       	add    eax,0x800
	...
      8d:	00 00                	add    BYTE PTR [rax],al
      8f:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
      92:	0b e8                	or     ebp,eax
      94:	0b 01                	or     eax,DWORD PTR [rcx]
      96:	54                   	push   rsp
      97:	04 e8                	add    al,0xe8
      99:	0b a4 0f 01 5c 04 a4 	or     esp,DWORD PTR [rdi+rcx*1-0x5bfba3ff]
      a0:	0f b0 0f             	cmpxchg BYTE PTR [rdi],cl
      a3:	04 a3                	add    al,0xa3
      a5:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
      a9:	b0 0f                	mov    al,0xf
      ab:	c3                   	ret
      ac:	0f 01 54 04 c3       	lgdt   [rsp+rax*1-0x3d]
      b1:	0f cf                	bswap  edi
      b3:	0f 04                	(bad)
      b5:	a3 01 54 9f 04 cf 0f 	movabs ds:0xfd40fcf049f5401,eax
      bc:	d4 0f 
      be:	01 5c 00 00          	add    DWORD PTR [rax+rax*1+0x0],ebx
	...
      ce:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
      d1:	0b fe                	or     edi,esi
      d3:	0b 01                	or     eax,DWORD PTR [rcx]
      d5:	51                   	push   rcx
      d6:	04 fe                	add    al,0xfe
      d8:	0b da                	or     ebx,edx
      da:	0e                   	(bad)
      db:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
      de:	da 0e                	fimul  DWORD PTR [rsi]
      e0:	ab                   	stos   DWORD PTR es:[rdi],eax
      e1:	0f 03 76 b8          	lsl    esi,WORD PTR [rsi-0x48]
      e5:	7e 04                	jle    eb <__abi_tag-0x291>
      e7:	ab                   	stos   DWORD PTR es:[rdi],eax
      e8:	0f af 0f             	imul   ecx,DWORD PTR [rdi]
      eb:	03 77 b0             	add    esi,DWORD PTR [rdi-0x50]
      ee:	7e 04                	jle    f4 <__abi_tag-0x288>
      f0:	af                   	scas   eax,DWORD PTR es:[rdi]
      f1:	0f b0 0f             	cmpxchg BYTE PTR [rdi],cl
      f4:	08 91 78 09 e0 1a    	or     BYTE PTR [rcx+0x1ae00978],dl
      fa:	08 d8                	or     al,bl
      fc:	1c 04                	sbb    al,0x4
      fe:	b0 0f                	mov    al,0xf
     100:	bc 0f 01 51 04       	mov    esp,0x451010f
     105:	bc 0f d4 0f 04       	mov    esp,0x40fd40f
     10a:	a3 01 51 9f 00 00 00 	movabs ds:0x9f5101,eax
     111:	00 00 
	...
     11b:	00 00                	add    BYTE PTR [rax],al
     11d:	04 90                	add    al,0x90
     11f:	0b f3                	or     esi,ebx
     121:	0b 02                	or     eax,DWORD PTR [rdx]
     123:	75 00                	jne    125 <__abi_tag-0x257>
     125:	04 f3                	add    al,0xf3
     127:	0b a9 0c 02 7f 00    	or     ebp,DWORD PTR [rcx+0x7f020c]
     12d:	04 a9                	add    al,0xa9
     12f:	0c ab                	or     al,0xab
     131:	0f 04                	(bad)
     133:	76 c0                	jbe    f5 <__abi_tag-0x287>
     135:	7e 06                	jle    13d <__abi_tag-0x23f>
     137:	04 ab                	add    al,0xab
     139:	0f af 0f             	imul   ecx,DWORD PTR [rdi]
     13c:	04 77                	add    al,0x77
     13e:	b8 7e 06 04 af       	mov    eax,0xaf04067e
     143:	0f b0 0f             	cmpxchg BYTE PTR [rdi],cl
     146:	09 91 78 09 e0 1a    	or     DWORD PTR [rcx+0x1ae00978],edx
     14c:	08 d0                	or     al,dl
     14e:	1c 06                	sbb    al,0x6
     150:	04 b0                	add    al,0xb0
     152:	0f ca                	bswap  edx
     154:	0f 02 75 00          	lar    esi,WORD PTR [rbp+0x0]
     158:	04 ca                	add    al,0xca
     15a:	0f d4 0f             	paddq  mm1,QWORD PTR [rdi]
     15d:	04 76                	add    al,0x76
     15f:	c0 7e 06 00          	sar    BYTE PTR [rsi+0x6],0x0
     163:	01 00                	add    DWORD PTR [rax],eax
     165:	00 01                	add    BYTE PTR [rcx],al
     167:	01 00                	add    DWORD PTR [rax],eax
     169:	04 a5                	add    al,0xa5
     16b:	0d ad 0d 02 30       	or     eax,0x30020dad
     170:	9f                   	lahf
     171:	04 ad                	add    al,0xad
     173:	0d bd 0e 03 76       	or     eax,0x76030ebd
     178:	c8 7e 04 bd          	enter  0x47e,0xbd
     17c:	0e                   	(bad)
     17d:	c5 0e 08             	(bad)
     180:	76 c8                	jbe    14a <__abi_tag-0x232>
     182:	7e 94                	jle    118 <__abi_tag-0x264>
     184:	04 23                	add    al,0x23
     186:	01 9f 00 00 00 00    	add    DWORD PTR [rdi+0x0],ebx
     18c:	00 04 c9             	add    BYTE PTR [rcx+rcx*8],al
     18f:	0d f2 0d 01 50       	or     eax,0x50010df2
     194:	04 b4                	add    al,0xb4
     196:	0e                   	(bad)
     197:	cc                   	int3
     198:	0e                   	(bad)
     199:	01 50 00             	add    DWORD PTR [rax+0x0],edx
     19c:	00 00                	add    BYTE PTR [rax],al
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	00 00                	add    BYTE PTR [rax],al
     1a2:	04 df                	add    al,0xdf
     1a4:	0d ee 0d 06 71       	or     eax,0x71060dee
     1a9:	20 93 20 93 20 04    	and    BYTE PTR [rbx+0x4209320],dl
     1af:	ee                   	out    dx,al
     1b0:	0d a0 0e 05 62       	or     eax,0x62050ea0
     1b5:	93                   	xchg   ebx,eax
     1b6:	20 93 20 04 a0 0e    	and    BYTE PTR [rbx+0xea00420],dl
     1bc:	b4 0e                	mov    ah,0xe
     1be:	07                   	(bad)
     1bf:	76 f0                	jbe    1b1 <__abi_tag-0x1cb>
     1c1:	7e 93                	jle    156 <__abi_tag-0x226>
     1c3:	20 93 20 00 03 00    	and    BYTE PTR [rbx+0x30020],dl
     1c9:	00 00                	add    BYTE PTR [rax],al
     1cb:	04 f7                	add    al,0xf7
     1cd:	0d f9 0d 06 70       	or     eax,0x70060df9
     1d2:	00 73 00             	add    BYTE PTR [rbx+0x0],dh
     1d5:	1d 9f 04 f9 0d       	sbb    eax,0xdf9049f
     1da:	a0 0e 06 81 00 73 00 	movabs al,ds:0x9f1d00730081060e
     1e1:	1d 9f 
     1e3:	00 01                	add    BYTE PTR [rcx],al
     1e5:	00 00                	add    BYTE PTR [rax],al
     1e7:	02 04 e0             	add    al,BYTE PTR [rax+riz*8]
     1ea:	0b fe                	or     edi,esi
     1ec:	0b 01                	or     eax,DWORD PTR [rcx]
     1ee:	51                   	push   rcx
     1ef:	04 fe                	add    al,0xfe
     1f1:	0b de                	or     ebx,esi
     1f3:	0c 01                	or     al,0x1
     1f5:	53                   	push   rbx
     1f6:	00 01                	add    BYTE PTR [rcx],al
     1f8:	00 00                	add    BYTE PTR [rax],al
     1fa:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
     1fd:	0b f0                	or     esi,eax
     1ff:	0b 01                	or     eax,DWORD PTR [rcx]
     201:	50                   	push   rax
     202:	04 f0                	add    al,0xf0
     204:	0b fe                	or     edi,esi
     206:	0b 02                	or     eax,DWORD PTR [rdx]
     208:	7c 10                	jl     21a <__abi_tag-0x162>
     20a:	00 01                	add    BYTE PTR [rcx],al
     20c:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
     20f:	0c a9                	or     al,0xa9
     211:	0c 02                	or     al,0x2
     213:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     219:	00 00                	add    BYTE PTR [rax],al
     21b:	01 04 d4             	add    DWORD PTR [rsp+rdx*8],eax
     21e:	0e                   	(bad)
     21f:	dc 0e                	fmul   QWORD PTR [rsi]
     221:	02 30                	add    dh,BYTE PTR [rax]
     223:	9f                   	lahf
     224:	04 e4                	add    al,0xe4
     226:	0e                   	(bad)
     227:	ec                   	in     al,dx
     228:	0e                   	(bad)
     229:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
     22c:	ec                   	in     al,dx
     22d:	0e                   	(bad)
     22e:	f5                   	cmc
     22f:	0e                   	(bad)
     230:	03 73 7f             	add    esi,DWORD PTR [rbx+0x7f]
     233:	9f                   	lahf
     234:	00 00                	add    BYTE PTR [rax],al
     236:	00 00                	add    BYTE PTR [rax],al
     238:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     23b:	09 9a 0a 01 55 04    	or     DWORD PTR [rdx+0x455010a],ebx
     241:	9a                   	(bad)
     242:	0a 9f 0a 04 a3 01    	or     bl,BYTE PTR [rdi+0x1a3040a]
     248:	55                   	push   rbp
     249:	9f                   	lahf
	...
     252:	00 00                	add    BYTE PTR [rax],al
     254:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
     257:	08 d0                	or     al,dl
     259:	08 01                	or     BYTE PTR [rcx],al
     25b:	55                   	push   rbp
     25c:	04 d0                	add    al,0xd0
     25e:	08 b9 09 01 54 04    	or     BYTE PTR [rcx+0x4540109],bh
     264:	b9 09 c4 09 04       	mov    ecx,0x409c409
     269:	a3 01 55 9f 04 c4 09 	movabs ds:0x9de09c4049f5501,eax
     270:	de 09 
     272:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     275:	de 09                	fimul  WORD PTR [rcx]
     277:	e6 09                	out    0x9,al
     279:	04 a3                	add    al,0xa3
     27b:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
     286:	00 04 ae             	add    BYTE PTR [rsi+rbp*4],al
     289:	08 d6                	or     dh,dl
     28b:	08 05 61 93 20 93    	or     BYTE PTR [rip+0xffffffff93209361],al        # ffffffff932095f2 <_end+0xffffffff932035da>
     291:	20 04 d6             	and    BYTE PTR [rsi+rdx*8],al
     294:	08 c4                	or     ah,al
     296:	09 06                	or     DWORD PTR [rsi],eax
     298:	91                   	xchg   ecx,eax
     299:	00 93 20 93 20 04    	add    BYTE PTR [rbx+0x4209320],dl
     29f:	c4                   	(bad)
     2a0:	09 e5                	or     ebp,esp
     2a2:	09 05 61 93 20 93    	or     DWORD PTR [rip+0xffffffff93209361],eax        # ffffffff93209609 <_end+0xffffffff932035f1>
     2a8:	20 04 e5 09 e6 09 06 	and    BYTE PTR [riz*8+0x609e609],al
     2af:	91                   	xchg   ecx,eax
     2b0:	00 93 20 93 20 00    	add    BYTE PTR [rbx+0x209320],dl
     2b6:	01 02                	add    DWORD PTR [rdx],eax
     2b8:	04 c4                	add    al,0xc4
     2ba:	08 90 09 02 30 9f    	or     BYTE PTR [rax-0x60cffdf7],dl
     2c0:	00 02                	add    BYTE PTR [rdx],al
     2c2:	00 04 c4             	add    BYTE PTR [rsp+rax*8],al
     2c5:	08 c4                	or     ah,al
     2c7:	09 0a                	or     DWORD PTR [rdx],ecx
     2c9:	9e                   	sahf
     2ca:	08 11                	or     BYTE PTR [rcx],dl
     2cc:	11 11                	adc    DWORD PTR [rcx],edx
     2ce:	21 11                	and    DWORD PTR [rcx],edx
     2d0:	12 12                	adc    dl,BYTE PTR [rdx]
     2d2:	12 00                	adc    al,BYTE PTR [rax]
     2d4:	0b 00                	or     eax,DWORD PTR [rax]
     2d6:	00 00                	add    BYTE PTR [rax],al
     2d8:	0b 00                	or     eax,DWORD PTR [rax]
     2da:	04 c4                	add    al,0xc4
     2dc:	08 d6                	or     dh,dl
     2de:	08 01                	or     BYTE PTR [rcx],al
     2e0:	61                   	(bad)
     2e1:	04 d6                	add    al,0xd6
     2e3:	08 e5                	or     ch,ah
     2e5:	08 01                	or     BYTE PTR [rcx],al
     2e7:	58                   	pop    rax
     2e8:	04 f9                	add    al,0xf9
     2ea:	08 84 09 01 50 00 00 	or     BYTE PTR [rcx+rcx*1+0x5001],al
     2f1:	00 00                	add    BYTE PTR [rax],al
     2f3:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
     2f6:	08 ff                	or     bh,bh
     2f8:	08 01                	or     BYTE PTR [rcx],al
     2fa:	55                   	push   rbp
     2fb:	04 ff                	add    al,0xff
     2fd:	08 b9 09 01 58 00    	or     BYTE PTR [rcx+0x580109],bh
     303:	00 00                	add    BYTE PTR [rax],al
     305:	00 00                	add    BYTE PTR [rax],al
     307:	04 f9                	add    al,0xf9
     309:	08 8a 09 01 61 04    	or     BYTE PTR [rdx+0x4610109],cl
     30f:	8a 09                	mov    cl,BYTE PTR [rcx]
     311:	b2 09                	mov    dl,0x9
     313:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
     316:	07                   	(bad)
     317:	00 00                	add    BYTE PTR [rax],al
     319:	00 04 f9             	add    BYTE PTR [rcx+rdi*8],al
     31c:	08 90 09 01 51 04    	or     BYTE PTR [rax+0x4510109],dl
     322:	90                   	nop
     323:	09 b9 09 01 52 00    	or     DWORD PTR [rcx+0x520109],edi
     329:	00 00                	add    BYTE PTR [rax],al
     32b:	04 ba                	add    al,0xba
     32d:	09 bf 09 01 50 00    	or     DWORD PTR [rdi+0x500109],edi
     333:	09 0b                	or     DWORD PTR [rbx],ecx
     335:	04 f9                	add    al,0xf9
     337:	08 f9                	or     cl,bh
     339:	08 0a                	or     BYTE PTR [rdx],cl
     33b:	9e                   	sahf
     33c:	08 11                	or     BYTE PTR [rcx],dl
     33e:	11 11                	adc    DWORD PTR [rcx],edx
     340:	21 11                	and    DWORD PTR [rcx],edx
     342:	12 12                	adc    dl,BYTE PTR [rdx]
     344:	12 00                	adc    al,BYTE PTR [rax]
     346:	03 0b                	add    ecx,DWORD PTR [rbx]
     348:	04 c4                	add    al,0xc4
     34a:	08 c4                	or     ah,al
     34c:	08 02                	or     BYTE PTR [rdx],al
     34e:	30 9f 00 03 0b 04    	xor    BYTE PTR [rdi+0x40b0300],bl
     354:	c4                   	(bad)
     355:	08 c4                	or     ah,al
     357:	08 01                	or     BYTE PTR [rcx],al
     359:	61                   	(bad)
     35a:	00 07                	add    BYTE PTR [rdi],al
     35c:	00 04 c4             	add    BYTE PTR [rsp+rax*8],al
     35f:	08 d6                	or     dh,dl
     361:	08 01                	or     BYTE PTR [rcx],al
     363:	61                   	(bad)
     364:	00 09                	add    BYTE PTR [rcx],cl
     366:	0b 04 c4             	or     eax,DWORD PTR [rsp+rax*8]
     369:	08 c4                	or     ah,al
     36b:	08 02                	or     BYTE PTR [rdx],al
     36d:	30 9f 00 09 0b 04    	xor    BYTE PTR [rdi+0x40b0900],bl
     373:	c4                   	(bad)
     374:	08 c4                	or     ah,al
     376:	08 01                	or     BYTE PTR [rcx],al
     378:	61                   	(bad)
     379:	00 05 07 04 c4 08    	add    BYTE PTR [rip+0x8c40407],al        # 8c40786 <_end+0x8c3a76e>
     37f:	c4                   	(bad)
     380:	08 02                	or     BYTE PTR [rdx],al
     382:	30 9f 00 05 07 04    	xor    BYTE PTR [rdi+0x4070500],bl
     388:	c4                   	(bad)
     389:	08 c4                	or     ah,al
     38b:	08 01                	or     BYTE PTR [rcx],al
     38d:	61                   	(bad)
     38e:	00 0d 00 04 c4 08    	add    BYTE PTR [rip+0x8c40400],cl        # 8c40794 <_end+0x8c3a77c>
     394:	d0 08                	ror    BYTE PTR [rax],1
     396:	02 31                	add    dh,BYTE PTR [rcx]
     398:	9f                   	lahf
     399:	00 0d 00 04 c4 08    	add    BYTE PTR [rip+0x8c40400],cl        # 8c4079f <_end+0x8c3a787>
     39f:	d0 08                	ror    BYTE PTR [rax],1
     3a1:	01 61 00             	add    DWORD PTR [rcx+0x0],esp
     3a4:	0f 00 04 c4          	sldt   WORD PTR [rsp+rax*8]
     3a8:	08 d6                	or     dh,dl
     3aa:	08 01                	or     BYTE PTR [rcx],al
     3ac:	61                   	(bad)
     3ad:	00 10                	add    BYTE PTR [rax],dl
     3af:	00 04 c4             	add    BYTE PTR [rsp+rax*8],al
     3b2:	08 d0                	or     al,dl
     3b4:	08 02                	or     BYTE PTR [rdx],al
     3b6:	31 9f 00 10 00 04    	xor    DWORD PTR [rdi+0x4001000],ebx
     3bc:	c4                   	(bad)
     3bd:	08 d0                	or     al,dl
     3bf:	08 01                	or     BYTE PTR [rcx],al
     3c1:	61                   	(bad)
     3c2:	00 02                	add    BYTE PTR [rdx],al
     3c4:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
     3c7:	08 f9                	or     cl,bh
     3c9:	08 02                	or     BYTE PTR [rdx],al
     3cb:	32 9f 00 02 00 00    	xor    bl,BYTE PTR [rdi+0x200]
     3d1:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
     3d4:	08 d6                	or     dh,dl
     3d6:	08 01                	or     BYTE PTR [rcx],al
     3d8:	61                   	(bad)
     3d9:	04 d6                	add    al,0xd6
     3db:	08 f9                	or     cl,bh
     3dd:	08 02                	or     BYTE PTR [rdx],al
     3df:	91                   	xchg   ecx,eax
     3e0:	00 00                	add    BYTE PTR [rax],al
     3e2:	00 00                	add    BYTE PTR [rax],al
     3e4:	04 d6                	add    al,0xd6
     3e6:	08 b9 09 01 61 00    	or     BYTE PTR [rcx+0x610109],bh
     3ec:	04 00                	add    al,0x0
     3ee:	04 d0                	add    al,0xd0
     3f0:	08 d6                	or     dh,dl
     3f2:	08 02                	or     BYTE PTR [rdx],al
     3f4:	31 9f 00 04 00 04    	xor    DWORD PTR [rdi+0x4000400],ebx
     3fa:	d0 08                	ror    BYTE PTR [rax],1
     3fc:	d6                   	(bad)
     3fd:	08 01                	or     BYTE PTR [rcx],al
     3ff:	61                   	(bad)
     400:	00 02                	add    BYTE PTR [rdx],al
     402:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
     405:	08 f9                	or     cl,bh
     407:	08 02                	or     BYTE PTR [rdx],al
     409:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
     40f:	d6                   	(bad)
     410:	08 f9                	or     cl,bh
     412:	08 01                	or     BYTE PTR [rcx],al
     414:	61                   	(bad)
     415:	00 0d 00 04 f9 08    	add    BYTE PTR [rip+0x8f90400],cl        # 8f9081b <_end+0x8f8a803>
     41b:	ff 08                	dec    DWORD PTR [rax]
     41d:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
     420:	0d 00 04 f9 08       	or     eax,0x8f90400
     425:	ff 08                	dec    DWORD PTR [rax]
     427:	0a 9e 08 11 11 11    	or     bl,BYTE PTR [rsi+0x11111108]
     42d:	21 11                	and    DWORD PTR [rcx],edx
     42f:	12 12                	adc    dl,BYTE PTR [rdx]
     431:	12 00                	adc    al,BYTE PTR [rax]
     433:	02 07                	add    al,BYTE PTR [rdi]
     435:	04 f9                	add    al,0xf9
     437:	08 f9                	or     cl,bh
     439:	08 02                	or     BYTE PTR [rdx],al
     43b:	33 9f 00 02 07 04    	xor    ebx,DWORD PTR [rdi+0x4070200]
     441:	f9                   	stc
     442:	08 f9                	or     cl,bh
     444:	08 02                	or     BYTE PTR [rdx],al
     446:	91                   	xchg   ecx,eax
     447:	00 00                	add    BYTE PTR [rax],al
     449:	04 00                	add    al,0x0
     44b:	04 f9                	add    al,0xf9
     44d:	08 b9 09 01 61 00    	or     BYTE PTR [rcx+0x610109],bh
     453:	05 07 04 f9 08       	add    eax,0x8f90407
     458:	f9                   	stc
     459:	08 02                	or     BYTE PTR [rdx],al
     45b:	31 9f 00 05 07 04    	xor    DWORD PTR [rdi+0x4070500],ebx
     461:	f9                   	stc
     462:	08 f9                	or     cl,bh
     464:	08 01                	or     BYTE PTR [rcx],al
     466:	61                   	(bad)
     467:	00 02                	add    BYTE PTR [rdx],al
     469:	00 04 ff             	add    BYTE PTR [rdi+rdi*8],al
     46c:	08 8a 09 01 61 00    	or     BYTE PTR [rdx+0x610109],cl
     472:	02 00                	add    al,BYTE PTR [rax]
     474:	04 ff                	add    al,0xff
     476:	08 8a 09 0a 9e 08    	or     BYTE PTR [rdx+0x89e0a09],cl
     47c:	11 11                	adc    DWORD PTR [rcx],edx
     47e:	11 21                	adc    DWORD PTR [rcx],esp
     480:	11 12                	adc    DWORD PTR [rdx],edx
     482:	12 12                	adc    dl,BYTE PTR [rdx]
     484:	00 02                	add    BYTE PTR [rdx],al
     486:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
     489:	09 90 09 01 51 00    	or     DWORD PTR [rax+0x510109],edx
     48f:	02 00                	add    al,BYTE PTR [rax]
     491:	04 8a                	add    al,0x8a
     493:	09 90 09 0a 9e 08    	or     DWORD PTR [rax+0x89e0a09],edx
     499:	11 11                	adc    DWORD PTR [rcx],edx
     49b:	11 21                	adc    DWORD PTR [rcx],esp
     49d:	11 12                	adc    DWORD PTR [rdx],edx
     49f:	12 12                	adc    dl,BYTE PTR [rdx]
	...
     4ad:	00 00                	add    BYTE PTR [rax],al
     4af:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     4b2:	06                   	(bad)
     4b3:	f9                   	stc
     4b4:	06                   	(bad)
     4b5:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     4b8:	f9                   	stc
     4b9:	06                   	(bad)
     4ba:	eb 07                	jmp    4c3 <__abi_tag+0x147>
     4bc:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
     4bf:	eb 07                	jmp    4c8 <__abi_tag+0x14c>
     4c1:	ed                   	in     eax,dx
     4c2:	07                   	(bad)
     4c3:	04 a3                	add    al,0xa3
     4c5:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     4c8:	04 ed                	add    al,0xed
     4ca:	07                   	(bad)
     4cb:	f8                   	clc
     4cc:	07                   	(bad)
     4cd:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
     4d0:	f8                   	clc
     4d1:	07                   	(bad)
     4d2:	fc                   	cld
     4d3:	07                   	(bad)
     4d4:	04 a3                	add    al,0xa3
     4d6:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     4d9:	04 fc                	add    al,0xfc
     4db:	07                   	(bad)
     4dc:	96                   	xchg   esi,eax
     4dd:	08 01                	or     BYTE PTR [rcx],al
     4df:	55                   	push   rbp
     4e0:	04 96                	add    al,0x96
     4e2:	08 9b 08 04 a3 01    	or     BYTE PTR [rbx+0x1a30408],bl
     4e8:	55                   	push   rbp
     4e9:	9f                   	lahf
     4ea:	00 00                	add    BYTE PTR [rax],al
     4ec:	00 00                	add    BYTE PTR [rax],al
     4ee:	00 00                	add    BYTE PTR [rax],al
     4f0:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
     4f3:	07                   	(bad)
     4f4:	a3 07 01 50 04 a3 07 	movabs ds:0x7ec07a304500107,eax
     4fb:	ec 07 
     4fd:	01 56 04             	add    DWORD PTR [rsi+0x4],edx
     500:	ed                   	in     eax,dx
     501:	07                   	(bad)
     502:	f3 07                	repz (bad)
     504:	01 56 00             	add    DWORD PTR [rsi+0x0],edx
	...
     50f:	00 00                	add    BYTE PTR [rax],al
     511:	04 f0                	add    al,0xf0
     513:	04 a9                	add    al,0xa9
     515:	05 01 55 04 a9       	add    eax,0xa9045501
     51a:	05 9c 06 01 53       	add    eax,0x5301069c
     51f:	04 9c                	add    al,0x9c
     521:	06                   	(bad)
     522:	9e                   	sahf
     523:	06                   	(bad)
     524:	04 a3                	add    al,0xa3
     526:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     529:	04 9e                	add    al,0x9e
     52b:	06                   	(bad)
     52c:	b8 06 01 55 04       	mov    eax,0x4550106
     531:	b8 06 bd 06 04       	mov    eax,0x406bd06
     536:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
     53d:	00 00 
     53f:	04 d0                	add    al,0xd0
     541:	05 d3 05 01 50       	add    eax,0x500105d3
     546:	04 d3                	add    al,0xd3
     548:	05 9d 06 01 56       	add    eax,0x5601069d
     54d:	00 00                	add    BYTE PTR [rax],al
     54f:	00 04 ea             	add    BYTE PTR [rdx+rbp*8],al
     552:	05 f6 05 01 50       	add    eax,0x500105f6
	...
     567:	00 00                	add    BYTE PTR [rax],al
     569:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     56c:	2b 01                	sub    eax,DWORD PTR [rcx]
     56e:	55                   	push   rbp
     56f:	04 2b                	add    al,0x2b
     571:	88 01                	mov    BYTE PTR [rcx],al
     573:	01 5c 04 88          	add    DWORD PTR [rsp+rax*1-0x78],ebx
     577:	01 8c 01 01 55 04 8c 	add    DWORD PTR [rcx+rax*1-0x73fbaaff],ecx
     57e:	01 8d 01 01 5c 04    	add    DWORD PTR [rbp+0x45c0101],ecx
     584:	8d 01                	lea    eax,[rcx]
     586:	97                   	xchg   edi,eax
     587:	01 01                	add    DWORD PTR [rcx],eax
     589:	50                   	push   rax
     58a:	04 97                	add    al,0x97
     58c:	01 f7                	add    edi,esi
     58e:	02 01                	add    al,BYTE PTR [rcx]
     590:	5c                   	pop    rsp
     591:	04 ff                	add    al,0xff
     593:	02 99 03 01 55 04    	add    bl,BYTE PTR [rcx+0x4550103]
     599:	99                   	cdq
     59a:	03 9e 03 04 a3 01    	add    ebx,DWORD PTR [rsi+0x1a30403]
     5a0:	55                   	push   rbp
     5a1:	9f                   	lahf
     5a2:	04 9e                	add    al,0x9e
     5a4:	03 bd 03 01 5c 00    	add    edi,DWORD PTR [rbp+0x5c0103]
	...
     5ba:	04 00                	add    al,0x0
     5bc:	33 01                	xor    eax,DWORD PTR [rcx]
     5be:	54                   	push   rsp
     5bf:	04 33                	add    al,0x33
     5c1:	75 01                	jne    5c4 <__abi_tag+0x248>
     5c3:	5f                   	pop    rdi
     5c4:	04 75                	add    al,0x75
     5c6:	f1                   	int1
     5c7:	02 02                	add    al,BYTE PTR [rdx]
     5c9:	77 1c                	ja     5e7 <__abi_tag+0x26b>
     5cb:	04 f1                	add    al,0xf1
     5cd:	02 fe                	add    bh,dh
     5cf:	02 08                	add    cl,BYTE PTR [rax]
     5d1:	76 58                	jbe    62b <__abi_tag+0x2af>
     5d3:	09 e0                	or     eax,esp
     5d5:	1a 08                	sbb    cl,BYTE PTR [rax]
     5d7:	24 1c                	and    al,0x1c
     5d9:	04 fe                	add    al,0xfe
     5db:	02 ff                	add    bh,bh
     5dd:	02 08                	add    cl,BYTE PTR [rax]
     5df:	77 50                	ja     631 <__abi_tag+0x2b5>
     5e1:	09 e0                	or     eax,esp
     5e3:	1a 08                	sbb    cl,BYTE PTR [rax]
     5e5:	24 1c                	and    al,0x1c
     5e7:	04 ff                	add    al,0xff
     5e9:	02 92 03 01 54 04    	add    dl,BYTE PTR [rdx+0x4540103]
     5ef:	92                   	xchg   edx,eax
     5f0:	03 9e 03 02 77 1c    	add    ebx,DWORD PTR [rsi+0x1c770203]
     5f6:	04 9e                	add    al,0x9e
     5f8:	03 bd 03 01 5f 00    	add    edi,DWORD PTR [rbp+0x5f0103]
	...
     606:	04 49                	add    al,0x49
     608:	4d 01 50 04          	add    QWORD PTR [r8+0x4],r10
     60c:	4d 75 01             	rex.WRB jne 610 <__abi_tag+0x294>
     60f:	5d                   	pop    rbp
     610:	04 75                	add    al,0x75
     612:	e5 02                	in     eax,0x2
     614:	02 77 10             	add    dh,BYTE PTR [rdi+0x10]
     617:	04 9e                	add    al,0x9e
     619:	03 bd 03 01 5d 00    	add    edi,DWORD PTR [rbp+0x5d0103]
     61f:	00 00                	add    BYTE PTR [rax],al
     621:	00 00                	add    BYTE PTR [rax],al
     623:	00 00                	add    BYTE PTR [rax],al
     625:	04 51                	add    al,0x51
     627:	75 01                	jne    62a <__abi_tag+0x2ae>
     629:	50                   	push   rax
     62a:	04 75                	add    al,0x75
     62c:	e5 02                	in     eax,0x2
     62e:	02 77 38             	add    dh,BYTE PTR [rdi+0x38]
     631:	04 9e                	add    al,0x9e
     633:	03 bc 03 01 50 00 01 	add    edi,DWORD PTR [rbx+rax*1+0x1005001]
     63a:	00 02                	add    BYTE PTR [rdx],al
     63c:	00 00                	add    BYTE PTR [rax],al
     63e:	00 00                	add    BYTE PTR [rax],al
     640:	00 00                	add    BYTE PTR [rax],al
     642:	00 04 51             	add    BYTE PTR [rcx+rdx*2],al
     645:	75 02                	jne    649 <__abi_tag+0x2cd>
     647:	30 9f 04 88 01 8c    	xor    BYTE PTR [rdi-0x73fe77fc],bl
     64d:	01 01                	add    DWORD PTR [rcx],eax
     64f:	55                   	push   rbp
     650:	04 8c                	add    al,0x8c
     652:	01 97 01 01 5c 04    	add    DWORD PTR [rdi+0x45c0101],edx
     658:	97                   	xchg   edi,eax
     659:	01 cb                	add    ebx,ecx
     65b:	01 01                	add    DWORD PTR [rcx],eax
     65d:	54                   	push   rsp
     65e:	04 9e                	add    al,0x9e
     660:	03 bd 03 02 30 9f    	add    edi,DWORD PTR [rbp-0x60cffdfd]
     666:	00 02                	add    BYTE PTR [rdx],al
	...
     670:	00 00                	add    BYTE PTR [rax],al
     672:	00 04 51             	add    BYTE PTR [rcx+rdx*2],al
     675:	75 02                	jne    679 <__abi_tag+0x2fd>
     677:	30 9f 04 75 7b 01    	xor    BYTE PTR [rdi+0x17b7504],bl
     67d:	5d                   	pop    rbp
     67e:	04 ae                	add    al,0xae
     680:	01 e2                	add    edx,esp
     682:	02 01                	add    al,BYTE PTR [rcx]
     684:	5d                   	pop    rbp
     685:	04 e2                	add    al,0xe2
     687:	02 e4                	add    ah,ah
     689:	02 05 77 20 06 23    	add    al,BYTE PTR [rip+0x23062077]        # 23062706 <_end+0x2305c6ee>
     68f:	24 04                	and    al,0x4
     691:	e4 02                	in     al,0x2
     693:	e5 02                	in     eax,0x2
     695:	02 77 30             	add    dh,BYTE PTR [rdi+0x30]
     698:	04 9e                	add    al,0x9e
     69a:	03 bd 03 02 30 9f    	add    edi,DWORD PTR [rbp-0x60cffdfd]
	...
     6a8:	00 00                	add    BYTE PTR [rax],al
     6aa:	01 01                	add    DWORD PTR [rcx],eax
     6ac:	00 04 5a             	add    BYTE PTR [rdx+rbx*2],al
     6af:	75 02                	jne    6b3 <__abi_tag+0x337>
     6b1:	30 9f 04 75 7b 01    	xor    BYTE PTR [rdi+0x17b7504],bl
     6b7:	5e                   	pop    rsi
     6b8:	04 88                	add    al,0x88
     6ba:	01 93 02 01 5e 04    	add    DWORD PTR [rbx+0x45e0102],edx
     6c0:	93                   	xchg   ebx,eax
     6c1:	02 97 02 01 51 04    	add    dl,BYTE PTR [rdi+0x4510102]
     6c7:	97                   	xchg   edi,eax
     6c8:	02 c3                	add    al,bl
     6ca:	02 03                	add    al,BYTE PTR [rbx]
     6cc:	7e 7f                	jle    74d <__abi_tag+0x3d1>
     6ce:	9f                   	lahf
     6cf:	04 c3                	add    al,0xc3
     6d1:	02 e5                	add    ah,ch
     6d3:	02 01                	add    al,BYTE PTR [rcx]
     6d5:	5e                   	pop    rsi
     6d6:	00 03                	add    BYTE PTR [rbx],al
     6d8:	00 04 88             	add    BYTE PTR [rax+rcx*4],al
     6db:	01 8d 01 02 3a 9f    	add    DWORD PTR [rbp-0x60c5fdff],ecx
     6e1:	00 03                	add    BYTE PTR [rbx],al
     6e3:	00 00                	add    BYTE PTR [rax],al
     6e5:	00 04 88             	add    BYTE PTR [rax+rcx*4],al
     6e8:	01 8c 01 01 55 04 8c 	add    DWORD PTR [rcx+rax*1-0x73fbaaff],ecx
     6ef:	01 8d 01 01 5c 00    	add    DWORD PTR [rbp+0x5c0101],ecx
     6f5:	00 00                	add    BYTE PTR [rax],al
     6f7:	00 00                	add    BYTE PTR [rax],al
     6f9:	04 bc                	add    al,0xbc
     6fb:	01 cb                	add    ebx,ecx
     6fd:	01 01                	add    DWORD PTR [rcx],eax
     6ff:	51                   	push   rcx
     700:	04 cb                	add    al,0xcb
     702:	01 cc                	add    esp,ecx
     704:	01 02                	add    DWORD PTR [rdx],eax
     706:	77 30                	ja     738 <__abi_tag+0x3bc>
     708:	00 00                	add    BYTE PTR [rax],al
     70a:	00 04 b5 01 cb 01 01 	add    BYTE PTR [rsi*4+0x101cb01],al
     711:	54                   	push   rsp
     712:	00 00                	add    BYTE PTR [rax],al
     714:	00 04 b5 01 cc 01 01 	add    BYTE PTR [rsi*4+0x101cc01],al
     71b:	5f                   	pop    rdi
     71c:	00 00                	add    BYTE PTR [rax],al
     71e:	00 00                	add    BYTE PTR [rax],al
     720:	00 00                	add    BYTE PTR [rax],al
     722:	00 04 df             	add    BYTE PTR [rdi+rbx*8],al
     725:	01 f1                	add    ecx,esi
     727:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     72a:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
     72d:	1c 0c                	sbb    al,0xc
     72f:	ff                   	(bad)
     730:	ff                   	(bad)
     731:	ff                   	(bad)
     732:	ff 1a                	call   FWORD PTR [rdx]
     734:	9f                   	lahf
     735:	04 f1                	add    al,0xf1
     737:	01 fd                	add    ebp,edi
     739:	01 01                	add    DWORD PTR [rcx],eax
     73b:	51                   	push   rcx
     73c:	04 fd                	add    al,0xfd
     73e:	01 fe                	add    esi,edi
     740:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     743:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
     746:	1c 0c                	sbb    al,0xc
     748:	ff                   	(bad)
     749:	ff                   	(bad)
     74a:	ff                   	(bad)
     74b:	ff 1a                	call   FWORD PTR [rdx]
     74d:	9f                   	lahf
     74e:	00 00                	add    BYTE PTR [rax],al
     750:	00 04 df             	add    BYTE PTR [rdi+rbx*8],al
     753:	01 fe                	add    esi,edi
     755:	01 02                	add    DWORD PTR [rdx],eax
     757:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     75d:	00 00                	add    BYTE PTR [rax],al
     75f:	00 04 df             	add    BYTE PTR [rdi+rbx*8],al
     762:	01 f9                	add    ecx,edi
     764:	01 06                	add    DWORD PTR [rsi],eax
     766:	70 00                	jo     768 <__abi_tag+0x3ec>
     768:	75 00                	jne    76a <__abi_tag+0x3ee>
     76a:	22 9f 04 f9 01 fd    	and    bl,BYTE PTR [rdi-0x2fe06fc]
     770:	01 01                	add    DWORD PTR [rcx],eax
     772:	55                   	push   rbp
     773:	04 fd                	add    al,0xfd
     775:	01 fe                	add    esi,edi
     777:	01 0c 77             	add    DWORD PTR [rdi+rsi*2],ecx
     77a:	30 06                	xor    BYTE PTR [rsi],al
     77c:	77 38                	ja     7b6 <__abi_tag+0x43a>
     77e:	06                   	(bad)
     77f:	22 77 28             	and    dh,BYTE PTR [rdi+0x28]
     782:	06                   	(bad)
     783:	22 9f 00 02 00 04    	and    bl,BYTE PTR [rdi+0x4000200]
     789:	fe 01                	inc    BYTE PTR [rcx]
     78b:	98                   	cwde
     78c:	02 0a                	add    cl,BYTE PTR [rdx]
     78e:	03 22                	add    esp,DWORD PTR [rdx]
     790:	40 00 00             	rex add BYTE PTR [rax],al
     793:	00 00                	add    BYTE PTR [rax],al
     795:	00 00                	add    BYTE PTR [rax],al
     797:	9f                   	lahf
     798:	00 02                	add    BYTE PTR [rdx],al
     79a:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
     79d:	02 b5 02 0a 03 2f    	add    dh,BYTE PTR [rbp+0x2f030a02]
     7a3:	40 00 00             	rex add BYTE PTR [rax],al
     7a6:	00 00                	add    BYTE PTR [rax],al
     7a8:	00 00                	add    BYTE PTR [rax],al
     7aa:	9f                   	lahf
     7ab:	00 02                	add    BYTE PTR [rdx],al
     7ad:	04 04                	add    al,0x4
     7af:	b5 02                	mov    ch,0x2
     7b1:	b5 02                	mov    ch,0x2
     7b3:	01 5f 00             	add    DWORD PTR [rdi+0x0],ebx
	...
     7be:	04 c0                	add    al,0xc0
     7c0:	03 f6                	add    esi,esi
     7c2:	03 01                	add    eax,DWORD PTR [rcx]
     7c4:	54                   	push   rsp
     7c5:	04 f6                	add    al,0xf6
     7c7:	03 84 04 02 75 10 04 	add    eax,DWORD PTR [rsp+rax*1+0x4107502]
     7ce:	84 04 88             	test   BYTE PTR [rax+rcx*4],al
     7d1:	04 02                	add    al,0x2
     7d3:	7c 10                	jl     7e5 <__abi_tag+0x469>
     7d5:	04 88                	add    al,0x88
     7d7:	04 e9                	add    al,0xe9
     7d9:	04 04                	add    al,0x4
     7db:	a3 01 54 9f 00 00 00 	movabs ds:0x9f5401,eax
     7e2:	00 00 
     7e4:	00 00                	add    BYTE PTR [rax],al
     7e6:	04 c0                	add    al,0xc0
     7e8:	03 88 04 01 51 04    	add    ecx,DWORD PTR [rax+0x4510104]
     7ee:	88 04 a0             	mov    BYTE PTR [rax+riz*4],al
     7f1:	04 01                	add    al,0x1
     7f3:	5e                   	pop    rsi
     7f4:	04 a0                	add    al,0xa0
     7f6:	04 e9                	add    al,0xe9
     7f8:	04 04                	add    al,0x4
     7fa:	a3 01 51 9f 00 00 00 	movabs ds:0x9f5101,eax
     801:	00 00 
     803:	00 00                	add    BYTE PTR [rax],al
     805:	00 00                	add    BYTE PTR [rax],al
     807:	04 c0                	add    al,0xc0
     809:	03 84 04 02 75 00 04 	add    eax,DWORD PTR [rsp+rax*1+0x4007502]
     810:	84 04 de             	test   BYTE PTR [rsi+rbx*8],al
     813:	04 02                	add    al,0x2
     815:	7c 00                	jl     817 <__abi_tag+0x49b>
     817:	04 de                	add    al,0xde
     819:	04 e4                	add    al,0xe4
     81b:	04 02                	add    al,0x2
     81d:	70 00                	jo     81f <__abi_tag+0x4a3>
     81f:	04 e4                	add    al,0xe4
     821:	04 e9                	add    al,0xe9
     823:	04 02                	add    al,0x2
     825:	7c 00                	jl     827 <__abi_tag+0x4ab>
     827:	00 01                	add    BYTE PTR [rcx],al
     829:	00 04 8d 04 a0 04 02 	add    BYTE PTR [rcx*4+0x204a004],al
     830:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     836:	00 00                	add    BYTE PTR [rax],al
     838:	00 00                	add    BYTE PTR [rax],al
     83a:	00 00                	add    BYTE PTR [rax],al
     83c:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
     83f:	0a bb 0a 01 55 04    	or     bh,BYTE PTR [rbx+0x455010a]
     845:	bb 0a e4 0a 01       	mov    ebx,0x10ae40a
     84a:	56                   	push   rsi
     84b:	04 e4                	add    al,0xe4
     84d:	0a e9                	or     ch,cl
     84f:	0a 04 a3             	or     al,BYTE PTR [rbx+riz*4]
     852:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     855:	04 e9                	add    al,0xe9
     857:	0a 83 0b 01 55 04    	or     al,BYTE PTR [rbx+0x455010b]
     85d:	83 0b 88             	or     DWORD PTR [rbx],0xffffff88
     860:	0b 04 a3             	or     eax,DWORD PTR [rbx+riz*4]
     863:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     866:	00 00                	add    BYTE PTR [rax],al
     868:	00 00                	add    BYTE PTR [rax],al
     86a:	00 00                	add    BYTE PTR [rax],al
     86c:	01 04 b5 0a bb 0a 02 	add    DWORD PTR [rsi*4+0x20abb0a],eax
     873:	30 9f 04 bb 0a cc    	xor    BYTE PTR [rdi-0x33f544fc],bl
     879:	0a 01                	or     al,BYTE PTR [rcx]
     87b:	53                   	push   rbx
     87c:	04 cc                	add    al,0xcc
     87e:	0a d5                	or     dl,ch
     880:	0a 03                	or     al,BYTE PTR [rbx]
     882:	73 7f                	jae    903 <__abi_tag+0x587>
     884:	9f                   	lahf
     885:	00 d5                	add    ch,dl
     887:	0a 00                	or     al,BYTE PTR [rax]
     889:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 108f <calloc@plt+0xf>
     88f:	00 00                	add    BYTE PTR [rax],al
     891:	00 01                	add    BYTE PTR [rcx],al
	...
     8af:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
     8b2:	05 c5 05 02 30       	add    eax,0x300205c5
     8b7:	9f                   	lahf
     8b8:	04 c5                	add    al,0xc5
     8ba:	05 dd 05 01 50       	add    eax,0x500105dd
     8bf:	04 dd                	add    al,0xdd
     8c1:	05 ed 05 01 51       	add    eax,0x510105ed
     8c6:	04 ed                	add    al,0xed
     8c8:	05 ef 05 26 91       	add    eax,0x912605ef
     8cd:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     8d4:	ff 0f                	dec    DWORD PTR [rdi]
     8d6:	21 91 00 94 04 74    	and    DWORD PTR [rcx+0x74049400],edx
     8dc:	00 91 00 94 04 40    	add    BYTE PTR [rcx+0x40049400],dl
     8e2:	48 24 1f             	rex.W and al,0x1f
     8e5:	1a 08                	sbb    cl,BYTE PTR [rax]
     8e7:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     8ea:	29 28                	sub    DWORD PTR [rax],ebp
     8ec:	01 00                	add    DWORD PTR [rax],eax
     8ee:	16                   	(bad)
     8ef:	13 1a                	adc    ebx,DWORD PTR [rdx]
     8f1:	9f                   	lahf
     8f2:	04 ef                	add    al,0xef
     8f4:	05 87 06 01 50       	add    eax,0x50010687
     8f9:	04 87                	add    al,0x87
     8fb:	06                   	(bad)
     8fc:	97                   	xchg   edi,eax
     8fd:	06                   	(bad)
     8fe:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     901:	97                   	xchg   edi,eax
     902:	06                   	(bad)
     903:	99                   	cdq
     904:	06                   	(bad)
     905:	c8 01 91 00          	enter  0x9101,0x0
     909:	94                   	xchg   esp,eax
     90a:	04 20                	add    al,0x20
     90c:	0c ff                	or     al,0xff
     90e:	ff                   	(bad)
     90f:	ff 0f                	dec    DWORD PTR [rdi]
     911:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     917:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     91e:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     921:	91                   	xchg   ecx,eax
     922:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     929:	04 40                	add    al,0x40
     92b:	48 24 1f             	rex.W and al,0x1f
     92e:	1a 08                	sbb    cl,BYTE PTR [rax]
     930:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     933:	29 28                	sub    DWORD PTR [rax],ebp
     935:	01 00                	add    DWORD PTR [rax],eax
     937:	16                   	(bad)
     938:	13 1a                	adc    ebx,DWORD PTR [rdx]
     93a:	34 24                	xor    al,0x24
     93c:	91                   	xchg   ecx,eax
     93d:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     944:	ff                   	(bad)
     945:	ff 0f                	dec    DWORD PTR [rdi]
     947:	21 74 00 91          	and    DWORD PTR [rax+rax*1-0x6f],esi
     94b:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     952:	ff 0f                	dec    DWORD PTR [rdi]
     954:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     95a:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     961:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     964:	91                   	xchg   ecx,eax
     965:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     96c:	04 40                	add    al,0x40
     96e:	48 24 1f             	rex.W and al,0x1f
     971:	1a 08                	sbb    cl,BYTE PTR [rax]
     973:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     976:	29 28                	sub    DWORD PTR [rax],ebp
     978:	01 00                	add    DWORD PTR [rax],eax
     97a:	16                   	(bad)
     97b:	13 1a                	adc    ebx,DWORD PTR [rdx]
     97d:	34 24                	xor    al,0x24
     97f:	91                   	xchg   ecx,eax
     980:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     987:	04 20                	add    al,0x20
     989:	0c ff                	or     al,0xff
     98b:	ff                   	(bad)
     98c:	ff 0f                	dec    DWORD PTR [rdi]
     98e:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     994:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     99b:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     99e:	91                   	xchg   ecx,eax
     99f:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     9a6:	04 40                	add    al,0x40
     9a8:	48 24 1f             	rex.W and al,0x1f
     9ab:	1a 08                	sbb    cl,BYTE PTR [rax]
     9ad:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     9b0:	29 28                	sub    DWORD PTR [rax],ebp
     9b2:	01 00                	add    DWORD PTR [rax],eax
     9b4:	16                   	(bad)
     9b5:	13 1a                	adc    ebx,DWORD PTR [rdx]
     9b7:	34 24                	xor    al,0x24
     9b9:	91                   	xchg   ecx,eax
     9ba:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     9c1:	1f                   	(bad)
     9c2:	1a 08                	sbb    cl,BYTE PTR [rax]
     9c4:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     9c7:	2e 28 01             	cs sub BYTE PTR [rcx],al
     9ca:	00 16                	add    BYTE PTR [rsi],dl
     9cc:	13 1a                	adc    ebx,DWORD PTR [rdx]
     9ce:	9f                   	lahf
     9cf:	04 99                	add    al,0x99
     9d1:	06                   	(bad)
     9d2:	b1 06                	mov    cl,0x6
     9d4:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     9d7:	b1 06                	mov    cl,0x6
     9d9:	bd 06 01 51 04       	mov    ebp,0x4510106
     9de:	bd 06 bf 06 f2       	mov    ebp,0xf206bf06
     9e3:	07                   	(bad)
     9e4:	91                   	xchg   ecx,eax
     9e5:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     9ec:	ff 0f                	dec    DWORD PTR [rdi]
     9ee:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     9f4:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     9fb:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     9fe:	91                   	xchg   ecx,eax
     9ff:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     a06:	04 40                	add    al,0x40
     a08:	48 24 1f             	rex.W and al,0x1f
     a0b:	1a 08                	sbb    cl,BYTE PTR [rax]
     a0d:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     a10:	29 28                	sub    DWORD PTR [rax],ebp
     a12:	01 00                	add    DWORD PTR [rax],eax
     a14:	16                   	(bad)
     a15:	13 1a                	adc    ebx,DWORD PTR [rdx]
     a17:	34 24                	xor    al,0x24
     a19:	91                   	xchg   ecx,eax
     a1a:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     a21:	ff                   	(bad)
     a22:	ff 0f                	dec    DWORD PTR [rdi]
     a24:	21 91 00 94 04 20    	and    DWORD PTR [rcx+0x20049400],edx
     a2a:	0c ff                	or     al,0xff
     a2c:	ff                   	(bad)
     a2d:	ff 0f                	dec    DWORD PTR [rdi]
     a2f:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     a35:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     a3c:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     a3f:	91                   	xchg   ecx,eax
     a40:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     a47:	04 40                	add    al,0x40
     a49:	48 24 1f             	rex.W and al,0x1f
     a4c:	1a 08                	sbb    cl,BYTE PTR [rax]
     a4e:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     a51:	29 28                	sub    DWORD PTR [rax],ebp
     a53:	01 00                	add    DWORD PTR [rax],eax
     a55:	16                   	(bad)
     a56:	13 1a                	adc    ebx,DWORD PTR [rdx]
     a58:	34 24                	xor    al,0x24
     a5a:	91                   	xchg   ecx,eax
     a5b:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     a62:	04 20                	add    al,0x20
     a64:	0c ff                	or     al,0xff
     a66:	ff                   	(bad)
     a67:	ff 0f                	dec    DWORD PTR [rdi]
     a69:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     a6f:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     a76:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     a79:	91                   	xchg   ecx,eax
     a7a:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     a81:	04 40                	add    al,0x40
     a83:	48 24 1f             	rex.W and al,0x1f
     a86:	1a 08                	sbb    cl,BYTE PTR [rax]
     a88:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     a8b:	29 28                	sub    DWORD PTR [rax],ebp
     a8d:	01 00                	add    DWORD PTR [rax],eax
     a8f:	16                   	(bad)
     a90:	13 1a                	adc    ebx,DWORD PTR [rdx]
     a92:	34 24                	xor    al,0x24
     a94:	91                   	xchg   ecx,eax
     a95:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     a9c:	1f                   	(bad)
     a9d:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     aa0:	27                   	(bad)
     aa1:	91                   	xchg   ecx,eax
     aa2:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     aa9:	ff 0f                	dec    DWORD PTR [rdi]
     aab:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     ab1:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     ab8:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     abb:	91                   	xchg   ecx,eax
     abc:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     ac3:	04 40                	add    al,0x40
     ac5:	48 24 1f             	rex.W and al,0x1f
     ac8:	1a 08                	sbb    cl,BYTE PTR [rax]
     aca:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     acd:	29 28                	sub    DWORD PTR [rax],ebp
     acf:	01 00                	add    DWORD PTR [rax],eax
     ad1:	16                   	(bad)
     ad2:	13 1a                	adc    ebx,DWORD PTR [rdx]
     ad4:	34 24                	xor    al,0x24
     ad6:	91                   	xchg   ecx,eax
     ad7:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     ade:	04 20                	add    al,0x20
     ae0:	0c ff                	or     al,0xff
     ae2:	ff                   	(bad)
     ae3:	ff 0f                	dec    DWORD PTR [rdi]
     ae5:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     aeb:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     af2:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     af5:	91                   	xchg   ecx,eax
     af6:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     afd:	04 40                	add    al,0x40
     aff:	48 24 1f             	rex.W and al,0x1f
     b02:	1a 08                	sbb    cl,BYTE PTR [rax]
     b04:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     b07:	29 28                	sub    DWORD PTR [rax],ebp
     b09:	01 00                	add    DWORD PTR [rax],eax
     b0b:	16                   	(bad)
     b0c:	13 1a                	adc    ebx,DWORD PTR [rdx]
     b0e:	34 24                	xor    al,0x24
     b10:	91                   	xchg   ecx,eax
     b11:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     b18:	1f                   	(bad)
     b19:	1a 08                	sbb    cl,BYTE PTR [rax]
     b1b:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     b1e:	2e 28 01             	cs sub BYTE PTR [rcx],al
     b21:	00 16                	add    BYTE PTR [rsi],dl
     b23:	13 1a                	adc    ebx,DWORD PTR [rdx]
     b25:	34 24                	xor    al,0x24
     b27:	91                   	xchg   ecx,eax
     b28:	10 94 04 22 20 0c ff 	adc    BYTE PTR [rsp+rax*1-0xf3dfde],dl
     b2f:	ff                   	(bad)
     b30:	ff 0f                	dec    DWORD PTR [rdi]
     b32:	21 74 00 91          	and    DWORD PTR [rax+rax*1-0x6f],esi
     b36:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     b3d:	ff 0f                	dec    DWORD PTR [rdi]
     b3f:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     b45:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     b4c:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     b4f:	91                   	xchg   ecx,eax
     b50:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     b57:	04 40                	add    al,0x40
     b59:	48 24 1f             	rex.W and al,0x1f
     b5c:	1a 08                	sbb    cl,BYTE PTR [rax]
     b5e:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     b61:	29 28                	sub    DWORD PTR [rax],ebp
     b63:	01 00                	add    DWORD PTR [rax],eax
     b65:	16                   	(bad)
     b66:	13 1a                	adc    ebx,DWORD PTR [rdx]
     b68:	34 24                	xor    al,0x24
     b6a:	91                   	xchg   ecx,eax
     b6b:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     b72:	ff                   	(bad)
     b73:	ff 0f                	dec    DWORD PTR [rdi]
     b75:	21 91 00 94 04 20    	and    DWORD PTR [rcx+0x20049400],edx
     b7b:	0c ff                	or     al,0xff
     b7d:	ff                   	(bad)
     b7e:	ff 0f                	dec    DWORD PTR [rdi]
     b80:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     b86:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     b8d:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     b90:	91                   	xchg   ecx,eax
     b91:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     b98:	04 40                	add    al,0x40
     b9a:	48 24 1f             	rex.W and al,0x1f
     b9d:	1a 08                	sbb    cl,BYTE PTR [rax]
     b9f:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     ba2:	29 28                	sub    DWORD PTR [rax],ebp
     ba4:	01 00                	add    DWORD PTR [rax],eax
     ba6:	16                   	(bad)
     ba7:	13 1a                	adc    ebx,DWORD PTR [rdx]
     ba9:	34 24                	xor    al,0x24
     bab:	91                   	xchg   ecx,eax
     bac:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     bb3:	04 20                	add    al,0x20
     bb5:	0c ff                	or     al,0xff
     bb7:	ff                   	(bad)
     bb8:	ff 0f                	dec    DWORD PTR [rdi]
     bba:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     bc0:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     bc7:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     bca:	91                   	xchg   ecx,eax
     bcb:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     bd2:	04 40                	add    al,0x40
     bd4:	48 24 1f             	rex.W and al,0x1f
     bd7:	1a 08                	sbb    cl,BYTE PTR [rax]
     bd9:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     bdc:	29 28                	sub    DWORD PTR [rax],ebp
     bde:	01 00                	add    DWORD PTR [rax],eax
     be0:	16                   	(bad)
     be1:	13 1a                	adc    ebx,DWORD PTR [rdx]
     be3:	34 24                	xor    al,0x24
     be5:	91                   	xchg   ecx,eax
     be6:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     bed:	1f                   	(bad)
     bee:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     bf1:	27                   	(bad)
     bf2:	91                   	xchg   ecx,eax
     bf3:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     bfa:	ff 0f                	dec    DWORD PTR [rdi]
     bfc:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     c02:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     c09:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     c0c:	91                   	xchg   ecx,eax
     c0d:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     c14:	04 40                	add    al,0x40
     c16:	48 24 1f             	rex.W and al,0x1f
     c19:	1a 08                	sbb    cl,BYTE PTR [rax]
     c1b:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     c1e:	29 28                	sub    DWORD PTR [rax],ebp
     c20:	01 00                	add    DWORD PTR [rax],eax
     c22:	16                   	(bad)
     c23:	13 1a                	adc    ebx,DWORD PTR [rdx]
     c25:	34 24                	xor    al,0x24
     c27:	91                   	xchg   ecx,eax
     c28:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     c2f:	04 20                	add    al,0x20
     c31:	0c ff                	or     al,0xff
     c33:	ff                   	(bad)
     c34:	ff 0f                	dec    DWORD PTR [rdi]
     c36:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     c3c:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     c43:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     c46:	91                   	xchg   ecx,eax
     c47:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     c4e:	04 40                	add    al,0x40
     c50:	48 24 1f             	rex.W and al,0x1f
     c53:	1a 08                	sbb    cl,BYTE PTR [rax]
     c55:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     c58:	29 28                	sub    DWORD PTR [rax],ebp
     c5a:	01 00                	add    DWORD PTR [rax],eax
     c5c:	16                   	(bad)
     c5d:	13 1a                	adc    ebx,DWORD PTR [rdx]
     c5f:	34 24                	xor    al,0x24
     c61:	91                   	xchg   ecx,eax
     c62:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     c69:	1f                   	(bad)
     c6a:	1a 08                	sbb    cl,BYTE PTR [rax]
     c6c:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     c6f:	2e 28 01             	cs sub BYTE PTR [rcx],al
     c72:	00 16                	add    BYTE PTR [rsi],dl
     c74:	13 1a                	adc    ebx,DWORD PTR [rdx]
     c76:	34 24                	xor    al,0x24
     c78:	91                   	xchg   ecx,eax
     c79:	10 94 04 22 91 00 94 	adc    BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     c80:	04 20                	add    al,0x20
     c82:	0c ff                	or     al,0xff
     c84:	ff                   	(bad)
     c85:	ff 0f                	dec    DWORD PTR [rdi]
     c87:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     c8d:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     c94:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     c97:	91                   	xchg   ecx,eax
     c98:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     c9f:	04 40                	add    al,0x40
     ca1:	48 24 1f             	rex.W and al,0x1f
     ca4:	1a 08                	sbb    cl,BYTE PTR [rax]
     ca6:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     ca9:	29 28                	sub    DWORD PTR [rax],ebp
     cab:	01 00                	add    DWORD PTR [rax],eax
     cad:	16                   	(bad)
     cae:	13 1a                	adc    ebx,DWORD PTR [rdx]
     cb0:	34 24                	xor    al,0x24
     cb2:	91                   	xchg   ecx,eax
     cb3:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     cba:	ff                   	(bad)
     cbb:	ff 0f                	dec    DWORD PTR [rdi]
     cbd:	21 91 00 94 04 20    	and    DWORD PTR [rcx+0x20049400],edx
     cc3:	0c ff                	or     al,0xff
     cc5:	ff                   	(bad)
     cc6:	ff 0f                	dec    DWORD PTR [rdi]
     cc8:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     cce:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     cd5:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     cd8:	91                   	xchg   ecx,eax
     cd9:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     ce0:	04 40                	add    al,0x40
     ce2:	48 24 1f             	rex.W and al,0x1f
     ce5:	1a 08                	sbb    cl,BYTE PTR [rax]
     ce7:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     cea:	29 28                	sub    DWORD PTR [rax],ebp
     cec:	01 00                	add    DWORD PTR [rax],eax
     cee:	16                   	(bad)
     cef:	13 1a                	adc    ebx,DWORD PTR [rdx]
     cf1:	34 24                	xor    al,0x24
     cf3:	91                   	xchg   ecx,eax
     cf4:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     cfb:	04 20                	add    al,0x20
     cfd:	0c ff                	or     al,0xff
     cff:	ff                   	(bad)
     d00:	ff 0f                	dec    DWORD PTR [rdi]
     d02:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     d08:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     d0f:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     d12:	91                   	xchg   ecx,eax
     d13:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     d1a:	04 40                	add    al,0x40
     d1c:	48 24 1f             	rex.W and al,0x1f
     d1f:	1a 08                	sbb    cl,BYTE PTR [rax]
     d21:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     d24:	29 28                	sub    DWORD PTR [rax],ebp
     d26:	01 00                	add    DWORD PTR [rax],eax
     d28:	16                   	(bad)
     d29:	13 1a                	adc    ebx,DWORD PTR [rdx]
     d2b:	34 24                	xor    al,0x24
     d2d:	91                   	xchg   ecx,eax
     d2e:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     d35:	1f                   	(bad)
     d36:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     d39:	27                   	(bad)
     d3a:	91                   	xchg   ecx,eax
     d3b:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     d42:	ff 0f                	dec    DWORD PTR [rdi]
     d44:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     d4a:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     d51:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     d54:	91                   	xchg   ecx,eax
     d55:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     d5c:	04 40                	add    al,0x40
     d5e:	48 24 1f             	rex.W and al,0x1f
     d61:	1a 08                	sbb    cl,BYTE PTR [rax]
     d63:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     d66:	29 28                	sub    DWORD PTR [rax],ebp
     d68:	01 00                	add    DWORD PTR [rax],eax
     d6a:	16                   	(bad)
     d6b:	13 1a                	adc    ebx,DWORD PTR [rdx]
     d6d:	34 24                	xor    al,0x24
     d6f:	91                   	xchg   ecx,eax
     d70:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     d77:	04 20                	add    al,0x20
     d79:	0c ff                	or     al,0xff
     d7b:	ff                   	(bad)
     d7c:	ff 0f                	dec    DWORD PTR [rdi]
     d7e:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     d84:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     d8b:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     d8e:	91                   	xchg   ecx,eax
     d8f:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     d96:	04 40                	add    al,0x40
     d98:	48 24 1f             	rex.W and al,0x1f
     d9b:	1a 08                	sbb    cl,BYTE PTR [rax]
     d9d:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     da0:	29 28                	sub    DWORD PTR [rax],ebp
     da2:	01 00                	add    DWORD PTR [rax],eax
     da4:	16                   	(bad)
     da5:	13 1a                	adc    ebx,DWORD PTR [rdx]
     da7:	34 24                	xor    al,0x24
     da9:	91                   	xchg   ecx,eax
     daa:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     db1:	1f                   	(bad)
     db2:	1a 08                	sbb    cl,BYTE PTR [rax]
     db4:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     db7:	2e 28 01             	cs sub BYTE PTR [rcx],al
     dba:	00 16                	add    BYTE PTR [rsi],dl
     dbc:	13 1a                	adc    ebx,DWORD PTR [rdx]
     dbe:	34 24                	xor    al,0x24
     dc0:	91                   	xchg   ecx,eax
     dc1:	10 94 04 22 40 48 24 	adc    BYTE PTR [rsp+rax*1+0x24484022],dl
     dc8:	1f                   	(bad)
     dc9:	1a 08                	sbb    cl,BYTE PTR [rax]
     dcb:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     dce:	2e 28 01             	cs sub BYTE PTR [rcx],al
     dd1:	00 16                	add    BYTE PTR [rsi],dl
     dd3:	13 1a                	adc    ebx,DWORD PTR [rdx]
     dd5:	9f                   	lahf
     dd6:	04 bf                	add    al,0xbf
     dd8:	06                   	(bad)
     dd9:	d7                   	xlat   BYTE PTR ds:[rbx]
     dda:	06                   	(bad)
     ddb:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     dde:	d7                   	xlat   BYTE PTR ds:[rbx]
     ddf:	06                   	(bad)
     de0:	e3 06                	jrcxz  de8 <__abi_tag+0xa6c>
     de2:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     de5:	e5 06                	in     eax,0x6
     de7:	8a 07                	mov    al,BYTE PTR [rdi]
     de9:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     dec:	8e 07                	mov    es,WORD PTR [rdi]
     dee:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     def:	07                   	(bad)
     df0:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     df3:	b0 07                	mov    al,0x7
     df5:	b5 07                	mov    ch,0x7
     df7:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
     dfa:	02 00                	add    al,BYTE PTR [rax]
	...
     e14:	00 00                	add    BYTE PTR [rax],al
     e16:	01 00                	add    DWORD PTR [rax],eax
     e18:	00 00                	add    BYTE PTR [rax],al
     e1a:	00 00                	add    BYTE PTR [rax],al
     e1c:	00 00                	add    BYTE PTR [rax],al
     e1e:	04 b4                	add    al,0xb4
     e20:	05 cd 05 02 30       	add    eax,0x300205cd
     e25:	9f                   	lahf
     e26:	04 cd                	add    al,0xcd
     e28:	05 d8 05 01 51       	add    eax,0x510105d8
     e2d:	04 d8                	add    al,0xd8
     e2f:	05 dd 05 04 71       	add    eax,0x710405dd
     e34:	00 20                	add    BYTE PTR [rax],ah
     e36:	9f                   	lahf
     e37:	04 dd                	add    al,0xdd
     e39:	05 f7 05 0a 91       	add    eax,0x910a05f7
     e3e:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     e45:	1a 9f 04 f7 05 82    	sbb    bl,BYTE PTR [rdi-0x7dfa08fc]
     e4b:	06                   	(bad)
     e4c:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     e4f:	82                   	(bad)
     e50:	06                   	(bad)
     e51:	87 06                	xchg   DWORD PTR [rsi],eax
     e53:	04 71                	add    al,0x71
     e55:	00 20                	add    BYTE PTR [rax],ah
     e57:	9f                   	lahf
     e58:	04 87                	add    al,0x87
     e5a:	06                   	(bad)
     e5b:	a1 06 40 91 00 94 04 	movabs eax,ds:0xc20049400914006
     e62:	20 0c 
     e64:	ff                   	(bad)
     e65:	ff                   	(bad)
     e66:	ff 0f                	dec    DWORD PTR [rdi]
     e68:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     e6e:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     e75:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     e78:	91                   	xchg   ecx,eax
     e79:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     e80:	04 40                	add    al,0x40
     e82:	48 24 1f             	rex.W and al,0x1f
     e85:	1a 08                	sbb    cl,BYTE PTR [rax]
     e87:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     e8a:	29 28                	sub    DWORD PTR [rax],ebp
     e8c:	01 00                	add    DWORD PTR [rax],eax
     e8e:	16                   	(bad)
     e8f:	13 1a                	adc    ebx,DWORD PTR [rdx]
     e91:	34 24                	xor    al,0x24
     e93:	91                   	xchg   ecx,eax
     e94:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     e9b:	1f                   	(bad)
     e9c:	1a 9f 04 a1 06 ac    	sbb    bl,BYTE PTR [rdi-0x53f95efc]
     ea2:	06                   	(bad)
     ea3:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     ea6:	ac                   	lods   al,BYTE PTR ds:[rsi]
     ea7:	06                   	(bad)
     ea8:	b1 06                	mov    cl,0x6
     eaa:	04 71                	add    al,0x71
     eac:	00 20                	add    BYTE PTR [rax],ah
     eae:	9f                   	lahf
     eaf:	04 b1                	add    al,0xb1
     eb1:	06                   	(bad)
     eb2:	c7 06 ce 02 91 00    	mov    DWORD PTR [rsi],0x9102ce
     eb8:	94                   	xchg   esp,eax
     eb9:	04 20                	add    al,0x20
     ebb:	0c ff                	or     al,0xff
     ebd:	ff                   	(bad)
     ebe:	ff 0f                	dec    DWORD PTR [rdi]
     ec0:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     ec6:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     ecd:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     ed0:	91                   	xchg   ecx,eax
     ed1:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     ed8:	04 40                	add    al,0x40
     eda:	48 24 1f             	rex.W and al,0x1f
     edd:	1a 08                	sbb    cl,BYTE PTR [rax]
     edf:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     ee2:	29 28                	sub    DWORD PTR [rax],ebp
     ee4:	01 00                	add    DWORD PTR [rax],eax
     ee6:	16                   	(bad)
     ee7:	13 1a                	adc    ebx,DWORD PTR [rdx]
     ee9:	34 24                	xor    al,0x24
     eeb:	91                   	xchg   ecx,eax
     eec:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     ef3:	ff                   	(bad)
     ef4:	ff 0f                	dec    DWORD PTR [rdi]
     ef6:	21 91 00 94 04 20    	and    DWORD PTR [rcx+0x20049400],edx
     efc:	0c ff                	or     al,0xff
     efe:	ff                   	(bad)
     eff:	ff 0f                	dec    DWORD PTR [rdi]
     f01:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     f07:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     f0e:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     f11:	91                   	xchg   ecx,eax
     f12:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     f19:	04 40                	add    al,0x40
     f1b:	48 24 1f             	rex.W and al,0x1f
     f1e:	1a 08                	sbb    cl,BYTE PTR [rax]
     f20:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     f23:	29 28                	sub    DWORD PTR [rax],ebp
     f25:	01 00                	add    DWORD PTR [rax],eax
     f27:	16                   	(bad)
     f28:	13 1a                	adc    ebx,DWORD PTR [rdx]
     f2a:	34 24                	xor    al,0x24
     f2c:	91                   	xchg   ecx,eax
     f2d:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     f34:	04 20                	add    al,0x20
     f36:	0c ff                	or     al,0xff
     f38:	ff                   	(bad)
     f39:	ff 0f                	dec    DWORD PTR [rdi]
     f3b:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     f41:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     f48:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     f4b:	91                   	xchg   ecx,eax
     f4c:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     f53:	04 40                	add    al,0x40
     f55:	48 24 1f             	rex.W and al,0x1f
     f58:	1a 08                	sbb    cl,BYTE PTR [rax]
     f5a:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     f5d:	29 28                	sub    DWORD PTR [rax],ebp
     f5f:	01 00                	add    DWORD PTR [rax],eax
     f61:	16                   	(bad)
     f62:	13 1a                	adc    ebx,DWORD PTR [rdx]
     f64:	34 24                	xor    al,0x24
     f66:	91                   	xchg   ecx,eax
     f67:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     f6e:	1f                   	(bad)
     f6f:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     f72:	27                   	(bad)
     f73:	91                   	xchg   ecx,eax
     f74:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     f7b:	ff 0f                	dec    DWORD PTR [rdi]
     f7d:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     f83:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     f8a:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     f8d:	91                   	xchg   ecx,eax
     f8e:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     f95:	04 40                	add    al,0x40
     f97:	48 24 1f             	rex.W and al,0x1f
     f9a:	1a 08                	sbb    cl,BYTE PTR [rax]
     f9c:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     f9f:	29 28                	sub    DWORD PTR [rax],ebp
     fa1:	01 00                	add    DWORD PTR [rax],eax
     fa3:	16                   	(bad)
     fa4:	13 1a                	adc    ebx,DWORD PTR [rdx]
     fa6:	34 24                	xor    al,0x24
     fa8:	91                   	xchg   ecx,eax
     fa9:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     fb0:	04 20                	add    al,0x20
     fb2:	0c ff                	or     al,0xff
     fb4:	ff                   	(bad)
     fb5:	ff 0f                	dec    DWORD PTR [rdi]
     fb7:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     fbd:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     fc4:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     fc7:	91                   	xchg   ecx,eax
     fc8:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     fcf:	04 40                	add    al,0x40
     fd1:	48 24 1f             	rex.W and al,0x1f
     fd4:	1a 08                	sbb    cl,BYTE PTR [rax]
     fd6:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     fd9:	29 28                	sub    DWORD PTR [rax],ebp
     fdb:	01 00                	add    DWORD PTR [rax],eax
     fdd:	16                   	(bad)
     fde:	13 1a                	adc    ebx,DWORD PTR [rdx]
     fe0:	34 24                	xor    al,0x24
     fe2:	91                   	xchg   ecx,eax
     fe3:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     fea:	1f                   	(bad)
     feb:	1a 08                	sbb    cl,BYTE PTR [rax]
     fed:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     ff0:	2e 28 01             	cs sub BYTE PTR [rcx],al
     ff3:	00 16                	add    BYTE PTR [rsi],dl
     ff5:	13 1a                	adc    ebx,DWORD PTR [rdx]
     ff7:	34 24                	xor    al,0x24
     ff9:	91                   	xchg   ecx,eax
     ffa:	10 94 04 22 40 48 24 	adc    BYTE PTR [rsp+rax*1+0x24484022],dl
    1001:	1f                   	(bad)
    1002:	1a 9f 04 c7 06 d2    	sbb    bl,BYTE PTR [rdi-0x2df938fc]
    1008:	06                   	(bad)
    1009:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    100c:	d2 06                	rol    BYTE PTR [rsi],cl
    100e:	d7                   	xlat   BYTE PTR ds:[rbx]
    100f:	06                   	(bad)
    1010:	04 71                	add    al,0x71
    1012:	00 20                	add    BYTE PTR [rax],ah
    1014:	9f                   	lahf
    1015:	04 ed                	add    al,0xed
    1017:	06                   	(bad)
    1018:	f8                   	clc
    1019:	06                   	(bad)
    101a:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    101d:	f8                   	clc
    101e:	06                   	(bad)
    101f:	82                   	(bad)
    1020:	07                   	(bad)
    1021:	04 71                	add    al,0x71
    1023:	00 20                	add    BYTE PTR [rax],ah
    1025:	9f                   	lahf
    1026:	04 8e                	add    al,0x8e
    1028:	07                   	(bad)
    1029:	96                   	xchg   esi,eax
    102a:	07                   	(bad)
    102b:	08 70 00             	or     BYTE PTR [rax+0x0],dh
    102e:	40                   	rex
    102f:	48 24 1f             	rex.W and al,0x1f
    1032:	1a 9f 04 96 07 9c    	sbb    bl,BYTE PTR [rdi-0x63f869fc]
    1038:	07                   	(bad)
    1039:	01 54 04 9c          	add    DWORD PTR [rsp+rax*1-0x64],edx
    103d:	07                   	(bad)
    103e:	9f                   	lahf
    103f:	07                   	(bad)
    1040:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    1043:	9f                   	lahf
    1044:	07                   	(bad)
    1045:	a3 07 04 74 00 20 9f 	movabs ds:0x3009f2000740407,eax
    104c:	00 03 
    104e:	01 01                	add    DWORD PTR [rcx],eax
    1050:	01 01                	add    DWORD PTR [rcx],eax
    1052:	01 01                	add    DWORD PTR [rcx],eax
    1054:	01 01                	add    DWORD PTR [rcx],eax
    1056:	01 01                	add    DWORD PTR [rcx],eax
    1058:	00 00                	add    BYTE PTR [rax],al
    105a:	01 01                	add    DWORD PTR [rcx],eax
    105c:	00 00                	add    BYTE PTR [rax],al
    105e:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    1061:	05 dd 05 02 30       	add    eax,0x300205dd
    1066:	9f                   	lahf
    1067:	04 dd                	add    al,0xdd
    1069:	05 87 06 02 31       	add    eax,0x31020687
    106e:	9f                   	lahf
    106f:	04 87                	add    al,0x87
    1071:	06                   	(bad)
    1072:	b1 06                	mov    cl,0x6
    1074:	02 32                	add    dh,BYTE PTR [rdx]
    1076:	9f                   	lahf
    1077:	04 b1                	add    al,0xb1
    1079:	06                   	(bad)
    107a:	d7                   	xlat   BYTE PTR ds:[rbx]
    107b:	06                   	(bad)
    107c:	02 33                	add    dh,BYTE PTR [rbx]
    107e:	9f                   	lahf
    107f:	04 d7                	add    al,0xd7
    1081:	06                   	(bad)
    1082:	fd                   	std
    1083:	06                   	(bad)
    1084:	02 34 9f             	add    dh,BYTE PTR [rdi+rbx*4]
    1087:	04 fd                	add    al,0xfd
    1089:	06                   	(bad)
    108a:	87 07                	xchg   DWORD PTR [rdi],eax
    108c:	02 35 9f 04 87 07    	add    dh,BYTE PTR [rip+0x787049f]        # 7871531 <_end+0x786b519>
    1092:	a3 07 01 51 04 a3 07 	movabs ds:0x7a707a304510107,eax
    1099:	a7 07 
    109b:	03 71 01             	add    esi,DWORD PTR [rcx+0x1]
    109e:	9f                   	lahf
    109f:	04 a7                	add    al,0xa7
    10a1:	07                   	(bad)
    10a2:	ab                   	stos   DWORD PTR es:[rdi],eax
    10a3:	07                   	(bad)
    10a4:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
    10a7:	01 00                	add    DWORD PTR [rax],eax
	...
    10c1:	00 00                	add    BYTE PTR [rax],al
    10c3:	04 a4                	add    al,0xa4
    10c5:	01 f2                	add    edx,esi
    10c7:	01 02                	add    DWORD PTR [rdx],eax
    10c9:	31 9f 04 f2 01 f5    	xor    DWORD PTR [rdi-0xafe0dfc],ebx
    10cf:	01 01                	add    DWORD PTR [rcx],eax
    10d1:	52                   	push   rdx
    10d2:	04 f5                	add    al,0xf5
    10d4:	01 bb 02 01 5a 04    	add    DWORD PTR [rbx+0x45a0102],edi
    10da:	bb 02 d1 02 01       	mov    ebx,0x102d102
    10df:	54                   	push   rsp
    10e0:	04 d1                	add    al,0xd1
    10e2:	02 8b 03 01 5a 04    	add    cl,BYTE PTR [rbx+0x45a0103]
    10e8:	8b 03                	mov    eax,DWORD PTR [rbx]
    10ea:	a1 03 01 54 04 a1 03 	movabs eax,ds:0x3db03a104540103
    10f1:	db 03 
    10f3:	01 5a 04             	add    DWORD PTR [rdx+0x4],ebx
    10f6:	db 03                	fild   DWORD PTR [rbx]
    10f8:	f1                   	int1
    10f9:	03 01                	add    eax,DWORD PTR [rcx]
    10fb:	54                   	push   rsp
    10fc:	04 f1                	add    al,0xf1
    10fe:	03 a7 04 01 5a 04    	add    esp,DWORD PTR [rdi+0x45a0104]
    1104:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1105:	04 af                	add    al,0xaf
    1107:	04 01                	add    al,0x1
    1109:	54                   	push   rsp
    110a:	04 af                	add    al,0xaf
    110c:	04 cb                	add    al,0xcb
    110e:	04 01                	add    al,0x1
    1110:	5a                   	pop    rdx
    1111:	04 f8                	add    al,0xf8
    1113:	04 80                	add    al,0x80
    1115:	05 01 51 04 80       	add    eax,0x80045101
    111a:	05 96 05 01 5a       	add    eax,0x5a010596
    111f:	04 9f                	add    al,0x9f
    1121:	05 a6 05 02 31       	add    eax,0x310205a6
    1126:	9f                   	lahf
    1127:	00 02                	add    BYTE PTR [rdx],al
	...
    113d:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
    1140:	01 87 02 02 30 9f    	add    DWORD PTR [rdi-0x60cffdfe],eax
    1146:	04 87                	add    al,0x87
    1148:	02 b8 02 01 52 04    	add    bh,BYTE PTR [rax+0x4520102]
    114e:	d5 02 e8             	(bad)
    1151:	02 01                	add    al,BYTE PTR [rcx]
    1153:	50                   	push   rax
    1154:	04 e8                	add    al,0xe8
    1156:	02 88 03 01 52 04    	add    cl,BYTE PTR [rax+0x4520103]
    115c:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    115d:	03 b8 03 01 50 04    	add    edi,DWORD PTR [rax+0x4500103]
    1163:	b8 03 d8 03 01       	mov    eax,0x103d803
    1168:	52                   	push   rdx
    1169:	04 f5                	add    al,0xf5
    116b:	03 88 04 01 50 04    	add    ecx,DWORD PTR [rax+0x4500104]
    1171:	88 04 a9             	mov    BYTE PTR [rcx+rbp*4],al
    1174:	04 01                	add    al,0x1
    1176:	52                   	push   rdx
    1177:	04 c1                	add    al,0xc1
    1179:	04 fa                	add    al,0xfa
    117b:	04 01                	add    al,0x1
    117d:	52                   	push   rdx
    117e:	04 92                	add    al,0x92
    1180:	05 9f 05 01 52       	add    eax,0x5201059f
    1185:	04 9f                	add    al,0x9f
    1187:	05 a6 05 02 30       	add    eax,0x300205a6
    118c:	9f                   	lahf
    118d:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    1190:	01 01                	add    DWORD PTR [rcx],eax
    1192:	01 01                	add    DWORD PTR [rcx],eax
    1194:	01 01                	add    DWORD PTR [rcx],eax
    1196:	01 01                	add    DWORD PTR [rcx],eax
    1198:	01 00                	add    DWORD PTR [rax],eax
    119a:	00 00                	add    BYTE PTR [rax],al
    119c:	00 01                	add    BYTE PTR [rcx],al
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	04 a4                	add    al,0xa4
    11a2:	01 87 02 02 30 9f    	add    DWORD PTR [rdi-0x60cffdfe],eax
    11a8:	04 87                	add    al,0x87
    11aa:	02 d5                	add    dl,ch
    11ac:	02 02                	add    al,BYTE PTR [rdx]
    11ae:	31 9f 04 d5 02 a5    	xor    DWORD PTR [rdi-0x5afd2afc],ebx
    11b4:	03 02                	add    eax,DWORD PTR [rdx]
    11b6:	32 9f 04 a5 03 f5    	xor    bl,BYTE PTR [rdi-0xafc5afc]
    11bc:	03 02                	add    eax,DWORD PTR [rdx]
    11be:	33 9f 04 f5 03 c1    	xor    ebx,DWORD PTR [rdi-0x3efc0afc]
    11c4:	04 02                	add    al,0x2
    11c6:	34 9f                	xor    al,0x9f
    11c8:	04 c1                	add    al,0xc1
    11ca:	04 cb                	add    al,0xcb
    11cc:	04 02                	add    al,0x2
    11ce:	35 9f 04 cb 04       	xor    eax,0x4cb049f
    11d3:	d4                   	(bad)
    11d4:	04 01                	add    al,0x1
    11d6:	54                   	push   rsp
    11d7:	04 d4                	add    al,0xd4
    11d9:	04 92                	add    al,0x92
    11db:	05 03 74 7f 9f       	add    eax,0x9f7f7403
    11e0:	04 9f                	add    al,0x9f
    11e2:	05 a6 05 02 30       	add    eax,0x300205a6
    11e7:	9f                   	lahf
    11e8:	00 00                	add    BYTE PTR [rax],al
    11ea:	00 04 24             	add    BYTE PTR [rsp],al
    11ed:	79 06                	jns    11f5 <main+0x25>
    11ef:	91                   	xchg   ecx,eax
    11f0:	00 93 20 93 20 00    	add    BYTE PTR [rbx+0x209320],dl
    11f6:	01 02                	add    DWORD PTR [rdx],eax
    11f8:	04 24                	add    al,0x24
    11fa:	71 02                	jno    11fe <main+0x2e>
    11fc:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1202:	00 04 3c             	add    BYTE PTR [rsp+rdi*1],al
    1205:	50                   	push   rax
    1206:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    1209:	63 65 01             	movsxd esp,DWORD PTR [rbp+0x1]
    120c:	50                   	push   rax
    120d:	00 00                	add    BYTE PTR [rax],al
    120f:	00 08                	add    BYTE PTR [rax],cl
    1211:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
    1214:	5d                   	pop    rbp
    1215:	01 54 04 63          	add    DWORD PTR [rsp+rax*1+0x63],edx
    1219:	79 01                	jns    121c <_start+0xc>
    121b:	55                   	push   rbp
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	00 04 55 6b 01 61 04 	add    BYTE PTR [rdx*2+0x461016b],al
    1227:	6b 79 01 54          	imul   edi,DWORD PTR [rcx+0x1],0x54
    122b:	00 00                	add    BYTE PTR [rax],al
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    1232:	71 01                	jno    1235 <_start+0x25>
    1234:	51                   	push   rcx
    1235:	04 71                	add    al,0x71
    1237:	79 01                	jns    123a <_start+0x2a>
    1239:	52                   	push   rdx
    123a:	00 03                	add    BYTE PTR [rbx],al
    123c:	00 04 24             	add    BYTE PTR [rsp],al
    123f:	3c 02                	cmp    al,0x2
    1241:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
    1247:	24 3c                	and    al,0x3c
    1249:	02 91 00 00 00 00    	add    dl,BYTE PTR [rcx+0x0]
    124f:	04 2a                	add    al,0x2a
    1251:	48 01 61 00          	add    QWORD PTR [rcx+0x0],rsp
    1255:	05 00 04 24 2a       	add    eax,0x2a240400
    125a:	02 30                	add    dh,BYTE PTR [rax]
    125c:	9f                   	lahf
    125d:	00 05 00 04 24 2a    	add    BYTE PTR [rip+0x2a240400],al        # 2a241663 <_end+0x2a23b64b>
    1263:	02 91 00 00 02 00    	add    dl,BYTE PTR [rcx+0x20000]
    1269:	04 2a                	add    al,0x2a
    126b:	3c 02                	cmp    al,0x2
    126d:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1273:	2a 3c 01             	sub    bh,BYTE PTR [rcx+rax*1]
    1276:	61                   	(bad)
    1277:	00 02                	add    BYTE PTR [rdx],al
    1279:	04 04                	add    al,0x4
    127b:	63 63 0a             	movsxd esp,DWORD PTR [rbx+0xa]
    127e:	9e                   	sahf
    127f:	08 11                	or     BYTE PTR [rcx],dl
    1281:	11 11                	adc    DWORD PTR [rcx],edx
    1283:	21 11                	and    DWORD PTR [rcx],edx
    1285:	12 12                	adc    dl,BYTE PTR [rdx]
    1287:	12 00                	adc    al,BYTE PTR [rax]
    1289:	02 00                	add    al,BYTE PTR [rax]
    128b:	04 42                	add    al,0x42
    128d:	55                   	push   rbp
    128e:	02 32                	add    dh,BYTE PTR [rdx]
    1290:	9f                   	lahf
    1291:	00 02                	add    BYTE PTR [rdx],al
    1293:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
    1296:	55                   	push   rbp
    1297:	02 91 00 00 00 00    	add    dl,BYTE PTR [rcx+0x0]
    129d:	04 48                	add    al,0x48
    129f:	79 01                	jns    12a2 <register_tm_clones+0x32>
    12a1:	61                   	(bad)
    12a2:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    12a5:	04 42                	add    al,0x42
    12a7:	48 02 31             	rex.W add sil,BYTE PTR [rcx]
    12aa:	9f                   	lahf
    12ab:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    12ae:	04 42                	add    al,0x42
    12b0:	48 02 91 00 00 02 00 	rex.W add dl,BYTE PTR [rcx+0x20000]
    12b7:	04 48                	add    al,0x48
    12b9:	55                   	push   rbp
    12ba:	02 30                	add    dh,BYTE PTR [rax]
    12bc:	9f                   	lahf
    12bd:	00 02                	add    BYTE PTR [rdx],al
    12bf:	00 04 48             	add    BYTE PTR [rax+rcx*2],al
    12c2:	55                   	push   rbp
    12c3:	01 61 00             	add    DWORD PTR [rcx+0x0],esp
    12c6:	02 00                	add    al,BYTE PTR [rax]
    12c8:	04 3c                	add    al,0x3c
    12ca:	42 02 31             	rex.X add sil,BYTE PTR [rcx]
    12cd:	9f                   	lahf
    12ce:	00 02                	add    BYTE PTR [rdx],al
    12d0:	00 04 3c             	add    BYTE PTR [rsp+rdi*1],al
    12d3:	42 02 91 00 00 04 00 	rex.X add dl,BYTE PTR [rcx+0x40000]
    12da:	04 3c                	add    al,0x3c
    12dc:	48 01 61 00          	add    QWORD PTR [rcx+0x0],rsp
    12e0:	05 00 04 3c 42       	add    eax,0x423c0400
    12e5:	02 31                	add    dh,BYTE PTR [rcx]
    12e7:	9f                   	lahf
    12e8:	00 05 00 04 3c 42    	add    BYTE PTR [rip+0x423c0400],al        # 423c16ee <_end+0x423bb6d6>
    12ee:	01 61 00             	add    DWORD PTR [rcx+0x0],esp
    12f1:	06                   	(bad)
    12f2:	08 04 63             	or     BYTE PTR [rbx+riz*2],al
    12f5:	63 0a                	movsxd ecx,DWORD PTR [rdx]
    12f7:	9e                   	sahf
    12f8:	08 11                	or     BYTE PTR [rcx],dl
    12fa:	11 11                	adc    DWORD PTR [rcx],edx
    12fc:	21 11                	and    DWORD PTR [rcx],edx
    12fe:	12 12                	adc    dl,BYTE PTR [rdx]
    1300:	12 00                	adc    al,BYTE PTR [rax]
    1302:	02 00                	add    al,BYTE PTR [rax]
    1304:	04 55                	add    al,0x55
    1306:	63 02                	movsxd eax,DWORD PTR [rdx]
    1308:	33 9f 00 02 00 04    	xor    ebx,DWORD PTR [rdi+0x4000200]
    130e:	55                   	push   rbp
    130f:	63 02                	movsxd eax,DWORD PTR [rdx]
    1311:	91                   	xchg   ecx,eax
    1312:	00 00                	add    BYTE PTR [rax],al
    1314:	04 00                	add    al,0x0
    1316:	04 55                	add    al,0x55
    1318:	79 01                	jns    131b <_Z16buildStringArrayPcj+0x1b>
    131a:	61                   	(bad)
    131b:	00 05 00 04 55 63    	add    BYTE PTR [rip+0x63550400],al        # 63551721 <_end+0x6354b709>
    1321:	02 31                	add    dh,BYTE PTR [rcx]
    1323:	9f                   	lahf
    1324:	00 05 00 04 55 63    	add    BYTE PTR [rip+0x63550400],al        # 6355172a <_end+0x6354b712>
    132a:	01 61 00             	add    DWORD PTR [rcx+0x0],esp
    132d:	0a 00                	or     al,BYTE PTR [rax]
    132f:	04 63                	add    al,0x63
    1331:	6b 01 61             	imul   eax,DWORD PTR [rcx],0x61
    1334:	00 0a                	add    BYTE PTR [rdx],cl
    1336:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    1339:	6b 0a 9e             	imul   ecx,DWORD PTR [rdx],0xffffff9e
    133c:	08 11                	or     BYTE PTR [rcx],dl
    133e:	11 11                	adc    DWORD PTR [rcx],edx
    1340:	21 11                	and    DWORD PTR [rcx],edx
    1342:	12 12                	adc    dl,BYTE PTR [rdx]
    1344:	12 00                	adc    al,BYTE PTR [rax]
    1346:	02 00                	add    al,BYTE PTR [rax]
    1348:	04 6b                	add    al,0x6b
    134a:	71 01                	jno    134d <_Z16buildStringArrayPcj+0x4d>
    134c:	51                   	push   rcx
    134d:	00 02                	add    BYTE PTR [rdx],al
    134f:	00 04 6b             	add    BYTE PTR [rbx+rbp*2],al
    1352:	71 0a                	jno    135e <_Z16buildStringArrayPcj+0x5e>
    1354:	9e                   	sahf
    1355:	08 11                	or     BYTE PTR [rcx],dl
    1357:	11 11                	adc    DWORD PTR [rcx],edx
    1359:	21 11                	and    DWORD PTR [rcx],edx
    135b:	12 12                	adc    dl,BYTE PTR [rdx]
    135d:	12 00                	adc    al,BYTE PTR [rax]
    135f:	1d 03 00 00 05       	sbb    eax,0x5000003
    1364:	00 08                	add    BYTE PTR [rax],cl
	...
    1372:	00 00                	add    BYTE PTR [rax],al
    1374:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    1377:	06                   	(bad)
    1378:	80 07 01             	add    BYTE PTR [rdi],0x1
    137b:	55                   	push   rbp
    137c:	04 80                	add    al,0x80
    137e:	07                   	(bad)
    137f:	8e 07                	mov    es,WORD PTR [rdi]
    1381:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    1384:	8e 07                	mov    es,WORD PTR [rdi]
    1386:	8f 07                	pop    QWORD PTR [rdi]
    1388:	04 a3                	add    al,0xa3
    138a:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    138d:	04 8f                	add    al,0x8f
    138f:	07                   	(bad)
    1390:	a9 07 01 55 04       	test   eax,0x4550107
    1395:	a9 07 ae 07 04       	test   eax,0x407ae07
    139a:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    13a1:	00 00 
    13a3:	00 00                	add    BYTE PTR [rax],al
    13a5:	00 00                	add    BYTE PTR [rax],al
    13a7:	04 c0                	add    al,0xc0
    13a9:	04 d7                	add    al,0xd7
    13ab:	04 01                	add    al,0x1
    13ad:	55                   	push   rbp
    13ae:	04 d7                	add    al,0xd7
    13b0:	04 ee                	add    al,0xee
    13b2:	05 01 58 04 ee       	add    eax,0xee045801
    13b7:	05 88 06 01 55       	add    eax,0x55010688
    13bc:	04 88                	add    al,0x88
    13be:	06                   	(bad)
    13bf:	8d 06                	lea    eax,[rsi]
    13c1:	04 a3                	add    al,0xa3
    13c3:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    13c6:	00 00                	add    BYTE PTR [rax],al
    13c8:	00 01                	add    BYTE PTR [rcx],al
    13ca:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    13cd:	05 a2 05 02 30       	add    eax,0x300205a2
    13d2:	9f                   	lahf
    13d3:	04 a2                	add    al,0xa2
    13d5:	05 ee 05 01 50       	add    eax,0x500105ee
    13da:	00 00                	add    BYTE PTR [rax],al
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	00 04 bb             	add    BYTE PTR [rbx+rdi*4],al
    13e1:	05 bf 05 01 54       	add    eax,0x540105bf
    13e6:	04 bf                	add    al,0xbf
    13e8:	05 ee 05 01 59       	add    eax,0x590105ee
    13ed:	00 01                	add    BYTE PTR [rcx],al
    13ef:	00 04 bb             	add    BYTE PTR [rbx+rdi*4],al
    13f2:	05 cc 05 02 71       	add    eax,0x710205cc
    13f7:	00 00                	add    BYTE PTR [rax],al
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	00 01                	add    BYTE PTR [rcx],al
    13fd:	04 dd                	add    al,0xdd
    13ff:	04 98                	add    al,0x98
    1401:	05 05 64 93 20       	add    eax,0x20936405
    1406:	93                   	xchg   ebx,eax
    1407:	20 04 a2             	and    BYTE PTR [rdx+riz*4],al
    140a:	05 a2 05 05 64       	add    eax,0x640505a2
    140f:	93                   	xchg   ebx,eax
    1410:	20 93 20 00 01 00    	and    BYTE PTR [rbx+0x10020],dl
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	00 01                	add    BYTE PTR [rcx],al
    141a:	04 d4                	add    al,0xd4
    141c:	04 d7                	add    al,0xd7
    141e:	04 01                	add    al,0x1
    1420:	55                   	push   rbp
    1421:	04 d7                	add    al,0xd7
    1423:	04 98                	add    al,0x98
    1425:	05 01 58 04 a2       	add    eax,0xa2045801
    142a:	05 a2 05 01 58       	add    eax,0x580105a2
	...
    1437:	01 04 e1             	add    DWORD PTR [rcx+riz*8],eax
    143a:	04 90                	add    al,0x90
    143c:	05 01 52 04 90       	add    eax,0x90045201
    1441:	05 94 05 01 50       	add    eax,0x50010594
    1446:	04 94                	add    al,0x94
    1448:	05 98 05 01 52       	add    eax,0x52010598
    144d:	04 a2                	add    al,0xa2
    144f:	05 a2 05 01 50       	add    eax,0x500105a2
    1454:	00 00                	add    BYTE PTR [rax],al
    1456:	01 04 f5 04 8c 05 03 	add    DWORD PTR [rsi*8+0x3058c04],eax
    145d:	71 20                	jno    147f <_Z16buildStringArrayPcj+0x17f>
    145f:	9f                   	lahf
    1460:	00 00                	add    BYTE PTR [rax],al
    1462:	01 04 f5 04 8c 05 06 	add    DWORD PTR [rsi*8+0x6058c04],eax
    1469:	a0 39 40 00 00 00 00 	movabs al,ds:0x2000000004039
    1470:	02 00 
    1472:	00 01                	add    BYTE PTR [rcx],al
    1474:	04 f5                	add    al,0xf5
    1476:	04 8c                	add    al,0x8c
    1478:	05 02 30 9f 04       	add    eax,0x49f3002
    147d:	8c 05 8c 05 01 54    	mov    WORD PTR [rip+0x5401058c],es        # 54011a0f <_end+0x5400b9f7>
	...
    1493:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    1496:	01 b7 01 01 55 04    	add    DWORD PTR [rdi+0x4550101],esi
    149c:	b7 01                	mov    bh,0x1
    149e:	99                   	cdq
    149f:	03 01                	add    eax,DWORD PTR [rcx]
    14a1:	56                   	push   rsi
    14a2:	04 99                	add    al,0x99
    14a4:	03 9e 03 04 a3 01    	add    ebx,DWORD PTR [rsi+0x1a30403]
    14aa:	55                   	push   rbp
    14ab:	9f                   	lahf
    14ac:	04 9e                	add    al,0x9e
    14ae:	03 8a 04 01 56 04    	add    ecx,DWORD PTR [rdx+0x4560104]
    14b4:	8a 04 8d 04 04 a3 01 	mov    al,BYTE PTR [rcx*4+0x1a30404]
    14bb:	55                   	push   rbp
    14bc:	9f                   	lahf
    14bd:	04 8d                	add    al,0x8d
    14bf:	04 97                	add    al,0x97
    14c1:	04 01                	add    al,0x1
    14c3:	56                   	push   rsi
    14c4:	04 97                	add    al,0x97
    14c6:	04 b1                	add    al,0xb1
    14c8:	04 01                	add    al,0x1
    14ca:	55                   	push   rbp
    14cb:	04 b1                	add    al,0xb1
    14cd:	04 b6                	add    al,0xb6
    14cf:	04 04                	add    al,0x4
    14d1:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    14d8:	00 00 
    14da:	00 00                	add    BYTE PTR [rax],al
    14dc:	04 9e                	add    al,0x9e
    14de:	03 b9 03 02 30 9f    	add    edi,DWORD PTR [rcx-0x60cffdfd]
    14e4:	04 b9                	add    al,0xb9
    14e6:	03 c1                	add    eax,ecx
    14e8:	03 01                	add    eax,DWORD PTR [rcx]
    14ea:	50                   	push   rax
    14eb:	04 c1                	add    al,0xc1
    14ed:	03 f3                	add    esi,ebx
    14ef:	03 01                	add    eax,DWORD PTR [rcx]
    14f1:	54                   	push   rsp
    14f2:	00 00                	add    BYTE PTR [rax],al
    14f4:	01 04 bd 01 81 02 05 	add    DWORD PTR [rdi*4+0x5028101],eax
    14fb:	64 93                	fs xchg ebx,eax
    14fd:	20 93 20 00 01 00    	and    BYTE PTR [rbx+0x10020],dl
    1503:	00 01                	add    BYTE PTR [rcx],al
    1505:	04 b4                	add    al,0xb4
    1507:	01 b7 01 01 55 04    	add    DWORD PTR [rdi+0x4550101],esi
    150d:	b7 01                	mov    bh,0x1
    150f:	81 02 01 56 00 00    	add    DWORD PTR [rdx],0x5601
    1515:	00 01                	add    BYTE PTR [rcx],al
    1517:	00 00                	add    BYTE PTR [rax],al
    1519:	00 04 bf             	add    BYTE PTR [rdi+rdi*4],al
    151c:	01 c8                	add    eax,ecx
    151e:	01 02                	add    DWORD PTR [rdx],eax
    1520:	75 00                	jne    1522 <_Z11hashMapCtorPFj8string_tEj+0x62>
    1522:	04 c8                	add    al,0xc8
    1524:	01 d2                	add    edx,edx
    1526:	01 02                	add    DWORD PTR [rdx],eax
    1528:	70 00                	jo     152a <_Z11hashMapCtorPFj8string_tEj+0x6a>
    152a:	04 d2                	add    al,0xd2
    152c:	01 da                	add    edx,ebx
    152e:	01 05 75 00 73 00    	add    DWORD PTR [rip+0x730075],eax        # 7315a9 <_end+0x72b591>
    1534:	22 00                	and    al,BYTE PTR [rax]
    1536:	00 01                	add    BYTE PTR [rcx],al
    1538:	04 e6                	add    al,0xe6
    153a:	01 fd                	add    ebp,edi
    153c:	01 03                	add    DWORD PTR [rbx],eax
    153e:	70 20                	jo     1560 <_Z11hashMapCtorPFj8string_tEj+0xa0>
    1540:	9f                   	lahf
    1541:	00 00                	add    BYTE PTR [rax],al
    1543:	01 04 e6             	add    DWORD PTR [rsi+riz*8],eax
    1546:	01 fd                	add    ebp,edi
    1548:	01 06                	add    DWORD PTR [rsi],eax
    154a:	a0 bd 41 00 00 00 00 	movabs al,ds:0x20000000041bd
    1551:	02 00 
    1553:	00 01                	add    BYTE PTR [rcx],al
    1555:	04 e6                	add    al,0xe6
    1557:	01 fd                	add    ebp,edi
    1559:	01 02                	add    DWORD PTR [rdx],eax
    155b:	30 9f 04 fd 01 fd    	xor    BYTE PTR [rdi-0x2fe02fc],bl
    1561:	01 01                	add    DWORD PTR [rcx],eax
    1563:	51                   	push   rcx
    1564:	00 01                	add    BYTE PTR [rcx],al
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	00 04 96             	add    BYTE PTR [rsi+rdx*4],al
    156b:	02 97 03 01 56 04    	add    dl,BYTE PTR [rdi+0x4560103]
    1571:	8d 04 97             	lea    eax,[rdi+rdx*4]
    1574:	04 01                	add    al,0x1
    1576:	56                   	push   rsi
    1577:	00 00                	add    BYTE PTR [rax],al
    1579:	00 04 c2             	add    BYTE PTR [rdx+rax*8],al
    157c:	02 d6                	add    dl,dh
    157e:	02 01                	add    al,BYTE PTR [rcx]
    1580:	51                   	push   rcx
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 04 c2             	add    BYTE PTR [rdx+rax*8],al
    1586:	02 d7                	add    dl,bh
    1588:	02 02                	add    al,BYTE PTR [rdx]
    158a:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
    1590:	00 04 c2             	add    BYTE PTR [rdx+rax*8],al
    1593:	02 c9                	add    cl,cl
    1595:	02 06                	add    al,BYTE PTR [rsi]
    1597:	70 00                	jo     1599 <_Z17hashMapAddElementP7HashMap8string_t+0x29>
    1599:	71 00                	jno    159b <_Z17hashMapAddElementP7HashMap8string_t+0x2b>
    159b:	22 9f 04 c9 02 d6    	and    bl,BYTE PTR [rdi-0x29fd36fc]
    15a1:	02 01                	add    al,BYTE PTR [rcx]
    15a3:	55                   	push   rbp
    15a4:	00 00                	add    BYTE PTR [rax],al
    15a6:	00 00                	add    BYTE PTR [rax],al
    15a8:	01 01                	add    DWORD PTR [rcx],eax
    15aa:	00 00                	add    BYTE PTR [rax],al
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    15b1:	02 85 03 01 50 04    	add    al,BYTE PTR [rbp+0x4500103]
    15b7:	85 03                	test   DWORD PTR [rbx],eax
    15b9:	8f 03                	pop    QWORD PTR [rbx]
    15bb:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    15be:	8f 03                	pop    QWORD PTR [rbx]
    15c0:	97                   	xchg   edi,eax
    15c1:	03 01                	add    eax,DWORD PTR [rcx]
    15c3:	50                   	push   rax
    15c4:	04 8d                	add    al,0x8d
    15c6:	04 91                	add    al,0x91
    15c8:	04 01                	add    al,0x1
    15ca:	50                   	push   rax
    15cb:	04 91                	add    al,0x91
    15cd:	04 97                	add    al,0x97
    15cf:	04 02                	add    al,0x2
    15d1:	76 08                	jbe    15db <_Z17hashMapAddElementP7HashMap8string_t+0x6b>
    15d3:	00 00                	add    BYTE PTR [rax],al
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 00                	add    BYTE PTR [rax],al
    15d9:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    15dc:	42 02 75 00          	rex.X add sil,BYTE PTR [rbp+0x0]
    15e0:	04 42                	add    al,0x42
    15e2:	92                   	xchg   edx,eax
    15e3:	01 02                	add    DWORD PTR [rdx],eax
    15e5:	73 00                	jae    15e7 <_Z17hashMapAddElementP7HashMap8string_t+0x77>
    15e7:	04 92                	add    al,0x92
    15e9:	01 93 01 02 70 00    	add    DWORD PTR [rbx+0x700201],edx
    15ef:	00 03                	add    BYTE PTR [rbx],al
    15f1:	07                   	(bad)
    15f2:	07                   	(bad)
    15f3:	01 01                	add    DWORD PTR [rcx],eax
    15f5:	01 01                	add    DWORD PTR [rcx],eax
    15f7:	00 04 75 75 02 31 9f 	add    BYTE PTR [rsi*2-0x60cefd8b],al
    15fe:	04 75                	add    al,0x75
    1600:	7c 02                	jl     1604 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    1602:	32 9f 04 7c 8e 01    	xor    bl,BYTE PTR [rdi+0x18e7c04]
    1608:	02 33                	add    dh,BYTE PTR [rbx]
    160a:	9f                   	lahf
    160b:	04 8e                	add    al,0x8e
    160d:	01 93 01 02 34 9f    	add    DWORD PTR [rbx-0x60cbfdff],edx
    1613:	00 00                	add    BYTE PTR [rax],al
    1615:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    1618:	25 06 fa a1 0a       	and    eax,0xaa1fa06
    161d:	00 00                	add    BYTE PTR [rax],al
    161f:	9f                   	lahf
    1620:	00 00                	add    BYTE PTR [rax],al
    1622:	00 00                	add    BYTE PTR [rax],al
    1624:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1627:	06                   	(bad)
    1628:	ee                   	out    dx,al
    1629:	06                   	(bad)
    162a:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    162d:	ee                   	out    dx,al
    162e:	06                   	(bad)
    162f:	ef                   	out    dx,eax
    1630:	06                   	(bad)
    1631:	04 a3                	add    al,0xa3
    1633:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	00 00                	add    BYTE PTR [rax],al
    163a:	00 00                	add    BYTE PTR [rax],al
    163c:	00 04 a2             	add    BYTE PTR [rdx+riz*4],al
    163f:	06                   	(bad)
    1640:	e1 06                	loope  1648 <_Z17hashMapPopElementP7HashMap8string_t+0x8>
    1642:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    1645:	e6 06                	out    0x6,al
    1647:	e8 06 01 50 04       	call   4501752 <_end+0x44fb73a>
    164c:	e8 06 ea 06 02       	call   2070057 <_end+0x206a03f>
    1651:	74 00                	je     1653 <_Z17hashMapPopElementP7HashMap8string_t+0x13>
    1653:	00 00                	add    BYTE PTR [rax],al
    1655:	01 04 c3             	add    DWORD PTR [rbx+rax*8],eax
    1658:	06                   	(bad)
    1659:	da 06                	fiadd  DWORD PTR [rsi]
    165b:	03 71 20             	add    esi,DWORD PTR [rcx+0x20]
    165e:	9f                   	lahf
    165f:	00 00                	add    BYTE PTR [rax],al
    1661:	01 04 c3             	add    DWORD PTR [rbx+rax*8],eax
    1664:	06                   	(bad)
    1665:	da 06                	fiadd  DWORD PTR [rsi]
    1667:	03 91 00 9f 00 02    	add    edx,DWORD PTR [rcx+0x2009f00]
    166d:	00 00                	add    BYTE PTR [rax],al
    166f:	01 04 c3             	add    DWORD PTR [rbx+rax*8],eax
    1672:	06                   	(bad)
    1673:	da 06                	fiadd  DWORD PTR [rsi]
    1675:	02 30                	add    dh,BYTE PTR [rax]
    1677:	9f                   	lahf
    1678:	04 da                	add    al,0xda
    167a:	06                   	(bad)
    167b:	da 06                	fiadd  DWORD PTR [rsi]
    167d:	01 52 00             	add    DWORD PTR [rdx+0x0],edx
    1680:	8c 01                	mov    WORD PTR [rcx],es
    1682:	00 00                	add    BYTE PTR [rax],al
    1684:	05 00 08 00 00       	add    eax,0x800
	...
    1695:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1698:	02 aa 02 01 55 04    	add    ch,BYTE PTR [rdx+0x4550102]
    169e:	aa                   	stos   BYTE PTR es:[rdi],al
    169f:	02 d0                	add    dl,al
    16a1:	02 01                	add    al,BYTE PTR [rcx]
    16a3:	56                   	push   rsi
    16a4:	04 d0                	add    al,0xd0
    16a6:	02 d3                	add    dl,bl
    16a8:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    16ab:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    16ae:	04 d3                	add    al,0xd3
    16b0:	02 ed                	add    ch,ch
    16b2:	02 01                	add    al,BYTE PTR [rcx]
    16b4:	55                   	push   rbp
    16b5:	04 ed                	add    al,0xed
    16b7:	02 f2                	add    dh,dl
    16b9:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    16bc:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    16c7:	00 00                	add    BYTE PTR [rax],al
    16c9:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    16cc:	02 aa 02 01 54 04    	add    ch,BYTE PTR [rdx+0x4540102]
    16d2:	aa                   	stos   BYTE PTR es:[rdi],al
    16d3:	02 d2                	add    dl,dl
    16d5:	02 01                	add    al,BYTE PTR [rcx]
    16d7:	5c                   	pop    rsp
    16d8:	04 d2                	add    al,0xd2
    16da:	02 d3                	add    dl,bl
    16dc:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    16df:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    16e3:	d3 02                	rol    DWORD PTR [rdx],cl
    16e5:	e6 02                	out    0x2,al
    16e7:	01 54 04 e6          	add    DWORD PTR [rsp+rax*1-0x1a],edx
    16eb:	02 f2                	add    dh,dl
    16ed:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    16f0:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
    16f4:	00 00                	add    BYTE PTR [rax],al
    16f6:	00 00                	add    BYTE PTR [rax],al
    16f8:	04 a3                	add    al,0xa3
    16fa:	02 bc 02 01 55 04 c1 	add    bh,BYTE PTR [rdx+rax*1-0x3efbaaff]
    1701:	02 d3                	add    dl,bl
    1703:	02 01                	add    al,BYTE PTR [rcx]
    1705:	55                   	push   rbp
    1706:	00 00                	add    BYTE PTR [rax],al
    1708:	00 00                	add    BYTE PTR [rax],al
    170a:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    170d:	02 aa 02 02 30 9f    	add    ch,BYTE PTR [rdx-0x60cffdfe]
    1713:	04 aa                	add    al,0xaa
    1715:	02 cc                	add    cl,ah
    1717:	02 01                	add    al,BYTE PTR [rcx]
    1719:	53                   	push   rbx
    171a:	00 01                	add    BYTE PTR [rcx],al
    171c:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    171f:	02 bd 02 02 3a 9f    	add    bh,BYTE PTR [rbp-0x60c5fdfe]
    1725:	00 01                	add    BYTE PTR [rcx],al
    1727:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    172a:	02 bc 02 01 55 00 00 	add    bh,BYTE PTR [rdx+rax*1+0x5501]
	...
    173d:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1740:	64 01 55 04          	add    DWORD PTR fs:[rbp+0x4],edx
    1744:	64 97                	fs xchg edi,eax
    1746:	01 01                	add    DWORD PTR [rcx],eax
    1748:	53                   	push   rbx
    1749:	04 97                	add    al,0x97
    174b:	01 d6                	add    esi,edx
    174d:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1750:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1753:	04 d6                	add    al,0xd6
    1755:	01 e2                	add    edx,esp
    1757:	01 01                	add    DWORD PTR [rcx],eax
    1759:	53                   	push   rbx
    175a:	04 e2                	add    al,0xe2
    175c:	01 e4                	add    esp,esp
    175e:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1761:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1764:	04 e4                	add    al,0xe4
    1766:	01 fe                	add    esi,edi
    1768:	01 01                	add    DWORD PTR [rcx],eax
    176a:	55                   	push   rbp
    176b:	04 fe                	add    al,0xfe
    176d:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    1773:	55                   	push   rbp
    1774:	9f                   	lahf
	...
    177d:	00 00                	add    BYTE PTR [rax],al
    177f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1782:	3a 01                	cmp    al,BYTE PTR [rcx]
    1784:	54                   	push   rsp
    1785:	04 3a                	add    al,0x3a
    1787:	82                   	(bad)
    1788:	01 01                	add    DWORD PTR [rcx],eax
    178a:	5c                   	pop    rsp
    178b:	04 82                	add    al,0x82
    178d:	01 e4                	add    esp,esp
    178f:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1792:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1796:	e4 01                	in     al,0x1
    1798:	f7 01 01 54 04 f7    	test   DWORD PTR [rcx],0xf7045401
    179e:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    17a4:	54                   	push   rsp
    17a5:	9f                   	lahf
    17a6:	00 00                	add    BYTE PTR [rax],al
    17a8:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
    17ab:	b2 01                	mov    dl,0x1
    17ad:	01 5d 00             	add    DWORD PTR [rbp+0x0],ebx
    17b0:	00 00                	add    BYTE PTR [rax],al
    17b2:	00 00                	add    BYTE PTR [rax],al
    17b4:	04 82                	add    al,0x82
    17b6:	01 93 01 01 50 04    	add    DWORD PTR [rbx+0x4500101],edx
    17bc:	93                   	xchg   ebx,eax
    17bd:	01 b2 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],esi
    17c3:	00 00                	add    BYTE PTR [rax],al
    17c5:	00 00                	add    BYTE PTR [rax],al
    17c7:	04 97                	add    al,0x97
    17c9:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    17cf:	a9 01 b2 01 01       	test   eax,0x101b201
    17d4:	53                   	push   rbx
    17d5:	00 01                	add    BYTE PTR [rcx],al
    17d7:	00 04 7a             	add    BYTE PTR [rdx+rdi*2],al
    17da:	82                   	(bad)
    17db:	01 02                	add    DWORD PTR [rdx],eax
    17dd:	30 9f 00 01 00 04    	xor    BYTE PTR [rdi+0x4000100],bl
    17e3:	7a 82                	jp     1767 <_Z20hashMapSearchElementP7HashMap8string_t+0x47>
    17e5:	01 01                	add    DWORD PTR [rcx],eax
    17e7:	53                   	push   rbx
    17e8:	00 01                	add    BYTE PTR [rcx],al
    17ea:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    17ed:	01 aa 01 01 5d 00    	add    DWORD PTR [rdx+0x5d0101],ebp
    17f3:	01 00                	add    DWORD PTR [rax],eax
    17f5:	00 00                	add    BYTE PTR [rax],al
    17f7:	04 9c                	add    al,0x9c
    17f9:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    17ff:	a9 01 aa 01 01       	test   eax,0x101aa01
    1804:	53                   	push   rbx
    1805:	00 01                	add    BYTE PTR [rcx],al
    1807:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    180a:	01 aa 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],ebp
    1810:	5a                   	pop    rdx
    1811:	14 00                	adc    al,0x0
    1813:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 2019 <_Z12pushListElemP4List8string_t+0xd9>
	...
    1829:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    182c:	08 c2                	or     dl,al
    182e:	09 01                	or     DWORD PTR [rcx],eax
    1830:	55                   	push   rbp
    1831:	04 c2                	add    al,0xc2
    1833:	09 f0                	or     eax,esi
    1835:	10 03                	adc    BYTE PTR [rbx],al
    1837:	76 98                	jbe    17d1 <_Z20hashMapSearchElementP7HashMap8string_t+0xb1>
    1839:	7f 04                	jg     183f <_Z11hashMapDtorP7HashMap+0x1f>
    183b:	f0 10 f4             	lock adc ah,dh
    183e:	10 03                	adc    BYTE PTR [rbx],al
    1840:	77 90                	ja     17d2 <_Z20hashMapSearchElementP7HashMap8string_t+0xb2>
    1842:	7f 04                	jg     1848 <_Z11hashMapDtorP7HashMap+0x28>
    1844:	f4                   	hlt
    1845:	10 fb                	adc    bl,bh
    1847:	10 08                	adc    BYTE PTR [rax],cl
    1849:	91                   	xchg   ecx,eax
    184a:	70 09                	jo     1855 <_Z11hashMapDtorP7HashMap+0x35>
    184c:	e0 1a                	loopne 1868 <_Z11hashMapDtorP7HashMap+0x48>
    184e:	08 78 1c             	or     BYTE PTR [rax+0x1c],bh
    1851:	04 fb                	add    al,0xfb
    1853:	10 eb                	adc    bl,ch
    1855:	11 03                	adc    DWORD PTR [rbx],eax
    1857:	76 98                	jbe    17f1 <_Z13getLoadFactorP7HashMap+0x1>
    1859:	7f 04                	jg     185f <_Z11hashMapDtorP7HashMap+0x3f>
    185b:	eb 11                	jmp    186e <_Z11hashMapDtorP7HashMap+0x4e>
    185d:	85 12                	test   DWORD PTR [rdx],edx
    185f:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    1862:	85 12                	test   DWORD PTR [rdx],edx
    1864:	a9 12 03 76 98       	test   eax,0x98760312
    1869:	7f 00                	jg     186b <_Z11hashMapDtorP7HashMap+0x4b>
	...
    1873:	00 00                	add    BYTE PTR [rax],al
    1875:	04 f0                	add    al,0xf0
    1877:	08 d7                	or     bh,dl
    1879:	09 01                	or     DWORD PTR [rcx],eax
    187b:	54                   	push   rsp
    187c:	04 d7                	add    al,0xd7
    187e:	09 e7                	or     edi,esp
    1880:	0a 03                	or     al,BYTE PTR [rbx]
    1882:	76 a8                	jbe    182c <_Z11hashMapDtorP7HashMap+0xc>
    1884:	7f 04                	jg     188a <_Z11hashMapDtorP7HashMap+0x6a>
    1886:	e7 0a                	out    0xa,eax
    1888:	eb 11                	jmp    189b <_Z6resizeP7HashMapj+0xb>
    188a:	04 a3                	add    al,0xa3
    188c:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1890:	eb 11                	jmp    18a3 <_Z6resizeP7HashMapj+0x13>
    1892:	fe                   	(bad)
    1893:	11 01                	adc    DWORD PTR [rcx],eax
    1895:	54                   	push   rsp
    1896:	04 fe                	add    al,0xfe
    1898:	11 a9 12 04 a3 01    	adc    DWORD PTR [rcx+0x1a30412],ebp
    189e:	54                   	push   rsp
    189f:	9f                   	lahf
    18a0:	00 00                	add    BYTE PTR [rax],al
    18a2:	00 00                	add    BYTE PTR [rax],al
    18a4:	00 00                	add    BYTE PTR [rax],al
    18a6:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    18a9:	08 90 09 06 51 93    	or     BYTE PTR [rax-0x6caef9f7],dl
    18af:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    18b2:	08 04 c9             	or     BYTE PTR [rcx+rcx*8],al
    18b5:	09 ed                	or     ebp,ebp
    18b7:	09 06                	or     DWORD PTR [rsi],eax
    18b9:	5d                   	pop    rbp
    18ba:	93                   	xchg   ebx,eax
    18bb:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    18be:	08 04 a9             	or     BYTE PTR [rcx+rbp*4],al
    18c1:	0a d0                	or     dl,al
    18c3:	0a 06                	or     al,BYTE PTR [rsi]
    18c5:	5d                   	pop    rbp
    18c6:	93                   	xchg   ebx,eax
    18c7:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    18ca:	08 00                	or     BYTE PTR [rax],al
	...
    18d8:	00 00                	add    BYTE PTR [rax],al
    18da:	04 f0                	add    al,0xf0
    18dc:	08 d7                	or     bh,dl
    18de:	09 01                	or     DWORD PTR [rcx],eax
    18e0:	58                   	pop    rax
    18e1:	04 d7                	add    al,0xd7
    18e3:	09 f0                	or     eax,esi
    18e5:	10 03                	adc    BYTE PTR [rbx],al
    18e7:	76 dc                	jbe    18c5 <_Z6resizeP7HashMapj+0x35>
    18e9:	7e 04                	jle    18ef <_Z6resizeP7HashMapj+0x5f>
    18eb:	f0 10 f4             	lock adc ah,dh
    18ee:	10 03                	adc    BYTE PTR [rbx],al
    18f0:	77 d4                	ja     18c6 <_Z6resizeP7HashMapj+0x36>
    18f2:	7e 04                	jle    18f8 <_Z6resizeP7HashMapj+0x68>
    18f4:	f4                   	hlt
    18f5:	10 fb                	adc    bl,bh
    18f7:	10 08                	adc    BYTE PTR [rax],cl
    18f9:	91                   	xchg   ecx,eax
    18fa:	70 09                	jo     1905 <_Z6resizeP7HashMapj+0x75>
    18fc:	e0 1a                	loopne 1918 <_Z6resizeP7HashMapj+0x88>
    18fe:	08 b4 1c 04 fb 10 eb 	or     BYTE PTR [rsp+rbx*1-0x14ef04fc],dh
    1905:	11 03                	adc    DWORD PTR [rbx],eax
    1907:	76 dc                	jbe    18e5 <_Z6resizeP7HashMapj+0x55>
    1909:	7e 04                	jle    190f <_Z6resizeP7HashMapj+0x7f>
    190b:	eb 11                	jmp    191e <_Z6resizeP7HashMapj+0x8e>
    190d:	89 12                	mov    DWORD PTR [rdx],edx
    190f:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    1912:	89 12                	mov    DWORD PTR [rdx],edx
    1914:	a9 12 03 76 dc       	test   eax,0xdc760312
    1919:	7e 00                	jle    191b <_Z6resizeP7HashMapj+0x8b>
	...
    1923:	00 00                	add    BYTE PTR [rax],al
    1925:	04 f0                	add    al,0xf0
    1927:	08 d7                	or     bh,dl
    1929:	09 01                	or     DWORD PTR [rcx],eax
    192b:	59                   	pop    rcx
    192c:	04 d7                	add    al,0xd7
    192e:	09 f0                	or     eax,esi
    1930:	09 01                	or     DWORD PTR [rcx],eax
    1932:	5f                   	pop    rdi
    1933:	04 f0                	add    al,0xf0
    1935:	09 eb                	or     ebx,ebp
    1937:	11 04 a3             	adc    DWORD PTR [rbx+riz*4],eax
    193a:	01 59 9f             	add    DWORD PTR [rcx-0x61],ebx
    193d:	04 eb                	add    al,0xeb
    193f:	11 89 12 01 59 04    	adc    DWORD PTR [rcx+0x4590112],ecx
    1945:	89 12                	mov    DWORD PTR [rdx],edx
    1947:	a9 12 04 a3 01       	test   eax,0x1a30412
    194c:	59                   	pop    rcx
    194d:	9f                   	lahf
	...
    195a:	00 00                	add    BYTE PTR [rax],al
    195c:	00 04 c7             	add    BYTE PTR [rdi+rax*8],al
    195f:	0a cd                	or     cl,ch
    1961:	0a 01                	or     al,BYTE PTR [rcx]
    1963:	50                   	push   rax
    1964:	04 cd                	add    al,0xcd
    1966:	0a e7                	or     ah,bh
    1968:	0a 01                	or     al,BYTE PTR [rcx]
    196a:	5f                   	pop    rdi
    196b:	04 e7                	add    al,0xe7
    196d:	0a f0                	or     dh,al
    196f:	10 03                	adc    BYTE PTR [rbx],al
    1971:	76 e8                	jbe    195b <_Z6resizeP7HashMapj+0xcb>
    1973:	7e 04                	jle    1979 <_Z6resizeP7HashMapj+0xe9>
    1975:	f0 10 f4             	lock adc ah,dh
    1978:	10 03                	adc    BYTE PTR [rbx],al
    197a:	77 e0                	ja     195c <_Z6resizeP7HashMapj+0xcc>
    197c:	7e 04                	jle    1982 <_Z6resizeP7HashMapj+0xf2>
    197e:	f4                   	hlt
    197f:	10 fb                	adc    bl,bh
    1981:	10 08                	adc    BYTE PTR [rax],cl
    1983:	91                   	xchg   ecx,eax
    1984:	70 09                	jo     198f <_Z6resizeP7HashMapj+0xff>
    1986:	e0 1a                	loopne 19a2 <_Z6resizeP7HashMapj+0x112>
    1988:	08 a8 1c 04 fb 10    	or     BYTE PTR [rax+0x10fb041c],ch
    198e:	eb 11                	jmp    19a1 <_Z6resizeP7HashMapj+0x111>
    1990:	03 76 e8             	add    esi,DWORD PTR [rsi-0x18]
    1993:	7e 04                	jle    1999 <_Z6resizeP7HashMapj+0x109>
    1995:	8a 12                	mov    dl,BYTE PTR [rdx]
    1997:	a9 12 03 76 e8       	test   eax,0xe8760312
    199c:	7e 00                	jle    199e <_Z6resizeP7HashMapj+0x10e>
	...
    19aa:	04 e7                	add    al,0xe7
    19ac:	0a e7                	or     ah,bh
    19ae:	0a 01                	or     al,BYTE PTR [rcx]
    19b0:	50                   	push   rax
    19b1:	04 e7                	add    al,0xe7
    19b3:	0a f0                	or     dh,al
    19b5:	10 03                	adc    BYTE PTR [rbx],al
    19b7:	76 a8                	jbe    1961 <_Z6resizeP7HashMapj+0xd1>
    19b9:	7f 04                	jg     19bf <_Z6resizeP7HashMapj+0x12f>
    19bb:	f0 10 f4             	lock adc ah,dh
    19be:	10 03                	adc    BYTE PTR [rbx],al
    19c0:	77 a0                	ja     1962 <_Z6resizeP7HashMapj+0xd2>
    19c2:	7f 04                	jg     19c8 <_Z6resizeP7HashMapj+0x138>
    19c4:	f4                   	hlt
    19c5:	10 fb                	adc    bl,bh
    19c7:	10 08                	adc    BYTE PTR [rax],cl
    19c9:	91                   	xchg   ecx,eax
    19ca:	70 09                	jo     19d5 <_Z6resizeP7HashMapj+0x145>
    19cc:	e0 1a                	loopne 19e8 <_Z6resizeP7HashMapj+0x158>
    19ce:	08 68 1c             	or     BYTE PTR [rax+0x1c],ch
    19d1:	04 fb                	add    al,0xfb
    19d3:	10 eb                	adc    bl,ch
    19d5:	11 03                	adc    DWORD PTR [rbx],eax
    19d7:	76 a8                	jbe    1981 <_Z6resizeP7HashMapj+0xf1>
    19d9:	7f 04                	jg     19df <_Z6resizeP7HashMapj+0x14f>
    19db:	8a 12                	mov    dl,BYTE PTR [rdx]
    19dd:	a9 12 03 76 a8       	test   eax,0xa8760312
    19e2:	7f 00                	jg     19e4 <_Z6resizeP7HashMapj+0x154>
    19e4:	01 00                	add    DWORD PTR [rax],eax
    19e6:	00 00                	add    BYTE PTR [rax],al
    19e8:	04 e7                	add    al,0xe7
    19ea:	0a eb                	or     ch,bl
    19ec:	11 06                	adc    DWORD PTR [rsi],eax
    19ee:	0c 73                	or     al,0x73
    19f0:	99                   	cdq
    19f1:	0f 00 9f 04 8a 12 a9 	ltr    WORD PTR [rdi-0x56ed75fc]
    19f8:	12 06                	adc    al,BYTE PTR [rsi]
    19fa:	0c 73                	or     al,0x73
    19fc:	99                   	cdq
    19fd:	0f 00 9f 00 01 00 00 	ltr    WORD PTR [rdi+0x100]
    1a04:	00 00                	add    BYTE PTR [rax],al
    1a06:	00 00                	add    BYTE PTR [rax],al
    1a08:	00 00                	add    BYTE PTR [rax],al
    1a0a:	00 01                	add    BYTE PTR [rcx],al
	...
    1a14:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    1a17:	0c f4                	or     al,0xf4
    1a19:	0c 0a                	or     al,0xa
    1a1b:	9e                   	sahf
    1a1c:	08 00                	or     BYTE PTR [rax],al
    1a1e:	00 00                	add    BYTE PTR [rax],al
    1a20:	00 00                	add    BYTE PTR [rax],al
    1a22:	00 00                	add    BYTE PTR [rax],al
    1a24:	00 04 8c             	add    BYTE PTR [rsp+rcx*4],al
    1a27:	0d a7 0d 01 63       	or     eax,0x63010da7
    1a2c:	04 a7                	add    al,0xa7
    1a2e:	0d b9 0d 03 76       	or     eax,0x76030db9
    1a33:	a0 7f 04 b9 0d ca 0f 	movabs al,ds:0x63010fca0db9047f
    1a3a:	01 63 
    1a3c:	04 fb                	add    al,0xfb
    1a3e:	10 83 11 01 63 04    	adc    BYTE PTR [rbx+0x4630111],al
    1a44:	8b 11                	mov    edx,DWORD PTR [rcx]
    1a46:	b2 11                	mov    dl,0x11
    1a48:	0a 9e 08 00 00 00    	or     bl,BYTE PTR [rsi+0x8]
    1a4e:	00 00                	add    BYTE PTR [rax],al
    1a50:	00 00                	add    BYTE PTR [rax],al
    1a52:	00 04 b2             	add    BYTE PTR [rdx+rsi*4],al
    1a55:	11 ea                	adc    edx,ebp
    1a57:	11 01                	adc    DWORD PTR [rcx],eax
    1a59:	63 04 ea             	movsxd eax,DWORD PTR [rdx+rbp*8]
    1a5c:	11 eb                	adc    ebx,ebp
    1a5e:	11 0e                	adc    DWORD PTR [rsi],ecx
    1a60:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1a61:	2e 08 00             	cs or  BYTE PTR [rax],al
    1a64:	00 00                	add    BYTE PTR [rax],al
    1a66:	00 00                	add    BYTE PTR [rax],al
    1a68:	00 00                	add    BYTE PTR [rax],al
    1a6a:	00 12                	add    BYTE PTR [rdx],dl
    1a6c:	1b 9f 04 8f 12 9b    	sbb    ebx,DWORD PTR [rdi-0x64ed70fc]
    1a72:	12 01                	adc    al,BYTE PTR [rcx]
    1a74:	63 04 9b             	movsxd eax,DWORD PTR [rbx+rbx*4]
    1a77:	12 a9 12 03 76 f0    	adc    ch,BYTE PTR [rcx-0xf89fcee]
    1a7d:	7e 00                	jle    1a7f <_Z6resizeP7HashMapj+0x1ef>
    1a7f:	01 00                	add    DWORD PTR [rax],eax
    1a81:	00 00                	add    BYTE PTR [rax],al
    1a83:	04 da                	add    al,0xda
    1a85:	0f e7 10             	movntq QWORD PTR [rax],mm2
    1a88:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    1a8b:	8a 12                	mov    dl,BYTE PTR [rdx]
    1a8d:	8f                   	(bad)
    1a8e:	12 01                	adc    al,BYTE PTR [rcx]
    1a90:	53                   	push   rbx
    1a91:	00 00                	add    BYTE PTR [rax],al
    1a93:	00 04 e7             	add    BYTE PTR [rdi+riz*8],al
    1a96:	09 f7                	or     edi,esi
    1a98:	09 02                	or     DWORD PTR [rdx],eax
    1a9a:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1aa0:	e7 0a                	out    0xa,eax
    1aa2:	e7 0a                	out    0xa,eax
    1aa4:	02 30                	add    dh,BYTE PTR [rax]
    1aa6:	9f                   	lahf
    1aa7:	00 00                	add    BYTE PTR [rax],al
    1aa9:	00 00                	add    BYTE PTR [rax],al
    1aab:	00 00                	add    BYTE PTR [rax],al
    1aad:	00 04 87             	add    BYTE PTR [rdi+rax*4],al
    1ab0:	0b ac 0b 02 30 9f 04 	or     ebp,DWORD PTR [rbx+rcx*1+0x49f3002]
    1ab7:	83 11 c1             	adc    DWORD PTR [rcx],0xffffffc1
    1aba:	11 02                	adc    DWORD PTR [rdx],eax
    1abc:	30 9f 04 cc 11 eb    	xor    BYTE PTR [rdi-0x14ee33fc],bl
    1ac2:	11 02                	adc    DWORD PTR [rdx],eax
    1ac4:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1aca:	8e 0c 94             	mov    cs,WORD PTR [rsp+rdx*4]
    1acd:	0c 02                	or     al,0x2
    1acf:	52                   	push   rdx
    1ad0:	f0 00 0c 00          	lock add BYTE PTR [rax+rax*1],cl
    1ad4:	04 ff                	add    al,0xff
    1ad6:	0b 91 0c 0e 70 00    	or     edx,DWORD PTR [rcx+0x700e0c]
    1adc:	76 f0                	jbe    1ace <_Z6resizeP7HashMapj+0x23e>
    1ade:	7e 06                	jle    1ae6 <_Z15crc32HashString8string_t+0x6>
    1ae0:	1c 0a                	sbb    al,0xa
    1ae2:	e8 03 1b 9f 93       	call   ffffffff939f35ea <_end+0xffffffff939ed5d2>
    1ae7:	08 00                	or     BYTE PTR [rax],al
    1ae9:	01 00                	add    DWORD PTR [rax],eax
    1aeb:	04 bf                	add    al,0xbf
    1aed:	0b bf 0b 02 30 9f    	or     edi,DWORD PTR [rdi-0x60cffdf5]
    1af3:	00 01                	add    BYTE PTR [rcx],al
    1af5:	08 04 ff             	or     BYTE PTR [rdi+rdi*8],al
    1af8:	0b ff                	or     edi,edi
    1afa:	0b 06                	or     eax,DWORD PTR [rsi]
    1afc:	a0 c5 9b 00 00 00 00 	movabs al,ds:0x801000000009bc5
    1b03:	01 08 
    1b05:	04 ff                	add    al,0xff
    1b07:	0b ff                	or     edi,edi
    1b09:	0b 06                	or     eax,DWORD PTR [rsi]
    1b0b:	a0 d8 9b 00 00 00 00 	movabs al,ds:0x302000000009bd8
    1b12:	02 03 
    1b14:	04 ff                	add    al,0xff
    1b16:	0b ff                	or     edi,edi
    1b18:	0b 06                	or     eax,DWORD PTR [rsi]
    1b1a:	a0 c5 9b 00 00 00 00 	movabs al,ds:0x503000000009bc5
    1b21:	03 05 
    1b23:	04 ff                	add    al,0xff
    1b25:	0b ff                	or     edi,edi
    1b27:	0b 06                	or     eax,DWORD PTR [rsi]
    1b29:	a0 d8 9b 00 00 00 00 	movabs al,ds:0x9bd8
    1b30:	00 00 
    1b32:	00 00                	add    BYTE PTR [rax],al
    1b34:	00 01                	add    BYTE PTR [rcx],al
    1b36:	00 00                	add    BYTE PTR [rax],al
    1b38:	00 00                	add    BYTE PTR [rax],al
    1b3a:	04 f0                	add    al,0xf0
    1b3c:	0c f4                	or     al,0xf4
    1b3e:	0c 02                	or     al,0x2
    1b40:	30 9f 04 8c 0d a7    	xor    BYTE PTR [rdi-0x58f273fc],bl
    1b46:	0d 01 52 04 a7       	or     eax,0xa7045201
    1b4b:	0d b9 0d 03 7c       	or     eax,0x7c030db9
    1b50:	7f 9f                	jg     1af1 <_Z19_mm_crc32HashString8string_t+0x1>
    1b52:	04 a5                	add    al,0xa5
    1b54:	11 c1                	adc    ecx,eax
    1b56:	11 02                	adc    DWORD PTR [rdx],eax
    1b58:	30 9f 04 cc 11 eb    	xor    BYTE PTR [rdi-0x14ee33fc],bl
    1b5e:	11 02                	adc    DWORD PTR [rdx],eax
    1b60:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1b66:	92                   	xchg   edx,eax
    1b67:	0d a8 0d 0a 03       	or     eax,0x30a0da8
    1b6c:	7c 41                	jl     1baf <_Z17adler32HashString8string_t+0x2f>
    1b6e:	00 00                	add    BYTE PTR [rax],al
    1b70:	00 00                	add    BYTE PTR [rax],al
    1b72:	00 00                	add    BYTE PTR [rax],al
    1b74:	9f                   	lahf
    1b75:	00 00                	add    BYTE PTR [rax],al
    1b77:	00 00                	add    BYTE PTR [rax],al
    1b79:	00 04 92             	add    BYTE PTR [rdx+rdx*4],al
    1b7c:	0d a7 0d 01 55       	or     eax,0x55010da7
    1b81:	04 a7                	add    al,0xa7
    1b83:	0d a8 0d 03 76       	or     eax,0x76030da8
    1b88:	98                   	cwde
    1b89:	7f 00                	jg     1b8b <_Z17adler32HashString8string_t+0xb>
    1b8b:	02 00                	add    al,BYTE PTR [rax]
    1b8d:	02 00                	add    al,BYTE PTR [rax]
    1b8f:	04 d6                	add    al,0xd6
    1b91:	0c f0                	or     al,0xf0
    1b93:	0c 0a                	or     al,0xa
    1b95:	03 5d 41             	add    ebx,DWORD PTR [rbp+0x41]
    1b98:	00 00                	add    BYTE PTR [rax],al
    1b9a:	00 00                	add    BYTE PTR [rax],al
    1b9c:	00 00                	add    BYTE PTR [rax],al
    1b9e:	9f                   	lahf
    1b9f:	04 8b                	add    al,0x8b
    1ba1:	11 a5 11 0a 03 5d    	adc    DWORD PTR [rbp+0x5d030a11],esp
    1ba7:	41 00 00             	add    BYTE PTR [r8],al
    1baa:	00 00                	add    BYTE PTR [rax],al
    1bac:	00 00                	add    BYTE PTR [rax],al
    1bae:	9f                   	lahf
    1baf:	00 02                	add    BYTE PTR [rdx],al
    1bb1:	00 02                	add    BYTE PTR [rdx],al
    1bb3:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    1bb6:	0c f0                	or     al,0xf0
    1bb8:	0c 03                	or     al,0x3
    1bba:	76 98                	jbe    1b54 <_Z25_mm_crc32UnrollHashString8string_t+0x54>
    1bbc:	7f 04                	jg     1bc2 <_Z17adler32HashString8string_t+0x42>
    1bbe:	8b 11                	mov    edx,DWORD PTR [rcx]
    1bc0:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1bc1:	11 03                	adc    DWORD PTR [rbx],eax
    1bc3:	76 98                	jbe    1b5d <_Z25_mm_crc32UnrollHashString8string_t+0x5d>
    1bc5:	7f 00                	jg     1bc7 <_Z17adler32HashString8string_t+0x47>
    1bc7:	01 00                	add    DWORD PTR [rax],eax
    1bc9:	00 00                	add    BYTE PTR [rax],al
    1bcb:	01 00                	add    DWORD PTR [rax],eax
    1bcd:	00 00                	add    BYTE PTR [rax],al
    1bcf:	00 00                	add    BYTE PTR [rax],al
    1bd1:	00 00                	add    BYTE PTR [rax],al
    1bd3:	04 d6                	add    al,0xd6
    1bd5:	0d ca 0f 01 63       	or     eax,0x63010fca
    1bda:	04 fb                	add    al,0xfb
    1bdc:	10 83 11 01 63 04    	adc    BYTE PTR [rbx+0x4630111],al
    1be2:	b2 11                	mov    dl,0x11
    1be4:	ea                   	(bad)
    1be5:	11 01                	adc    DWORD PTR [rcx],eax
    1be7:	63 04 ea             	movsxd eax,DWORD PTR [rdx+rbp*8]
    1bea:	11 eb                	adc    ebx,ebp
    1bec:	11 0e                	adc    DWORD PTR [rsi],ecx
    1bee:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1bef:	2e 08 00             	cs or  BYTE PTR [rax],al
    1bf2:	00 00                	add    BYTE PTR [rax],al
    1bf4:	00 00                	add    BYTE PTR [rax],al
    1bf6:	00 00                	add    BYTE PTR [rax],al
    1bf8:	00 12                	add    BYTE PTR [rdx],dl
    1bfa:	1b 9f 04 8f 12 9b    	sbb    ebx,DWORD PTR [rdi-0x64ed70fc]
    1c00:	12 01                	adc    al,BYTE PTR [rcx]
    1c02:	63 04 9b             	movsxd eax,DWORD PTR [rbx+rbx*4]
    1c05:	12 a9 12 03 76 f0    	adc    ch,BYTE PTR [rcx-0xf89fcee]
    1c0b:	7e 00                	jle    1c0d <_Z17adler32HashString8string_t+0x8d>
    1c0d:	01 00                	add    DWORD PTR [rax],eax
    1c0f:	00 00                	add    BYTE PTR [rax],al
    1c11:	00 00                	add    BYTE PTR [rax],al
    1c13:	01 00                	add    DWORD PTR [rax],eax
    1c15:	00 00                	add    BYTE PTR [rax],al
    1c17:	00 00                	add    BYTE PTR [rax],al
    1c19:	00 00                	add    BYTE PTR [rax],al
    1c1b:	04 d6                	add    al,0xd6
    1c1d:	0d f8 0d 01 54       	or     eax,0x54010df8
    1c22:	04 f8                	add    al,0xf8
    1c24:	0d c6 0f 03 76       	or     eax,0x76030fc6
    1c29:	dc 7e 04             	fdivr  QWORD PTR [rsi+0x4]
    1c2c:	fb                   	sti
    1c2d:	10 83 11 03 76 dc    	adc    BYTE PTR [rbx-0x2389fcef],al
    1c33:	7e 04                	jle    1c39 <_Z17adler32HashString8string_t+0xb9>
    1c35:	b2 11                	mov    dl,0x11
    1c37:	c1 11 02             	rcl    DWORD PTR [rcx],0x2
    1c3a:	30 9f 04 c1 11 cc    	xor    BYTE PTR [rdi-0x33ee3efc],bl
    1c40:	11 01                	adc    DWORD PTR [rcx],eax
    1c42:	54                   	push   rsp
    1c43:	04 cc                	add    al,0xcc
    1c45:	11 eb                	adc    ebx,ebp
    1c47:	11 02                	adc    DWORD PTR [rdx],eax
    1c49:	30 9f 04 8f 12 a9    	xor    BYTE PTR [rdi-0x56ed70fc],bl
    1c4f:	12 03                	adc    al,BYTE PTR [rbx]
    1c51:	76 dc                	jbe    1c2f <_Z17adler32HashString8string_t+0xaf>
    1c53:	7e 00                	jle    1c55 <_Z17adler32HashString8string_t+0xd5>
    1c55:	01 00                	add    DWORD PTR [rax],eax
    1c57:	00 00                	add    BYTE PTR [rax],al
    1c59:	01 00                	add    DWORD PTR [rax],eax
    1c5b:	00 00                	add    BYTE PTR [rax],al
    1c5d:	04 d6                	add    al,0xd6
    1c5f:	0d c6 0f 03 76       	or     eax,0x76030fc6
    1c64:	a8 7f                	test   al,0x7f
    1c66:	04 fb                	add    al,0xfb
    1c68:	10 83 11 01 52 04    	adc    BYTE PTR [rbx+0x4520111],al
    1c6e:	b2 11                	mov    dl,0x11
    1c70:	eb 11                	jmp    1c83 <_Z17adler32HashString8string_t+0x103>
    1c72:	03 76 a8             	add    esi,DWORD PTR [rsi-0x58]
    1c75:	7f 04                	jg     1c7b <_Z17adler32HashString8string_t+0xfb>
    1c77:	8f                   	(bad)
    1c78:	12 a9 12 03 76 a8    	adc    ch,BYTE PTR [rcx-0x5789fcee]
    1c7e:	7f 00                	jg     1c80 <_Z17adler32HashString8string_t+0x100>
    1c80:	00 00                	add    BYTE PTR [rax],al
    1c82:	00 00                	add    BYTE PTR [rax],al
    1c84:	00 00                	add    BYTE PTR [rax],al
    1c86:	00 02                	add    BYTE PTR [rdx],al
    1c88:	00 01                	add    BYTE PTR [rcx],al
    1c8a:	00 00                	add    BYTE PTR [rax],al
    1c8c:	04 f8                	add    al,0xf8
    1c8e:	0d a2 0e 01 61       	or     eax,0x61010ea2
    1c93:	04 bc                	add    al,0xbc
    1c95:	0e                   	(bad)
    1c96:	d5 0e 01 61 04       	{rex2 0xe} add QWORD PTR [rcx+0x4],r12
    1c9b:	e2 0e                	loop   1cab <_Z17adler32HashString8string_t+0x12b>
    1c9d:	fd                   	std
    1c9e:	0e                   	(bad)
    1c9f:	01 61 04             	add    DWORD PTR [rcx+0x4],esp
    1ca2:	85 0f                	test   DWORD PTR [rdi],ecx
    1ca4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1ca5:	0f 01 61 04          	smsw   WORD PTR [rcx+0x4]
    1ca9:	da 0f                	fimul  DWORD PTR [rdi]
    1cab:	da 0f                	fimul  DWORD PTR [rdi]
    1cad:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    1cb0:	fb                   	sti
    1cb1:	10 83 11 01 61 00    	adc    BYTE PTR [rbx+0x610111],al
    1cb7:	00 00                	add    BYTE PTR [rax],al
    1cb9:	00 00                	add    BYTE PTR [rax],al
    1cbb:	00 00                	add    BYTE PTR [rax],al
    1cbd:	04 b8                	add    al,0xb8
    1cbf:	0f ca                	bswap  edx
    1cc1:	0f 01 61 04          	smsw   WORD PTR [rcx+0x4]
    1cc5:	bc 11 c1 11 01       	mov    esp,0x111c111
    1cca:	61                   	(bad)
    1ccb:	04 8f                	add    al,0x8f
    1ccd:	12 9b 12 01 61 00    	adc    bl,BYTE PTR [rbx+0x610112]
    1cd3:	02 00                	add    al,BYTE PTR [rax]
    1cd5:	04 cc                	add    al,0xcc
    1cd7:	11 eb                	adc    ebx,ebp
    1cd9:	11 02                	adc    DWORD PTR [rdx],eax
    1cdb:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
    1ce1:	da 0f                	fimul  DWORD PTR [rdi]
    1ce3:	f5                   	cmc
    1ce4:	0f 0a                	(bad)
    1ce6:	03 85 41 00 00 00    	add    eax,DWORD PTR [rbp+0x41]
    1cec:	00 00                	add    BYTE PTR [rax],al
    1cee:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    1cf4:	f5                   	cmc
    1cf5:	0f 90 10             	seto   BYTE PTR [rax]
    1cf8:	0a 03                	or     al,BYTE PTR [rbx]
    1cfa:	a3 41 00 00 00 00 00 	movabs ds:0x9f00000000000041,eax
    1d01:	00 9f 
    1d03:	00 02                	add    BYTE PTR [rdx],al
    1d05:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1d08:	10 bf 10 0a 03 c1    	adc    BYTE PTR [rdi-0x3efcf5f0],bh
    1d0e:	41 00 00             	add    BYTE PTR [r8],al
    1d11:	00 00                	add    BYTE PTR [rax],al
    1d13:	00 00                	add    BYTE PTR [rax],al
    1d15:	9f                   	lahf
	...
    1d22:	00 00                	add    BYTE PTR [rax],al
    1d24:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1d27:	4f 01 55 04          	rex.WRXB add QWORD PTR [r13+0x4],r10
    1d2b:	4f 85 08             	rex.WRXB test QWORD PTR [r8],r9
    1d2e:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
    1d31:	85 08                	test   DWORD PTR [rax],ecx
    1d33:	8f 08 04 a3          	(bad)
    1d37:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1d3a:	04 8f                	add    al,0x8f
    1d3c:	08 bf 08 01 5d 04    	or     BYTE PTR [rdi+0x45d0108],bh
    1d42:	bf 08 d9 08 01       	mov    edi,0x108d908
    1d47:	55                   	push   rbp
    1d48:	04 d9                	add    al,0xd9
    1d4a:	08 de                	or     dh,bl
    1d4c:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    1d4f:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1d52:	04 de                	add    al,0xde
    1d54:	08 e3                	or     bl,ah
    1d56:	08 01                	or     BYTE PTR [rcx],al
    1d58:	5d                   	pop    rbp
	...
    1d61:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1d64:	53                   	push   rbx
    1d65:	01 54 04 53          	add    DWORD PTR [rsp+rax*1+0x53],edx
    1d69:	bf 08 04 a3 01       	mov    edi,0x1a30408
    1d6e:	54                   	push   rsp
    1d6f:	9f                   	lahf
    1d70:	04 bf                	add    al,0xbf
    1d72:	08 d2                	or     dl,dl
    1d74:	08 01                	or     BYTE PTR [rcx],al
    1d76:	54                   	push   rsp
    1d77:	04 d2                	add    al,0xd2
    1d79:	08 e3                	or     bl,ah
    1d7b:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    1d7e:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    1d92:	04 00                	add    al,0x0
    1d94:	46 06                	rex.RX (bad)
    1d96:	51                   	push   rcx
    1d97:	93                   	xchg   ebx,eax
    1d98:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1d9b:	08 04 49             	or     BYTE PTR [rcx+rcx*2],al
    1d9e:	5c                   	pop    rsp
    1d9f:	06                   	(bad)
    1da0:	53                   	push   rbx
    1da1:	93                   	xchg   ebx,eax
    1da2:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1da5:	08 04 98             	or     BYTE PTR [rax+rbx*4],al
    1da8:	01 c6                	add    esi,eax
    1daa:	01 06                	add    DWORD PTR [rsi],eax
    1dac:	53                   	push   rbx
    1dad:	93                   	xchg   ebx,eax
    1dae:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1db1:	08 04 a9             	or     BYTE PTR [rcx+rbp*4],al
    1db4:	02 d4                	add    dl,ah
    1db6:	05 06 53 93 08       	add    eax,0x8935306
    1dbb:	5e                   	pop    rsi
    1dbc:	93                   	xchg   ebx,eax
    1dbd:	08 04 cf             	or     BYTE PTR [rdi+rcx*8],al
    1dc0:	06                   	(bad)
    1dc1:	ff 07                	inc    DWORD PTR [rdi]
    1dc3:	06                   	(bad)
    1dc4:	53                   	push   rbx
    1dc5:	93                   	xchg   ebx,eax
    1dc6:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1dc9:	08 04 8f             	or     BYTE PTR [rdi+rcx*4],al
    1dcc:	08 bf 08 06 53 93    	or     BYTE PTR [rdi-0x6cacf9f8],bh
    1dd2:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1dd5:	08 04 bf             	or     BYTE PTR [rdi+rdi*4],al
    1dd8:	08 cb                	or     bl,cl
    1dda:	08 06                	or     BYTE PTR [rsi],al
    1ddc:	51                   	push   rcx
    1ddd:	93                   	xchg   ebx,eax
    1dde:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1de1:	08 04 de             	or     BYTE PTR [rsi+rbx*8],al
    1de4:	08 e3                	or     bl,ah
    1de6:	08 06                	or     BYTE PTR [rsi],al
    1de8:	53                   	push   rbx
    1de9:	93                   	xchg   ebx,eax
    1dea:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1ded:	08 00                	or     BYTE PTR [rax],al
	...
    1df7:	04 00                	add    al,0x0
    1df9:	53                   	push   rbx
    1dfa:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    1dfd:	53                   	push   rbx
    1dfe:	bf 08 04 a3 01       	mov    edi,0x1a30408
    1e03:	58                   	pop    rax
    1e04:	9f                   	lahf
    1e05:	04 bf                	add    al,0xbf
    1e07:	08 dd                	or     ch,bl
    1e09:	08 01                	or     BYTE PTR [rcx],al
    1e0b:	58                   	pop    rax
    1e0c:	04 dd                	add    al,0xdd
    1e0e:	08 e3                	or     bl,ah
    1e10:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    1e13:	01 58 9f             	add    DWORD PTR [rax-0x61],ebx
    1e16:	00 02                	add    BYTE PTR [rdx],al
	...
    1e24:	00 00                	add    BYTE PTR [rax],al
    1e26:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1e29:	01 d1                	add    ecx,edx
    1e2b:	01 06                	add    DWORD PTR [rsi],eax
    1e2d:	9e                   	sahf
    1e2e:	04 00                	add    al,0x0
    1e30:	00 00                	add    BYTE PTR [rax],al
    1e32:	00 04 f2             	add    BYTE PTR [rdx+rsi*8],al
    1e35:	01 81 02 01 63 04    	add    DWORD PTR [rcx+0x4630102],eax
    1e3b:	81 02 a0 02 03 76    	add    DWORD PTR [rdx],0x760302a0
    1e41:	90                   	nop
    1e42:	7f 04                	jg     1e48 <_Z13elfHashString8string_t+0xb8>
    1e44:	a0 02 a9 02 01 63 04 	movabs al,ds:0x2ad04630102a902
    1e4b:	ad 02 
    1e4d:	cb                   	retf
    1e4e:	02 01                	add    al,BYTE PTR [rcx]
    1e50:	63 04 cb             	movsxd eax,DWORD PTR [rbx+rcx*8]
    1e53:	02 aa 03 03 76 90    	add    ch,BYTE PTR [rdx-0x6f89fcfd]
    1e59:	7f 04                	jg     1e5f <_Z13elfHashString8string_t+0xcf>
    1e5b:	8f 08 9a 08          	(bad)
    1e5f:	03 76 90             	add    esi,DWORD PTR [rsi-0x70]
    1e62:	7f 04                	jg     1e68 <_Z13elfHashString8string_t+0xd8>
    1e64:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1e65:	08 b0 08 03 76 90    	or     BYTE PTR [rax-0x6f89fcf8],dh
    1e6b:	7f 00                	jg     1e6d <_Z13elfHashString8string_t+0xdd>
    1e6d:	00 00                	add    BYTE PTR [rax],al
    1e6f:	04 54                	add    al,0x54
    1e71:	63 02                	movsxd eax,DWORD PTR [rdx]
    1e73:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
    1e79:	00 04 b1             	add    BYTE PTR [rcx+rsi*4],al
    1e7c:	01 d1                	add    ecx,edx
    1e7e:	01 02                	add    DWORD PTR [rdx],eax
    1e80:	30 9f 04 f2 01 81    	xor    BYTE PTR [rdi-0x7efe0dfc],bl
    1e86:	02 01                	add    al,BYTE PTR [rcx]
    1e88:	52                   	push   rdx
    1e89:	00 02                	add    BYTE PTR [rdx],al
    1e8b:	00 04 f2             	add    BYTE PTR [rdx+rsi*8],al
    1e8e:	01 82 02 0a 03 22    	add    DWORD PTR [rdx+0x22030a02],eax
    1e94:	41 00 00             	add    BYTE PTR [r8],al
    1e97:	00 00                	add    BYTE PTR [rax],al
    1e99:	00 00                	add    BYTE PTR [rax],al
    1e9b:	9f                   	lahf
    1e9c:	00 02                	add    BYTE PTR [rdx],al
    1e9e:	00 00                	add    BYTE PTR [rax],al
    1ea0:	00 04 f2             	add    BYTE PTR [rdx+rsi*8],al
    1ea3:	01 81 02 01 55 04    	add    DWORD PTR [rcx+0x4550102],eax
    1ea9:	81 02 82 02 01 5d    	add    DWORD PTR [rdx],0x5d010282
    1eaf:	00 03                	add    BYTE PTR [rbx],al
    1eb1:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1eb4:	01 b1 01 0a 03 08    	add    DWORD PTR [rcx+0x8030a01],esi
    1eba:	41 00 00             	add    BYTE PTR [r8],al
    1ebd:	00 00                	add    BYTE PTR [rax],al
    1ebf:	00 00                	add    BYTE PTR [rax],al
    1ec1:	9f                   	lahf
    1ec2:	00 03                	add    BYTE PTR [rbx],al
    1ec4:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1ec7:	01 b1 01 01 5d 00    	add    DWORD PTR [rcx+0x5d0101],esi
    1ecd:	01 00                	add    DWORD PTR [rax],eax
    1ecf:	04 ad                	add    al,0xad
    1ed1:	02 cc                	add    cl,ah
    1ed3:	02 0a                	add    cl,BYTE PTR [rdx]
    1ed5:	03 29                	add    ebp,DWORD PTR [rcx]
    1ed7:	41 00 00             	add    BYTE PTR [r8],al
    1eda:	00 00                	add    BYTE PTR [rax],al
    1edc:	00 00                	add    BYTE PTR [rax],al
    1ede:	9f                   	lahf
    1edf:	00 02                	add    BYTE PTR [rdx],al
    1ee1:	00 00                	add    BYTE PTR [rax],al
    1ee3:	00 00                	add    BYTE PTR [rax],al
    1ee5:	00 00                	add    BYTE PTR [rax],al
    1ee7:	00 04 cc             	add    BYTE PTR [rsp+rcx*8],al
    1eea:	02 aa 03 03 76 90    	add    ch,BYTE PTR [rdx-0x6f89fcfd]
    1ef0:	7f 04                	jg     1ef6 <_Z8listCtorv+0x26>
    1ef2:	aa                   	stos   BYTE PTR es:[rdi],al
    1ef3:	03 c5                	add    eax,ebp
    1ef5:	07                   	(bad)
    1ef6:	01 63 04             	add    DWORD PTR [rbx+0x4],esp
    1ef9:	8f 08 9a 08          	(bad)
    1efd:	03 76 90             	add    esi,DWORD PTR [rsi-0x70]
    1f00:	7f 04                	jg     1f06 <_Z8listCtorv+0x36>
    1f02:	9a                   	(bad)
    1f03:	08 b8 08 01 63 00    	or     BYTE PTR [rax+0x630108],bh
    1f09:	02 02                	add    al,BYTE PTR [rdx]
    1f0b:	00 00                	add    BYTE PTR [rax],al
    1f0d:	04 cc                	add    al,0xcc
    1f0f:	02 c9                	add    cl,cl
    1f11:	07                   	(bad)
    1f12:	04 76                	add    al,0x76
    1f14:	b0 7f                	mov    al,0x7f
    1f16:	9f                   	lahf
    1f17:	04 8f                	add    al,0x8f
    1f19:	08 bf 08 04 76 b0    	or     BYTE PTR [rdi-0x4f89fbf8],bh
    1f1f:	7f 9f                	jg     1ec0 <_Z13searchElementP4List8string_t.part.0+0x20>
    1f21:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    1f30:	04 cc                	add    al,0xcc
    1f32:	02 aa 03 06 9e 04    	add    ch,BYTE PTR [rdx+0x49e0603]
    1f38:	00 00                	add    BYTE PTR [rax],al
    1f3a:	00 00                	add    BYTE PTR [rax],al
    1f3c:	04 aa                	add    al,0xaa
    1f3e:	03 e0                	add    esp,eax
    1f40:	04 01                	add    al,0x1
    1f42:	68 04 99 05 b4       	push   0xffffffffb4059904
    1f47:	05 01 68 04 c4       	add    eax,0xc4046801
    1f4c:	05 bb 07 01 68       	add    eax,0x680107bb
    1f51:	04 8f                	add    al,0x8f
    1f53:	08 9a 08 06 9e 04    	or     BYTE PTR [rdx+0x49e0608],bl
    1f59:	00 00                	add    BYTE PTR [rax],al
    1f5b:	00 00                	add    BYTE PTR [rax],al
    1f5d:	04 9a                	add    al,0x9a
    1f5f:	08 a5 08 01 68 04    	or     BYTE PTR [rbp+0x4680108],ah
    1f65:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1f66:	08 b0 08 06 9e 04    	or     BYTE PTR [rax+0x49e0608],dh
    1f6c:	00 00                	add    BYTE PTR [rax],al
    1f6e:	00 00                	add    BYTE PTR [rax],al
    1f70:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1f73:	02 00                	add    al,BYTE PTR [rax]
    1f75:	00 00                	add    BYTE PTR [rax],al
    1f77:	02 00                	add    al,BYTE PTR [rax]
    1f79:	00 00                	add    BYTE PTR [rax],al
    1f7b:	00 00                	add    BYTE PTR [rax],al
    1f7d:	04 cc                	add    al,0xcc
    1f7f:	02 aa 03 02 30 9f    	add    ch,BYTE PTR [rdx-0x60cffdfd]
    1f85:	04 f1                	add    al,0xf1
    1f87:	06                   	(bad)
    1f88:	f9                   	stc
    1f89:	06                   	(bad)
    1f8a:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    1f8d:	f9                   	stc
    1f8e:	06                   	(bad)
    1f8f:	fc                   	cld
    1f90:	06                   	(bad)
    1f91:	03 70 01             	add    esi,DWORD PTR [rax+0x1]
    1f94:	9f                   	lahf
    1f95:	04 91                	add    al,0x91
    1f97:	07                   	(bad)
    1f98:	99                   	cdq
    1f99:	07                   	(bad)
    1f9a:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    1f9d:	8f 08 9a 08          	(bad)
    1fa1:	02 30                	add    dh,BYTE PTR [rax]
    1fa3:	9f                   	lahf
    1fa4:	04 a5                	add    al,0xa5
    1fa6:	08 b0 08 02 30 9f    	or     BYTE PTR [rax-0x60cffdf8],dh
    1fac:	00 01                	add    BYTE PTR [rcx],al
    1fae:	00 00                	add    BYTE PTR [rax],al
    1fb0:	00 01                	add    BYTE PTR [rcx],al
    1fb2:	00 04 f5 06 f9 06 0f 	add    BYTE PTR [rsi*8+0xf06f906],al
    1fb9:	71 00                	jno    1fbb <_Z12pushListElemP4List8string_t+0x7b>
    1fbb:	0c ff                	or     al,0xff
    1fbd:	ff                   	(bad)
    1fbe:	ff                   	(bad)
    1fbf:	ff 1a                	call   FWORD PTR [rdx]
    1fc1:	48 1e                	rex.W (bad)
    1fc3:	75 00                	jne    1fc5 <_Z12pushListElemP4List8string_t+0x85>
    1fc5:	22 23                	and    ah,BYTE PTR [rbx]
    1fc7:	10 04 f9             	adc    BYTE PTR [rcx+rdi*8],al
    1fca:	06                   	(bad)
    1fcb:	fc                   	cld
    1fcc:	06                   	(bad)
    1fcd:	0f 70 01 0c          	pshufw mm0,QWORD PTR [rcx],0xc
    1fd1:	ff                   	(bad)
    1fd2:	ff                   	(bad)
    1fd3:	ff                   	(bad)
    1fd4:	ff 1a                	call   FWORD PTR [rdx]
    1fd6:	48 1e                	rex.W (bad)
    1fd8:	75 00                	jne    1fda <_Z12pushListElemP4List8string_t+0x9a>
    1fda:	22 23                	and    ah,BYTE PTR [rbx]
    1fdc:	10 04 95 07 99 07 0f 	adc    BYTE PTR [rdx*4+0xf079907],al
    1fe3:	70 00                	jo     1fe5 <_Z12pushListElemP4List8string_t+0xa5>
    1fe5:	0c ff                	or     al,0xff
    1fe7:	ff                   	(bad)
    1fe8:	ff                   	(bad)
    1fe9:	ff 1a                	call   FWORD PTR [rdx]
    1feb:	48 1e                	rex.W (bad)
    1fed:	75 00                	jne    1fef <_Z12pushListElemP4List8string_t+0xaf>
    1fef:	22 23                	and    ah,BYTE PTR [rbx]
    1ff1:	10 00                	adc    BYTE PTR [rax],al
    1ff3:	00 00                	add    BYTE PTR [rax],al
    1ff5:	00 00                	add    BYTE PTR [rax],al
    1ff7:	00 00                	add    BYTE PTR [rax],al
    1ff9:	04 bb                	add    al,0xbb
    1ffb:	07                   	(bad)
    1ffc:	c9                   	leave
    1ffd:	07                   	(bad)
    1ffe:	01 68 04             	add    DWORD PTR [rax+0x4],ebp
    2001:	98                   	cwde
    2002:	08 9a 08 01 68 04    	or     BYTE PTR [rdx+0x4680108],bl
    2008:	b0 08                	mov    al,0x8
    200a:	b8 08 01 68 00       	mov    eax,0x680108
    200f:	02 00                	add    al,BYTE PTR [rax]
    2011:	04 c9                	add    al,0xc9
    2013:	07                   	(bad)
    2014:	e3 07                	jrcxz  201d <_Z12pushListElemP4List8string_t+0xdd>
    2016:	0a 03                	or     al,BYTE PTR [rbx]
    2018:	43                   	rex.XB
    2019:	41 00 00             	add    BYTE PTR [r8],al
    201c:	00 00                	add    BYTE PTR [rax],al
    201e:	00 00                	add    BYTE PTR [rax],al
    2020:	9f                   	lahf
	...
    202d:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    2030:	13 e2                	adc    esp,edx
    2032:	13 01                	adc    eax,DWORD PTR [rcx]
    2034:	55                   	push   rbp
    2035:	04 e2                	add    al,0xe2
    2037:	13 b0 22 04 a3 01    	adc    esi,DWORD PTR [rax+0x1a30422]
    203d:	55                   	push   rbp
    203e:	9f                   	lahf
    203f:	04 b0                	add    al,0xb0
    2041:	22 ca                	and    cl,dl
    2043:	22 01                	and    al,BYTE PTR [rcx]
    2045:	55                   	push   rbp
    2046:	04 ca                	add    al,0xca
    2048:	22 cf                	and    cl,bh
    204a:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    204d:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2050:	04 cf                	add    al,0xcf
    2052:	22 e9                	and    ch,cl
    2054:	22 01                	and    al,BYTE PTR [rcx]
    2056:	55                   	push   rbp
    2057:	04 e9                	add    al,0xe9
    2059:	22 ee                	and    ch,dh
    205b:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    205e:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    2071:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    2074:	13 ea                	adc    ebp,edx
    2076:	13 01                	adc    eax,DWORD PTR [rcx]
    2078:	54                   	push   rsp
    2079:	04 ea                	add    al,0xea
    207b:	13 8b 16 01 5e 04    	adc    ecx,DWORD PTR [rbx+0x45e0116]
    2081:	8b 16                	mov    edx,DWORD PTR [rsi]
    2083:	8e 16                	mov    ss,WORD PTR [rsi]
    2085:	04 a3                	add    al,0xa3
    2087:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    208b:	8e 16                	mov    ss,WORD PTR [rsi]
    208d:	b0 22                	mov    al,0x22
    208f:	01 5e 04             	add    DWORD PTR [rsi+0x4],ebx
    2092:	b0 22                	mov    al,0x22
    2094:	c3                   	ret
    2095:	22 01                	and    al,BYTE PTR [rcx]
    2097:	54                   	push   rsp
    2098:	04 c3                	add    al,0xc3
    209a:	22 cf                	and    cl,bh
    209c:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    209f:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    20a3:	cf                   	iret
    20a4:	22 e2                	and    ah,dl
    20a6:	22 01                	and    al,BYTE PTR [rcx]
    20a8:	54                   	push   rsp
    20a9:	04 e2                	add    al,0xe2
    20ab:	22 ee                	and    ch,dh
    20ad:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    20b0:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    20c8:	00 00                	add    BYTE PTR [rax],al
    20ca:	04 a0                	add    al,0xa0
    20cc:	13 f7                	adc    esi,edi
    20ce:	13 01                	adc    eax,DWORD PTR [rcx]
    20d0:	51                   	push   rcx
    20d1:	04 f7                	add    al,0xf7
    20d3:	13 d9                	adc    ebx,ecx
    20d5:	15 01 53 04 d9       	adc    eax,0xd9045301
    20da:	15 8e 16 04 a3       	adc    eax,0xa304168e
    20df:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
    20e2:	04 8e                	add    al,0x8e
    20e4:	16                   	(bad)
    20e5:	e2 17                	loop   20fe <_Z11popListElemP4List8string_t+0x1e>
    20e7:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    20ea:	e2 17                	loop   2103 <_Z11popListElemP4List8string_t+0x23>
    20ec:	dd 1c 04             	fstp   QWORD PTR [rsp+rax*1]
    20ef:	a3 01 51 9f 04 dd 1c 	movabs ds:0x22ab1cdd049f5101,eax
    20f6:	ab 22 
    20f8:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    20fb:	ab                   	stos   DWORD PTR es:[rdi],eax
    20fc:	22 b0 22 04 a3 01    	and    dh,BYTE PTR [rax+0x1a30422]
    2102:	51                   	push   rcx
    2103:	9f                   	lahf
    2104:	04 b0                	add    al,0xb0
    2106:	22 bc 22 01 51 04 bc 	and    bh,BYTE PTR [rdx+riz*1-0x43fbaeff]
    210d:	22 cf                	and    cl,bh
    210f:	22 01                	and    al,BYTE PTR [rcx]
    2111:	53                   	push   rbx
    2112:	04 cf                	add    al,0xcf
    2114:	22 db                	and    bl,bl
    2116:	22 01                	and    al,BYTE PTR [rcx]
    2118:	51                   	push   rcx
    2119:	04 db                	add    al,0xdb
    211b:	22 ee                	and    ch,dh
    211d:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    2120:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
	...
    212f:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    2132:	13 f7                	adc    esi,edi
    2134:	13 01                	adc    eax,DWORD PTR [rcx]
    2136:	52                   	push   rdx
    2137:	04 f7                	add    al,0xf7
    2139:	13 b0 22 03 91 9c    	adc    esi,DWORD PTR [rax-0x636efcde]
    213f:	7f 04                	jg     2145 <_Z11popListElemP4List8string_t+0x65>
    2141:	b0 22                	mov    al,0x22
    2143:	b7 22                	mov    bh,0x22
    2145:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    2148:	b7 22                	mov    bh,0x22
    214a:	cf                   	iret
    214b:	22 03                	and    al,BYTE PTR [rbx]
    214d:	91                   	xchg   ecx,eax
    214e:	9c                   	pushf
    214f:	7f 04                	jg     2155 <_Z11popListElemP4List8string_t+0x75>
    2151:	cf                   	iret
    2152:	22 d6                	and    dl,dh
    2154:	22 01                	and    al,BYTE PTR [rcx]
    2156:	52                   	push   rdx
    2157:	04 d6                	add    al,0xd6
    2159:	22 ee                	and    ch,dh
    215b:	22 03                	and    al,BYTE PTR [rbx]
    215d:	91                   	xchg   ecx,eax
    215e:	9c                   	pushf
    215f:	7f 00                	jg     2161 <_Z11popListElemP4List8string_t+0x81>
	...
    2169:	00 00                	add    BYTE PTR [rax],al
    216b:	04 88                	add    al,0x88
    216d:	14 8c                	adc    al,0x8c
    216f:	14 01                	adc    al,0x1
    2171:	50                   	push   rax
    2172:	04 8c                	add    al,0x8c
    2174:	14 b5                	adc    al,0xb5
    2176:	14 01                	adc    al,0x1
    2178:	5f                   	pop    rdi
    2179:	04 b5                	add    al,0xb5
    217b:	14 8e                	adc    al,0x8e
    217d:	16                   	(bad)
    217e:	03 91 a0 7f 04 8e    	add    edx,DWORD PTR [rcx-0x71fb8060]
    2184:	16                   	(bad)
    2185:	df 16                	fist   WORD PTR [rsi]
    2187:	01 5f 04             	add    DWORD PTR [rdi+0x4],ebx
    218a:	df 16                	fist   WORD PTR [rsi]
    218c:	b0 22                	mov    al,0x22
    218e:	03 91 a0 7f 00 00    	add    edx,DWORD PTR [rcx+0x7fa0]
    2194:	00 00                	add    BYTE PTR [rax],al
    2196:	00 00                	add    BYTE PTR [rax],al
    2198:	00 00                	add    BYTE PTR [rax],al
    219a:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
    219d:	14 d9                	adc    al,0xd9
    219f:	15 01 5c 04 8e       	adc    eax,0x8e045c01
    21a4:	16                   	(bad)
    21a5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    21a6:	18 01                	sbb    BYTE PTR [rcx],al
    21a8:	5c                   	pop    rsp
    21a9:	04 a6                	add    al,0xa6
    21ab:	18 d6                	sbb    dh,dl
    21ad:	18 03                	sbb    BYTE PTR [rbx],al
    21af:	91                   	xchg   ecx,eax
    21b0:	a8 7f                	test   al,0x7f
    21b2:	04 dd                	add    al,0xdd
    21b4:	1c ab                	sbb    al,0xab
    21b6:	22 01                	and    al,BYTE PTR [rcx]
    21b8:	5c                   	pop    rsp
	...
    21c9:	00 00                	add    BYTE PTR [rax],al
    21cb:	03 03                	add    eax,DWORD PTR [rbx]
    21cd:	00 00                	add    BYTE PTR [rax],al
    21cf:	03 03                	add    eax,DWORD PTR [rbx]
    21d1:	00 00                	add    BYTE PTR [rax],al
    21d3:	00 00                	add    BYTE PTR [rax],al
    21d5:	03 03                	add    eax,DWORD PTR [rbx]
    21d7:	00 00                	add    BYTE PTR [rax],al
    21d9:	00 04 a8             	add    BYTE PTR [rax+rbp*4],al
    21dc:	14 ac                	adc    al,0xac
    21de:	14 08                	adc    al,0x8
    21e0:	50                   	push   rax
    21e1:	93                   	xchg   ebx,eax
    21e2:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    21e6:	93                   	xchg   ebx,eax
    21e7:	04 04                	add    al,0x4
    21e9:	ac                   	lods   al,BYTE PTR ds:[rsi]
    21ea:	14 d9                	adc    al,0xd9
    21ec:	15 08 56 93 08       	adc    eax,0x8935608
    21f1:	5c                   	pop    rsp
    21f2:	93                   	xchg   ebx,eax
    21f3:	04 93                	add    al,0x93
    21f5:	04 04                	add    al,0x4
    21f7:	d9 15 eb 15 05 56    	fst    DWORD PTR [rip+0x560515eb]        # 560537e8 <_end+0x5604d7d0>
    21fd:	93                   	xchg   ebx,eax
    21fe:	08 93 08 04 8e 16    	or     BYTE PTR [rbx+0x168e0408],dl
    2204:	83 17 08             	adc    DWORD PTR [rdi],0x8
    2207:	56                   	push   rsi
    2208:	93                   	xchg   ebx,eax
    2209:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    220d:	93                   	xchg   ebx,eax
    220e:	04 04                	add    al,0x4
    2210:	83 17 a6             	adc    DWORD PTR [rdi],0xffffffa6
    2213:	18 08                	sbb    BYTE PTR [rax],cl
    2215:	56                   	push   rsi
    2216:	93                   	xchg   ebx,eax
    2217:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    221b:	93                   	xchg   ebx,eax
    221c:	04 04                	add    al,0x4
    221e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    221f:	18 d6                	sbb    dh,dl
    2221:	18 0a                	sbb    BYTE PTR [rdx],cl
    2223:	56                   	push   rsi
    2224:	93                   	xchg   ebx,eax
    2225:	08 91 a8 7f 93 04    	or     BYTE PTR [rcx+0x4937fa8],dl
    222b:	93                   	xchg   ebx,eax
    222c:	04 04                	add    al,0x4
    222e:	d6                   	(bad)
    222f:	18 dd                	sbb    ch,bl
    2231:	1c 05                	sbb    al,0x5
    2233:	56                   	push   rsi
    2234:	93                   	xchg   ebx,eax
    2235:	08 93 08 04 dd 1c    	or     BYTE PTR [rbx+0x1cdd0408],dl
    223b:	d3 1d 08 56 93 08    	rcr    DWORD PTR [rip+0x8935608],cl        # 8937849 <_end+0x8931831>
    2241:	5c                   	pop    rsp
    2242:	93                   	xchg   ebx,eax
    2243:	04 93                	add    al,0x93
    2245:	04 04                	add    al,0x4
    2247:	d3 1d ff 1d 07 93    	rcr    DWORD PTR [rip+0xffffffff93071dff],cl        # ffffffff9307404c <_end+0xffffffff9306e034>
    224d:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2251:	93                   	xchg   ebx,eax
    2252:	04 04                	add    al,0x4
    2254:	ff 1d cb 1e 08 56    	call   FWORD PTR [rip+0x56081ecb]        # 56084125 <_end+0x5607e10d>
    225a:	93                   	xchg   ebx,eax
    225b:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    225f:	93                   	xchg   ebx,eax
    2260:	04 04                	add    al,0x4
    2262:	cb                   	retf
    2263:	1e                   	(bad)
    2264:	f7 1e                	neg    DWORD PTR [rsi]
    2266:	07                   	(bad)
    2267:	93                   	xchg   ebx,eax
    2268:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    226c:	93                   	xchg   ebx,eax
    226d:	04 04                	add    al,0x4
    226f:	f7 1e                	neg    DWORD PTR [rsi]
    2271:	c3                   	ret
    2272:	1f                   	(bad)
    2273:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
    2276:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    227a:	93                   	xchg   ebx,eax
    227b:	04 04                	add    al,0x4
    227d:	c3                   	ret
    227e:	1f                   	(bad)
    227f:	bb 20 08 56 93       	mov    ebx,0x93560820
    2284:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2288:	93                   	xchg   ebx,eax
    2289:	04 04                	add    al,0x4
    228b:	bb 20 e7 20 07       	mov    ebx,0x720e720
    2290:	93                   	xchg   ebx,eax
    2291:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2295:	93                   	xchg   ebx,eax
    2296:	04 04                	add    al,0x4
    2298:	e7 20                	out    0x20,eax
    229a:	b3 21                	mov    bl,0x21
    229c:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
    229f:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    22a3:	93                   	xchg   ebx,eax
    22a4:	04 04                	add    al,0x4
    22a6:	b3 21                	mov    bl,0x21
    22a8:	ab                   	stos   DWORD PTR es:[rdi],eax
    22a9:	22 08                	and    cl,BYTE PTR [rax]
    22ab:	56                   	push   rsi
    22ac:	93                   	xchg   ebx,eax
    22ad:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    22b1:	93                   	xchg   ebx,eax
    22b2:	04 00                	add    al,0x0
    22b4:	01 00                	add    DWORD PTR [rax],eax
    22b6:	04 8e                	add    al,0x8e
    22b8:	16                   	(bad)
    22b9:	9f                   	lahf
    22ba:	16                   	(bad)
    22bb:	06                   	(bad)
    22bc:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    22c3:	02 00 
    22c5:	04 9f                	add    al,0x9f
    22c7:	16                   	(bad)
    22c8:	ab                   	stos   DWORD PTR es:[rdi],eax
    22c9:	16                   	(bad)
    22ca:	06                   	(bad)
    22cb:	a0 0e cb 00 00 00 00 	movabs al,ds:0x200000000cb0e
    22d2:	02 00 
    22d4:	04 ab                	add    al,0xab
    22d6:	16                   	(bad)
    22d7:	b7 16                	mov    bh,0x16
    22d9:	06                   	(bad)
    22da:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    22e1:	03 00 
    22e3:	04 b7                	add    al,0xb7
    22e5:	16                   	(bad)
    22e6:	f2 16                	repnz (bad)
    22e8:	03 91 9c 7f 00 03    	add    edx,DWORD PTR [rcx+0x3007f9c]
    22ee:	00 04 b7             	add    BYTE PTR [rdi+rsi*4],al
    22f1:	16                   	(bad)
    22f2:	f2 16                	repnz (bad)
    22f4:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    22f7:	00 00                	add    BYTE PTR [rax],al
    22f9:	00 00                	add    BYTE PTR [rax],al
    22fb:	04 df                	add    al,0xdf
    22fd:	16                   	(bad)
    22fe:	e9 16 01 50 04       	jmp    4502419 <_end+0x44fc401>
    2303:	e9 16 83 17 01       	jmp    117a61e <_end+0x1174606>
    2308:	5f                   	pop    rdi
    2309:	00 02                	add    BYTE PTR [rdx],al
    230b:	00 04 f2             	add    BYTE PTR [rdx+rsi*8],al
    230e:	16                   	(bad)
    230f:	fe                   	(bad)
    2310:	16                   	(bad)
    2311:	06                   	(bad)
    2312:	a0 3d cb 00 00 00 00 	movabs al,ds:0x200000000cb3d
    2319:	02 00 
    231b:	04 b3                	add    al,0xb3
    231d:	21 c7                	and    edi,eax
    231f:	21 06                	and    DWORD PTR [rsi],eax
    2321:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    2328:	02 00 
    232a:	04 c7                	add    al,0xc7
    232c:	21 d3                	and    ebx,edx
    232e:	21 06                	and    DWORD PTR [rsi],eax
    2330:	a0 61 cb 00 00 00 00 	movabs al,ds:0x200000000cb61
    2337:	02 00 
    2339:	04 d3                	add    al,0xd3
    233b:	21 df                	and    edi,ebx
    233d:	21 06                	and    DWORD PTR [rsi],eax
    233f:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    2346:	03 00 
    2348:	04 df                	add    al,0xdf
    234a:	21 9a 22 03 91 9c    	and    DWORD PTR [rdx-0x636efcde],ebx
    2350:	7f 00                	jg     2352 <_Z8readFilePKcPm+0x102>
    2352:	03 00                	add    eax,DWORD PTR [rax]
    2354:	04 df                	add    al,0xdf
    2356:	21 9a 22 01 5e 00    	and    DWORD PTR [rdx+0x5e0122],ebx
    235c:	00 00                	add    BYTE PTR [rax],al
    235e:	00 00                	add    BYTE PTR [rax],al
    2360:	04 87                	add    al,0x87
    2362:	22 91 22 01 50 04    	and    dl,BYTE PTR [rcx+0x4500122]
    2368:	91                   	xchg   ecx,eax
    2369:	22 ab 22 01 5f 00    	and    ch,BYTE PTR [rbx+0x5f0122]
    236f:	02 00                	add    al,BYTE PTR [rax]
    2371:	04 9a                	add    al,0x9a
    2373:	22 a6 22 06 a0 3d    	and    ah,BYTE PTR [rsi+0x3da00622]
    2379:	cb                   	retf
    237a:	00 00                	add    BYTE PTR [rax],al
    237c:	00 00                	add    BYTE PTR [rax],al
    237e:	02 00                	add    al,BYTE PTR [rax]
    2380:	04 bb                	add    al,0xbb
    2382:	20 cf                	and    bh,cl
    2384:	20 06                	and    BYTE PTR [rsi],al
    2386:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    238d:	02 00 
    238f:	04 cf                	add    al,0xcf
    2391:	20 db                	and    bl,bl
    2393:	20 06                	and    BYTE PTR [rsi],al
    2395:	a0 70 cb 00 00 00 00 	movabs al,ds:0x200000000cb70
    239c:	02 00 
    239e:	04 db                	add    al,0xdb
    23a0:	20 e7                	and    bh,ah
    23a2:	20 06                	and    BYTE PTR [rsi],al
    23a4:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    23ab:	03 00 
    23ad:	04 e7                	add    al,0xe7
    23af:	20 a2 21 03 91 9c    	and    BYTE PTR [rdx-0x636efcdf],ah
    23b5:	7f 00                	jg     23b7 <_Z10countLinesPcm+0x57>
    23b7:	03 00                	add    eax,DWORD PTR [rax]
    23b9:	04 e7                	add    al,0xe7
    23bb:	20 a2 21 01 5e 00    	and    BYTE PTR [rdx+0x5e0121],ah
    23c1:	00 00                	add    BYTE PTR [rax],al
    23c3:	00 00                	add    BYTE PTR [rax],al
    23c5:	04 8f                	add    al,0x8f
    23c7:	21 99 21 01 50 04    	and    DWORD PTR [rcx+0x4500121],ebx
    23cd:	99                   	cdq
    23ce:	21 b3 21 01 5f 00    	and    DWORD PTR [rbx+0x5f0121],esi
    23d4:	02 00                	add    al,BYTE PTR [rax]
    23d6:	04 a2                	add    al,0xa2
    23d8:	21 ae 21 06 a0 3d    	and    DWORD PTR [rsi+0x3da00621],ebp
    23de:	cb                   	retf
    23df:	00 00                	add    BYTE PTR [rax],al
    23e1:	00 00                	add    BYTE PTR [rax],al
    23e3:	02 00                	add    al,BYTE PTR [rax]
    23e5:	04 c3                	add    al,0xc3
    23e7:	1f                   	(bad)
    23e8:	d7                   	xlat   BYTE PTR ds:[rbx]
    23e9:	1f                   	(bad)
    23ea:	06                   	(bad)
    23eb:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    23f2:	02 00 
    23f4:	04 d7                	add    al,0xd7
    23f6:	1f                   	(bad)
    23f7:	e3 1f                	jrcxz  2418 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x48>
    23f9:	06                   	(bad)
    23fa:	a0 7d cb 00 00 00 00 	movabs al,ds:0x200000000cb7d
    2401:	02 00 
    2403:	04 e3                	add    al,0xe3
    2405:	1f                   	(bad)
    2406:	ef                   	out    dx,eax
    2407:	1f                   	(bad)
    2408:	06                   	(bad)
    2409:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    2410:	03 00 
    2412:	04 ef                	add    al,0xef
    2414:	1f                   	(bad)
    2415:	aa                   	stos   BYTE PTR es:[rdi],al
    2416:	20 03                	and    BYTE PTR [rbx],al
    2418:	91                   	xchg   ecx,eax
    2419:	9c                   	pushf
    241a:	7f 00                	jg     241c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x4c>
    241c:	03 00                	add    eax,DWORD PTR [rax]
    241e:	04 ef                	add    al,0xef
    2420:	1f                   	(bad)
    2421:	aa                   	stos   BYTE PTR es:[rdi],al
    2422:	20 01                	and    BYTE PTR [rcx],al
    2424:	5e                   	pop    rsi
    2425:	00 00                	add    BYTE PTR [rax],al
    2427:	00 00                	add    BYTE PTR [rax],al
    2429:	00 04 97             	add    BYTE PTR [rdi+rdx*4],al
    242c:	20 a1 20 01 50 04    	and    BYTE PTR [rcx+0x4500120],ah
    2432:	a1 20 bb 20 01 5f 00 	movabs eax,ds:0x2005f0120bb20
    2439:	02 00 
    243b:	04 aa                	add    al,0xaa
    243d:	20 b6 20 06 a0 3d    	and    BYTE PTR [rsi+0x3da00620],dh
    2443:	cb                   	retf
    2444:	00 00                	add    BYTE PTR [rax],al
    2446:	00 00                	add    BYTE PTR [rax],al
    2448:	02 00                	add    al,BYTE PTR [rax]
    244a:	04 cb                	add    al,0xcb
    244c:	1e                   	(bad)
    244d:	df 1e                	fistp  WORD PTR [rsi]
    244f:	06                   	(bad)
    2450:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    2457:	02 00 
    2459:	04 df                	add    al,0xdf
    245b:	1e                   	(bad)
    245c:	eb 1e                	jmp    247c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xac>
    245e:	06                   	(bad)
    245f:	a0 86 cb 00 00 00 00 	movabs al,ds:0x200000000cb86
    2466:	02 00 
    2468:	04 eb                	add    al,0xeb
    246a:	1e                   	(bad)
    246b:	f7 1e                	neg    DWORD PTR [rsi]
    246d:	06                   	(bad)
    246e:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    2475:	03 00 
    2477:	04 f7                	add    al,0xf7
    2479:	1e                   	(bad)
    247a:	b2 1f                	mov    dl,0x1f
    247c:	03 91 9c 7f 00 03    	add    edx,DWORD PTR [rcx+0x3007f9c]
    2482:	00 04 f7             	add    BYTE PTR [rdi+rsi*8],al
    2485:	1e                   	(bad)
    2486:	b2 1f                	mov    dl,0x1f
    2488:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    248b:	00 00                	add    BYTE PTR [rax],al
    248d:	00 00                	add    BYTE PTR [rax],al
    248f:	04 9f                	add    al,0x9f
    2491:	1f                   	(bad)
    2492:	a9 1f 01 50 04       	test   eax,0x450011f
    2497:	a9 1f c3 1f 01       	test   eax,0x11fc31f
    249c:	5f                   	pop    rdi
    249d:	00 02                	add    BYTE PTR [rdx],al
    249f:	00 04 b2             	add    BYTE PTR [rdx+rsi*4],al
    24a2:	1f                   	(bad)
    24a3:	be 1f 06 a0 3d       	mov    esi,0x3da0061f
    24a8:	cb                   	retf
    24a9:	00 00                	add    BYTE PTR [rax],al
    24ab:	00 00                	add    BYTE PTR [rax],al
    24ad:	02 00                	add    al,BYTE PTR [rax]
    24af:	04 d3                	add    al,0xd3
    24b1:	1d e7 1d 06 a0       	sbb    eax,0xa0061de7
    24b6:	e0 ca                	loopne 2482 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xb2>
    24b8:	00 00                	add    BYTE PTR [rax],al
    24ba:	00 00                	add    BYTE PTR [rax],al
    24bc:	02 00                	add    al,BYTE PTR [rax]
    24be:	04 e7                	add    al,0xe7
    24c0:	1d f3 1d 06 a0       	sbb    eax,0xa0061df3
    24c5:	93                   	xchg   ebx,eax
    24c6:	cb                   	retf
    24c7:	00 00                	add    BYTE PTR [rax],al
    24c9:	00 00                	add    BYTE PTR [rax],al
    24cb:	02 00                	add    al,BYTE PTR [rax]
    24cd:	04 f3                	add    al,0xf3
    24cf:	1d ff 1d 06 a0       	sbb    eax,0xa0061dff
    24d4:	19 cb                	sbb    ebx,ecx
    24d6:	00 00                	add    BYTE PTR [rax],al
    24d8:	00 00                	add    BYTE PTR [rax],al
    24da:	03 00                	add    eax,DWORD PTR [rax]
    24dc:	04 ff                	add    al,0xff
    24de:	1d ba 1e 03 91       	sbb    eax,0x91031eba
    24e3:	9c                   	pushf
    24e4:	7f 00                	jg     24e6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x116>
    24e6:	03 00                	add    eax,DWORD PTR [rax]
    24e8:	04 ff                	add    al,0xff
    24ea:	1d ba 1e 01 5e       	sbb    eax,0x5e011eba
    24ef:	00 00                	add    BYTE PTR [rax],al
    24f1:	00 00                	add    BYTE PTR [rax],al
    24f3:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    24f6:	1e                   	(bad)
    24f7:	b1 1e                	mov    cl,0x1e
    24f9:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    24fc:	b1 1e                	mov    cl,0x1e
    24fe:	cb                   	retf
    24ff:	1e                   	(bad)
    2500:	01 5f 00             	add    DWORD PTR [rdi+0x0],ebx
    2503:	02 00                	add    al,BYTE PTR [rax]
    2505:	04 ba                	add    al,0xba
    2507:	1e                   	(bad)
    2508:	c6                   	(bad)
    2509:	1e                   	(bad)
    250a:	06                   	(bad)
    250b:	a0 3d cb 00 00 00 00 	movabs al,ds:0x200000000cb3d
    2512:	02 00 
    2514:	04 dd                	add    al,0xdd
    2516:	1c ef                	sbb    al,0xef
    2518:	1c 06                	sbb    al,0x6
    251a:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    2521:	02 00 
    2523:	04 ef                	add    al,0xef
    2525:	1c f7                	sbb    al,0xf7
    2527:	1c 06                	sbb    al,0x6
    2529:	a0 9c cb 00 00 00 00 	movabs al,ds:0x200000000cb9c
    2530:	02 00 
    2532:	04 f7                	add    al,0xf7
    2534:	1c 83                	sbb    al,0x83
    2536:	1d 06 a0 19 cb       	sbb    eax,0xcb19a006
    253b:	00 00                	add    BYTE PTR [rax],al
    253d:	00 00                	add    BYTE PTR [rax],al
    253f:	03 00                	add    eax,DWORD PTR [rax]
    2541:	04 83                	add    al,0x83
    2543:	1d c2 1d 03 91       	sbb    eax,0x91031dc2
    2548:	9c                   	pushf
    2549:	7f 00                	jg     254b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x17b>
    254b:	03 00                	add    eax,DWORD PTR [rax]
    254d:	04 83                	add    al,0x83
    254f:	1d c2 1d 01 5e       	sbb    eax,0x5e011dc2
    2554:	00 00                	add    BYTE PTR [rax],al
    2556:	00 00                	add    BYTE PTR [rax],al
    2558:	00 04 ab             	add    BYTE PTR [rbx+rbp*4],al
    255b:	1d b7 1d 01 50       	sbb    eax,0x50011db7
    2560:	04 b7                	add    al,0xb7
    2562:	1d d3 1d 03 91       	sbb    eax,0x91031dd3
    2567:	a8 7f                	test   al,0x7f
    2569:	00 02                	add    BYTE PTR [rdx],al
    256b:	00 04 c2             	add    BYTE PTR [rdx+rax*8],al
    256e:	1d ce 1d 06 a0       	sbb    eax,0xa0061dce
    2573:	3d cb 00 00 00       	cmp    eax,0xcb
    2578:	00 03                	add    BYTE PTR [rbx],al
    257a:	00 04 83             	add    BYTE PTR [rbx+rax*4],al
    257d:	17                   	(bad)
    257e:	97                   	xchg   edi,eax
    257f:	17                   	(bad)
    2580:	06                   	(bad)
    2581:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    2588:	02 00 
    258a:	04 97                	add    al,0x97
    258c:	17                   	(bad)
    258d:	a3 17 06 a0 0e cb 00 	movabs ds:0xcb0ea00617,eax
    2594:	00 00 
    2596:	00 02                	add    BYTE PTR [rdx],al
    2598:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    259b:	17                   	(bad)
    259c:	af                   	scas   eax,DWORD PTR es:[rdi]
    259d:	17                   	(bad)
    259e:	06                   	(bad)
    259f:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    25a6:	03 00 
    25a8:	04 af                	add    al,0xaf
    25aa:	17                   	(bad)
    25ab:	f9                   	stc
    25ac:	17                   	(bad)
    25ad:	03 91 9c 7f 00 03    	add    edx,DWORD PTR [rcx+0x3007f9c]
    25b3:	00 04 af             	add    BYTE PTR [rdi+rbp*4],al
    25b6:	17                   	(bad)
    25b7:	f9                   	stc
    25b8:	17                   	(bad)
    25b9:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    25bc:	00 00                	add    BYTE PTR [rax],al
    25be:	00 00                	add    BYTE PTR [rax],al
    25c0:	00 00                	add    BYTE PTR [rax],al
    25c2:	04 e2                	add    al,0xe2
    25c4:	17                   	(bad)
    25c5:	e9 17 01 50 04       	jmp    45026e1 <_end+0x44fc6c9>
    25ca:	e9 17 f4 17 01       	jmp    11819e6 <_end+0x117b9ce>
    25cf:	53                   	push   rbx
    25d0:	04 f4                	add    al,0xf4
    25d2:	17                   	(bad)
    25d3:	f8                   	clc
    25d4:	17                   	(bad)
    25d5:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
    25d8:	02 00                	add    al,BYTE PTR [rax]
    25da:	04 f9                	add    al,0xf9
    25dc:	17                   	(bad)
    25dd:	81 18 06 a0 3d cb    	sbb    DWORD PTR [rax],0xcb3da006
    25e3:	00 00                	add    BYTE PTR [rax],al
    25e5:	00 00                	add    BYTE PTR [rax],al
    25e7:	04 00                	add    al,0x0
    25e9:	04 81                	add    al,0x81
    25eb:	18 89 18 06 a0 e0    	sbb    BYTE PTR [rcx-0x1f5ff9e8],cl
    25f1:	ca 00 00             	retf   0x0
    25f4:	00 00                	add    BYTE PTR [rax],al
    25f6:	02 00                	add    al,BYTE PTR [rax]
    25f8:	04 89                	add    al,0x89
    25fa:	18 95 18 06 a0 61    	sbb    BYTE PTR [rbp+0x61a00618],dl
    2600:	cb                   	retf
    2601:	00 00                	add    BYTE PTR [rax],al
    2603:	00 00                	add    BYTE PTR [rax],al
    2605:	02 00                	add    al,BYTE PTR [rax]
    2607:	04 95                	add    al,0x95
    2609:	18 a1 18 06 a0 19    	sbb    BYTE PTR [rcx+0x19a00618],ah
    260f:	cb                   	retf
    2610:	00 00                	add    BYTE PTR [rax],al
    2612:	00 00                	add    BYTE PTR [rax],al
    2614:	00 00                	add    BYTE PTR [rax],al
    2616:	04 a6                	add    al,0xa6
    2618:	18 e5                	sbb    ch,ah
    261a:	18 03                	sbb    BYTE PTR [rbx],al
    261c:	91                   	xchg   ecx,eax
    261d:	9c                   	pushf
    261e:	7f 00                	jg     2620 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x250>
    2620:	00 00                	add    BYTE PTR [rax],al
    2622:	04 a6                	add    al,0xa6
    2624:	18 e5                	sbb    ch,ah
    2626:	18 01                	sbb    BYTE PTR [rcx],al
    2628:	5e                   	pop    rsi
    2629:	00 00                	add    BYTE PTR [rax],al
    262b:	00 00                	add    BYTE PTR [rax],al
    262d:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    2630:	18 da                	sbb    dl,bl
    2632:	18 01                	sbb    BYTE PTR [rcx],al
    2634:	50                   	push   rax
    2635:	04 da                	add    al,0xda
    2637:	18 dd                	sbb    ch,bl
    2639:	1c 03                	sbb    al,0x3
    263b:	91                   	xchg   ecx,eax
    263c:	a8 7f                	test   al,0x7f
    263e:	00 02                	add    BYTE PTR [rdx],al
    2640:	00 04 e5 18 ed 18 06 	add    BYTE PTR [riz*8+0x618ed18],al
    2647:	a0 3d cb 00 00 00 00 	movabs al,ds:0x400000000cb3d
    264e:	04 00 
    2650:	04 ed                	add    al,0xed
    2652:	18 f5                	sbb    ch,dh
    2654:	18 06                	sbb    BYTE PTR [rsi],al
    2656:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    265d:	02 00 
    265f:	04 f5                	add    al,0xf5
    2661:	18 fd                	sbb    ch,bh
    2663:	18 06                	sbb    BYTE PTR [rsi],al
    2665:	a0 9c cb 00 00 00 00 	movabs al,ds:0x200000000cb9c
    266c:	02 00 
    266e:	04 fd                	add    al,0xfd
    2670:	18 89 19 06 a0 19    	sbb    BYTE PTR [rcx+0x19a00619],cl
    2676:	cb                   	retf
    2677:	00 00                	add    BYTE PTR [rax],al
    2679:	00 00                	add    BYTE PTR [rax],al
    267b:	03 00                	add    eax,DWORD PTR [rax]
    267d:	04 89                	add    al,0x89
    267f:	19 c4                	sbb    esp,eax
    2681:	19 03                	sbb    DWORD PTR [rbx],eax
    2683:	91                   	xchg   ecx,eax
    2684:	9c                   	pushf
    2685:	7f 00                	jg     2687 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2b7>
    2687:	03 00                	add    eax,DWORD PTR [rax]
    2689:	04 89                	add    al,0x89
    268b:	19 c4                	sbb    esp,eax
    268d:	19 01                	sbb    DWORD PTR [rcx],eax
    268f:	5e                   	pop    rsi
    2690:	00 00                	add    BYTE PTR [rax],al
    2692:	00 00                	add    BYTE PTR [rax],al
    2694:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    2697:	19 bb 19 01 50 04    	sbb    DWORD PTR [rbx+0x4500119],edi
    269d:	bb 19 97 1a 01       	mov    ebx,0x11a9719
    26a2:	5d                   	pop    rbp
    26a3:	00 02                	add    BYTE PTR [rdx],al
    26a5:	00 04 c4             	add    BYTE PTR [rsp+rax*8],al
    26a8:	19 cc                	sbb    esp,ecx
    26aa:	19 06                	sbb    DWORD PTR [rsi],eax
    26ac:	a0 3d cb 00 00 00 00 	movabs al,ds:0x400000000cb3d
    26b3:	04 00 
    26b5:	04 cc                	add    al,0xcc
    26b7:	19 d4                	sbb    esp,edx
    26b9:	19 06                	sbb    DWORD PTR [rsi],eax
    26bb:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    26c2:	02 00 
    26c4:	04 d4                	add    al,0xd4
    26c6:	19 e0                	sbb    eax,esp
    26c8:	19 06                	sbb    DWORD PTR [rsi],eax
    26ca:	a0 70 cb 00 00 00 00 	movabs al,ds:0x200000000cb70
    26d1:	02 00 
    26d3:	04 e0                	add    al,0xe0
    26d5:	19 ec                	sbb    esp,ebp
    26d7:	19 06                	sbb    DWORD PTR [rsi],eax
    26d9:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    26e0:	03 00 
    26e2:	04 ec                	add    al,0xec
    26e4:	19 a7 1a 03 91 9c    	sbb    DWORD PTR [rdi-0x636efce6],esp
    26ea:	7f 00                	jg     26ec <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x31c>
    26ec:	03 00                	add    eax,DWORD PTR [rax]
    26ee:	04 ec                	add    al,0xec
    26f0:	19 a7 1a 01 5e 00    	sbb    DWORD PTR [rdi+0x5e011a],esp
    26f6:	00 00                	add    BYTE PTR [rax],al
    26f8:	00 00                	add    BYTE PTR [rax],al
    26fa:	04 97                	add    al,0x97
    26fc:	1a 9e 1a 01 50 04    	sbb    bl,BYTE PTR [rsi+0x450011a]
    2702:	9e                   	sahf
    2703:	1a fa                	sbb    bh,dl
    2705:	1a 01                	sbb    al,BYTE PTR [rcx]
    2707:	5d                   	pop    rbp
    2708:	00 02                	add    BYTE PTR [rdx],al
    270a:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    270d:	1a af 1a 06 a0 3d    	sbb    ch,BYTE PTR [rdi+0x3da0061a]
    2713:	cb                   	retf
    2714:	00 00                	add    BYTE PTR [rax],al
    2716:	00 00                	add    BYTE PTR [rax],al
    2718:	04 00                	add    al,0x0
    271a:	04 af                	add    al,0xaf
    271c:	1a b7 1a 06 a0 e0    	sbb    dh,BYTE PTR [rdi-0x1f5ff9e6]
    2722:	ca 00 00             	retf   0x0
    2725:	00 00                	add    BYTE PTR [rax],al
    2727:	02 00                	add    al,BYTE PTR [rax]
    2729:	04 b7                	add    al,0xb7
    272b:	1a c3                	sbb    al,bl
    272d:	1a 06                	sbb    al,BYTE PTR [rsi]
    272f:	a0 7d cb 00 00 00 00 	movabs al,ds:0x200000000cb7d
    2736:	02 00 
    2738:	04 c3                	add    al,0xc3
    273a:	1a cf                	sbb    cl,bh
    273c:	1a 06                	sbb    al,BYTE PTR [rsi]
    273e:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    2745:	03 00 
    2747:	04 cf                	add    al,0xcf
    2749:	1a 8a 1b 03 91 9c    	sbb    cl,BYTE PTR [rdx-0x636efce5]
    274f:	7f 00                	jg     2751 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x381>
    2751:	03 00                	add    eax,DWORD PTR [rax]
    2753:	04 cf                	add    al,0xcf
    2755:	1a 8a 1b 01 5e 00    	sbb    cl,BYTE PTR [rdx+0x5e011b]
    275b:	00 00                	add    BYTE PTR [rax],al
    275d:	00 00                	add    BYTE PTR [rax],al
    275f:	04 fa                	add    al,0xfa
    2761:	1a 81 1b 01 50 04    	sbb    al,BYTE PTR [rcx+0x450011b]
    2767:	81 1b dd 1b 01 5d    	sbb    DWORD PTR [rbx],0x5d011bdd
    276d:	00 02                	add    BYTE PTR [rdx],al
    276f:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
    2772:	1b 92 1b 06 a0 3d    	sbb    edx,DWORD PTR [rdx+0x3da0061b]
    2778:	cb                   	retf
    2779:	00 00                	add    BYTE PTR [rax],al
    277b:	00 00                	add    BYTE PTR [rax],al
    277d:	04 00                	add    al,0x0
    277f:	04 92                	add    al,0x92
    2781:	1b 9a 1b 06 a0 e0    	sbb    ebx,DWORD PTR [rdx-0x1f5ff9e5]
    2787:	ca 00 00             	retf   0x0
    278a:	00 00                	add    BYTE PTR [rax],al
    278c:	02 00                	add    al,BYTE PTR [rax]
    278e:	04 9a                	add    al,0x9a
    2790:	1b a6 1b 06 a0 86    	sbb    esp,DWORD PTR [rsi-0x795ff9e5]
    2796:	cb                   	retf
    2797:	00 00                	add    BYTE PTR [rax],al
    2799:	00 00                	add    BYTE PTR [rax],al
    279b:	02 00                	add    al,BYTE PTR [rax]
    279d:	04 a6                	add    al,0xa6
    279f:	1b b2 1b 06 a0 19    	sbb    esi,DWORD PTR [rdx+0x19a0061b]
    27a5:	cb                   	retf
    27a6:	00 00                	add    BYTE PTR [rax],al
    27a8:	00 00                	add    BYTE PTR [rax],al
    27aa:	03 00                	add    eax,DWORD PTR [rax]
    27ac:	04 b2                	add    al,0xb2
    27ae:	1b ed                	sbb    ebp,ebp
    27b0:	1b 03                	sbb    eax,DWORD PTR [rbx]
    27b2:	91                   	xchg   ecx,eax
    27b3:	9c                   	pushf
    27b4:	7f 00                	jg     27b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3e6>
    27b6:	03 00                	add    eax,DWORD PTR [rax]
    27b8:	04 b2                	add    al,0xb2
    27ba:	1b ed                	sbb    ebp,ebp
    27bc:	1b 01                	sbb    eax,DWORD PTR [rcx]
    27be:	5e                   	pop    rsi
    27bf:	00 00                	add    BYTE PTR [rax],al
    27c1:	00 00                	add    BYTE PTR [rax],al
    27c3:	00 04 dd 1b e4 1b 01 	add    BYTE PTR [rbx*8+0x11be41b],al
    27ca:	50                   	push   rax
    27cb:	04 e4                	add    al,0xe4
    27cd:	1b bd 1c 01 5d 00    	sbb    edi,DWORD PTR [rbp+0x5d011c]
    27d3:	02 00                	add    al,BYTE PTR [rax]
    27d5:	04 ed                	add    al,0xed
    27d7:	1b f5                	sbb    esi,ebp
    27d9:	1b 06                	sbb    eax,DWORD PTR [rsi]
    27db:	a0 3d cb 00 00 00 00 	movabs al,ds:0x400000000cb3d
    27e2:	04 00 
    27e4:	04 f5                	add    al,0xf5
    27e6:	1b fd                	sbb    edi,ebp
    27e8:	1b 06                	sbb    eax,DWORD PTR [rsi]
    27ea:	a0 e0 ca 00 00 00 00 	movabs al,ds:0x200000000cae0
    27f1:	02 00 
    27f3:	04 fd                	add    al,0xfd
    27f5:	1b 89 1c 06 a0 93    	sbb    ecx,DWORD PTR [rcx-0x6c5ff9e4]
    27fb:	cb                   	retf
    27fc:	00 00                	add    BYTE PTR [rax],al
    27fe:	00 00                	add    BYTE PTR [rax],al
    2800:	02 00                	add    al,BYTE PTR [rax]
    2802:	04 89                	add    al,0x89
    2804:	1c 95                	sbb    al,0x95
    2806:	1c 06                	sbb    al,0x6
    2808:	a0 19 cb 00 00 00 00 	movabs al,ds:0x300000000cb19
    280f:	03 00 
    2811:	04 95                	add    al,0x95
    2813:	1c d0                	sbb    al,0xd0
    2815:	1c 03                	sbb    al,0x3
    2817:	91                   	xchg   ecx,eax
    2818:	9c                   	pushf
    2819:	7f 00                	jg     281b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x44b>
    281b:	03 00                	add    eax,DWORD PTR [rax]
    281d:	04 95                	add    al,0x95
    281f:	1c d0                	sbb    al,0xd0
    2821:	1c 01                	sbb    al,0x1
    2823:	5e                   	pop    rsi
    2824:	00 00                	add    BYTE PTR [rax],al
    2826:	00 00                	add    BYTE PTR [rax],al
    2828:	00 04 bd 1c c7 1c 01 	add    BYTE PTR [rdi*4+0x11cc71c],al
    282f:	50                   	push   rax
    2830:	04 c7                	add    al,0xc7
    2832:	1c dd                	sbb    al,0xdd
    2834:	1c 01                	sbb    al,0x1
    2836:	5d                   	pop    rbp
    2837:	00 02                	add    BYTE PTR [rdx],al
    2839:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
    283c:	1c d8                	sbb    al,0xd8
    283e:	1c 06                	sbb    al,0x6
    2840:	a0 3d cb 00 00 00 00 	movabs al,ds:0xcb3d
    2847:	00 00 
    2849:	00 00                	add    BYTE PTR [rax],al
    284b:	00 00                	add    BYTE PTR [rax],al
    284d:	04 b0                	add    al,0xb0
    284f:	12 d3                	adc    dl,bl
    2851:	12 01                	adc    al,BYTE PTR [rcx]
    2853:	55                   	push   rbp
    2854:	04 d3                	add    al,0xd3
    2856:	12 85 13 01 56 04    	adc    al,BYTE PTR [rbp+0x4560113]
    285c:	85 13                	test   DWORD PTR [rbx],edx
    285e:	92                   	xchg   edx,eax
    285f:	13 04 a3             	adc    eax,DWORD PTR [rbx+riz*4]
    2862:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2865:	00 00                	add    BYTE PTR [rax],al
    2867:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
    286a:	12 bd 12 06 54 93    	adc    bh,BYTE PTR [rbp-0x6cabf9ee]
    2870:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    2873:	08 00                	or     BYTE PTR [rax],al
    2875:	00 00                	add    BYTE PTR [rax],al
    2877:	00 00                	add    BYTE PTR [rax],al
    2879:	00 00                	add    BYTE PTR [rax],al
    287b:	04 b0                	add    al,0xb0
    287d:	12 c7                	adc    al,bh
    287f:	12 06                	adc    al,BYTE PTR [rsi]
    2881:	52                   	push   rdx
    2882:	93                   	xchg   ebx,eax
    2883:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2886:	08 04 c7             	or     BYTE PTR [rdi+rax*8],al
    2889:	12 cc                	adc    cl,ah
    288b:	12 06                	adc    al,BYTE PTR [rsi]
    288d:	5d                   	pop    rbp
    288e:	93                   	xchg   ebx,eax
    288f:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2892:	08 04 cc             	or     BYTE PTR [rsp+rcx*8],al
    2895:	12 87 13 06 5d 93    	adc    al,BYTE PTR [rdi-0x6ca2f9ed]
    289b:	08 5c 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],bl
    289f:	00 00                	add    BYTE PTR [rax],al
    28a1:	00 00                	add    BYTE PTR [rax],al
    28a3:	00 00                	add    BYTE PTR [rax],al
    28a5:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
    28a8:	12 e1                	adc    ah,cl
    28aa:	12 01                	adc    al,BYTE PTR [rcx]
    28ac:	59                   	pop    rcx
    28ad:	04 e1                	add    al,0xe1
    28af:	12 8b 13 01 5e 04    	adc    cl,BYTE PTR [rbx+0x45e0113]
    28b5:	8b 13                	mov    edx,DWORD PTR [rbx]
    28b7:	92                   	xchg   edx,eax
    28b8:	13 04 a3             	adc    eax,DWORD PTR [rbx+riz*4]
    28bb:	01 59 9f             	add    DWORD PTR [rcx-0x61],ebx
    28be:	00 00                	add    BYTE PTR [rax],al
    28c0:	00 00                	add    BYTE PTR [rax],al
    28c2:	00 00                	add    BYTE PTR [rax],al
    28c4:	00 04 f7             	add    BYTE PTR [rdi+rsi*8],al
    28c7:	12 fb                	adc    bh,bl
    28c9:	12 01                	adc    al,BYTE PTR [rcx]
    28cb:	50                   	push   rax
    28cc:	04 fb                	add    al,0xfb
    28ce:	12 84 13 01 53 04 84 	adc    al,BYTE PTR [rbx+rdx*1-0x7bfbacff]
    28d5:	13 91 13 01 55 00    	adc    edx,DWORD PTR [rcx+0x550113]
	...
    28eb:	00 00                	add    BYTE PTR [rax],al
    28ed:	04 f0                	add    al,0xf0
    28ef:	22 c9                	and    cl,cl
    28f1:	23 01                	and    eax,DWORD PTR [rcx]
    28f3:	55                   	push   rbp
    28f4:	04 c9                	add    al,0xc9
    28f6:	23 ef                	and    ebp,edi
    28f8:	24 01                	and    al,0x1
    28fa:	51                   	push   rcx
    28fb:	04 ef                	add    al,0xef
    28fd:	24 81                	and    al,0x81
    28ff:	25 04 a3 01 55       	and    eax,0x5501a304
    2904:	9f                   	lahf
    2905:	04 81                	add    al,0x81
    2907:	25 8d 25 01 51       	and    eax,0x5101258d
    290c:	04 8d                	add    al,0x8d
    290e:	25 9a 25 01 55       	and    eax,0x5501259a
    2913:	04 9a                	add    al,0x9a
    2915:	25 a9 25 01 51       	and    eax,0x510125a9
    291a:	04 a9                	add    al,0xa9
    291c:	25 ac 25 04 a3       	and    eax,0xa30425ac
    2921:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2924:	04 ac                	add    al,0xac
    2926:	25 c6 25 01 55       	and    eax,0x550125c6
    292b:	04 c6                	add    al,0xc6
    292d:	25 cb 25 04 a3       	and    eax,0xa30425cb
    2932:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    2945:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    2948:	22 b3 23 01 54 04    	and    dh,BYTE PTR [rbx+0x4540123]
    294e:	b3 23                	mov    bl,0x23
    2950:	f3 24 01             	repz and al,0x1
    2953:	52                   	push   rdx
    2954:	04 f3                	add    al,0xf3
    2956:	24 8d                	and    al,0x8d
    2958:	25 04 a3 01 54       	and    eax,0x5401a304
    295d:	9f                   	lahf
    295e:	04 8d                	add    al,0x8d
    2960:	25 a5 25 01 54       	and    eax,0x540125a5
    2965:	04 a5                	add    al,0xa5
    2967:	25 a9 25 01 52       	and    eax,0x520125a9
    296c:	04 a9                	add    al,0xa9
    296e:	25 ac 25 04 a3       	and    eax,0xa30425ac
    2973:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2977:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2978:	25 bf 25 01 54       	and    eax,0x540125bf
    297d:	04 bf                	add    al,0xbf
    297f:	25 cb 25 04 a3       	and    eax,0xa30425cb
    2984:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    299c:	00 00                	add    BYTE PTR [rax],al
    299e:	04 f0                	add    al,0xf0
    29a0:	22 bc 23 01 61 04 bc 	and    bh,BYTE PTR [rbx+riz*1-0x43fb9eff]
    29a7:	23 ef                	and    ebp,edi
    29a9:	24 01                	and    al,0x1
    29ab:	64 04 ef             	fs add al,0xef
    29ae:	24 81                	and    al,0x81
    29b0:	25 06 a3 03 a5       	and    eax,0xa503a306
    29b5:	11 2e                	adc    DWORD PTR [rsi],ebp
    29b7:	9f                   	lahf
    29b8:	04 81                	add    al,0x81
    29ba:	25 8d 25 01 64       	and    eax,0x6401258d
    29bf:	04 8d                	add    al,0x8d
    29c1:	25 94 25 01 61       	and    eax,0x61012594
    29c6:	04 94                	add    al,0x94
    29c8:	25 9a 25 06 a3       	and    eax,0xa306259a
    29cd:	03 a5 11 2e 9f 04    	add    esp,DWORD PTR [rbp+0x49f2e11]
    29d3:	9a                   	(bad)
    29d4:	25 a0 25 01 61       	and    eax,0x610125a0
    29d9:	04 a0                	add    al,0xa0
    29db:	25 a9 25 01 64       	and    eax,0x640125a9
    29e0:	04 a9                	add    al,0xa9
    29e2:	25 ac 25 06 a3       	and    eax,0xa30625ac
    29e7:	03 a5 11 2e 9f 04    	add    esp,DWORD PTR [rbp+0x49f2e11]
    29ed:	ac                   	lods   al,BYTE PTR ds:[rsi]
    29ee:	25 ca 25 01 61       	and    eax,0x610125ca
    29f3:	04 ca                	add    al,0xca
    29f5:	25 cb 25 06 a3       	and    eax,0xa30625cb
    29fa:	03 a5 11 2e 9f 00    	add    esp,DWORD PTR [rbp+0x9f2e11]
	...
    2a10:	04 96                	add    al,0x96
    2a12:	23 c9                	and    ecx,ecx
    2a14:	23 0a                	and    ecx,DWORD PTR [rdx]
    2a16:	9e                   	sahf
    2a17:	08 00                	or     BYTE PTR [rax],al
    2a19:	00 00                	add    BYTE PTR [rax],al
    2a1b:	00 00                	add    BYTE PTR [rax],al
    2a1d:	00 00                	add    BYTE PTR [rax],al
    2a1f:	00 04 c9             	add    BYTE PTR [rcx+rcx*8],al
    2a22:	23 e4                	and    esp,esp
    2a24:	23 01                	and    eax,DWORD PTR [rcx]
    2a26:	61                   	(bad)
    2a27:	04 fe                	add    al,0xfe
    2a29:	23 90 24 01 61 04    	and    edx,DWORD PTR [rax+0x4610124]
    2a2f:	99                   	cdq
    2a30:	24 b0                	and    al,0xb0
    2a32:	24 01                	and    al,0x1
    2a34:	61                   	(bad)
    2a35:	04 b8                	add    al,0xb8
    2a37:	24 dc                	and    al,0xdc
    2a39:	24 01                	and    al,0x1
    2a3b:	61                   	(bad)
    2a3c:	04 f3                	add    al,0xf3
    2a3e:	24 fb                	and    al,0xfb
    2a40:	24 06                	and    al,0x6
    2a42:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2a43:	11 35 a8 2e 9f 04    	adc    DWORD PTR [rip+0x49f2ea8],esi        # 49f58f1 <_end+0x49ef8d9>
    2a49:	fb                   	sti
    2a4a:	24 8d                	and    al,0x8d
    2a4c:	25 01 61 04 8d       	and    eax,0x8d046101
    2a51:	25 a5 25 0a 9e       	and    eax,0x9e0a25a5
    2a56:	08 00                	or     BYTE PTR [rax],al
	...
    2a64:	04 96                	add    al,0x96
    2a66:	23 c9                	and    ecx,ecx
    2a68:	23 02                	and    eax,DWORD PTR [rdx]
    2a6a:	30 9f 04 8d 25 a5    	xor    BYTE PTR [rdi-0x5ada72fc],bl
    2a70:	25 02 30 9f 00       	and    eax,0x9f3002
    2a75:	00 00                	add    BYTE PTR [rax],al
    2a77:	00 00                	add    BYTE PTR [rax],al
    2a79:	00 00                	add    BYTE PTR [rax],al
    2a7b:	04 e5                	add    al,0xe5
    2a7d:	24 f3                	and    al,0xf3
    2a7f:	24 01                	and    al,0x1
    2a81:	61                   	(bad)
    2a82:	04 98                	add    al,0x98
    2a84:	25 9a 25 01 61       	and    eax,0x6101259a
    2a89:	04 a5                	add    al,0xa5
    2a8b:	25 a9 25 01 61       	and    eax,0x610125a9
    2a90:	00 02                	add    BYTE PTR [rdx],al
    2a92:	00 00                	add    BYTE PTR [rax],al
    2a94:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
    2a97:	25 bf 25 01 54       	and    eax,0x540125bf
    2a9c:	04 bf                	add    al,0xbf
    2a9e:	25 cb 25 04 a3       	and    eax,0xa30425cb
    2aa3:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
    2aa7:	02 00                	add    al,BYTE PTR [rax]
    2aa9:	00 00                	add    BYTE PTR [rax],al
    2aab:	04 ac                	add    al,0xac
    2aad:	25 ca 25 01 61       	and    eax,0x610125ca
    2ab2:	04 ca                	add    al,0xca
    2ab4:	25 cb 25 06 a3       	and    eax,0xa30625cb
    2ab9:	03 a5 11 2e 9f 00    	add    esp,DWORD PTR [rbp+0x9f2e11]
	...
    2acb:	04 d0                	add    al,0xd0
    2acd:	25 87 26 01 55       	and    eax,0x55012687
    2ad2:	04 87                	add    al,0x87
    2ad4:	26 81 2b 04 a3 01 55 	es sub DWORD PTR [rbx],0x5501a304
    2adb:	9f                   	lahf
    2adc:	04 81                	add    al,0x81
    2ade:	2b a3 2b 01 55 04    	sub    esp,DWORD PTR [rbx+0x455012b]
    2ae4:	a3 2b cd 2b 04 a3 01 	movabs ds:0x9f5501a3042bcd2b,eax
    2aeb:	55 9f 
    2aed:	04 cd                	add    al,0xcd
    2aef:	2b e7                	sub    esp,edi
    2af1:	2b 01                	sub    eax,DWORD PTR [rcx]
    2af3:	55                   	push   rbp
    2af4:	04 e7                	add    al,0xe7
    2af6:	2b ec                	sub    ebp,esp
    2af8:	2b 04 a3             	sub    eax,DWORD PTR [rbx+riz*4]
    2afb:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    2b12:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
    2b15:	25 d7 26 01 61       	and    eax,0x610126d7
    2b1a:	04 d7                	add    al,0xd7
    2b1c:	26 81 2b 01 65 04 81 	es sub DWORD PTR [rbx],0x81046501
    2b23:	2b a2 2b 01 61 04    	sub    esp,DWORD PTR [rdx+0x461012b]
    2b29:	a2 2b a3 2b 06 a3 03 	movabs ds:0x11a503a3062ba32b,al
    2b30:	a5 11 
    2b32:	35 9f 04 a3 2b       	xor    eax,0x2ba3049f
    2b37:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2b38:	2b 01                	sub    eax,DWORD PTR [rcx]
    2b3a:	65 04 ad             	gs add al,0xad
    2b3d:	2b b9 2b 01 61 04    	sub    edi,DWORD PTR [rcx+0x461012b]
    2b43:	b9 2b cc 2b 01       	mov    ecx,0x12bcc2b
    2b48:	65 04 cc             	gs add al,0xcc
    2b4b:	2b cd                	sub    ecx,ebp
    2b4d:	2b 06                	sub    eax,DWORD PTR [rsi]
    2b4f:	a3 03 a5 11 35 9f 04 	movabs ds:0x2bcd049f3511a503,eax
    2b56:	cd 2b 
    2b58:	eb 2b                	jmp    2b85 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x345>
    2b5a:	01 61 04             	add    DWORD PTR [rcx+0x4],esp
    2b5d:	eb 2b                	jmp    2b8a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x34a>
    2b5f:	ec                   	in     al,dx
    2b60:	2b 06                	sub    eax,DWORD PTR [rsi]
    2b62:	a3 03 a5 11 35 9f 00 	movabs ds:0x9f3511a503,eax
    2b69:	00 00 
	...
    2b77:	04 f6                	add    al,0xf6
    2b79:	25 d7 26 06 9e       	and    eax,0x9e0626d7
    2b7e:	04 00                	add    al,0x0
    2b80:	00 00                	add    BYTE PTR [rax],al
    2b82:	00 04 d7             	add    BYTE PTR [rdi+rdx*8],al
    2b85:	26 90                	es nop
    2b87:	28 01                	sub    BYTE PTR [rcx],al
    2b89:	69 04 cb 28 e6 28 01 	imul   eax,DWORD PTR [rbx+rcx*8],0x128e628
    2b90:	69 04 f6 28 e9 2a 01 	imul   eax,DWORD PTR [rsi+rsi*8],0x12ae928
    2b97:	69 04 81 2b a3 2b 06 	imul   eax,DWORD PTR [rcx+rax*4],0x62ba32b
    2b9e:	9e                   	sahf
    2b9f:	04 00                	add    al,0x0
    2ba1:	00 00                	add    BYTE PTR [rax],al
    2ba3:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    2ba6:	2b ad 2b 01 69 04    	sub    ebp,DWORD PTR [rbp+0x469012b]
    2bac:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2bad:	2b b9 2b 06 9e 04    	sub    edi,DWORD PTR [rcx+0x49e062b]
    2bb3:	00 00                	add    BYTE PTR [rax],al
    2bb5:	00 00                	add    BYTE PTR [rax],al
    2bb7:	00 00                	add    BYTE PTR [rax],al
    2bb9:	00 02                	add    BYTE PTR [rdx],al
    2bbb:	00 00                	add    BYTE PTR [rax],al
    2bbd:	00 02                	add    BYTE PTR [rdx],al
    2bbf:	00 00                	add    BYTE PTR [rax],al
    2bc1:	00 00                	add    BYTE PTR [rax],al
    2bc3:	00 04 f6             	add    BYTE PTR [rsi+rsi*8],al
    2bc6:	25 d7 26 02 30       	and    eax,0x300226d7
    2bcb:	9f                   	lahf
    2bcc:	04 9f                	add    al,0x9f
    2bce:	2a a7 2a 01 51 04    	sub    ah,BYTE PTR [rdi+0x451012a]
    2bd4:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2bd5:	2a aa 2a 03 70 01    	sub    ch,BYTE PTR [rdx+0x170032a]
    2bdb:	9f                   	lahf
    2bdc:	04 bf                	add    al,0xbf
    2bde:	2a c7                	sub    al,bh
    2be0:	2a 01                	sub    al,BYTE PTR [rcx]
    2be2:	50                   	push   rax
    2be3:	04 81                	add    al,0x81
    2be5:	2b a3 2b 02 30 9f    	sub    esp,DWORD PTR [rbx-0x60cffdd5]
    2beb:	04 ad                	add    al,0xad
    2bed:	2b b9 2b 02 30 9f    	sub    edi,DWORD PTR [rcx-0x60cffdd5]
    2bf3:	00 01                	add    BYTE PTR [rcx],al
    2bf5:	00 00                	add    BYTE PTR [rax],al
    2bf7:	00 01                	add    BYTE PTR [rcx],al
    2bf9:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    2bfc:	2a a7 2a 0f 71 00    	sub    ah,BYTE PTR [rdi+0x710f2a]
    2c02:	0c ff                	or     al,0xff
    2c04:	ff                   	(bad)
    2c05:	ff                   	(bad)
    2c06:	ff 1a                	call   FWORD PTR [rdx]
    2c08:	48 1e                	rex.W (bad)
    2c0a:	75 00                	jne    2c0c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3cc>
    2c0c:	22 23                	and    ah,BYTE PTR [rbx]
    2c0e:	10 04 a7             	adc    BYTE PTR [rdi+riz*4],al
    2c11:	2a aa 2a 0f 70 01    	sub    ch,BYTE PTR [rdx+0x1700f2a]
    2c17:	0c ff                	or     al,0xff
    2c19:	ff                   	(bad)
    2c1a:	ff                   	(bad)
    2c1b:	ff 1a                	call   FWORD PTR [rdx]
    2c1d:	48 1e                	rex.W (bad)
    2c1f:	75 00                	jne    2c21 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3e1>
    2c21:	22 23                	and    ah,BYTE PTR [rbx]
    2c23:	10 04 c3             	adc    BYTE PTR [rbx+rax*8],al
    2c26:	2a c7                	sub    al,bh
    2c28:	2a 0f                	sub    cl,BYTE PTR [rdi]
    2c2a:	70 00                	jo     2c2c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3ec>
    2c2c:	0c ff                	or     al,0xff
    2c2e:	ff                   	(bad)
    2c2f:	ff                   	(bad)
    2c30:	ff 1a                	call   FWORD PTR [rdx]
    2c32:	48 1e                	rex.W (bad)
    2c34:	75 00                	jne    2c36 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3f6>
    2c36:	22 23                	and    ah,BYTE PTR [rbx]
    2c38:	10 00                	adc    BYTE PTR [rax],al
    2c3a:	00 00                	add    BYTE PTR [rax],al
    2c3c:	00 00                	add    BYTE PTR [rax],al
    2c3e:	00 00                	add    BYTE PTR [rax],al
    2c40:	04 e9                	add    al,0xe9
    2c42:	2a 81 2b 01 69 04    	sub    al,BYTE PTR [rcx+0x469012b]
    2c48:	96                   	xchg   esi,eax
    2c49:	2b a3 2b 01 69 04    	sub    esp,DWORD PTR [rbx+0x469012b]
    2c4f:	b9 2b cc 2b 01       	mov    ecx,0x12bcc2b
    2c54:	69 00 02 00 00 00    	imul   eax,DWORD PTR [rax],0x2
    2c5a:	04 cd                	add    al,0xcd
    2c5c:	2b eb                	sub    ebp,ebx
    2c5e:	2b 01                	sub    eax,DWORD PTR [rcx]
    2c60:	61                   	(bad)
    2c61:	04 eb                	add    al,0xeb
    2c63:	2b ec                	sub    ebp,esp
    2c65:	2b 06                	sub    eax,DWORD PTR [rsi]
    2c67:	a3                   	.byte 0xa3
    2c68:	03 a5 11 35 9f 00    	add    esp,DWORD PTR [rbp+0x9f3511]

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
   0:	26 00 00             	es add BYTE PTR [rax],al
   3:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 809 <__abi_tag+0x48d>
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 05 d4 11 00 00    	add    BYTE PTR [rip+0x11d4],al        # 11e5 <main+0x15>
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 00                	add    BYTE PTR [rax],al
  15:	04 00                	add    al,0x0
  17:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
  1a:	05 04 08 14 00       	add    eax,0x140804
  1f:	07                   	(bad)
  20:	d0 11                	rcl    BYTE PTR [rcx],1
  22:	00 00                	add    BYTE PTR [rax],al
  24:	00 00                	add    BYTE PTR [rax],al
  26:	00 00                	add    BYTE PTR [rax],al
  28:	33 00                	xor    eax,DWORD PTR [rax]
  2a:	16                   	(bad)
  2b:	01 00                	add    DWORD PTR [rax],eax
  2d:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 833 <__abi_tag+0x4b7>
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 04 7b             	add    BYTE PTR [rbx+rdi*2],al
  38:	88 01                	mov    BYTE PTR [rcx],al
  3a:	04 88                	add    al,0x88
  3c:	01 8d 01 00 04 a3    	add    DWORD PTR [rbp-0x5cfbffff],ecx
  42:	01 ab 01 04 ae 01    	add    DWORD PTR [rbx+0x1ae0401],ebp
  48:	b1 01                	mov    cl,0x1
  4a:	04 b5                	add    al,0xb5
  4c:	01 b9 01 04 bc 01    	add    DWORD PTR [rcx+0x1bc0401],edi
  52:	cc                   	int3
  53:	01 00                	add    DWORD PTR [rax],eax
  55:	04 df                	add    al,0xdf
  57:	01 df                	add    edi,ebx
  59:	01 04 e4             	add    DWORD PTR [rsp+riz*8],eax
  5c:	01 ee                	add    esi,ebp
  5e:	01 04 f1             	add    DWORD PTR [rcx+rsi*8],eax
  61:	01 f6                	add    esi,esi
  63:	01 04 f9             	add    DWORD PTR [rcx+rdi*8],eax
  66:	01 fe                	add    esi,edi
  68:	01 00                	add    DWORD PTR [rax],eax
  6a:	04 fe                	add    al,0xfe
  6c:	01 8f 02 04 93 02    	add    DWORD PTR [rdi+0x2930402],ecx
  72:	98                   	cwde
  73:	02 00                	add    al,BYTE PTR [rax]
  75:	04 b7                	add    al,0xb7
  77:	08 bc 08 04 c8 08 ca 	or     BYTE PTR [rax+rcx*1-0x35f737fc],bh
  7e:	08 04 dc             	or     BYTE PTR [rsp+rbx*8],al
  81:	08 e2                	or     dl,ah
  83:	08 04 f9             	or     BYTE PTR [rcx+rdi*8],al
  86:	08 f9                	or     cl,bh
  88:	08 00                	or     BYTE PTR [rax],al
  8a:	04 bc                	add    al,0xbc
  8c:	08 c4                	or     ah,al
  8e:	08 04 c4             	or     BYTE PTR [rsp+rax*8],al
  91:	08 c4                	or     ah,al
  93:	08 00                	or     BYTE PTR [rax],al
  95:	04 bc                	add    al,0xbc
  97:	08 c4                	or     ah,al
  99:	08 04 c4             	or     BYTE PTR [rsp+rax*8],al
  9c:	08 c4                	or     ah,al
  9e:	08 00                	or     BYTE PTR [rax],al
  a0:	04 c4                	add    al,0xc4
  a2:	08 c4                	or     ah,al
  a4:	08 04 ca             	or     BYTE PTR [rdx+rcx*8],al
  a7:	08 d0                	or     al,dl
  a9:	08 00                	or     BYTE PTR [rax],al
  ab:	04 d0                	add    al,0xd0
  ad:	08 d6                	or     dh,dl
  af:	08 04 f4             	or     BYTE PTR [rsp+rsi*8],al
  b2:	08 f9                	or     cl,bh
  b4:	08 00                	or     BYTE PTR [rax],al
  b6:	04 d6                	add    al,0xd6
  b8:	08 d6                	or     dh,dl
  ba:	08 04 f4             	or     BYTE PTR [rsp+rsi*8],al
  bd:	08 f9                	or     cl,bh
  bf:	08 00                	or     BYTE PTR [rax],al
  c1:	04 e2                	add    al,0xe2
  c3:	08 e5                	or     ch,ah
  c5:	08 04 f9             	or     BYTE PTR [rcx+rdi*8],al
  c8:	08 ff                	or     bh,bh
  ca:	08 00                	or     BYTE PTR [rax],al
  cc:	04 e5                	add    al,0xe5
  ce:	08 eb                	or     bl,ch
  d0:	08 04 f9             	or     BYTE PTR [rcx+rdi*8],al
  d3:	08 f9                	or     cl,bh
  d5:	08 00                	or     BYTE PTR [rax],al
  d7:	04 ff                	add    al,0xff
  d9:	08 81 09 04 84 09    	or     BYTE PTR [rcx+0x9840409],al
  df:	8a 09                	mov    cl,BYTE PTR [rcx]
  e1:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
  e4:	0b e0                	or     esp,eax
  e6:	0b 04 e0             	or     eax,DWORD PTR [rax+riz*8]
  e9:	0b de                	or     ebx,esi
  eb:	0c 00                	or     al,0x0
  ed:	04 82                	add    al,0x82
  ef:	0c 82                	or     al,0x82
  f1:	0c 04                	or     al,0x4
  f3:	85 0c de             	test   DWORD PTR [rsi+rbx*8],ecx
  f6:	0c 00                	or     al,0x0
  f8:	04 ee                	add    al,0xee
  fa:	0c f9                	or     al,0xf9
  fc:	0c 04                	or     al,0x4
  fe:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  ff:	0d d4 0e 00 04       	or     eax,0x4000ed4
 104:	d0 0d a5 0e 04 a9    	ror    BYTE PTR [rip+0xffffffffa9040ea5],1        # ffffffffa9040faf <_end+0xffffffffa903af97>
 10a:	0e                   	(bad)
 10b:	b4 0e                	mov    ah,0xe
 10d:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
 110:	0d d8 0d 04 ec       	or     eax,0xec040dd8
 115:	0d a1 0e 00 04       	or     eax,0x4000ea1
 11a:	d4                   	(bad)
 11b:	0d d8 0d 04 ec       	or     eax,0xec040dd8
 120:	0d f7 0d 04 f7       	or     eax,0xf7040df7
 125:	0d a1 0e 00 04       	or     eax,0x4000ea1
 12a:	82                   	(bad)
 12b:	0d 86 0d 04 95       	or     eax,0x95040d86
 130:	0d 98 0d 04 d4       	or     eax,0xd4040d98
 135:	0e                   	(bad)
 136:	85 0f                	test   DWORD PTR [rdi],ecx
 138:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
 13b:	0e                   	(bad)
 13c:	e0 0e                	loopne 14c <__abi_tag-0x230>
 13e:	04 e4                	add    al,0xe4
 140:	0e                   	(bad)
 141:	80 0f 00             	or     BYTE PTR [rdi],0x0
 144:	6c                   	ins    BYTE PTR es:[rdi],dx
 145:	00 00                	add    BYTE PTR [rax],al
 147:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 94d <__abi_tag+0x5d1>
 14d:	00 00                	add    BYTE PTR [rax],al
 14f:	00 04 24             	add    BYTE PTR [rsp],al
 152:	2a 04 37             	sub    al,BYTE PTR [rdi+rsi*1]
 155:	3c 00                	cmp    al,0x0
 157:	04 2a                	add    al,0x2a
 159:	2a 04 37             	sub    al,BYTE PTR [rdi+rsi*1]
 15c:	3c 00                	cmp    al,0x0
 15e:	04 2a                	add    al,0x2a
 160:	2f                   	(bad)
 161:	04 35                	add    al,0x35
 163:	37                   	(bad)
 164:	04 48                	add    al,0x48
 166:	4e 04 63             	rex.WRX add al,0x63
 169:	63 00                	movsxd eax,DWORD PTR [rax]
 16b:	04 2f                	add    al,0x2f
 16d:	35 04 42 48 04       	xor    eax,0x4484204
 172:	50                   	push   rax
 173:	55                   	push   rbp
 174:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
 177:	35 04 42 48 00       	xor    eax,0x484204
 17c:	04 48                	add    al,0x48
 17e:	48 04 50             	rex.W add al,0x50
 181:	55                   	push   rbp
 182:	00 04 4e             	add    BYTE PTR [rsi+rcx*2],al
 185:	50                   	push   rax
 186:	04 55                	add    al,0x55
 188:	5b                   	pop    rbx
 189:	04 63                	add    al,0x63
 18b:	63 00                	movsxd eax,DWORD PTR [rax]
 18d:	04 55                	add    al,0x55
 18f:	55                   	push   rbp
 190:	04 5d                	add    al,0x5d
 192:	63 00                	movsxd eax,DWORD PTR [rax]
 194:	04 5b                	add    al,0x5b
 196:	5d                   	pop    rbp
 197:	04 63                	add    al,0x63
 199:	63 04 65 6b 00 04 a4 	movsxd eax,DWORD PTR [riz*2-0x5bfbff95]
 1a0:	01 96 05 04 a0 05    	add    DWORD PTR [rsi+0x5a00405],edx
 1a6:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 1a7:	05 00 04 b4 05       	add    eax,0x5b40400
 1ac:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 1ad:	07                   	(bad)
 1ae:	04 b0                	add    al,0xb0
 1b0:	07                   	(bad)
 1b1:	b2 07                	mov    dl,0x7
 1b3:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 1b6:	00 00                	add    BYTE PTR [rax],al
 1b8:	05 00 08 00 00       	add    eax,0x800
 1bd:	00 00                	add    BYTE PTR [rax],al
 1bf:	00 04 47             	add    BYTE PTR [rdi+rax*2],al
 1c2:	4e 04 63             	rex.WRX add al,0x63
 1c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1c6:	04 75                	add    al,0x75
 1c8:	83 01 04             	add    DWORD PTR [rcx],0x4
 1cb:	87 01                	xchg   DWORD PTR [rcx],eax
 1cd:	8e 01                	mov    es,WORD PTR [rcx]
 1cf:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
 1d2:	01 bd 01 04 bd 01    	add    DWORD PTR [rbp+0x1bd0401],edi
 1d8:	81 02 00 04 b1 02    	add    DWORD PTR [rdx],0x2b10400
 1de:	b4 02                	mov    ah,0x2
 1e0:	04 c2                	add    al,0xc2
 1e2:	02 c5                	add    al,ch
 1e4:	02 04 c9             	add    al,BYTE PTR [rcx+rcx*8]
 1e7:	02 d7                	add    dl,bh
 1e9:	02 00                	add    al,BYTE PTR [rax]
 1eb:	04 a0                	add    al,0xa0
 1ed:	03 ee                	add    ebp,esi
 1ef:	03 04 f3             	add    eax,DWORD PTR [rbx+rsi*8]
 1f2:	03 f7                	add    esi,edi
 1f4:	03 00                	add    eax,DWORD PTR [rax]
 1f6:	04 d4                	add    al,0xd4
 1f8:	04 8e                	add    al,0x8e
 1fa:	05 04 90 05 98       	add    eax,0x98059004
 1ff:	05 04 a8 05 a8       	add    eax,0xa805a804
 204:	05 00 04 d4 04       	add    eax,0x4d40400
 209:	dd 04 04             	fld    QWORD PTR [rsp+rax*1]
 20c:	dd 04 8e             	fld    QWORD PTR [rsi+rcx*4]
 20f:	05 04 90 05 98       	add    eax,0x98059004
 214:	05 04 a8 05 a8       	add    eax,0xa805a804
 219:	05 00 04 a6 06       	add    eax,0x6a60400
 21e:	b0 06                	mov    al,0x6
 220:	04 c3                	add    al,0xc3
 222:	06                   	(bad)
 223:	da 06                	fiadd  DWORD PTR [rsi]
 225:	00 1b                	add    BYTE PTR [rbx],bl
 227:	00 00                	add    BYTE PTR [rax],al
 229:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # a2f <__abi_tag+0x6b3>
 22f:	00 00                	add    BYTE PTR [rax],al
 231:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
 234:	76 04                	jbe    23a <__abi_tag-0x142>
 236:	7a 82                	jp     1ba <__abi_tag-0x1c2>
 238:	01 00                	add    DWORD PTR [rax],eax
 23a:	04 b0                	add    al,0xb0
 23c:	02 b5 02 04 b8 02    	add    dh,BYTE PTR [rbp+0x2b80402]
 242:	bd 02 00 e0 01       	mov    ebp,0x1e00002
 247:	00 00                	add    BYTE PTR [rax],al
 249:	05 00 08 00 00       	add    eax,0x800
 24e:	00 00                	add    BYTE PTR [rax],al
 250:	00 04 b1             	add    BYTE PTR [rcx+rsi*4],al
 253:	01 b8 01 04 bc 01    	add    DWORD PTR [rax+0x1bc0401],edi
 259:	c6 01 04             	mov    BYTE PTR [rcx],0x4
 25c:	dc 01                	fadd   QWORD PTR [rcx]
 25e:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 25f:	02 00                	add    al,BYTE PTR [rax]
 261:	04 dc                	add    al,0xdc
 263:	01 f2                	add    edx,esi
 265:	01 04 f2             	add    DWORD PTR [rdx+rsi*8],eax
 268:	01 f2                	add    edx,esi
 26a:	01 04 f6             	add    DWORD PTR [rsi+rsi*8],eax
 26d:	01 82 02 00 04 ad    	add    DWORD PTR [rdx-0x52fbfffe],eax
 273:	02 be 02 04 c7 02    	add    bh,BYTE PTR [rsi+0x2c70402]
 279:	cc                   	int3
 27a:	02 00                	add    al,BYTE PTR [rax]
 27c:	04 cc                	add    al,0xcc
 27e:	02 c9                	add    cl,cl
 280:	07                   	(bad)
 281:	04 90                	add    al,0x90
 283:	08 bf 08 00 04 cc    	or     BYTE PTR [rdi-0x33fbfff8],bh
 289:	02 f5                	add    dh,ch
 28b:	02 04 87             	add    al,BYTE PTR [rdi+rax*4]
 28e:	03 ae 07 04 a9 08    	add    ebp,DWORD PTR [rsi+0x8a90407]
 294:	b0 08                	mov    al,0x8
 296:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
 299:	02 f5                	add    dh,ch
 29b:	02 04 87             	add    al,BYTE PTR [rdi+rax*4]
 29e:	03 99 05 04 c4 05    	add    ebx,DWORD PTR [rcx+0x5c40405]
 2a4:	cd 06                	int    0x6
 2a6:	04 cf                	add    al,0xcf
 2a8:	06                   	(bad)
 2a9:	e2 06                	loop   2b1 <__abi_tag-0xcb>
 2ab:	04 e5                	add    al,0xe5
 2ad:	06                   	(bad)
 2ae:	f1                   	int1
 2af:	06                   	(bad)
 2b0:	04 f5                	add    al,0xf5
 2b2:	06                   	(bad)
 2b3:	f9                   	stc
 2b4:	06                   	(bad)
 2b5:	04 fc                	add    al,0xfc
 2b7:	06                   	(bad)
 2b8:	91                   	xchg   ecx,eax
 2b9:	07                   	(bad)
 2ba:	04 95                	add    al,0x95
 2bc:	07                   	(bad)
 2bd:	ae                   	scas   al,BYTE PTR es:[rdi]
 2be:	07                   	(bad)
 2bf:	00 04 bb             	add    BYTE PTR [rbx+rdi*4],al
 2c2:	07                   	(bad)
 2c3:	c9                   	leave
 2c4:	07                   	(bad)
 2c5:	04 98                	add    al,0x98
 2c7:	08 a5 08 04 b0 08    	or     BYTE PTR [rbp+0x8b00408],ah
 2cd:	bf 08 00 04 c9       	mov    edi,0xc9040008
 2d2:	07                   	(bad)
 2d3:	da 07                	fiadd  DWORD PTR [rdi]
 2d5:	04 de                	add    al,0xde
 2d7:	07                   	(bad)
 2d8:	e3 07                	jrcxz  2e1 <__abi_tag-0x9b>
 2da:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
 2dd:	0b 8a 0c 04 8e 0c    	or     ecx,DWORD PTR [rdx+0xc8e040c]
 2e3:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 2e4:	0c 04                	or     al,0x4
 2e6:	a9 0c bb 0c 00       	test   eax,0xcbb0c
 2eb:	04 ff                	add    al,0xff
 2ed:	0b ff                	or     edi,edi
 2ef:	0b 04 ff             	or     eax,DWORD PTR [rdi+rdi*8]
 2f2:	0b 86 0c 04 8e 0c    	or     eax,DWORD PTR [rsi+0xc8e040c]
 2f8:	94                   	xchg   esp,eax
 2f9:	0c 00                	or     al,0x0
 2fb:	04 ff                	add    al,0xff
 2fd:	0b ff                	or     edi,edi
 2ff:	0b 04 ff             	or     eax,DWORD PTR [rdi+rdi*8]
 302:	0b 86 0c 04 8e 0c    	or     eax,DWORD PTR [rsi+0xc8e040c]
 308:	94                   	xchg   esp,eax
 309:	0c 00                	or     al,0x0
 30b:	04 ff                	add    al,0xff
 30d:	0b ff                	or     edi,edi
 30f:	0b 04 94             	or     eax,DWORD PTR [rsp+rdx*4]
 312:	0c a5                	or     al,0xa5
 314:	0c 04                	or     al,0x4
 316:	a9 0c b0 0c 00       	test   eax,0xcb00c
 31b:	04 ce                	add    al,0xce
 31d:	0c d1                	or     al,0xd1
 31f:	0c 04                	or     al,0x4
 321:	d6                   	(bad)
 322:	0c f0                	or     al,0xf0
 324:	0c 04                	or     al,0x4
 326:	8b 11                	mov    edx,DWORD PTR [rcx]
 328:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 329:	11 00                	adc    DWORD PTR [rax],eax
 32b:	04 f0                	add    al,0xf0
 32d:	0c f0                	or     al,0xf0
 32f:	0c 04                	or     al,0x4
 331:	f4                   	hlt
 332:	0c bf                	or     al,0xbf
 334:	0d 04 a5 11 a5       	or     eax,0xa511a504
 339:	11 00                	adc    DWORD PTR [rax],eax
 33b:	04 f8                	add    al,0xf8
 33d:	0c 8c                	or     al,0x8c
 33f:	0d 04 92 0d 97       	or     eax,0x970d9204
 344:	0d 04 9b 0d a8       	or     eax,0xa80d9b04
 349:	0d 00 04 d6 0d       	or     eax,0xdd60400
 34e:	ce                   	(bad)
 34f:	0f 04                	(bad)
 351:	d5 0f da 0f          	{rex2 0xf} fimul DWORD PTR [r15]
 355:	04 a9                	add    al,0xa9
 357:	11 ae 11 04 b2 11    	adc    DWORD PTR [rsi+0x11b20411],ebp
 35d:	eb 11                	jmp    370 <__abi_tag-0xc>
 35f:	04 97                	add    al,0x97
 361:	12 a9 12 00 04 f8    	adc    ch,BYTE PTR [rcx-0x7fbffee]
 367:	0d a4 0f 04 c5       	or     eax,0xc5040fa4
 36c:	11 cc                	adc    esp,ecx
 36e:	11 00                	adc    DWORD PTR [rax],eax
 370:	04 b8                	add    al,0xb8
 372:	0f ca                	bswap  edx
 374:	0f 04                	(bad)
 376:	bc 11 c1 11 04       	mov    esp,0x411c111
 37b:	97                   	xchg   edi,eax
 37c:	12 a9 12 00 04 ce    	adc    ch,BYTE PTR [rcx-0x31fbffee]
 382:	0f d5 0f             	pmullw mm1,QWORD PTR [rdi]
 385:	04 da                	add    al,0xda
 387:	0f f5 0f             	pmaddwd mm1,QWORD PTR [rdi]
 38a:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
 38d:	10 90 10 04 9d 10    	adc    BYTE PTR [rax+0x109d0410],dl
 393:	ae                   	scas   al,BYTE PTR es:[rdi]
 394:	10 04 ba             	adc    BYTE PTR [rdx+rdi*4],al
 397:	10 bf 10 00 04 af    	adc    BYTE PTR [rdi-0x50fbfff0],bh
 39d:	17                   	(bad)
 39e:	ed                   	in     eax,dx
 39f:	17                   	(bad)
 3a0:	04 f4                	add    al,0xf4
 3a2:	17                   	(bad)
 3a3:	f9                   	stc
 3a4:	17                   	(bad)
 3a5:	00 04 ed 17 f4 17 04 	add    BYTE PTR [rbp*8+0x417f417],al
 3ac:	f9                   	stc
 3ad:	17                   	(bad)
 3ae:	81 18 00 04 96 23    	sbb    DWORD PTR [rax],0x23960400
 3b4:	b8 23 04 d0 23       	mov    eax,0x23d00423
 3b9:	d4                   	(bad)
 3ba:	24 04                	and    al,0x4
 3bc:	9a                   	(bad)
 3bd:	25 9c 25 00 04       	and    eax,0x400259c
 3c2:	e5 24                	in     eax,0x24
 3c4:	f3 24 04             	repz and al,0x4
 3c7:	98                   	cwde
 3c8:	25 9a 25 04 a5       	and    eax,0xa504259a
 3cd:	25 ac 25 00 04       	and    eax,0x40025ac
 3d2:	f6 25 a1 26 04 b4    	mul    BYTE PTR [rip+0xffffffffb40426a1]        # ffffffffb4042a79 <_end+0xffffffffb403ca61>
 3d8:	26 dc 2a             	es fsubr QWORD PTR [rdx]
 3db:	04 ad                	add    al,0xad
 3dd:	2b af 2b 00 04 84    	sub    ebp,DWORD PTR [rdi-0x7bfbffd5]
 3e3:	26 a1 26 04 b4 26 cb 	es movabs eax,ds:0xf60428cb26b40426
 3ea:	28 04 f6 
 3ed:	28 ff                	sub    bh,bh
 3ef:	29 04 81             	sub    DWORD PTR [rcx+rax*4],eax
 3f2:	2a 90 2a 04 93 2a    	sub    dl,BYTE PTR [rax+0x2a93042a]
 3f8:	9f                   	lahf
 3f9:	2a 04 a3             	sub    al,BYTE PTR [rbx+riz*4]
 3fc:	2a a7 2a 04 aa 2a    	sub    ah,BYTE PTR [rdi+0x2aaa042a]
 402:	bf 2a 04 c3 2a       	mov    edi,0x2ac3042a
 407:	dc 2a                	fsubr  QWORD PTR [rdx]
 409:	00 04 e9             	add    BYTE PTR [rcx+rbp*8],al
 40c:	2a f0                	sub    dh,al
 40e:	2a 04 f4             	sub    al,BYTE PTR [rsp+rsi*8]
 411:	2a f9                	sub    bh,cl
 413:	2a 04 96             	sub    al,BYTE PTR [rsi+rdx*4]
 416:	2b 96 2b 04 9d 2b    	sub    edx,DWORD PTR [rsi+0x2b9d042b]
 41c:	a2 2b 04 bd 2b c1 2b 	movabs ds:0xc8042bc12bbd042b,al
 423:	04 c8 
 425:	2b cd                	sub    ecx,ebp
 427:	2b 00                	sub    eax,DWORD PTR [rax]

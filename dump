
build/main:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x27>
 328:	78 38                	js     362 <__abi_tag-0x1a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	10 00                	adc    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	80 00 c0             	add    BYTE PTR [rax],0xc0
 34c:	04 00                	add    al,0x0
 34e:	00 00                	add    BYTE PTR [rax],al
 350:	01 00                	add    DWORD PTR [rax],eax
 352:	00 00                	add    BYTE PTR [rax],al
 354:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    al,0x0
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	14 00                	adc    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	03 00                	add    eax,DWORD PTR [rax]
 362:	00 00                	add    BYTE PTR [rax],al
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push rbp
 367:	00 38                	add    BYTE PTR [rax],bh
 369:	b1 a0                	mov    cl,0xa0
 36b:	84 43 49             	test   BYTE PTR [rbx+0x49],al
 36e:	e4 b1                	in     al,0xb1
 370:	df a9 ba f3 60 94    	fild   QWORD PTR [rcx-0x6b9f0c46]
 376:	f0 2a 59 c3          	lock sub bl,BYTE PTR [rcx-0x3d]
 37a:	28 d0                	sub    al,dl

Disassembly of section .note.ABI-tag:

000000000000037c <__abi_tag>:
 37c:	04 00                	add    al,0x0
 37e:	00 00                	add    BYTE PTR [rax],al
 380:	10 00                	adc    BYTE PTR [rax],al
 382:	00 00                	add    BYTE PTR [rax],al
 384:	01 00                	add    DWORD PTR [rax],eax
 386:	00 00                	add    BYTE PTR [rax],al
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push rbp
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 03                	add    BYTE PTR [rbx],al
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 02                	add    BYTE PTR [rdx],al
 395:	00 00                	add    BYTE PTR [rax],al
 397:	00 00                	add    BYTE PTR [rax],al
 399:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    al,BYTE PTR [rax]
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	1e                   	(bad)
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 01                	add    BYTE PTR [rcx],al
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 06                	add    BYTE PTR [rsi],al
 3ad:	00 00                	add    BYTE PTR [rax],al
 3af:	00 00                	add    BYTE PTR [rax],al
 3b1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3b7:	00 1e                	add    BYTE PTR [rsi],bl
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 00                	add    BYTE PTR [rax],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 d1                	add    cl,dl
 3c1:	65 ce                	gs (bad)
 3c3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	87 00                	xchg   DWORD PTR [rax],eax
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 3f6:	00 00                	add    BYTE PTR [rax],al
 3f8:	1e                   	(bad)
 3f9:	01 00                	add    DWORD PTR [rax],eax
 3fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 40d:	00 00                	add    BYTE PTR [rax],al
 40f:	00 32                	add    BYTE PTR [rdx],dh
 411:	01 00                	add    DWORD PTR [rax],eax
 413:	00 12                	add    BYTE PTR [rdx],dl
	...
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 c4                	add    ah,al
 429:	00 00                	add    BYTE PTR [rax],al
 42b:	00 12                	add    BYTE PTR [rdx],dl
	...
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 99 00 00 00 12    	add    BYTE PTR [rcx+0x12000000],bl
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 39                	add    BYTE PTR [rcx],bh
 459:	01 00                	add    DWORD PTR [rax],eax
 45b:	00 12                	add    BYTE PTR [rdx],dl
	...
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 ad 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],ch
	...
 485:	00 00                	add    BYTE PTR [rax],al
 487:	00 0f                	add    BYTE PTR [rdi],cl
 489:	01 00                	add    DWORD PTR [rax],eax
 48b:	00 12                	add    BYTE PTR [rdx],dl
	...
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 f0                	add    al,dh
 4a1:	00 00                	add    BYTE PTR [rax],al
 4a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4b5:	00 00                	add    BYTE PTR [rax],al
 4b7:	00 a7 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],ah
	...
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 1d 01 00 00 12    	add    BYTE PTR [rip+0x12000001],bl        # 120004d6 <_end+0x11ffa4be>
	...
 4e5:	00 00                	add    BYTE PTR [rax],al
 4e7:	00 40 01             	add    BYTE PTR [rax+0x1],al
 4ea:	00 00                	add    BYTE PTR [rax],al
 4ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	76 00                	jbe    502 <__abi_tag+0x186>
 502:	00 00                	add    BYTE PTR [rax],al
 504:	12 00                	adc    al,BYTE PTR [rax]
	...
 516:	00 00                	add    BYTE PTR [rax],al
 518:	ac                   	lods   al,BYTE PTR ds:[rsi]
 519:	00 00                	add    BYTE PTR [rax],al
 51b:	00 12                	add    BYTE PTR [rdx],dl
	...
 52d:	00 00                	add    BYTE PTR [rax],al
 52f:	00 94 00 00 00 12 00 	add    BYTE PTR [rax+rax*1+0x120000],dl
	...
 546:	00 00                	add    BYTE PTR [rax],al
 548:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 54b:	00 12                	add    BYTE PTR [rdx],dl
	...
 55d:	00 00                	add    BYTE PTR [rax],al
 55f:	00 02                	add    BYTE PTR [rdx],al
 561:	01 00                	add    DWORD PTR [rax],eax
 563:	00 12                	add    BYTE PTR [rdx],dl
	...
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 4e 01             	add    BYTE PTR [rsi+0x1],cl
 57a:	00 00                	add    BYTE PTR [rax],al
 57c:	12 00                	adc    al,BYTE PTR [rax]
	...
 58e:	00 00                	add    BYTE PTR [rax],al
 590:	b2 00                	mov    dl,0x0
 592:	00 00                	add    BYTE PTR [rax],al
 594:	12 00                	adc    al,BYTE PTR [rax]
	...
 5a6:	00 00                	add    BYTE PTR [rax],al
 5a8:	71 00                	jno    5aa <__abi_tag+0x22e>
 5aa:	00 00                	add    BYTE PTR [rax],al
 5ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 5be:	00 00                	add    BYTE PTR [rax],al
 5c0:	e2 00                	loop   5c2 <__abi_tag+0x246>
 5c2:	00 00                	add    BYTE PTR [rax],al
 5c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	b7 00                	mov    bh,0x0
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	10 00                	adc    BYTE PTR [rax],al
 5f2:	00 00                	add    BYTE PTR [rax],al
 5f4:	20 00                	and    BYTE PTR [rax],al
	...
 606:	00 00                	add    BYTE PTR [rax],al
 608:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
 60b:	00 12                	add    BYTE PTR [rdx],dl
	...
 61d:	00 00                	add    BYTE PTR [rax],al
 61f:	00 01                	add    BYTE PTR [rcx],al
 621:	00 00                	add    BYTE PTR [rax],al
 623:	00 20                	add    BYTE PTR [rax],ah
	...
 635:	00 00                	add    BYTE PTR [rax],al
 637:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 63a:	00 00                	add    BYTE PTR [rax],al
 63c:	20 00                	and    BYTE PTR [rax],al
	...
 64e:	00 00                	add    BYTE PTR [rax],al
 650:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
 653:	00 12                	add    BYTE PTR [rdx],dl
	...
 665:	00 00                	add    BYTE PTR [rax],al
 667:	00 41 01             	add    BYTE PTR [rcx+0x1],al
 66a:	00 00                	add    BYTE PTR [rax],al
 66c:	12 00                	adc    al,BYTE PTR [rax]
	...
 67e:	00 00                	add    BYTE PTR [rax],al
 680:	d2 00                	rol    BYTE PTR [rax],cl
 682:	00 00                	add    BYTE PTR [rax],al
 684:	12 00                	adc    al,BYTE PTR [rax]
	...
 696:	00 00                	add    BYTE PTR [rax],al
 698:	23 01                	and    eax,DWORD PTR [rcx]
 69a:	00 00                	add    BYTE PTR [rax],al
 69c:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

00000000000006b0 <.dynstr>:
 6b0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 6b3:	67 6d                	ins    DWORD PTR es:[edi],dx
 6b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6b7:	5f                   	pop    rdi
 6b8:	73 74                	jae    72e <__abi_tag+0x3b2>
 6ba:	61                   	(bad)
 6bb:	72 74                	jb     731 <__abi_tag+0x3b5>
 6bd:	5f                   	pop    rdi
 6be:	5f                   	pop    rdi
 6bf:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6c2:	54                   	push   rsp
 6c3:	4d 5f                	rex.WRB pop r15
 6c5:	64 65 72 65          	fs gs jb 72e <__abi_tag+0x3b2>
 6c9:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6d0:	4d 
 6d1:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6d5:	65 54                	gs push rsp
 6d7:	61                   	(bad)
 6d8:	62 6c 65             	(bad)
 6db:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6de:	54                   	push   rsp
 6df:	4d 5f                	rex.WRB pop r15
 6e1:	72 65                	jb     748 <__abi_tag+0x3cc>
 6e3:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6ea:	4d 
 6eb:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6ef:	65 54                	gs push rsp
 6f1:	61                   	(bad)
 6f2:	62 6c 65             	(bad)
 6f5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 6f8:	4e 53                	rex.WRX push rbx
 6fa:	74 36                	je     732 <__abi_tag+0x3b6>
 6fc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
 6ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 700:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 701:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 702:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
 705:	32 31                	xor    dh,BYTE PTR [rcx]
 707:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
 70a:	65 61                	gs (bad)
 70c:	64 79 5f             	fs jns 76e <__abi_tag+0x3f2>
 70f:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
 713:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
 716:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 717:	77 45                	ja     75e <__abi_tag+0x3e2>
 719:	76 00                	jbe    71b <__abi_tag+0x39f>
 71b:	73 71                	jae    78e <__abi_tag+0x412>
 71d:	72 74                	jb     793 <__abi_tag+0x417>
 71f:	66 00 70 75          	data16 add BYTE PTR [rax+0x75],dh
 723:	74 73                	je     798 <__abi_tag+0x41c>
 725:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 728:	73 74                	jae    79e <__abi_tag+0x422>
 72a:	61                   	(bad)
 72b:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 72e:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 731:	5f                   	pop    rdi
 732:	66 61                	data16 (bad)
 734:	69 6c 00 5f 5f 70 72 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x6972705f
 73b:	69 
 73c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 73d:	74 66                	je     7a5 <__abi_tag+0x429>
 73f:	5f                   	pop    rdi
 740:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 743:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
 746:	65 65 00 5f 5f       	gs add BYTE PTR gs:[rdi+0x5f],bl
 74b:	61                   	(bad)
 74c:	73 73                	jae    7c1 <__abi_tag+0x445>
 74e:	65 72 74             	gs jb  7c5 <__abi_tag+0x449>
 751:	5f                   	pop    rdi
 752:	66 61                	data16 (bad)
 754:	69 6c 00 73 74 61 74 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x746174
 75b:	00 
 75c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 75e:	70 65                	jo     7c5 <__abi_tag+0x449>
 760:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 761:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 764:	61                   	(bad)
 765:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 769:	6d                   	ins    DWORD PTR es:[rdi],dx
 76a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 76c:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 76f:	5f                   	pop    rdi
 770:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 773:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 776:	73 74                	jae    7ec <__abi_tag+0x470>
 778:	72 6e                	jb     7e8 <__abi_tag+0x46c>
 77a:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 77d:	5f                   	pop    rdi
 77e:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 781:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 784:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
 78b:	73 74                	jae    801 <__abi_tag+0x485>
 78d:	72 74                	jb     803 <__abi_tag+0x487>
 78f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 790:	6c                   	ins    BYTE PTR es:[rdi],dx
 791:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 794:	66 70 72             	data16 jo 809 <__abi_tag+0x48d>
 797:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
 79e:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
 7a1:	5f                   	pop    rdi
 7a2:	6c                   	ins    BYTE PTR es:[rdi],dx
 7a3:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 7aa:	72 74                	jb     820 <__abi_tag+0x4a4>
 7ac:	5f                   	pop    rdi
 7ad:	6d                   	ins    DWORD PTR es:[rdi],dx
 7ae:	61                   	(bad)
 7af:	69 6e 00 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x0],0x656d5f5f
 7b6:	6d                   	ins    DWORD PTR es:[rdi],dx
 7b7:	73 65                	jae    81e <__abi_tag+0x4a2>
 7b9:	74 5f                	je     81a <__abi_tag+0x49e>
 7bb:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 7be:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
 7c1:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
 7c8:	6c                   	ins    BYTE PTR es:[rdi],dx
 7c9:	6c                   	ins    BYTE PTR es:[rdi],dx
 7ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7cb:	63 00                	movsxd eax,DWORD PTR [rax]
 7cd:	73 72                	jae    841 <__abi_tag+0x4c5>
 7cf:	61                   	(bad)
 7d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7d1:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 7d5:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 7d8:	5f                   	pop    rdi
 7d9:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 7df:	7a 65                	jp     846 <__abi_tag+0x4ca>
 7e1:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 7e4:	72 63                	jb     849 <__abi_tag+0x4cd>
 7e6:	68 72 00 63 61       	push   0x61630072
 7eb:	6c                   	ins    BYTE PTR es:[rdi],dx
 7ec:	6c                   	ins    BYTE PTR es:[rdi],dx
 7ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7ee:	63 00                	movsxd eax,DWORD PTR [rax]
 7f0:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 7f5:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
 7f9:	72 69                	jb     864 <__abi_tag+0x4e8>
 7fb:	74 65                	je     862 <__abi_tag+0x4e6>
 7fd:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 800:	72 63                	jb     865 <__abi_tag+0x4e9>
 802:	6d                   	ins    DWORD PTR es:[rdi],dx
 803:	70 00                	jo     805 <__abi_tag+0x489>
 805:	6c                   	ins    BYTE PTR es:[rdi],dx
 806:	69 62 73 74 64 63 2b 	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
 80d:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 80f:	73 6f                	jae    880 <__abi_tag+0x504>
 811:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 817:	6d                   	ins    DWORD PTR es:[rdi],dx
 818:	2e 73 6f             	cs jae 88a <__abi_tag+0x50e>
 81b:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 821:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 823:	73 6f                	jae    894 <__abi_tag+0x518>
 825:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 82a:	49                   	rex.WB
 82b:	42                   	rex.X
 82c:	43 5f                	rex.XB pop r15
 82e:	32 2e                	xor    ch,BYTE PTR [rsi]
 830:	32 2e                	xor    ch,BYTE PTR [rsi]
 832:	35 00 47 4c 49       	xor    eax,0x494c4700
 837:	42                   	rex.X
 838:	43 58                	rex.XB pop r8
 83a:	58                   	pop    rax
 83b:	5f                   	pop    rdi
 83c:	33 2e                	xor    ebp,DWORD PTR [rsi]
 83e:	34 2e                	xor    al,0x2e
 840:	31 39                	xor    DWORD PTR [rcx],edi
 842:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 845:	49                   	rex.WB
 846:	42                   	rex.X
 847:	43 5f                	rex.XB pop r15
 849:	32 2e                	xor    ch,BYTE PTR [rsi]
 84b:	33 38                	xor    edi,DWORD PTR [rax]
 84d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 850:	49                   	rex.WB
 851:	42                   	rex.X
 852:	43 5f                	rex.XB pop r15
 854:	32 2e                	xor    ch,BYTE PTR [rsi]
 856:	34 00                	xor    al,0x0
 858:	47                   	rex.RXB
 859:	4c                   	rex.WR
 85a:	49                   	rex.WB
 85b:	42                   	rex.X
 85c:	43 5f                	rex.XB pop r15
 85e:	32 2e                	xor    ch,BYTE PTR [rsi]
 860:	33 33                	xor    esi,DWORD PTR [rbx]
 862:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 865:	49                   	rex.WB
 866:	42                   	rex.X
 867:	43 5f                	rex.XB pop r15
 869:	32 2e                	xor    ch,BYTE PTR [rsi]
 86b:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 86e:	47                   	rex.RXB
 86f:	4c                   	rex.WR
 870:	49                   	rex.WB
 871:	42                   	rex.X
 872:	43 5f                	rex.XB pop r15
 874:	32 2e                	xor    ch,BYTE PTR [rsi]
 876:	31 36                	xor    DWORD PTR [rsi],esi
 878:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 87b:	49                   	rex.WB
 87c:	42                   	rex.X
 87d:	43 5f                	rex.XB pop r15
 87f:	32 2e                	xor    ch,BYTE PTR [rsi]
 881:	33 2e                	xor    ebp,DWORD PTR [rsi]
 883:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

0000000000000886 <.gnu.version>:
 886:	00 00                	add    BYTE PTR [rax],al
 888:	02 00                	add    al,BYTE PTR [rax]
 88a:	03 00                	add    eax,DWORD PTR [rax]
 88c:	03 00                	add    eax,DWORD PTR [rax]
 88e:	02 00                	add    al,BYTE PTR [rax]
 890:	03 00                	add    eax,DWORD PTR [rax]
 892:	03 00                	add    eax,DWORD PTR [rax]
 894:	03 00                	add    eax,DWORD PTR [rax]
 896:	04 00                	add    al,0x0
 898:	05 00 06 00 03       	add    eax,0x3000600
 89d:	00 03                	add    BYTE PTR [rbx],al
 89f:	00 07                	add    BYTE PTR [rdi],al
 8a1:	00 03                	add    BYTE PTR [rbx],al
 8a3:	00 03                	add    BYTE PTR [rbx],al
 8a5:	00 08                	add    BYTE PTR [rax],cl
 8a7:	00 02                	add    BYTE PTR [rdx],al
 8a9:	00 03                	add    BYTE PTR [rbx],al
 8ab:	00 03                	add    BYTE PTR [rbx],al
 8ad:	00 03                	add    BYTE PTR [rbx],al
 8af:	00 02                	add    BYTE PTR [rdx],al
 8b1:	00 02                	add    BYTE PTR [rdx],al
 8b3:	00 01                	add    BYTE PTR [rcx],al
 8b5:	00 09                	add    BYTE PTR [rcx],cl
 8b7:	00 01                	add    BYTE PTR [rcx],al
 8b9:	00 01                	add    BYTE PTR [rcx],al
 8bb:	00 03                	add    BYTE PTR [rbx],al
 8bd:	00 03                	add    BYTE PTR [rbx],al
 8bf:	00 0a                	add    BYTE PTR [rdx],cl
 8c1:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

00000000000008c8 <.gnu.version_r>:
 8c8:	01 00                	add    DWORD PTR [rax],eax
 8ca:	01 00                	add    DWORD PTR [rax],eax
 8cc:	64 01 00             	add    DWORD PTR fs:[rax],eax
 8cf:	00 10                	add    BYTE PTR [rax],dl
 8d1:	00 00                	add    BYTE PTR [rax],al
 8d3:	00 20                	add    BYTE PTR [rax],ah
 8d5:	00 00                	add    BYTE PTR [rax],al
 8d7:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 8da:	69 09 00 00 09 00    	imul   ecx,DWORD PTR [rcx],0x90000
 8e0:	78 01                	js     8e3 <__abi_tag+0x567>
 8e2:	00 00                	add    BYTE PTR [rax],al
 8e4:	00 00                	add    BYTE PTR [rax],al
 8e6:	00 00                	add    BYTE PTR [rax],al
 8e8:	01 00                	add    DWORD PTR [rax],eax
 8ea:	01 00                	add    DWORD PTR [rax],eax
 8ec:	55                   	push   rbp
 8ed:	01 00                	add    DWORD PTR [rax],eax
 8ef:	00 10                	add    BYTE PTR [rax],dl
 8f1:	00 00                	add    BYTE PTR [rax],al
 8f3:	00 20                	add    BYTE PTR [rax],ah
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 69 f8             	add    BYTE PTR [rcx-0x8],ch
 8fa:	97                   	xchg   edi,eax
 8fb:	02 00                	add    al,BYTE PTR [rax]
 8fd:	00 08                	add    BYTE PTR [rax],cl
 8ff:	00 84 01 00 00 00 00 	add    BYTE PTR [rcx+rax*1+0x0],al
 906:	00 00                	add    BYTE PTR [rax],al
 908:	01 00                	add    DWORD PTR [rax],eax
 90a:	07                   	(bad)
 90b:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
 90e:	00 00                	add    BYTE PTR [rax],al
 910:	10 00                	adc    BYTE PTR [rax],al
 912:	00 00                	add    BYTE PTR [rax],al
 914:	00 00                	add    BYTE PTR [rax],al
 916:	00 00                	add    BYTE PTR [rax],al
 918:	b8 91 96 06 00       	mov    eax,0x69691
 91d:	00 0a                	add    BYTE PTR [rdx],cl
 91f:	00 93 01 00 00 10    	add    BYTE PTR [rbx+0x10000001],dl
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 92a:	69 0d 00 00 07 00 9e 	imul   ecx,DWORD PTR [rip+0x70000],0x19e        # 70934 <_end+0x6a91c>
 931:	01 00 00 
 934:	10 00                	adc    BYTE PTR [rax],al
 936:	00 00                	add    BYTE PTR [rax],al
 938:	b3 91                	mov    bl,0x91
 93a:	96                   	xchg   esi,eax
 93b:	06                   	(bad)
 93c:	00 00                	add    BYTE PTR [rax],al
 93e:	06                   	(bad)
 93f:	00 a8 01 00 00 10    	add    BYTE PTR [rax+0x10000001],ch
 945:	00 00                	add    BYTE PTR [rax],al
 947:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 94e:	05 00 b3 01 00       	add    eax,0x1b300
 953:	00 10                	add    BYTE PTR [rax],dl
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 96 91 96 06 00    	add    BYTE PTR [rsi+0x69691],dl
 95d:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 960:	be 01 00 00 10       	mov    esi,0x10000001
 965:	00 00                	add    BYTE PTR [rax],al
 967:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 96a:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 970:	78 01                	js     973 <__abi_tag+0x5f7>
 972:	00 00                	add    BYTE PTR [rax],al
 974:	10 00                	adc    BYTE PTR [rax],al
 976:	00 00                	add    BYTE PTR [rax],al
 978:	74 19                	je     993 <__abi_tag+0x617>
 97a:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 980:	c9                   	leave
 981:	01 00                	add    DWORD PTR [rax],eax
 983:	00 00                	add    BYTE PTR [rax],al
 985:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000988 <.rela.dyn>:
 988:	d8 5c 00 00          	fcomp  DWORD PTR [rax+rax*1+0x0]
 98c:	00 00                	add    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	08 00                	or     BYTE PTR [rax],al
 992:	00 00                	add    BYTE PTR [rax],al
 994:	00 00                	add    BYTE PTR [rax],al
 996:	00 00                	add    BYTE PTR [rax],al
 998:	f0 12 00             	lock adc al,BYTE PTR [rax]
 99b:	00 00                	add    BYTE PTR [rax],al
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 e0                	add    al,ah
 9a1:	5c                   	pop    rsp
 9a2:	00 00                	add    BYTE PTR [rax],al
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	08 00                	or     BYTE PTR [rax],al
 9aa:	00 00                	add    BYTE PTR [rax],al
 9ac:	00 00                	add    BYTE PTR [rax],al
 9ae:	00 00                	add    BYTE PTR [rax],al
 9b0:	b0 12                	mov    al,0x12
 9b2:	00 00                	add    BYTE PTR [rax],al
 9b4:	00 00                	add    BYTE PTR [rax],al
 9b6:	00 00                	add    BYTE PTR [rax],al
 9b8:	08 60 00             	or     BYTE PTR [rax+0x0],ah
 9bb:	00 00                	add    BYTE PTR [rax],al
 9bd:	00 00                	add    BYTE PTR [rax],al
 9bf:	00 08                	add    BYTE PTR [rax],cl
 9c1:	00 00                	add    BYTE PTR [rax],al
 9c3:	00 00                	add    BYTE PTR [rax],al
 9c5:	00 00                	add    BYTE PTR [rax],al
 9c7:	00 08                	add    BYTE PTR [rax],cl
 9c9:	60                   	(bad)
 9ca:	00 00                	add    BYTE PTR [rax],al
 9cc:	00 00                	add    BYTE PTR [rax],al
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	d8 5f 00             	fcomp  DWORD PTR [rdi+0x0]
 9d3:	00 00                	add    BYTE PTR [rax],al
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	00 06                	add    BYTE PTR [rsi],al
 9d9:	00 00                	add    BYTE PTR [rax],al
 9db:	00 1e                	add    BYTE PTR [rsi],bl
	...
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 e0                	add    al,ah
 9e9:	5f                   	pop    rdi
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	00 00                	add    BYTE PTR [rax],al
 9ee:	00 00                	add    BYTE PTR [rax],al
 9f0:	06                   	(bad)
 9f1:	00 00                	add    BYTE PTR [rax],al
 9f3:	00 09                	add    BYTE PTR [rcx],cl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 e8                	add    al,ch
 a01:	5f                   	pop    rdi
 a02:	00 00                	add    BYTE PTR [rax],al
 a04:	00 00                	add    BYTE PTR [rax],al
 a06:	00 00                	add    BYTE PTR [rax],al
 a08:	06                   	(bad)
 a09:	00 00                	add    BYTE PTR [rax],al
 a0b:	00 17                	add    BYTE PTR [rdi],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 f0                	add    al,dh
 a19:	5f                   	pop    rdi
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	00 00                	add    BYTE PTR [rax],al
 a1e:	00 00                	add    BYTE PTR [rax],al
 a20:	06                   	(bad)
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 19                	add    BYTE PTR [rcx],bl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 f8                	add    al,bh
 a31:	5f                   	pop    rdi
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	00 00                	add    BYTE PTR [rax],al
 a36:	00 00                	add    BYTE PTR [rax],al
 a38:	06                   	(bad)
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 1a                	add    BYTE PTR [rdx],bl
	...

Disassembly of section .rela.plt:

0000000000000a48 <.rela.plt>:
 a48:	10 5f 00             	adc    BYTE PTR [rdi+0x0],bl
 a4b:	00 00                	add    BYTE PTR [rax],al
 a4d:	00 00                	add    BYTE PTR [rax],al
 a4f:	00 07                	add    BYTE PTR [rdi],al
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	00 01                	add    BYTE PTR [rcx],al
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 18                	add    BYTE PTR [rax],bl
 a61:	5f                   	pop    rdi
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	00 00                	add    BYTE PTR [rax],al
 a66:	00 00                	add    BYTE PTR [rax],al
 a68:	07                   	(bad)
 a69:	00 00                	add    BYTE PTR [rax],al
 a6b:	00 02                	add    BYTE PTR [rdx],al
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 20                	add    BYTE PTR [rax],ah
 a79:	5f                   	pop    rdi
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	00 00                	add    BYTE PTR [rax],al
 a7e:	00 00                	add    BYTE PTR [rax],al
 a80:	07                   	(bad)
 a81:	00 00                	add    BYTE PTR [rax],al
 a83:	00 03                	add    BYTE PTR [rbx],al
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 28                	add    BYTE PTR [rax],ch
 a91:	5f                   	pop    rdi
 a92:	00 00                	add    BYTE PTR [rax],al
 a94:	00 00                	add    BYTE PTR [rax],al
 a96:	00 00                	add    BYTE PTR [rax],al
 a98:	07                   	(bad)
 a99:	00 00                	add    BYTE PTR [rax],al
 a9b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 aa6:	00 00                	add    BYTE PTR [rax],al
 aa8:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
 aab:	00 00                	add    BYTE PTR [rax],al
 aad:	00 00                	add    BYTE PTR [rax],al
 aaf:	00 07                	add    BYTE PTR [rdi],al
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # ab9 <__abi_tag+0x73d>
 ab9:	00 00                	add    BYTE PTR [rax],al
 abb:	00 00                	add    BYTE PTR [rax],al
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 38                	add    BYTE PTR [rax],bh
 ac1:	5f                   	pop    rdi
 ac2:	00 00                	add    BYTE PTR [rax],al
 ac4:	00 00                	add    BYTE PTR [rax],al
 ac6:	00 00                	add    BYTE PTR [rax],al
 ac8:	07                   	(bad)
 ac9:	00 00                	add    BYTE PTR [rax],al
 acb:	00 06                	add    BYTE PTR [rsi],al
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 40 5f             	add    BYTE PTR [rax+0x5f],al
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	00 00                	add    BYTE PTR [rax],al
 ade:	00 00                	add    BYTE PTR [rax],al
 ae0:	07                   	(bad)
 ae1:	00 00                	add    BYTE PTR [rax],al
 ae3:	00 07                	add    BYTE PTR [rdi],al
	...
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 48 5f             	add    BYTE PTR [rax+0x5f],cl
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	00 00                	add    BYTE PTR [rax],al
 af6:	00 00                	add    BYTE PTR [rax],al
 af8:	07                   	(bad)
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 08                	add    BYTE PTR [rax],cl
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
 b0e:	00 00                	add    BYTE PTR [rax],al
 b10:	07                   	(bad)
 b11:	00 00                	add    BYTE PTR [rax],al
 b13:	00 0a                	add    BYTE PTR [rdx],cl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 58 5f             	add    BYTE PTR [rax+0x5f],bl
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	00 00                	add    BYTE PTR [rax],al
 b26:	00 00                	add    BYTE PTR [rax],al
 b28:	07                   	(bad)
 b29:	00 00                	add    BYTE PTR [rax],al
 b2b:	00 0b                	add    BYTE PTR [rbx],cl
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 60 5f             	add    BYTE PTR [rax+0x5f],ah
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	00 00                	add    BYTE PTR [rax],al
 b3e:	00 00                	add    BYTE PTR [rax],al
 b40:	07                   	(bad)
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 b4e:	00 00                	add    BYTE PTR [rax],al
 b50:	68 5f 00 00 00       	push   0x5f
 b55:	00 00                	add    BYTE PTR [rax],al
 b57:	00 07                	add    BYTE PTR [rdi],al
 b59:	00 00                	add    BYTE PTR [rax],al
 b5b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # b61 <__abi_tag+0x7e5>
 b61:	00 00                	add    BYTE PTR [rax],al
 b63:	00 00                	add    BYTE PTR [rax],al
 b65:	00 00                	add    BYTE PTR [rax],al
 b67:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
 b6a:	00 00                	add    BYTE PTR [rax],al
 b6c:	00 00                	add    BYTE PTR [rax],al
 b6e:	00 00                	add    BYTE PTR [rax],al
 b70:	07                   	(bad)
 b71:	00 00                	add    BYTE PTR [rax],al
 b73:	00 0e                	add    BYTE PTR [rsi],cl
	...
 b7d:	00 00                	add    BYTE PTR [rax],al
 b7f:	00 78 5f             	add    BYTE PTR [rax+0x5f],bh
 b82:	00 00                	add    BYTE PTR [rax],al
 b84:	00 00                	add    BYTE PTR [rax],al
 b86:	00 00                	add    BYTE PTR [rax],al
 b88:	07                   	(bad)
 b89:	00 00                	add    BYTE PTR [rax],al
 b8b:	00 0f                	add    BYTE PTR [rdi],cl
	...
 b95:	00 00                	add    BYTE PTR [rax],al
 b97:	00 80 5f 00 00 00    	add    BYTE PTR [rax+0x5f],al
 b9d:	00 00                	add    BYTE PTR [rax],al
 b9f:	00 07                	add    BYTE PTR [rdi],al
 ba1:	00 00                	add    BYTE PTR [rax],al
 ba3:	00 10                	add    BYTE PTR [rax],dl
	...
 bad:	00 00                	add    BYTE PTR [rax],al
 baf:	00 88 5f 00 00 00    	add    BYTE PTR [rax+0x5f],cl
 bb5:	00 00                	add    BYTE PTR [rax],al
 bb7:	00 07                	add    BYTE PTR [rdi],al
 bb9:	00 00                	add    BYTE PTR [rax],al
 bbb:	00 11                	add    BYTE PTR [rcx],dl
	...
 bc5:	00 00                	add    BYTE PTR [rax],al
 bc7:	00 90 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dl
 bcd:	00 00                	add    BYTE PTR [rax],al
 bcf:	00 07                	add    BYTE PTR [rdi],al
 bd1:	00 00                	add    BYTE PTR [rax],al
 bd3:	00 12                	add    BYTE PTR [rdx],dl
	...
 bdd:	00 00                	add    BYTE PTR [rax],al
 bdf:	00 98 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bl
 be5:	00 00                	add    BYTE PTR [rax],al
 be7:	00 07                	add    BYTE PTR [rdi],al
 be9:	00 00                	add    BYTE PTR [rax],al
 beb:	00 13                	add    BYTE PTR [rbx],dl
	...
 bf5:	00 00                	add    BYTE PTR [rax],al
 bf7:	00 a0 5f 00 00 00    	add    BYTE PTR [rax+0x5f],ah
 bfd:	00 00                	add    BYTE PTR [rax],al
 bff:	00 07                	add    BYTE PTR [rdi],al
 c01:	00 00                	add    BYTE PTR [rax],al
 c03:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 c0e:	00 00                	add    BYTE PTR [rax],al
 c10:	a8 5f                	test   al,0x5f
 c12:	00 00                	add    BYTE PTR [rax],al
 c14:	00 00                	add    BYTE PTR [rax],al
 c16:	00 00                	add    BYTE PTR [rax],al
 c18:	07                   	(bad)
 c19:	00 00                	add    BYTE PTR [rax],al
 c1b:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # c21 <__abi_tag+0x8a5>
 c21:	00 00                	add    BYTE PTR [rax],al
 c23:	00 00                	add    BYTE PTR [rax],al
 c25:	00 00                	add    BYTE PTR [rax],al
 c27:	00 b0 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dh
 c2d:	00 00                	add    BYTE PTR [rax],al
 c2f:	00 07                	add    BYTE PTR [rdi],al
 c31:	00 00                	add    BYTE PTR [rax],al
 c33:	00 16                	add    BYTE PTR [rsi],dl
	...
 c3d:	00 00                	add    BYTE PTR [rax],al
 c3f:	00 b8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bh
 c45:	00 00                	add    BYTE PTR [rax],al
 c47:	00 07                	add    BYTE PTR [rdi],al
 c49:	00 00                	add    BYTE PTR [rax],al
 c4b:	00 18                	add    BYTE PTR [rax],bl
	...
 c55:	00 00                	add    BYTE PTR [rax],al
 c57:	00 c0                	add    al,al
 c59:	5f                   	pop    rdi
 c5a:	00 00                	add    BYTE PTR [rax],al
 c5c:	00 00                	add    BYTE PTR [rax],al
 c5e:	00 00                	add    BYTE PTR [rax],al
 c60:	07                   	(bad)
 c61:	00 00                	add    BYTE PTR [rax],al
 c63:	00 1b                	add    BYTE PTR [rbx],bl
	...
 c6d:	00 00                	add    BYTE PTR [rax],al
 c6f:	00 c8                	add    al,cl
 c71:	5f                   	pop    rdi
 c72:	00 00                	add    BYTE PTR [rax],al
 c74:	00 00                	add    BYTE PTR [rax],al
 c76:	00 00                	add    BYTE PTR [rax],al
 c78:	07                   	(bad)
 c79:	00 00                	add    BYTE PTR [rax],al
 c7b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
 c86:	00 00                	add    BYTE PTR [rax],al
 c88:	d0 5f 00             	rcr    BYTE PTR [rdi+0x0],1
 c8b:	00 00                	add    BYTE PTR [rax],al
 c8d:	00 00                	add    BYTE PTR [rax],al
 c8f:	00 07                	add    BYTE PTR [rdi],al
 c91:	00 00                	add    BYTE PTR [rax],al
 c93:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # c99 <__abi_tag+0x91d>
 c99:	00 00                	add    BYTE PTR [rax],al
 c9b:	00 00                	add    BYTE PTR [rax],al
 c9d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 e1 4f 00 00 	mov    rax,QWORD PTR [rip+0x4fe1]        # 5ff0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <__printf_chk@plt-0x10>:
    1020:	ff 35 da 4e 00 00    	push   QWORD PTR [rip+0x4eda]        # 5f00 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 dc 4e 00 00    	jmp    QWORD PTR [rip+0x4edc]        # 5f08 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <__printf_chk@plt>:
    1030:	ff 25 da 4e 00 00    	jmp    QWORD PTR [rip+0x4eda]        # 5f10 <__printf_chk@GLIBC_2.3.4>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <rand@plt>:
    1040:	ff 25 d2 4e 00 00    	jmp    QWORD PTR [rip+0x4ed2]        # 5f18 <rand@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <strchr@plt>:
    1050:	ff 25 ca 4e 00 00    	jmp    QWORD PTR [rip+0x4eca]        # 5f20 <strchr@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__strncpy_chk@plt>:
    1060:	ff 25 c2 4e 00 00    	jmp    QWORD PTR [rip+0x4ec2]        # 5f28 <__strncpy_chk@GLIBC_2.3.4>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <__assert_fail@plt>:
    1070:	ff 25 ba 4e 00 00    	jmp    QWORD PTR [rip+0x4eba]        # 5f30 <__assert_fail@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <calloc@plt>:
    1080:	ff 25 b2 4e 00 00    	jmp    QWORD PTR [rip+0x4eb2]        # 5f38 <calloc@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <open@plt>:
    1090:	ff 25 aa 4e 00 00    	jmp    QWORD PTR [rip+0x4eaa]        # 5f40 <open@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <aligned_alloc@plt>:
    10a0:	ff 25 a2 4e 00 00    	jmp    QWORD PTR [rip+0x4ea2]        # 5f48 <aligned_alloc@GLIBC_2.16>
    10a6:	68 07 00 00 00       	push   0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <stat@plt>:
    10b0:	ff 25 9a 4e 00 00    	jmp    QWORD PTR [rip+0x4e9a]        # 5f50 <stat@GLIBC_2.33>
    10b6:	68 08 00 00 00       	push   0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <srand@plt>:
    10c0:	ff 25 92 4e 00 00    	jmp    QWORD PTR [rip+0x4e92]        # 5f58 <srand@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	push   0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <fclose@plt>:
    10d0:	ff 25 8a 4e 00 00    	jmp    QWORD PTR [rip+0x4e8a]        # 5f60 <fclose@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	push   0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <__stack_chk_fail@plt>:
    10e0:	ff 25 82 4e 00 00    	jmp    QWORD PTR [rip+0x4e82]        # 5f68 <__stack_chk_fail@GLIBC_2.4>
    10e6:	68 0b 00 00 00       	push   0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 7a 4e 00 00    	jmp    QWORD PTR [rip+0x4e7a]        # 5f70 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <free@plt>:
    1100:	ff 25 72 4e 00 00    	jmp    QWORD PTR [rip+0x4e72]        # 5f78 <free@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    1110:	ff 25 6a 4e 00 00    	jmp    QWORD PTR [rip+0x4e6a]        # 5f80 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    1116:	68 0e 00 00 00       	push   0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <__memset_chk@plt>:
    1120:	ff 25 62 4e 00 00    	jmp    QWORD PTR [rip+0x4e62]        # 5f88 <__memset_chk@GLIBC_2.3.4>
    1126:	68 0f 00 00 00       	push   0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <strcmp@plt>:
    1130:	ff 25 5a 4e 00 00    	jmp    QWORD PTR [rip+0x4e5a]        # 5f90 <strcmp@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <read@plt>:
    1140:	ff 25 52 4e 00 00    	jmp    QWORD PTR [rip+0x4e52]        # 5f98 <read@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <puts@plt>:
    1150:	ff 25 4a 4e 00 00    	jmp    QWORD PTR [rip+0x4e4a]        # 5fa0 <puts@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	push   0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001160 <__fprintf_chk@plt>:
    1160:	ff 25 42 4e 00 00    	jmp    QWORD PTR [rip+0x4e42]        # 5fa8 <__fprintf_chk@GLIBC_2.3.4>
    1166:	68 13 00 00 00       	push   0x13
    116b:	e9 b0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001170 <__memcpy_chk@plt>:
    1170:	ff 25 3a 4e 00 00    	jmp    QWORD PTR [rip+0x4e3a]        # 5fb0 <__memcpy_chk@GLIBC_2.3.4>
    1176:	68 14 00 00 00       	push   0x14
    117b:	e9 a0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001180 <sqrtf@plt>:
    1180:	ff 25 32 4e 00 00    	jmp    QWORD PTR [rip+0x4e32]        # 5fb8 <sqrtf@GLIBC_2.2.5>
    1186:	68 15 00 00 00       	push   0x15
    118b:	e9 90 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001190 <fwrite@plt>:
    1190:	ff 25 2a 4e 00 00    	jmp    QWORD PTR [rip+0x4e2a]        # 5fc0 <fwrite@GLIBC_2.2.5>
    1196:	68 16 00 00 00       	push   0x16
    119b:	e9 80 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011a0 <close@plt>:
    11a0:	ff 25 22 4e 00 00    	jmp    QWORD PTR [rip+0x4e22]        # 5fc8 <close@GLIBC_2.2.5>
    11a6:	68 17 00 00 00       	push   0x17
    11ab:	e9 70 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011b0 <__isoc23_strtol@plt>:
    11b0:	ff 25 1a 4e 00 00    	jmp    QWORD PTR [rip+0x4e1a]        # 5fd0 <__isoc23_strtol@GLIBC_2.38>
    11b6:	68 18 00 00 00       	push   0x18
    11bb:	e9 60 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000011c0 <__cxa_finalize@plt>:
    11c0:	ff 25 12 4e 00 00    	jmp    QWORD PTR [rip+0x4e12]        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    11c6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000011d0 <main>:
    11d0:	f3 0f 1e fa          	endbr64
    11d4:	53                   	push   rbx
    11d5:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
    11d9:	48 89 f3             	mov    rbx,rsi
    11dc:	ba 0a 00 00 00       	mov    edx,0xa
    11e1:	31 f6                	xor    esi,esi
    11e3:	e8 c8 ff ff ff       	call   11b0 <__isoc23_strtol@plt>
    11e8:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
    11ec:	b9 00 04 00 00       	mov    ecx,0x400
    11f1:	48 8d 3d 14 2e 00 00 	lea    rdi,[rip+0x2e14]        # 400c <_IO_stdin_used+0xc>
    11f8:	89 c6                	mov    esi,eax
    11fa:	e8 31 1b 00 00       	call   2d30 <_Z7testAllPKcjS0_j>
    11ff:	31 c0                	xor    eax,eax
    1201:	5b                   	pop    rbx
    1202:	c3                   	ret
    1203:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    120a:	00 00 00 
    120d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001210 <_start>:
    1210:	f3 0f 1e fa          	endbr64
    1214:	31 ed                	xor    ebp,ebp
    1216:	49 89 d1             	mov    r9,rdx
    1219:	5e                   	pop    rsi
    121a:	48 89 e2             	mov    rdx,rsp
    121d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1221:	50                   	push   rax
    1222:	54                   	push   rsp
    1223:	45 31 c0             	xor    r8d,r8d
    1226:	31 c9                	xor    ecx,ecx
    1228:	48 8d 3d a1 ff ff ff 	lea    rdi,[rip+0xffffffffffffffa1]        # 11d0 <main>
    122f:	ff 15 ab 4d 00 00    	call   QWORD PTR [rip+0x4dab]        # 5fe0 <__libc_start_main@GLIBC_2.34>
    1235:	f4                   	hlt
    1236:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    123d:	00 00 00 

0000000000001240 <deregister_tm_clones>:
    1240:	48 8d 3d c9 4d 00 00 	lea    rdi,[rip+0x4dc9]        # 6010 <__TMC_END__>
    1247:	48 8d 05 c2 4d 00 00 	lea    rax,[rip+0x4dc2]        # 6010 <__TMC_END__>
    124e:	48 39 f8             	cmp    rax,rdi
    1251:	74 15                	je     1268 <deregister_tm_clones+0x28>
    1253:	48 8b 05 8e 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d8e]        # 5fe8 <_ITM_deregisterTMCloneTable@Base>
    125a:	48 85 c0             	test   rax,rax
    125d:	74 09                	je     1268 <deregister_tm_clones+0x28>
    125f:	ff e0                	jmp    rax
    1261:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1268:	c3                   	ret
    1269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001270 <register_tm_clones>:
    1270:	48 8d 3d 99 4d 00 00 	lea    rdi,[rip+0x4d99]        # 6010 <__TMC_END__>
    1277:	48 8d 35 92 4d 00 00 	lea    rsi,[rip+0x4d92]        # 6010 <__TMC_END__>
    127e:	48 29 fe             	sub    rsi,rdi
    1281:	48 89 f0             	mov    rax,rsi
    1284:	48 c1 ee 3f          	shr    rsi,0x3f
    1288:	48 c1 f8 03          	sar    rax,0x3
    128c:	48 01 c6             	add    rsi,rax
    128f:	48 d1 fe             	sar    rsi,1
    1292:	74 14                	je     12a8 <register_tm_clones+0x38>
    1294:	48 8b 05 5d 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d5d]        # 5ff8 <_ITM_registerTMCloneTable@Base>
    129b:	48 85 c0             	test   rax,rax
    129e:	74 08                	je     12a8 <register_tm_clones+0x38>
    12a0:	ff e0                	jmp    rax
    12a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    12a8:	c3                   	ret
    12a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012b0 <__do_global_dtors_aux>:
    12b0:	f3 0f 1e fa          	endbr64
    12b4:	80 3d 55 4d 00 00 00 	cmp    BYTE PTR [rip+0x4d55],0x0        # 6010 <__TMC_END__>
    12bb:	75 2b                	jne    12e8 <__do_global_dtors_aux+0x38>
    12bd:	55                   	push   rbp
    12be:	48 83 3d 12 4d 00 00 	cmp    QWORD PTR [rip+0x4d12],0x0        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    12c5:	00 
    12c6:	48 89 e5             	mov    rbp,rsp
    12c9:	74 0c                	je     12d7 <__do_global_dtors_aux+0x27>
    12cb:	48 8b 3d 36 4d 00 00 	mov    rdi,QWORD PTR [rip+0x4d36]        # 6008 <__dso_handle>
    12d2:	e8 e9 fe ff ff       	call   11c0 <__cxa_finalize@plt>
    12d7:	e8 64 ff ff ff       	call   1240 <deregister_tm_clones>
    12dc:	c6 05 2d 4d 00 00 01 	mov    BYTE PTR [rip+0x4d2d],0x1        # 6010 <__TMC_END__>
    12e3:	5d                   	pop    rbp
    12e4:	c3                   	ret
    12e5:	0f 1f 00             	nop    DWORD PTR [rax]
    12e8:	c3                   	ret
    12e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012f0 <frame_dummy>:
    12f0:	f3 0f 1e fa          	endbr64
    12f4:	e9 77 ff ff ff       	jmp    1270 <register_tm_clones>
    12f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001300 <_Z16buildStringArrayPcj>:
    1300:	f3 0f 1e fa          	endbr64
    1304:	55                   	push   rbp
    1305:	48 89 e5             	mov    rbp,rsp
    1308:	41 57                	push   r15
    130a:	41 56                	push   r14
    130c:	41 55                	push   r13
    130e:	41 54                	push   r12
    1310:	53                   	push   rbx
    1311:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    1315:	48 83 ec 40          	sub    rsp,0x40
    1319:	48 85 ff             	test   rdi,rdi
    131c:	0f 84 26 01 00 00    	je     1448 <_Z16buildStringArrayPcj+0x148>
    1322:	41 89 f5             	mov    r13d,esi
    1325:	41 89 f6             	mov    r14d,esi
    1328:	49 89 fc             	mov    r12,rdi
    132b:	bf 40 00 00 00       	mov    edi,0x40
    1330:	49 c1 e6 06          	shl    r14,0x6
    1334:	44 89 eb             	mov    ebx,r13d
    1337:	4c 89 f6             	mov    rsi,r14
    133a:	c1 e3 05             	shl    ebx,0x5
    133d:	e8 5e fd ff ff       	call   10a0 <aligned_alloc@plt>
    1342:	48 89 de             	mov    rsi,rbx
    1345:	bf 20 00 00 00       	mov    edi,0x20
    134a:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    134f:	e8 4c fd ff ff       	call   10a0 <aligned_alloc@plt>
    1354:	49 89 c7             	mov    r15,rax
    1357:	48 85 c0             	test   rax,rax
    135a:	0f 84 07 01 00 00    	je     1467 <_Z16buildStringArrayPcj+0x167>
    1360:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    1365:	49 89 c0             	mov    r8,rax
    1368:	4c 01 f0             	add    rax,r14
    136b:	45 31 f6             	xor    r14d,r14d
    136e:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    1373:	45 85 ed             	test   r13d,r13d
    1376:	75 0b                	jne    1383 <_Z16buildStringArrayPcj+0x83>
    1378:	e9 af 00 00 00       	jmp    142c <_Z16buildStringArrayPcj+0x12c>
    137d:	0f 1f 00             	nop    DWORD PTR [rax]
    1380:	c5 f8 77             	vzeroupper
    1383:	4c 89 e7             	mov    rdi,r12
    1386:	be 0a 00 00 00       	mov    esi,0xa
    138b:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
    1390:	e8 bb fc ff ff       	call   1050 <strchr@plt>
    1395:	4c 89 e6             	mov    rsi,r12
    1398:	45 89 f2             	mov    r10d,r14d
    139b:	4c 8d 60 01          	lea    r12,[rax+0x1]
    139f:	4c 89 d1             	mov    rcx,r10
    13a2:	4f 8d 0c 17          	lea    r9,[r15+r10*1]
    13a6:	4c 89 54 24 28       	mov    QWORD PTR [rsp+0x28],r10
    13ab:	4d 89 e5             	mov    r13,r12
    13ae:	4c 89 cf             	mov    rdi,r9
    13b1:	4c 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],r9
    13b6:	49 29 f5             	sub    r13,rsi
    13b9:	4c 39 d3             	cmp    rbx,r10
    13bc:	48 0f 43 cb          	cmovae rcx,rbx
    13c0:	44 89 ea             	mov    edx,r13d
    13c3:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
    13c8:	4c 29 d1             	sub    rcx,r10
    13cb:	e8 90 fc ff ff       	call   1060 <__strncpy_chk@plt>
    13d0:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    13d5:	4c 8b 54 24 28       	mov    r10,QWORD PTR [rsp+0x28]
    13da:	4a 8d 3c 12          	lea    rdi,[rdx+r10*1]
    13de:	ba 20 00 00 00       	mov    edx,0x20
    13e3:	48 39 fb             	cmp    rbx,rdi
    13e6:	48 89 f9             	mov    rcx,rdi
    13e9:	48 0f 43 cb          	cmovae rcx,rbx
    13ed:	44 29 ea             	sub    edx,r13d
    13f0:	31 f6                	xor    esi,esi
    13f2:	41 83 c6 20          	add    r14d,0x20
    13f6:	48 29 f9             	sub    rcx,rdi
    13f9:	4c 01 ff             	add    rdi,r15
    13fc:	e8 1f fd ff ff       	call   1120 <__memset_chk@plt>
    1401:	4c 8b 4c 24 38       	mov    r9,QWORD PTR [rsp+0x38]
    1406:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
    140b:	c4 c1 7d 6f 01       	vmovdqa ymm0,YMMWORD PTR [r9]
    1410:	45 89 68 24          	mov    DWORD PTR [r8+0x24],r13d
    1414:	49 83 c0 40          	add    r8,0x40
    1418:	c4 c1 7d 7f 40 c0    	vmovdqa YMMWORD PTR [r8-0x40],ymm0
    141e:	4c 39 44 24 18       	cmp    QWORD PTR [rsp+0x18],r8
    1423:	0f 85 57 ff ff ff    	jne    1380 <_Z16buildStringArrayPcj+0x80>
    1429:	c5 f8 77             	vzeroupper
    142c:	4c 89 ff             	mov    rdi,r15
    142f:	e8 cc fc ff ff       	call   1100 <free@plt>
    1434:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    1439:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    143d:	5b                   	pop    rbx
    143e:	41 5c                	pop    r12
    1440:	41 5d                	pop    r13
    1442:	41 5e                	pop    r14
    1444:	41 5f                	pop    r15
    1446:	5d                   	pop    rbp
    1447:	c3                   	ret
    1448:	48 8d 0d e9 2d 00 00 	lea    rcx,[rip+0x2de9]        # 4238 <_IO_stdin_used+0x238>
    144f:	ba 15 00 00 00       	mov    edx,0x15
    1454:	48 8d 35 0d 2e 00 00 	lea    rsi,[rip+0x2e0d]        # 4268 <_IO_stdin_used+0x268>
    145b:	48 8d 3d bb 2b 00 00 	lea    rdi,[rip+0x2bbb]        # 401d <_IO_stdin_used+0x1d>
    1462:	e8 09 fc ff ff       	call   1070 <__assert_fail@plt>
    1467:	48 8d 0d ca 2d 00 00 	lea    rcx,[rip+0x2dca]        # 4238 <_IO_stdin_used+0x238>
    146e:	ba 1d 00 00 00       	mov    edx,0x1d
    1473:	48 8d 35 ee 2d 00 00 	lea    rsi,[rip+0x2dee]        # 4268 <_IO_stdin_used+0x268>
    147a:	48 8d 3d 94 2b 00 00 	lea    rdi,[rip+0x2b94]        # 4015 <_IO_stdin_used+0x15>
    1481:	e8 ea fb ff ff       	call   1070 <__assert_fail@plt>
    1486:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    148d:	00 00 00 

0000000000001490 <_Z11hashMapCtorPFj8string_tEj>:
    1490:	f3 0f 1e fa          	endbr64
    1494:	55                   	push   rbp
    1495:	48 89 e5             	mov    rbp,rsp
    1498:	41 56                	push   r14
    149a:	41 89 d6             	mov    r14d,edx
    149d:	41 55                	push   r13
    149f:	41 54                	push   r12
    14a1:	49 89 fc             	mov    r12,rdi
    14a4:	53                   	push   rbx
    14a5:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    14a9:	48 83 ec 40          	sub    rsp,0x40
    14ad:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    14b4:	00 00 
    14b6:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    14bb:	31 c0                	xor    eax,eax
    14bd:	48 89 77 10          	mov    QWORD PTR [rdi+0x10],rsi
    14c1:	be 18 00 00 00       	mov    esi,0x18
    14c6:	c7 47 0c 00 00 00 00 	mov    DWORD PTR [rdi+0xc],0x0
    14cd:	44 89 77 08          	mov    DWORD PTR [rdi+0x8],r14d
    14d1:	4c 89 f7             	mov    rdi,r14
    14d4:	e8 a7 fb ff ff       	call   1080 <calloc@plt>
    14d9:	49 89 04 24          	mov    QWORD PTR [r12],rax
    14dd:	45 85 f6             	test   r14d,r14d
    14e0:	74 32                	je     1514 <_Z11hashMapCtorPFj8string_tEj+0x84>
    14e2:	48 89 c3             	mov    rbx,rax
    14e5:	4b 8d 04 76          	lea    rax,[r14+r14*2]
    14e9:	49 89 e5             	mov    r13,rsp
    14ec:	4c 8d 34 c3          	lea    r14,[rbx+rax*8]
    14f0:	4c 89 ef             	mov    rdi,r13
    14f3:	48 83 c3 18          	add    rbx,0x18
    14f7:	e8 a4 09 00 00       	call   1ea0 <_Z8listCtorv>
    14fc:	c5 fa 6f 04 24       	vmovdqu xmm0,XMMWORD PTR [rsp]
    1501:	c5 fa 7f 43 e8       	vmovdqu XMMWORD PTR [rbx-0x18],xmm0
    1506:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    150b:	48 89 43 f8          	mov    QWORD PTR [rbx-0x8],rax
    150f:	4c 39 f3             	cmp    rbx,r14
    1512:	75 dc                	jne    14f0 <_Z11hashMapCtorPFj8string_tEj+0x60>
    1514:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    1519:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1520:	00 00 
    1522:	75 10                	jne    1534 <_Z11hashMapCtorPFj8string_tEj+0xa4>
    1524:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    1528:	4c 89 e0             	mov    rax,r12
    152b:	5b                   	pop    rbx
    152c:	41 5c                	pop    r12
    152e:	41 5d                	pop    r13
    1530:	41 5e                	pop    r14
    1532:	5d                   	pop    rbp
    1533:	c3                   	ret
    1534:	e8 a7 fb ff ff       	call   10e0 <__stack_chk_fail@plt>
    1539:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001540 <_Z17hashMapAddElementP7HashMap8string_t>:
    1540:	f3 0f 1e fa          	endbr64
    1544:	55                   	push   rbp
    1545:	53                   	push   rbx
    1546:	48 83 ec 08          	sub    rsp,0x8
    154a:	48 85 ff             	test   rdi,rdi
    154d:	0f 84 9b 00 00 00    	je     15ee <_Z17hashMapAddElementP7HashMap8string_t+0xae>
    1553:	48 83 ec 40          	sub    rsp,0x40
    1557:	48 89 fb             	mov    rbx,rdi
    155a:	c5 fd 6f 9c 24 80 00 	vmovdqa ymm3,YMMWORD PTR [rsp+0x80]
    1561:	00 00 
    1563:	c5 fd 6f 54 24 60    	vmovdqa ymm2,YMMWORD PTR [rsp+0x60]
    1569:	c5 fd 7f 5c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm3
    156f:	c5 fd 7f 14 24       	vmovdqa YMMWORD PTR [rsp],ymm2
    1574:	c5 f8 77             	vzeroupper
    1577:	ff 57 10             	call   QWORD PTR [rdi+0x10]
    157a:	31 d2                	xor    edx,edx
    157c:	c5 fd 6f 64 24 60    	vmovdqa ymm4,YMMWORD PTR [rsp+0x60]
    1582:	89 c1                	mov    ecx,eax
    1584:	f7 73 08             	div    DWORD PTR [rbx+0x8]
    1587:	89 8c 24 80 00 00 00 	mov    DWORD PTR [rsp+0x80],ecx
    158e:	c5 fd 6f ac 24 80 00 	vmovdqa ymm5,YMMWORD PTR [rsp+0x80]
    1595:	00 00 
    1597:	89 d0                	mov    eax,edx
    1599:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    159d:	48 89 c5             	mov    rbp,rax
    15a0:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    15a3:	c5 fd 7f 24 24       	vmovdqa YMMWORD PTR [rsp],ymm4
    15a8:	c5 fd 7f 6c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm5
    15ae:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    15b2:	c5 f8 77             	vzeroupper
    15b5:	e8 56 09 00 00       	call   1f10 <_Z12pushListElemP4List8string_t>
    15ba:	48 83 c4 40          	add    rsp,0x40
    15be:	83 f8 01             	cmp    eax,0x1
    15c1:	75 22                	jne    15e5 <_Z17hashMapAddElementP7HashMap8string_t+0xa5>
    15c3:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
    15c6:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    15ca:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    15cf:	c5 fa 59 4b 0c       	vmulss xmm1,xmm0,DWORD PTR [rbx+0xc]
    15d4:	c5 f2 58 0d 28 2a 00 	vaddss xmm1,xmm1,DWORD PTR [rip+0x2a28]        # 4004 <_IO_stdin_used+0x4>
    15db:	00 
    15dc:	c5 f2 5e c0          	vdivss xmm0,xmm1,xmm0
    15e0:	c5 fa 11 43 0c       	vmovss DWORD PTR [rbx+0xc],xmm0
    15e5:	48 83 c4 08          	add    rsp,0x8
    15e9:	89 e8                	mov    eax,ebp
    15eb:	5b                   	pop    rbx
    15ec:	5d                   	pop    rbp
    15ed:	c3                   	ret
    15ee:	48 8d 0d 93 2c 00 00 	lea    rcx,[rip+0x2c93]        # 4288 <_IO_stdin_used+0x288>
    15f5:	ba 4f 00 00 00       	mov    edx,0x4f
    15fa:	48 8d 35 67 2c 00 00 	lea    rsi,[rip+0x2c67]        # 4268 <_IO_stdin_used+0x268>
    1601:	48 8d 3d 1a 2a 00 00 	lea    rdi,[rip+0x2a1a]        # 4022 <_IO_stdin_used+0x22>
    1608:	e8 63 fa ff ff       	call   1070 <__assert_fail@plt>
    160d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001610 <_Z17hashMapPopElementP7HashMap8string_t>:
    1610:	f3 0f 1e fa          	endbr64
    1614:	55                   	push   rbp
    1615:	53                   	push   rbx
    1616:	48 83 ec 08          	sub    rsp,0x8
    161a:	48 85 ff             	test   rdi,rdi
    161d:	0f 84 a9 00 00 00    	je     16cc <_Z17hashMapPopElementP7HashMap8string_t+0xbc>
    1623:	48 83 ec 40          	sub    rsp,0x40
    1627:	48 89 fb             	mov    rbx,rdi
    162a:	c5 fd 6f 9c 24 80 00 	vmovdqa ymm3,YMMWORD PTR [rsp+0x80]
    1631:	00 00 
    1633:	c5 fd 6f 54 24 60    	vmovdqa ymm2,YMMWORD PTR [rsp+0x60]
    1639:	c5 fd 7f 5c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm3
    163f:	c5 fd 7f 14 24       	vmovdqa YMMWORD PTR [rsp],ymm2
    1644:	c5 f8 77             	vzeroupper
    1647:	ff 57 10             	call   QWORD PTR [rdi+0x10]
    164a:	31 d2                	xor    edx,edx
    164c:	c5 fd 6f 64 24 60    	vmovdqa ymm4,YMMWORD PTR [rsp+0x60]
    1652:	89 c1                	mov    ecx,eax
    1654:	f7 73 08             	div    DWORD PTR [rbx+0x8]
    1657:	89 8c 24 80 00 00 00 	mov    DWORD PTR [rsp+0x80],ecx
    165e:	c5 fd 6f ac 24 80 00 	vmovdqa ymm5,YMMWORD PTR [rsp+0x80]
    1665:	00 00 
    1667:	89 d0                	mov    eax,edx
    1669:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    166d:	48 89 c5             	mov    rbp,rax
    1670:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    1673:	c5 fd 7f 24 24       	vmovdqa YMMWORD PTR [rsp],ymm4
    1678:	c5 fd 7f 6c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm5
    167e:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1682:	c5 f8 77             	vzeroupper
    1685:	e8 26 0a 00 00       	call   20b0 <_Z11popListElemP4List8string_t>
    168a:	48 83 c4 40          	add    rsp,0x40
    168e:	85 c0                	test   eax,eax
    1690:	74 2e                	je     16c0 <_Z17hashMapPopElementP7HashMap8string_t+0xb0>
    1692:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
    1695:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    1699:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    169e:	c5 fa 59 4b 0c       	vmulss xmm1,xmm0,DWORD PTR [rbx+0xc]
    16a3:	89 e8                	mov    eax,ebp
    16a5:	c5 f2 5c 0d 57 29 00 	vsubss xmm1,xmm1,DWORD PTR [rip+0x2957]        # 4004 <_IO_stdin_used+0x4>
    16ac:	00 
    16ad:	c5 f2 5e c0          	vdivss xmm0,xmm1,xmm0
    16b1:	c5 fa 11 43 0c       	vmovss DWORD PTR [rbx+0xc],xmm0
    16b6:	48 83 c4 08          	add    rsp,0x8
    16ba:	5b                   	pop    rbx
    16bb:	5d                   	pop    rbp
    16bc:	c3                   	ret
    16bd:	0f 1f 00             	nop    DWORD PTR [rax]
    16c0:	8b 6b 08             	mov    ebp,DWORD PTR [rbx+0x8]
    16c3:	48 83 c4 08          	add    rsp,0x8
    16c7:	5b                   	pop    rbx
    16c8:	89 e8                	mov    eax,ebp
    16ca:	5d                   	pop    rbp
    16cb:	c3                   	ret
    16cc:	48 8d 0d e5 2b 00 00 	lea    rcx,[rip+0x2be5]        # 42b8 <_IO_stdin_used+0x2b8>
    16d3:	ba 5d 00 00 00       	mov    edx,0x5d
    16d8:	48 8d 35 89 2b 00 00 	lea    rsi,[rip+0x2b89]        # 4268 <_IO_stdin_used+0x268>
    16df:	48 8d 3d 3c 29 00 00 	lea    rdi,[rip+0x293c]        # 4022 <_IO_stdin_used+0x22>
    16e6:	e8 85 f9 ff ff       	call   1070 <__assert_fail@plt>
    16eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000016f0 <_Z20hashMapSearchElementP7HashMap8string_t>:
    16f0:	f3 0f 1e fa          	endbr64
    16f4:	48 83 ec 18          	sub    rsp,0x18
    16f8:	c5 fd 6f 44 24 20    	vmovdqa ymm0,YMMWORD PTR [rsp+0x20]
    16fe:	48 85 ff             	test   rdi,rdi
    1701:	0f 84 8d 00 00 00    	je     1794 <_Z20hashMapSearchElementP7HashMap8string_t+0xa4>
    1707:	b9 11 11 11 21       	mov    ecx,0x21111111
    170c:	c4 c1 f9 7e c0       	vmovq  r8,xmm0
    1711:	48 89 fe             	mov    rsi,rdi
    1714:	48 83 ec 40          	sub    rsp,0x40
    1718:	89 c8                	mov    eax,ecx
    171a:	c4 e3 f9 16 c7 01    	vpextrq rdi,xmm0,0x1
    1720:	c4 e3 7d 39 c0 01    	vextracti128 xmm0,ymm0,0x1
    1726:	c5 fd 6f 54 24 60    	vmovdqa ymm2,YMMWORD PTR [rsp+0x60]
    172c:	f2 49 0f 38 f1 c0    	crc32  rax,r8
    1732:	41 89 c8             	mov    r8d,ecx
    1735:	c4 e3 f9 16 c2 01    	vpextrq rdx,xmm0,0x1
    173b:	c5 fd 6f 9c 24 80 00 	vmovdqa ymm3,YMMWORD PTR [rsp+0x80]
    1742:	00 00 
    1744:	c4 c1 f9 7e c1       	vmovq  r9,xmm0
    1749:	f2 4c 0f 38 f1 c7    	crc32  r8,rdi
    174f:	89 cf                	mov    edi,ecx
    1751:	44 01 c0             	add    eax,r8d
    1754:	f2 49 0f 38 f1 f9    	crc32  rdi,r9
    175a:	f2 48 0f 38 f1 ca    	crc32  rcx,rdx
    1760:	8b 56 08             	mov    edx,DWORD PTR [rsi+0x8]
    1763:	01 f8                	add    eax,edi
    1765:	01 c8                	add    eax,ecx
    1767:	83 ea 01             	sub    edx,0x1
    176a:	21 d0                	and    eax,edx
    176c:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    1770:	48 8b 06             	mov    rax,QWORD PTR [rsi]
    1773:	c5 fd 7f 14 24       	vmovdqa YMMWORD PTR [rsp],ymm2
    1778:	c5 fd 7f 5c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm3
    177e:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1782:	c5 f8 77             	vzeroupper
    1785:	e8 e6 09 00 00       	call   2170 <_Z13searchElementP4List8string_t>
    178a:	85 c0                	test   eax,eax
    178c:	0f 95 c0             	setne  al
    178f:	48 83 c4 58          	add    rsp,0x58
    1793:	c3                   	ret
    1794:	48 8d 0d 4d 2b 00 00 	lea    rcx,[rip+0x2b4d]        # 42e8 <_IO_stdin_used+0x2e8>
    179b:	ba 6a 00 00 00       	mov    edx,0x6a
    17a0:	48 8d 35 c1 2a 00 00 	lea    rsi,[rip+0x2ac1]        # 4268 <_IO_stdin_used+0x268>
    17a7:	48 8d 3d 74 28 00 00 	lea    rdi,[rip+0x2874]        # 4022 <_IO_stdin_used+0x22>
    17ae:	c5 f8 77             	vzeroupper
    17b1:	e8 ba f8 ff ff       	call   1070 <__assert_fail@plt>
    17b6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    17bd:	00 00 00 

00000000000017c0 <_Z13getLoadFactorP7HashMap>:
    17c0:	f3 0f 1e fa          	endbr64
    17c4:	48 85 ff             	test   rdi,rdi
    17c7:	74 06                	je     17cf <_Z13getLoadFactorP7HashMap+0xf>
    17c9:	c5 fa 10 47 0c       	vmovss xmm0,DWORD PTR [rdi+0xc]
    17ce:	c3                   	ret
    17cf:	50                   	push   rax
    17d0:	48 8d 0d 53 28 00 00 	lea    rcx,[rip+0x2853]        # 402a <_IO_stdin_used+0x2a>
    17d7:	ba a8 00 00 00       	mov    edx,0xa8
    17dc:	48 8d 35 85 2a 00 00 	lea    rsi,[rip+0x2a85]        # 4268 <_IO_stdin_used+0x268>
    17e3:	48 8d 3d 38 28 00 00 	lea    rdi,[rip+0x2838]        # 4022 <_IO_stdin_used+0x22>
    17ea:	e8 81 f8 ff ff       	call   1070 <__assert_fail@plt>
    17ef:	90                   	nop

00000000000017f0 <_Z11hashMapDtorP7HashMap>:
    17f0:	f3 0f 1e fa          	endbr64
    17f4:	55                   	push   rbp
    17f5:	53                   	push   rbx
    17f6:	48 83 ec 08          	sub    rsp,0x8
    17fa:	48 85 ff             	test   rdi,rdi
    17fd:	74 3a                	je     1839 <_Z11hashMapDtorP7HashMap+0x49>
    17ff:	8b 47 08             	mov    eax,DWORD PTR [rdi+0x8]
    1802:	48 89 fd             	mov    rbp,rdi
    1805:	31 db                	xor    ebx,ebx
    1807:	85 c0                	test   eax,eax
    1809:	74 1f                	je     182a <_Z11hashMapDtorP7HashMap+0x3a>
    180b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1810:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    1814:	48 8d 14 5b          	lea    rdx,[rbx+rbx*2]
    1818:	48 83 c3 01          	add    rbx,0x1
    181c:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1820:	e8 ab 09 00 00       	call   21d0 <_Z8listDtorP4List>
    1825:	3b 5d 08             	cmp    ebx,DWORD PTR [rbp+0x8]
    1828:	72 e6                	jb     1810 <_Z11hashMapDtorP7HashMap+0x20>
    182a:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    182e:	48 83 c4 08          	add    rsp,0x8
    1832:	5b                   	pop    rbx
    1833:	5d                   	pop    rbp
    1834:	e9 c7 f8 ff ff       	jmp    1100 <free@plt>
    1839:	48 8d 0d 08 28 00 00 	lea    rcx,[rip+0x2808]        # 4048 <_IO_stdin_used+0x48>
    1840:	ba ae 00 00 00       	mov    edx,0xae
    1845:	48 8d 35 1c 2a 00 00 	lea    rsi,[rip+0x2a1c]        # 4268 <_IO_stdin_used+0x268>
    184c:	48 8d 3d cf 27 00 00 	lea    rdi,[rip+0x27cf]        # 4022 <_IO_stdin_used+0x22>
    1853:	e8 18 f8 ff ff       	call   1070 <__assert_fail@plt>
    1858:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    185f:	00 

0000000000001860 <_Z6resizeP7HashMapj>:
    1860:	f3 0f 1e fa          	endbr64
    1864:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    1869:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    186d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    1871:	55                   	push   rbp
    1872:	48 89 e5             	mov    rbp,rsp
    1875:	41 57                	push   r15
    1877:	41 56                	push   r14
    1879:	41 55                	push   r13
    187b:	41 54                	push   r12
    187d:	41 52                	push   r10
    187f:	53                   	push   rbx
    1880:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    1887:	48 89 bd 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rdi
    188e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1895:	00 00 
    1897:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    189b:	31 c0                	xor    eax,eax
    189d:	48 85 f6             	test   rsi,rsi
    18a0:	0f 84 e2 01 00 00    	je     1a88 <_Z6resizeP7HashMapj+0x228>
    18a6:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
    18aa:	89 57 08             	mov    DWORD PTR [rdi+0x8],edx
    18ad:	49 89 ff             	mov    r15,rdi
    18b0:	49 89 f4             	mov    r12,rsi
    18b3:	be 18 00 00 00       	mov    esi,0x18
    18b8:	89 d3                	mov    ebx,edx
    18ba:	48 89 47 10          	mov    QWORD PTR [rdi+0x10],rax
    18be:	89 d0                	mov    eax,edx
    18c0:	48 89 c7             	mov    rdi,rax
    18c3:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
    18ca:	e8 b1 f7 ff ff       	call   1080 <calloc@plt>
    18cf:	49 89 07             	mov    QWORD PTR [r15],rax
    18d2:	49 89 c6             	mov    r14,rax
    18d5:	85 db                	test   ebx,ebx
    18d7:	74 55                	je     192e <_Z6resizeP7HashMapj+0xce>
    18d9:	49 89 c5             	mov    r13,rax
    18dc:	48 8b 85 f8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x108]
    18e3:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    18e7:	48 8d 85 10 ff ff ff 	lea    rax,[rbp-0xf0]
    18ee:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    18f5:	4d 8d 3c d6          	lea    r15,[r14+rdx*8]
    18f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1900:	48 8b bd 08 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xf8]
    1907:	49 83 c5 18          	add    r13,0x18
    190b:	e8 90 05 00 00       	call   1ea0 <_Z8listCtorv>
    1910:	c5 fa 6f 9d 10 ff ff 	vmovdqu xmm3,XMMWORD PTR [rbp-0xf0]
    1917:	ff 
    1918:	c4 c1 7a 7f 5d e8    	vmovdqu XMMWORD PTR [r13-0x18],xmm3
    191e:	48 8b 95 20 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe0]
    1925:	49 89 55 f8          	mov    QWORD PTR [r13-0x8],rdx
    1929:	4d 39 ef             	cmp    r15,r13
    192c:	75 d2                	jne    1900 <_Z6resizeP7HashMapj+0xa0>
    192e:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    1932:	c4 c1 7a 10 4c 24 0c 	vmovss xmm1,DWORD PTR [r12+0xc]
    1939:	41 8b 44 24 08       	mov    eax,DWORD PTR [r12+0x8]
    193e:	48 c7 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],0x0
    1945:	00 00 00 00 
    1949:	c4 e1 fa 2a 95 f8 fe 	vcvtsi2ss xmm2,xmm0,QWORD PTR [rbp-0x108]
    1950:	ff ff 
    1952:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1956:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    195b:	48 89 c1             	mov    rcx,rax
    195e:	48 8b 85 00 ff ff ff 	mov    rax,QWORD PTR [rbp-0x100]
    1965:	48 89 fe             	mov    rsi,rdi
    1968:	c5 f2 5e ca          	vdivss xmm1,xmm1,xmm2
    196c:	c5 f2 59 c8          	vmulss xmm1,xmm1,xmm0
    1970:	c5 fa 11 48 0c       	vmovss DWORD PTR [rax+0xc],xmm1
    1975:	85 c9                	test   ecx,ecx
    1977:	0f 84 db 00 00 00    	je     1a58 <_Z6resizeP7HashMapj+0x1f8>
    197d:	0f 1f 00             	nop    DWORD PTR [rax]
    1980:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    1987:	48 8d 04 40          	lea    rax,[rax+rax*2]
    198b:	4c 8d 2c c5 00 00 00 	lea    r13,[rax*8+0x0]
    1992:	00 
    1993:	48 8b 04 c7          	mov    rax,QWORD PTR [rdi+rax*8]
    1997:	8b 10                	mov    edx,DWORD PTR [rax]
    1999:	85 d2                	test   edx,edx
    199b:	74 78                	je     1a15 <_Z6resizeP7HashMapj+0x1b5>
    199d:	0f 1f 00             	nop    DWORD PTR [rax]
    19a0:	89 d1                	mov    ecx,edx
    19a2:	31 d2                	xor    edx,edx
    19a4:	48 83 ec 40          	sub    rsp,0x40
    19a8:	48 c1 e1 07          	shl    rcx,0x7
    19ac:	48 01 c8             	add    rax,rcx
    19af:	49 89 cf             	mov    r15,rcx
    19b2:	c5 fd 6f 48 40       	vmovdqa ymm1,YMMWORD PTR [rax+0x40]
    19b7:	c5 fd 6f 40 60       	vmovdqa ymm0,YMMWORD PTR [rax+0x60]
    19bc:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    19bf:	c5 fd 7f 8d 30 ff ff 	vmovdqa YMMWORD PTR [rbp-0xd0],ymm1
    19c6:	ff 
    19c7:	f7 f3                	div    ebx
    19c9:	c5 fd 7f 85 50 ff ff 	vmovdqa YMMWORD PTR [rbp-0xb0],ymm0
    19d0:	ff 
    19d1:	c5 fd 7f 8d 70 ff ff 	vmovdqa YMMWORD PTR [rbp-0x90],ymm1
    19d8:	ff 
    19d9:	c5 fd 7f 45 90       	vmovdqa YMMWORD PTR [rbp-0x70],ymm0
    19de:	c5 fd 7f 0c 24       	vmovdqa YMMWORD PTR [rsp],ymm1
    19e3:	c5 fd 7f 44 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
    19e9:	48 8d 04 52          	lea    rax,[rdx+rdx*2]
    19ed:	c5 f8 77             	vzeroupper
    19f0:	49 8d 3c c6          	lea    rdi,[r14+rax*8]
    19f4:	e8 17 05 00 00       	call   1f10 <_Z12pushListElemP4List8string_t>
    19f9:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    19fd:	48 83 c4 40          	add    rsp,0x40
    1a01:	4a 8b 04 2f          	mov    rax,QWORD PTR [rdi+r13*1]
    1a05:	48 89 fe             	mov    rsi,rdi
    1a08:	42 8b 14 38          	mov    edx,DWORD PTR [rax+r15*1]
    1a0c:	85 d2                	test   edx,edx
    1a0e:	75 90                	jne    19a0 <_Z6resizeP7HashMapj+0x140>
    1a10:	41 8b 4c 24 08       	mov    ecx,DWORD PTR [r12+0x8]
    1a15:	48 83 85 08 ff ff ff 	add    QWORD PTR [rbp-0xf8],0x1
    1a1c:	01 
    1a1d:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    1a24:	39 c8                	cmp    eax,ecx
    1a26:	0f 82 54 ff ff ff    	jb     1980 <_Z6resizeP7HashMapj+0x120>
    1a2c:	85 c9                	test   ecx,ecx
    1a2e:	74 28                	je     1a58 <_Z6resizeP7HashMapj+0x1f8>
    1a30:	31 db                	xor    ebx,ebx
    1a32:	eb 08                	jmp    1a3c <_Z6resizeP7HashMapj+0x1dc>
    1a34:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1a38:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    1a3c:	48 8d 04 5b          	lea    rax,[rbx+rbx*2]
    1a40:	48 83 c3 01          	add    rbx,0x1
    1a44:	48 8d 3c c6          	lea    rdi,[rsi+rax*8]
    1a48:	e8 83 07 00 00       	call   21d0 <_Z8listDtorP4List>
    1a4d:	41 3b 5c 24 08       	cmp    ebx,DWORD PTR [r12+0x8]
    1a52:	72 e4                	jb     1a38 <_Z6resizeP7HashMapj+0x1d8>
    1a54:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1a58:	e8 a3 f6 ff ff       	call   1100 <free@plt>
    1a5d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    1a61:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1a68:	00 00 
    1a6a:	75 3b                	jne    1aa7 <_Z6resizeP7HashMapj+0x247>
    1a6c:	48 8b 85 00 ff ff ff 	mov    rax,QWORD PTR [rbp-0x100]
    1a73:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    1a77:	5b                   	pop    rbx
    1a78:	41 5a                	pop    r10
    1a7a:	41 5c                	pop    r12
    1a7c:	41 5d                	pop    r13
    1a7e:	41 5e                	pop    r14
    1a80:	41 5f                	pop    r15
    1a82:	5d                   	pop    rbp
    1a83:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    1a87:	c3                   	ret
    1a88:	48 8d 0d 89 28 00 00 	lea    rcx,[rip+0x2889]        # 4318 <_IO_stdin_used+0x318>
    1a8f:	ba c2 00 00 00       	mov    edx,0xc2
    1a94:	48 8d 35 cd 27 00 00 	lea    rsi,[rip+0x27cd]        # 4268 <_IO_stdin_used+0x268>
    1a9b:	48 8d 3d 80 25 00 00 	lea    rdi,[rip+0x2580]        # 4022 <_IO_stdin_used+0x22>
    1aa2:	e8 c9 f5 ff ff       	call   1070 <__assert_fail@plt>
    1aa7:	e8 34 f6 ff ff       	call   10e0 <__stack_chk_fail@plt>
    1aac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001ab0 <_Z15crc32HashString8string_t>:
    1ab0:	f3 0f 1e fa          	endbr64
    1ab4:	31 c0                	xor    eax,eax
    1ab6:	c3                   	ret
    1ab7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1abe:	00 00 

0000000000001ac0 <_Z19_mm_crc32HashString8string_t>:
    1ac0:	f3 0f 1e fa          	endbr64
    1ac4:	31 c0                	xor    eax,eax
    1ac6:	c3                   	ret
    1ac7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1ace:	00 00 

0000000000001ad0 <_Z25_mm_crc32UnrollHashString8string_t>:
    1ad0:	f3 0f 1e fa          	endbr64
    1ad4:	c5 f9 6f 44 24 08    	vmovdqa xmm0,XMMWORD PTR [rsp+0x8]
    1ada:	b9 11 11 11 21       	mov    ecx,0x21111111
    1adf:	c5 fd 6f 4c 24 08    	vmovdqa ymm1,YMMWORD PTR [rsp+0x8]
    1ae5:	89 c8                	mov    eax,ecx
    1ae7:	c4 e1 f9 7e c7       	vmovq  rdi,xmm0
    1aec:	c4 e3 f9 16 c6 01    	vpextrq rsi,xmm0,0x1
    1af2:	c4 e3 7d 39 c8 01    	vextracti128 xmm0,ymm1,0x1
    1af8:	f2 48 0f 38 f1 c7    	crc32  rax,rdi
    1afe:	89 cf                	mov    edi,ecx
    1b00:	c4 c1 f9 7e c0       	vmovq  r8,xmm0
    1b05:	f2 48 0f 38 f1 fe    	crc32  rdi,rsi
    1b0b:	89 ce                	mov    esi,ecx
    1b0d:	c4 e3 f9 16 c2 01    	vpextrq rdx,xmm0,0x1
    1b13:	01 f8                	add    eax,edi
    1b15:	f2 49 0f 38 f1 f0    	crc32  rsi,r8
    1b1b:	f2 48 0f 38 f1 ca    	crc32  rcx,rdx
    1b21:	01 f0                	add    eax,esi
    1b23:	01 c8                	add    eax,ecx
    1b25:	c5 f8 77             	vzeroupper
    1b28:	c3                   	ret
    1b29:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001b30 <_Z17murmur2HashString8string_t>:
    1b30:	f3 0f 1e fa          	endbr64
    1b34:	31 c0                	xor    eax,eax
    1b36:	c3                   	ret
    1b37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1b3e:	00 00 

0000000000001b40 <_Z13sumHashString8string_t>:
    1b40:	f3 0f 1e fa          	endbr64
    1b44:	31 c0                	xor    eax,eax
    1b46:	c3                   	ret
    1b47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1b4e:	00 00 

0000000000001b50 <_Z17adler32HashString8string_t>:
    1b50:	f3 0f 1e fa          	endbr64
    1b54:	8b 7c 24 2c          	mov    edi,DWORD PTR [rsp+0x2c]
    1b58:	85 ff                	test   edi,edi
    1b5a:	0f 84 f0 01 00 00    	je     1d50 <_Z17adler32HashString8string_t+0x200>
    1b60:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    1b65:	41 b9 71 80 07 80    	mov    r9d,0x80078071
    1b6b:	49 b8 e7 e2 97 86 70 	movabs r8,0x800780708697e2e7
    1b72:	80 07 80 
    1b75:	48 8d 48 01          	lea    rcx,[rax+0x1]
    1b79:	48 89 c8             	mov    rax,rcx
    1b7c:	49 f7 e8             	imul   r8
    1b7f:	48 89 c8             	mov    rax,rcx
    1b82:	48 c1 f8 3f          	sar    rax,0x3f
    1b86:	48 01 ca             	add    rdx,rcx
    1b89:	48 c1 fa 0f          	sar    rdx,0xf
    1b8d:	48 29 c2             	sub    rdx,rax
    1b90:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1b97:	48 29 c1             	sub    rcx,rax
    1b9a:	89 ce                	mov    esi,ecx
    1b9c:	48 89 ca             	mov    rdx,rcx
    1b9f:	41 89 ca             	mov    r10d,ecx
    1ba2:	48 89 f1             	mov    rcx,rsi
    1ba5:	49 0f af c9          	imul   rcx,r9
    1ba9:	48 c1 e9 2f          	shr    rcx,0x2f
    1bad:	69 c1 f1 ff 00 00    	imul   eax,ecx,0xfff1
    1bb3:	89 d1                	mov    ecx,edx
    1bb5:	29 c1                	sub    ecx,eax
    1bb7:	83 ff 01             	cmp    edi,0x1
    1bba:	0f 84 86 01 00 00    	je     1d46 <_Z17adler32HashString8string_t+0x1f6>
    1bc0:	48 03 74 24 10       	add    rsi,QWORD PTR [rsp+0x10]
    1bc5:	48 89 f0             	mov    rax,rsi
    1bc8:	49 f7 e8             	imul   r8
    1bcb:	48 89 f0             	mov    rax,rsi
    1bce:	48 c1 f8 3f          	sar    rax,0x3f
    1bd2:	48 01 f2             	add    rdx,rsi
    1bd5:	48 c1 fa 0f          	sar    rdx,0xf
    1bd9:	48 29 c2             	sub    rdx,rax
    1bdc:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1be3:	48 29 c6             	sub    rsi,rax
    1be6:	01 f1                	add    ecx,esi
    1be8:	48 89 f2             	mov    rdx,rsi
    1beb:	41 89 f2             	mov    r10d,esi
    1bee:	89 c9                	mov    ecx,ecx
    1bf0:	48 89 c8             	mov    rax,rcx
    1bf3:	49 0f af c9          	imul   rcx,r9
    1bf7:	48 c1 e9 2f          	shr    rcx,0x2f
    1bfb:	69 f1 f1 ff 00 00    	imul   esi,ecx,0xfff1
    1c01:	29 f0                	sub    eax,esi
    1c03:	89 c1                	mov    ecx,eax
    1c05:	83 ff 02             	cmp    edi,0x2
    1c08:	0f 84 38 01 00 00    	je     1d46 <_Z17adler32HashString8string_t+0x1f6>
    1c0e:	89 d6                	mov    esi,edx
    1c10:	48 03 74 24 18       	add    rsi,QWORD PTR [rsp+0x18]
    1c15:	48 89 f0             	mov    rax,rsi
    1c18:	49 f7 e8             	imul   r8
    1c1b:	48 89 f0             	mov    rax,rsi
    1c1e:	48 c1 f8 3f          	sar    rax,0x3f
    1c22:	48 01 f2             	add    rdx,rsi
    1c25:	48 c1 fa 0f          	sar    rdx,0xf
    1c29:	48 29 c2             	sub    rdx,rax
    1c2c:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1c33:	48 29 c6             	sub    rsi,rax
    1c36:	01 f1                	add    ecx,esi
    1c38:	48 89 f2             	mov    rdx,rsi
    1c3b:	41 89 f2             	mov    r10d,esi
    1c3e:	89 c9                	mov    ecx,ecx
    1c40:	48 89 c8             	mov    rax,rcx
    1c43:	49 0f af c9          	imul   rcx,r9
    1c47:	48 c1 e9 2f          	shr    rcx,0x2f
    1c4b:	69 f1 f1 ff 00 00    	imul   esi,ecx,0xfff1
    1c51:	29 f0                	sub    eax,esi
    1c53:	89 c1                	mov    ecx,eax
    1c55:	83 ff 03             	cmp    edi,0x3
    1c58:	0f 84 e8 00 00 00    	je     1d46 <_Z17adler32HashString8string_t+0x1f6>
    1c5e:	89 d6                	mov    esi,edx
    1c60:	48 03 74 24 20       	add    rsi,QWORD PTR [rsp+0x20]
    1c65:	48 89 f0             	mov    rax,rsi
    1c68:	49 f7 e8             	imul   r8
    1c6b:	48 89 f0             	mov    rax,rsi
    1c6e:	48 c1 f8 3f          	sar    rax,0x3f
    1c72:	48 01 f2             	add    rdx,rsi
    1c75:	48 c1 fa 0f          	sar    rdx,0xf
    1c79:	48 29 c2             	sub    rdx,rax
    1c7c:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1c83:	48 29 c6             	sub    rsi,rax
    1c86:	01 f1                	add    ecx,esi
    1c88:	48 89 f2             	mov    rdx,rsi
    1c8b:	41 89 f2             	mov    r10d,esi
    1c8e:	89 c9                	mov    ecx,ecx
    1c90:	48 89 c8             	mov    rax,rcx
    1c93:	49 0f af c9          	imul   rcx,r9
    1c97:	48 c1 e9 2f          	shr    rcx,0x2f
    1c9b:	69 f1 f1 ff 00 00    	imul   esi,ecx,0xfff1
    1ca1:	29 f0                	sub    eax,esi
    1ca3:	89 c1                	mov    ecx,eax
    1ca5:	83 ff 04             	cmp    edi,0x4
    1ca8:	0f 84 98 00 00 00    	je     1d46 <_Z17adler32HashString8string_t+0x1f6>
    1cae:	89 d6                	mov    esi,edx
    1cb0:	48 03 74 24 28       	add    rsi,QWORD PTR [rsp+0x28]
    1cb5:	48 89 f0             	mov    rax,rsi
    1cb8:	49 f7 e8             	imul   r8
    1cbb:	48 8d 04 32          	lea    rax,[rdx+rsi*1]
    1cbf:	48 89 f2             	mov    rdx,rsi
    1cc2:	48 c1 f8 0f          	sar    rax,0xf
    1cc6:	48 c1 fa 3f          	sar    rdx,0x3f
    1cca:	48 29 d0             	sub    rax,rdx
    1ccd:	48 69 c0 f1 ff 00 00 	imul   rax,rax,0xfff1
    1cd4:	48 29 c6             	sub    rsi,rax
    1cd7:	01 f1                	add    ecx,esi
    1cd9:	41 89 f2             	mov    r10d,esi
    1cdc:	48 89 ce             	mov    rsi,rcx
    1cdf:	49 0f af c9          	imul   rcx,r9
    1ce3:	48 c1 e9 2f          	shr    rcx,0x2f
    1ce7:	69 c1 f1 ff 00 00    	imul   eax,ecx,0xfff1
    1ced:	29 c6                	sub    esi,eax
    1cef:	89 f1                	mov    ecx,esi
    1cf1:	83 ff 05             	cmp    edi,0x5
    1cf4:	74 50                	je     1d46 <_Z17adler32HashString8string_t+0x1f6>
    1cf6:	be 05 00 00 00       	mov    esi,0x5
    1cfb:	4c 03 54 f4 08       	add    r10,QWORD PTR [rsp+rsi*8+0x8]
    1d00:	48 83 c6 01          	add    rsi,0x1
    1d04:	4c 89 d0             	mov    rax,r10
    1d07:	49 f7 e8             	imul   r8
    1d0a:	4c 89 d0             	mov    rax,r10
    1d0d:	48 c1 f8 3f          	sar    rax,0x3f
    1d11:	4c 01 d2             	add    rdx,r10
    1d14:	48 c1 fa 0f          	sar    rdx,0xf
    1d18:	48 29 c2             	sub    rdx,rax
    1d1b:	48 69 c2 f1 ff 00 00 	imul   rax,rdx,0xfff1
    1d22:	4c 89 d2             	mov    rdx,r10
    1d25:	48 29 c2             	sub    rdx,rax
    1d28:	01 d1                	add    ecx,edx
    1d2a:	41 89 d2             	mov    r10d,edx
    1d2d:	48 89 ca             	mov    rdx,rcx
    1d30:	49 0f af c9          	imul   rcx,r9
    1d34:	48 c1 e9 2f          	shr    rcx,0x2f
    1d38:	69 c1 f1 ff 00 00    	imul   eax,ecx,0xfff1
    1d3e:	89 d1                	mov    ecx,edx
    1d40:	29 c1                	sub    ecx,eax
    1d42:	39 fe                	cmp    esi,edi
    1d44:	72 b5                	jb     1cfb <_Z17adler32HashString8string_t+0x1ab>
    1d46:	89 c8                	mov    eax,ecx
    1d48:	c1 e0 10             	shl    eax,0x10
    1d4b:	44 09 d0             	or     eax,r10d
    1d4e:	c3                   	ret
    1d4f:	90                   	nop
    1d50:	b8 01 00 00 00       	mov    eax,0x1
    1d55:	c3                   	ret
    1d56:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1d5d:	00 00 00 

0000000000001d60 <_Z13elfHashString8string_t>:
    1d60:	f3 0f 1e fa          	endbr64
    1d64:	8b 4c 24 2c          	mov    ecx,DWORD PTR [rsp+0x2c]
    1d68:	85 c9                	test   ecx,ecx
    1d6a:	0f 84 ed 00 00 00    	je     1e5d <_Z13elfHashString8string_t+0xfd>
    1d70:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    1d75:	89 c2                	mov    edx,eax
    1d77:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1d7d:	89 d6                	mov    esi,edx
    1d7f:	c1 ee 18             	shr    esi,0x18
    1d82:	31 c6                	xor    esi,eax
    1d84:	85 d2                	test   edx,edx
    1d86:	f7 d2                	not    edx
    1d88:	0f 45 c6             	cmovne eax,esi
    1d8b:	21 c2                	and    edx,eax
    1d8d:	83 f9 01             	cmp    ecx,0x1
    1d90:	0f 84 ca 00 00 00    	je     1e60 <_Z13elfHashString8string_t+0x100>
    1d96:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
    1d9a:	c1 e2 04             	shl    edx,0x4
    1d9d:	01 d0                	add    eax,edx
    1d9f:	89 c2                	mov    edx,eax
    1da1:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1da7:	89 d6                	mov    esi,edx
    1da9:	c1 ee 18             	shr    esi,0x18
    1dac:	31 c6                	xor    esi,eax
    1dae:	85 d2                	test   edx,edx
    1db0:	f7 d2                	not    edx
    1db2:	0f 45 c6             	cmovne eax,esi
    1db5:	21 c2                	and    edx,eax
    1db7:	83 f9 02             	cmp    ecx,0x2
    1dba:	0f 84 a0 00 00 00    	je     1e60 <_Z13elfHashString8string_t+0x100>
    1dc0:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
    1dc4:	c1 e2 04             	shl    edx,0x4
    1dc7:	01 d0                	add    eax,edx
    1dc9:	89 c2                	mov    edx,eax
    1dcb:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1dd1:	89 d6                	mov    esi,edx
    1dd3:	c1 ee 18             	shr    esi,0x18
    1dd6:	31 c6                	xor    esi,eax
    1dd8:	85 d2                	test   edx,edx
    1dda:	f7 d2                	not    edx
    1ddc:	0f 45 c6             	cmovne eax,esi
    1ddf:	21 c2                	and    edx,eax
    1de1:	83 f9 03             	cmp    ecx,0x3
    1de4:	74 7a                	je     1e60 <_Z13elfHashString8string_t+0x100>
    1de6:	8b 44 24 20          	mov    eax,DWORD PTR [rsp+0x20]
    1dea:	c1 e2 04             	shl    edx,0x4
    1ded:	01 d0                	add    eax,edx
    1def:	89 c2                	mov    edx,eax
    1df1:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1df7:	89 d6                	mov    esi,edx
    1df9:	c1 ee 18             	shr    esi,0x18
    1dfc:	31 c6                	xor    esi,eax
    1dfe:	85 d2                	test   edx,edx
    1e00:	f7 d2                	not    edx
    1e02:	0f 45 c6             	cmovne eax,esi
    1e05:	21 c2                	and    edx,eax
    1e07:	83 f9 04             	cmp    ecx,0x4
    1e0a:	74 54                	je     1e60 <_Z13elfHashString8string_t+0x100>
    1e0c:	8b 44 24 28          	mov    eax,DWORD PTR [rsp+0x28]
    1e10:	c1 e2 04             	shl    edx,0x4
    1e13:	01 d0                	add    eax,edx
    1e15:	89 c2                	mov    edx,eax
    1e17:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1e1d:	89 d6                	mov    esi,edx
    1e1f:	c1 ee 18             	shr    esi,0x18
    1e22:	31 c6                	xor    esi,eax
    1e24:	85 d2                	test   edx,edx
    1e26:	f7 d2                	not    edx
    1e28:	0f 45 c6             	cmovne eax,esi
    1e2b:	21 d0                	and    eax,edx
    1e2d:	ba 05 00 00 00       	mov    edx,0x5
    1e32:	83 f9 05             	cmp    ecx,0x5
    1e35:	74 24                	je     1e5b <_Z13elfHashString8string_t+0xfb>
    1e37:	c1 e0 04             	shl    eax,0x4
    1e3a:	03 44 d4 08          	add    eax,DWORD PTR [rsp+rdx*8+0x8]
    1e3e:	89 c6                	mov    esi,eax
    1e40:	81 e6 00 00 00 f0    	and    esi,0xf0000000
    1e46:	74 0b                	je     1e53 <_Z13elfHashString8string_t+0xf3>
    1e48:	89 f7                	mov    edi,esi
    1e4a:	f7 d6                	not    esi
    1e4c:	c1 ef 18             	shr    edi,0x18
    1e4f:	31 f8                	xor    eax,edi
    1e51:	21 f0                	and    eax,esi
    1e53:	48 83 c2 01          	add    rdx,0x1
    1e57:	39 ca                	cmp    edx,ecx
    1e59:	72 dc                	jb     1e37 <_Z13elfHashString8string_t+0xd7>
    1e5b:	89 c1                	mov    ecx,eax
    1e5d:	89 c8                	mov    eax,ecx
    1e5f:	c3                   	ret
    1e60:	89 d1                	mov    ecx,edx
    1e62:	89 c8                	mov    eax,ecx
    1e64:	c3                   	ret
    1e65:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1e6c:	00 00 00 
    1e6f:	90                   	nop

0000000000001e70 <_Z13searchElementP4List8string_t.part.0>:
    1e70:	50                   	push   rax
    1e71:	58                   	pop    rax
    1e72:	48 8d 0d c7 24 00 00 	lea    rcx,[rip+0x24c7]        # 4340 <_IO_stdin_used+0x340>
    1e79:	ba 58 00 00 00       	mov    edx,0x58
    1e7e:	48 8d 35 de 21 00 00 	lea    rsi,[rip+0x21de]        # 4063 <_IO_stdin_used+0x63>
    1e85:	48 8d 3d f2 21 00 00 	lea    rdi,[rip+0x21f2]        # 407e <_IO_stdin_used+0x7e>
    1e8c:	48 83 ec 08          	sub    rsp,0x8
    1e90:	e8 db f1 ff ff       	call   1070 <__assert_fail@plt>
    1e95:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1e9c:	00 00 00 00 

0000000000001ea0 <_Z8listCtorv>:
    1ea0:	f3 0f 1e fa          	endbr64
    1ea4:	53                   	push   rbx
    1ea5:	be 00 02 00 00       	mov    esi,0x200
    1eaa:	48 89 fb             	mov    rbx,rdi
    1ead:	bf 80 00 00 00       	mov    edi,0x80
    1eb2:	e8 e9 f1 ff ff       	call   10a0 <aligned_alloc@plt>
    1eb7:	b9 40 00 00 00       	mov    ecx,0x40
    1ebc:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    1ec3:	00 
    1ec4:	48 89 c2             	mov    rdx,rax
    1ec7:	48 89 03             	mov    QWORD PTR [rbx],rax
    1eca:	31 c0                	xor    eax,eax
    1ecc:	48 89 d7             	mov    rdi,rdx
    1ecf:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    1ed2:	48 b8 01 00 00 00 04 	movabs rax,0x400000001
    1ed9:	00 00 00 
    1edc:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    1ee0:	48 8b 05 81 27 00 00 	mov    rax,QWORD PTR [rip+0x2781]        # 4668 <_IO_stdin_used+0x668>
    1ee7:	48 89 82 80 00 00 00 	mov    QWORD PTR [rdx+0x80],rax
    1eee:	48 8b 05 7b 27 00 00 	mov    rax,QWORD PTR [rip+0x277b]        # 4670 <_IO_stdin_used+0x670>
    1ef5:	48 89 82 00 01 00 00 	mov    QWORD PTR [rdx+0x100],rax
    1efc:	48 8b 05 75 27 00 00 	mov    rax,QWORD PTR [rip+0x2775]        # 4678 <_IO_stdin_used+0x678>
    1f03:	48 89 82 80 01 00 00 	mov    QWORD PTR [rdx+0x180],rax
    1f0a:	48 89 d8             	mov    rax,rbx
    1f0d:	5b                   	pop    rbx
    1f0e:	c3                   	ret
    1f0f:	90                   	nop

0000000000001f10 <_Z12pushListElemP4List8string_t>:
    1f10:	f3 0f 1e fa          	endbr64
    1f14:	41 57                	push   r15
    1f16:	41 56                	push   r14
    1f18:	41 55                	push   r13
    1f1a:	41 54                	push   r12
    1f1c:	55                   	push   rbp
    1f1d:	53                   	push   rbx
    1f1e:	48 83 ec 08          	sub    rsp,0x8
    1f22:	48 85 ff             	test   rdi,rdi
    1f25:	0f 84 62 01 00 00    	je     208d <_Z12pushListElemP4List8string_t+0x17d>
    1f2b:	48 8b 2f             	mov    rbp,QWORD PTR [rdi]
    1f2e:	c5 fd 6f 5c 24 40    	vmovdqa ymm3,YMMWORD PTR [rsp+0x40]
    1f34:	49 89 fc             	mov    r12,rdi
    1f37:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
    1f3a:	85 c0                	test   eax,eax
    1f3c:	75 08                	jne    1f46 <_Z12pushListElemP4List8string_t+0x36>
    1f3e:	eb 58                	jmp    1f98 <_Z12pushListElemP4List8string_t+0x88>
    1f40:	8b 00                	mov    eax,DWORD PTR [rax]
    1f42:	85 c0                	test   eax,eax
    1f44:	74 52                	je     1f98 <_Z12pushListElemP4List8string_t+0x88>
    1f46:	89 c3                	mov    ebx,eax
    1f48:	48 c1 e3 07          	shl    rbx,0x7
    1f4c:	48 8d 44 1d 00       	lea    rax,[rbp+rbx*1+0x0]
    1f51:	c5 fd 6f 60 40       	vmovdqa ymm4,YMMWORD PTR [rax+0x40]
    1f56:	c5 fd 6f c3          	vmovdqa ymm0,ymm3
    1f5a:	c5 fd 6f cc          	vmovdqa ymm1,ymm4
    1f5e:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    1f62:	c5 fd d7 d2          	vpmovmskb edx,ymm2
    1f66:	f7 d2                	not    edx
    1f68:	85 d2                	test   edx,edx
    1f6a:	75 d4                	jne    1f40 <_Z12pushListElemP4List8string_t+0x30>
    1f6c:	8b 70 08             	mov    esi,DWORD PTR [rax+0x8]
    1f6f:	8d 4e 01             	lea    ecx,[rsi+0x1]
    1f72:	89 48 08             	mov    DWORD PTR [rax+0x8],ecx
    1f75:	45 8b 6c 24 0c       	mov    r13d,DWORD PTR [r12+0xc]
    1f7a:	45 39 6c 24 08       	cmp    DWORD PTR [r12+0x8],r13d
    1f7f:	74 7f                	je     2000 <_Z12pushListElemP4List8string_t+0xf0>
    1f81:	c5 f8 77             	vzeroupper
    1f84:	48 83 c4 08          	add    rsp,0x8
    1f88:	89 c8                	mov    eax,ecx
    1f8a:	5b                   	pop    rbx
    1f8b:	5d                   	pop    rbp
    1f8c:	41 5c                	pop    r12
    1f8e:	41 5d                	pop    r13
    1f90:	41 5e                	pop    r14
    1f92:	41 5f                	pop    r15
    1f94:	c3                   	ret
    1f95:	0f 1f 00             	nop    DWORD PTR [rax]
    1f98:	41 8b 5c 24 08       	mov    ebx,DWORD PTR [r12+0x8]
    1f9d:	c5 fd 6f 44 24 40    	vmovdqa ymm0,YMMWORD PTR [rsp+0x40]
    1fa3:	c5 fd 6f 4c 24 60    	vmovdqa ymm1,YMMWORD PTR [rsp+0x60]
    1fa9:	48 89 d9             	mov    rcx,rbx
    1fac:	48 c1 e3 07          	shl    rbx,0x7
    1fb0:	48 01 dd             	add    rbp,rbx
    1fb3:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
    1fb6:	41 89 44 24 08       	mov    DWORD PTR [r12+0x8],eax
    1fbb:	c5 fd 7f 45 40       	vmovdqa YMMWORD PTR [rbp+0x40],ymm0
    1fc0:	c5 fd 7f 4d 60       	vmovdqa YMMWORD PTR [rbp+0x60],ymm1
    1fc5:	49 8b 2c 24          	mov    rbp,QWORD PTR [r12]
    1fc9:	48 8d 44 1d 00       	lea    rax,[rbp+rbx*1+0x0]
    1fce:	c7 40 08 00 00 00 00 	mov    DWORD PTR [rax+0x8],0x0
    1fd5:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    1fd8:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    1fde:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    1fe1:	48 c1 e2 07          	shl    rdx,0x7
    1fe5:	89 4d 04             	mov    DWORD PTR [rbp+0x4],ecx
    1fe8:	89 4c 15 00          	mov    DWORD PTR [rbp+rdx*1+0x0],ecx
    1fec:	41 83 44 24 10 01    	add    DWORD PTR [r12+0x10],0x1
    1ff2:	e9 75 ff ff ff       	jmp    1f6c <_Z12pushListElemP4List8string_t+0x5c>
    1ff7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    1ffe:	00 00 
    2000:	47 8d 7c 2d 00       	lea    r15d,[r13+r13*1+0x0]
    2005:	bf 80 00 00 00       	mov    edi,0x80
    200a:	45 89 7c 24 0c       	mov    DWORD PTR [r12+0xc],r15d
    200f:	49 c1 e7 07          	shl    r15,0x7
    2013:	4c 89 fe             	mov    rsi,r15
    2016:	c5 f8 77             	vzeroupper
    2019:	e8 82 f0 ff ff       	call   10a0 <aligned_alloc@plt>
    201e:	4c 89 f9             	mov    rcx,r15
    2021:	4c 89 fa             	mov    rdx,r15
    2024:	31 f6                	xor    esi,esi
    2026:	48 89 c7             	mov    rdi,rax
    2029:	49 89 c6             	mov    r14,rax
    202c:	e8 ef f0 ff ff       	call   1120 <__memset_chk@plt>
    2031:	44 89 ea             	mov    edx,r13d
    2034:	48 89 ee             	mov    rsi,rbp
    2037:	4c 89 f9             	mov    rcx,r15
    203a:	81 e2 ff ff ff 7f    	and    edx,0x7fffffff
    2040:	4c 89 f7             	mov    rdi,r14
    2043:	48 c1 e2 07          	shl    rdx,0x7
    2047:	e8 24 f1 ff ff       	call   1170 <__memcpy_chk@plt>
    204c:	48 89 ef             	mov    rdi,rbp
    204f:	e8 ac f0 ff ff       	call   1100 <free@plt>
    2054:	41 8b 54 24 08       	mov    edx,DWORD PTR [r12+0x8]
    2059:	41 8b 74 24 0c       	mov    esi,DWORD PTR [r12+0xc]
    205e:	4d 89 34 24          	mov    QWORD PTR [r12],r14
    2062:	48 89 d0             	mov    rax,rdx
    2065:	48 c1 e2 07          	shl    rdx,0x7
    2069:	4c 01 f2             	add    rdx,r14
    206c:	39 f0                	cmp    eax,esi
    206e:	73 13                	jae    2083 <_Z12pushListElemP4List8string_t+0x173>
    2070:	89 c1                	mov    ecx,eax
    2072:	83 c0 01             	add    eax,0x1
    2075:	48 83 ea 80          	sub    rdx,0xffffffffffffff80
    2079:	89 42 80             	mov    DWORD PTR [rdx-0x80],eax
    207c:	89 4a 84             	mov    DWORD PTR [rdx-0x7c],ecx
    207f:	39 c6                	cmp    esi,eax
    2081:	75 ed                	jne    2070 <_Z12pushListElemP4List8string_t+0x160>
    2083:	41 8b 4c 1e 08       	mov    ecx,DWORD PTR [r14+rbx*1+0x8]
    2088:	e9 f7 fe ff ff       	jmp    1f84 <_Z12pushListElemP4List8string_t+0x74>
    208d:	48 8d 0d d4 22 00 00 	lea    rcx,[rip+0x22d4]        # 4368 <_IO_stdin_used+0x368>
    2094:	ba 1f 00 00 00       	mov    edx,0x1f
    2099:	48 8d 35 c3 1f 00 00 	lea    rsi,[rip+0x1fc3]        # 4063 <_IO_stdin_used+0x63>
    20a0:	48 8d 3d d7 1f 00 00 	lea    rdi,[rip+0x1fd7]        # 407e <_IO_stdin_used+0x7e>
    20a7:	e8 c4 ef ff ff       	call   1070 <__assert_fail@plt>
    20ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000020b0 <_Z11popListElemP4List8string_t>:
    20b0:	f3 0f 1e fa          	endbr64
    20b4:	48 83 ec 18          	sub    rsp,0x18
    20b8:	48 85 ff             	test   rdi,rdi
    20bb:	0f 84 84 00 00 00    	je     2145 <_Z11popListElemP4List8string_t+0x95>
    20c1:	4c 8b 07             	mov    r8,QWORD PTR [rdi]
    20c4:	c5 fd 6f 5c 24 20    	vmovdqa ymm3,YMMWORD PTR [rsp+0x20]
    20ca:	41 8b 08             	mov    ecx,DWORD PTR [r8]
    20cd:	eb 29                	jmp    20f8 <_Z11popListElemP4List8string_t+0x48>
    20cf:	90                   	nop
    20d0:	89 ca                	mov    edx,ecx
    20d2:	48 c1 e2 07          	shl    rdx,0x7
    20d6:	4c 01 c2             	add    rdx,r8
    20d9:	c5 fd 6f 62 40       	vmovdqa ymm4,YMMWORD PTR [rdx+0x40]
    20de:	c5 fd 6f c3          	vmovdqa ymm0,ymm3
    20e2:	c5 fd 6f cc          	vmovdqa ymm1,ymm4
    20e6:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    20ea:	c5 fd d7 f2          	vpmovmskb esi,ymm2
    20ee:	f7 d6                	not    esi
    20f0:	89 c8                	mov    eax,ecx
    20f2:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    20f4:	85 f6                	test   esi,esi
    20f6:	74 18                	je     2110 <_Z11popListElemP4List8string_t+0x60>
    20f8:	85 c9                	test   ecx,ecx
    20fa:	75 d4                	jne    20d0 <_Z11popListElemP4List8string_t+0x20>
    20fc:	31 c0                	xor    eax,eax
    20fe:	c5 f8 77             	vzeroupper
    2101:	48 83 c4 18          	add    rsp,0x18
    2105:	c3                   	ret
    2106:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    210d:	00 00 00 
    2110:	8b 72 04             	mov    esi,DWORD PTR [rdx+0x4]
    2113:	c7 42 60 00 00 00 00 	mov    DWORD PTR [rdx+0x60],0x0
    211a:	49 89 f1             	mov    r9,rsi
    211d:	48 c1 e6 07          	shl    rsi,0x7
    2121:	41 89 0c 30          	mov    DWORD PTR [r8+rsi*1],ecx
    2125:	48 c1 e1 07          	shl    rcx,0x7
    2129:	45 89 4c 08 04       	mov    DWORD PTR [r8+rcx*1+0x4],r9d
    212e:	89 42 04             	mov    DWORD PTR [rdx+0x4],eax
    2131:	8b 4f 08             	mov    ecx,DWORD PTR [rdi+0x8]
    2134:	89 0a                	mov    DWORD PTR [rdx],ecx
    2136:	83 6f 10 01          	sub    DWORD PTR [rdi+0x10],0x1
    213a:	89 47 08             	mov    DWORD PTR [rdi+0x8],eax
    213d:	c5 f8 77             	vzeroupper
    2140:	48 83 c4 18          	add    rsp,0x18
    2144:	c3                   	ret
    2145:	48 8d 0d 3c 22 00 00 	lea    rcx,[rip+0x223c]        # 4388 <_IO_stdin_used+0x388>
    214c:	ba 3c 00 00 00       	mov    edx,0x3c
    2151:	48 8d 35 0b 1f 00 00 	lea    rsi,[rip+0x1f0b]        # 4063 <_IO_stdin_used+0x63>
    2158:	48 8d 3d 1f 1f 00 00 	lea    rdi,[rip+0x1f1f]        # 407e <_IO_stdin_used+0x7e>
    215f:	e8 0c ef ff ff       	call   1070 <__assert_fail@plt>
    2164:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    216b:	00 00 00 00 
    216f:	90                   	nop

0000000000002170 <_Z13searchElementP4List8string_t>:
    2170:	f3 0f 1e fa          	endbr64
    2174:	48 83 ec 18          	sub    rsp,0x18
    2178:	48 85 ff             	test   rdi,rdi
    217b:	74 49                	je     21c6 <_Z13searchElementP4List8string_t+0x56>
    217d:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
    2180:	8b 06                	mov    eax,DWORD PTR [rsi]
    2182:	85 c0                	test   eax,eax
    2184:	74 3c                	je     21c2 <_Z13searchElementP4List8string_t+0x52>
    2186:	c5 fd 6f 5c 24 20    	vmovdqa ymm3,YMMWORD PTR [rsp+0x20]
    218c:	eb 08                	jmp    2196 <_Z13searchElementP4List8string_t+0x26>
    218e:	66 90                	xchg   ax,ax
    2190:	8b 02                	mov    eax,DWORD PTR [rdx]
    2192:	85 c0                	test   eax,eax
    2194:	74 24                	je     21ba <_Z13searchElementP4List8string_t+0x4a>
    2196:	89 c2                	mov    edx,eax
    2198:	48 c1 e2 07          	shl    rdx,0x7
    219c:	48 01 f2             	add    rdx,rsi
    219f:	c5 fd 6f 62 40       	vmovdqa ymm4,YMMWORD PTR [rdx+0x40]
    21a4:	c5 fd 6f c3          	vmovdqa ymm0,ymm3
    21a8:	c5 fd 6f cc          	vmovdqa ymm1,ymm4
    21ac:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    21b0:	c5 fd d7 ca          	vpmovmskb ecx,ymm2
    21b4:	f7 d1                	not    ecx
    21b6:	85 c9                	test   ecx,ecx
    21b8:	75 d6                	jne    2190 <_Z13searchElementP4List8string_t+0x20>
    21ba:	c5 f8 77             	vzeroupper
    21bd:	48 83 c4 18          	add    rsp,0x18
    21c1:	c3                   	ret
    21c2:	31 c0                	xor    eax,eax
    21c4:	eb f7                	jmp    21bd <_Z13searchElementP4List8string_t+0x4d>
    21c6:	e8 a5 fc ff ff       	call   1e70 <_Z13searchElementP4List8string_t.part.0>
    21cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000021d0 <_Z8listDtorP4List>:
    21d0:	f3 0f 1e fa          	endbr64
    21d4:	53                   	push   rbx
    21d5:	48 85 ff             	test   rdi,rdi
    21d8:	74 15                	je     21ef <_Z8listDtorP4List+0x1f>
    21da:	48 89 fb             	mov    rbx,rdi
    21dd:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    21e0:	e8 1b ef ff ff       	call   1100 <free@plt>
    21e5:	48 c7 43 08 00 00 00 	mov    QWORD PTR [rbx+0x8],0x0
    21ec:	00 
    21ed:	5b                   	pop    rbx
    21ee:	c3                   	ret
    21ef:	48 8d 0d 8d 1e 00 00 	lea    rcx,[rip+0x1e8d]        # 4083 <_IO_stdin_used+0x83>
    21f6:	ba bb 00 00 00       	mov    edx,0xbb
    21fb:	48 8d 35 61 1e 00 00 	lea    rsi,[rip+0x1e61]        # 4063 <_IO_stdin_used+0x63>
    2202:	48 8d 3d 75 1e 00 00 	lea    rdi,[rip+0x1e75]        # 407e <_IO_stdin_used+0x7e>
    2209:	e8 62 ee ff ff       	call   1070 <__assert_fail@plt>
    220e:	66 90                	xchg   ax,ax

0000000000002210 <_Z8readFilePKcPm>:
    2210:	f3 0f 1e fa          	endbr64
    2214:	55                   	push   rbp
    2215:	48 89 e5             	mov    rbp,rsp
    2218:	41 55                	push   r13
    221a:	41 54                	push   r12
    221c:	53                   	push   rbx
    221d:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
    2224:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    222b:	00 00 
    222d:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    2234:	00 
    2235:	31 c0                	xor    eax,eax
    2237:	48 85 ff             	test   rdi,rdi
    223a:	0f 84 b4 00 00 00    	je     22f4 <_Z8readFilePKcPm+0xe4>
    2240:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    2244:	49 89 f4             	mov    r12,rsi
    2247:	48 89 e6             	mov    rsi,rsp
    224a:	48 89 fb             	mov    rbx,rdi
    224d:	c5 fe 7f 04 24       	vmovdqu YMMWORD PTR [rsp],ymm0
    2252:	c5 fe 7f 44 24 20    	vmovdqu YMMWORD PTR [rsp+0x20],ymm0
    2258:	c5 fe 7f 44 24 40    	vmovdqu YMMWORD PTR [rsp+0x40],ymm0
    225e:	c5 fe 7f 44 24 60    	vmovdqu YMMWORD PTR [rsp+0x60],ymm0
    2264:	c5 f9 7f 84 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm0
    226b:	00 00 
    226d:	c5 f8 77             	vzeroupper
    2270:	e8 3b ee ff ff       	call   10b0 <stat@plt>
    2275:	83 f8 ff             	cmp    eax,0xffffffff
    2278:	74 76                	je     22f0 <_Z8readFilePKcPm+0xe0>
    227a:	4c 8b 6c 24 30       	mov    r13,QWORD PTR [rsp+0x30]
    227f:	31 f6                	xor    esi,esi
    2281:	48 89 df             	mov    rdi,rbx
    2284:	31 c0                	xor    eax,eax
    2286:	4d 89 2c 24          	mov    QWORD PTR [r12],r13
    228a:	e8 01 ee ff ff       	call   1090 <open@plt>
    228f:	41 89 c4             	mov    r12d,eax
    2292:	83 f8 ff             	cmp    eax,0xffffffff
    2295:	74 59                	je     22f0 <_Z8readFilePKcPm+0xe0>
    2297:	be 01 00 00 00       	mov    esi,0x1
    229c:	4c 89 ef             	mov    rdi,r13
    229f:	e8 dc ed ff ff       	call   1080 <calloc@plt>
    22a4:	48 89 c3             	mov    rbx,rax
    22a7:	48 85 c0             	test   rax,rax
    22aa:	74 16                	je     22c2 <_Z8readFilePKcPm+0xb2>
    22ac:	44 89 e7             	mov    edi,r12d
    22af:	4c 89 ea             	mov    rdx,r13
    22b2:	48 89 c6             	mov    rsi,rax
    22b5:	e8 86 ee ff ff       	call   1140 <read@plt>
    22ba:	44 89 e7             	mov    edi,r12d
    22bd:	e8 de ee ff ff       	call   11a0 <close@plt>
    22c2:	48 8b 84 24 98 00 00 	mov    rax,QWORD PTR [rsp+0x98]
    22c9:	00 
    22ca:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    22d1:	00 00 
    22d3:	75 3e                	jne    2313 <_Z8readFilePKcPm+0x103>
    22d5:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
    22dc:	48 89 d8             	mov    rax,rbx
    22df:	5b                   	pop    rbx
    22e0:	41 5c                	pop    r12
    22e2:	41 5d                	pop    r13
    22e4:	5d                   	pop    rbp
    22e5:	c3                   	ret
    22e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    22ed:	00 00 00 
    22f0:	31 db                	xor    ebx,ebx
    22f2:	eb ce                	jmp    22c2 <_Z8readFilePKcPm+0xb2>
    22f4:	48 8d 0d ad 20 00 00 	lea    rcx,[rip+0x20ad]        # 43a8 <_IO_stdin_used+0x3a8>
    22fb:	ba 0c 00 00 00       	mov    edx,0xc
    2300:	48 8d 35 91 1d 00 00 	lea    rsi,[rip+0x1d91]        # 4098 <_IO_stdin_used+0x98>
    2307:	48 8d 3d a6 1d 00 00 	lea    rdi,[rip+0x1da6]        # 40b4 <_IO_stdin_used+0xb4>
    230e:	e8 5d ed ff ff       	call   1070 <__assert_fail@plt>
    2313:	e8 c8 ed ff ff       	call   10e0 <__stack_chk_fail@plt>
    2318:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    231f:	00 

0000000000002320 <_Z10countLinesPcm>:
    2320:	f3 0f 1e fa          	endbr64
    2324:	41 54                	push   r12
    2326:	55                   	push   rbp
    2327:	53                   	push   rbx
    2328:	48 85 ff             	test   rdi,rdi
    232b:	74 36                	je     2363 <_Z10countLinesPcm+0x43>
    232d:	48 89 fd             	mov    rbp,rdi
    2330:	49 89 f4             	mov    r12,rsi
    2333:	31 db                	xor    ebx,ebx
    2335:	48 85 f6             	test   rsi,rsi
    2338:	74 22                	je     235c <_Z10countLinesPcm+0x3c>
    233a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2340:	be 0a 00 00 00       	mov    esi,0xa
    2345:	83 c3 01             	add    ebx,0x1
    2348:	e8 03 ed ff ff       	call   1050 <strchr@plt>
    234d:	48 8d 78 01          	lea    rdi,[rax+0x1]
    2351:	48 89 f8             	mov    rax,rdi
    2354:	48 29 e8             	sub    rax,rbp
    2357:	4c 39 e0             	cmp    rax,r12
    235a:	75 e4                	jne    2340 <_Z10countLinesPcm+0x20>
    235c:	89 d8                	mov    eax,ebx
    235e:	5b                   	pop    rbx
    235f:	5d                   	pop    rbp
    2360:	41 5c                	pop    r12
    2362:	c3                   	ret
    2363:	48 8d 0d 66 20 00 00 	lea    rcx,[rip+0x2066]        # 43d0 <_IO_stdin_used+0x3d0>
    236a:	ba 22 00 00 00       	mov    edx,0x22
    236f:	48 8d 35 22 1d 00 00 	lea    rsi,[rip+0x1d22]        # 4098 <_IO_stdin_used+0x98>
    2376:	48 8d 3d a0 1c 00 00 	lea    rdi,[rip+0x1ca0]        # 401d <_IO_stdin_used+0x1d>
    237d:	e8 ee ec ff ff       	call   1070 <__assert_fail@plt>
    2382:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2389:	00 00 00 
    238c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002390 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj>:
    2390:	f3 0f 1e fa          	endbr64
    2394:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    2399:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    239d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    23a1:	55                   	push   rbp
    23a2:	48 89 e5             	mov    rbp,rsp
    23a5:	41 57                	push   r15
    23a7:	41 56                	push   r14
    23a9:	41 55                	push   r13
    23ab:	41 54                	push   r12
    23ad:	41 52                	push   r10
    23af:	53                   	push   rbx
    23b0:	48 83 ec 40          	sub    rsp,0x40
    23b4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    23bb:	00 00 
    23bd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    23c1:	31 c0                	xor    eax,eax
    23c3:	48 85 ff             	test   rdi,rdi
    23c6:	0f 84 03 04 00 00    	je     27cf <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x43f>
    23cc:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    23d0:	49 89 fd             	mov    r13,rdi
    23d3:	48 89 d3             	mov    rbx,rdx
    23d6:	49 89 ce             	mov    r14,rcx
    23d9:	44 89 c2             	mov    edx,r8d
    23dc:	4c 89 e7             	mov    rdi,r12
    23df:	e8 ac f0 ff ff       	call   1490 <_Z11hashMapCtorPFj8string_tEj>
    23e4:	45 85 f6             	test   r14d,r14d
    23e7:	74 3f                	je     2428 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x98>
    23e9:	45 89 f6             	mov    r14d,r14d
    23ec:	49 c1 e6 06          	shl    r14,0x6
    23f0:	49 01 de             	add    r14,rbx
    23f3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    23f8:	c5 fd 6f 23          	vmovdqa ymm4,YMMWORD PTR [rbx]
    23fc:	48 83 ec 40          	sub    rsp,0x40
    2400:	4c 89 e7             	mov    rdi,r12
    2403:	c5 fd 7f 24 24       	vmovdqa YMMWORD PTR [rsp],ymm4
    2408:	c5 fd 6f 6b 20       	vmovdqa ymm5,YMMWORD PTR [rbx+0x20]
    240d:	c5 fd 7f 6c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm5
    2413:	c5 f8 77             	vzeroupper
    2416:	e8 25 f1 ff ff       	call   1540 <_Z17hashMapAddElementP7HashMap8string_t>
    241b:	48 83 c3 40          	add    rbx,0x40
    241f:	48 83 c4 40          	add    rsp,0x40
    2423:	49 39 de             	cmp    r14,rbx
    2426:	75 d0                	jne    23f8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x68>
    2428:	4c 89 e9             	mov    rcx,r13
    242b:	ba 19 00 00 00       	mov    edx,0x19
    2430:	be 01 00 00 00       	mov    esi,0x1
    2435:	48 8d 3d a2 1c 00 00 	lea    rdi,[rip+0x1ca2]        # 40de <_IO_stdin_used+0xde>
    243c:	e8 4f ed ff ff       	call   1190 <fwrite@plt>
    2441:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    2444:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2448:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    244c:	85 c0                	test   eax,eax
    244e:	74 69                	je     24b9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x129>
    2450:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2454:	31 db                	xor    ebx,ebx
    2456:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    245a:	4c 8d 3d 97 1c 00 00 	lea    r15,[rip+0x1c97]        # 40f8 <_IO_stdin_used+0xf8>
    2461:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2468:	4c 8d 34 5b          	lea    r14,[rbx+rbx*2]
    246c:	89 d9                	mov    ecx,ebx
    246e:	4c 89 fa             	mov    rdx,r15
    2471:	be 02 00 00 00       	mov    esi,0x2
    2476:	49 c1 e6 03          	shl    r14,0x3
    247a:	4c 89 ef             	mov    rdi,r13
    247d:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    2482:	48 83 c3 01          	add    rbx,0x1
    2486:	46 8b 44 30 10       	mov    r8d,DWORD PTR [rax+r14*1+0x10]
    248b:	31 c0                	xor    eax,eax
    248d:	e8 ce ec ff ff       	call   1160 <__fprintf_chk@plt>
    2492:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2496:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    249a:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    249f:	42 8b 54 30 10       	mov    edx,DWORD PTR [rax+r14*1+0x10]
    24a4:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    24a9:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    24ac:	c5 ea 58 d0          	vaddss xmm2,xmm2,xmm0
    24b0:	39 d3                	cmp    ebx,edx
    24b2:	72 b4                	jb     2468 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xd8>
    24b4:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    24b9:	c5 ea 5e d0          	vdivss xmm2,xmm2,xmm0
    24bd:	bf 02 00 00 00       	mov    edi,0x2
    24c2:	b8 01 00 00 00       	mov    eax,0x1
    24c7:	48 8d 35 31 1c 00 00 	lea    rsi,[rip+0x1c31]        # 40ff <_IO_stdin_used+0xff>
    24ce:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    24d3:	c5 ea 5a c2          	vcvtss2sd xmm0,xmm2,xmm2
    24d7:	e8 54 eb ff ff       	call   1030 <__printf_chk@plt>
    24dc:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    24df:	85 f6                	test   esi,esi
    24e1:	0f 84 b9 02 00 00    	je     27a0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x410>
    24e7:	8d 46 ff             	lea    eax,[rsi-0x1]
    24ea:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    24ee:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    24f3:	83 f8 06             	cmp    eax,0x6
    24f6:	0f 86 b9 02 00 00    	jbe    27b5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x425>
    24fc:	48 8d 47 10          	lea    rax,[rdi+0x10]
    2500:	c4 e2 7d 18 ea       	vbroadcastss ymm5,xmm2
    2505:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2509:	89 f2                	mov    edx,esi
    250b:	c4 e2 7d 18 25 f4 1a 	vbroadcastss ymm4,DWORD PTR [rip+0x1af4]        # 4008 <_IO_stdin_used+0x8>
    2512:	00 00 
    2514:	c1 ea 03             	shr    edx,0x3
    2517:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    251e:	ff ff ff 
    2521:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    2525:	ba ff ff 00 00       	mov    edx,0xffff
    252a:	49 c1 e0 06          	shl    r8,0x6
    252e:	c5 f9 6e da          	vmovd  xmm3,edx
    2532:	49 01 c0             	add    r8,rax
    2535:	c4 e2 7d 58 db       	vpbroadcastd ymm3,xmm3
    253a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2540:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    2543:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    2546:	c5 c9 ef f6          	vpxor  xmm6,xmm6,xmm6
    254a:	48 05 c0 00 00 00    	add    rax,0xc0
    2550:	c5 fd 7f 75 90       	vmovdqa YMMWORD PTR [rbp-0x70],ymm6
    2555:	48 c1 e2 20          	shl    rdx,0x20
    2559:	49 09 d1             	or     r9,rdx
    255c:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    2560:	4c 89 4d 90          	mov    QWORD PTR [rbp-0x70],r9
    2564:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    256b:	48 21 ca             	and    rdx,rcx
    256e:	4c 09 ca             	or     rdx,r9
    2571:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    2575:	89 d2                	mov    edx,edx
    2577:	49 c1 e1 20          	shl    r9,0x20
    257b:	4c 09 ca             	or     rdx,r9
    257e:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    2582:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    2586:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    258a:	48 21 ca             	and    rdx,rcx
    258d:	4c 09 ca             	or     rdx,r9
    2590:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    2594:	89 d2                	mov    edx,edx
    2596:	49 c1 e1 20          	shl    r9,0x20
    259a:	4c 09 ca             	or     rdx,r9
    259d:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    25a1:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
    25a5:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    25a9:	48 21 ca             	and    rdx,rcx
    25ac:	4c 09 ca             	or     rdx,r9
    25af:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    25b3:	89 d2                	mov    edx,edx
    25b5:	49 c1 e1 20          	shl    r9,0x20
    25b9:	4c 09 ca             	or     rdx,r9
    25bc:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    25c0:	c5 fd 6f 75 90       	vmovdqa ymm6,YMMWORD PTR [rbp-0x70]
    25c5:	c5 e5 db 45 90       	vpand  ymm0,ymm3,YMMWORD PTR [rbp-0x70]
    25ca:	c5 f5 72 d6 10       	vpsrld ymm1,ymm6,0x10
    25cf:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    25d3:	c5 f4 59 cc          	vmulps ymm1,ymm1,ymm4
    25d7:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    25db:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    25df:	c5 fc 5c c5          	vsubps ymm0,ymm0,ymm5
    25e3:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    25e7:	c5 c2 58 c8          	vaddss xmm1,xmm7,xmm0
    25eb:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    25f0:	c5 f8 c6 f0 ff       	vshufps xmm6,xmm0,xmm0,0xff
    25f5:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    25f9:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    25fd:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    2603:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    2607:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    260b:	c5 f8 c6 f0 55       	vshufps xmm6,xmm0,xmm0,0x55
    2610:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    2614:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2618:	c5 f8 15 f0          	vunpckhps xmm6,xmm0,xmm0
    261c:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    2621:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2625:	c5 f2 58 f8          	vaddss xmm7,xmm1,xmm0
    2629:	49 39 c0             	cmp    r8,rax
    262c:	0f 85 0e ff ff ff    	jne    2540 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1b0>
    2632:	89 f0                	mov    eax,esi
    2634:	83 e0 f8             	and    eax,0xfffffff8
    2637:	40 f6 c6 07          	test   sil,0x7
    263b:	0f 84 6f 01 00 00    	je     27b0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x420>
    2641:	c5 f8 77             	vzeroupper
    2644:	89 f1                	mov    ecx,esi
    2646:	29 c1                	sub    ecx,eax
    2648:	8d 51 ff             	lea    edx,[rcx-0x1]
    264b:	83 fa 02             	cmp    edx,0x2
    264e:	0f 86 8b 00 00 00    	jbe    26df <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x34f>
    2654:	c4 e2 79 18 1d ab 19 	vbroadcastss xmm3,DWORD PTR [rip+0x19ab]        # 4008 <_IO_stdin_used+0x8>
    265b:	00 00 
    265d:	89 c2                	mov    edx,eax
    265f:	bb ff ff 00 00       	mov    ebx,0xffff
    2664:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2668:	c5 f9 6e cb          	vmovd  xmm1,ebx
    266c:	c5 f9 6e 44 d7 10    	vmovd  xmm0,DWORD PTR [rdi+rdx*8+0x10]
    2672:	c4 e3 79 22 44 d7 28 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x28],0x1
    2679:	01 
    267a:	c5 f9 70 c9 00       	vpshufd xmm1,xmm1,0x0
    267f:	c4 e3 79 22 44 d7 40 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x40],0x2
    2686:	02 
    2687:	c4 e3 79 22 44 d7 58 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x58],0x3
    268e:	03 
    268f:	89 ca                	mov    edx,ecx
    2691:	83 e2 fc             	and    edx,0xfffffffc
    2694:	c5 f9 db c9          	vpand  xmm1,xmm0,xmm1
    2698:	c5 f9 72 d0 10       	vpsrld xmm0,xmm0,0x10
    269d:	01 d0                	add    eax,edx
    269f:	83 e1 03             	and    ecx,0x3
    26a2:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    26a6:	c5 f8 59 c3          	vmulps xmm0,xmm0,xmm3
    26aa:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    26ae:	c5 f0 58 c8          	vaddps xmm1,xmm1,xmm0
    26b2:	c5 e8 c6 c2 00       	vshufps xmm0,xmm2,xmm2,0x0
    26b7:	c5 f0 5c c8          	vsubps xmm1,xmm1,xmm0
    26bb:	c5 f0 59 c9          	vmulps xmm1,xmm1,xmm1
    26bf:	c5 c2 58 c1          	vaddss xmm0,xmm7,xmm1
    26c3:	c5 f0 c6 d9 55       	vshufps xmm3,xmm1,xmm1,0x55
    26c8:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    26cc:	c5 f0 15 d9          	vunpckhps xmm3,xmm1,xmm1
    26d0:	c5 f0 c6 c9 ff       	vshufps xmm1,xmm1,xmm1,0xff
    26d5:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    26d9:	c5 fa 58 f9          	vaddss xmm7,xmm0,xmm1
    26dd:	74 5f                	je     273e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ae>
    26df:	89 c2                	mov    edx,eax
    26e1:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    26e5:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    26e9:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    26ed:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    26f2:	8d 50 01             	lea    edx,[rax+0x1]
    26f5:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    26f9:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    26fd:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2701:	39 f2                	cmp    edx,esi
    2703:	73 39                	jae    273e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ae>
    2705:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2709:	83 c0 02             	add    eax,0x2
    270c:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    2710:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    2715:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2719:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    271d:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2721:	39 f0                	cmp    eax,esi
    2723:	73 19                	jae    273e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ae>
    2725:	48 8d 04 40          	lea    rax,[rax+rax*2]
    2729:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    272d:	c4 e1 da 2a c0       	vcvtsi2ss xmm0,xmm4,rax
    2732:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2736:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    273a:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    273e:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    2742:	c4 e1 d2 2a c6       	vcvtsi2ss xmm0,xmm5,rsi
    2747:	c5 c2 5e f8          	vdivss xmm7,xmm7,xmm0
    274b:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    274f:	c5 f8 2e c7          	vucomiss xmm0,xmm7
    2753:	77 6b                	ja     27c0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x430>
    2755:	c5 c2 51 ff          	vsqrtss xmm7,xmm7,xmm7
    2759:	bf 02 00 00 00       	mov    edi,0x2
    275e:	48 8d 35 b4 19 00 00 	lea    rsi,[rip+0x19b4]        # 4119 <_IO_stdin_used+0x119>
    2765:	b8 01 00 00 00       	mov    eax,0x1
    276a:	c5 c2 5a c7          	vcvtss2sd xmm0,xmm7,xmm7
    276e:	e8 bd e8 ff ff       	call   1030 <__printf_chk@plt>
    2773:	4c 89 e7             	mov    rdi,r12
    2776:	e8 75 f0 ff ff       	call   17f0 <_Z11hashMapDtorP7HashMap>
    277b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    277f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2786:	00 00 
    2788:	75 64                	jne    27ee <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x45e>
    278a:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    278e:	5b                   	pop    rbx
    278f:	41 5a                	pop    r10
    2791:	41 5c                	pop    r12
    2793:	41 5d                	pop    r13
    2795:	41 5e                	pop    r14
    2797:	41 5f                	pop    r15
    2799:	5d                   	pop    rbp
    279a:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    279e:	c3                   	ret
    279f:	90                   	nop
    27a0:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    27a4:	c5 c2 5e ff          	vdivss xmm7,xmm7,xmm7
    27a8:	eb ab                	jmp    2755 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3c5>
    27aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    27b0:	c5 f8 77             	vzeroupper
    27b3:	eb 89                	jmp    273e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ae>
    27b5:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    27b9:	31 c0                	xor    eax,eax
    27bb:	e9 84 fe ff ff       	jmp    2644 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2b4>
    27c0:	c5 f8 28 c7          	vmovaps xmm0,xmm7
    27c4:	e8 b7 e9 ff ff       	call   1180 <sqrtf@plt>
    27c9:	c5 f8 28 f8          	vmovaps xmm7,xmm0
    27cd:	eb 8a                	jmp    2759 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3c9>
    27cf:	48 8d 0d 22 1c 00 00 	lea    rcx,[rip+0x1c22]        # 43f8 <_IO_stdin_used+0x3f8>
    27d6:	ba 48 00 00 00       	mov    edx,0x48
    27db:	48 8d 35 db 18 00 00 	lea    rsi,[rip+0x18db]        # 40bd <_IO_stdin_used+0xbd>
    27e2:	48 8d 3d f0 18 00 00 	lea    rdi,[rip+0x18f0]        # 40d9 <_IO_stdin_used+0xd9>
    27e9:	e8 82 e8 ff ff       	call   1070 <__assert_fail@plt>
    27ee:	e8 ed e8 ff ff       	call   10e0 <__stack_chk_fail@plt>
    27f3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    27fa:	00 00 00 00 
    27fe:	66 90                	xchg   ax,ax

0000000000002800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>:
    2800:	f3 0f 1e fa          	endbr64
    2804:	41 55                	push   r13
    2806:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    280b:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    280f:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    2813:	55                   	push   rbp
    2814:	48 89 e5             	mov    rbp,rsp
    2817:	41 57                	push   r15
    2819:	41 56                	push   r14
    281b:	41 55                	push   r13
    281d:	49 89 d5             	mov    r13,rdx
    2820:	41 54                	push   r12
    2822:	53                   	push   rbx
    2823:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    282a:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    282e:	44 89 85 5c ff ff ff 	mov    DWORD PTR [rbp-0xa4],r8d
    2835:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
    283c:	00 00 
    283e:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2842:	31 d2                	xor    edx,edx
    2844:	48 85 ff             	test   rdi,rdi
    2847:	0f 84 2e 04 00 00    	je     2c7b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x47b>
    284d:	bf 0a 00 00 00       	mov    edi,0xa
    2852:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
    2856:	48 89 cb             	mov    rbx,rcx
    2859:	45 89 cf             	mov    r15d,r9d
    285c:	41 89 ce             	mov    r14d,ecx
    285f:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    2863:	e8 58 e8 ff ff       	call   10c0 <srand@plt>
    2868:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    286c:	44 89 fa             	mov    edx,r15d
    286f:	4c 89 e7             	mov    rdi,r12
    2872:	e8 19 ec ff ff       	call   1490 <_Z11hashMapCtorPFj8string_tEj>
    2877:	85 db                	test   ebx,ebx
    2879:	74 3e                	je     28b9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xb9>
    287b:	89 db                	mov    ebx,ebx
    287d:	4d 89 ef             	mov    r15,r13
    2880:	48 c1 e3 06          	shl    rbx,0x6
    2884:	4c 01 eb             	add    rbx,r13
    2887:	c4 c1 7d 6f 2f       	vmovdqa ymm5,YMMWORD PTR [r15]
    288c:	48 83 ec 40          	sub    rsp,0x40
    2890:	4c 89 e7             	mov    rdi,r12
    2893:	c5 fd 7f 2c 24       	vmovdqa YMMWORD PTR [rsp],ymm5
    2898:	c4 c1 7d 6f 67 20    	vmovdqa ymm4,YMMWORD PTR [r15+0x20]
    289e:	c5 fd 7f 64 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm4
    28a4:	c5 f8 77             	vzeroupper
    28a7:	e8 94 ec ff ff       	call   1540 <_Z17hashMapAddElementP7HashMap8string_t>
    28ac:	49 83 c7 40          	add    r15,0x40
    28b0:	48 83 c4 40          	add    rsp,0x40
    28b4:	49 39 df             	cmp    r15,rbx
    28b7:	75 ce                	jne    2887 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x87>
    28b9:	be 04 00 00 00       	mov    esi,0x4
    28be:	bf 40 42 0f 00       	mov    edi,0xf4240
    28c3:	e8 b8 e7 ff ff       	call   1080 <calloc@plt>
    28c8:	be 08 00 00 00       	mov    esi,0x8
    28cd:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    28d4:	49 89 c7             	mov    r15,rax
    28d7:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    28dd:	4c 89 fb             	mov    rbx,r15
    28e0:	48 89 c7             	mov    rdi,rax
    28e3:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    28e7:	48 81 c3 00 09 3d 00 	add    rbx,0x3d0900
    28ee:	e8 8d e7 ff ff       	call   1080 <calloc@plt>
    28f3:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    28f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    28fe:	00 00 
    2900:	e8 3b e7 ff ff       	call   1040 <rand@plt>
    2905:	31 d2                	xor    edx,edx
    2907:	49 83 c7 04          	add    r15,0x4
    290b:	41 f7 f6             	div    r14d
    290e:	41 89 57 fc          	mov    DWORD PTR [r15-0x4],edx
    2912:	49 39 df             	cmp    r15,rbx
    2915:	75 e9                	jne    2900 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x100>
    2917:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    291d:	85 c0                	test   eax,eax
    291f:	0f 84 ee 02 00 00    	je     2c13 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x413>
    2925:	4c 8b 75 a8          	mov    r14,QWORD PTR [rbp-0x58]
    2929:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    292d:	49 8d 04 c6          	lea    rax,[r14+rax*8]
    2931:	4c 89 b5 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],r14
    2938:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    293c:	e8 cf e7 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2941:	4c 8b bd 68 ff ff ff 	mov    r15,QWORD PTR [rbp-0x98]
    2948:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    294f:	90                   	nop
    2950:	41 8b 07             	mov    eax,DWORD PTR [r15]
    2953:	48 83 ec 40          	sub    rsp,0x40
    2957:	4c 89 e7             	mov    rdi,r12
    295a:	48 c1 e0 06          	shl    rax,0x6
    295e:	4c 01 e8             	add    rax,r13
    2961:	c5 fd 6f 30          	vmovdqa ymm6,YMMWORD PTR [rax]
    2965:	c5 fd 7f 34 24       	vmovdqa YMMWORD PTR [rsp],ymm6
    296a:	c5 fd 6f 78 20       	vmovdqa ymm7,YMMWORD PTR [rax+0x20]
    296f:	c5 fd 7f 7c 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm7
    2975:	c5 f8 77             	vzeroupper
    2978:	e8 73 ed ff ff       	call   16f0 <_Z20hashMapSearchElementP7HashMap8string_t>
    297d:	49 83 c7 04          	add    r15,0x4
    2981:	48 83 c4 40          	add    rsp,0x40
    2985:	4c 39 fb             	cmp    rbx,r15
    2988:	75 c6                	jne    2950 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x150>
    298a:	e8 81 e7 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    298f:	48 8b 8d 70 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x90]
    2996:	c5 d1 57 ed          	vxorpd xmm5,xmm5,xmm5
    299a:	49 83 c6 08          	add    r14,0x8
    299e:	48 29 c8             	sub    rax,rcx
    29a1:	48 89 c1             	mov    rcx,rax
    29a4:	48 b8 cf f7 53 e3 a5 	movabs rax,0x20c49ba5e353f7cf
    29ab:	9b c4 20 
    29ae:	48 f7 e9             	imul   rcx
    29b1:	48 c1 f9 3f          	sar    rcx,0x3f
    29b5:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    29b9:	48 c1 fa 07          	sar    rdx,0x7
    29bd:	48 29 ca             	sub    rdx,rcx
    29c0:	c4 e1 d3 2a c2       	vcvtsi2sd xmm0,xmm5,rdx
    29c5:	c4 c1 7b 11 46 f8    	vmovsd QWORD PTR [r14-0x8],xmm0
    29cb:	49 39 c6             	cmp    r14,rax
    29ce:	0f 85 68 ff ff ff    	jne    293c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x13c>
    29d4:	4c 89 e7             	mov    rdi,r12
    29d7:	48 8d 1d 74 17 00 00 	lea    rbx,[rip+0x1774]        # 4152 <_IO_stdin_used+0x152>
    29de:	45 31 e4             	xor    r12d,r12d
    29e1:	e8 0a ee ff ff       	call   17f0 <_Z11hashMapDtorP7HashMap>
    29e6:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    29ea:	ba 13 00 00 00       	mov    edx,0x13
    29ef:	be 01 00 00 00       	mov    esi,0x1
    29f4:	48 8d 3d 38 17 00 00 	lea    rdi,[rip+0x1738]        # 4133 <_IO_stdin_used+0x133>
    29fb:	e8 90 e7 ff ff       	call   1190 <fwrite@plt>
    2a00:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2a04:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2a08:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    2a0c:	44 89 e1             	mov    ecx,r12d
    2a0f:	48 89 da             	mov    rdx,rbx
    2a12:	be 02 00 00 00       	mov    esi,0x2
    2a17:	c5 fb 11 55 a0       	vmovsd QWORD PTR [rbp-0x60],xmm2
    2a1c:	c4 a1 7b 10 04 e0    	vmovsd xmm0,QWORD PTR [rax+r12*8]
    2a22:	b8 01 00 00 00       	mov    eax,0x1
    2a27:	49 83 c4 01          	add    r12,0x1
    2a2b:	c5 fb 11 85 70 ff ff 	vmovsd QWORD PTR [rbp-0x90],xmm0
    2a32:	ff 
    2a33:	e8 28 e7 ff ff       	call   1160 <__fprintf_chk@plt>
    2a38:	c5 fb 10 85 70 ff ff 	vmovsd xmm0,QWORD PTR [rbp-0x90]
    2a3f:	ff 
    2a40:	c5 fb 10 55 a0       	vmovsd xmm2,QWORD PTR [rbp-0x60]
    2a45:	c5 eb 58 d0          	vaddsd xmm2,xmm2,xmm0
    2a49:	4c 39 65 90          	cmp    QWORD PTR [rbp-0x70],r12
    2a4d:	75 b5                	jne    2a04 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x204>
    2a4f:	8b b5 5c ff ff ff    	mov    esi,DWORD PTR [rbp-0xa4]
    2a55:	c5 d9 57 e4          	vxorpd xmm4,xmm4,xmm4
    2a59:	c5 db 2a c6          	vcvtsi2sd xmm0,xmm4,esi
    2a5d:	89 f0                	mov    eax,esi
    2a5f:	83 e8 01             	sub    eax,0x1
    2a62:	c5 eb 5e d0          	vdivsd xmm2,xmm2,xmm0
    2a66:	83 f8 02             	cmp    eax,0x2
    2a69:	0f 86 e2 01 00 00    	jbe    2c51 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x451>
    2a6f:	89 f0                	mov    eax,esi
    2a71:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    2a75:	c4 e2 7d 19 ea       	vbroadcastsd ymm5,xmm2
    2a7a:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2a7e:	c1 e8 02             	shr    eax,0x2
    2a81:	48 c1 e0 05          	shl    rax,0x5
    2a85:	48 01 c8             	add    rax,rcx
    2a88:	48 8b b5 60 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xa0]
    2a8f:	c5 fd 10 26          	vmovupd ymm4,YMMWORD PTR [rsi]
    2a93:	48 83 c6 20          	add    rsi,0x20
    2a97:	48 89 b5 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rsi
    2a9e:	c5 dd 5c cd          	vsubpd ymm1,ymm4,ymm5
    2aa2:	c5 fd 29 a5 70 ff ff 	vmovapd YMMWORD PTR [rbp-0x90],ymm4
    2aa9:	ff 
    2aaa:	c5 f5 59 c9          	vmulpd ymm1,ymm1,ymm1
    2aae:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    2ab2:	c5 f1 15 d9          	vunpckhpd xmm3,xmm1,xmm1
    2ab6:	c4 e3 7d 19 c9 01    	vextractf128 xmm1,ymm1,0x1
    2abc:	c5 e3 58 d8          	vaddsd xmm3,xmm3,xmm0
    2ac0:	c5 f3 58 c3          	vaddsd xmm0,xmm1,xmm3
    2ac4:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2ac8:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2acc:	48 39 f0             	cmp    rax,rsi
    2acf:	75 b7                	jne    2a88 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x288>
    2ad1:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [rbp-0xa4]
    2ad7:	a8 03                	test   al,0x3
    2ad9:	0f 84 2c 01 00 00    	je     2c0b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x40b>
    2adf:	83 e0 fc             	and    eax,0xfffffffc
    2ae2:	c5 f8 77             	vzeroupper
    2ae5:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [rbp-0xa4]
    2aeb:	29 c2                	sub    edx,eax
    2aed:	83 fa 01             	cmp    edx,0x1
    2af0:	74 2d                	je     2b1f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x31f>
    2af2:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    2af6:	89 c1                	mov    ecx,eax
    2af8:	c5 fb 12 da          	vmovddup xmm3,xmm2
    2afc:	c5 f9 10 0c ce       	vmovupd xmm1,XMMWORD PTR [rsi+rcx*8]
    2b01:	c5 f1 5c cb          	vsubpd xmm1,xmm1,xmm3
    2b05:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    2b09:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2b0d:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2b11:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    2b15:	f6 c2 01             	test   dl,0x1
    2b18:	74 1a                	je     2b34 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x334>
    2b1a:	83 e2 fe             	and    edx,0xfffffffe
    2b1d:	01 d0                	add    eax,edx
    2b1f:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
    2b23:	c5 fb 10 0c c6       	vmovsd xmm1,QWORD PTR [rsi+rax*8]
    2b28:	c5 f3 5c ca          	vsubsd xmm1,xmm1,xmm2
    2b2c:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    2b30:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2b34:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    2b38:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    2b3c:	c5 da 2a 8d 5c ff ff 	vcvtsi2ss xmm1,xmm4,DWORD PTR [rbp-0xa4]
    2b43:	ff 
    2b44:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    2b48:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    2b4c:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    2b50:	0f 87 49 01 00 00    	ja     2c9f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x49f>
    2b56:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    2b5a:	c5 fa 5a e0          	vcvtss2sd xmm4,xmm0,xmm0
    2b5e:	48 8d 35 f6 15 00 00 	lea    rsi,[rip+0x15f6]        # 415b <_IO_stdin_used+0x15b>
    2b65:	c4 e1 f9 7e e3       	vmovq  rbx,xmm4
    2b6a:	c5 eb 10 c2          	vmovsd xmm0,xmm2,xmm2
    2b6e:	bf 02 00 00 00       	mov    edi,0x2
    2b73:	b8 01 00 00 00       	mov    eax,0x1
    2b78:	c5 fb 11 95 70 ff ff 	vmovsd QWORD PTR [rbp-0x90],xmm2
    2b7f:	ff 
    2b80:	e8 ab e4 ff ff       	call   1030 <__printf_chk@plt>
    2b85:	c4 e1 f9 6e c3       	vmovq  xmm0,rbx
    2b8a:	bf 02 00 00 00       	mov    edi,0x2
    2b8f:	48 8d 35 e3 15 00 00 	lea    rsi,[rip+0x15e3]        # 4179 <_IO_stdin_used+0x179>
    2b96:	b8 01 00 00 00       	mov    eax,0x1
    2b9b:	e8 90 e4 ff ff       	call   1030 <__printf_chk@plt>
    2ba0:	c4 e1 f9 6e e3       	vmovq  xmm4,rbx
    2ba5:	c5 fb 10 95 70 ff ff 	vmovsd xmm2,QWORD PTR [rbp-0x90]
    2bac:	ff 
    2bad:	bf 02 00 00 00       	mov    edi,0x2
    2bb2:	48 8d 35 de 15 00 00 	lea    rsi,[rip+0x15de]        # 4197 <_IO_stdin_used+0x197>
    2bb9:	b8 01 00 00 00       	mov    eax,0x1
    2bbe:	c5 db 5e c2          	vdivsd xmm0,xmm4,xmm2
    2bc2:	c5 fb 59 05 b6 1a 00 	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1ab6]        # 4680 <_IO_stdin_used+0x680>
    2bc9:	00 
    2bca:	e8 61 e4 ff ff       	call   1030 <__printf_chk@plt>
    2bcf:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
    2bd3:	e8 28 e5 ff ff       	call   1100 <free@plt>
    2bd8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2bdc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2be3:	00 00 
    2be5:	0f 85 af 00 00 00    	jne    2c9a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x49a>
    2beb:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    2bf2:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    2bf6:	5b                   	pop    rbx
    2bf7:	41 5c                	pop    r12
    2bf9:	41 5d                	pop    r13
    2bfb:	41 5e                	pop    r14
    2bfd:	41 5f                	pop    r15
    2bff:	5d                   	pop    rbp
    2c00:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    2c04:	41 5d                	pop    r13
    2c06:	e9 f5 e4 ff ff       	jmp    1100 <free@plt>
    2c0b:	c5 f8 77             	vzeroupper
    2c0e:	e9 21 ff ff ff       	jmp    2b34 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x334>
    2c13:	4c 89 e7             	mov    rdi,r12
    2c16:	e8 d5 eb ff ff       	call   17f0 <_Z11hashMapDtorP7HashMap>
    2c1b:	48 8b 4d 98          	mov    rcx,QWORD PTR [rbp-0x68]
    2c1f:	ba 13 00 00 00       	mov    edx,0x13
    2c24:	be 01 00 00 00       	mov    esi,0x1
    2c29:	48 8d 3d 03 15 00 00 	lea    rdi,[rip+0x1503]        # 4133 <_IO_stdin_used+0x133>
    2c30:	e8 5b e5 ff ff       	call   1190 <fwrite@plt>
    2c35:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2c39:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    2c3e:	c5 eb 5e d2          	vdivsd xmm2,xmm2,xmm2
    2c42:	74 18                	je     2c5c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x45c>
    2c44:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2c48:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    2c4c:	e9 05 ff ff ff       	jmp    2b56 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x356>
    2c51:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2c55:	31 c0                	xor    eax,eax
    2c57:	e9 89 fe ff ff       	jmp    2ae5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2e5>
    2c5c:	48 8d 0d 15 18 00 00 	lea    rcx,[rip+0x1815]        # 4478 <_IO_stdin_used+0x478>
    2c63:	ba ad 00 00 00       	mov    edx,0xad
    2c68:	48 8d 35 4e 14 00 00 	lea    rsi,[rip+0x144e]        # 40bd <_IO_stdin_used+0xbd>
    2c6f:	48 8d 3d d1 14 00 00 	lea    rdi,[rip+0x14d1]        # 4147 <_IO_stdin_used+0x147>
    2c76:	e8 f5 e3 ff ff       	call   1070 <__assert_fail@plt>
    2c7b:	48 8d 0d ae 17 00 00 	lea    rcx,[rip+0x17ae]        # 4430 <_IO_stdin_used+0x430>
    2c82:	ba 62 00 00 00       	mov    edx,0x62
    2c87:	48 8d 35 2f 14 00 00 	lea    rsi,[rip+0x142f]        # 40bd <_IO_stdin_used+0xbd>
    2c8e:	48 8d 3d 44 14 00 00 	lea    rdi,[rip+0x1444]        # 40d9 <_IO_stdin_used+0xd9>
    2c95:	e8 d6 e3 ff ff       	call   1070 <__assert_fail@plt>
    2c9a:	e8 41 e4 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2c9f:	c5 fb 11 95 70 ff ff 	vmovsd QWORD PTR [rbp-0x90],xmm2
    2ca6:	ff 
    2ca7:	e8 d4 e4 ff ff       	call   1180 <sqrtf@plt>
    2cac:	c5 fb 10 95 70 ff ff 	vmovsd xmm2,QWORD PTR [rbp-0x90]
    2cb3:	ff 
    2cb4:	e9 a1 fe ff ff       	jmp    2b5a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x35a>
    2cb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002cc0 <_Z4testPFj8string_tE9Filenames8TestDatajj>:
    2cc0:	f3 0f 1e fa          	endbr64
    2cc4:	41 57                	push   r15
    2cc6:	48 8d 35 e5 14 00 00 	lea    rsi,[rip+0x14e5]        # 41b2 <_IO_stdin_used+0x1b2>
    2ccd:	41 56                	push   r14
    2ccf:	45 89 ce             	mov    r14d,r9d
    2cd2:	41 55                	push   r13
    2cd4:	49 89 cd             	mov    r13,rcx
    2cd7:	41 54                	push   r12
    2cd9:	4d 89 c4             	mov    r12,r8
    2cdc:	55                   	push   rbp
    2cdd:	48 89 fd             	mov    rbp,rdi
    2ce0:	48 89 d7             	mov    rdi,rdx
    2ce3:	53                   	push   rbx
    2ce4:	48 83 ec 08          	sub    rsp,0x8
    2ce8:	44 8b 7c 24 40       	mov    r15d,DWORD PTR [rsp+0x40]
    2ced:	e8 fe e3 ff ff       	call   10f0 <fopen@plt>
    2cf2:	45 89 f0             	mov    r8d,r14d
    2cf5:	4c 89 ea             	mov    rdx,r13
    2cf8:	4c 89 e1             	mov    rcx,r12
    2cfb:	45 89 f9             	mov    r9d,r15d
    2cfe:	48 89 ee             	mov    rsi,rbp
    2d01:	48 89 c7             	mov    rdi,rax
    2d04:	48 89 c3             	mov    rbx,rax
    2d07:	e8 f4 fa ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    2d0c:	48 83 c4 08          	add    rsp,0x8
    2d10:	48 89 df             	mov    rdi,rbx
    2d13:	5b                   	pop    rbx
    2d14:	5d                   	pop    rbp
    2d15:	41 5c                	pop    r12
    2d17:	41 5d                	pop    r13
    2d19:	41 5e                	pop    r14
    2d1b:	41 5f                	pop    r15
    2d1d:	e9 ae e3 ff ff       	jmp    10d0 <fclose@plt>
    2d22:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2d29:	00 00 00 00 
    2d2d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002d30 <_Z7testAllPKcjS0_j>:
    2d30:	f3 0f 1e fa          	endbr64
    2d34:	41 57                	push   r15
    2d36:	41 56                	push   r14
    2d38:	41 55                	push   r13
    2d3a:	41 54                	push   r12
    2d3c:	55                   	push   rbp
    2d3d:	53                   	push   rbx
    2d3e:	48 83 ec 38          	sub    rsp,0x38
    2d42:	89 4c 24 0c          	mov    DWORD PTR [rsp+0xc],ecx
    2d46:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2d4d:	00 00 
    2d4f:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    2d54:	31 c0                	xor    eax,eax
    2d56:	48 85 ff             	test   rdi,rdi
    2d59:	0f 84 80 07 00 00    	je     34df <_Z7testAllPKcjS0_j+0x7af>
    2d5f:	48 89 d3             	mov    rbx,rdx
    2d62:	48 85 d2             	test   rdx,rdx
    2d65:	0f 84 55 07 00 00    	je     34c0 <_Z7testAllPKcjS0_j+0x790>
    2d6b:	48 8d 3d 9a 12 00 00 	lea    rdi,[rip+0x129a]        # 400c <_IO_stdin_used+0xc>
    2d72:	41 89 f6             	mov    r14d,esi
    2d75:	48 8d 74 24 20       	lea    rsi,[rsp+0x20]
    2d7a:	48 c7 44 24 20 00 00 	mov    QWORD PTR [rsp+0x20],0x0
    2d81:	00 00 
    2d83:	e8 88 f4 ff ff       	call   2210 <_Z8readFilePKcPm>
    2d88:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
    2d8d:	48 89 c7             	mov    rdi,rax
    2d90:	49 89 c7             	mov    r15,rax
    2d93:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    2d98:	e8 83 f5 ff ff       	call   2320 <_Z10countLinesPcm>
    2d9d:	4c 89 ff             	mov    rdi,r15
    2da0:	41 89 c4             	mov    r12d,eax
    2da3:	44 89 e6             	mov    esi,r12d
    2da6:	e8 55 e5 ff ff       	call   1300 <_Z16buildStringArrayPcj>
    2dab:	48 8d 35 10 14 00 00 	lea    rsi,[rip+0x1410]        # 41c2 <_IO_stdin_used+0x1c2>
    2db2:	48 89 df             	mov    rdi,rbx
    2db5:	48 89 c5             	mov    rbp,rax
    2db8:	e8 73 e3 ff ff       	call   1130 <strcmp@plt>
    2dbd:	85 c0                	test   eax,eax
    2dbf:	0f 84 db 00 00 00    	je     2ea0 <_Z7testAllPKcjS0_j+0x170>
    2dc5:	48 8d 35 f2 13 00 00 	lea    rsi,[rip+0x13f2]        # 41be <_IO_stdin_used+0x1be>
    2dcc:	48 89 df             	mov    rdi,rbx
    2dcf:	e8 5c e3 ff ff       	call   1130 <strcmp@plt>
    2dd4:	85 c0                	test   eax,eax
    2dd6:	0f 84 6c 06 00 00    	je     3448 <_Z7testAllPKcjS0_j+0x718>
    2ddc:	48 8d 35 e5 13 00 00 	lea    rsi,[rip+0x13e5]        # 41c8 <_IO_stdin_used+0x1c8>
    2de3:	48 89 df             	mov    rdi,rbx
    2de6:	e8 45 e3 ff ff       	call   1130 <strcmp@plt>
    2deb:	85 c0                	test   eax,eax
    2ded:	0f 84 dd 05 00 00    	je     33d0 <_Z7testAllPKcjS0_j+0x6a0>
    2df3:	48 8d 35 de 13 00 00 	lea    rsi,[rip+0x13de]        # 41d8 <_IO_stdin_used+0x1d8>
    2dfa:	48 89 df             	mov    rdi,rbx
    2dfd:	e8 2e e3 ff ff       	call   1130 <strcmp@plt>
    2e02:	85 c0                	test   eax,eax
    2e04:	0f 84 4e 05 00 00    	je     3358 <_Z7testAllPKcjS0_j+0x628>
    2e0a:	48 8d 35 e8 13 00 00 	lea    rsi,[rip+0x13e8]        # 41f9 <_IO_stdin_used+0x1f9>
    2e11:	48 89 df             	mov    rdi,rbx
    2e14:	e8 17 e3 ff ff       	call   1130 <strcmp@plt>
    2e19:	85 c0                	test   eax,eax
    2e1b:	0f 84 bf 04 00 00    	je     32e0 <_Z7testAllPKcjS0_j+0x5b0>
    2e21:	48 8d 35 d9 13 00 00 	lea    rsi,[rip+0x13d9]        # 4201 <_IO_stdin_used+0x201>
    2e28:	48 89 df             	mov    rdi,rbx
    2e2b:	e8 00 e3 ff ff       	call   1130 <strcmp@plt>
    2e30:	85 c0                	test   eax,eax
    2e32:	0f 84 30 04 00 00    	je     3268 <_Z7testAllPKcjS0_j+0x538>
    2e38:	4c 8d 2d e3 13 00 00 	lea    r13,[rip+0x13e3]        # 4222 <_IO_stdin_used+0x222>
    2e3f:	48 89 df             	mov    rdi,rbx
    2e42:	4c 89 ee             	mov    rsi,r13
    2e45:	e8 e6 e2 ff ff       	call   1130 <strcmp@plt>
    2e4a:	85 c0                	test   eax,eax
    2e4c:	0f 84 9e 03 00 00    	je     31f0 <_Z7testAllPKcjS0_j+0x4c0>
    2e52:	48 8d 35 d9 13 00 00 	lea    rsi,[rip+0x13d9]        # 4232 <_IO_stdin_used+0x232>
    2e59:	48 89 df             	mov    rdi,rbx
    2e5c:	e8 cf e2 ff ff       	call   1130 <strcmp@plt>
    2e61:	85 c0                	test   eax,eax
    2e63:	0f 84 af 00 00 00    	je     2f18 <_Z7testAllPKcjS0_j+0x1e8>
    2e69:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    2e6e:	e8 8d e2 ff ff       	call   1100 <free@plt>
    2e73:	48 89 ef             	mov    rdi,rbp
    2e76:	e8 85 e2 ff ff       	call   1100 <free@plt>
    2e7b:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    2e80:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2e87:	00 00 
    2e89:	0f 85 2c 06 00 00    	jne    34bb <_Z7testAllPKcjS0_j+0x78b>
    2e8f:	48 83 c4 38          	add    rsp,0x38
    2e93:	5b                   	pop    rbx
    2e94:	5d                   	pop    rbp
    2e95:	41 5c                	pop    r12
    2e97:	41 5d                	pop    r13
    2e99:	41 5e                	pop    r14
    2e9b:	41 5f                	pop    r15
    2e9d:	c3                   	ret
    2e9e:	66 90                	xchg   ax,ax
    2ea0:	48 8d 3d 49 16 00 00 	lea    rdi,[rip+0x1649]        # 44f0 <_IO_stdin_used+0x4f0>
    2ea7:	45 89 e5             	mov    r13d,r12d
    2eaa:	e8 a1 e2 ff ff       	call   1150 <puts@plt>
    2eaf:	48 8d 3d 0c 13 00 00 	lea    rdi,[rip+0x130c]        # 41c2 <_IO_stdin_used+0x1c2>
    2eb6:	e8 95 e2 ff ff       	call   1150 <puts@plt>
    2ebb:	48 8d 3d 4e 16 00 00 	lea    rdi,[rip+0x164e]        # 4510 <_IO_stdin_used+0x510>
    2ec2:	e8 89 e2 ff ff       	call   1150 <puts@plt>
    2ec7:	48 8d 35 e4 12 00 00 	lea    rsi,[rip+0x12e4]        # 41b2 <_IO_stdin_used+0x1b2>
    2ece:	48 8d 3d 5b 16 00 00 	lea    rdi,[rip+0x165b]        # 4530 <_IO_stdin_used+0x530>
    2ed5:	e8 16 e2 ff ff       	call   10f0 <fopen@plt>
    2eda:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    2edf:	45 89 f0             	mov    r8d,r14d
    2ee2:	48 89 ea             	mov    rdx,rbp
    2ee5:	48 8d 35 c4 eb ff ff 	lea    rsi,[rip+0xffffffffffffebc4]        # 1ab0 <_Z15crc32HashString8string_t>
    2eec:	49 89 c7             	mov    r15,rax
    2eef:	4c 89 e9             	mov    rcx,r13
    2ef2:	48 89 c7             	mov    rdi,rax
    2ef5:	e8 06 f9 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    2efa:	4c 89 ff             	mov    rdi,r15
    2efd:	e8 ce e1 ff ff       	call   10d0 <fclose@plt>
    2f02:	48 8d 3d 4f 16 00 00 	lea    rdi,[rip+0x164f]        # 4558 <_IO_stdin_used+0x558>
    2f09:	e8 42 e2 ff ff       	call   1150 <puts@plt>
    2f0e:	e9 b2 fe ff ff       	jmp    2dc5 <_Z7testAllPKcjS0_j+0x95>
    2f13:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2f18:	4c 8d 3d d1 15 00 00 	lea    r15,[rip+0x15d1]        # 44f0 <_IO_stdin_used+0x4f0>
    2f1f:	4c 89 ff             	mov    rdi,r15
    2f22:	e8 29 e2 ff ff       	call   1150 <puts@plt>
    2f27:	48 8d 3d 94 12 00 00 	lea    rdi,[rip+0x1294]        # 41c2 <_IO_stdin_used+0x1c2>
    2f2e:	e8 1d e2 ff ff       	call   1150 <puts@plt>
    2f33:	48 8d 3d d6 15 00 00 	lea    rdi,[rip+0x15d6]        # 4510 <_IO_stdin_used+0x510>
    2f3a:	e8 11 e2 ff ff       	call   1150 <puts@plt>
    2f3f:	44 89 e0             	mov    eax,r12d
    2f42:	48 8d 35 69 12 00 00 	lea    rsi,[rip+0x1269]        # 41b2 <_IO_stdin_used+0x1b2>
    2f49:	48 8d 3d e0 15 00 00 	lea    rdi,[rip+0x15e0]        # 4530 <_IO_stdin_used+0x530>
    2f50:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    2f55:	e8 96 e1 ff ff       	call   10f0 <fopen@plt>
    2f5a:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    2f5f:	45 89 f0             	mov    r8d,r14d
    2f62:	48 89 ea             	mov    rdx,rbp
    2f65:	48 8d 35 44 eb ff ff 	lea    rsi,[rip+0xffffffffffffeb44]        # 1ab0 <_Z15crc32HashString8string_t>
    2f6c:	4c 89 e1             	mov    rcx,r12
    2f6f:	48 89 c3             	mov    rbx,rax
    2f72:	48 89 c7             	mov    rdi,rax
    2f75:	e8 86 f8 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    2f7a:	48 89 df             	mov    rdi,rbx
    2f7d:	48 8d 1d d4 15 00 00 	lea    rbx,[rip+0x15d4]        # 4558 <_IO_stdin_used+0x558>
    2f84:	e8 47 e1 ff ff       	call   10d0 <fclose@plt>
    2f89:	48 89 df             	mov    rdi,rbx
    2f8c:	e8 bf e1 ff ff       	call   1150 <puts@plt>
    2f91:	4c 89 ff             	mov    rdi,r15
    2f94:	e8 b7 e1 ff ff       	call   1150 <puts@plt>
    2f99:	48 8d 3d 1e 12 00 00 	lea    rdi,[rip+0x121e]        # 41be <_IO_stdin_used+0x1be>
    2fa0:	e8 ab e1 ff ff       	call   1150 <puts@plt>
    2fa5:	48 8d 3d 64 15 00 00 	lea    rdi,[rip+0x1564]        # 4510 <_IO_stdin_used+0x510>
    2fac:	e8 9f e1 ff ff       	call   1150 <puts@plt>
    2fb1:	4c 8b 64 24 18       	mov    r12,QWORD PTR [rsp+0x18]
    2fb6:	48 8d 35 f5 11 00 00 	lea    rsi,[rip+0x11f5]        # 41b2 <_IO_stdin_used+0x1b2>
    2fbd:	48 8d 3d b4 15 00 00 	lea    rdi,[rip+0x15b4]        # 4578 <_IO_stdin_used+0x578>
    2fc4:	e8 27 e1 ff ff       	call   10f0 <fopen@plt>
    2fc9:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    2fce:	45 89 f0             	mov    r8d,r14d
    2fd1:	48 89 ea             	mov    rdx,rbp
    2fd4:	48 8d 35 e5 ea ff ff 	lea    rsi,[rip+0xffffffffffffeae5]        # 1ac0 <_Z19_mm_crc32HashString8string_t>
    2fdb:	4c 89 e1             	mov    rcx,r12
    2fde:	48 89 c7             	mov    rdi,rax
    2fe1:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    2fe6:	e8 15 f8 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    2feb:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    2ff0:	e8 db e0 ff ff       	call   10d0 <fclose@plt>
    2ff5:	48 89 df             	mov    rdi,rbx
    2ff8:	e8 53 e1 ff ff       	call   1150 <puts@plt>
    2ffd:	4c 89 ff             	mov    rdi,r15
    3000:	e8 4b e1 ff ff       	call   1150 <puts@plt>
    3005:	4c 89 ef             	mov    rdi,r13
    3008:	e8 43 e1 ff ff       	call   1150 <puts@plt>
    300d:	48 8d 3d fc 14 00 00 	lea    rdi,[rip+0x14fc]        # 4510 <_IO_stdin_used+0x510>
    3014:	e8 37 e1 ff ff       	call   1150 <puts@plt>
    3019:	48 8d 35 92 11 00 00 	lea    rsi,[rip+0x1192]        # 41b2 <_IO_stdin_used+0x1b2>
    3020:	48 8d 3d d1 15 00 00 	lea    rdi,[rip+0x15d1]        # 45f8 <_IO_stdin_used+0x5f8>
    3027:	e8 c4 e0 ff ff       	call   10f0 <fopen@plt>
    302c:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    3031:	45 89 f0             	mov    r8d,r14d
    3034:	48 89 ea             	mov    rdx,rbp
    3037:	48 8d 35 92 ea ff ff 	lea    rsi,[rip+0xffffffffffffea92]        # 1ad0 <_Z25_mm_crc32UnrollHashString8string_t>
    303e:	4c 89 e1             	mov    rcx,r12
    3041:	49 89 c5             	mov    r13,rax
    3044:	48 89 c7             	mov    rdi,rax
    3047:	e8 b4 f7 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    304c:	4c 89 ef             	mov    rdi,r13
    304f:	e8 7c e0 ff ff       	call   10d0 <fclose@plt>
    3054:	48 89 df             	mov    rdi,rbx
    3057:	e8 f4 e0 ff ff       	call   1150 <puts@plt>
    305c:	4c 89 ff             	mov    rdi,r15
    305f:	e8 ec e0 ff ff       	call   1150 <puts@plt>
    3064:	48 8d 3d 65 11 00 00 	lea    rdi,[rip+0x1165]        # 41d0 <_IO_stdin_used+0x1d0>
    306b:	e8 e0 e0 ff ff       	call   1150 <puts@plt>
    3070:	48 8d 3d 99 14 00 00 	lea    rdi,[rip+0x1499]        # 4510 <_IO_stdin_used+0x510>
    3077:	e8 d4 e0 ff ff       	call   1150 <puts@plt>
    307c:	48 8d 35 2f 11 00 00 	lea    rsi,[rip+0x112f]        # 41b2 <_IO_stdin_used+0x1b2>
    3083:	48 8d 3d 1e 15 00 00 	lea    rdi,[rip+0x151e]        # 45a8 <_IO_stdin_used+0x5a8>
    308a:	e8 61 e0 ff ff       	call   10f0 <fopen@plt>
    308f:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    3094:	45 89 f0             	mov    r8d,r14d
    3097:	48 89 ea             	mov    rdx,rbp
    309a:	48 8d 35 8f ea ff ff 	lea    rsi,[rip+0xffffffffffffea8f]        # 1b30 <_Z17murmur2HashString8string_t>
    30a1:	4c 89 e1             	mov    rcx,r12
    30a4:	49 89 c5             	mov    r13,rax
    30a7:	48 89 c7             	mov    rdi,rax
    30aa:	e8 51 f7 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    30af:	4c 89 ef             	mov    rdi,r13
    30b2:	e8 19 e0 ff ff       	call   10d0 <fclose@plt>
    30b7:	48 89 df             	mov    rdi,rbx
    30ba:	e8 91 e0 ff ff       	call   1150 <puts@plt>
    30bf:	4c 89 ff             	mov    rdi,r15
    30c2:	e8 89 e0 ff ff       	call   1150 <puts@plt>
    30c7:	48 8d 3d 0a 11 00 00 	lea    rdi,[rip+0x110a]        # 41d8 <_IO_stdin_used+0x1d8>
    30ce:	e8 7d e0 ff ff       	call   1150 <puts@plt>
    30d3:	48 8d 3d 36 14 00 00 	lea    rdi,[rip+0x1436]        # 4510 <_IO_stdin_used+0x510>
    30da:	e8 71 e0 ff ff       	call   1150 <puts@plt>
    30df:	48 8d 35 cc 10 00 00 	lea    rsi,[rip+0x10cc]        # 41b2 <_IO_stdin_used+0x1b2>
    30e6:	48 8d 3d ef 10 00 00 	lea    rdi,[rip+0x10ef]        # 41dc <_IO_stdin_used+0x1dc>
    30ed:	e8 fe df ff ff       	call   10f0 <fopen@plt>
    30f2:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    30f7:	45 89 f0             	mov    r8d,r14d
    30fa:	48 89 ea             	mov    rdx,rbp
    30fd:	48 8d 35 3c ea ff ff 	lea    rsi,[rip+0xffffffffffffea3c]        # 1b40 <_Z13sumHashString8string_t>
    3104:	4c 89 e1             	mov    rcx,r12
    3107:	49 89 c5             	mov    r13,rax
    310a:	48 89 c7             	mov    rdi,rax
    310d:	e8 ee f6 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    3112:	4c 89 ef             	mov    rdi,r13
    3115:	e8 b6 df ff ff       	call   10d0 <fclose@plt>
    311a:	48 89 df             	mov    rdi,rbx
    311d:	e8 2e e0 ff ff       	call   1150 <puts@plt>
    3122:	4c 89 ff             	mov    rdi,r15
    3125:	e8 26 e0 ff ff       	call   1150 <puts@plt>
    312a:	48 8d 3d c8 10 00 00 	lea    rdi,[rip+0x10c8]        # 41f9 <_IO_stdin_used+0x1f9>
    3131:	e8 1a e0 ff ff       	call   1150 <puts@plt>
    3136:	48 8d 3d d3 13 00 00 	lea    rdi,[rip+0x13d3]        # 4510 <_IO_stdin_used+0x510>
    313d:	e8 0e e0 ff ff       	call   1150 <puts@plt>
    3142:	48 8d 35 69 10 00 00 	lea    rsi,[rip+0x1069]        # 41b2 <_IO_stdin_used+0x1b2>
    3149:	48 8d 3d 80 14 00 00 	lea    rdi,[rip+0x1480]        # 45d0 <_IO_stdin_used+0x5d0>
    3150:	e8 9b df ff ff       	call   10f0 <fopen@plt>
    3155:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    315a:	45 89 f0             	mov    r8d,r14d
    315d:	48 89 ea             	mov    rdx,rbp
    3160:	48 8d 35 e9 e9 ff ff 	lea    rsi,[rip+0xffffffffffffe9e9]        # 1b50 <_Z17adler32HashString8string_t>
    3167:	4c 89 e1             	mov    rcx,r12
    316a:	49 89 c5             	mov    r13,rax
    316d:	48 89 c7             	mov    rdi,rax
    3170:	e8 8b f6 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    3175:	4c 89 ef             	mov    rdi,r13
    3178:	e8 53 df ff ff       	call   10d0 <fclose@plt>
    317d:	48 89 df             	mov    rdi,rbx
    3180:	e8 cb df ff ff       	call   1150 <puts@plt>
    3185:	4c 89 ff             	mov    rdi,r15
    3188:	e8 c3 df ff ff       	call   1150 <puts@plt>
    318d:	48 8d 3d 6d 10 00 00 	lea    rdi,[rip+0x106d]        # 4201 <_IO_stdin_used+0x201>
    3194:	e8 b7 df ff ff       	call   1150 <puts@plt>
    3199:	48 8d 3d 70 13 00 00 	lea    rdi,[rip+0x1370]        # 4510 <_IO_stdin_used+0x510>
    31a0:	e8 ab df ff ff       	call   1150 <puts@plt>
    31a5:	48 8d 35 06 10 00 00 	lea    rsi,[rip+0x1006]        # 41b2 <_IO_stdin_used+0x1b2>
    31ac:	48 8d 3d 52 10 00 00 	lea    rdi,[rip+0x1052]        # 4205 <_IO_stdin_used+0x205>
    31b3:	e8 38 df ff ff       	call   10f0 <fopen@plt>
    31b8:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    31bd:	45 89 f0             	mov    r8d,r14d
    31c0:	48 89 ea             	mov    rdx,rbp
    31c3:	48 8d 35 96 eb ff ff 	lea    rsi,[rip+0xffffffffffffeb96]        # 1d60 <_Z13elfHashString8string_t>
    31ca:	49 89 c5             	mov    r13,rax
    31cd:	4c 89 e1             	mov    rcx,r12
    31d0:	48 89 c7             	mov    rdi,rax
    31d3:	e8 28 f6 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    31d8:	4c 89 ef             	mov    rdi,r13
    31db:	e8 f0 de ff ff       	call   10d0 <fclose@plt>
    31e0:	48 89 df             	mov    rdi,rbx
    31e3:	e8 68 df ff ff       	call   1150 <puts@plt>
    31e8:	e9 7c fc ff ff       	jmp    2e69 <_Z7testAllPKcjS0_j+0x139>
    31ed:	0f 1f 00             	nop    DWORD PTR [rax]
    31f0:	48 8d 3d f9 12 00 00 	lea    rdi,[rip+0x12f9]        # 44f0 <_IO_stdin_used+0x4f0>
    31f7:	45 89 e7             	mov    r15d,r12d
    31fa:	e8 51 df ff ff       	call   1150 <puts@plt>
    31ff:	4c 89 ef             	mov    rdi,r13
    3202:	e8 49 df ff ff       	call   1150 <puts@plt>
    3207:	48 8d 3d 02 13 00 00 	lea    rdi,[rip+0x1302]        # 4510 <_IO_stdin_used+0x510>
    320e:	e8 3d df ff ff       	call   1150 <puts@plt>
    3213:	48 8d 35 98 0f 00 00 	lea    rsi,[rip+0xf98]        # 41b2 <_IO_stdin_used+0x1b2>
    321a:	48 8d 3d d7 13 00 00 	lea    rdi,[rip+0x13d7]        # 45f8 <_IO_stdin_used+0x5f8>
    3221:	e8 ca de ff ff       	call   10f0 <fopen@plt>
    3226:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    322b:	45 89 f0             	mov    r8d,r14d
    322e:	48 89 ea             	mov    rdx,rbp
    3231:	48 8d 35 98 e8 ff ff 	lea    rsi,[rip+0xffffffffffffe898]        # 1ad0 <_Z25_mm_crc32UnrollHashString8string_t>
    3238:	48 89 c7             	mov    rdi,rax
    323b:	4c 89 f9             	mov    rcx,r15
    323e:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    3243:	e8 b8 f5 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    3248:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    324d:	e8 7e de ff ff       	call   10d0 <fclose@plt>
    3252:	48 8d 3d ff 12 00 00 	lea    rdi,[rip+0x12ff]        # 4558 <_IO_stdin_used+0x558>
    3259:	e8 f2 de ff ff       	call   1150 <puts@plt>
    325e:	e9 ef fb ff ff       	jmp    2e52 <_Z7testAllPKcjS0_j+0x122>
    3263:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3268:	48 8d 3d 81 12 00 00 	lea    rdi,[rip+0x1281]        # 44f0 <_IO_stdin_used+0x4f0>
    326f:	45 89 e5             	mov    r13d,r12d
    3272:	e8 d9 de ff ff       	call   1150 <puts@plt>
    3277:	48 8d 3d 83 0f 00 00 	lea    rdi,[rip+0xf83]        # 4201 <_IO_stdin_used+0x201>
    327e:	e8 cd de ff ff       	call   1150 <puts@plt>
    3283:	48 8d 3d 86 12 00 00 	lea    rdi,[rip+0x1286]        # 4510 <_IO_stdin_used+0x510>
    328a:	e8 c1 de ff ff       	call   1150 <puts@plt>
    328f:	48 8d 35 1c 0f 00 00 	lea    rsi,[rip+0xf1c]        # 41b2 <_IO_stdin_used+0x1b2>
    3296:	48 8d 3d 68 0f 00 00 	lea    rdi,[rip+0xf68]        # 4205 <_IO_stdin_used+0x205>
    329d:	e8 4e de ff ff       	call   10f0 <fopen@plt>
    32a2:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    32a7:	45 89 f0             	mov    r8d,r14d
    32aa:	48 89 ea             	mov    rdx,rbp
    32ad:	48 8d 35 ac ea ff ff 	lea    rsi,[rip+0xffffffffffffeaac]        # 1d60 <_Z13elfHashString8string_t>
    32b4:	49 89 c7             	mov    r15,rax
    32b7:	4c 89 e9             	mov    rcx,r13
    32ba:	48 89 c7             	mov    rdi,rax
    32bd:	e8 3e f5 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    32c2:	4c 89 ff             	mov    rdi,r15
    32c5:	e8 06 de ff ff       	call   10d0 <fclose@plt>
    32ca:	48 8d 3d 87 12 00 00 	lea    rdi,[rip+0x1287]        # 4558 <_IO_stdin_used+0x558>
    32d1:	e8 7a de ff ff       	call   1150 <puts@plt>
    32d6:	e9 5d fb ff ff       	jmp    2e38 <_Z7testAllPKcjS0_j+0x108>
    32db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    32e0:	48 8d 3d 09 12 00 00 	lea    rdi,[rip+0x1209]        # 44f0 <_IO_stdin_used+0x4f0>
    32e7:	45 89 e5             	mov    r13d,r12d
    32ea:	e8 61 de ff ff       	call   1150 <puts@plt>
    32ef:	48 8d 3d 03 0f 00 00 	lea    rdi,[rip+0xf03]        # 41f9 <_IO_stdin_used+0x1f9>
    32f6:	e8 55 de ff ff       	call   1150 <puts@plt>
    32fb:	48 8d 3d 0e 12 00 00 	lea    rdi,[rip+0x120e]        # 4510 <_IO_stdin_used+0x510>
    3302:	e8 49 de ff ff       	call   1150 <puts@plt>
    3307:	48 8d 35 a4 0e 00 00 	lea    rsi,[rip+0xea4]        # 41b2 <_IO_stdin_used+0x1b2>
    330e:	48 8d 3d bb 12 00 00 	lea    rdi,[rip+0x12bb]        # 45d0 <_IO_stdin_used+0x5d0>
    3315:	e8 d6 dd ff ff       	call   10f0 <fopen@plt>
    331a:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    331f:	45 89 f0             	mov    r8d,r14d
    3322:	48 89 ea             	mov    rdx,rbp
    3325:	48 8d 35 24 e8 ff ff 	lea    rsi,[rip+0xffffffffffffe824]        # 1b50 <_Z17adler32HashString8string_t>
    332c:	49 89 c7             	mov    r15,rax
    332f:	4c 89 e9             	mov    rcx,r13
    3332:	48 89 c7             	mov    rdi,rax
    3335:	e8 c6 f4 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    333a:	4c 89 ff             	mov    rdi,r15
    333d:	e8 8e dd ff ff       	call   10d0 <fclose@plt>
    3342:	48 8d 3d 0f 12 00 00 	lea    rdi,[rip+0x120f]        # 4558 <_IO_stdin_used+0x558>
    3349:	e8 02 de ff ff       	call   1150 <puts@plt>
    334e:	e9 ce fa ff ff       	jmp    2e21 <_Z7testAllPKcjS0_j+0xf1>
    3353:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3358:	48 8d 3d 91 11 00 00 	lea    rdi,[rip+0x1191]        # 44f0 <_IO_stdin_used+0x4f0>
    335f:	45 89 e5             	mov    r13d,r12d
    3362:	e8 e9 dd ff ff       	call   1150 <puts@plt>
    3367:	48 8d 3d 6a 0e 00 00 	lea    rdi,[rip+0xe6a]        # 41d8 <_IO_stdin_used+0x1d8>
    336e:	e8 dd dd ff ff       	call   1150 <puts@plt>
    3373:	48 8d 3d 96 11 00 00 	lea    rdi,[rip+0x1196]        # 4510 <_IO_stdin_used+0x510>
    337a:	e8 d1 dd ff ff       	call   1150 <puts@plt>
    337f:	48 8d 35 2c 0e 00 00 	lea    rsi,[rip+0xe2c]        # 41b2 <_IO_stdin_used+0x1b2>
    3386:	48 8d 3d 4f 0e 00 00 	lea    rdi,[rip+0xe4f]        # 41dc <_IO_stdin_used+0x1dc>
    338d:	e8 5e dd ff ff       	call   10f0 <fopen@plt>
    3392:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    3397:	45 89 f0             	mov    r8d,r14d
    339a:	48 89 ea             	mov    rdx,rbp
    339d:	48 8d 35 9c e7 ff ff 	lea    rsi,[rip+0xffffffffffffe79c]        # 1b40 <_Z13sumHashString8string_t>
    33a4:	49 89 c7             	mov    r15,rax
    33a7:	4c 89 e9             	mov    rcx,r13
    33aa:	48 89 c7             	mov    rdi,rax
    33ad:	e8 4e f4 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    33b2:	4c 89 ff             	mov    rdi,r15
    33b5:	e8 16 dd ff ff       	call   10d0 <fclose@plt>
    33ba:	48 8d 3d 97 11 00 00 	lea    rdi,[rip+0x1197]        # 4558 <_IO_stdin_used+0x558>
    33c1:	e8 8a dd ff ff       	call   1150 <puts@plt>
    33c6:	e9 3f fa ff ff       	jmp    2e0a <_Z7testAllPKcjS0_j+0xda>
    33cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    33d0:	48 8d 3d 19 11 00 00 	lea    rdi,[rip+0x1119]        # 44f0 <_IO_stdin_used+0x4f0>
    33d7:	45 89 e5             	mov    r13d,r12d
    33da:	e8 71 dd ff ff       	call   1150 <puts@plt>
    33df:	48 8d 3d ea 0d 00 00 	lea    rdi,[rip+0xdea]        # 41d0 <_IO_stdin_used+0x1d0>
    33e6:	e8 65 dd ff ff       	call   1150 <puts@plt>
    33eb:	48 8d 3d 1e 11 00 00 	lea    rdi,[rip+0x111e]        # 4510 <_IO_stdin_used+0x510>
    33f2:	e8 59 dd ff ff       	call   1150 <puts@plt>
    33f7:	48 8d 35 b4 0d 00 00 	lea    rsi,[rip+0xdb4]        # 41b2 <_IO_stdin_used+0x1b2>
    33fe:	48 8d 3d a3 11 00 00 	lea    rdi,[rip+0x11a3]        # 45a8 <_IO_stdin_used+0x5a8>
    3405:	e8 e6 dc ff ff       	call   10f0 <fopen@plt>
    340a:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    340f:	45 89 f0             	mov    r8d,r14d
    3412:	48 89 ea             	mov    rdx,rbp
    3415:	48 8d 35 14 e7 ff ff 	lea    rsi,[rip+0xffffffffffffe714]        # 1b30 <_Z17murmur2HashString8string_t>
    341c:	49 89 c7             	mov    r15,rax
    341f:	4c 89 e9             	mov    rcx,r13
    3422:	48 89 c7             	mov    rdi,rax
    3425:	e8 d6 f3 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    342a:	4c 89 ff             	mov    rdi,r15
    342d:	e8 9e dc ff ff       	call   10d0 <fclose@plt>
    3432:	48 8d 3d 1f 11 00 00 	lea    rdi,[rip+0x111f]        # 4558 <_IO_stdin_used+0x558>
    3439:	e8 12 dd ff ff       	call   1150 <puts@plt>
    343e:	e9 b0 f9 ff ff       	jmp    2df3 <_Z7testAllPKcjS0_j+0xc3>
    3443:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3448:	48 8d 3d a1 10 00 00 	lea    rdi,[rip+0x10a1]        # 44f0 <_IO_stdin_used+0x4f0>
    344f:	45 89 e5             	mov    r13d,r12d
    3452:	e8 f9 dc ff ff       	call   1150 <puts@plt>
    3457:	48 8d 3d 60 0d 00 00 	lea    rdi,[rip+0xd60]        # 41be <_IO_stdin_used+0x1be>
    345e:	e8 ed dc ff ff       	call   1150 <puts@plt>
    3463:	48 8d 3d a6 10 00 00 	lea    rdi,[rip+0x10a6]        # 4510 <_IO_stdin_used+0x510>
    346a:	e8 e1 dc ff ff       	call   1150 <puts@plt>
    346f:	48 8d 35 3c 0d 00 00 	lea    rsi,[rip+0xd3c]        # 41b2 <_IO_stdin_used+0x1b2>
    3476:	48 8d 3d fb 10 00 00 	lea    rdi,[rip+0x10fb]        # 4578 <_IO_stdin_used+0x578>
    347d:	e8 6e dc ff ff       	call   10f0 <fopen@plt>
    3482:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    3487:	45 89 f0             	mov    r8d,r14d
    348a:	48 89 ea             	mov    rdx,rbp
    348d:	48 8d 35 2c e6 ff ff 	lea    rsi,[rip+0xffffffffffffe62c]        # 1ac0 <_Z19_mm_crc32HashString8string_t>
    3494:	49 89 c7             	mov    r15,rax
    3497:	4c 89 e9             	mov    rcx,r13
    349a:	48 89 c7             	mov    rdi,rax
    349d:	e8 5e f3 ff ff       	call   2800 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj>
    34a2:	4c 89 ff             	mov    rdi,r15
    34a5:	e8 26 dc ff ff       	call   10d0 <fclose@plt>
    34aa:	48 8d 3d a7 10 00 00 	lea    rdi,[rip+0x10a7]        # 4558 <_IO_stdin_used+0x558>
    34b1:	e8 9a dc ff ff       	call   1150 <puts@plt>
    34b6:	e9 21 f9 ff ff       	jmp    2ddc <_Z7testAllPKcjS0_j+0xac>
    34bb:	e8 20 dc ff ff       	call   10e0 <__stack_chk_fail@plt>
    34c0:	48 8d 0d e9 0f 00 00 	lea    rcx,[rip+0xfe9]        # 44b0 <_IO_stdin_used+0x4b0>
    34c7:	ba 13 00 00 00       	mov    edx,0x13
    34cc:	48 8d 35 ea 0b 00 00 	lea    rsi,[rip+0xbea]        # 40bd <_IO_stdin_used+0xbd>
    34d3:	48 8d 3d da 0c 00 00 	lea    rdi,[rip+0xcda]        # 41b4 <_IO_stdin_used+0x1b4>
    34da:	e8 91 db ff ff       	call   1070 <__assert_fail@plt>
    34df:	48 8d 0d ca 0f 00 00 	lea    rcx,[rip+0xfca]        # 44b0 <_IO_stdin_used+0x4b0>
    34e6:	ba 12 00 00 00       	mov    edx,0x12
    34eb:	48 8d 35 cb 0b 00 00 	lea    rsi,[rip+0xbcb]        # 40bd <_IO_stdin_used+0xbd>
    34f2:	48 8d 3d bb 0b 00 00 	lea    rdi,[rip+0xbbb]        # 40b4 <_IO_stdin_used+0xb4>
    34f9:	e8 72 db ff ff       	call   1070 <__assert_fail@plt>
    34fe:	66 90                	xchg   ax,ax

0000000000003500 <_Z21standartDeviationTimePdjd>:
    3500:	f3 0f 1e fa          	endbr64
    3504:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    3509:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    350d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    3511:	55                   	push   rbp
    3512:	48 89 e5             	mov    rbp,rsp
    3515:	41 52                	push   r10
    3517:	48 83 ec 08          	sub    rsp,0x8
    351b:	48 85 ff             	test   rdi,rdi
    351e:	0f 84 18 01 00 00    	je     363c <_Z21standartDeviationTimePdjd+0x13c>
    3524:	89 f1                	mov    ecx,esi
    3526:	85 c9                	test   ecx,ecx
    3528:	0f 84 f2 00 00 00    	je     3620 <_Z21standartDeviationTimePdjd+0x120>
    352e:	8d 41 ff             	lea    eax,[rcx-0x1]
    3531:	48 89 fa             	mov    rdx,rdi
    3534:	c5 fb 10 d8          	vmovsd xmm3,xmm0,xmm0
    3538:	83 f8 02             	cmp    eax,0x2
    353b:	0f 86 e9 00 00 00    	jbe    362a <_Z21standartDeviationTimePdjd+0x12a>
    3541:	89 ce                	mov    esi,ecx
    3543:	c4 e2 7d 19 e8       	vbroadcastsd ymm5,xmm0
    3548:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    354c:	48 89 f8             	mov    rax,rdi
    354f:	c1 ee 02             	shr    esi,0x2
    3552:	48 c1 e6 05          	shl    rsi,0x5
    3556:	48 01 fe             	add    rsi,rdi
    3559:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3560:	c5 fd 10 30          	vmovupd ymm6,YMMWORD PTR [rax]
    3564:	48 83 c0 20          	add    rax,0x20
    3568:	c5 cd 5c cd          	vsubpd ymm1,ymm6,ymm5
    356c:	c5 f5 59 c9          	vmulpd ymm1,ymm1,ymm1
    3570:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3574:	c5 f1 15 d1          	vunpckhpd xmm2,xmm1,xmm1
    3578:	c4 e3 7d 19 c9 01    	vextractf128 xmm1,ymm1,0x1
    357e:	c5 fb 58 c2          	vaddsd xmm0,xmm0,xmm2
    3582:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3586:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    358a:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    358e:	48 39 f0             	cmp    rax,rsi
    3591:	75 cd                	jne    3560 <_Z21standartDeviationTimePdjd+0x60>
    3593:	89 c8                	mov    eax,ecx
    3595:	83 e0 fc             	and    eax,0xfffffffc
    3598:	f6 c1 03             	test   cl,0x3
    359b:	74 7b                	je     3618 <_Z21standartDeviationTimePdjd+0x118>
    359d:	c5 f8 77             	vzeroupper
    35a0:	89 ce                	mov    esi,ecx
    35a2:	29 c6                	sub    esi,eax
    35a4:	83 fe 01             	cmp    esi,0x1
    35a7:	74 2a                	je     35d3 <_Z21standartDeviationTimePdjd+0xd3>
    35a9:	89 c7                	mov    edi,eax
    35ab:	c5 fb 12 d3          	vmovddup xmm2,xmm3
    35af:	c5 f9 10 0c fa       	vmovupd xmm1,XMMWORD PTR [rdx+rdi*8]
    35b4:	c5 f1 5c ca          	vsubpd xmm1,xmm1,xmm2
    35b8:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    35bc:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    35c0:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    35c4:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    35c8:	40 f6 c6 01          	test   sil,0x1
    35cc:	74 16                	je     35e4 <_Z21standartDeviationTimePdjd+0xe4>
    35ce:	83 e6 fe             	and    esi,0xfffffffe
    35d1:	01 f0                	add    eax,esi
    35d3:	c5 fb 10 0c c2       	vmovsd xmm1,QWORD PTR [rdx+rax*8]
    35d8:	c5 f3 5c cb          	vsubsd xmm1,xmm1,xmm3
    35dc:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    35e0:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    35e4:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    35e8:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    35ec:	c4 e1 f2 2a c9       	vcvtsi2ss xmm1,xmm1,rcx
    35f1:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    35f5:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    35f9:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    35fd:	77 36                	ja     3635 <_Z21standartDeviationTimePdjd+0x135>
    35ff:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    3603:	4c 8b 55 f8          	mov    r10,QWORD PTR [rbp-0x8]
    3607:	c5 fa 5a c0          	vcvtss2sd xmm0,xmm0,xmm0
    360b:	c9                   	leave
    360c:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    3610:	c3                   	ret
    3611:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3618:	c5 f8 77             	vzeroupper
    361b:	eb c7                	jmp    35e4 <_Z21standartDeviationTimePdjd+0xe4>
    361d:	0f 1f 00             	nop    DWORD PTR [rax]
    3620:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3624:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    3628:	eb d5                	jmp    35ff <_Z21standartDeviationTimePdjd+0xff>
    362a:	31 c0                	xor    eax,eax
    362c:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    3630:	e9 6b ff ff ff       	jmp    35a0 <_Z21standartDeviationTimePdjd+0xa0>
    3635:	e8 46 db ff ff       	call   1180 <sqrtf@plt>
    363a:	eb c7                	jmp    3603 <_Z21standartDeviationTimePdjd+0x103>
    363c:	48 8d 0d 35 0e 00 00 	lea    rcx,[rip+0xe35]        # 4478 <_IO_stdin_used+0x478>
    3643:	ba ad 00 00 00       	mov    edx,0xad
    3648:	48 8d 35 6e 0a 00 00 	lea    rsi,[rip+0xa6e]        # 40bd <_IO_stdin_used+0xbd>
    364f:	48 8d 3d f1 0a 00 00 	lea    rdi,[rip+0xaf1]        # 4147 <_IO_stdin_used+0x147>
    3656:	e8 15 da ff ff       	call   1070 <__assert_fail@plt>
    365b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003660 <_Z27standartDeviationCollisionsP7HashMapf>:
    3660:	f3 0f 1e fa          	endbr64
    3664:	41 55                	push   r13
    3666:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    366b:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    366f:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    3673:	55                   	push   rbp
    3674:	48 89 e5             	mov    rbp,rsp
    3677:	41 55                	push   r13
    3679:	48 83 ec 28          	sub    rsp,0x28
    367d:	48 85 ff             	test   rdi,rdi
    3680:	0f 84 d7 02 00 00    	je     395d <_Z27standartDeviationCollisionsP7HashMapf+0x2fd>
    3686:	8b 77 08             	mov    esi,DWORD PTR [rdi+0x8]
    3689:	85 f6                	test   esi,esi
    368b:	0f 84 87 02 00 00    	je     3918 <_Z27standartDeviationCollisionsP7HashMapf+0x2b8>
    3691:	8d 46 ff             	lea    eax,[rsi-0x1]
    3694:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    3697:	c5 f8 28 e0          	vmovaps xmm4,xmm0
    369b:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    369f:	83 f8 06             	cmp    eax,0x6
    36a2:	0f 86 95 02 00 00    	jbe    393d <_Z27standartDeviationCollisionsP7HashMapf+0x2dd>
    36a8:	48 8d 47 10          	lea    rax,[rdi+0x10]
    36ac:	c4 e2 7d 18 f0       	vbroadcastss ymm6,xmm0
    36b1:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    36b6:	89 f2                	mov    edx,esi
    36b8:	c4 e2 7d 18 2d 47 09 	vbroadcastss ymm5,DWORD PTR [rip+0x947]        # 4008 <_IO_stdin_used+0x8>
    36bf:	00 00 
    36c1:	c1 ea 03             	shr    edx,0x3
    36c4:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    36cb:	ff ff ff 
    36ce:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    36d2:	ba ff ff 00 00       	mov    edx,0xffff
    36d7:	49 c1 e0 06          	shl    r8,0x6
    36db:	c5 f9 6e d2          	vmovd  xmm2,edx
    36df:	49 01 c0             	add    r8,rax
    36e2:	c4 e2 7d 58 d2       	vpbroadcastd ymm2,xmm2
    36e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    36ee:	00 00 
    36f0:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    36f3:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    36f6:	c5 c1 ef ff          	vpxor  xmm7,xmm7,xmm7
    36fa:	48 05 c0 00 00 00    	add    rax,0xc0
    3700:	c5 fd 7f 7d d0       	vmovdqa YMMWORD PTR [rbp-0x30],ymm7
    3705:	48 c1 e2 20          	shl    rdx,0x20
    3709:	49 09 d1             	or     r9,rdx
    370c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    3710:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    3714:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    371b:	48 21 ca             	and    rdx,rcx
    371e:	4c 09 ca             	or     rdx,r9
    3721:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    3725:	89 d2                	mov    edx,edx
    3727:	49 c1 e1 20          	shl    r9,0x20
    372b:	4c 09 ca             	or     rdx,r9
    372e:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    3732:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    3736:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    373a:	48 21 ca             	and    rdx,rcx
    373d:	4c 09 ca             	or     rdx,r9
    3740:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    3744:	89 d2                	mov    edx,edx
    3746:	49 c1 e1 20          	shl    r9,0x20
    374a:	4c 09 ca             	or     rdx,r9
    374d:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    3751:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    3755:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    3759:	48 21 ca             	and    rdx,rcx
    375c:	4c 09 ca             	or     rdx,r9
    375f:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    3763:	89 d2                	mov    edx,edx
    3765:	49 c1 e1 20          	shl    r9,0x20
    3769:	4c 09 ca             	or     rdx,r9
    376c:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    3770:	c5 fd 6f 7d d0       	vmovdqa ymm7,YMMWORD PTR [rbp-0x30]
    3775:	c5 ed db 45 d0       	vpand  ymm0,ymm2,YMMWORD PTR [rbp-0x30]
    377a:	c5 f5 72 d7 10       	vpsrld ymm1,ymm7,0x10
    377f:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    3783:	c5 f4 59 cd          	vmulps ymm1,ymm1,ymm5
    3787:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    378b:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    378f:	c5 fc 5c c6          	vsubps ymm0,ymm0,ymm6
    3793:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    3797:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    379b:	c5 78 c6 c0 55       	vshufps xmm8,xmm0,xmm0,0x55
    37a0:	c5 f8 c6 f8 ff       	vshufps xmm7,xmm0,xmm0,0xff
    37a5:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    37aa:	c5 78 15 c0          	vunpckhps xmm8,xmm0,xmm0
    37ae:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    37b4:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    37b9:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    37bd:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    37c2:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    37c6:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    37ca:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    37ce:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    37d3:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    37d7:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    37db:	49 39 c0             	cmp    r8,rax
    37de:	0f 85 0c ff ff ff    	jne    36f0 <_Z27standartDeviationCollisionsP7HashMapf+0x90>
    37e4:	89 f0                	mov    eax,esi
    37e6:	83 e0 f8             	and    eax,0xfffffff8
    37e9:	40 f6 c6 07          	test   sil,0x7
    37ed:	0f 84 45 01 00 00    	je     3938 <_Z27standartDeviationCollisionsP7HashMapf+0x2d8>
    37f3:	c5 f8 77             	vzeroupper
    37f6:	89 f1                	mov    ecx,esi
    37f8:	29 c1                	sub    ecx,eax
    37fa:	8d 51 ff             	lea    edx,[rcx-0x1]
    37fd:	83 fa 02             	cmp    edx,0x2
    3800:	0f 86 8b 00 00 00    	jbe    3891 <_Z27standartDeviationCollisionsP7HashMapf+0x231>
    3806:	c4 e2 79 18 15 f9 07 	vbroadcastss xmm2,DWORD PTR [rip+0x7f9]        # 4008 <_IO_stdin_used+0x8>
    380d:	00 00 
    380f:	89 c2                	mov    edx,eax
    3811:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3815:	c5 f9 6e 4c d7 10    	vmovd  xmm1,DWORD PTR [rdi+rdx*8+0x10]
    381b:	c4 e3 71 22 4c d7 28 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x28],0x1
    3822:	01 
    3823:	c4 e3 71 22 4c d7 40 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x40],0x2
    382a:	02 
    382b:	c4 e3 71 22 4c d7 58 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x58],0x3
    3832:	03 
    3833:	ba ff ff 00 00       	mov    edx,0xffff
    3838:	c5 f9 6e c2          	vmovd  xmm0,edx
    383c:	89 ca                	mov    edx,ecx
    383e:	c5 f9 70 c0 00       	vpshufd xmm0,xmm0,0x0
    3843:	83 e2 fc             	and    edx,0xfffffffc
    3846:	c5 f1 db c0          	vpand  xmm0,xmm1,xmm0
    384a:	c5 f1 72 d1 10       	vpsrld xmm1,xmm1,0x10
    384f:	01 d0                	add    eax,edx
    3851:	83 e1 03             	and    ecx,0x3
    3854:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    3858:	c5 f0 59 ca          	vmulps xmm1,xmm1,xmm2
    385c:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    3860:	c5 f8 58 c1          	vaddps xmm0,xmm0,xmm1
    3864:	c5 d8 c6 cc 00       	vshufps xmm1,xmm4,xmm4,0x0
    3869:	c5 f8 5c c1          	vsubps xmm0,xmm0,xmm1
    386d:	c5 f8 59 c0          	vmulps xmm0,xmm0,xmm0
    3871:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    3875:	c5 f8 c6 d0 55       	vshufps xmm2,xmm0,xmm0,0x55
    387a:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    387e:	c5 f8 15 d0          	vunpckhps xmm2,xmm0,xmm0
    3882:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    3887:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    388b:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    388f:	74 5b                	je     38ec <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3891:	89 c2                	mov    edx,eax
    3893:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3897:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    389b:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    38a0:	8d 50 01             	lea    edx,[rax+0x1]
    38a3:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    38a7:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    38ab:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    38af:	39 f2                	cmp    edx,esi
    38b1:	73 39                	jae    38ec <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    38b3:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    38b7:	83 c0 02             	add    eax,0x2
    38ba:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    38be:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    38c3:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    38c7:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    38cb:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    38cf:	39 f0                	cmp    eax,esi
    38d1:	73 19                	jae    38ec <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    38d3:	48 8d 04 40          	lea    rax,[rax+rax*2]
    38d7:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    38db:	c4 e1 e2 2a c0       	vcvtsi2ss xmm0,xmm3,rax
    38e0:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    38e4:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    38e8:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    38ec:	c4 e1 e2 2a de       	vcvtsi2ss xmm3,xmm3,rsi
    38f1:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    38f5:	c5 3a 5e c3          	vdivss xmm8,xmm8,xmm3
    38f9:	c4 c1 78 2e c0       	vucomiss xmm0,xmm8
    38fe:	77 49                	ja     3949 <_Z27standartDeviationCollisionsP7HashMapf+0x2e9>
    3900:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3904:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3909:	c9                   	leave
    390a:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    390e:	41 5d                	pop    r13
    3910:	c3                   	ret
    3911:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3918:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    391d:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3921:	c4 41 3a 5e c0       	vdivss xmm8,xmm8,xmm8
    3926:	c9                   	leave
    3927:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    392b:	41 5d                	pop    r13
    392d:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3932:	c3                   	ret
    3933:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3938:	c5 f8 77             	vzeroupper
    393b:	eb af                	jmp    38ec <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    393d:	31 c0                	xor    eax,eax
    393f:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3944:	e9 ad fe ff ff       	jmp    37f6 <_Z27standartDeviationCollisionsP7HashMapf+0x196>
    3949:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    394d:	c5 78 29 c0          	vmovaps xmm0,xmm8
    3951:	c9                   	leave
    3952:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3956:	41 5d                	pop    r13
    3958:	e9 23 d8 ff ff       	jmp    1180 <sqrtf@plt>
    395d:	48 8d 0d cc 0c 00 00 	lea    rcx,[rip+0xccc]        # 4630 <_IO_stdin_used+0x630>
    3964:	ba b9 00 00 00       	mov    edx,0xb9
    3969:	48 8d 35 4d 07 00 00 	lea    rsi,[rip+0x74d]        # 40bd <_IO_stdin_used+0xbd>
    3970:	48 8d 3d ab 06 00 00 	lea    rdi,[rip+0x6ab]        # 4022 <_IO_stdin_used+0x22>
    3977:	e8 f4 d6 ff ff       	call   1070 <__assert_fail@plt>
    397c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003980 <my_strcmp>:
    3980:	c5 fd 6f 07          	vmovdqa ymm0,YMMWORD PTR [rdi]
    3984:	c5 fd 6f 0e          	vmovdqa ymm1,YMMWORD PTR [rsi]
    3988:	c4 e2 7d 29 d1       	vpcmpeqq ymm2,ymm0,ymm1
    398d:	c5 fd d7 c2          	vpmovmskb eax,ymm2
    3991:	f7 d0                	not    eax
    3993:	c3                   	ret

Disassembly of section .fini:

0000000000003994 <_fini>:
    3994:	f3 0f 1e fa          	endbr64
    3998:	48 83 ec 08          	sub    rsp,0x8
    399c:	48 83 c4 08          	add    rsp,0x8
    39a0:	c3                   	ret

Disassembly of section .rodata:

0000000000004000 <_IO_stdin_used>:
    4000:	01 00                	add    DWORD PTR [rax],eax
    4002:	02 00                	add    al,BYTE PTR [rax]
    4004:	00 00                	add    BYTE PTR [rax],al
    4006:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    4009:	00 80 47 62 6f 6f    	add    BYTE PTR [rax+0x6f6f6247],al
    400f:	6b 2e 74             	imul   ebp,DWORD PTR [rsi],0x74
    4012:	78 74                	js     4088 <_IO_stdin_used+0x88>
    4014:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    4017:	69 67 6e 65 64 5f 74 	imul   esp,DWORD PTR [rdi+0x6e],0x745f6465
    401e:	65 78 74             	gs js  4095 <_IO_stdin_used+0x95>
    4021:	00 68 61             	add    BYTE PTR [rax+0x61],ch
    4024:	73 68                	jae    408e <_IO_stdin_used+0x8e>
    4026:	4d 61                	rex.WRB (bad)
    4028:	70 00                	jo     402a <_IO_stdin_used+0x2a>
    402a:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    402c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    402d:	61                   	(bad)
    402e:	74 20                	je     4050 <_IO_stdin_used+0x50>
    4030:	67 65 74 4c          	addr32 gs je 4080 <_IO_stdin_used+0x80>
    4034:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4035:	61                   	(bad)
    4036:	64 46 61             	fs rex.RX (bad)
    4039:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    403d:	28 48 61             	sub    BYTE PTR [rax+0x61],cl
    4040:	73 68                	jae    40aa <_IO_stdin_used+0xaa>
    4042:	4d 61                	rex.WRB (bad)
    4044:	70 2a                	jo     4070 <_IO_stdin_used+0x70>
    4046:	29 00                	sub    DWORD PTR [rax],eax
    4048:	76 6f                	jbe    40b9 <_IO_stdin_used+0xb9>
    404a:	69 64 20 68 61 73 68 	imul   esp,DWORD PTR [rax+riz*1+0x68],0x4d687361
    4051:	4d 
    4052:	61                   	(bad)
    4053:	70 44                	jo     4099 <_IO_stdin_used+0x99>
    4055:	74 6f                	je     40c6 <_IO_stdin_used+0xc6>
    4057:	72 28                	jb     4081 <_IO_stdin_used+0x81>
    4059:	48 61                	rex.W (bad)
    405b:	73 68                	jae    40c5 <_IO_stdin_used+0xc5>
    405d:	4d 61                	rex.WRB (bad)
    405f:	70 2a                	jo     408b <_IO_stdin_used+0x8b>
    4061:	29 00                	sub    DWORD PTR [rax],eax
    4063:	2f                   	(bad)
    4064:	72 6f                	jb     40d5 <_IO_stdin_used+0xd5>
    4066:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4067:	74 2f                	je     4098 <_IO_stdin_used+0x98>
    4069:	68 61 73 68 4d       	push   0x4d687361
    406e:	61                   	(bad)
    406f:	70 2f                	jo     40a0 <_IO_stdin_used+0xa0>
    4071:	73 72                	jae    40e5 <_IO_stdin_used+0xe5>
    4073:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    4075:	6c                   	ins    BYTE PTR es:[rdi],dx
    4076:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
    407d:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
    4081:	74 00                	je     4083 <_IO_stdin_used+0x83>
    4083:	76 6f                	jbe    40f4 <_IO_stdin_used+0xf4>
    4085:	69 64 20 6c 69 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x44747369
    408c:	44 
    408d:	74 6f                	je     40fe <_IO_stdin_used+0xfe>
    408f:	72 28                	jb     40b9 <_IO_stdin_used+0xb9>
    4091:	4c 69 73 74 2a 29 00 	imul   r14,QWORD PTR [rbx+0x74],0x2f00292a
    4098:	2f 
    4099:	72 6f                	jb     410a <_IO_stdin_used+0x10a>
    409b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    409c:	74 2f                	je     40cd <_IO_stdin_used+0xcd>
    409e:	68 61 73 68 4d       	push   0x4d687361
    40a3:	61                   	(bad)
    40a4:	70 2f                	jo     40d5 <_IO_stdin_used+0xd5>
    40a6:	73 72                	jae    411a <_IO_stdin_used+0x11a>
    40a8:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    40aa:	75 74                	jne    4120 <_IO_stdin_used+0x120>
    40ac:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
    40b3:	00 
    40b4:	66 69 6c 65 6e 61 6d 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
    40bb:	65 00 2f             	add    BYTE PTR gs:[rdi],ch
    40be:	72 6f                	jb     412f <_IO_stdin_used+0x12f>
    40c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40c1:	74 2f                	je     40f2 <_IO_stdin_used+0xf2>
    40c3:	68 61 73 68 4d       	push   0x4d687361
    40c8:	61                   	(bad)
    40c9:	70 2f                	jo     40fa <_IO_stdin_used+0xfa>
    40cb:	73 72                	jae    413f <_IO_stdin_used+0x13f>
    40cd:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    40cf:	74 65                	je     4136 <_IO_stdin_used+0x136>
    40d1:	73 74                	jae    4147 <_IO_stdin_used+0x147>
    40d3:	73 2e                	jae    4103 <_IO_stdin_used+0x103>
    40d5:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    40d8:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    40db:	6c                   	ins    BYTE PTR es:[rdi],dx
    40dc:	65 00 42 75          	add    BYTE PTR gs:[rdx+0x75],al
    40e0:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    40e3:	74 20                	je     4105 <_IO_stdin_used+0x105>
    40e5:	69 6e 64 65 78 2c 42 	imul   ebp,DWORD PTR [rsi+0x64],0x422c7865
    40ec:	75 63                	jne    4151 <_IO_stdin_used+0x151>
    40ee:	6b 65 74 20          	imul   esp,DWORD PTR [rbp+0x74],0x20
    40f2:	73 69                	jae    415d <_IO_stdin_used+0x15d>
    40f4:	7a 65                	jp     415b <_IO_stdin_used+0x15b>
    40f6:	0a 00                	or     al,BYTE PTR [rax]
    40f8:	25 75 2c 25 75       	and    eax,0x75252c75
    40fd:	0a 00                	or     al,BYTE PTR [rax]
    40ff:	41 56                	push   r14
    4101:	45 52                	rex.RB push r10
    4103:	41                   	rex.B
    4104:	47                   	rex.RXB
    4105:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    4109:	4c                   	rex.WR
    410a:	4c                   	rex.WR
    410b:	49 53                	rex.WB push r11
    410d:	49                   	rex.WB
    410e:	4f                   	rex.WRXB
    410f:	4e 53                	rex.WRX push rbx
    4111:	3a 20                	cmp    ah,BYTE PTR [rax]
    4113:	25 2e 32 66 0a       	and    eax,0xa66322e
    4118:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    411b:	41                   	rex.B
    411c:	4e                   	rex.WRX
    411d:	44                   	rex.R
    411e:	41 52                	push   r10
    4120:	54                   	push   rsp
    4121:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    4125:	49                   	rex.WB
    4126:	41 54                	push   r12
    4128:	49                   	rex.WB
    4129:	4f                   	rex.WRXB
    412a:	4e 3a 20             	rex.WRX cmp r12b,BYTE PTR [rax]
    412d:	25 2e 32 66 0a       	and    eax,0xa66322e
    4132:	00 54 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dl
    4136:	74 20                	je     4158 <_IO_stdin_used+0x158>
    4138:	69 6e 64 65 78 2c 54 	imul   ebp,DWORD PTR [rsi+0x64],0x542c7865
    413f:	69 6d 65 20 6d 73 0a 	imul   ebp,DWORD PTR [rbp+0x65],0xa736d20
    4146:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    414a:	65 5f                	gs pop rdi
    414c:	61                   	(bad)
    414d:	72 72                	jb     41c1 <_IO_stdin_used+0x1c1>
    414f:	61                   	(bad)
    4150:	79 00                	jns    4152 <_IO_stdin_used+0x152>
    4152:	25 75 2c 25 2e       	and    eax,0x2e252c75
    4157:	32 66 0a             	xor    ah,BYTE PTR [rsi+0xa]
    415a:	00 41 56             	add    BYTE PTR [rcx+0x56],al
    415d:	45 52                	rex.RB push r10
    415f:	41                   	rex.B
    4160:	47                   	rex.RXB
    4161:	45 20 53 45          	and    BYTE PTR [r11+0x45],r10b
    4165:	41 52                	push   r10
    4167:	43                   	rex.XB
    4168:	48 20 54 49 4d       	rex.W and BYTE PTR [rcx+rcx*2+0x4d],dl
    416d:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    4170:	25 2e 32 66 20       	and    eax,0x2066322e
    4175:	6d                   	ins    DWORD PTR es:[rdi],dx
    4176:	73 0a                	jae    4182 <_IO_stdin_used+0x182>
    4178:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    417b:	41                   	rex.B
    417c:	4e                   	rex.WRX
    417d:	44                   	rex.R
    417e:	41 52                	push   r10
    4180:	54                   	push   rsp
    4181:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    4185:	49                   	rex.WB
    4186:	41 54                	push   r12
    4188:	49                   	rex.WB
    4189:	4f                   	rex.WRXB
    418a:	4e 20 3a             	rex.WRX and BYTE PTR [rdx],r15b
    418d:	20 25 2e 32 66 20    	and    BYTE PTR [rip+0x2066322e],ah        # 206673c1 <_end+0x206613a9>
    4193:	6d                   	ins    DWORD PTR es:[rdi],dx
    4194:	73 0a                	jae    41a0 <_IO_stdin_used+0x1a0>
    4196:	00 50 45             	add    BYTE PTR [rax+0x45],dl
    4199:	52                   	push   rdx
    419a:	43                   	rex.XB
    419b:	45                   	rex.RB
    419c:	4e 54                	rex.WRX push rsp
    419e:	41                   	rex.B
    419f:	47                   	rex.RXB
    41a0:	45 20 4f 46          	and    BYTE PTR [r15+0x46],r9b
    41a4:	20 45 52             	and    BYTE PTR [rbp+0x52],al
    41a7:	52                   	push   rdx
    41a8:	4f 52                	rex.WRXB push r10
    41aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    41ac:	25 2e 32 66 0a       	and    eax,0xa66322e
    41b1:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    41b4:	74 65                	je     421b <_IO_stdin_used+0x21b>
    41b6:	73 74                	jae    422c <_IO_stdin_used+0x22c>
    41b8:	5f                   	pop    rdi
    41b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    41ba:	61                   	(bad)
    41bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    41bc:	65 00 5f 6d          	add    BYTE PTR gs:[rdi+0x6d],bl
    41c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    41c1:	5f                   	pop    rdi
    41c2:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    41c5:	33 32                	xor    esi,DWORD PTR [rdx]
    41c7:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    41ca:	72 6d                	jb     4239 <_IO_stdin_used+0x239>
    41cc:	75 72                	jne    4240 <_IO_stdin_used+0x240>
    41ce:	33 00                	xor    eax,DWORD PTR [rax]
    41d0:	6d                   	ins    DWORD PTR es:[rdi],dx
    41d1:	75 72                	jne    4245 <_IO_stdin_used+0x245>
    41d3:	6d                   	ins    DWORD PTR es:[rdi],dx
    41d4:	75 72                	jne    4248 <_IO_stdin_used+0x248>
    41d6:	32 00                	xor    al,BYTE PTR [rax]
    41d8:	73 75                	jae    424f <_IO_stdin_used+0x24f>
    41da:	6d                   	ins    DWORD PTR es:[rdi],dx
    41db:	00 70 6c             	add    BYTE PTR [rax+0x6c],dh
    41de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    41df:	74 2f                	je     4210 <_IO_stdin_used+0x210>
    41e1:	73 75                	jae    4258 <_IO_stdin_used+0x258>
    41e3:	6d                   	ins    DWORD PTR es:[rdi],dx
    41e4:	2f                   	(bad)
    41e5:	73 75                	jae    425c <_IO_stdin_used+0x25c>
    41e7:	6d                   	ins    DWORD PTR es:[rdi],dx
    41e8:	5f                   	pop    rdi
    41e9:	73 65                	jae    4250 <_IO_stdin_used+0x250>
    41eb:	61                   	(bad)
    41ec:	72 63                	jb     4251 <_IO_stdin_used+0x251>
    41ee:	68 5f 74 69 6d       	push   0x6d69745f
    41f3:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    41f8:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
    41fb:	6c                   	ins    BYTE PTR es:[rdi],dx
    41fc:	65 72 33             	gs jb  4232 <_IO_stdin_used+0x232>
    41ff:	32 00                	xor    al,BYTE PTR [rax]
    4201:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    4203:	66 00 70 6c          	data16 add BYTE PTR [rax+0x6c],dh
    4207:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4208:	74 2f                	je     4239 <_IO_stdin_used+0x239>
    420a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    420c:	66 2f                	data16 (bad)
    420e:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    4210:	66 5f                	pop    di
    4212:	73 65                	jae    4279 <_IO_stdin_used+0x279>
    4214:	61                   	(bad)
    4215:	72 63                	jb     427a <_IO_stdin_used+0x27a>
    4217:	68 5f 74 69 6d       	push   0x6d69745f
    421c:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4221:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    4224:	6d                   	ins    DWORD PTR es:[rdi],dx
    4225:	5f                   	pop    rdi
    4226:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4229:	33 32                	xor    esi,DWORD PTR [rdx]
    422b:	55                   	push   rbp
    422c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    422d:	72 6f                	jb     429e <_IO_stdin_used+0x29e>
    422f:	6c                   	ins    BYTE PTR es:[rdi],dx
    4230:	6c                   	ins    BYTE PTR es:[rdi],dx
    4231:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    4234:	6c                   	ins    BYTE PTR es:[rdi],dx
    4235:	00 00                	add    BYTE PTR [rax],al
    4237:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    423a:	72 69                	jb     42a5 <_IO_stdin_used+0x2a5>
    423c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    423d:	67 5f                	addr32 pop rdi
    423f:	74 2a                	je     426b <_IO_stdin_used+0x26b>
    4241:	20 62 75             	and    BYTE PTR [rdx+0x75],ah
    4244:	69 6c 64 53 74 72 69 	imul   ebp,DWORD PTR [rsp+riz*2+0x53],0x6e697274
    424b:	6e 
    424c:	67 41 72 72          	addr32 rex.B jb 42c2 <_IO_stdin_used+0x2c2>
    4250:	61                   	(bad)
    4251:	79 28                	jns    427b <_IO_stdin_used+0x27b>
    4253:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4256:	72 2a                	jb     4282 <_IO_stdin_used+0x282>
    4258:	2c 20                	sub    al,0x20
    425a:	75 69                	jne    42c5 <_IO_stdin_used+0x2c5>
    425c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    425d:	74 33                	je     4292 <_IO_stdin_used+0x292>
    425f:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4262:	29 00                	sub    DWORD PTR [rax],eax
    4264:	00 00                	add    BYTE PTR [rax],al
    4266:	00 00                	add    BYTE PTR [rax],al
    4268:	2f                   	(bad)
    4269:	72 6f                	jb     42da <_IO_stdin_used+0x2da>
    426b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    426c:	74 2f                	je     429d <_IO_stdin_used+0x29d>
    426e:	68 61 73 68 4d       	push   0x4d687361
    4273:	61                   	(bad)
    4274:	70 2f                	jo     42a5 <_IO_stdin_used+0x2a5>
    4276:	73 72                	jae    42ea <_IO_stdin_used+0x2ea>
    4278:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    427a:	68 61 73 68 5f       	push   0x5f687361
    427f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4280:	61                   	(bad)
    4281:	70 2e                	jo     42b1 <_IO_stdin_used+0x2b1>
    4283:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    4286:	00 00                	add    BYTE PTR [rax],al
    4288:	75 69                	jne    42f3 <_IO_stdin_used+0x2f3>
    428a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    428b:	74 33                	je     42c0 <_IO_stdin_used+0x2c0>
    428d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4290:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    4293:	73 68                	jae    42fd <_IO_stdin_used+0x2fd>
    4295:	4d 61                	rex.WRB (bad)
    4297:	70 41                	jo     42da <_IO_stdin_used+0x2da>
    4299:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
    429d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    429f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    42a1:	74 28                	je     42cb <_IO_stdin_used+0x2cb>
    42a3:	48 61                	rex.W (bad)
    42a5:	73 68                	jae    430f <_IO_stdin_used+0x30f>
    42a7:	4d 61                	rex.WRB (bad)
    42a9:	70 2a                	jo     42d5 <_IO_stdin_used+0x2d5>
    42ab:	2c 20                	sub    al,0x20
    42ad:	64 61                	fs (bad)
    42af:	74 61                	je     4312 <_IO_stdin_used+0x312>
    42b1:	5f                   	pop    rdi
    42b2:	74 29                	je     42dd <_IO_stdin_used+0x2dd>
    42b4:	00 00                	add    BYTE PTR [rax],al
    42b6:	00 00                	add    BYTE PTR [rax],al
    42b8:	75 69                	jne    4323 <_IO_stdin_used+0x323>
    42ba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42bb:	74 33                	je     42f0 <_IO_stdin_used+0x2f0>
    42bd:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    42c0:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    42c3:	73 68                	jae    432d <_IO_stdin_used+0x32d>
    42c5:	4d 61                	rex.WRB (bad)
    42c7:	70 50                	jo     4319 <_IO_stdin_used+0x319>
    42c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    42ca:	70 45                	jo     4311 <_IO_stdin_used+0x311>
    42cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    42cd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    42cf:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    42d1:	74 28                	je     42fb <_IO_stdin_used+0x2fb>
    42d3:	48 61                	rex.W (bad)
    42d5:	73 68                	jae    433f <_IO_stdin_used+0x33f>
    42d7:	4d 61                	rex.WRB (bad)
    42d9:	70 2a                	jo     4305 <_IO_stdin_used+0x305>
    42db:	2c 20                	sub    al,0x20
    42dd:	64 61                	fs (bad)
    42df:	74 61                	je     4342 <_IO_stdin_used+0x342>
    42e1:	5f                   	pop    rdi
    42e2:	74 29                	je     430d <_IO_stdin_used+0x30d>
    42e4:	00 00                	add    BYTE PTR [rax],al
    42e6:	00 00                	add    BYTE PTR [rax],al
    42e8:	62 6f 6f 6c 20       	(bad)
    42ed:	68 61 73 68 4d       	push   0x4d687361
    42f2:	61                   	(bad)
    42f3:	70 53                	jo     4348 <_IO_stdin_used+0x348>
    42f5:	65 61                	gs (bad)
    42f7:	72 63                	jb     435c <_IO_stdin_used+0x35c>
    42f9:	68 45 6c 65 6d       	push   0x6d656c45
    42fe:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4300:	74 28                	je     432a <_IO_stdin_used+0x32a>
    4302:	48 61                	rex.W (bad)
    4304:	73 68                	jae    436e <_IO_stdin_used+0x36e>
    4306:	4d 61                	rex.WRB (bad)
    4308:	70 2a                	jo     4334 <_IO_stdin_used+0x334>
    430a:	2c 20                	sub    al,0x20
    430c:	64 61                	fs (bad)
    430e:	74 61                	je     4371 <_IO_stdin_used+0x371>
    4310:	5f                   	pop    rdi
    4311:	74 29                	je     433c <_IO_stdin_used+0x33c>
    4313:	00 00                	add    BYTE PTR [rax],al
    4315:	00 00                	add    BYTE PTR [rax],al
    4317:	00 48 61             	add    BYTE PTR [rax+0x61],cl
    431a:	73 68                	jae    4384 <_IO_stdin_used+0x384>
    431c:	4d 61                	rex.WRB (bad)
    431e:	70 20                	jo     4340 <_IO_stdin_used+0x340>
    4320:	72 65                	jb     4387 <_IO_stdin_used+0x387>
    4322:	73 69                	jae    438d <_IO_stdin_used+0x38d>
    4324:	7a 65                	jp     438b <_IO_stdin_used+0x38b>
    4326:	28 48 61             	sub    BYTE PTR [rax+0x61],cl
    4329:	73 68                	jae    4393 <_IO_stdin_used+0x393>
    432b:	4d 61                	rex.WRB (bad)
    432d:	70 2a                	jo     4359 <_IO_stdin_used+0x359>
    432f:	2c 20                	sub    al,0x20
    4331:	75 69                	jne    439c <_IO_stdin_used+0x39c>
    4333:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4334:	74 33                	je     4369 <_IO_stdin_used+0x369>
    4336:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4339:	29 00                	sub    DWORD PTR [rax],eax
    433b:	00 00                	add    BYTE PTR [rax],al
    433d:	00 00                	add    BYTE PTR [rax],al
    433f:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    4342:	74 20                	je     4364 <_IO_stdin_used+0x364>
    4344:	73 65                	jae    43ab <_IO_stdin_used+0x3ab>
    4346:	61                   	(bad)
    4347:	72 63                	jb     43ac <_IO_stdin_used+0x3ac>
    4349:	68 45 6c 65 6d       	push   0x6d656c45
    434e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4350:	74 28                	je     437a <_IO_stdin_used+0x37a>
    4352:	4c 69 73 74 2a 2c 20 	imul   r14,QWORD PTR [rbx+0x74],0x64202c2a
    4359:	64 
    435a:	61                   	(bad)
    435b:	74 61                	je     43be <_IO_stdin_used+0x3be>
    435d:	5f                   	pop    rdi
    435e:	74 29                	je     4389 <_IO_stdin_used+0x389>
	...
    4368:	69 6e 74 20 70 75 73 	imul   ebp,DWORD PTR [rsi+0x74],0x73757020
    436f:	68 4c 69 73 74       	push   0x7473694c
    4374:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    4376:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4378:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    437c:	74 2a                	je     43a8 <_IO_stdin_used+0x3a8>
    437e:	2c 20                	sub    al,0x20
    4380:	64 61                	fs (bad)
    4382:	74 61                	je     43e5 <_IO_stdin_used+0x3e5>
    4384:	5f                   	pop    rdi
    4385:	74 29                	je     43b0 <_IO_stdin_used+0x3b0>
    4387:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    438a:	74 20                	je     43ac <_IO_stdin_used+0x3ac>
    438c:	70 6f                	jo     43fd <_IO_stdin_used+0x3fd>
    438e:	70 4c                	jo     43dc <_IO_stdin_used+0x3dc>
    4390:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
    4397:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    439b:	74 2a                	je     43c7 <_IO_stdin_used+0x3c7>
    439d:	2c 20                	sub    al,0x20
    439f:	64 61                	fs (bad)
    43a1:	74 61                	je     4404 <_IO_stdin_used+0x404>
    43a3:	5f                   	pop    rdi
    43a4:	74 29                	je     43cf <_IO_stdin_used+0x3cf>
    43a6:	00 00                	add    BYTE PTR [rax],al
    43a8:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    43ab:	72 2a                	jb     43d7 <_IO_stdin_used+0x3d7>
    43ad:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    43b0:	61                   	(bad)
    43b1:	64 46 69 6c 65 28 63 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x736e6f63
    43b8:	6f 6e 73 
    43bb:	74 20                	je     43dd <_IO_stdin_used+0x3dd>
    43bd:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    43c0:	72 2a                	jb     43ec <_IO_stdin_used+0x3ec>
    43c2:	2c 20                	sub    al,0x20
    43c4:	73 69                	jae    442f <_IO_stdin_used+0x42f>
    43c6:	7a 65                	jp     442d <_IO_stdin_used+0x42d>
    43c8:	5f                   	pop    rdi
    43c9:	74 2a                	je     43f5 <_IO_stdin_used+0x3f5>
    43cb:	29 00                	sub    DWORD PTR [rax],eax
    43cd:	00 00                	add    BYTE PTR [rax],al
    43cf:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    43d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    43d3:	74 33                	je     4408 <_IO_stdin_used+0x408>
    43d5:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    43d8:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    43db:	75 6e                	jne    444b <_IO_stdin_used+0x44b>
    43dd:	74 4c                	je     442b <_IO_stdin_used+0x42b>
    43df:	69 6e 65 73 28 63 68 	imul   ebp,DWORD PTR [rsi+0x65],0x68632873
    43e6:	61                   	(bad)
    43e7:	72 2a                	jb     4413 <_IO_stdin_used+0x413>
    43e9:	2c 20                	sub    al,0x20
    43eb:	73 69                	jae    4456 <_IO_stdin_used+0x456>
    43ed:	7a 65                	jp     4454 <_IO_stdin_used+0x454>
    43ef:	5f                   	pop    rdi
    43f0:	74 29                	je     441b <_IO_stdin_used+0x41b>
    43f2:	00 00                	add    BYTE PTR [rax],al
    43f4:	00 00                	add    BYTE PTR [rax],al
    43f6:	00 00                	add    BYTE PTR [rax],al
    43f8:	76 6f                	jbe    4469 <_IO_stdin_used+0x469>
    43fa:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x43747365
    4401:	43 
    4402:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4403:	6c                   	ins    BYTE PTR es:[rdi],dx
    4404:	6c                   	ins    BYTE PTR es:[rdi],dx
    4405:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    440c:	46                   	rex.RX
    440d:	49                   	rex.WB
    440e:	4c                   	rex.WR
    440f:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    4413:	68 61 73 68 5f       	push   0x5f687361
    4418:	74 2c                	je     4446 <_IO_stdin_used+0x446>
    441a:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    441e:	74 44                	je     4464 <_IO_stdin_used+0x464>
    4420:	61                   	(bad)
    4421:	74 61                	je     4484 <_IO_stdin_used+0x484>
    4423:	2c 20                	sub    al,0x20
    4425:	75 69                	jne    4490 <_IO_stdin_used+0x490>
    4427:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4428:	74 33                	je     445d <_IO_stdin_used+0x45d>
    442a:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    442d:	29 00                	sub    DWORD PTR [rax],eax
    442f:	00 76 6f             	add    BYTE PTR [rsi+0x6f],dh
    4432:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x53747365
    4439:	53 
    443a:	65 61                	gs (bad)
    443c:	72 63                	jb     44a1 <_IO_stdin_used+0x4a1>
    443e:	68 54 69 6d 65       	push   0x656d6954
    4443:	28 46 49             	sub    BYTE PTR [rsi+0x49],al
    4446:	4c                   	rex.WR
    4447:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    444b:	68 61 73 68 5f       	push   0x5f687361
    4450:	74 2c                	je     447e <_IO_stdin_used+0x47e>
    4452:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    4456:	74 44                	je     449c <_IO_stdin_used+0x49c>
    4458:	61                   	(bad)
    4459:	74 61                	je     44bc <_IO_stdin_used+0x4bc>
    445b:	2c 20                	sub    al,0x20
    445d:	75 69                	jne    44c8 <_IO_stdin_used+0x4c8>
    445f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4460:	74 33                	je     4495 <_IO_stdin_used+0x495>
    4462:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4465:	2c 20                	sub    al,0x20
    4467:	75 69                	jne    44d2 <_IO_stdin_used+0x4d2>
    4469:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    446a:	74 33                	je     449f <_IO_stdin_used+0x49f>
    446c:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    446f:	29 00                	sub    DWORD PTR [rax],eax
    4471:	00 00                	add    BYTE PTR [rax],al
    4473:	00 00                	add    BYTE PTR [rax],al
    4475:	00 00                	add    BYTE PTR [rax],al
    4477:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    447b:	62 6c 65             	(bad)
    447e:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    4481:	61                   	(bad)
    4482:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4483:	64 61                	fs (bad)
    4485:	72 74                	jb     44fb <_IO_stdin_used+0x4fb>
    4487:	44                   	rex.R
    4488:	65 76 69             	gs jbe 44f4 <_IO_stdin_used+0x4f4>
    448b:	61                   	(bad)
    448c:	74 69                	je     44f7 <_IO_stdin_used+0x4f7>
    448e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    448f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4490:	54                   	push   rsp
    4491:	69 6d 65 28 64 6f 75 	imul   ebp,DWORD PTR [rbp+0x65],0x756f6428
    4498:	62 6c 65             	(bad)  {k2}
    449b:	2a 2c 20             	sub    ch,BYTE PTR [rax+riz*1]
    449e:	75 69                	jne    4509 <_IO_stdin_used+0x509>
    44a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44a1:	74 33                	je     44d6 <_IO_stdin_used+0x4d6>
    44a3:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    44a6:	2c 20                	sub    al,0x20
    44a8:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    44aa:	75 62                	jne    450e <_IO_stdin_used+0x50e>
    44ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    44ad:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    44b0:	76 6f                	jbe    4521 <_IO_stdin_used+0x521>
    44b2:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x41747365
    44b9:	41 
    44ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    44bb:	6c                   	ins    BYTE PTR es:[rdi],dx
    44bc:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    44bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44c0:	73 74                	jae    4536 <_IO_stdin_used+0x536>
    44c2:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    44c5:	61                   	(bad)
    44c6:	72 2a                	jb     44f2 <_IO_stdin_used+0x4f2>
    44c8:	2c 20                	sub    al,0x20
    44ca:	75 69                	jne    4535 <_IO_stdin_used+0x535>
    44cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44cd:	74 33                	je     4502 <_IO_stdin_used+0x502>
    44cf:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    44d2:	2c 20                	sub    al,0x20
    44d4:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    44d7:	73 74                	jae    454d <_IO_stdin_used+0x54d>
    44d9:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    44dc:	61                   	(bad)
    44dd:	72 2a                	jb     4509 <_IO_stdin_used+0x509>
    44df:	2c 20                	sub    al,0x20
    44e1:	75 69                	jne    454c <_IO_stdin_used+0x54c>
    44e3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44e4:	74 33                	je     4519 <_IO_stdin_used+0x519>
    44e6:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    44e9:	29 00                	sub    DWORD PTR [rax],eax
    44eb:	00 00                	add    BYTE PTR [rax],al
    44ed:	00 00                	add    BYTE PTR [rax],al
    44ef:	00 0a                	add    BYTE PTR [rdx],cl
    44f1:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    44f6:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    44fb:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4500:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4505:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    450a:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    450f:	00 2d 2d 2d 2d 2d    	add    BYTE PTR [rip+0x2d2d2d2d],ch        # 2d2d7242 <_end+0x2d2d122a>
    4515:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    451a:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    451f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4524:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4529:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    452e:	00 00                	add    BYTE PTR [rax],al
    4530:	70 6c                	jo     459e <_IO_stdin_used+0x59e>
    4532:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4533:	74 2f                	je     4564 <_IO_stdin_used+0x564>
    4535:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4538:	33 32                	xor    esi,DWORD PTR [rdx]
    453a:	2f                   	(bad)
    453b:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    453e:	33 32                	xor    esi,DWORD PTR [rdx]
    4540:	5f                   	pop    rdi
    4541:	73 65                	jae    45a8 <_IO_stdin_used+0x5a8>
    4543:	61                   	(bad)
    4544:	72 63                	jb     45a9 <_IO_stdin_used+0x5a9>
    4546:	68 5f 74 69 6d       	push   0x6d69745f
    454b:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    4558:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    455d:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4562:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4567:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    456c:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4571:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4576:	00 00                	add    BYTE PTR [rax],al
    4578:	70 6c                	jo     45e6 <_IO_stdin_used+0x5e6>
    457a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    457b:	74 2f                	je     45ac <_IO_stdin_used+0x5ac>
    457d:	5f                   	pop    rdi
    457e:	6d                   	ins    DWORD PTR es:[rdi],dx
    457f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4580:	5f                   	pop    rdi
    4581:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4584:	33 32                	xor    esi,DWORD PTR [rdx]
    4586:	2f                   	(bad)
    4587:	5f                   	pop    rdi
    4588:	6d                   	ins    DWORD PTR es:[rdi],dx
    4589:	6d                   	ins    DWORD PTR es:[rdi],dx
    458a:	5f                   	pop    rdi
    458b:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    458e:	33 32                	xor    esi,DWORD PTR [rdx]
    4590:	5f                   	pop    rdi
    4591:	73 65                	jae    45f8 <_IO_stdin_used+0x5f8>
    4593:	61                   	(bad)
    4594:	72 63                	jb     45f9 <_IO_stdin_used+0x5f9>
    4596:	68 5f 74 69 6d       	push   0x6d69745f
    459b:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    45a8:	70 6c                	jo     4616 <_IO_stdin_used+0x616>
    45aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45ab:	74 2f                	je     45dc <_IO_stdin_used+0x5dc>
    45ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    45ae:	75 72                	jne    4622 <_IO_stdin_used+0x622>
    45b0:	6d                   	ins    DWORD PTR es:[rdi],dx
    45b1:	75 72                	jne    4625 <_IO_stdin_used+0x625>
    45b3:	32 2f                	xor    ch,BYTE PTR [rdi]
    45b5:	6d                   	ins    DWORD PTR es:[rdi],dx
    45b6:	75 72                	jne    462a <_IO_stdin_used+0x62a>
    45b8:	6d                   	ins    DWORD PTR es:[rdi],dx
    45b9:	75 72                	jne    462d <_IO_stdin_used+0x62d>
    45bb:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    45be:	65 61                	gs (bad)
    45c0:	72 63                	jb     4625 <_IO_stdin_used+0x625>
    45c2:	68 5f 74 69 6d       	push   0x6d69745f
    45c7:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    45cc:	00 00                	add    BYTE PTR [rax],al
    45ce:	00 00                	add    BYTE PTR [rax],al
    45d0:	70 6c                	jo     463e <_IO_stdin_used+0x63e>
    45d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45d3:	74 2f                	je     4604 <_IO_stdin_used+0x604>
    45d5:	61                   	(bad)
    45d6:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    45d8:	65 72 33             	gs jb  460e <_IO_stdin_used+0x60e>
    45db:	32 2f                	xor    ch,BYTE PTR [rdi]
    45dd:	61                   	(bad)
    45de:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    45e0:	65 72 33             	gs jb  4616 <_IO_stdin_used+0x616>
    45e3:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    45e6:	65 61                	gs (bad)
    45e8:	72 63                	jb     464d <_IO_stdin_used+0x64d>
    45ea:	68 5f 74 69 6d       	push   0x6d69745f
    45ef:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    45f4:	00 00                	add    BYTE PTR [rax],al
    45f6:	00 00                	add    BYTE PTR [rax],al
    45f8:	70 6c                	jo     4666 <_IO_stdin_used+0x666>
    45fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45fb:	74 2f                	je     462c <_IO_stdin_used+0x62c>
    45fd:	5f                   	pop    rdi
    45fe:	6d                   	ins    DWORD PTR es:[rdi],dx
    45ff:	6d                   	ins    DWORD PTR es:[rdi],dx
    4600:	5f                   	pop    rdi
    4601:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4604:	33 32                	xor    esi,DWORD PTR [rdx]
    4606:	55                   	push   rbp
    4607:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4608:	72 6f                	jb     4679 <_IO_stdin_used+0x679>
    460a:	6c                   	ins    BYTE PTR es:[rdi],dx
    460b:	6c                   	ins    BYTE PTR es:[rdi],dx
    460c:	2f                   	(bad)
    460d:	5f                   	pop    rdi
    460e:	6d                   	ins    DWORD PTR es:[rdi],dx
    460f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4610:	5f                   	pop    rdi
    4611:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4614:	33 32                	xor    esi,DWORD PTR [rdx]
    4616:	55                   	push   rbp
    4617:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4618:	72 6f                	jb     4689 <__GNU_EH_FRAME_HDR+0x1>
    461a:	6c                   	ins    BYTE PTR es:[rdi],dx
    461b:	6c                   	ins    BYTE PTR es:[rdi],dx
    461c:	5f                   	pop    rdi
    461d:	73 65                	jae    4684 <_IO_stdin_used+0x684>
    461f:	61                   	(bad)
    4620:	72 63                	jb     4685 <_IO_stdin_used+0x685>
    4622:	68 5f 74 69 6d       	push   0x6d69745f
    4627:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    462c:	00 00                	add    BYTE PTR [rax],al
    462e:	00 00                	add    BYTE PTR [rax],al
    4630:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    4632:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4633:	61                   	(bad)
    4634:	74 20                	je     4656 <_IO_stdin_used+0x656>
    4636:	73 74                	jae    46ac <__GNU_EH_FRAME_HDR+0x24>
    4638:	61                   	(bad)
    4639:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    463a:	64 61                	fs (bad)
    463c:	72 74                	jb     46b2 <__GNU_EH_FRAME_HDR+0x2a>
    463e:	44                   	rex.R
    463f:	65 76 69             	gs jbe 46ab <__GNU_EH_FRAME_HDR+0x23>
    4642:	61                   	(bad)
    4643:	74 69                	je     46ae <__GNU_EH_FRAME_HDR+0x26>
    4645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4646:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4647:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    4649:	6c                   	ins    BYTE PTR es:[rdi],dx
    464a:	6c                   	ins    BYTE PTR es:[rdi],dx
    464b:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    4652:	48 61                	rex.W (bad)
    4654:	73 68                	jae    46be <__GNU_EH_FRAME_HDR+0x36>
    4656:	4d 61                	rex.WRB (bad)
    4658:	70 2a                	jo     4684 <_IO_stdin_used+0x684>
    465a:	2c 20                	sub    al,0x20
    465c:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    465e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    465f:	61                   	(bad)
    4660:	74 29                	je     468b <__GNU_EH_FRAME_HDR+0x3>
    4662:	00 00                	add    BYTE PTR [rax],al
    4664:	00 00                	add    BYTE PTR [rax],al
    4666:	00 00                	add    BYTE PTR [rax],al
    4668:	02 00                	add    al,BYTE PTR [rax]
    466a:	00 00                	add    BYTE PTR [rax],al
    466c:	01 00                	add    DWORD PTR [rax],eax
    466e:	00 00                	add    BYTE PTR [rax],al
    4670:	03 00                	add    eax,DWORD PTR [rax]
    4672:	00 00                	add    BYTE PTR [rax],al
    4674:	02 00                	add    al,BYTE PTR [rax]
    4676:	00 00                	add    BYTE PTR [rax],al
    4678:	04 00                	add    al,0x0
    467a:	00 00                	add    BYTE PTR [rax],al
    467c:	03 00                	add    eax,DWORD PTR [rax]
	...
    4686:	59                   	pop    rcx
    4687:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000004688 <__GNU_EH_FRAME_HDR>:
    4688:	01 1b                	add    DWORD PTR [rbx],ebx
    468a:	03 3b                	add    edi,DWORD PTR [rbx]
    468c:	14 01                	adc    al,0x1
    468e:	00 00                	add    BYTE PTR [rax],al
    4690:	21 00                	and    DWORD PTR [rax],eax
    4692:	00 00                	add    BYTE PTR [rax],al
    4694:	98                   	cwde
    4695:	c9                   	leave
    4696:	ff                   	(bad)
    4697:	ff 48 01             	dec    DWORD PTR [rax+0x1]
    469a:	00 00                	add    BYTE PTR [rax],al
    469c:	38 cb                	cmp    bl,cl
    469e:	ff                   	(bad)
    469f:	ff 70 01             	push   QWORD PTR [rax+0x1]
    46a2:	00 00                	add    BYTE PTR [rax],al
    46a4:	48 cb                	retfq
    46a6:	ff                   	(bad)
    46a7:	ff 88 01 00 00 88    	dec    DWORD PTR [rax-0x77ffffff]
    46ad:	cb                   	retf
    46ae:	ff                   	(bad)
    46af:	ff 30                	push   QWORD PTR [rax]
    46b1:	01 00                	add    DWORD PTR [rax],eax
    46b3:	00 78 cc             	add    BYTE PTR [rax-0x34],bh
    46b6:	ff                   	(bad)
    46b7:	ff a8 01 00 00 08    	jmp    FWORD PTR [rax+0x8000001]
    46bd:	ce                   	(bad)
    46be:	ff                   	(bad)
    46bf:	ff                   	call   (bad)
    46c0:	d8 01                	fadd   DWORD PTR [rcx]
    46c2:	00 00                	add    BYTE PTR [rax],al
    46c4:	b8 ce ff ff 04       	mov    eax,0x4ffffce
    46c9:	02 00                	add    al,BYTE PTR [rax]
    46cb:	00 88 cf ff ff 38    	add    BYTE PTR [rax+0x38ffffcf],cl
    46d1:	02 00                	add    al,BYTE PTR [rax]
    46d3:	00 68 d0             	add    BYTE PTR [rax-0x30],ch
    46d6:	ff                   	(bad)
    46d7:	ff                   	(bad)
    46d8:	78 02                	js     46dc <__GNU_EH_FRAME_HDR+0x54>
    46da:	00 00                	add    BYTE PTR [rax],al
    46dc:	38 d1                	cmp    cl,dl
    46de:	ff                   	(bad)
    46df:	ff 98 02 00 00 68    	call   FWORD PTR [rax+0x68000002]
    46e5:	d1 ff                	sar    edi,1
    46e7:	ff ac 02 00 00 d8 d1 	jmp    FWORD PTR [rdx+rax*1-0x2e280000]
    46ee:	ff                   	(bad)
    46ef:	ff                   	call   (bad)
    46f0:	d8 02                	fadd   DWORD PTR [rdx]
    46f2:	00 00                	add    BYTE PTR [rax],al
    46f4:	28 d4                	sub    ah,dl
    46f6:	ff                   	(bad)
    46f7:	ff 20                	jmp    QWORD PTR [rax]
    46f9:	03 00                	add    eax,DWORD PTR [rax]
    46fb:	00 38                	add    BYTE PTR [rax],bh
    46fd:	d4                   	(bad)
    46fe:	ff                   	(bad)
    46ff:	ff 34 03             	push   QWORD PTR [rbx+rax*1]
    4702:	00 00                	add    BYTE PTR [rax],al
    4704:	48 d4                	rex.W (bad)
    4706:	ff                   	(bad)
    4707:	ff 48 03             	dec    DWORD PTR [rax+0x3]
    470a:	00 00                	add    BYTE PTR [rax],al
    470c:	a8 d4                	test   al,0xd4
    470e:	ff                   	(bad)
    470f:	ff 5c 03 00          	call   FWORD PTR [rbx+rax*1+0x0]
    4713:	00 b8 d4 ff ff 70    	add    BYTE PTR [rax+0x70ffffd4],bh
    4719:	03 00                	add    eax,DWORD PTR [rax]
    471b:	00 c8                	add    al,cl
    471d:	d4                   	(bad)
    471e:	ff                   	(bad)
    471f:	ff 84 03 00 00 d8 d6 	inc    DWORD PTR [rbx+rax*1-0x29280000]
    4726:	ff                   	(bad)
    4727:	ff 98 03 00 00 e8    	call   FWORD PTR [rax-0x17fffffd]
    472d:	d7                   	xlat   BYTE PTR ds:[rbx]
    472e:	ff                   	(bad)
    472f:	ff b0 03 00 00 18    	push   QWORD PTR [rax+0x18000003]
    4735:	d8 ff                	fdivr  st,st(7)
    4737:	ff cc                	dec    esp
    4739:	03 00                	add    eax,DWORD PTR [rax]
    473b:	00 88 d8 ff ff e8    	add    BYTE PTR [rax-0x17000028],cl
    4741:	03 00                	add    eax,DWORD PTR [rax]
    4743:	00 28                	add    BYTE PTR [rax],ch
    4745:	da ff                	(bad)
    4747:	ff 34 04             	push   QWORD PTR [rsp+rax*1]
    474a:	00 00                	add    BYTE PTR [rax],al
    474c:	e8 da ff ff 58       	call   5900472b <_end+0x58ffe713>
    4751:	04 00                	add    al,0x0
    4753:	00 48 db             	add    BYTE PTR [rax-0x25],cl
    4756:	ff                   	(bad)
    4757:	ff 74 04 00          	push   QWORD PTR [rsp+rax*1+0x0]
    475b:	00 88 db ff ff 90    	add    BYTE PTR [rax-0x6f000025],cl
    4761:	04 00                	add    al,0x0
    4763:	00 98 dc ff ff b8    	add    BYTE PTR [rax-0x47000024],bl
    4769:	04 00                	add    al,0x0
    476b:	00 08                	add    BYTE PTR [rax],cl
    476d:	dd ff                	(bad)
    476f:	ff                   	jmp    (bad)
    4770:	e8 04 00 00 78       	call   78004779 <_end+0x77ffe761>
    4775:	e1 ff                	loope  4776 <__GNU_EH_FRAME_HDR+0xee>
    4777:	ff 30                	push   QWORD PTR [rax]
    4779:	05 00 00 38 e6       	add    eax,0xe6380000
    477e:	ff                   	(bad)
    477f:	ff                   	(bad)
    4780:	7c 05                	jl     4787 <__GNU_EH_FRAME_HDR+0xff>
    4782:	00 00                	add    BYTE PTR [rax],al
    4784:	a8 e6                	test   al,0xe6
    4786:	ff                   	(bad)
    4787:	ff c4                	inc    esp
    4789:	05 00 00 78 ee       	add    eax,0xee780000
    478e:	ff                   	(bad)
    478f:	ff 10                	call   QWORD PTR [rax]
    4791:	06                   	(bad)
    4792:	00 00                	add    BYTE PTR [rax],al
    4794:	d8 ef                	fsubr  st,st(7)
    4796:	ff                   	(bad)
    4797:	ff 40 06             	inc    DWORD PTR [rax+0x6]
	...

Disassembly of section .eh_frame:

00000000000047a0 <__FRAME_END__-0x57c>:
    47a0:	14 00                	adc    al,0x0
    47a2:	00 00                	add    BYTE PTR [rax],al
    47a4:	00 00                	add    BYTE PTR [rax],al
    47a6:	00 00                	add    BYTE PTR [rax],al
    47a8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    47ab:	00 01                	add    BYTE PTR [rcx],al
    47ad:	78 10                	js     47bf <__GNU_EH_FRAME_HDR+0x137>
    47af:	01 1b                	add    DWORD PTR [rbx],ebx
    47b1:	0c 07                	or     al,0x7
    47b3:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    47b9:	00 00                	add    BYTE PTR [rax],al
    47bb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    47be:	00 00                	add    BYTE PTR [rax],al
    47c0:	50                   	push   rax
    47c1:	ca ff ff             	retf   0xffff
    47c4:	26 00 00             	es add BYTE PTR [rax],al
    47c7:	00 00                	add    BYTE PTR [rax],al
    47c9:	44 07                	rex.R (bad)
    47cb:	10 00                	adc    BYTE PTR [rax],al
    47cd:	00 00                	add    BYTE PTR [rax],al
    47cf:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    47d2:	00 00                	add    BYTE PTR [rax],al
    47d4:	34 00                	xor    al,0x0
    47d6:	00 00                	add    BYTE PTR [rax],al
    47d8:	48 c8 ff ff a0       	rex.W enter 0xffff,0xa0
    47dd:	01 00                	add    DWORD PTR [rax],eax
    47df:	00 00                	add    BYTE PTR [rax],al
    47e1:	0e                   	(bad)
    47e2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    47e5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    47e8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    47eb:	80 00 3f             	add    BYTE PTR [rax],0x3f
    47ee:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    47f0:	2a 33                	sub    dh,BYTE PTR [rbx]
    47f2:	24 22                	and    al,0x22
    47f4:	00 00                	add    BYTE PTR [rax],al
    47f6:	00 00                	add    BYTE PTR [rax],al
    47f8:	14 00                	adc    al,0x0
    47fa:	00 00                	add    BYTE PTR [rax],al
    47fc:	5c                   	pop    rsp
    47fd:	00 00                	add    BYTE PTR [rax],al
    47ff:	00 c0                	add    al,al
    4801:	c9                   	leave
    4802:	ff                   	(bad)
    4803:	ff 08                	dec    DWORD PTR [rax]
	...
    480d:	00 00                	add    BYTE PTR [rax],al
    480f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    4812:	00 00                	add    BYTE PTR [rax],al
    4814:	74 00                	je     4816 <__GNU_EH_FRAME_HDR+0x18e>
    4816:	00 00                	add    BYTE PTR [rax],al
    4818:	b8 c9 ff ff 33       	mov    eax,0x33ffffc9
    481d:	00 00                	add    BYTE PTR [rax],al
    481f:	00 00                	add    BYTE PTR [rax],al
    4821:	45 0e                	rex.RB (bad)
    4823:	10 83 02 6d 0e 08    	adc    BYTE PTR [rbx+0x80e6d02],al
    4829:	00 00                	add    BYTE PTR [rax],al
    482b:	00 00                	add    BYTE PTR [rax],al
    482d:	00 00                	add    BYTE PTR [rax],al
    482f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
    4832:	00 00                	add    BYTE PTR [rax],al
    4834:	94                   	xchg   esp,eax
    4835:	00 00                	add    BYTE PTR [rax],al
    4837:	00 c8                	add    al,cl
    4839:	ca ff ff             	retf   0xffff
    483c:	86 01                	xchg   BYTE PTR [rcx],al
    483e:	00 00                	add    BYTE PTR [rax],al
    4840:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    4843:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4849:	51                   	push   rcx
    484a:	8f 03                	pop    QWORD PTR [rbx]
    484c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    4853:	07                   	(bad)
    4854:	03 2e                	add    ebp,DWORD PTR [rsi]
    4856:	01 0a                	add    DWORD PTR [rdx],ecx
    4858:	0c 07                	or     al,0x7
    485a:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    485d:	00 00                	add    BYTE PTR [rax],al
    485f:	00 28                	add    BYTE PTR [rax],ch
    4861:	00 00                	add    BYTE PTR [rax],al
    4863:	00 c4                	add    ah,al
    4865:	00 00                	add    BYTE PTR [rax],al
    4867:	00 28                	add    BYTE PTR [rax],ch
    4869:	cc                   	int3
    486a:	ff                   	(bad)
    486b:	ff a9 00 00 00 00    	jmp    FWORD PTR [rcx+0x0]
    4871:	45 0e                	rex.RB (bad)
    4873:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4879:	42 8e 03             	rex.X mov es,WORD PTR [rbx]
    487c:	47 8d 04 8c          	lea    r8d,[r12+r9*4]
    4880:	05 4c 83 06 02       	add    eax,0x206834c
    4885:	86 0a                	xchg   BYTE PTR [rdx],cl
    4887:	0c 07                	or     al,0x7
    4889:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    488c:	30 00                	xor    BYTE PTR [rax],al
    488e:	00 00                	add    BYTE PTR [rax],al
    4890:	f0 00 00             	lock add BYTE PTR [rax],al
    4893:	00 ac cc ff ff cd 00 	add    BYTE PTR [rsp+rcx*8+0xcdffff],ch
    489a:	00 00                	add    BYTE PTR [rax],al
    489c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    489f:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    48a5:	83 03 44             	add    DWORD PTR [rbx],0x44
    48a8:	0e                   	(bad)
    48a9:	20 4d 0e             	and    BYTE PTR [rbp+0xe],cl
    48ac:	60                   	(bad)
    48ad:	02 67 0e             	add    ah,BYTE PTR [rdi+0xe]
    48b0:	20 6b 0a             	and    BYTE PTR [rbx+0xa],ch
    48b3:	0e                   	(bad)
    48b4:	18 43 0e             	sbb    BYTE PTR [rbx+0xe],al
    48b7:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    48ba:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    48bd:	00 00                	add    BYTE PTR [rax],al
    48bf:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
    48c2:	00 00                	add    BYTE PTR [rax],al
    48c4:	24 01                	and    al,0x1
    48c6:	00 00                	add    BYTE PTR [rax],al
    48c8:	48 cd ff             	rex.W int 0xff
    48cb:	ff                   	call   (bad)
    48cc:	db 00                	fild   DWORD PTR [rax]
    48ce:	00 00                	add    BYTE PTR [rax],al
    48d0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    48d3:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    48d9:	83 03 44             	add    DWORD PTR [rbx],0x44
    48dc:	0e                   	(bad)
    48dd:	20 4d 0e             	and    BYTE PTR [rbp+0xe],cl
    48e0:	60                   	(bad)
    48e1:	02 67 0e             	add    ah,BYTE PTR [rdi+0xe]
    48e4:	20 6c 0a 0e          	and    BYTE PTR [rdx+rcx*1+0xe],ch
    48e8:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    48eb:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    48ee:	08 44 0b 47          	or     BYTE PTR [rbx+rcx*1+0x47],al
    48f2:	0a 0e                	or     cl,BYTE PTR [rsi]
    48f4:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    48f7:	10 43 0e             	adc    BYTE PTR [rbx+0xe],al
    48fa:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    48fd:	00 00                	add    BYTE PTR [rax],al
    48ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    4902:	00 00                	add    BYTE PTR [rax],al
    4904:	64 01 00             	add    DWORD PTR fs:[rax],eax
    4907:	00 e8                	add    al,ch
    4909:	cd ff                	int    0xff
    490b:	ff c6                	inc    esi
    490d:	00 00                	add    BYTE PTR [rax],al
    490f:	00 00                	add    BYTE PTR [rax],al
    4911:	48 0e                	rex.W (bad)
    4913:	20 60 0e             	and    BYTE PTR [rax+0xe],ah
    4916:	60                   	(bad)
    4917:	02 7b 0e             	add    bh,BYTE PTR [rbx+0xe]
    491a:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
    491d:	20 00                	and    BYTE PTR [rax],al
    491f:	00 10                	add    BYTE PTR [rax],dl
    4921:	00 00                	add    BYTE PTR [rax],al
    4923:	00 84 01 00 00 98 ce 	add    BYTE PTR [rcx+rax*1-0x31680000],al
    492a:	ff                   	(bad)
    492b:	ff 2f                	jmp    FWORD PTR [rdi]
    492d:	00 00                	add    BYTE PTR [rax],al
    492f:	00 00                	add    BYTE PTR [rax],al
    4931:	50                   	push   rax
    4932:	0e                   	(bad)
    4933:	10 28                	adc    BYTE PTR [rax],ch
    4935:	00 00                	add    BYTE PTR [rax],al
    4937:	00 98 01 00 00 b4    	add    BYTE PTR [rax-0x4bffffff],bl
    493d:	ce                   	(bad)
    493e:	ff                   	(bad)
    493f:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    4942:	00 00                	add    BYTE PTR [rax],al
    4944:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    4947:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    494d:	83 03 44             	add    DWORD PTR [rbx],0x44
    4950:	0e                   	(bad)
    4951:	20 78 0a             	and    BYTE PTR [rax+0xa],bh
    4954:	0e                   	(bad)
    4955:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4958:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    495b:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    495e:	00 00                	add    BYTE PTR [rax],al
    4960:	44 00 00             	add    BYTE PTR [rax],r8b
    4963:	00 c4                	add    ah,al
    4965:	01 00                	add    DWORD PTR [rax],eax
    4967:	00 f8                	add    al,bh
    4969:	ce                   	(bad)
    496a:	ff                   	(bad)
    496b:	ff 4c 02 00          	dec    DWORD PTR [rdx+rax*1+0x0]
    496f:	00 00                	add    BYTE PTR [rax],al
    4971:	49 0c 0a             	rex.WB or al,0xa
    4974:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4978:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    497b:	4a 0f 03 76 58       	rex.WX lsl rsi,WORD PTR [rsi+0x58]
    4980:	06                   	(bad)
    4981:	10 0f                	adc    BYTE PTR [rdi],cl
    4983:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4986:	10 0e                	adc    BYTE PTR [rsi],cl
    4988:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    498b:	10 0d 02 76 68 10    	adc    BYTE PTR [rip+0x10687602],cl        # 1068bf93 <_end+0x10685f7b>
    4991:	0c 02                	or     al,0x2
    4993:	76 60                	jbe    49f5 <__GNU_EH_FRAME_HDR+0x36d>
    4995:	48 10 03             	rex.W adc BYTE PTR [rbx],al
    4998:	02 76 50             	add    dh,BYTE PTR [rsi+0x50]
    499b:	03 f3                	add    esi,ebx
    499d:	01 0a                	add    DWORD PTR [rdx],ecx
    499f:	0c 0a                	or     al,0xa
    49a1:	00 4d 0c             	add    BYTE PTR [rbp+0xc],cl
    49a4:	07                   	(bad)
    49a5:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    49a8:	10 00                	adc    BYTE PTR [rax],al
    49aa:	00 00                	add    BYTE PTR [rax],al
    49ac:	0c 02                	or     al,0x2
    49ae:	00 00                	add    BYTE PTR [rax],al
    49b0:	00 d1                	add    cl,dl
    49b2:	ff                   	(bad)
    49b3:	ff 07                	inc    DWORD PTR [rdi]
    49b5:	00 00                	add    BYTE PTR [rax],al
    49b7:	00 00                	add    BYTE PTR [rax],al
    49b9:	00 00                	add    BYTE PTR [rax],al
    49bb:	00 10                	add    BYTE PTR [rax],dl
    49bd:	00 00                	add    BYTE PTR [rax],al
    49bf:	00 20                	add    BYTE PTR [rax],ah
    49c1:	02 00                	add    al,BYTE PTR [rax]
    49c3:	00 fc                	add    ah,bh
    49c5:	d0 ff                	sar    bh,1
    49c7:	ff 07                	inc    DWORD PTR [rdi]
    49c9:	00 00                	add    BYTE PTR [rax],al
    49cb:	00 00                	add    BYTE PTR [rax],al
    49cd:	00 00                	add    BYTE PTR [rax],al
    49cf:	00 10                	add    BYTE PTR [rax],dl
    49d1:	00 00                	add    BYTE PTR [rax],al
    49d3:	00 34 02             	add    BYTE PTR [rdx+rax*1],dh
    49d6:	00 00                	add    BYTE PTR [rax],al
    49d8:	f8                   	clc
    49d9:	d0 ff                	sar    bh,1
    49db:	ff 59 00             	call   FWORD PTR [rcx+0x0]
    49de:	00 00                	add    BYTE PTR [rax],al
    49e0:	00 00                	add    BYTE PTR [rax],al
    49e2:	00 00                	add    BYTE PTR [rax],al
    49e4:	10 00                	adc    BYTE PTR [rax],al
    49e6:	00 00                	add    BYTE PTR [rax],al
    49e8:	48 02 00             	rex.W add al,BYTE PTR [rax]
    49eb:	00 44 d1 ff          	add    BYTE PTR [rcx+rdx*8-0x1],al
    49ef:	ff 07                	inc    DWORD PTR [rdi]
    49f1:	00 00                	add    BYTE PTR [rax],al
    49f3:	00 00                	add    BYTE PTR [rax],al
    49f5:	00 00                	add    BYTE PTR [rax],al
    49f7:	00 10                	add    BYTE PTR [rax],dl
    49f9:	00 00                	add    BYTE PTR [rax],al
    49fb:	00 5c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],bl
    49ff:	00 40 d1             	add    BYTE PTR [rax-0x2f],al
    4a02:	ff                   	(bad)
    4a03:	ff 07                	inc    DWORD PTR [rdi]
    4a05:	00 00                	add    BYTE PTR [rax],al
    4a07:	00 00                	add    BYTE PTR [rax],al
    4a09:	00 00                	add    BYTE PTR [rax],al
    4a0b:	00 10                	add    BYTE PTR [rax],dl
    4a0d:	00 00                	add    BYTE PTR [rax],al
    4a0f:	00 70 02             	add    BYTE PTR [rax+0x2],dh
    4a12:	00 00                	add    BYTE PTR [rax],al
    4a14:	3c d1                	cmp    al,0xd1
    4a16:	ff                   	(bad)
    4a17:	ff 06                	inc    DWORD PTR [rsi]
    4a19:	02 00                	add    al,BYTE PTR [rax]
    4a1b:	00 00                	add    BYTE PTR [rax],al
    4a1d:	00 00                	add    BYTE PTR [rax],al
    4a1f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    4a22:	00 00                	add    BYTE PTR [rax],al
    4a24:	84 02                	test   BYTE PTR [rdx],al
    4a26:	00 00                	add    BYTE PTR [rax],al
    4a28:	38 d3                	cmp    bl,dl
    4a2a:	ff                   	(bad)
    4a2b:	ff 05 01 00 00 00    	inc    DWORD PTR [rip+0x1]        # 4a32 <__GNU_EH_FRAME_HDR+0x3aa>
    4a31:	00 00                	add    BYTE PTR [rax],al
    4a33:	00 00                	add    BYTE PTR [rax],al
    4a35:	00 00                	add    BYTE PTR [rax],al
    4a37:	00 18                	add    BYTE PTR [rax],bl
    4a39:	00 00                	add    BYTE PTR [rax],al
    4a3b:	00 9c 02 00 00 30 d4 	add    BYTE PTR [rdx+rax*1-0x2bd00000],bl
    4a42:	ff                   	(bad)
    4a43:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 4a49 <__GNU_EH_FRAME_HDR+0x3c1>
    4a49:	41 0e                	rex.B (bad)
    4a4b:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    4a4e:	08 5e 0e             	or     BYTE PTR [rsi+0xe],bl
    4a51:	10 00                	adc    BYTE PTR [rax],al
    4a53:	00 18                	add    BYTE PTR [rax],bl
    4a55:	00 00                	add    BYTE PTR [rax],al
    4a57:	00 b8 02 00 00 44    	add    BYTE PTR [rax+0x44000002],bh
    4a5d:	d4                   	(bad)
    4a5e:	ff                   	(bad)
    4a5f:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    4a62:	00 00                	add    BYTE PTR [rax],al
    4a64:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    4a67:	10 83 02 02 69 0e    	adc    BYTE PTR [rbx+0xe690202],al
    4a6d:	08 00                	or     BYTE PTR [rax],al
    4a6f:	00 48 00             	add    BYTE PTR [rax+0x0],cl
    4a72:	00 00                	add    BYTE PTR [rax],al
    4a74:	d4                   	(bad)
    4a75:	02 00                	add    al,BYTE PTR [rax]
    4a77:	00 98 d4 ff ff 9c    	add    BYTE PTR [rax-0x6300002c],bl
    4a7d:	01 00                	add    DWORD PTR [rax],eax
    4a7f:	00 00                	add    BYTE PTR [rax],al
    4a81:	46 0e                	rex.RX (bad)
    4a83:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    4a89:	8e 03                	mov    es,WORD PTR [rbx]
    4a8b:	42 0e                	rex.X (bad)
    4a8d:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    4a93:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff863058da <_end+0xffffffff862ff8c2>
    4a99:	06                   	(bad)
    4a9a:	41 0e                	rex.B (bad)
    4a9c:	38 83 07 44 0e 40    	cmp    BYTE PTR [rbx+0x400e4407],al
    4aa2:	02 66 0a             	add    ah,BYTE PTR [rsi+0xa]
    4aa5:	0e                   	(bad)
    4aa6:	38 43 0e             	cmp    BYTE PTR [rbx+0xe],al
    4aa9:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4aac:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4aaf:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4ab2:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4ab5:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4ab8:	08 44 0b 00          	or     BYTE PTR [rbx+rcx*1+0x0],al
    4abc:	20 00                	and    BYTE PTR [rax],al
    4abe:	00 00                	add    BYTE PTR [rax],al
    4ac0:	20 03                	and    BYTE PTR [rbx],al
    4ac2:	00 00                	add    BYTE PTR [rax],al
    4ac4:	ec                   	in     al,dx
    4ac5:	d5 ff ff b4 00 00 00 	ud0    r30,QWORD PTR [r24+r24*1+0x48000000]
    4acc:	00 48 
    4ace:	0e                   	(bad)
    4acf:	20 02                	and    BYTE PTR [rdx],al
    4ad1:	4d 0a 0e             	rex.WRB or r9b,BYTE PTR [r14]
    4ad4:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4ad7:	74 0a                	je     4ae3 <__GNU_EH_FRAME_HDR+0x45b>
    4ad9:	0e                   	(bad)
    4ada:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4add:	00 00                	add    BYTE PTR [rax],al
    4adf:	00 18                	add    BYTE PTR [rax],bl
    4ae1:	00 00                	add    BYTE PTR [rax],al
    4ae3:	00 44 03 00          	add    BYTE PTR [rbx+rax*1+0x0],al
    4ae7:	00 88 d6 ff ff 5b    	add    BYTE PTR [rax+0x5bffffd6],cl
    4aed:	00 00                	add    BYTE PTR [rax],al
    4aef:	00 00                	add    BYTE PTR [rax],al
    4af1:	48 0e                	rex.W (bad)
    4af3:	20 02                	and    BYTE PTR [rdx],al
    4af5:	49 0a 0e             	rex.WB or cl,BYTE PTR [r14]
    4af8:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4afb:	00 18                	add    BYTE PTR [rax],bl
    4afd:	00 00                	add    BYTE PTR [rax],al
    4aff:	00 60 03             	add    BYTE PTR [rax+0x3],ah
    4b02:	00 00                	add    BYTE PTR [rax],al
    4b04:	cc                   	int3
    4b05:	d6                   	(bad)
    4b06:	ff                   	(bad)
    4b07:	ff                   	(bad)
    4b08:	3e 00 00             	ds add BYTE PTR [rax],al
    4b0b:	00 00                	add    BYTE PTR [rax],al
    4b0d:	45 0e                	rex.RB (bad)
    4b0f:	10 83 02 59 0a 0e    	adc    BYTE PTR [rbx+0xe0a5902],al
    4b15:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b18:	24 00                	and    al,0x0
    4b1a:	00 00                	add    BYTE PTR [rax],al
    4b1c:	7c 03                	jl     4b21 <__GNU_EH_FRAME_HDR+0x499>
    4b1e:	00 00                	add    BYTE PTR [rax],al
    4b20:	f0 d6                	lock (bad)
    4b22:	ff                   	(bad)
    4b23:	ff 08                	dec    DWORD PTR [rax]
    4b25:	01 00                	add    DWORD PTR [rax],eax
    4b27:	00 00                	add    BYTE PTR [rax],al
    4b29:	45 0e                	rex.RB (bad)
    4b2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4b31:	4c 8d 03             	lea    r8,[rbx]
    4b34:	8c 04 83             	mov    WORD PTR [rbx+rax*4],es
    4b37:	05 02 c1 0a 0c       	add    eax,0xc0ac102
    4b3c:	07                   	(bad)
    4b3d:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4b40:	2c 00                	sub    al,0x0
    4b42:	00 00                	add    BYTE PTR [rax],al
    4b44:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    4b45:	03 00                	add    eax,DWORD PTR [rax]
    4b47:	00 d8                	add    al,bl
    4b49:	d7                   	xlat   BYTE PTR ds:[rbx]
    4b4a:	ff                   	(bad)
    4b4b:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    4b4e:	00 00                	add    BYTE PTR [rax],al
    4b50:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4b53:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4b5a:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4b5d:	20 83 04 77 0a 0e    	and    BYTE PTR [rbx+0xe0a7704],al
    4b63:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4b66:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b69:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b6c:	00 00                	add    BYTE PTR [rax],al
    4b6e:	00 00                	add    BYTE PTR [rax],al
    4b70:	44 00 00             	add    BYTE PTR [rax],r8b
    4b73:	00 d4                	add    ah,dl
    4b75:	03 00                	add    eax,DWORD PTR [rax]
    4b77:	00 18                	add    BYTE PTR [rax],bl
    4b79:	d8 ff                	fdivr  st,st(7)
    4b7b:	ff 63 04             	jmp    QWORD PTR [rbx+0x4]
    4b7e:	00 00                	add    BYTE PTR [rax],al
    4b80:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4b83:	0a 00                	or     al,BYTE PTR [rax]
    4b85:	4c 10 06             	rex.WR adc BYTE PTR [rsi],r8b
    4b88:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4b8b:	4a 0f 03 76 58       	rex.WX lsl rsi,WORD PTR [rsi+0x58]
    4b90:	06                   	(bad)
    4b91:	10 0f                	adc    BYTE PTR [rdi],cl
    4b93:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4b96:	10 0e                	adc    BYTE PTR [rsi],cl
    4b98:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4b9b:	10 0d 02 76 68 10    	adc    BYTE PTR [rip+0x10687602],cl        # 1068c1a3 <_end+0x1068618b>
    4ba1:	0c 02                	or     al,0x2
    4ba3:	76 60                	jbe    4c05 <__GNU_EH_FRAME_HDR+0x57d>
    4ba5:	45 10 03             	adc    BYTE PTR [r11],r8b
    4ba8:	02 76 50             	add    dh,BYTE PTR [rsi+0x50]
    4bab:	03 dd                	add    ebx,ebp
    4bad:	03 0a                	add    ecx,DWORD PTR [rdx]
    4baf:	0c 0a                	or     al,0xa
    4bb1:	00 4d 0c             	add    BYTE PTR [rbp+0xc],cl
    4bb4:	07                   	(bad)
    4bb5:	08 42 0b             	or     BYTE PTR [rdx+0xb],al
    4bb8:	48 00 00             	rex.W add BYTE PTR [rax],al
    4bbb:	00 1c 04             	add    BYTE PTR [rsp+rax*1],bl
    4bbe:	00 00                	add    BYTE PTR [rax],al
    4bc0:	40 dc ff             	rex fdiv st(7),st
    4bc3:	ff                   	(bad)
    4bc4:	b9 04 00 00 00       	mov    ecx,0x4
    4bc9:	46 0e                	rex.RX (bad)
    4bcb:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4bd1:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4bd5:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4bd8:	46 0f 03 76 68       	rex.RX lsl r14d,WORD PTR [rsi+0x68]
    4bdd:	06                   	(bad)
    4bde:	10 0f                	adc    BYTE PTR [rdi],cl
    4be0:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4be3:	10 0e                	adc    BYTE PTR [rsi],cl
    4be5:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4be8:	4d 10 0c 02          	rex.WRB adc BYTE PTR [r10+rax*1],r9b
    4bec:	76 60                	jbe    4c4e <__GNU_EH_FRAME_HDR+0x5c6>
    4bee:	10 03                	adc    BYTE PTR [rbx],al
    4bf0:	02 76 58             	add    dh,BYTE PTR [rsi+0x58]
    4bf3:	03 d1                	add    edx,ecx
    4bf5:	03 0a                	add    ecx,DWORD PTR [rdx]
    4bf7:	0c 0d                	or     al,0xd
    4bf9:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4bfc:	07                   	(bad)
    4bfd:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c00:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4c03:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    4c07:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    4c0a:	00 00                	add    BYTE PTR [rax],al
    4c0c:	b4 e0                	mov    ah,0xe0
    4c0e:	ff                   	(bad)
    4c0f:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    4c12:	00 00                	add    BYTE PTR [rax],al
    4c14:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4c17:	10 8f 02 49 0e 18    	adc    BYTE PTR [rdi+0x180e4902],cl
    4c1d:	8e 03                	mov    es,WORD PTR [rbx]
    4c1f:	45 0e                	rex.RB (bad)
    4c21:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    4c27:	8c 05 44 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e44],es        # ffffffff86305a71 <_end+0xffffffff862ffa59>
    4c2d:	06                   	(bad)
    4c2e:	47 0e                	rex.RXB (bad)
    4c30:	38 83 07 44 0e 40    	cmp    BYTE PTR [rbx+0x400e4407],al
    4c36:	68 0e 38 44 0e       	push   0xe44380e
    4c3b:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4c3e:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4c41:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4c44:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4c47:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c4a:	08 00                	or     BYTE PTR [rax],al
    4c4c:	48 00 00             	rex.W add BYTE PTR [rax],al
    4c4f:	00 b0 04 00 00 dc    	add    BYTE PTR [rax-0x23fffffc],dh
    4c55:	e0 ff                	loopne 4c56 <__GNU_EH_FRAME_HDR+0x5ce>
    4c57:	ff ce                	dec    esi
    4c59:	07                   	(bad)
    4c5a:	00 00                	add    BYTE PTR [rax],al
    4c5c:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4c5f:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    4c65:	8e 03                	mov    es,WORD PTR [rbx]
    4c67:	42 0e                	rex.X (bad)
    4c69:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    4c6f:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86305ab6 <_end+0xffffffff862ffa9e>
    4c75:	06                   	(bad)
    4c76:	41 0e                	rex.B (bad)
    4c78:	38 83 07 44 0e 70    	cmp    BYTE PTR [rbx+0x700e4407],al
    4c7e:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    4c81:	0a 0e                	or     cl,BYTE PTR [rsi]
    4c83:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    4c86:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4c89:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4c8c:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4c8f:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4c92:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c95:	08 43 0b             	or     BYTE PTR [rbx+0xb],al
    4c98:	2c 00                	sub    al,0x0
    4c9a:	00 00                	add    BYTE PTR [rax],al
    4c9c:	fc                   	cld
    4c9d:	04 00                	add    al,0x0
    4c9f:	00 60 e8             	add    BYTE PTR [rax-0x18],ah
    4ca2:	ff                   	(bad)
    4ca3:	ff 5b 01             	call   FWORD PTR [rbx+0x1]
    4ca6:	00 00                	add    BYTE PTR [rax],al
    4ca8:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4cab:	0a 00                	or     al,BYTE PTR [rax]
    4cad:	4c 10 06             	rex.WR adc BYTE PTR [rsi],r8b
    4cb0:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4cb3:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4cb8:	06                   	(bad)
    4cb9:	02 f0                	add    dh,al
    4cbb:	0a 0c 0a             	or     cl,BYTE PTR [rdx+rcx*1]
    4cbe:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4cc1:	07                   	(bad)
    4cc2:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4cc5:	00 00                	add    BYTE PTR [rax],al
    4cc7:	00 50 00             	add    BYTE PTR [rax+0x0],dl
    4cca:	00 00                	add    BYTE PTR [rax],al
    4ccc:	2c 05                	sub    al,0x5
    4cce:	00 00                	add    BYTE PTR [rax],al
    4cd0:	90                   	nop
    4cd1:	e9 ff ff 1c 03       	jmp    31d4cd5 <_end+0x31cecbd>
    4cd6:	00 00                	add    BYTE PTR [rax],al
    4cd8:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4cdb:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4ce1:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4ce5:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4ce8:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4ced:	06                   	(bad)
    4cee:	03 8b 02 0a 0c 0d    	add    ecx,DWORD PTR [rbx+0xd0c0a02]
    4cf4:	00 4a 0c             	add    BYTE PTR [rdx+0xc],cl
    4cf7:	07                   	(bad)
    4cf8:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4cfb:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4cfe:	49 0a 0c 0d 00 4a 0c 	rex.WB or cl,BYTE PTR [rcx*1+0x70c4a00]
    4d05:	07 
    4d06:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d09:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4d0c:	55                   	push   rbp
    4d0d:	0a 0c 0d 00 49 0c 07 	or     cl,BYTE PTR [rcx*1+0x70c4900]
    4d14:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d17:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
	...

0000000000004d1c <__FRAME_END__>:
    4d1c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000005cd8 <__frame_dummy_init_array_entry>:
    5cd8:	f0 12 00             	lock adc al,BYTE PTR [rax]
    5cdb:	00 00                	add    BYTE PTR [rax],al
    5cdd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000005ce0 <__do_global_dtors_aux_fini_array_entry>:
    5ce0:	b0 12                	mov    al,0x12
    5ce2:	00 00                	add    BYTE PTR [rax],al
    5ce4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000005ce8 <_DYNAMIC>:
    5ce8:	01 00                	add    DWORD PTR [rax],eax
    5cea:	00 00                	add    BYTE PTR [rax],al
    5cec:	00 00                	add    BYTE PTR [rax],al
    5cee:	00 00                	add    BYTE PTR [rax],al
    5cf0:	55                   	push   rbp
    5cf1:	01 00                	add    DWORD PTR [rax],eax
    5cf3:	00 00                	add    BYTE PTR [rax],al
    5cf5:	00 00                	add    BYTE PTR [rax],al
    5cf7:	00 01                	add    BYTE PTR [rcx],al
    5cf9:	00 00                	add    BYTE PTR [rax],al
    5cfb:	00 00                	add    BYTE PTR [rax],al
    5cfd:	00 00                	add    BYTE PTR [rax],al
    5cff:	00 64 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ah
    5d03:	00 00                	add    BYTE PTR [rax],al
    5d05:	00 00                	add    BYTE PTR [rax],al
    5d07:	00 01                	add    BYTE PTR [rcx],al
    5d09:	00 00                	add    BYTE PTR [rax],al
    5d0b:	00 00                	add    BYTE PTR [rax],al
    5d0d:	00 00                	add    BYTE PTR [rax],al
    5d0f:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
    5d12:	00 00                	add    BYTE PTR [rax],al
    5d14:	00 00                	add    BYTE PTR [rax],al
    5d16:	00 00                	add    BYTE PTR [rax],al
    5d18:	0c 00                	or     al,0x0
    5d1a:	00 00                	add    BYTE PTR [rax],al
    5d1c:	00 00                	add    BYTE PTR [rax],al
    5d1e:	00 00                	add    BYTE PTR [rax],al
    5d20:	00 10                	add    BYTE PTR [rax],dl
    5d22:	00 00                	add    BYTE PTR [rax],al
    5d24:	00 00                	add    BYTE PTR [rax],al
    5d26:	00 00                	add    BYTE PTR [rax],al
    5d28:	0d 00 00 00 00       	or     eax,0x0
    5d2d:	00 00                	add    BYTE PTR [rax],al
    5d2f:	00 94 39 00 00 00 00 	add    BYTE PTR [rcx+rdi*1+0x0],dl
    5d36:	00 00                	add    BYTE PTR [rax],al
    5d38:	19 00                	sbb    DWORD PTR [rax],eax
    5d3a:	00 00                	add    BYTE PTR [rax],al
    5d3c:	00 00                	add    BYTE PTR [rax],al
    5d3e:	00 00                	add    BYTE PTR [rax],al
    5d40:	d8 5c 00 00          	fcomp  DWORD PTR [rax+rax*1+0x0]
    5d44:	00 00                	add    BYTE PTR [rax],al
    5d46:	00 00                	add    BYTE PTR [rax],al
    5d48:	1b 00                	sbb    eax,DWORD PTR [rax]
    5d4a:	00 00                	add    BYTE PTR [rax],al
    5d4c:	00 00                	add    BYTE PTR [rax],al
    5d4e:	00 00                	add    BYTE PTR [rax],al
    5d50:	08 00                	or     BYTE PTR [rax],al
    5d52:	00 00                	add    BYTE PTR [rax],al
    5d54:	00 00                	add    BYTE PTR [rax],al
    5d56:	00 00                	add    BYTE PTR [rax],al
    5d58:	1a 00                	sbb    al,BYTE PTR [rax]
    5d5a:	00 00                	add    BYTE PTR [rax],al
    5d5c:	00 00                	add    BYTE PTR [rax],al
    5d5e:	00 00                	add    BYTE PTR [rax],al
    5d60:	e0 5c                	loopne 5dbe <_DYNAMIC+0xd6>
    5d62:	00 00                	add    BYTE PTR [rax],al
    5d64:	00 00                	add    BYTE PTR [rax],al
    5d66:	00 00                	add    BYTE PTR [rax],al
    5d68:	1c 00                	sbb    al,0x0
    5d6a:	00 00                	add    BYTE PTR [rax],al
    5d6c:	00 00                	add    BYTE PTR [rax],al
    5d6e:	00 00                	add    BYTE PTR [rax],al
    5d70:	08 00                	or     BYTE PTR [rax],al
    5d72:	00 00                	add    BYTE PTR [rax],al
    5d74:	00 00                	add    BYTE PTR [rax],al
    5d76:	00 00                	add    BYTE PTR [rax],al
    5d78:	f5                   	cmc
    5d79:	fe                   	(bad)
    5d7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5d7d:	00 00                	add    BYTE PTR [rax],al
    5d7f:	00 a0 03 00 00 00    	add    BYTE PTR [rax+0x3],ah
    5d85:	00 00                	add    BYTE PTR [rax],al
    5d87:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5d8d <_DYNAMIC+0xa5>
    5d8d:	00 00                	add    BYTE PTR [rax],al
    5d8f:	00 b0 06 00 00 00    	add    BYTE PTR [rax+0x6],dh
    5d95:	00 00                	add    BYTE PTR [rax],al
    5d97:	00 06                	add    BYTE PTR [rsi],al
    5d99:	00 00                	add    BYTE PTR [rax],al
    5d9b:	00 00                	add    BYTE PTR [rax],al
    5d9d:	00 00                	add    BYTE PTR [rax],al
    5d9f:	00 c8                	add    al,cl
    5da1:	03 00                	add    eax,DWORD PTR [rax]
    5da3:	00 00                	add    BYTE PTR [rax],al
    5da5:	00 00                	add    BYTE PTR [rax],al
    5da7:	00 0a                	add    BYTE PTR [rdx],cl
    5da9:	00 00                	add    BYTE PTR [rax],al
    5dab:	00 00                	add    BYTE PTR [rax],al
    5dad:	00 00                	add    BYTE PTR [rax],al
    5daf:	00 d5                	add    ch,dl
    5db1:	01 00                	add    DWORD PTR [rax],eax
    5db3:	00 00                	add    BYTE PTR [rax],al
    5db5:	00 00                	add    BYTE PTR [rax],al
    5db7:	00 0b                	add    BYTE PTR [rbx],cl
    5db9:	00 00                	add    BYTE PTR [rax],al
    5dbb:	00 00                	add    BYTE PTR [rax],al
    5dbd:	00 00                	add    BYTE PTR [rax],al
    5dbf:	00 18                	add    BYTE PTR [rax],bl
    5dc1:	00 00                	add    BYTE PTR [rax],al
    5dc3:	00 00                	add    BYTE PTR [rax],al
    5dc5:	00 00                	add    BYTE PTR [rax],al
    5dc7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 5dcd <_DYNAMIC+0xe5>
	...
    5dd5:	00 00                	add    BYTE PTR [rax],al
    5dd7:	00 03                	add    BYTE PTR [rbx],al
    5dd9:	00 00                	add    BYTE PTR [rax],al
    5ddb:	00 00                	add    BYTE PTR [rax],al
    5ddd:	00 00                	add    BYTE PTR [rax],al
    5ddf:	00 f8                	add    al,bh
    5de1:	5e                   	pop    rsi
    5de2:	00 00                	add    BYTE PTR [rax],al
    5de4:	00 00                	add    BYTE PTR [rax],al
    5de6:	00 00                	add    BYTE PTR [rax],al
    5de8:	02 00                	add    al,BYTE PTR [rax]
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	00 00                	add    BYTE PTR [rax],al
    5dee:	00 00                	add    BYTE PTR [rax],al
    5df0:	58                   	pop    rax
    5df1:	02 00                	add    al,BYTE PTR [rax]
    5df3:	00 00                	add    BYTE PTR [rax],al
    5df5:	00 00                	add    BYTE PTR [rax],al
    5df7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    5dfa:	00 00                	add    BYTE PTR [rax],al
    5dfc:	00 00                	add    BYTE PTR [rax],al
    5dfe:	00 00                	add    BYTE PTR [rax],al
    5e00:	07                   	(bad)
    5e01:	00 00                	add    BYTE PTR [rax],al
    5e03:	00 00                	add    BYTE PTR [rax],al
    5e05:	00 00                	add    BYTE PTR [rax],al
    5e07:	00 17                	add    BYTE PTR [rdi],dl
    5e09:	00 00                	add    BYTE PTR [rax],al
    5e0b:	00 00                	add    BYTE PTR [rax],al
    5e0d:	00 00                	add    BYTE PTR [rax],al
    5e0f:	00 48 0a             	add    BYTE PTR [rax+0xa],cl
    5e12:	00 00                	add    BYTE PTR [rax],al
    5e14:	00 00                	add    BYTE PTR [rax],al
    5e16:	00 00                	add    BYTE PTR [rax],al
    5e18:	07                   	(bad)
    5e19:	00 00                	add    BYTE PTR [rax],al
    5e1b:	00 00                	add    BYTE PTR [rax],al
    5e1d:	00 00                	add    BYTE PTR [rax],al
    5e1f:	00 88 09 00 00 00    	add    BYTE PTR [rax+0x9],cl
    5e25:	00 00                	add    BYTE PTR [rax],al
    5e27:	00 08                	add    BYTE PTR [rax],cl
    5e29:	00 00                	add    BYTE PTR [rax],al
    5e2b:	00 00                	add    BYTE PTR [rax],al
    5e2d:	00 00                	add    BYTE PTR [rax],al
    5e2f:	00 c0                	add    al,al
    5e31:	00 00                	add    BYTE PTR [rax],al
    5e33:	00 00                	add    BYTE PTR [rax],al
    5e35:	00 00                	add    BYTE PTR [rax],al
    5e37:	00 09                	add    BYTE PTR [rcx],cl
    5e39:	00 00                	add    BYTE PTR [rax],al
    5e3b:	00 00                	add    BYTE PTR [rax],al
    5e3d:	00 00                	add    BYTE PTR [rax],al
    5e3f:	00 18                	add    BYTE PTR [rax],bl
    5e41:	00 00                	add    BYTE PTR [rax],al
    5e43:	00 00                	add    BYTE PTR [rax],al
    5e45:	00 00                	add    BYTE PTR [rax],al
    5e47:	00 1e                	add    BYTE PTR [rsi],bl
    5e49:	00 00                	add    BYTE PTR [rax],al
    5e4b:	00 00                	add    BYTE PTR [rax],al
    5e4d:	00 00                	add    BYTE PTR [rax],al
    5e4f:	00 08                	add    BYTE PTR [rax],cl
    5e51:	00 00                	add    BYTE PTR [rax],al
    5e53:	00 00                	add    BYTE PTR [rax],al
    5e55:	00 00                	add    BYTE PTR [rax],al
    5e57:	00 fb                	add    bl,bh
    5e59:	ff                   	(bad)
    5e5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e5d:	00 00                	add    BYTE PTR [rax],al
    5e5f:	00 01                	add    BYTE PTR [rcx],al
    5e61:	00 00                	add    BYTE PTR [rax],al
    5e63:	08 00                	or     BYTE PTR [rax],al
    5e65:	00 00                	add    BYTE PTR [rax],al
    5e67:	00 fe                	add    dh,bh
    5e69:	ff                   	(bad)
    5e6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e6d:	00 00                	add    BYTE PTR [rax],al
    5e6f:	00 c8                	add    al,cl
    5e71:	08 00                	or     BYTE PTR [rax],al
    5e73:	00 00                	add    BYTE PTR [rax],al
    5e75:	00 00                	add    BYTE PTR [rax],al
    5e77:	00 ff                	add    bh,bh
    5e79:	ff                   	(bad)
    5e7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e7d:	00 00                	add    BYTE PTR [rax],al
    5e7f:	00 03                	add    BYTE PTR [rbx],al
    5e81:	00 00                	add    BYTE PTR [rax],al
    5e83:	00 00                	add    BYTE PTR [rax],al
    5e85:	00 00                	add    BYTE PTR [rax],al
    5e87:	00 f0                	add    al,dh
    5e89:	ff                   	(bad)
    5e8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e8d:	00 00                	add    BYTE PTR [rax],al
    5e8f:	00 86 08 00 00 00    	add    BYTE PTR [rsi+0x8],al
    5e95:	00 00                	add    BYTE PTR [rax],al
    5e97:	00 f9                	add    cl,bh
    5e99:	ff                   	(bad)
    5e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e9d:	00 00                	add    BYTE PTR [rax],al
    5e9f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000005ef8 <_GLOBAL_OFFSET_TABLE_>:
    5ef8:	e8 5c 00 00 00       	call   5f59 <_GLOBAL_OFFSET_TABLE_+0x61>
	...
    5f0d:	00 00                	add    BYTE PTR [rax],al
    5f0f:	00 36                	add    BYTE PTR [rsi],dh
    5f11:	10 00                	adc    BYTE PTR [rax],al
    5f13:	00 00                	add    BYTE PTR [rax],al
    5f15:	00 00                	add    BYTE PTR [rax],al
    5f17:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    5f1a:	00 00                	add    BYTE PTR [rax],al
    5f1c:	00 00                	add    BYTE PTR [rax],al
    5f1e:	00 00                	add    BYTE PTR [rax],al
    5f20:	56                   	push   rsi
    5f21:	10 00                	adc    BYTE PTR [rax],al
    5f23:	00 00                	add    BYTE PTR [rax],al
    5f25:	00 00                	add    BYTE PTR [rax],al
    5f27:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
    5f2a:	00 00                	add    BYTE PTR [rax],al
    5f2c:	00 00                	add    BYTE PTR [rax],al
    5f2e:	00 00                	add    BYTE PTR [rax],al
    5f30:	76 10                	jbe    5f42 <_GLOBAL_OFFSET_TABLE_+0x4a>
    5f32:	00 00                	add    BYTE PTR [rax],al
    5f34:	00 00                	add    BYTE PTR [rax],al
    5f36:	00 00                	add    BYTE PTR [rax],al
    5f38:	86 10                	xchg   BYTE PTR [rax],dl
    5f3a:	00 00                	add    BYTE PTR [rax],al
    5f3c:	00 00                	add    BYTE PTR [rax],al
    5f3e:	00 00                	add    BYTE PTR [rax],al
    5f40:	96                   	xchg   esi,eax
    5f41:	10 00                	adc    BYTE PTR [rax],al
    5f43:	00 00                	add    BYTE PTR [rax],al
    5f45:	00 00                	add    BYTE PTR [rax],al
    5f47:	00 a6 10 00 00 00    	add    BYTE PTR [rsi+0x10],ah
    5f4d:	00 00                	add    BYTE PTR [rax],al
    5f4f:	00 b6 10 00 00 00    	add    BYTE PTR [rsi+0x10],dh
    5f55:	00 00                	add    BYTE PTR [rax],al
    5f57:	00 c6                	add    dh,al
    5f59:	10 00                	adc    BYTE PTR [rax],al
    5f5b:	00 00                	add    BYTE PTR [rax],al
    5f5d:	00 00                	add    BYTE PTR [rax],al
    5f5f:	00 d6                	add    dh,dl
    5f61:	10 00                	adc    BYTE PTR [rax],al
    5f63:	00 00                	add    BYTE PTR [rax],al
    5f65:	00 00                	add    BYTE PTR [rax],al
    5f67:	00 e6                	add    dh,ah
    5f69:	10 00                	adc    BYTE PTR [rax],al
    5f6b:	00 00                	add    BYTE PTR [rax],al
    5f6d:	00 00                	add    BYTE PTR [rax],al
    5f6f:	00 f6                	add    dh,dh
    5f71:	10 00                	adc    BYTE PTR [rax],al
    5f73:	00 00                	add    BYTE PTR [rax],al
    5f75:	00 00                	add    BYTE PTR [rax],al
    5f77:	00 06                	add    BYTE PTR [rsi],al
    5f79:	11 00                	adc    DWORD PTR [rax],eax
    5f7b:	00 00                	add    BYTE PTR [rax],al
    5f7d:	00 00                	add    BYTE PTR [rax],al
    5f7f:	00 16                	add    BYTE PTR [rsi],dl
    5f81:	11 00                	adc    DWORD PTR [rax],eax
    5f83:	00 00                	add    BYTE PTR [rax],al
    5f85:	00 00                	add    BYTE PTR [rax],al
    5f87:	00 26                	add    BYTE PTR [rsi],ah
    5f89:	11 00                	adc    DWORD PTR [rax],eax
    5f8b:	00 00                	add    BYTE PTR [rax],al
    5f8d:	00 00                	add    BYTE PTR [rax],al
    5f8f:	00 36                	add    BYTE PTR [rsi],dh
    5f91:	11 00                	adc    DWORD PTR [rax],eax
    5f93:	00 00                	add    BYTE PTR [rax],al
    5f95:	00 00                	add    BYTE PTR [rax],al
    5f97:	00 46 11             	add    BYTE PTR [rsi+0x11],al
    5f9a:	00 00                	add    BYTE PTR [rax],al
    5f9c:	00 00                	add    BYTE PTR [rax],al
    5f9e:	00 00                	add    BYTE PTR [rax],al
    5fa0:	56                   	push   rsi
    5fa1:	11 00                	adc    DWORD PTR [rax],eax
    5fa3:	00 00                	add    BYTE PTR [rax],al
    5fa5:	00 00                	add    BYTE PTR [rax],al
    5fa7:	00 66 11             	add    BYTE PTR [rsi+0x11],ah
    5faa:	00 00                	add    BYTE PTR [rax],al
    5fac:	00 00                	add    BYTE PTR [rax],al
    5fae:	00 00                	add    BYTE PTR [rax],al
    5fb0:	76 11                	jbe    5fc3 <_GLOBAL_OFFSET_TABLE_+0xcb>
    5fb2:	00 00                	add    BYTE PTR [rax],al
    5fb4:	00 00                	add    BYTE PTR [rax],al
    5fb6:	00 00                	add    BYTE PTR [rax],al
    5fb8:	86 11                	xchg   BYTE PTR [rcx],dl
    5fba:	00 00                	add    BYTE PTR [rax],al
    5fbc:	00 00                	add    BYTE PTR [rax],al
    5fbe:	00 00                	add    BYTE PTR [rax],al
    5fc0:	96                   	xchg   esi,eax
    5fc1:	11 00                	adc    DWORD PTR [rax],eax
    5fc3:	00 00                	add    BYTE PTR [rax],al
    5fc5:	00 00                	add    BYTE PTR [rax],al
    5fc7:	00 a6 11 00 00 00    	add    BYTE PTR [rsi+0x11],ah
    5fcd:	00 00                	add    BYTE PTR [rax],al
    5fcf:	00 b6 11 00 00 00    	add    BYTE PTR [rsi+0x11],dh
	...

Disassembly of section .data:

0000000000006000 <__data_start>:
	...

0000000000006008 <__dso_handle>:
    6008:	08 60 00             	or     BYTE PTR [rax+0x0],ah
    600b:	00 00                	add    BYTE PTR [rax],al
    600d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x304>
   a:	74 75                	je     81 <__abi_tag-0x2fb>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	33 2e                	xor    ebp,DWORD PTR [rsi]
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 36 75 62 75    	xor    BYTE PTR [rip+0x75627536],ch        # 7562754e <_end+0x75621536>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2ec>
  1b:	32 7e 32             	xor    bh,BYTE PTR [rsi+0x32]
  1e:	34 2e                	xor    al,0x2e
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	33 2e                	xor    ebp,DWORD PTR [rsi]
  27:	33 2e                	xor    ebp,DWORD PTR [rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	d0 11                	rcl    BYTE PTR [rcx],1
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	33 00                	xor    eax,DWORD PTR [rax]
	...
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	2c 00                	sub    al,0x0
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 00                	add    al,BYTE PTR [rax]
  36:	1b 09                	sbb    ecx,DWORD PTR [rcx]
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	08 00                	or     BYTE PTR [rax],al
  3c:	00 00                	add    BYTE PTR [rax],al
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 13                	add    BYTE PTR [rbx],dl
  42:	00 00                	add    BYTE PTR [rax],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	ac                   	lods   al,BYTE PTR ds:[rsi]
  49:	07                   	(bad)
	...
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	2c 00                	sub    al,0x0
  62:	00 00                	add    BYTE PTR [rax],al
  64:	02 00                	add    al,BYTE PTR [rax]
  66:	ea                   	(bad)
  67:	24 00                	and    al,0x0
  69:	00 08                	add    BYTE PTR [rax],cl
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 b0 1a 00 00 00    	add    BYTE PTR [rax+0x1a],dh
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 b5 03 00 00 00    	add    BYTE PTR [rbp+0x3],dh
	...
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  92:	00 00                	add    BYTE PTR [rax],al
  94:	02 00                	add    al,BYTE PTR [rax]
  96:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
  99:	00 08                	add    BYTE PTR [rax],cl
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 70 1e             	add    BYTE PTR [rax+0x1e],dh
  a2:	00 00                	add    BYTE PTR [rax],al
  a4:	00 00                	add    BYTE PTR [rax],al
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	9e                   	sahf
  a9:	03 00                	add    eax,DWORD PTR [rax]
	...
  bf:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	02 00                	add    al,BYTE PTR [rax]
  c6:	ca 45 00             	retf   0x45
  c9:	00 08                	add    BYTE PTR [rax],cl
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 10                	add    BYTE PTR [rax],dl
  d1:	22 00                	and    al,BYTE PTR [rax]
  d3:	00 00                	add    BYTE PTR [rax],al
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
	...
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	2c 00                	sub    al,0x0
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	02 00                	add    al,BYTE PTR [rax]
  f6:	74 54                	je     14c <__abi_tag-0x230>
  f8:	00 00                	add    BYTE PTR [rax],al
  fa:	08 00                	or     BYTE PTR [rax],al
  fc:	00 00                	add    BYTE PTR [rax],al
  fe:	00 00                	add    BYTE PTR [rax],al
 100:	90                   	nop
 101:	23 00                	and    eax,DWORD PTR [rax]
 103:	00 00                	add    BYTE PTR [rax],al
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 ec                	add    ah,ch
 109:	15 00 00 00 00       	adc    eax,0x0
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	17                   	(bad)
       1:	09 00                	or     DWORD PTR [rax],eax
       3:	00 05 00 01 08 00    	add    BYTE PTR [rip+0x80100],al        # 80109 <_end+0x7a0f1>
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 15 33 00 00 00    	add    BYTE PTR [rip+0x33],dl        # 44 <__abi_tag-0x338>
      11:	21 14 00             	and    DWORD PTR [rax+rax*1],edx
      14:	00 00                	add    BYTE PTR [rax],al
      16:	00 00                	add    BYTE PTR [rax],al
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	1f                   	(bad)
	...
      27:	00 00                	add    BYTE PTR [rax],al
      29:	00 08                	add    BYTE PTR [rax],cl
      2b:	2f                   	(bad)
      2c:	0b 00                	or     eax,DWORD PTR [rax]
      2e:	00 03                	add    BYTE PTR [rbx],al
      30:	d6                   	(bad)
      31:	17                   	(bad)
      32:	36 00 00             	ss add BYTE PTR [rax],al
      35:	00 03                	add    BYTE PTR [rbx],al
      37:	08 07                	or     BYTE PTR [rdi],al
      39:	a0 01 00 00 03 04 07 	movabs al,ds:0x1a5070403000001
      40:	a5 01 
      42:	00 00                	add    BYTE PTR [rax],al
      44:	16                   	(bad)
      45:	08 03                	or     BYTE PTR [rbx],al
      47:	01 08                	add    DWORD PTR [rax],ecx
      49:	24 02                	and    al,0x2
      4b:	00 00                	add    BYTE PTR [rax],al
      4d:	03 02                	add    eax,DWORD PTR [rdx]
      4f:	07                   	(bad)
      50:	73 02                	jae    54 <__abi_tag-0x328>
      52:	00 00                	add    BYTE PTR [rax],al
      54:	03 01                	add    eax,DWORD PTR [rcx]
      56:	06                   	(bad)
      57:	26 02 00             	es add al,BYTE PTR [rax]
      5a:	00 03                	add    BYTE PTR [rbx],al
      5c:	02 05 05 01 00 00    	add    al,BYTE PTR [rip+0x105]        # 167 <__abi_tag-0x215>
      62:	17                   	(bad)
      63:	04 05                	add    al,0x5
      65:	69 6e 74 00 09 62 00 	imul   ebp,DWORD PTR [rsi+0x74],0x620900
      6c:	00 00                	add    BYTE PTR [rax],al
      6e:	08 53 01             	or     BYTE PTR [rbx+0x1],dl
      71:	00 00                	add    BYTE PTR [rax],al
      73:	04 2a                	add    al,0x2a
      75:	16                   	(bad)
      76:	3d 00 00 00 03       	cmp    eax,0x3000000
      7b:	08 05 92 01 00 00    	or     BYTE PTR [rip+0x192],al        # 213 <__abi_tag-0x169>
      81:	05 86 00 00 00       	add    eax,0x86
      86:	03 01                	add    eax,DWORD PTR [rcx]
      88:	06                   	(bad)
      89:	2d 02 00 00 09       	sub    eax,0x9000002
      8e:	86 00                	xchg   BYTE PTR [rax],al
      90:	00 00                	add    BYTE PTR [rax],al
      92:	05 8d 00 00 00       	add    eax,0x8d
      97:	03 08                	add    ecx,DWORD PTR [rax]
      99:	05 8d 01 00 00       	add    eax,0x18d
      9e:	03 10                	add    edx,DWORD PTR [rax]
      a0:	04 18                	add    al,0x18
      a2:	02 00                	add    al,BYTE PTR [rax]
      a4:	00 03                	add    BYTE PTR [rbx],al
      a6:	08 07                	or     BYTE PTR [rdi],al
      a8:	9b                   	fwait
      a9:	01 00                	add    DWORD PTR [rax],eax
      ab:	00 03                	add    BYTE PTR [rbx],al
      ad:	04 04                	add    al,0x4
      af:	80 01 00             	add    BYTE PTR [rcx],0x0
      b2:	00 0c 08             	add    BYTE PTR [rax+rcx*1],cl
      b5:	3c e3                	cmp    al,0xe3
      b7:	02 00                	add    al,BYTE PTR [rax]
      b9:	00 d6                	add    dh,dl
      bb:	00 00                	add    BYTE PTR [rax],al
      bd:	00 0d 6e 02 00 00    	add    BYTE PTR [rip+0x26e],cl        # 331 <__abi_tag-0x4b>
      c3:	3d 09 62 00 00       	cmp    eax,0x6209
      c8:	00 0e                	add    BYTE PTR [rsi],cl
      ca:	72 65                	jb     131 <__abi_tag-0x24b>
      cc:	6d                   	ins    DWORD PTR es:[rdi],dx
      cd:	00 3e                	add    BYTE PTR [rsi],bh
      cf:	09 62 00             	or     DWORD PTR [rdx+0x0],esp
      d2:	00 00                	add    BYTE PTR [rax],al
      d4:	04 00                	add    al,0x0
      d6:	08 e4                	or     ah,ah
      d8:	02 00                	add    al,BYTE PTR [rax]
      da:	00 02                	add    BYTE PTR [rdx],al
      dc:	3f                   	(bad)
      dd:	05 b3 00 00 00       	add    eax,0xb3
      e2:	0c 10                	or     al,0x10
      e4:	44 09 00             	or     DWORD PTR [rax],r8d
      e7:	00 00                	add    BYTE PTR [rax],al
      e9:	05 01 00 00 0d       	add    eax,0xd000001
      ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      ef:	02 00                	add    al,BYTE PTR [rax]
      f1:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
      f4:	7a 00                	jp     f6 <__abi_tag-0x286>
      f6:	00 00                	add    BYTE PTR [rax],al
      f8:	0e                   	(bad)
      f9:	72 65                	jb     160 <__abi_tag-0x21c>
      fb:	6d                   	ins    DWORD PTR es:[rdi],dx
      fc:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
      ff:	7a 00                	jp     101 <__abi_tag-0x27b>
     101:	00 00                	add    BYTE PTR [rax],al
     103:	08 00                	or     BYTE PTR [rax],al
     105:	08 0a                	or     BYTE PTR [rdx],cl
     107:	00 00                	add    BYTE PTR [rax],al
     109:	00 02                	add    BYTE PTR [rdx],al
     10b:	47 05 e2 00 00 00    	rex.RXB add eax,0xe2
     111:	0c 10                	or     al,0x10
     113:	4e d4                	rex.WRX (bad)
     115:	01 00                	add    DWORD PTR [rax],eax
     117:	00 34 01             	add    BYTE PTR [rcx+rax*1],dh
     11a:	00 00                	add    BYTE PTR [rax],al
     11c:	0d 6e 02 00 00       	or     eax,0x26e
     121:	4f 13 97 00 00 00 0e 	rex.WRXB adc r10,QWORD PTR [r15+0xe000000]
     128:	72 65                	jb     18f <__abi_tag-0x1ed>
     12a:	6d                   	ins    DWORD PTR es:[rdi],dx
     12b:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     12e:	97                   	xchg   edi,eax
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	00 08                	add    BYTE PTR [rax],cl
     133:	00 08                	add    BYTE PTR [rax],cl
     135:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
     139:	02 51 05             	add    dl,BYTE PTR [rcx+0x5]
     13c:	11 01                	adc    DWORD PTR [rcx],eax
     13e:	00 00                	add    BYTE PTR [rax],al
     140:	18 d5                	sbb    ch,dl
     142:	02 00                	add    al,BYTE PTR [rax]
     144:	00 02                	add    BYTE PTR [rdx],al
     146:	b4 03                	mov    ah,0x3
     148:	0f 4d 01             	cmovge eax,DWORD PTR [rcx]
     14b:	00 00                	add    BYTE PTR [rax],al
     14d:	05 52 01 00 00       	add    eax,0x152
     152:	19 62 00             	sbb    DWORD PTR [rdx+0x0],esp
     155:	00 00                	add    BYTE PTR [rax],al
     157:	66 01 00             	add    WORD PTR [rax],ax
     15a:	00 01                	add    BYTE PTR [rcx],al
     15c:	66 01 00             	add    WORD PTR [rax],ax
     15f:	00 01                	add    BYTE PTR [rcx],al
     161:	66 01 00             	add    WORD PTR [rax],ax
     164:	00 00                	add    BYTE PTR [rax],al
     166:	05 6b 01 00 00       	add    eax,0x16b
     16b:	1a 1b                	sbb    bl,BYTE PTR [rbx]
     16d:	73 74                	jae    1e3 <__abi_tag-0x199>
     16f:	64 00 0e             	add    BYTE PTR fs:[rsi],cl
     172:	32 01                	xor    al,BYTE PTR [rcx]
     174:	0b 3c 03             	or     edi,DWORD PTR [rbx+rax*1]
     177:	00 00                	add    BYTE PTR [rax],al
     179:	02 05 83 0b d6 00    	add    al,BYTE PTR [rip+0xd60b83]        # d60d02 <_end+0xd5acea>
     17f:	00 00                	add    BYTE PTR [rax],al
     181:	02 05 84 0b 05 01    	add    al,BYTE PTR [rip+0x1050b84]        # 1050d0b <_end+0x104acf3>
     187:	00 00                	add    BYTE PTR [rax],al
     189:	02 05 8a 0b 3c 03    	add    al,BYTE PTR [rip+0x33c0b8a]        # 33c0d19 <_end+0x33bad01>
     18f:	00 00                	add    BYTE PTR [rax],al
     191:	02 05 8d 0b 58 03    	add    al,BYTE PTR [rip+0x3580b8d]        # 3580d24 <_end+0x357ad0c>
     197:	00 00                	add    BYTE PTR [rax],al
     199:	02 05 90 0b 73 03    	add    al,BYTE PTR [rip+0x3730b90]        # 3730d2f <_end+0x372ad17>
     19f:	00 00                	add    BYTE PTR [rax],al
     1a1:	02 05 91 0b 90 03    	add    al,BYTE PTR [rip+0x3900b91]        # 3900d38 <_end+0x38fad20>
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	02 05 92 0b b0 03    	add    al,BYTE PTR [rip+0x3b00b92]        # 3b00d41 <_end+0x3afad29>
     1af:	00 00                	add    BYTE PTR [rax],al
     1b1:	02 05 93 0b c6 03    	add    al,BYTE PTR [rip+0x3c60b93]        # 3c60d4a <_end+0x3c5ad32>
     1b7:	00 00                	add    BYTE PTR [rax],al
     1b9:	02 05 95 0b f0 03    	add    al,BYTE PTR [rip+0x3f00b95]        # 3f00d54 <_end+0x3efad3c>
     1bf:	00 00                	add    BYTE PTR [rax],al
     1c1:	02 05 98 0b 0c 04    	add    al,BYTE PTR [rip+0x40c0b98]        # 40c0d5f <_end+0x40bad47>
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	02 05 9a 0b 22 04    	add    al,BYTE PTR [rip+0x4220b9a]        # 4220d69 <_end+0x421ad51>
     1cf:	00 00                	add    BYTE PTR [rax],al
     1d1:	02 05 9d 0b 3d 04    	add    al,BYTE PTR [rip+0x43d0b9d]        # 43d0d74 <_end+0x43cad5c>
     1d7:	00 00                	add    BYTE PTR [rax],al
     1d9:	02 05 9e 0b 58 04    	add    al,BYTE PTR [rip+0x4580b9e]        # 4580d7d <_end+0x457ad65>
     1df:	00 00                	add    BYTE PTR [rax],al
     1e1:	02 05 9f 0b 89 04    	add    al,BYTE PTR [rip+0x4890b9f]        # 4890d86 <_end+0x488ad6e>
     1e7:	00 00                	add    BYTE PTR [rax],al
     1e9:	02 05 a1 0b a9 04    	add    al,BYTE PTR [rip+0x4a90ba1]        # 4a90d90 <_end+0x4a8ad78>
     1ef:	00 00                	add    BYTE PTR [rax],al
     1f1:	02 05 a4 0b c9 04    	add    al,BYTE PTR [rip+0x4c90ba4]        # 4c90d9b <_end+0x4c8ad83>
     1f7:	00 00                	add    BYTE PTR [rax],al
     1f9:	02 05 a7 0b dc 04    	add    al,BYTE PTR [rip+0x4dc0ba7]        # 4dc0da6 <_end+0x4dbad8e>
     1ff:	00 00                	add    BYTE PTR [rax],al
     201:	02 05 a9 0b e9 04    	add    al,BYTE PTR [rip+0x4e90ba9]        # 4e90db0 <_end+0x4e8ad98>
     207:	00 00                	add    BYTE PTR [rax],al
     209:	02 05 aa 0b fa 04    	add    al,BYTE PTR [rip+0x4fa0baa]        # 4fa0db9 <_end+0x4f9ada1>
     20f:	00 00                	add    BYTE PTR [rax],al
     211:	02 05 ab 0b 1a 05    	add    al,BYTE PTR [rip+0x51a0bab]        # 51a0dc2 <_end+0x519adaa>
     217:	00 00                	add    BYTE PTR [rax],al
     219:	02 05 ac 0b 3d 05    	add    al,BYTE PTR [rip+0x53d0bac]        # 53d0dcb <_end+0x53cadb3>
     21f:	00 00                	add    BYTE PTR [rax],al
     221:	02 05 ad 0b 60 05    	add    al,BYTE PTR [rip+0x5600bad]        # 5600dd4 <_end+0x55fadbc>
     227:	00 00                	add    BYTE PTR [rax],al
     229:	02 05 af 0b 76 05    	add    al,BYTE PTR [rip+0x5760baf]        # 5760dde <_end+0x575adc6>
     22f:	00 00                	add    BYTE PTR [rax],al
     231:	02 05 b0 0b 9b 05    	add    al,BYTE PTR [rip+0x59b0bb0]        # 59b0de7 <_end+0x59aadcf>
     237:	00 00                	add    BYTE PTR [rax],al
     239:	02 05 f4 16 34 01    	add    al,BYTE PTR [rip+0x13416f4]        # 1341933 <_end+0x133b91b>
     23f:	00 00                	add    BYTE PTR [rax],al
     241:	02 05 f9 16 fb 05    	add    al,BYTE PTR [rip+0x5fb16f9]        # 5fb1940 <_end+0x5fab928>
     247:	00 00                	add    BYTE PTR [rax],al
     249:	02 05 fa 16 15 06    	add    al,BYTE PTR [rip+0x61516fa]        # 6151949 <_end+0x614b931>
     24f:	00 00                	add    BYTE PTR [rax],al
     251:	02 05 fc 16 30 06    	add    al,BYTE PTR [rip+0x63016fc]        # 6301953 <_end+0x62fb93b>
     257:	00 00                	add    BYTE PTR [rax],al
     259:	02 05 fd 16 8c 06    	add    al,BYTE PTR [rip+0x68c16fd]        # 68c195c <_end+0x68bb944>
     25f:	00 00                	add    BYTE PTR [rax],al
     261:	02 05 fe 16 46 06    	add    al,BYTE PTR [rip+0x64616fe]        # 6461965 <_end+0x645b94d>
     267:	00 00                	add    BYTE PTR [rax],al
     269:	02 05 ff 16 69 06    	add    al,BYTE PTR [rip+0x66916ff]        # 669196e <_end+0x668b956>
     26f:	00 00                	add    BYTE PTR [rax],al
     271:	1c 05                	sbb    al,0x5
     273:	00 01                	add    BYTE PTR [rcx],al
     275:	16                   	(bad)
     276:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     277:	06                   	(bad)
     278:	00 00                	add    BYTE PTR [rax],al
     27a:	07                   	(bad)
     27b:	61                   	(bad)
     27c:	62 73 00 89 15       	(bad)
     281:	03 00                	add    eax,DWORD PTR [rax]
     283:	00 ea                	add    dl,ch
     285:	06                   	(bad)
     286:	00 00                	add    BYTE PTR [rax],al
     288:	92                   	xchg   edx,eax
     289:	02 00                	add    al,BYTE PTR [rax]
     28b:	00 01                	add    BYTE PTR [rcx],al
     28d:	ea                   	(bad)
     28e:	06                   	(bad)
     28f:	00 00                	add    BYTE PTR [rax],al
     291:	00 07                	add    BYTE PTR [rdi],al
     293:	61                   	(bad)
     294:	62 73 00 55 1b       	(bad)
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	00 f9                	add    cl,bh
     29d:	06                   	(bad)
     29e:	00 00                	add    BYTE PTR [rax],al
     2a0:	aa                   	stos   BYTE PTR es:[rdi],al
     2a1:	02 00                	add    al,BYTE PTR [rax]
     2a3:	00 01                	add    BYTE PTR [rcx],al
     2a5:	f9                   	stc
     2a6:	06                   	(bad)
     2a7:	00 00                	add    BYTE PTR [rax],al
     2a9:	00 07                	add    BYTE PTR [rdi],al
     2ab:	61                   	(bad)
     2ac:	62 73 00 4f 01       	(bad)
     2b1:	03 00                	add    eax,DWORD PTR [rax]
     2b3:	00 9e 00 00 00 c2    	add    BYTE PTR [rsi-0x3e000000],bl
     2b9:	02 00                	add    al,BYTE PTR [rax]
     2bb:	00 01                	add    BYTE PTR [rcx],al
     2bd:	9e                   	sahf
     2be:	00 00                	add    BYTE PTR [rax],al
     2c0:	00 00                	add    BYTE PTR [rax],al
     2c2:	07                   	(bad)
     2c3:	61                   	(bad)
     2c4:	62 73 00 4b 0b       	(bad)
     2c9:	03 00                	add    eax,DWORD PTR [rax]
     2cb:	00 ac 00 00 00 da 02 	add    BYTE PTR [rax+rax*1+0x2da0000],ch
     2d2:	00 00                	add    BYTE PTR [rax],al
     2d4:	01 ac 00 00 00 00 07 	add    DWORD PTR [rax+rax*1+0x7000000],ebp
     2db:	61                   	(bad)
     2dc:	62 73 00 47 f7       	(bad)
     2e1:	02 00                	add    al,BYTE PTR [rax]
     2e3:	00 89 03 00 00 f2    	add    BYTE PTR [rcx-0xdfffffd],cl
     2e9:	02 00                	add    al,BYTE PTR [rax]
     2eb:	00 01                	add    BYTE PTR [rcx],al
     2ed:	89 03                	mov    DWORD PTR [rbx],eax
     2ef:	00 00                	add    BYTE PTR [rax],al
     2f1:	00 07                	add    BYTE PTR [rdi],al
     2f3:	61                   	(bad)
     2f4:	62 73 00 3d eb       	(bad)
     2f9:	00 00                	add    BYTE PTR [rax],al
     2fb:	00 97 00 00 00 0a    	add    BYTE PTR [rdi+0xa000000],dl
     301:	03 00                	add    eax,DWORD PTR [rax]
     303:	00 01                	add    BYTE PTR [rcx],al
     305:	97                   	xchg   edi,eax
     306:	00 00                	add    BYTE PTR [rax],al
     308:	00 00                	add    BYTE PTR [rax],al
     30a:	07                   	(bad)
     30b:	61                   	(bad)
     30c:	62 73 00 38 11       	(bad)
     311:	00 00                	add    BYTE PTR [rax],al
     313:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
     316:	00 00                	add    BYTE PTR [rax],al
     318:	22 03                	and    al,BYTE PTR [rbx]
     31a:	00 00                	add    BYTE PTR [rax],al
     31c:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     31f:	00 00                	add    BYTE PTR [rax],al
     321:	00 0f                	add    BYTE PTR [rdi],cl
     323:	64 69 76 00 b5 1e 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x11eb5
     32a:	00 
     32b:	00 05 01 00 00 01    	add    BYTE PTR [rip+0x1000001],al        # 1000332 <_end+0xffa31a>
     331:	7a 00                	jp     333 <__abi_tag-0x49>
     333:	00 00                	add    BYTE PTR [rax],al
     335:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     338:	00 00                	add    BYTE PTR [rax],al
     33a:	00 00                	add    BYTE PTR [rax],al
     33c:	04 17                	add    al,0x17
     33e:	01 00                	add    DWORD PTR [rax],eax
     340:	00 de                	add    dh,bl
     342:	02 0c 62             	add    cl,BYTE PTR [rdx+riz*2]
     345:	00 00                	add    BYTE PTR [rax],al
     347:	00 52 03             	add    BYTE PTR [rdx+0x3],dl
     34a:	00 00                	add    BYTE PTR [rax],al
     34c:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     34f:	00 00                	add    BYTE PTR [rax],al
     351:	00 05 57 03 00 00    	add    BYTE PTR [rip+0x357],al        # 6ae <__abi_tag+0x332>
     357:	1d 1e dd 00 00       	sbb    eax,0xdd1e
     35c:	00 02                	add    BYTE PTR [rdx],al
     35e:	e3 02                	jrcxz  362 <__abi_tag-0x1a>
     360:	12 dd                	adc    bl,ch
     362:	00 00                	add    BYTE PTR [rax],al
     364:	00 62 00             	add    BYTE PTR [rdx+0x0],ah
     367:	00 00                	add    BYTE PTR [rax],al
     369:	73 03                	jae    36e <__abi_tag-0xe>
     36b:	00 00                	add    BYTE PTR [rax],al
     36d:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     370:	00 00                	add    BYTE PTR [rax],al
     372:	00 06                	add    BYTE PTR [rsi],al
     374:	f2 01 00             	repnz add DWORD PTR [rax],eax
     377:	00 07                	add    BYTE PTR [rdi],al
     379:	19 01                	sbb    DWORD PTR [rcx],eax
     37b:	89 03                	mov    DWORD PTR [rbx],eax
     37d:	00 00                	add    BYTE PTR [rax],al
     37f:	89 03                	mov    DWORD PTR [rbx],eax
     381:	00 00                	add    BYTE PTR [rax],al
     383:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     389:	03 08                	add    ecx,DWORD PTR [rax]
     38b:	04 1d                	add    al,0x1d
     38d:	02 00                	add    al,BYTE PTR [rax]
     38f:	00 1f                	add    BYTE PTR [rdi],bl
     391:	f7 01 00 00 02 e1    	test   DWORD PTR [rcx],0xe1020000
     397:	01 01                	add    DWORD PTR [rcx],eax
     399:	62                   	(bad)
     39a:	00 00                	add    BYTE PTR [rax],al
     39c:	00 03                	add    BYTE PTR [rbx],al
     39e:	b0 03                	mov    al,0x3
     3a0:	00 00                	add    BYTE PTR [rax],al
     3a2:	20 ea                	and    dl,ch
     3a4:	02 00                	add    al,BYTE PTR [rax]
     3a6:	00 02                	add    BYTE PTR [rdx],al
     3a8:	e1 01                	loope  3ab <__abi_tag+0x2f>
     3aa:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     3b0:	04 01                	add    al,0x1
     3b2:	02 00                	add    al,BYTE PTR [rax]
     3b4:	00 e6                	add    dh,ah
     3b6:	01 01                	add    DWORD PTR [rcx],eax
     3b8:	7a 00                	jp     3ba <__abi_tag+0x3e>
     3ba:	00 00                	add    BYTE PTR [rax],al
     3bc:	c6 03 00             	mov    BYTE PTR [rbx],0x0
     3bf:	00 01                	add    BYTE PTR [rcx],al
     3c1:	92                   	xchg   edx,eax
     3c2:	00 00                	add    BYTE PTR [rax],al
     3c4:	00 00                	add    BYTE PTR [rax],al
     3c6:	06                   	(bad)
     3c7:	0f 01 00             	sgdt   [rax]
     3ca:	00 08                	add    BYTE PTR [rax],cl
     3cc:	14 01                	adc    al,0x1
     3ce:	44 00 00             	add    BYTE PTR [rax],r8b
     3d1:	00 f0                	add    al,dh
     3d3:	03 00                	add    eax,DWORD PTR [rax]
     3d5:	00 01                	add    BYTE PTR [rcx],al
     3d7:	66 01 00             	add    WORD PTR [rax],ax
     3da:	00 01                	add    BYTE PTR [rcx],al
     3dc:	66 01 00             	add    WORD PTR [rax],ax
     3df:	00 01                	add    BYTE PTR [rcx],al
     3e1:	2a 00                	sub    al,BYTE PTR [rax]
     3e3:	00 00                	add    BYTE PTR [rax],al
     3e5:	01 2a                	add    DWORD PTR [rdx],ebp
     3e7:	00 00                	add    BYTE PTR [rax],al
     3e9:	00 01                	add    BYTE PTR [rcx],al
     3eb:	40 01 00             	rex add DWORD PTR [rax],eax
     3ee:	00 00                	add    BYTE PTR [rax],al
     3f0:	21 64 69 76          	and    DWORD PTR [rcx+rbp*2+0x76],esp
     3f4:	00 02                	add    BYTE PTR [rdx],al
     3f6:	e0 03                	loopne 3fb <__abi_tag+0x7f>
     3f8:	0e                   	(bad)
     3f9:	d6                   	(bad)
     3fa:	00 00                	add    BYTE PTR [rax],al
     3fc:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
     3ff:	00 00                	add    BYTE PTR [rax],al
     401:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     404:	00 00                	add    BYTE PTR [rax],al
     406:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     409:	00 00                	add    BYTE PTR [rax],al
     40b:	00 04 6a             	add    BYTE PTR [rdx+rbp*2],al
     40e:	01 00                	add    DWORD PTR [rax],eax
     410:	00 05 03 0e 81 00    	add    BYTE PTR [rip+0x810e03],al        # 811219 <_end+0x80b201>
     416:	00 00                	add    BYTE PTR [rax],al
     418:	22 04 00             	and    al,BYTE PTR [rax+rax*1]
     41b:	00 01                	add    BYTE PTR [rcx],al
     41d:	92                   	xchg   edx,eax
     41e:	00 00                	add    BYTE PTR [rax],al
     420:	00 00                	add    BYTE PTR [rax],al
     422:	04 c9                	add    al,0xc9
     424:	02 00                	add    al,BYTE PTR [rax]
     426:	00 e2                	add    dl,ah
     428:	03 0f                	add    ecx,DWORD PTR [rdi]
     42a:	05 01 00 00 3d       	add    eax,0x3d000001
     42f:	04 00                	add    al,0x0
     431:	00 01                	add    BYTE PTR [rcx],al
     433:	7a 00                	jp     435 <__abi_tag+0xb9>
     435:	00 00                	add    BYTE PTR [rax],al
     437:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     43a:	00 00                	add    BYTE PTR [rax],al
     43c:	00 04 58             	add    BYTE PTR [rax+rbx*2],al
     43f:	02 00                	add    al,BYTE PTR [rax]
     441:	00 26                	add    BYTE PTR [rsi],ah
     443:	04 0c                	add    al,0xc
     445:	62                   	(bad)
     446:	00 00                	add    BYTE PTR [rax],al
     448:	00 58 04             	add    BYTE PTR [rax+0x4],bl
     44b:	00 00                	add    BYTE PTR [rax],al
     44d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     453:	2a 00                	sub    al,BYTE PTR [rax]
     455:	00 00                	add    BYTE PTR [rax],al
     457:	00 06                	add    BYTE PTR [rsi],al
     459:	5e                   	pop    rsi
     45a:	02 00                	add    al,BYTE PTR [rax]
     45c:	00 09                	add    BYTE PTR [rcx],cl
     45e:	75 01                	jne    461 <__abi_tag+0xe5>
     460:	2a 00                	sub    al,BYTE PTR [rax]
     462:	00 00                	add    BYTE PTR [rax],al
     464:	78 04                	js     46a <__abi_tag+0xee>
     466:	00 00                	add    BYTE PTR [rax],al
     468:	01 78 04             	add    DWORD PTR [rax+0x4],edi
     46b:	00 00                	add    BYTE PTR [rax],al
     46d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     473:	2a 00                	sub    al,BYTE PTR [rax]
     475:	00 00                	add    BYTE PTR [rax],al
     477:	00 05 7d 04 00 00    	add    BYTE PTR [rip+0x47d],al        # 8fa <__abi_tag+0x57e>
     47d:	03 04 05 86 02 00 00 	add    eax,DWORD PTR [rax*1+0x286]
     484:	09 7d 04             	or     DWORD PTR [rbp+0x4],edi
     487:	00 00                	add    BYTE PTR [rax],al
     489:	04 86                	add    al,0x86
     48b:	01 00                	add    DWORD PTR [rax],eax
     48d:	00 29                	add    BYTE PTR [rcx],ch
     48f:	04 0c                	add    al,0xc
     491:	62                   	(bad)
     492:	00 00                	add    BYTE PTR [rax],al
     494:	00 a9 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],ch
     49a:	78 04                	js     4a0 <__abi_tag+0x124>
     49c:	00 00                	add    BYTE PTR [rax],al
     49e:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     4a4:	2a 00                	sub    al,BYTE PTR [rax]
     4a6:	00 00                	add    BYTE PTR [rax],al
     4a8:	00 10                	add    BYTE PTR [rax],dl
     4aa:	25 00 00 00 ca       	and    eax,0xca000000
     4af:	03 c9                	add    ecx,ecx
     4b1:	04 00                	add    al,0x0
     4b3:	00 01                	add    BYTE PTR [rcx],al
     4b5:	44 00 00             	add    BYTE PTR [rax],r8b
     4b8:	00 01                	add    BYTE PTR [rcx],al
     4ba:	2a 00                	sub    al,BYTE PTR [rax]
     4bc:	00 00                	add    BYTE PTR [rax],al
     4be:	01 2a                	add    DWORD PTR [rdx],ebp
     4c0:	00 00                	add    BYTE PTR [rax],al
     4c2:	00 01                	add    BYTE PTR [rcx],al
     4c4:	40 01 00             	rex add DWORD PTR [rax],eax
     4c7:	00 00                	add    BYTE PTR [rax],al
     4c9:	22 e0                	and    ah,al
     4cb:	00 00                	add    BYTE PTR [rax],al
     4cd:	00 02                	add    BYTE PTR [rdx],al
     4cf:	fa                   	cli
     4d0:	02 0d dc 04 00 00    	add    cl,BYTE PTR [rip+0x4dc]        # 9b2 <__abi_tag+0x636>
     4d6:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     4d9:	00 00                	add    BYTE PTR [rax],al
     4db:	00 23                	add    BYTE PTR [rbx],ah
     4dd:	f2 02 00             	repnz add al,BYTE PTR [rax]
     4e0:	00 02                	add    BYTE PTR [rdx],al
     4e2:	3d 02 0c 62 00       	cmp    eax,0x620c02
     4e7:	00 00                	add    BYTE PTR [rax],al
     4e9:	10 f1                	adc    cl,dh
     4eb:	02 00                	add    al,BYTE PTR [rax]
     4ed:	00 3f                	add    BYTE PTR [rdi],bh
     4ef:	02 fa                	add    bh,dl
     4f1:	04 00                	add    al,0x0
     4f3:	00 01                	add    BYTE PTR [rcx],al
     4f5:	3d 00 00 00 00       	cmp    eax,0x0
     4fa:	06                   	(bad)
     4fb:	c5 01 00             	(bad)
     4fe:	00 02                	add    BYTE PTR [rdx],al
     500:	76 0f                	jbe    511 <__abi_tag+0x195>
     502:	89 03                	mov    DWORD PTR [rbx],eax
     504:	00 00                	add    BYTE PTR [rax],al
     506:	15 05 00 00 01       	adc    eax,0x1000005
     50b:	92                   	xchg   edx,eax
     50c:	00 00                	add    BYTE PTR [rax],al
     50e:	00 01                	add    BYTE PTR [rcx],al
     510:	15 05 00 00 00       	adc    eax,0x5
     515:	05 81 00 00 00       	add    eax,0x81
     51a:	0a fe                	or     bh,dh
     51c:	00 00                	add    BYTE PTR [rax],al
     51e:	00 d7                	add    bh,dl
     520:	11 f5                	adc    ebp,esi
     522:	00 00                	add    BYTE PTR [rax],al
     524:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
     527:	00 00                	add    BYTE PTR [rax],al
     529:	3d 05 00 00 01       	cmp    eax,0x1000005
     52e:	92                   	xchg   edx,eax
     52f:	00 00                	add    BYTE PTR [rax],al
     531:	00 01                	add    BYTE PTR [rcx],al
     533:	15 05 00 00 01       	adc    eax,0x1000005
     538:	62                   	(bad)
     539:	00 00                	add    BYTE PTR [rax],al
     53b:	00 00                	add    BYTE PTR [rax],al
     53d:	0a 4a 02             	or     cl,BYTE PTR [rdx+0x2]
     540:	00 00                	add    BYTE PTR [rax],al
     542:	db 1a                	fistp  DWORD PTR [rdx]
     544:	41 02 00             	add    al,BYTE PTR [r8]
     547:	00 36                	add    BYTE PTR [rsi],dh
     549:	00 00                	add    BYTE PTR [rax],al
     54b:	00 60 05             	add    BYTE PTR [rax+0x5],ah
     54e:	00 00                	add    BYTE PTR [rax],al
     550:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     556:	15 05 00 00 01       	adc    eax,0x1000005
     55b:	62                   	(bad)
     55c:	00 00                	add    BYTE PTR [rax],al
     55e:	00 00                	add    BYTE PTR [rax],al
     560:	04 6f                	add    al,0x6f
     562:	26 00 00             	es add BYTE PTR [rax],al
     565:	9b                   	fwait
     566:	03 0c 62             	add    ecx,DWORD PTR [rdx+riz*2]
     569:	00 00                	add    BYTE PTR [rax],al
     56b:	00 76 05             	add    BYTE PTR [rsi+0x5],dh
     56e:	00 00                	add    BYTE PTR [rax],al
     570:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     576:	06                   	(bad)
     577:	06                   	(bad)
     578:	02 00                	add    al,BYTE PTR [rax]
     57a:	00 09                	add    BYTE PTR [rcx],cl
     57c:	8f 01                	pop    QWORD PTR [rcx]
     57e:	2a 00                	sub    al,BYTE PTR [rax]
     580:	00 00                	add    BYTE PTR [rax],al
     582:	96                   	xchg   esi,eax
     583:	05 00 00 01 81       	add    eax,0x81010000
     588:	00 00                	add    BYTE PTR [rax],al
     58a:	00 01                	add    BYTE PTR [rcx],al
     58c:	96                   	xchg   esi,eax
     58d:	05 00 00 01 2a       	add    eax,0x2a010000
     592:	00 00                	add    BYTE PTR [rax],al
     594:	00 00                	add    BYTE PTR [rax],al
     596:	05 84 04 00 00       	add    eax,0x484
     59b:	06                   	(bad)
     59c:	67 02 00             	add    al,BYTE PTR [eax]
     59f:	00 09                	add    BYTE PTR [rcx],cl
     5a1:	4f 01 62 00          	rex.WRXB add QWORD PTR [r10+0x0],r12
     5a5:	00 00                	add    BYTE PTR [rax],al
     5a7:	b6 05                	mov    dh,0x5
     5a9:	00 00                	add    BYTE PTR [rax],al
     5ab:	01 81 00 00 00 01    	add    DWORD PTR [rcx+0x1000000],eax
     5b1:	7d 04                	jge    5b7 <__abi_tag+0x23b>
     5b3:	00 00                	add    BYTE PTR [rax],al
     5b5:	00 24 37             	add    BYTE PTR [rdi+rsi*1],ah
     5b8:	02 00                	add    al,BYTE PTR [rax]
     5ba:	00 0e                	add    BYTE PTR [rsi],cl
     5bc:	57                   	push   rdi
     5bd:	01 0b                	add    DWORD PTR [rbx],ecx
     5bf:	15 06 00 00 02       	adc    eax,0x2000006
     5c4:	05 cc 0b 34 01       	add    eax,0x1340bcc
     5c9:	00 00                	add    BYTE PTR [rax],al
     5cb:	02 05 dc 0b 15 06    	add    al,BYTE PTR [rip+0x6150bdc]        # 61511ad <_end+0x614b195>
     5d1:	00 00                	add    BYTE PTR [rax],al
     5d3:	02 05 e7 0b 30 06    	add    al,BYTE PTR [rip+0x6300be7]        # 63011c0 <_end+0x62fb1a8>
     5d9:	00 00                	add    BYTE PTR [rax],al
     5db:	02 05 e8 0b 46 06    	add    al,BYTE PTR [rip+0x6460be8]        # 64611c9 <_end+0x645b1b1>
     5e1:	00 00                	add    BYTE PTR [rax],al
     5e3:	02 05 e9 0b 69 06    	add    al,BYTE PTR [rip+0x6690be9]        # 66911d2 <_end+0x668b1ba>
     5e9:	00 00                	add    BYTE PTR [rax],al
     5eb:	02 05 eb 0b 8c 06    	add    al,BYTE PTR [rip+0x68c0beb]        # 68c11dc <_end+0x68bb1c4>
     5f1:	00 00                	add    BYTE PTR [rax],al
     5f3:	02 05 ec 0b a7 06    	add    al,BYTE PTR [rip+0x6a70bec]        # 6a711e5 <_end+0x6a6b1cd>
     5f9:	00 00                	add    BYTE PTR [rax],al
     5fb:	0f 64 69 76          	pcmpgtb mm5,QWORD PTR [rcx+0x76]
     5ff:	00 d9                	add    cl,bl
     601:	dd 01                	fld    QWORD PTR [rcx]
     603:	00 00                	add    BYTE PTR [rax],al
     605:	34 01                	xor    al,0x1
     607:	00 00                	add    BYTE PTR [rax],al
     609:	01 97 00 00 00 01    	add    DWORD PTR [rdi+0x1000000],edx
     60f:	97                   	xchg   edi,eax
     610:	00 00                	add    BYTE PTR [rax],al
     612:	00 00                	add    BYTE PTR [rax],al
     614:	00 04 c8             	add    BYTE PTR [rax+rcx*8],al
     617:	02 00                	add    al,BYTE PTR [rax]
     619:	00 e6                	add    dh,ah
     61b:	03 1e                	add    ebx,DWORD PTR [rsi]
     61d:	34 01                	xor    al,0x1
     61f:	00 00                	add    BYTE PTR [rax],al
     621:	30 06                	xor    BYTE PTR [rsi],al
     623:	00 00                	add    BYTE PTR [rax],al
     625:	01 97 00 00 00 01    	add    DWORD PTR [rdi+0x1000000],edx
     62b:	97                   	xchg   edi,eax
     62c:	00 00                	add    BYTE PTR [rax],al
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	04 52                	add    al,0x52
     632:	02 00                	add    al,BYTE PTR [rax]
     634:	00 ed                	add    ch,ch
     636:	01 01                	add    DWORD PTR [rcx],eax
     638:	97                   	xchg   edi,eax
     639:	00 00                	add    BYTE PTR [rax],al
     63b:	00 46 06             	add    BYTE PTR [rsi+0x6],al
     63e:	00 00                	add    BYTE PTR [rax],al
     640:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     646:	0a 32                	or     dh,BYTE PTR [rdx]
     648:	01 00                	add    DWORD PTR [rax],eax
     64a:	00 ee                	add    dh,ch
     64c:	16                   	(bad)
     64d:	29 01                	sub    DWORD PTR [rcx],eax
     64f:	00 00                	add    BYTE PTR [rax],al
     651:	97                   	xchg   edi,eax
     652:	00 00                	add    BYTE PTR [rax],al
     654:	00 69 06             	add    BYTE PTR [rcx+0x6],ch
     657:	00 00                	add    BYTE PTR [rax],al
     659:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     65f:	15 05 00 00 01       	adc    eax,0x1000005
     664:	62                   	(bad)
     665:	00 00                	add    BYTE PTR [rax],al
     667:	00 00                	add    BYTE PTR [rax],al
     669:	0a bf 02 00 00 f3    	or     bh,BYTE PTR [rdi-0xcfffffe]
     66f:	1f                   	(bad)
     670:	b6 02                	mov    dh,0x2
     672:	00 00                	add    BYTE PTR [rax],al
     674:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     675:	00 00                	add    BYTE PTR [rax],al
     677:	00 8c 06 00 00 01 92 	add    BYTE PTR [rsi+rax*1-0x6dff0000],cl
     67e:	00 00                	add    BYTE PTR [rax],al
     680:	00 01                	add    BYTE PTR [rcx],al
     682:	15 05 00 00 01       	adc    eax,0x1000005
     687:	62                   	(bad)
     688:	00 00                	add    BYTE PTR [rax],al
     68a:	00 00                	add    BYTE PTR [rax],al
     68c:	06                   	(bad)
     68d:	af                   	scas   eax,DWORD PTR es:[rdi]
     68e:	02 00                	add    al,BYTE PTR [rax]
     690:	00 02                	add    BYTE PTR [rdx],al
     692:	7c 0e                	jl     6a2 <__abi_tag+0x326>
     694:	ac                   	lods   al,BYTE PTR ds:[rsi]
     695:	00 00                	add    BYTE PTR [rax],al
     697:	00 a7 06 00 00 01    	add    BYTE PTR [rdi+0x1000006],ah
     69d:	92                   	xchg   edx,eax
     69e:	00 00                	add    BYTE PTR [rax],al
     6a0:	00 01                	add    BYTE PTR [rcx],al
     6a2:	15 05 00 00 00       	adc    eax,0x5
     6a7:	06                   	(bad)
     6a8:	2b 00                	sub    eax,DWORD PTR [rax]
     6aa:	00 00                	add    BYTE PTR [rax],al
     6ac:	02 7f 14             	add    bh,BYTE PTR [rdi+0x14]
     6af:	9e                   	sahf
     6b0:	00 00                	add    BYTE PTR [rax],al
     6b2:	00 c2                	add    dl,al
     6b4:	06                   	(bad)
     6b5:	00 00                	add    BYTE PTR [rax],al
     6b7:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     6bd:	15 05 00 00 00       	adc    eax,0x5
     6c2:	02 0a                	add    cl,BYTE PTR [rdx]
     6c4:	27                   	(bad)
     6c5:	0c 3c                	or     al,0x3c
     6c7:	03 00                	add    eax,DWORD PTR [rax]
     6c9:	00 02                	add    BYTE PTR [rdx],al
     6cb:	0a 2b                	or     ch,BYTE PTR [rbx]
     6cd:	0e                   	(bad)
     6ce:	58                   	pop    rax
     6cf:	03 00                	add    eax,DWORD PTR [rax]
     6d1:	00 02                	add    BYTE PTR [rdx],al
     6d3:	0a 2e                	or     ch,BYTE PTR [rsi]
     6d5:	0e                   	(bad)
     6d6:	c9                   	leave
     6d7:	04 00                	add    al,0x0
     6d9:	00 02                	add    BYTE PTR [rdx],al
     6db:	0a 36                	or     dh,BYTE PTR [rsi]
     6dd:	0c d6                	or     al,0xd6
     6df:	00 00                	add    BYTE PTR [rax],al
     6e1:	00 02                	add    BYTE PTR [rdx],al
     6e3:	0a 37                	or     dh,BYTE PTR [rdi]
     6e5:	0c 05                	or     al,0x5
     6e7:	01 00                	add    DWORD PTR [rax],eax
     6e9:	00 03                	add    BYTE PTR [rbx],al
     6eb:	10 04 a4             	adc    BYTE PTR [rsp+riz*4],al
     6ee:	02 00                	add    al,BYTE PTR [rax]
     6f0:	00 02                	add    BYTE PTR [rdx],al
     6f2:	0a 39                	or     bh,BYTE PTR [rcx]
     6f4:	0c 7a                	or     al,0x7a
     6f6:	02 00                	add    al,BYTE PTR [rax]
     6f8:	00 03                	add    BYTE PTR [rbx],al
     6fa:	10 05 0f 02 00 00    	adc    BYTE PTR [rip+0x20f],al        # 90f <__abi_tag+0x593>
     700:	02 0a                	add    cl,BYTE PTR [rdx]
     702:	39 0c 92             	cmp    DWORD PTR [rdx+rdx*4],ecx
     705:	02 00                	add    al,BYTE PTR [rax]
     707:	00 02                	add    BYTE PTR [rdx],al
     709:	0a 39                	or     bh,BYTE PTR [rcx]
     70b:	0c aa                	or     al,0xaa
     70d:	02 00                	add    al,BYTE PTR [rax]
     70f:	00 02                	add    BYTE PTR [rdx],al
     711:	0a 39                	or     bh,BYTE PTR [rcx]
     713:	0c c2                	or     al,0xc2
     715:	02 00                	add    al,BYTE PTR [rax]
     717:	00 02                	add    BYTE PTR [rdx],al
     719:	0a 39                	or     bh,BYTE PTR [rcx]
     71b:	0c da                	or     al,0xda
     71d:	02 00                	add    al,BYTE PTR [rax]
     71f:	00 02                	add    BYTE PTR [rdx],al
     721:	0a 39                	or     bh,BYTE PTR [rcx]
     723:	0c f2                	or     al,0xf2
     725:	02 00                	add    al,BYTE PTR [rax]
     727:	00 02                	add    BYTE PTR [rdx],al
     729:	0a 39                	or     bh,BYTE PTR [rcx]
     72b:	0c 0a                	or     al,0xa
     72d:	03 00                	add    eax,DWORD PTR [rax]
     72f:	00 02                	add    BYTE PTR [rdx],al
     731:	0a 3a                	or     bh,BYTE PTR [rdx]
     733:	0c 73                	or     al,0x73
     735:	03 00                	add    eax,DWORD PTR [rax]
     737:	00 02                	add    BYTE PTR [rdx],al
     739:	0a 3b                	or     bh,BYTE PTR [rbx]
     73b:	0c 90                	or     al,0x90
     73d:	03 00                	add    eax,DWORD PTR [rax]
     73f:	00 02                	add    BYTE PTR [rdx],al
     741:	0a 3c 0c             	or     bh,BYTE PTR [rsp+rcx*1]
     744:	b0 03                	mov    al,0x3
     746:	00 00                	add    BYTE PTR [rax],al
     748:	02 0a                	add    cl,BYTE PTR [rdx]
     74a:	3d 0c c6 03 00       	cmp    eax,0x3c60c
     74f:	00 02                	add    BYTE PTR [rdx],al
     751:	0a 3f                	or     bh,BYTE PTR [rdi]
     753:	0c fb                	or     al,0xfb
     755:	05 00 00 02 0a       	add    eax,0xa020000
     75a:	3f                   	(bad)
     75b:	0c 22                	or     al,0x22
     75d:	03 00                	add    eax,DWORD PTR [rax]
     75f:	00 02                	add    BYTE PTR [rdx],al
     761:	0a 3f                	or     bh,BYTE PTR [rdi]
     763:	0c f0                	or     al,0xf0
     765:	03 00                	add    eax,DWORD PTR [rax]
     767:	00 02                	add    BYTE PTR [rdx],al
     769:	0a 41 0c             	or     al,BYTE PTR [rcx+0xc]
     76c:	0c 04                	or     al,0x4
     76e:	00 00                	add    BYTE PTR [rax],al
     770:	02 0a                	add    cl,BYTE PTR [rdx]
     772:	43 0c 22             	rex.XB or al,0x22
     775:	04 00                	add    al,0x0
     777:	00 02                	add    BYTE PTR [rdx],al
     779:	0a 46 0c             	or     al,BYTE PTR [rsi+0xc]
     77c:	3d 04 00 00 02       	cmp    eax,0x2000004
     781:	0a 47 0c             	or     al,BYTE PTR [rdi+0xc]
     784:	58                   	pop    rax
     785:	04 00                	add    al,0x0
     787:	00 02                	add    BYTE PTR [rdx],al
     789:	0a 48 0c             	or     cl,BYTE PTR [rax+0xc]
     78c:	89 04 00             	mov    DWORD PTR [rax+rax*1],eax
     78f:	00 02                	add    BYTE PTR [rdx],al
     791:	0a 4a 0c             	or     cl,BYTE PTR [rdx+0xc]
     794:	a9 04 00 00 02       	test   eax,0x2000004
     799:	0a 4b 0c             	or     cl,BYTE PTR [rbx+0xc]
     79c:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
     79f:	00 02                	add    BYTE PTR [rdx],al
     7a1:	0a 4d 0c             	or     cl,BYTE PTR [rbp+0xc]
     7a4:	e9 04 00 00 02       	jmp    20007ad <_end+0x1ffa795>
     7a9:	0a 4e 0c             	or     cl,BYTE PTR [rsi+0xc]
     7ac:	fa                   	cli
     7ad:	04 00                	add    al,0x0
     7af:	00 02                	add    BYTE PTR [rdx],al
     7b1:	0a 4f 0c             	or     cl,BYTE PTR [rdi+0xc]
     7b4:	1a 05 00 00 02 0a    	sbb    al,BYTE PTR [rip+0xa020000]        # a0207ba <_end+0xa01a7a2>
     7ba:	50                   	push   rax
     7bb:	0c 3d                	or     al,0x3d
     7bd:	05 00 00 02 0a       	add    eax,0xa020000
     7c2:	51                   	push   rcx
     7c3:	0c 60                	or     al,0x60
     7c5:	05 00 00 02 0a       	add    eax,0xa020000
     7ca:	53                   	push   rbx
     7cb:	0c 76                	or     al,0x76
     7cd:	05 00 00 02 0a       	add    eax,0xa020000
     7d2:	54                   	push   rsp
     7d3:	0c 9b                	or     al,0x9b
     7d5:	05 00 00 03 02       	add    eax,0x2030000
     7da:	04 00                	add    al,0x0
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	00 03                	add    BYTE PTR [rbx],al
     7e0:	02 04 ce             	add    al,BYTE PTR [rsi+rcx*8]
     7e3:	02 00                	add    al,BYTE PTR [rax]
     7e5:	00 08                	add    BYTE PTR [rax],cl
     7e7:	55                   	push   rbp
     7e8:	01 00                	add    DWORD PTR [rax],eax
     7ea:	00 0b                	add    BYTE PTR [rbx],cl
     7ec:	1a 14 6e             	sbb    dl,BYTE PTR [rsi+rbp*2]
     7ef:	00 00                	add    BYTE PTR [rax],al
     7f1:	00 09                	add    BYTE PTR [rcx],cl
     7f3:	e6 07                	out    0x7,al
     7f5:	00 00                	add    BYTE PTR [rax],al
     7f7:	11 8e 02 00 00 0a    	adc    DWORD PTR [rsi+0xa000002],ecx
     7fd:	69 00 00 00 0f 11    	imul   eax,DWORD PTR [rax],0x110f0000
     803:	71 01                	jno    806 <__abi_tag+0x48a>
     805:	00 00                	add    BYTE PTR [rax],al
     807:	0e                   	(bad)
     808:	69 00 00 00 20 25    	imul   eax,DWORD PTR [rax],0x25200000
     80e:	3a 01                	cmp    al,BYTE PTR [rcx]
     810:	00 00                	add    BYTE PTR [rax],al
     812:	0d 06 10 f2 07       	or     eax,0x7f21006
     817:	00 00                	add    BYTE PTR [rax],al
     819:	40                   	rex
     81a:	42 0f 00 26          	rex.X verr WORD PTR [rsi]
     81e:	cc                   	int3
     81f:	01 00                	add    DWORD PTR [rax],eax
     821:	00 0d 1d 06 b2 01    	add    BYTE PTR [rip+0x1b2061d],cl        # 1b20e44 <_end+0x1b1ae2c>
     827:	00 00                	add    BYTE PTR [rax],al
     829:	42 08 00             	rex.X or BYTE PTR [rax],al
     82c:	00 01                	add    BYTE PTR [rcx],al
     82e:	92                   	xchg   edx,eax
     82f:	00 00                	add    BYTE PTR [rax],al
     831:	00 01                	add    BYTE PTR [rcx],al
     833:	e6 07                	out    0x7,al
     835:	00 00                	add    BYTE PTR [rax],al
     837:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     83d:	e6 07                	out    0x7,al
     83f:	00 00                	add    BYTE PTR [rax],al
     841:	00 27                	add    BYTE PTR [rdi],ah
     843:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
     846:	00 01                	add    BYTE PTR [rcx],al
     848:	08 05 62 00 00 00    	or     BYTE PTR [rip+0x62],al        # 8b0 <__abi_tag+0x534>
     84e:	d0 11                	rcl    BYTE PTR [rcx],1
     850:	00 00                	add    BYTE PTR [rax],al
     852:	00 00                	add    BYTE PTR [rax],al
     854:	00 00                	add    BYTE PTR [rax],al
     856:	33 00                	xor    eax,DWORD PTR [rax]
     858:	00 00                	add    BYTE PTR [rax],al
     85a:	00 00                	add    BYTE PTR [rax],al
     85c:	00 00                	add    BYTE PTR [rax],al
     85e:	01 9c 12 32 02 00 00 	add    DWORD PTR [rdx+rdx*1+0x232],ebx
     865:	0e                   	(bad)
     866:	62                   	(bad)
     867:	00 00                	add    BYTE PTR [rax],al
     869:	00 10                	add    BYTE PTR [rax],dl
     86b:	00 00                	add    BYTE PTR [rax],al
     86d:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
     870:	00 00                	add    BYTE PTR [rax],al
     872:	12 fc                	adc    bh,ah
     874:	01 00                	add    DWORD PTR [rax],eax
     876:	00 1a                	add    BYTE PTR [rdx],bl
     878:	15 05 00 00 2d       	adc    eax,0x2d000005
     87d:	00 00                	add    BYTE PTR [rax],al
     87f:	00 27                	add    BYTE PTR [rdi],ah
     881:	00 00                	add    BYTE PTR [rax],al
     883:	00 13                	add    BYTE PTR [rbx],dl
     885:	5e                   	pop    rsi
     886:	01 00                	add    DWORD PTR [rax],eax
     888:	00 0a                	add    BYTE PTR [rdx],cl
     88a:	0e                   	(bad)
     88b:	e6 07                	out    0x7,al
     88d:	00 00                	add    BYTE PTR [rax],al
     88f:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
     892:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
     895:	00 00                	add    BYTE PTR [rax],al
     897:	13 9a 02 00 00 0b    	adc    ebx,DWORD PTR [rdx+0xb000002]
     89d:	0b 81 00 00 00 5a    	or     eax,DWORD PTR [rcx+0x5a000000]
     8a3:	00 00                	add    BYTE PTR [rax],al
     8a5:	00 58 00             	add    BYTE PTR [rax+0x0],bl
     8a8:	00 00                	add    BYTE PTR [rax],al
     8aa:	28 0f                	sub    BYTE PTR [rdi],cl
     8ac:	08 00                	or     BYTE PTR [rax],al
     8ae:	00 01                	add    BYTE PTR [rcx],al
     8b0:	0e                   	(bad)
     8b1:	0e                   	(bad)
     8b2:	e6 07                	out    0x7,al
     8b4:	00 00                	add    BYTE PTR [rax],al
     8b6:	00 04 29             	add    BYTE PTR [rcx+rbp*1],al
     8b9:	90                   	nop
     8ba:	03 00                	add    eax,DWORD PTR [rax]
     8bc:	00 d4                	add    ah,dl
     8be:	11 00                	adc    DWORD PTR [rax],eax
     8c0:	00 00                	add    BYTE PTR [rax],al
     8c2:	00 00                	add    BYTE PTR [rax],al
     8c4:	00 01                	add    BYTE PTR [rcx],al
     8c6:	0c 00                	or     al,0x0
     8c8:	00 00                	add    BYTE PTR [rax],al
     8ca:	01 0a                	add    DWORD PTR [rdx],ecx
     8cc:	21 f7                	and    edi,esi
     8ce:	08 00                	or     BYTE PTR [rax],al
     8d0:	00 2a                	add    BYTE PTR [rdx],ch
     8d2:	a2 03 00 00 6a 00 00 	movabs ds:0x680000006a000003,al
     8d9:	00 68 
     8db:	00 00                	add    BYTE PTR [rax],al
     8dd:	00 14 e8             	add    BYTE PTR [rax+rbp*8],dl
     8e0:	11 00                	adc    DWORD PTR [rax],eax
     8e2:	00 00                	add    BYTE PTR [rax],al
     8e4:	00 00                	add    BYTE PTR [rax],al
     8e6:	00 1a                	add    BYTE PTR [rdx],bl
     8e8:	05 00 00 0b 01       	add    eax,0x10b0000
     8ed:	54                   	push   rsp
     8ee:	01 30                	add    DWORD PTR [rax],esi
     8f0:	0b 01                	or     eax,DWORD PTR [rcx]
     8f2:	51                   	push   rcx
     8f3:	01 3a                	add    DWORD PTR [rdx],edi
     8f5:	00 00                	add    BYTE PTR [rax],al
     8f7:	14 ff                	adc    al,0xff
     8f9:	11 00                	adc    DWORD PTR [rax],eax
     8fb:	00 00                	add    BYTE PTR [rax],al
     8fd:	00 00                	add    BYTE PTR [rax],al
     8ff:	00 1d 08 00 00 0b    	add    BYTE PTR [rip+0xb000008],bl        # b00090d <_end+0xaffa8f5>
     905:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
     908:	03 0c 40             	add    ecx,DWORD PTR [rax+rax*2]
     90b:	00 00                	add    BYTE PTR [rax],al
     90d:	00 00                	add    BYTE PTR [rax],al
     90f:	00 00                	add    BYTE PTR [rax],al
     911:	0b 01                	or     eax,DWORD PTR [rcx]
     913:	52                   	push   rdx
     914:	03 0a                	add    ecx,DWORD PTR [rdx]
     916:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     919:	00 00                	add    BYTE PTR [rax],al
     91b:	cb                   	retf
     91c:	1b 00                	sbb    eax,DWORD PTR [rax]
     91e:	00 05 00 01 08 ad    	add    BYTE PTR [rip+0xffffffffad080100],al        # ffffffffad080a24 <_end+0xffffffffad07aa0c>
     924:	02 00                	add    al,BYTE PTR [rax]
     926:	00 3a                	add    BYTE PTR [rdx],bh
     928:	33 00                	xor    eax,DWORD PTR [rax]
     92a:	00 00                	add    BYTE PTR [rax],al
     92c:	21 81 01 00 00 00    	and    DWORD PTR [rcx+0x1],eax
     932:	00 00                	add    BYTE PTR [rax],al
     934:	00 00                	add    BYTE PTR [rax],al
     936:	13 00                	adc    eax,DWORD PTR [rax]
     938:	00 00                	add    BYTE PTR [rax],al
     93a:	00 00                	add    BYTE PTR [rax],al
     93c:	00 ac 07 00 00 00 00 	add    BYTE PTR [rdi+rax*1+0x0],ch
     943:	00 00                	add    BYTE PTR [rax],al
     945:	f3 00 00             	repz add BYTE PTR [rax],al
     948:	00 07                	add    BYTE PTR [rdi],al
     94a:	2f                   	(bad)
     94b:	0b 00                	or     eax,DWORD PTR [rax]
     94d:	00 06                	add    BYTE PTR [rsi],al
     94f:	d6                   	(bad)
     950:	17                   	(bad)
     951:	3a 00                	cmp    al,BYTE PTR [rax]
     953:	00 00                	add    BYTE PTR [rax],al
     955:	05 08 07 a0 01       	add    eax,0x1a00708
     95a:	00 00                	add    BYTE PTR [rax],al
     95c:	23 08                	and    ecx,DWORD PTR [rax]
     95e:	3c e3                	cmp    al,0xe3
     960:	02 00                	add    al,BYTE PTR [rax]
     962:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     965:	00 00                	add    BYTE PTR [rax],al
     967:	06                   	(bad)
     968:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     969:	02 00                	add    al,BYTE PTR [rax]
     96b:	00 07                	add    BYTE PTR [rdi],al
     96d:	3d 09 66 00 00       	cmp    eax,0x6609
     972:	00 00                	add    BYTE PTR [rax],al
     974:	24 72                	and    al,0x72
     976:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     978:	00 3e                	add    BYTE PTR [rsi],bh
     97a:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
     97d:	00 00                	add    BYTE PTR [rax],al
     97f:	04 00                	add    al,0x0
     981:	3b 04 05 69 6e 74 00 	cmp    eax,DWORD PTR [rax*1+0x746e69]
     988:	0e                   	(bad)
     989:	66 00 00             	data16 add BYTE PTR [rax],al
     98c:	00 07                	add    BYTE PTR [rdi],al
     98e:	e4 02                	in     al,0x2
     990:	00 00                	add    BYTE PTR [rax],al
     992:	07                   	(bad)
     993:	3f                   	(bad)
     994:	05 41 00 00 00       	add    eax,0x41
     999:	23 10                	and    edx,DWORD PTR [rax]
     99b:	44 09 00             	or     DWORD PTR [rax],r8d
     99e:	00 00                	add    BYTE PTR [rax],al
     9a0:	a3 00 00 00 06 6e 02 	movabs ds:0x26e06000000,eax
     9a7:	00 00 
     9a9:	07                   	(bad)
     9aa:	45 0e                	rex.RB (bad)
     9ac:	a3 00 00 00 00 24 72 	movabs ds:0x6d65722400000000,eax
     9b3:	65 6d 
     9b5:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
     9b8:	a3 00 00 00 08 00 05 	movabs ds:0x508050008000000,eax
     9bf:	08 05 
     9c1:	92                   	xchg   edx,eax
     9c2:	01 00                	add    DWORD PTR [rax],eax
     9c4:	00 07                	add    BYTE PTR [rdi],al
     9c6:	0a 00                	or     al,BYTE PTR [rax]
     9c8:	00 00                	add    BYTE PTR [rax],al
     9ca:	07                   	(bad)
     9cb:	47 05 7e 00 00 00    	rex.RXB add eax,0x7e
     9d1:	23 10                	and    edx,DWORD PTR [rax]
     9d3:	4e d4                	rex.WRX (bad)
     9d5:	01 00                	add    DWORD PTR [rax],eax
     9d7:	00 db                	add    bl,bl
     9d9:	00 00                	add    BYTE PTR [rax],al
     9db:	00 06                	add    BYTE PTR [rsi],al
     9dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9de:	02 00                	add    al,BYTE PTR [rax]
     9e0:	00 07                	add    BYTE PTR [rdi],al
     9e2:	4f 13 db             	rex.WRXB adc r11,r11
     9e5:	00 00                	add    BYTE PTR [rax],al
     9e7:	00 00                	add    BYTE PTR [rax],al
     9e9:	24 72                	and    al,0x72
     9eb:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     9ed:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     9f0:	db 00                	fild   DWORD PTR [rax]
     9f2:	00 00                	add    BYTE PTR [rax],al
     9f4:	08 00                	or     BYTE PTR [rax],al
     9f6:	05 08 05 8d 01       	add    eax,0x18d0508
     9fb:	00 00                	add    BYTE PTR [rax],al
     9fd:	07                   	(bad)
     9fe:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
     a02:	07                   	(bad)
     a03:	51                   	push   rcx
     a04:	05 b6 00 00 00       	add    eax,0xb6
     a09:	05 02 07 73 02       	add    eax,0x2730702
     a0e:	00 00                	add    BYTE PTR [rax],al
     a10:	08 06                	or     BYTE PTR [rsi],al
     a12:	01 00                	add    DWORD PTR [rax],eax
     a14:	00 2c f5 00 00 00 05 	add    BYTE PTR [rsi*8+0x5000000],ch
     a1b:	01 06                	add    DWORD PTR [rsi],eax
     a1d:	2d 02 00 00 0e       	sub    eax,0xe000002
     a22:	ff 00                	inc    DWORD PTR [rax]
     a24:	00 00                	add    BYTE PTR [rax],al
     a26:	05 01 08 24 02       	add    eax,0x2240801
     a2b:	00 00                	add    BYTE PTR [rax],al
     a2d:	05 04 07 a5 01       	add    eax,0x1a50704
     a32:	00 00                	add    BYTE PTR [rax],al
     a34:	05 01 06 26 02       	add    eax,0x2260601
     a39:	00 00                	add    BYTE PTR [rax],al
     a3b:	05 02 05 05 01       	add    eax,0x1050502
     a40:	00 00                	add    BYTE PTR [rax],al
     a42:	07                   	(bad)
     a43:	53                   	push   rbx
     a44:	01 00                	add    DWORD PTR [rax],eax
     a46:	00 08                	add    BYTE PTR [rax],cl
     a48:	2a 16                	sub    dl,BYTE PTR [rsi]
     a4a:	12 01                	adc    al,BYTE PTR [rcx]
     a4c:	00 00                	add    BYTE PTR [rax],al
     a4e:	07                   	(bad)
     a4f:	d3 05 00 00 08 2d    	rol    DWORD PTR [rip+0x2d080000],cl        # 2d080a55 <_end+0x2d07aa3d>
     a55:	1b 3a                	sbb    edi,DWORD PTR [rdx]
     a57:	00 00                	add    BYTE PTR [rax],al
     a59:	00 3c 08             	add    BYTE PTR [rax+rcx*1],bh
     a5c:	08 ff                	or     bh,bh
     a5e:	00 00                	add    BYTE PTR [rax],al
     a60:	00 2c 41             	add    BYTE PTR [rcx+rax*2],ch
     a63:	01 00                	add    DWORD PTR [rax],eax
     a65:	00 05 08 07 9b 01    	add    BYTE PTR [rip+0x19b0708],al        # 19b1173 <_end+0x19ab15b>
     a6b:	00 00                	add    BYTE PTR [rax],al
     a6d:	3d d5 02 00 00       	cmp    eax,0x2d5
     a72:	07                   	(bad)
     a73:	b4 03                	mov    ah,0x3
     a75:	0f 5f 01             	maxps  xmm0,XMMWORD PTR [rcx]
     a78:	00 00                	add    BYTE PTR [rax],al
     a7a:	08 64 01 00          	or     BYTE PTR [rcx+rax*1+0x0],ah
     a7e:	00 2d 66 00 00 00    	add    BYTE PTR [rip+0x66],ch        # aea <__abi_tag+0x76e>
     a84:	78 01                	js     a87 <__abi_tag+0x70b>
     a86:	00 00                	add    BYTE PTR [rax],al
     a88:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     a8b:	00 00                	add    BYTE PTR [rax],al
     a8d:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     a90:	00 00                	add    BYTE PTR [rax],al
     a92:	00 08                	add    BYTE PTR [rax],cl
     a94:	7d 01                	jge    a97 <__abi_tag+0x71b>
     a96:	00 00                	add    BYTE PTR [rax],al
     a98:	3e 3f                	ds (bad)
     a9a:	73 74                	jae    b10 <__abi_tag+0x794>
     a9c:	64 00 16             	add    BYTE PTR fs:[rsi],dl
     a9f:	32 01                	xor    al,BYTE PTR [rcx]
     aa1:	0b 4e 03             	or     ecx,DWORD PTR [rsi+0x3]
     aa4:	00 00                	add    BYTE PTR [rax],al
     aa6:	02 09                	add    cl,BYTE PTR [rcx]
     aa8:	83 0b 72             	or     DWORD PTR [rbx],0x72
     aab:	00 00                	add    BYTE PTR [rax],al
     aad:	00 02                	add    BYTE PTR [rdx],al
     aaf:	09 84 0b aa 00 00 00 	or     DWORD PTR [rbx+rcx*1+0xaa],eax
     ab6:	02 09                	add    cl,BYTE PTR [rcx]
     ab8:	8a 0b                	mov    cl,BYTE PTR [rbx]
     aba:	4e 03 00             	rex.WRX add r8,QWORD PTR [rax]
     abd:	00 02                	add    BYTE PTR [rdx],al
     abf:	09 8d 0b 6a 03 00    	or     DWORD PTR [rbp+0x36a0b],ecx
     ac5:	00 02                	add    BYTE PTR [rdx],al
     ac7:	09 90 0b 85 03 00    	or     DWORD PTR [rax+0x3850b],edx
     acd:	00 02                	add    BYTE PTR [rdx],al
     acf:	09 91 0b a2 03 00    	or     DWORD PTR [rcx+0x3a20b],edx
     ad5:	00 02                	add    BYTE PTR [rdx],al
     ad7:	09 92 0b b8 03 00    	or     DWORD PTR [rdx+0x3b80b],edx
     add:	00 02                	add    BYTE PTR [rdx],al
     adf:	09 93 0b ce 03 00    	or     DWORD PTR [rbx+0x3ce0b],edx
     ae5:	00 02                	add    BYTE PTR [rdx],al
     ae7:	09 95 0b f8 03 00    	or     DWORD PTR [rbp+0x3f80b],edx
     aed:	00 02                	add    BYTE PTR [rdx],al
     aef:	09 98 0b 14 04 00    	or     DWORD PTR [rax+0x4140b],ebx
     af5:	00 02                	add    BYTE PTR [rdx],al
     af7:	09 9a 0b 2a 04 00    	or     DWORD PTR [rdx+0x42a0b],ebx
     afd:	00 02                	add    BYTE PTR [rdx],al
     aff:	09 9d 0b 45 04 00    	or     DWORD PTR [rbp+0x4450b],ebx
     b05:	00 02                	add    BYTE PTR [rdx],al
     b07:	09 9e 0b 60 04 00    	or     DWORD PTR [rsi+0x4600b],ebx
     b0d:	00 02                	add    BYTE PTR [rdx],al
     b0f:	09 9f 0b 91 04 00    	or     DWORD PTR [rdi+0x4910b],ebx
     b15:	00 02                	add    BYTE PTR [rdx],al
     b17:	09 a1 0b b1 04 00    	or     DWORD PTR [rcx+0x4b10b],esp
     b1d:	00 02                	add    BYTE PTR [rdx],al
     b1f:	09 a4 0b d1 04 00 00 	or     DWORD PTR [rbx+rcx*1+0x4d1],esp
     b26:	02 09                	add    cl,BYTE PTR [rcx]
     b28:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     b29:	0b e4                	or     esp,esp
     b2b:	04 00                	add    al,0x0
     b2d:	00 02                	add    BYTE PTR [rdx],al
     b2f:	09 a9 0b f1 04 00    	or     DWORD PTR [rcx+0x4f10b],ebp
     b35:	00 02                	add    BYTE PTR [rdx],al
     b37:	09 aa 0b 02 05 00    	or     DWORD PTR [rdx+0x5020b],ebp
     b3d:	00 02                	add    BYTE PTR [rdx],al
     b3f:	09 ab 0b 22 05 00    	or     DWORD PTR [rbx+0x5220b],ebp
     b45:	00 02                	add    BYTE PTR [rdx],al
     b47:	09 ac 0b 46 05 00 00 	or     DWORD PTR [rbx+rcx*1+0x546],ebp
     b4e:	02 09                	add    cl,BYTE PTR [rcx]
     b50:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     b51:	0b 6a 05             	or     ebp,DWORD PTR [rdx+0x5]
     b54:	00 00                	add    BYTE PTR [rax],al
     b56:	02 09                	add    cl,BYTE PTR [rcx]
     b58:	af                   	scas   eax,DWORD PTR es:[rdi]
     b59:	0b 80 05 00 00 02    	or     eax,DWORD PTR [rax+0x2000005]
     b5f:	09 b0 0b a5 05 00    	or     DWORD PTR [rax+0x5a50b],esi
     b65:	00 02                	add    BYTE PTR [rdx],al
     b67:	09 f4                	or     esp,esi
     b69:	16                   	(bad)
     b6a:	e2 00                	loop   b6c <__abi_tag+0x7f0>
     b6c:	00 00                	add    BYTE PTR [rax],al
     b6e:	02 09                	add    cl,BYTE PTR [rcx]
     b70:	f9                   	stc
     b71:	16                   	(bad)
     b72:	05 06 00 00 02       	add    eax,0x2000006
     b77:	09 fa                	or     edx,edi
     b79:	16                   	(bad)
     b7a:	1f                   	(bad)
     b7b:	06                   	(bad)
     b7c:	00 00                	add    BYTE PTR [rax],al
     b7e:	02 09                	add    cl,BYTE PTR [rcx]
     b80:	fc                   	cld
     b81:	16                   	(bad)
     b82:	3a 06                	cmp    al,BYTE PTR [rsi]
     b84:	00 00                	add    BYTE PTR [rax],al
     b86:	02 09                	add    cl,BYTE PTR [rcx]
     b88:	fd                   	std
     b89:	16                   	(bad)
     b8a:	98                   	cwde
     b8b:	06                   	(bad)
     b8c:	00 00                	add    BYTE PTR [rax],al
     b8e:	02 09                	add    cl,BYTE PTR [rcx]
     b90:	fe                   	(bad)
     b91:	16                   	(bad)
     b92:	50                   	push   rax
     b93:	06                   	(bad)
     b94:	00 00                	add    BYTE PTR [rax],al
     b96:	02 09                	add    cl,BYTE PTR [rcx]
     b98:	ff 16                	call   QWORD PTR [rsi]
     b9a:	74 06                	je     ba2 <__abi_tag+0x826>
     b9c:	00 00                	add    BYTE PTR [rax],al
     b9e:	40 09 00             	rex or DWORD PTR [rax],eax
     ba1:	01 16                	add    DWORD PTR [rsi],edx
     ba3:	ba 06 00 00 16       	mov    edx,0x16000006
     ba8:	61                   	(bad)
     ba9:	62 73 00 89 15       	(bad)
     bae:	03 00                	add    eax,DWORD PTR [rax]
     bb0:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     bb3:	00 00                	add    BYTE PTR [rax],al
     bb5:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     bb6:	02 00                	add    al,BYTE PTR [rax]
     bb8:	00 01                	add    BYTE PTR [rcx],al
     bba:	04 07                	add    al,0x7
     bbc:	00 00                	add    BYTE PTR [rax],al
     bbe:	00 16                	add    BYTE PTR [rsi],dl
     bc0:	61                   	(bad)
     bc1:	62 73 00 55 1b       	(bad)
     bc6:	00 00                	add    BYTE PTR [rax],al
     bc8:	00 13                	add    BYTE PTR [rbx],dl
     bca:	07                   	(bad)
     bcb:	00 00                	add    BYTE PTR [rax],al
     bcd:	bc 02 00 00 01       	mov    esp,0x1000002
     bd2:	13 07                	adc    eax,DWORD PTR [rdi]
     bd4:	00 00                	add    BYTE PTR [rax],al
     bd6:	00 16                	add    BYTE PTR [rsi],dl
     bd8:	61                   	(bad)
     bd9:	62 73 00 4f 01       	(bad)
     bde:	03 00                	add    eax,DWORD PTR [rax]
     be0:	00 d5                	add    ch,dl
     be2:	06                   	(bad)
     be3:	00 00                	add    BYTE PTR [rax],al
     be5:	d4                   	(bad)
     be6:	02 00                	add    al,BYTE PTR [rax]
     be8:	00 01                	add    BYTE PTR [rcx],al
     bea:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     bee:	00 16                	add    BYTE PTR [rsi],dl
     bf0:	61                   	(bad)
     bf1:	62 73 00 4b 0b       	(bad)
     bf6:	03 00                	add    eax,DWORD PTR [rax]
     bf8:	00 b3 06 00 00 ec    	add    BYTE PTR [rbx-0x13fffffa],dh
     bfe:	02 00                	add    al,BYTE PTR [rax]
     c00:	00 01                	add    BYTE PTR [rcx],al
     c02:	b3 06                	mov    bl,0x6
     c04:	00 00                	add    BYTE PTR [rax],al
     c06:	00 16                	add    BYTE PTR [rsi],dl
     c08:	61                   	(bad)
     c09:	62 73 00 47 f7       	(bad)
     c0e:	02 00                	add    al,BYTE PTR [rax]
     c10:	00 9b 03 00 00 04    	add    BYTE PTR [rbx+0x4000003],bl
     c16:	03 00                	add    eax,DWORD PTR [rax]
     c18:	00 01                	add    BYTE PTR [rcx],al
     c1a:	9b                   	fwait
     c1b:	03 00                	add    eax,DWORD PTR [rax]
     c1d:	00 00                	add    BYTE PTR [rax],al
     c1f:	16                   	(bad)
     c20:	61                   	(bad)
     c21:	62 73 00 3d eb       	(bad)
     c26:	00 00                	add    BYTE PTR [rax],al
     c28:	00 db                	add    bl,bl
     c2a:	00 00                	add    BYTE PTR [rax],al
     c2c:	00 1c 03             	add    BYTE PTR [rbx+rax*1],bl
     c2f:	00 00                	add    BYTE PTR [rax],al
     c31:	01 db                	add    ebx,ebx
     c33:	00 00                	add    BYTE PTR [rax],al
     c35:	00 00                	add    BYTE PTR [rax],al
     c37:	16                   	(bad)
     c38:	61                   	(bad)
     c39:	62 73 00 38 11       	(bad)
     c3e:	00 00                	add    BYTE PTR [rax],al
     c40:	00 a3 00 00 00 34    	add    BYTE PTR [rbx+0x34000000],ah
     c46:	03 00                	add    eax,DWORD PTR [rax]
     c48:	00 01                	add    BYTE PTR [rcx],al
     c4a:	a3 00 00 00 00 2e 64 	movabs ds:0x7669642e00000000,eax
     c51:	69 76 
     c53:	00 b5 1e 01 00 00    	add    BYTE PTR [rbp+0x11e],dh
     c59:	aa                   	stos   BYTE PTR es:[rdi],al
     c5a:	00 00                	add    BYTE PTR [rax],al
     c5c:	00 01                	add    BYTE PTR [rcx],al
     c5e:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
     c65:	00 00 
     c67:	00 00                	add    BYTE PTR [rax],al
     c69:	09 17                	or     DWORD PTR [rdi],edx
     c6b:	01 00                	add    DWORD PTR [rax],eax
     c6d:	00 de                	add    dh,bl
     c6f:	02 0c 66             	add    cl,BYTE PTR [rsi+riz*2]
     c72:	00 00                	add    BYTE PTR [rax],al
     c74:	00 64 03 00          	add    BYTE PTR [rbx+rax*1+0x0],ah
     c78:	00 01                	add    BYTE PTR [rcx],al
     c7a:	64 03 00             	add    eax,DWORD PTR fs:[rax]
     c7d:	00 00                	add    BYTE PTR [rax],al
     c7f:	08 69 03             	or     BYTE PTR [rcx+0x3],ch
     c82:	00 00                	add    BYTE PTR [rax],al
     c84:	41                   	rex.B
     c85:	42 dd 00             	rex.X fld QWORD PTR [rax]
     c88:	00 00                	add    BYTE PTR [rax],al
     c8a:	07                   	(bad)
     c8b:	e3 02                	jrcxz  c8f <__abi_tag+0x913>
     c8d:	12 dd                	adc    bl,ch
     c8f:	00 00                	add    BYTE PTR [rax],al
     c91:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     c94:	00 00                	add    BYTE PTR [rax],al
     c96:	85 03                	test   DWORD PTR [rbx],eax
     c98:	00 00                	add    BYTE PTR [rax],al
     c9a:	01 64 03 00          	add    DWORD PTR [rbx+rax*1+0x0],esp
     c9e:	00 00                	add    BYTE PTR [rax],al
     ca0:	14 f2                	adc    al,0xf2
     ca2:	01 00                	add    DWORD PTR [rax],eax
     ca4:	00 0b                	add    BYTE PTR [rbx],cl
     ca6:	19 01                	sbb    DWORD PTR [rcx],eax
     ca8:	9b                   	fwait
     ca9:	03 00                	add    eax,DWORD PTR [rax]
     cab:	00 9b 03 00 00 01    	add    BYTE PTR [rbx+0x1000003],bl
     cb1:	f5                   	cmc
     cb2:	00 00                	add    BYTE PTR [rax],al
     cb4:	00 00                	add    BYTE PTR [rax],al
     cb6:	05 08 04 1d 02       	add    eax,0x21d0408
     cbb:	00 00                	add    BYTE PTR [rax],al
     cbd:	09 f7                	or     edi,esi
     cbf:	01 00                	add    DWORD PTR [rax],eax
     cc1:	00 e1                	add    cl,ah
     cc3:	01 01                	add    DWORD PTR [rcx],eax
     cc5:	66 00 00             	data16 add BYTE PTR [rax],al
     cc8:	00 b8 03 00 00 01    	add    BYTE PTR [rax+0x1000003],bh
     cce:	f5                   	cmc
     ccf:	00 00                	add    BYTE PTR [rax],al
     cd1:	00 00                	add    BYTE PTR [rax],al
     cd3:	09 01                	or     DWORD PTR [rcx],eax
     cd5:	02 00                	add    al,BYTE PTR [rax]
     cd7:	00 e6                	add    dh,ah
     cd9:	01 01                	add    DWORD PTR [rcx],eax
     cdb:	a3 00 00 00 ce 03 00 	movabs ds:0x1000003ce000000,eax
     ce2:	00 01 
     ce4:	f5                   	cmc
     ce5:	00 00                	add    BYTE PTR [rax],al
     ce7:	00 00                	add    BYTE PTR [rax],al
     ce9:	14 0f                	adc    al,0xf
     ceb:	01 00                	add    DWORD PTR [rax],eax
     ced:	00 0c 14             	add    BYTE PTR [rsp+rdx*1],cl
     cf0:	01 3f                	add    DWORD PTR [rdi],edi
     cf2:	01 00                	add    DWORD PTR [rax],eax
     cf4:	00 f8                	add    al,bh
     cf6:	03 00                	add    eax,DWORD PTR [rax]
     cf8:	00 01                	add    BYTE PTR [rcx],al
     cfa:	78 01                	js     cfd <__abi_tag+0x981>
     cfc:	00 00                	add    BYTE PTR [rax],al
     cfe:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     d01:	00 00                	add    BYTE PTR [rax],al
     d03:	01 2e                	add    DWORD PTR [rsi],ebp
     d05:	00 00                	add    BYTE PTR [rax],al
     d07:	00 01                	add    BYTE PTR [rcx],al
     d09:	2e 00 00             	cs add BYTE PTR [rax],al
     d0c:	00 01                	add    BYTE PTR [rcx],al
     d0e:	52                   	push   rdx
     d0f:	01 00                	add    DWORD PTR [rax],eax
     d11:	00 00                	add    BYTE PTR [rax],al
     d13:	43                   	rex.XB
     d14:	64 69 76 00 07 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e007
     d1b:	0e 
     d1c:	72 00                	jb     d1e <__abi_tag+0x9a2>
     d1e:	00 00                	add    BYTE PTR [rax],al
     d20:	14 04                	adc    al,0x4
     d22:	00 00                	add    BYTE PTR [rax],al
     d24:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     d27:	00 00                	add    BYTE PTR [rax],al
     d29:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     d2c:	00 00                	add    BYTE PTR [rax],al
     d2e:	00 09                	add    BYTE PTR [rcx],cl
     d30:	6a 01                	push   0x1
     d32:	00 00                	add    BYTE PTR [rax],al
     d34:	05 03 0e 41 01       	add    eax,0x1410e03
     d39:	00 00                	add    BYTE PTR [rax],al
     d3b:	2a 04 00             	sub    al,BYTE PTR [rax+rax*1]
     d3e:	00 01                	add    BYTE PTR [rcx],al
     d40:	f5                   	cmc
     d41:	00 00                	add    BYTE PTR [rax],al
     d43:	00 00                	add    BYTE PTR [rax],al
     d45:	09 c9                	or     ecx,ecx
     d47:	02 00                	add    al,BYTE PTR [rax]
     d49:	00 e2                	add    dl,ah
     d4b:	03 0f                	add    ecx,DWORD PTR [rdi]
     d4d:	aa                   	stos   BYTE PTR es:[rdi],al
     d4e:	00 00                	add    BYTE PTR [rax],al
     d50:	00 45 04             	add    BYTE PTR [rbp+0x4],al
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	01 a3 00 00 00 01    	add    DWORD PTR [rbx+0x1000000],esp
     d5b:	a3 00 00 00 00 09 58 	movabs ds:0x2580900000000,eax
     d62:	02 00 
     d64:	00 26                	add    BYTE PTR [rsi],ah
     d66:	04 0c                	add    al,0xc
     d68:	66 00 00             	data16 add BYTE PTR [rax],al
     d6b:	00 60 04             	add    BYTE PTR [rax+0x4],ah
     d6e:	00 00                	add    BYTE PTR [rax],al
     d70:	01 f5                	add    ebp,esi
     d72:	00 00                	add    BYTE PTR [rax],al
     d74:	00 01                	add    BYTE PTR [rcx],al
     d76:	2e 00 00             	cs add BYTE PTR [rax],al
     d79:	00 00                	add    BYTE PTR [rax],al
     d7b:	14 5e                	adc    al,0x5e
     d7d:	02 00                	add    al,BYTE PTR [rax]
     d7f:	00 0d 75 01 2e 00    	add    BYTE PTR [rip+0x2e0175],cl        # 2e0efa <_end+0x2daee2>
     d85:	00 00                	add    BYTE PTR [rax],al
     d87:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
     d8b:	01 80 04 00 00 01    	add    DWORD PTR [rax+0x1000004],eax
     d91:	f5                   	cmc
     d92:	00 00                	add    BYTE PTR [rax],al
     d94:	00 01                	add    BYTE PTR [rcx],al
     d96:	2e 00 00             	cs add BYTE PTR [rax],al
     d99:	00 00                	add    BYTE PTR [rax],al
     d9b:	08 85 04 00 00 05    	or     BYTE PTR [rbp+0x5000004],al
     da1:	04 05                	add    al,0x5
     da3:	86 02                	xchg   BYTE PTR [rdx],al
     da5:	00 00                	add    BYTE PTR [rax],al
     da7:	0e                   	(bad)
     da8:	85 04 00             	test   DWORD PTR [rax+rax*1],eax
     dab:	00 09                	add    BYTE PTR [rcx],cl
     dad:	86 01                	xchg   BYTE PTR [rcx],al
     daf:	00 00                	add    BYTE PTR [rax],al
     db1:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
     db4:	66 00 00             	data16 add BYTE PTR [rax],al
     db7:	00 b1 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],dh
     dbd:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
     dc1:	01 f5                	add    ebp,esi
     dc3:	00 00                	add    BYTE PTR [rax],al
     dc5:	00 01                	add    BYTE PTR [rcx],al
     dc7:	2e 00 00             	cs add BYTE PTR [rax],al
     dca:	00 00                	add    BYTE PTR [rax],al
     dcc:	25 25 00 00 00       	and    eax,0x25
     dd1:	ca 03 d1             	retf   0xd103
     dd4:	04 00                	add    al,0x0
     dd6:	00 01                	add    BYTE PTR [rcx],al
     dd8:	3f                   	(bad)
     dd9:	01 00                	add    DWORD PTR [rax],eax
     ddb:	00 01                	add    BYTE PTR [rcx],al
     ddd:	2e 00 00             	cs add BYTE PTR [rax],al
     de0:	00 01                	add    BYTE PTR [rcx],al
     de2:	2e 00 00             	cs add BYTE PTR [rax],al
     de5:	00 01                	add    BYTE PTR [rcx],al
     de7:	52                   	push   rdx
     de8:	01 00                	add    DWORD PTR [rax],eax
     dea:	00 00                	add    BYTE PTR [rax],al
     dec:	44 e0 00             	rex.R loopne def <__abi_tag+0xa73>
     def:	00 00                	add    BYTE PTR [rax],al
     df1:	07                   	(bad)
     df2:	fa                   	cli
     df3:	02 0d e4 04 00 00    	add    cl,BYTE PTR [rip+0x4e4]        # 12dd <__do_global_dtors_aux+0x2d>
     df9:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     dfc:	00 00                	add    BYTE PTR [rax],al
     dfe:	00 45 f2             	add    BYTE PTR [rbp-0xe],al
     e01:	02 00                	add    al,BYTE PTR [rax]
     e03:	00 07                	add    BYTE PTR [rdi],al
     e05:	3d 02 0c 66 00       	cmp    eax,0x660c02
     e0a:	00 00                	add    BYTE PTR [rax],al
     e0c:	25 f1 02 00 00       	and    eax,0x2f1
     e11:	3f                   	(bad)
     e12:	02 02                	add    al,BYTE PTR [rdx]
     e14:	05 00 00 01 12       	add    eax,0x12010000
     e19:	01 00                	add    DWORD PTR [rax],eax
     e1b:	00 00                	add    BYTE PTR [rax],al
     e1d:	14 c5                	adc    al,0xc5
     e1f:	01 00                	add    DWORD PTR [rax],eax
     e21:	00 07                	add    BYTE PTR [rdi],al
     e23:	76 0f                	jbe    e34 <__abi_tag+0xab8>
     e25:	9b                   	fwait
     e26:	03 00                	add    eax,DWORD PTR [rax]
     e28:	00 1d 05 00 00 01    	add    BYTE PTR [rip+0x1000005],bl        # 1000e33 <_end+0xffae1b>
     e2e:	f5                   	cmc
     e2f:	00 00                	add    BYTE PTR [rax],al
     e31:	00 01                	add    BYTE PTR [rcx],al
     e33:	1d 05 00 00 00       	sbb    eax,0x5
     e38:	08 41 01             	or     BYTE PTR [rcx+0x1],al
     e3b:	00 00                	add    BYTE PTR [rax],al
     e3d:	17                   	(bad)
     e3e:	fe 00                	inc    BYTE PTR [rax]
     e40:	00 00                	add    BYTE PTR [rax],al
     e42:	07                   	(bad)
     e43:	d7                   	xlat   BYTE PTR ds:[rbx]
     e44:	11 f5                	adc    ebp,esi
     e46:	00 00                	add    BYTE PTR [rax],al
     e48:	00 a3 00 00 00 46    	add    BYTE PTR [rbx+0x46000000],ah
     e4e:	05 00 00 01 f5       	add    eax,0xf5010000
     e53:	00 00                	add    BYTE PTR [rax],al
     e55:	00 01                	add    BYTE PTR [rcx],al
     e57:	1d 05 00 00 01       	sbb    eax,0x1000005
     e5c:	66 00 00             	data16 add BYTE PTR [rax],al
     e5f:	00 00                	add    BYTE PTR [rax],al
     e61:	17                   	(bad)
     e62:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
     e65:	00 07                	add    BYTE PTR [rdi],al
     e67:	db 1a                	fistp  DWORD PTR [rdx]
     e69:	41 02 00             	add    al,BYTE PTR [r8]
     e6c:	00 3a                	add    BYTE PTR [rdx],bh
     e6e:	00 00                	add    BYTE PTR [rax],al
     e70:	00 6a 05             	add    BYTE PTR [rdx+0x5],ch
     e73:	00 00                	add    BYTE PTR [rax],al
     e75:	01 f5                	add    ebp,esi
     e77:	00 00                	add    BYTE PTR [rax],al
     e79:	00 01                	add    BYTE PTR [rcx],al
     e7b:	1d 05 00 00 01       	sbb    eax,0x1000005
     e80:	66 00 00             	data16 add BYTE PTR [rax],al
     e83:	00 00                	add    BYTE PTR [rax],al
     e85:	09 6f 26             	or     DWORD PTR [rdi+0x26],ebp
     e88:	00 00                	add    BYTE PTR [rax],al
     e8a:	9b                   	fwait
     e8b:	03 0c 66             	add    ecx,DWORD PTR [rsi+riz*2]
     e8e:	00 00                	add    BYTE PTR [rax],al
     e90:	00 80 05 00 00 01    	add    BYTE PTR [rax+0x1000005],al
     e96:	f5                   	cmc
     e97:	00 00                	add    BYTE PTR [rax],al
     e99:	00 00                	add    BYTE PTR [rax],al
     e9b:	14 06                	adc    al,0x6
     e9d:	02 00                	add    al,BYTE PTR [rax]
     e9f:	00 0d 8f 01 2e 00    	add    BYTE PTR [rip+0x2e018f],cl        # 2e1034 <_end+0x2db01c>
     ea5:	00 00                	add    BYTE PTR [rax],al
     ea7:	a0 05 00 00 01 41 01 	movabs al,ds:0x14101000005
     eae:	00 00 
     eb0:	01 a0 05 00 00 01    	add    DWORD PTR [rax+0x1000005],esp
     eb6:	2e 00 00             	cs add BYTE PTR [rax],al
     eb9:	00 00                	add    BYTE PTR [rax],al
     ebb:	08 8c 04 00 00 14 67 	or     BYTE PTR [rsp+rax*1+0x67140000],cl
     ec2:	02 00                	add    al,BYTE PTR [rax]
     ec4:	00 0d 4f 01 66 00    	add    BYTE PTR [rip+0x66014f],cl        # 661019 <_end+0x65b001>
     eca:	00 00                	add    BYTE PTR [rax],al
     ecc:	c0 05 00 00 01 41 01 	rol    BYTE PTR [rip+0x41010000],0x1        # 41010ed3 <_end+0x4100aebb>
     ed3:	00 00                	add    BYTE PTR [rax],al
     ed5:	01 85 04 00 00 00    	add    DWORD PTR [rbp+0x4],eax
     edb:	46 37                	rex.RX (bad)
     edd:	02 00                	add    al,BYTE PTR [rax]
     edf:	00 16                	add    BYTE PTR [rsi],dl
     ee1:	57                   	push   rdi
     ee2:	01 0b                	add    DWORD PTR [rbx],ecx
     ee4:	1f                   	(bad)
     ee5:	06                   	(bad)
     ee6:	00 00                	add    BYTE PTR [rax],al
     ee8:	02 09                	add    cl,BYTE PTR [rcx]
     eea:	cc                   	int3
     eeb:	0b e2                	or     esp,edx
     eed:	00 00                	add    BYTE PTR [rax],al
     eef:	00 02                	add    BYTE PTR [rdx],al
     ef1:	09 dc                	or     esp,ebx
     ef3:	0b 1f                	or     ebx,DWORD PTR [rdi]
     ef5:	06                   	(bad)
     ef6:	00 00                	add    BYTE PTR [rax],al
     ef8:	02 09                	add    cl,BYTE PTR [rcx]
     efa:	e7 0b                	out    0xb,eax
     efc:	3a 06                	cmp    al,BYTE PTR [rsi]
     efe:	00 00                	add    BYTE PTR [rax],al
     f00:	02 09                	add    cl,BYTE PTR [rcx]
     f02:	e8 0b 50 06 00       	call   65f12 <_end+0x5fefa>
     f07:	00 02                	add    BYTE PTR [rdx],al
     f09:	09 e9                	or     ecx,ebp
     f0b:	0b 74 06 00          	or     esi,DWORD PTR [rsi+rax*1+0x0]
     f0f:	00 02                	add    BYTE PTR [rdx],al
     f11:	09 eb                	or     ebx,ebp
     f13:	0b 98 06 00 00 02    	or     ebx,DWORD PTR [rax+0x2000006]
     f19:	09 ec                	or     esp,ebp
     f1b:	0b ba 06 00 00 2e    	or     edi,DWORD PTR [rdx+0x2e000006]
     f21:	64 69 76 00 d9 dd 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1ddd9
     f28:	00 
     f29:	00 e2                	add    dl,ah
     f2b:	00 00                	add    BYTE PTR [rax],al
     f2d:	00 01                	add    BYTE PTR [rcx],al
     f2f:	db 00                	fild   DWORD PTR [rax]
     f31:	00 00                	add    BYTE PTR [rax],al
     f33:	01 db                	add    ebx,ebx
     f35:	00 00                	add    BYTE PTR [rax],al
     f37:	00 00                	add    BYTE PTR [rax],al
     f39:	00 09                	add    BYTE PTR [rcx],cl
     f3b:	c8 02 00 00          	enter  0x2,0x0
     f3f:	e6 03                	out    0x3,al
     f41:	1e                   	(bad)
     f42:	e2 00                	loop   f44 <__abi_tag+0xbc8>
     f44:	00 00                	add    BYTE PTR [rax],al
     f46:	3a 06                	cmp    al,BYTE PTR [rsi]
     f48:	00 00                	add    BYTE PTR [rax],al
     f4a:	01 db                	add    ebx,ebx
     f4c:	00 00                	add    BYTE PTR [rax],al
     f4e:	00 01                	add    BYTE PTR [rcx],al
     f50:	db 00                	fild   DWORD PTR [rax]
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	00 09                	add    BYTE PTR [rcx],cl
     f56:	52                   	push   rdx
     f57:	02 00                	add    al,BYTE PTR [rax]
     f59:	00 ed                	add    ch,ch
     f5b:	01 01                	add    DWORD PTR [rcx],eax
     f5d:	db 00                	fild   DWORD PTR [rax]
     f5f:	00 00                	add    BYTE PTR [rax],al
     f61:	50                   	push   rax
     f62:	06                   	(bad)
     f63:	00 00                	add    BYTE PTR [rax],al
     f65:	01 f5                	add    ebp,esi
     f67:	00 00                	add    BYTE PTR [rax],al
     f69:	00 00                	add    BYTE PTR [rax],al
     f6b:	17                   	(bad)
     f6c:	32 01                	xor    al,BYTE PTR [rcx]
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	07                   	(bad)
     f71:	ee                   	out    dx,al
     f72:	16                   	(bad)
     f73:	29 01                	sub    DWORD PTR [rcx],eax
     f75:	00 00                	add    BYTE PTR [rax],al
     f77:	db 00                	fild   DWORD PTR [rax]
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	74 06                	je     f83 <__abi_tag+0xc07>
     f7d:	00 00                	add    BYTE PTR [rax],al
     f7f:	01 f5                	add    ebp,esi
     f81:	00 00                	add    BYTE PTR [rax],al
     f83:	00 01                	add    BYTE PTR [rcx],al
     f85:	1d 05 00 00 01       	sbb    eax,0x1000005
     f8a:	66 00 00             	data16 add BYTE PTR [rax],al
     f8d:	00 00                	add    BYTE PTR [rax],al
     f8f:	17                   	(bad)
     f90:	bf 02 00 00 07       	mov    edi,0x7000002
     f95:	f3 1f                	repz (bad)
     f97:	b6 02                	mov    dh,0x2
     f99:	00 00                	add    BYTE PTR [rax],al
     f9b:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
     f9e:	00 98 06 00 00 01    	add    BYTE PTR [rax+0x1000006],bl
     fa4:	f5                   	cmc
     fa5:	00 00                	add    BYTE PTR [rax],al
     fa7:	00 01                	add    BYTE PTR [rcx],al
     fa9:	1d 05 00 00 01       	sbb    eax,0x1000005
     fae:	66 00 00             	data16 add BYTE PTR [rax],al
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	14 af                	adc    al,0xaf
     fb5:	02 00                	add    al,BYTE PTR [rax]
     fb7:	00 07                	add    BYTE PTR [rdi],al
     fb9:	7c 0e                	jl     fc9 <__abi_tag+0xc4d>
     fbb:	b3 06                	mov    bl,0x6
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	b3 06                	mov    bl,0x6
     fc1:	00 00                	add    BYTE PTR [rax],al
     fc3:	01 f5                	add    ebp,esi
     fc5:	00 00                	add    BYTE PTR [rax],al
     fc7:	00 01                	add    BYTE PTR [rcx],al
     fc9:	1d 05 00 00 00       	sbb    eax,0x5
     fce:	05 04 04 80 01       	add    eax,0x1800404
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	14 2b                	adc    al,0x2b
     fd7:	00 00                	add    BYTE PTR [rax],al
     fd9:	00 07                	add    BYTE PTR [rdi],al
     fdb:	7f 14                	jg     ff1 <__abi_tag+0xc75>
     fdd:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     fe1:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     fe5:	01 f5                	add    ebp,esi
     fe7:	00 00                	add    BYTE PTR [rax],al
     fe9:	00 01                	add    BYTE PTR [rcx],al
     feb:	1d 05 00 00 00       	sbb    eax,0x5
     ff0:	05 10 04 18 02       	add    eax,0x2180410
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	02 0e                	add    cl,BYTE PTR [rsi]
     ff9:	27                   	(bad)
     ffa:	0c 4e                	or     al,0x4e
     ffc:	03 00                	add    eax,DWORD PTR [rax]
     ffe:	00 02                	add    BYTE PTR [rdx],al
    1000:	0e                   	(bad)
    1001:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    1003:	6a 03                	push   0x3
    1005:	00 00                	add    BYTE PTR [rax],al
    1007:	02 0e                	add    cl,BYTE PTR [rsi]
    1009:	2e 0e                	cs (bad)
    100b:	d1 04 00             	rol    DWORD PTR [rax+rax*1],1
    100e:	00 02                	add    BYTE PTR [rdx],al
    1010:	0e                   	(bad)
    1011:	36 0c 72             	ss or  al,0x72
    1014:	00 00                	add    BYTE PTR [rax],al
    1016:	00 02                	add    BYTE PTR [rdx],al
    1018:	0e                   	(bad)
    1019:	37                   	(bad)
    101a:	0c aa                	or     al,0xaa
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 05 10 04 a4 02    	add    BYTE PTR [rip+0x2a40410],al        # 2a41434 <_end+0x2a3b41c>
    1024:	00 00                	add    BYTE PTR [rax],al
    1026:	02 0e                	add    cl,BYTE PTR [rsi]
    1028:	39 0c 8c             	cmp    DWORD PTR [rsp+rcx*4],ecx
    102b:	02 00                	add    al,BYTE PTR [rax]
    102d:	00 05 10 05 0f 02    	add    BYTE PTR [rip+0x20f0510],al        # 20f1543 <_end+0x20eb52b>
    1033:	00 00                	add    BYTE PTR [rax],al
    1035:	02 0e                	add    cl,BYTE PTR [rsi]
    1037:	39 0c a4             	cmp    DWORD PTR [rsp+riz*4],ecx
    103a:	02 00                	add    al,BYTE PTR [rax]
    103c:	00 02                	add    BYTE PTR [rdx],al
    103e:	0e                   	(bad)
    103f:	39 0c bc             	cmp    DWORD PTR [rsp+rdi*4],ecx
    1042:	02 00                	add    al,BYTE PTR [rax]
    1044:	00 02                	add    BYTE PTR [rdx],al
    1046:	0e                   	(bad)
    1047:	39 0c d4             	cmp    DWORD PTR [rsp+rdx*8],ecx
    104a:	02 00                	add    al,BYTE PTR [rax]
    104c:	00 02                	add    BYTE PTR [rdx],al
    104e:	0e                   	(bad)
    104f:	39 0c ec             	cmp    DWORD PTR [rsp+rbp*8],ecx
    1052:	02 00                	add    al,BYTE PTR [rax]
    1054:	00 02                	add    BYTE PTR [rdx],al
    1056:	0e                   	(bad)
    1057:	39 0c 04             	cmp    DWORD PTR [rsp+rax*1],ecx
    105a:	03 00                	add    eax,DWORD PTR [rax]
    105c:	00 02                	add    BYTE PTR [rdx],al
    105e:	0e                   	(bad)
    105f:	39 0c 1c             	cmp    DWORD PTR [rsp+rbx*1],ecx
    1062:	03 00                	add    eax,DWORD PTR [rax]
    1064:	00 02                	add    BYTE PTR [rdx],al
    1066:	0e                   	(bad)
    1067:	3a 0c 85 03 00 00 02 	cmp    cl,BYTE PTR [rax*4+0x2000003]
    106e:	0e                   	(bad)
    106f:	3b 0c a2             	cmp    ecx,DWORD PTR [rdx+riz*4]
    1072:	03 00                	add    eax,DWORD PTR [rax]
    1074:	00 02                	add    BYTE PTR [rdx],al
    1076:	0e                   	(bad)
    1077:	3c 0c                	cmp    al,0xc
    1079:	b8 03 00 00 02       	mov    eax,0x2000003
    107e:	0e                   	(bad)
    107f:	3d 0c ce 03 00       	cmp    eax,0x3ce0c
    1084:	00 02                	add    BYTE PTR [rdx],al
    1086:	0e                   	(bad)
    1087:	3f                   	(bad)
    1088:	0c 05                	or     al,0x5
    108a:	06                   	(bad)
    108b:	00 00                	add    BYTE PTR [rax],al
    108d:	02 0e                	add    cl,BYTE PTR [rsi]
    108f:	3f                   	(bad)
    1090:	0c 34                	or     al,0x34
    1092:	03 00                	add    eax,DWORD PTR [rax]
    1094:	00 02                	add    BYTE PTR [rdx],al
    1096:	0e                   	(bad)
    1097:	3f                   	(bad)
    1098:	0c f8                	or     al,0xf8
    109a:	03 00                	add    eax,DWORD PTR [rax]
    109c:	00 02                	add    BYTE PTR [rdx],al
    109e:	0e                   	(bad)
    109f:	41 0c 14             	rex.B or al,0x14
    10a2:	04 00                	add    al,0x0
    10a4:	00 02                	add    BYTE PTR [rdx],al
    10a6:	0e                   	(bad)
    10a7:	43 0c 2a             	rex.XB or al,0x2a
    10aa:	04 00                	add    al,0x0
    10ac:	00 02                	add    BYTE PTR [rdx],al
    10ae:	0e                   	(bad)
    10af:	46 0c 45             	rex.RX or al,0x45
    10b2:	04 00                	add    al,0x0
    10b4:	00 02                	add    BYTE PTR [rdx],al
    10b6:	0e                   	(bad)
    10b7:	47 0c 60             	rex.RXB or al,0x60
    10ba:	04 00                	add    al,0x0
    10bc:	00 02                	add    BYTE PTR [rdx],al
    10be:	0e                   	(bad)
    10bf:	48 0c 91             	rex.W or al,0x91
    10c2:	04 00                	add    al,0x0
    10c4:	00 02                	add    BYTE PTR [rdx],al
    10c6:	0e                   	(bad)
    10c7:	4a 0c b1             	rex.WX or al,0xb1
    10ca:	04 00                	add    al,0x0
    10cc:	00 02                	add    BYTE PTR [rdx],al
    10ce:	0e                   	(bad)
    10cf:	4b 0c e4             	rex.WXB or al,0xe4
    10d2:	04 00                	add    al,0x0
    10d4:	00 02                	add    BYTE PTR [rdx],al
    10d6:	0e                   	(bad)
    10d7:	4d 0c f1             	rex.WRB or al,0xf1
    10da:	04 00                	add    al,0x0
    10dc:	00 02                	add    BYTE PTR [rdx],al
    10de:	0e                   	(bad)
    10df:	4e 0c 02             	rex.WRX or al,0x2
    10e2:	05 00 00 02 0e       	add    eax,0xe020000
    10e7:	4f 0c 22             	rex.WRXB or al,0x22
    10ea:	05 00 00 02 0e       	add    eax,0xe020000
    10ef:	50                   	push   rax
    10f0:	0c 46                	or     al,0x46
    10f2:	05 00 00 02 0e       	add    eax,0xe020000
    10f7:	51                   	push   rcx
    10f8:	0c 6a                	or     al,0x6a
    10fa:	05 00 00 02 0e       	add    eax,0xe020000
    10ff:	53                   	push   rbx
    1100:	0c 80                	or     al,0x80
    1102:	05 00 00 02 0e       	add    eax,0xe020000
    1107:	54                   	push   rsp
    1108:	0c a5                	or     al,0xa5
    110a:	05 00 00 05 10       	add    eax,0x10050000
    110f:	07                   	(bad)
    1110:	34 08                	xor    al,0x8
    1112:	00 00                	add    BYTE PTR [rax],al
    1114:	07                   	(bad)
    1115:	77 06                	ja     111d <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0xd>
    1117:	00 00                	add    BYTE PTR [rax],al
    1119:	0f 29 13             	movaps XMMWORD PTR [rbx],xmm2
    111c:	05 08 00 00 1e       	add    eax,0x1e000008
    1121:	db 00                	fild   DWORD PTR [rax]
    1123:	00 00                	add    BYTE PTR [rax],al
    1125:	11 08                	adc    DWORD PTR [rax],ecx
    1127:	00 00                	add    BYTE PTR [rax],al
    1129:	1f                   	(bad)
    112a:	01 00                	add    DWORD PTR [rax],eax
    112c:	07                   	(bad)
    112d:	99                   	cdq
    112e:	06                   	(bad)
    112f:	00 00                	add    BYTE PTR [rax],al
    1131:	0f 35                	sysexitd
    1133:	13 1d 08 00 00 1e    	adc    ebx,DWORD PTR [rip+0x1e000008]        # 1e001141 <_end+0x1dffb129>
    1139:	db 00                	fild   DWORD PTR [rax]
    113b:	00 00                	add    BYTE PTR [rax],al
    113d:	29 08                	sub    DWORD PTR [rax],ecx
    113f:	00 00                	add    BYTE PTR [rax],al
    1141:	1f                   	(bad)
    1142:	01 00                	add    DWORD PTR [rax],eax
    1144:	07                   	(bad)
    1145:	54                   	push   rsp
    1146:	06                   	(bad)
    1147:	00 00                	add    BYTE PTR [rax],al
    1149:	04 2d                	add    al,0x2d
    114b:	0d 35 08 00 00       	or     eax,0x835
    1150:	1e                   	(bad)
    1151:	66 00 00             	data16 add BYTE PTR [rax],al
    1154:	00 41 08             	add    BYTE PTR [rcx+0x8],al
    1157:	00 00                	add    BYTE PTR [rax],al
    1159:	1f                   	(bad)
    115a:	07                   	(bad)
    115b:	00 07                	add    BYTE PTR [rdi],al
    115d:	7a 04                	jp     1163 <__fprintf_chk@plt+0x3>
    115f:	00 00                	add    BYTE PTR [rax],al
    1161:	04 39                	add    al,0x39
    1163:	13 52 08             	adc    edx,DWORD PTR [rdx+0x8]
    1166:	00 00                	add    BYTE PTR [rax],al
    1168:	0e                   	(bad)
    1169:	41 08 00             	or     BYTE PTR [r8],al
    116c:	00 1e                	add    BYTE PTR [rsi],bl
    116e:	db 00                	fild   DWORD PTR [rax]
    1170:	00 00                	add    BYTE PTR [rax],al
    1172:	5e                   	pop    rsi
    1173:	08 00                	or     BYTE PTR [rax],al
    1175:	00 1f                	add    BYTE PTR [rdi],bl
    1177:	03 00                	add    eax,DWORD PTR [rax]
    1179:	05 02 04 00 00       	add    eax,0x402
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	05 02 04 ce 02       	add    eax,0x2ce0402
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	07                   	(bad)
    1188:	55                   	push   rbp
    1189:	01 00                	add    DWORD PTR [rax],eax
    118b:	00 10                	add    BYTE PTR [rax],dl
    118d:	1a 14 27             	sbb    dl,BYTE PTR [rdi+riz*1]
    1190:	01 00                	add    DWORD PTR [rax],eax
    1192:	00 07                	add    BYTE PTR [rdi],al
    1194:	d5 05 00 00          	{rex2 0x5} add BYTE PTR [r8],r8b
    1198:	10 1b                	adc    BYTE PTR [rbx],bl
    119a:	14 33                	adc    al,0x33
    119c:	01 00                	add    DWORD PTR [rax],eax
    119e:	00 07                	add    BYTE PTR [rdi],al
    11a0:	38 03                	cmp    BYTE PTR [rbx],al
    11a2:	00 00                	add    BYTE PTR [rax],al
    11a4:	11 4f 1b             	adc    DWORD PTR [rdi+0x1b],ecx
    11a7:	3a 00                	cmp    al,BYTE PTR [rax]
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	20 7b 08             	and    BYTE PTR [rbx+0x8],bh
    11ae:	00 00                	add    BYTE PTR [rax],al
    11b0:	40 12 11             	rex adc dl,BYTE PTR [rcx]
    11b3:	d1 08                	ror    DWORD PTR [rax],1
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	06                   	(bad)
    11b8:	ae                   	scas   al,BYTE PTR es:[rdi]
    11b9:	03 00                	add    eax,DWORD PTR [rax]
    11bb:	00 12                	add    BYTE PTR [rdx],dl
    11bd:	12 0d 41 08 00 00    	adc    cl,BYTE PTR [rip+0x841]        # 1a04 <_Z6resizeP7HashMapj+0x1a4>
    11c3:	00 06                	add    BYTE PTR [rsi],al
    11c5:	82                   	(bad)
    11c6:	04 00                	add    al,0x0
    11c8:	00 12                	add    BYTE PTR [rdx],dl
    11ca:	13 0e                	adc    ecx,DWORD PTR [rsi]
    11cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    11cd:	08 00                	or     BYTE PTR [rax],al
    11cf:	00 20                	add    BYTE PTR [rax],ah
    11d1:	06                   	(bad)
    11d2:	5b                   	pop    rbx
    11d3:	06                   	(bad)
    11d4:	00 00                	add    BYTE PTR [rax],al
    11d6:	12 14 0e             	adc    dl,BYTE PTR [rsi+rcx*1]
    11d9:	6c                   	ins    BYTE PTR es:[rdi],dx
    11da:	08 00                	or     BYTE PTR [rax],al
    11dc:	00 24 06             	add    BYTE PTR [rsi+rax*1],ah
    11df:	53                   	push   rbx
    11e0:	04 00                	add    al,0x0
    11e2:	00 12                	add    BYTE PTR [rdx],dl
    11e4:	15 0a d1 08 00       	adc    eax,0x8d10a
    11e9:	00 28                	add    BYTE PTR [rax],ch
    11eb:	00 18                	add    BYTE PTR [rax],bl
    11ed:	ff 00                	inc    DWORD PTR [rax]
    11ef:	00 00                	add    BYTE PTR [rax],al
    11f1:	e1 08                	loope  11fb <main+0x2b>
    11f3:	00 00                	add    BYTE PTR [rax],al
    11f5:	19 3a                	sbb    DWORD PTR [rdx],edi
    11f7:	00 00                	add    BYTE PTR [rax],al
    11f9:	00 17                	add    BYTE PTR [rdi],dl
    11fb:	00 07                	add    BYTE PTR [rdi],al
    11fd:	7b 08                	jnp    1207 <main+0x37>
    11ff:	00 00                	add    BYTE PTR [rax],al
    1201:	12 16                	adc    dl,BYTE PTR [rsi]
    1203:	03 90 08 00 00 26    	add    edx,DWORD PTR [rax+0x26000008]
    1209:	8e 02                	mov    es,WORD PTR [rdx]
    120b:	00 00                	add    BYTE PTR [rax],al
    120d:	13 0a                	adc    ecx,DWORD PTR [rdx]
    120f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1210:	00 00                	add    BYTE PTR [rax],al
    1212:	00 0f                	add    BYTE PTR [rdi],cl
    1214:	26 71 01             	es jno 1218 <_start+0x8>
    1217:	00 00                	add    BYTE PTR [rax],al
    1219:	13 0e                	adc    ecx,DWORD PTR [rsi]
    121b:	6d                   	ins    DWORD PTR es:[rdi],dx
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 20                	add    BYTE PTR [rax],ah
    1220:	07                   	(bad)
    1221:	56                   	push   rsi
    1222:	03 00                	add    eax,DWORD PTR [rax]
    1224:	00 13                	add    BYTE PTR [rbx],dl
    1226:	10 12                	adc    BYTE PTR [rdx],dl
    1228:	e1 08                	loope  1232 <_start+0x22>
    122a:	00 00                	add    BYTE PTR [rax],al
    122c:	07                   	(bad)
    122d:	2d 08 00 00 13       	sub    eax,0x13000008
    1232:	11 14 1d 09 00 00 08 	adc    DWORD PTR [rbx*1+0x8000009],edx
    1239:	22 09                	and    cl,BYTE PTR [rcx]
    123b:	00 00                	add    BYTE PTR [rax],al
    123d:	2d 6c 08 00 00       	sub    eax,0x86c
    1242:	31 09                	xor    DWORD PTR [rcx],ecx
    1244:	00 00                	add    BYTE PTR [rax],al
    1246:	01 05 09 00 00 00    	add    DWORD PTR [rip+0x9],eax        # 1255 <deregister_tm_clones+0x15>
    124c:	20 a2 05 00 00 80    	and    BYTE PTR [rdx-0x7ffffffb],ah
    1252:	13 13                	adc    edx,DWORD PTR [rbx]
    1254:	7f 09                	jg     125f <deregister_tm_clones+0x1f>
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	06                   	(bad)
    1259:	90                   	nop
    125a:	06                   	(bad)
    125b:	00 00                	add    BYTE PTR [rax],al
    125d:	13 14 0e             	adc    edx,DWORD PTR [rsi+rcx*1]
    1260:	6c                   	ins    BYTE PTR es:[rdi],dx
    1261:	08 00                	or     BYTE PTR [rax],al
    1263:	00 00                	add    BYTE PTR [rax],al
    1265:	06                   	(bad)
    1266:	9e                   	sahf
    1267:	04 00                	add    al,0x0
    1269:	00 13                	add    BYTE PTR [rbx],dl
    126b:	15 0e 6c 08 00       	adc    eax,0x86c0e
    1270:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    1273:	41 06                	rex.B (bad)
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	13 17                	adc    edx,DWORD PTR [rdi]
    1279:	0e                   	(bad)
    127a:	6c                   	ins    BYTE PTR es:[rdi],dx
    127b:	08 00                	or     BYTE PTR [rax],al
    127d:	00 08                	add    BYTE PTR [rax],cl
    127f:	06                   	(bad)
    1280:	53                   	push   rbx
    1281:	04 00                	add    al,0x0
    1283:	00 13                	add    BYTE PTR [rbx],dl
    1285:	1a 0a                	sbb    cl,BYTE PTR [rdx]
    1287:	7f 09                	jg     1292 <register_tm_clones+0x22>
    1289:	00 00                	add    BYTE PTR [rax],al
    128b:	0c 06                	or     al,0x6
    128d:	4d 15 00 00 13 1d    	rex.WRB adc rax,0x1d130000
    1293:	0c 05                	or     al,0x5
    1295:	09 00                	or     DWORD PTR [rax],eax
    1297:	00 40 00             	add    BYTE PTR [rax+0x0],al
    129a:	18 ff                	sbb    bh,bh
    129c:	00 00                	add    BYTE PTR [rax],al
    129e:	00 8f 09 00 00 19    	add    BYTE PTR [rdi+0x19000009],cl
    12a4:	3a 00                	cmp    al,BYTE PTR [rax]
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	33 00                	xor    eax,DWORD PTR [rax]
    12aa:	07                   	(bad)
    12ab:	a2 05 00 00 13 1e 03 	movabs ds:0x931031e13000005,al
    12b2:	31 09 
    12b4:	00 00                	add    BYTE PTR [rax],al
    12b6:	20 75 04             	and    BYTE PTR [rbp+0x4],dh
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	18 13                	sbb    BYTE PTR [rbx],dl
    12bd:	20 dc                	and    ah,bl
    12bf:	09 00                	or     DWORD PTR [rax],eax
    12c1:	00 06                	add    BYTE PTR [rsi],al
    12c3:	49 06                	rex.WB (bad)
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	13 21                	adc    esp,DWORD PTR [rcx]
    12c9:	0f dc 09             	paddusb mm1,QWORD PTR [rcx]
    12cc:	00 00                	add    BYTE PTR [rax],al
    12ce:	00 06                	add    BYTE PTR [rsi],al
    12d0:	bc 05 00 00 13       	mov    esp,0x13000005
    12d5:	22 0e                	and    cl,BYTE PTR [rsi]
    12d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    12d8:	08 00                	or     BYTE PTR [rax],al
    12da:	00 08                	add    BYTE PTR [rax],cl
    12dc:	06                   	(bad)
    12dd:	0f 08                	invd
    12df:	00 00                	add    BYTE PTR [rax],al
    12e1:	13 23                	adc    esp,DWORD PTR [rbx]
    12e3:	0e                   	(bad)
    12e4:	6c                   	ins    BYTE PTR es:[rdi],dx
    12e5:	08 00                	or     BYTE PTR [rax],al
    12e7:	00 0c 06             	add    BYTE PTR [rsi+rax*1],cl
    12ea:	74 03                	je     12ef <__do_global_dtors_aux+0x3f>
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	13 24 0e             	adc    esp,DWORD PTR [rsi+rcx*1]
    12f1:	6c                   	ins    BYTE PTR es:[rdi],dx
    12f2:	08 00                	or     BYTE PTR [rax],al
    12f4:	00 10                	add    BYTE PTR [rax],dl
    12f6:	00 08                	add    BYTE PTR [rax],cl
    12f8:	8f 09 00 00          	(bad)
    12fc:	07                   	(bad)
    12fd:	75 04                	jne    1303 <_Z16buildStringArrayPcj+0x3>
    12ff:	00 00                	add    BYTE PTR [rax],al
    1301:	13 25 03 9b 09 00    	adc    esp,DWORD PTR [rip+0x99b03]        # 9ae0a <_end+0x94df2>
    1307:	00 20                	add    BYTE PTR [rax],ah
    1309:	30 03                	xor    BYTE PTR [rbx],al
    130b:	00 00                	add    BYTE PTR [rax],al
    130d:	18 13                	sbb    BYTE PTR [rbx],dl
    130f:	27                   	(bad)
    1310:	2e 0a 00             	cs or  al,BYTE PTR [rax]
    1313:	00 06                	add    BYTE PTR [rsi],al
    1315:	5a                   	pop    rdx
    1316:	05 00 00 13 28       	add    eax,0x28130000
    131b:	0b 2e                	or     ebp,DWORD PTR [rsi]
    131d:	0a 00                	or     al,BYTE PTR [rax]
    131f:	00 00                	add    BYTE PTR [rax],al
    1321:	06                   	(bad)
    1322:	0f 08                	invd
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	13 29                	adc    ebp,DWORD PTR [rcx]
    1328:	0e                   	(bad)
    1329:	6c                   	ins    BYTE PTR es:[rdi],dx
    132a:	08 00                	or     BYTE PTR [rax],al
    132c:	00 08                	add    BYTE PTR [rax],cl
    132e:	06                   	(bad)
    132f:	ff 07                	inc    DWORD PTR [rdi]
    1331:	00 00                	add    BYTE PTR [rax],al
    1333:	13 2a                	adc    ebp,DWORD PTR [rdx]
    1335:	0b b3 06 00 00 0c    	or     esi,DWORD PTR [rbx+0xc000006]
    133b:	06                   	(bad)
    133c:	49 04 00             	rex.WB add al,0x0
    133f:	00 13                	add    BYTE PTR [rbx],dl
    1341:	2b 0c 11             	sub    ecx,DWORD PTR [rcx+rdx*1]
    1344:	09 00                	or     DWORD PTR [rax],eax
    1346:	00 10                	add    BYTE PTR [rax],dl
    1348:	00 08                	add    BYTE PTR [rax],cl
    134a:	e1 09                	loope  1355 <_Z16buildStringArrayPcj+0x55>
    134c:	00 00                	add    BYTE PTR [rax],al
    134e:	07                   	(bad)
    134f:	30 03                	xor    BYTE PTR [rbx],al
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	13 2c 03             	adc    ebp,DWORD PTR [rbx+rax*1]
    1356:	ed                   	in     eax,dx
    1357:	09 00                	or     DWORD PTR [rax],eax
    1359:	00 26                	add    BYTE PTR [rsi],ah
    135b:	b8 07 00 00 14       	mov    eax,0x14000007
    1360:	06                   	(bad)
    1361:	6d                   	ins    DWORD PTR es:[rdi],dx
    1362:	00 00                	add    BYTE PTR [rax],al
    1364:	00 04 47             	add    BYTE PTR [rdi+rax*2],al
    1367:	c4                   	(bad)
    1368:	04 00                	add    al,0x0
    136a:	00 14 0c             	add    BYTE PTR [rsp+rcx*1],dl
    136d:	06                   	(bad)
    136e:	68 04 00 00 61       	push   0x61000004
    1373:	0a 00                	or     al,BYTE PTR [rax]
    1375:	00 01                	add    BYTE PTR [rcx],al
    1377:	2e 0a 00             	cs or  al,BYTE PTR [rax]
    137a:	00 00                	add    BYTE PTR [rax],al
    137c:	17                   	(bad)
    137d:	c5 05 00             	(bad)
    1380:	00 14 0b             	add    BYTE PTR [rbx+rcx*1],dl
    1383:	05 76 05 00 00       	add    eax,0x576
    1388:	66 00 00             	data16 add BYTE PTR [rax],al
    138b:	00 80 0a 00 00 01    	add    BYTE PTR [rax+0x100000a],al
    1391:	2e 0a 00             	cs or  al,BYTE PTR [rax]
    1394:	00 01                	add    BYTE PTR [rcx],al
    1396:	05 09 00 00 00       	add    eax,0x9
    139b:	17                   	(bad)
    139c:	3d 04 00 00 14       	cmp    eax,0x14000004
    13a1:	0a 05 ef 06 00 00    	or     al,BYTE PTR [rip+0x6ef]        # 1a96 <_Z6resizeP7HashMapj+0x236>
    13a7:	66 00 00             	data16 add BYTE PTR [rax],al
    13aa:	00 9f 0a 00 00 01    	add    BYTE PTR [rdi+0x100000a],bl
    13b0:	2e 0a 00             	cs or  al,BYTE PTR [rax]
    13b3:	00 01                	add    BYTE PTR [rcx],al
    13b5:	05 09 00 00 00       	add    eax,0x9
    13ba:	17                   	(bad)
    13bb:	9e                   	sahf
    13bc:	05 00 00 14 09       	add    eax,0x9140000
    13c1:	05 0e 07 00 00       	add    eax,0x70e
    13c6:	66 00 00             	data16 add BYTE PTR [rax],al
    13c9:	00 be 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],bh
    13cf:	2e 0a 00             	cs or  al,BYTE PTR [rax]
    13d2:	00 01                	add    BYTE PTR [rcx],al
    13d4:	05 09 00 00 00       	add    eax,0x9
    13d9:	48 60                	rex.W (bad)
    13db:	05 00 00 14 08       	add    eax,0x8140000
    13e0:	06                   	(bad)
    13e1:	69 05 00 00 e1 09 00 	imul   eax,DWORD PTR [rip+0x9e10000],0x51090000        # 9e113eb <_end+0x9e0b3d3>
    13e8:	00 09 51 
    13eb:	07                   	(bad)
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	a3 02 0e 3f 01 00 00 	movabs ds:0xae90000013f0e02,eax
    13f5:	e9 0a 
    13f7:	00 00                	add    BYTE PTR [rax],al
    13f9:	01 2e                	add    DWORD PTR [rsi],ebp
    13fb:	00 00                	add    BYTE PTR [rax],al
    13fd:	00 01                	add    BYTE PTR [rcx],al
    13ff:	2e 00 00             	cs add BYTE PTR [rax],al
    1402:	00 00                	add    BYTE PTR [rax],al
    1404:	25 bb 03 00 00       	and    eax,0x3bb
    1409:	af                   	scas   eax,DWORD PTR es:[rdi]
    140a:	02 fa                	add    bh,dl
    140c:	0a 00                	or     al,BYTE PTR [rax]
    140e:	00 01                	add    BYTE PTR [rcx],al
    1410:	3f                   	(bad)
    1411:	01 00                	add    DWORD PTR [rax],eax
    1413:	00 00                	add    BYTE PTR [rax],al
    1415:	09 4c 05 00          	or     DWORD PTR [rbp+rax*1+0x0],ecx
    1419:	00 d4                	add    ah,dl
    141b:	02 0e                	add    cl,BYTE PTR [rsi]
    141d:	3f                   	(bad)
    141e:	01 00                	add    DWORD PTR [rax],eax
    1420:	00 15 0b 00 00 01    	add    BYTE PTR [rip+0x100000b],dl        # 1001431 <_end+0xffb419>
    1426:	2e 00 00             	cs add BYTE PTR [rax],al
    1429:	00 01                	add    BYTE PTR [rcx],al
    142b:	2e 00 00             	cs add BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	49 1e                	rex.WB (bad)
    1432:	06                   	(bad)
    1433:	00 00                	add    BYTE PTR [rax],al
    1435:	15 45 0d 36 0b       	adc    eax,0xb360d45
    143a:	00 00                	add    BYTE PTR [rax],al
    143c:	01 f5                	add    ebp,esi
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	00 01                	add    BYTE PTR [rcx],al
    1442:	f5                   	cmc
    1443:	00 00                	add    BYTE PTR [rax],al
    1445:	00 01                	add    BYTE PTR [rcx],al
    1447:	12 01                	adc    al,BYTE PTR [rcx]
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	01 f5                	add    ebp,esi
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 00                	add    BYTE PTR [rax],al
    1451:	21 18                	and    DWORD PTR [rax],ebx
    1453:	08 00                	or     BYTE PTR [rax],al
    1455:	00 c1                	add    cl,al
    1457:	09 d8                	or     eax,ebx
    1459:	03 00                	add    eax,DWORD PTR [rax]
    145b:	00 33                	add    BYTE PTR [rbx],dh
    145d:	0a 00                	or     al,BYTE PTR [rax]
    145f:	00 60 18             	add    BYTE PTR [rax+0x18],ah
    1462:	00 00                	add    BYTE PTR [rax],al
    1464:	00 00                	add    BYTE PTR [rax],al
    1466:	00 00                	add    BYTE PTR [rax],al
    1468:	4c 02 00             	rex.WR add r8b,BYTE PTR [rax]
    146b:	00 00                	add    BYTE PTR [rax],al
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 01                	add    BYTE PTR [rcx],al
    1471:	9c                   	pushf
    1472:	71 0d                	jno    1481 <_Z16buildStringArrayPcj+0x181>
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	0f 05                	syscall
    1478:	06                   	(bad)
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	c1 19 71             	rcr    DWORD PTR [rcx],0x71
    147e:	0d 00 00 90 00       	or     eax,0x900000
    1483:	00 00                	add    BYTE PTR [rax],al
    1485:	84 00                	test   BYTE PTR [rax],al
    1487:	00 00                	add    BYTE PTR [rax],al
    1489:	0f 0b                	ud2
    148b:	08 00                	or     BYTE PTR [rax],al
    148d:	00 c1                	add    cl,al
    148f:	2b 6c 08 00          	sub    ebp,DWORD PTR [rax+rcx*1+0x0]
    1493:	00 cf                	add    bh,cl
    1495:	00 00                	add    BYTE PTR [rax],al
    1497:	00 c1                	add    cl,al
    1499:	00 00                	add    BYTE PTR [rax],al
    149b:	00 1a                	add    BYTE PTR [rdx],bl
    149d:	ec                   	in     al,dx
    149e:	03 00                	add    eax,DWORD PTR [rax]
    14a0:	00 86 0d 00 00 09    	add    BYTE PTR [rsi+0x900000d],al
    14a6:	03 18                	add    ebx,DWORD PTR [rax]
    14a8:	43 00 00             	rex.XB add BYTE PTR [r8],al
    14ab:	00 00                	add    BYTE PTR [rax],al
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	0a 01                	or     al,BYTE PTR [rcx]
    14b1:	06                   	(bad)
    14b2:	00 00                	add    BYTE PTR [rax],al
    14b4:	c4                   	(bad)
    14b5:	0d 33 0a 00 00       	or     eax,0xa33
    14ba:	1e                   	(bad)
    14bb:	01 00                	add    DWORD PTR [rax],eax
    14bd:	00 10                	add    BYTE PTR [rax],dl
    14bf:	01 00                	add    DWORD PTR [rax],eax
    14c1:	00 4a f8             	add    BYTE PTR [rdx-0x8],cl
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	1b 69 00             	sbb    ebp,DWORD PTR [rcx+0x0]
    14ce:	c7                   	(bad)
    14cf:	13 6c 08 00          	adc    ebp,DWORD PTR [rax+rcx*1+0x0]
    14d3:	00 6b 01             	add    BYTE PTR [rbx+0x1],ch
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	65 01 00             	add    DWORD PTR gs:[rax],eax
    14db:	00 4b 80             	add    BYTE PTR [rbx-0x80],cl
    14de:	19 00                	sbb    DWORD PTR [rax],eax
    14e0:	00 00                	add    BYTE PTR [rax],al
    14e2:	00 00                	add    BYTE PTR [rax],al
    14e4:	00 90 00 00 00 00    	add    BYTE PTR [rax+0x0],dl
    14ea:	00 00                	add    BYTE PTR [rax],al
    14ec:	00 0a                	add    BYTE PTR [rdx],cl
    14ee:	87 04 00             	xchg   DWORD PTR [rax+rax*1],eax
    14f1:	00 c8                	add    al,cl
    14f3:	12 6c 08 00          	adc    ch,BYTE PTR [rax+rcx*1+0x0]
    14f7:	00 91 01 00 00 8b    	add    BYTE PTR [rcx-0x74ffffff],dl
    14fd:	01 00                	add    DWORD PTR [rax],eax
    14ff:	00 15 03 01 00 00    	add    BYTE PTR [rip+0x103],dl        # 1608 <_Z17hashMapAddElementP7HashMap8string_t+0xc8>
    1505:	4c                   	rex.WR
    1506:	4d 15 00 00 01 cb    	rex.WRB adc rax,0xffffffffcb010000
    150c:	14 05                	adc    al,0x5
    150e:	09 00                	or     DWORD PTR [rax],eax
    1510:	00 03                	add    BYTE PTR [rbx],al
    1512:	76 b0                	jbe    14c4 <_Z11hashMapCtorPFj8string_tEj+0x34>
    1514:	7e 4d                	jle    1563 <_Z17hashMapAddElementP7HashMap8string_t+0x23>
    1516:	8b 0d 00 00 de 19    	mov    ecx,DWORD PTR [rip+0x19de0000]        # 19de151c <_end+0x19ddb504>
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	00 00                	add    BYTE PTR [rax],al
    1522:	00 0e                	add    BYTE PTR [rsi],cl
    1524:	01 00                	add    DWORD PTR [rax],eax
    1526:	00 01                	add    BYTE PTR [rcx],al
    1528:	cc                   	int3
    1529:	1d 4e a8 0d 00       	sbb    eax,0xda84e
    152e:	00 03                	add    BYTE PTR [rbx],al
    1530:	76 f0                	jbe    1522 <_Z11hashMapCtorPFj8string_tEj+0x92>
    1532:	7e 27                	jle    155b <_Z17hashMapAddElementP7HashMap8string_t+0x1b>
    1534:	9c                   	pushf
    1535:	0d 00 00 15 0e       	or     eax,0xe150000
    153a:	01 00                	add    DWORD PTR [rax],eax
    153c:	00 28                	add    BYTE PTR [rax],ch
    153e:	bd 0d 00 00 28       	mov    ebp,0x2800000d
    1543:	c8 0d 00 00          	enter  0xd,0x0
    1547:	10 f0                	adc    al,dh
    1549:	19 00                	sbb    DWORD PTR [rax],eax
    154b:	00 00                	add    BYTE PTR [rax],al
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	00 01                	add    BYTE PTR [rcx],al
    1551:	30 11                	xor    BYTE PTR [rcx],dl
    1553:	f9                   	stc
    1554:	19 00                	sbb    DWORD PTR [rax],eax
    1556:	00 00                	add    BYTE PTR [rax],al
    1558:	00 00                	add    BYTE PTR [rax],al
    155a:	00 9f 0a 00 00 00    	add    BYTE PTR [rdi+0xa],bl
    1560:	00 00                	add    BYTE PTR [rax],al
    1562:	00 00                	add    BYTE PTR [rax],al
    1564:	0c 09                	or     al,0x9
    1566:	15 00 00 b0 18       	adc    eax,0x18b00000
    156b:	00 00                	add    BYTE PTR [rax],al
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	00 00                	add    BYTE PTR [rax],al
    1571:	01 e2                	add    edx,esp
    1573:	00 00                	add    BYTE PTR [rax],al
    1575:	00 c4                	add    ah,al
    1577:	26 d3 0c 00          	es ror DWORD PTR [rax+rax*1],cl
    157b:	00 04 2a             	add    BYTE PTR [rdx+rbp*1],al
    157e:	15 00 00 ab 01       	adc    eax,0x1ab0000
    1583:	00 00                	add    BYTE PTR [rax],al
    1585:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1586:	01 00                	add    DWORD PTR [rax],eax
    1588:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    158b:	15 00 00 be 01       	adc    eax,0x1be0000
    1590:	00 00                	add    BYTE PTR [rax],al
    1592:	ba 01 00 00 15       	mov    edx,0x15000001
    1597:	e2 00                	loop   1599 <_Z17hashMapAddElementP7HashMap8string_t+0x59>
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	28 36                	sub    BYTE PTR [rsi],dh
    159d:	15 00 00 2f 41       	adc    eax,0x412f0000
    15a2:	15 00 00 ed 00       	adc    eax,0xed0000
    15a7:	00 00                	add    BYTE PTR [rax],al
    15a9:	b6 0c                	mov    dh,0xc
    15ab:	00 00                	add    BYTE PTR [rax],al
    15ad:	12 42 15             	adc    al,BYTE PTR [rdx+0x15]
    15b0:	00 00                	add    BYTE PTR [rax],al
    15b2:	d0 01                	rol    BYTE PTR [rcx],1
    15b4:	00 00                	add    BYTE PTR [rax],al
    15b6:	ce                   	(bad)
    15b7:	01 00                	add    DWORD PTR [rax],eax
    15b9:	00 0b                	add    BYTE PTR [rbx],cl
    15bb:	10 19                	adc    BYTE PTR [rcx],bl
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 00                	add    BYTE PTR [rax],al
    15c1:	00 00                	add    BYTE PTR [rax],al
    15c3:	be 0a 00 00 03       	mov    esi,0x300000a
    15c8:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    15cb:	76 88                	jbe    1555 <_Z17hashMapAddElementP7HashMap8string_t+0x15>
    15cd:	7e 06                	jle    15d5 <_Z17hashMapAddElementP7HashMap8string_t+0x95>
    15cf:	00 00                	add    BYTE PTR [rax],al
    15d1:	0b cf                	or     ecx,edi
    15d3:	18 00                	sbb    BYTE PTR [rax],al
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 00                	add    BYTE PTR [rax],al
    15d9:	00 ce                	add    dh,cl
    15db:	0a 00                	or     al,BYTE PTR [rax]
    15dd:	00 03                	add    BYTE PTR [rbx],al
    15df:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    15e2:	76 f8                	jbe    15dc <_Z17hashMapAddElementP7HashMap8string_t+0x9c>
    15e4:	7d 06                	jge    15ec <_Z17hashMapAddElementP7HashMap8string_t+0xac>
    15e6:	03 01                	add    eax,DWORD PTR [rcx]
    15e8:	54                   	push   rsp
    15e9:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    15ec:	00 00                	add    BYTE PTR [rax],al
    15ee:	4f e9 0d 00 00 1e    	rex.WRXB jmp 1e001601 <_end+0x1dffb5e9>
    15f4:	01 00                	add    DWORD PTR [rax],eax
    15f6:	00 01                	add    BYTE PTR [rcx],al
    15f8:	d2 10                	rcl    BYTE PTR [rax],cl
    15fa:	24 0d                	and    al,0xd
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	27                   	(bad)
    15ff:	fa                   	cli
    1600:	0d 00 00 15 1e       	or     eax,0x1e150000
    1605:	01 00                	add    DWORD PTR [rax],eax
    1607:	00 2f                	add    BYTE PTR [rdi],ch
    1609:	0f 0e                	femms
    160b:	00 00                	add    BYTE PTR [rax],al
    160d:	2e 01 00             	cs add DWORD PTR [rax],eax
    1610:	00 15 0d 00 00 12    	add    BYTE PTR [rip+0x1200000d],dl        # 12001623 <_end+0x11ffb60b>
    1616:	10 0e                	adc    BYTE PTR [rsi],cl
    1618:	00 00                	add    BYTE PTR [rax],al
    161a:	df 01                	fild   WORD PTR [rcx]
    161c:	00 00                	add    BYTE PTR [rax],al
    161e:	d9 01                	fld    DWORD PTR [rcx]
    1620:	00 00                	add    BYTE PTR [rax],al
    1622:	11 4d 1a             	adc    DWORD PTR [rbp+0x1a],ecx
    1625:	00 00                	add    BYTE PTR [rax],al
    1627:	00 00                	add    BYTE PTR [rax],al
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	4b 0a 00             	rex.WXB or al,BYTE PTR [r8]
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	11 5d 1a             	adc    DWORD PTR [rbp+0x1a],ebx
    1633:	00 00                	add    BYTE PTR [rax],al
    1635:	00 00                	add    BYTE PTR [rax],al
    1637:	00 00                	add    BYTE PTR [rax],al
    1639:	e9 0a 00 00 00       	jmp    1648 <_Z17hashMapPopElementP7HashMap8string_t+0x38>
    163e:	00 1c a7             	add    BYTE PTR [rdi+riz*4],bl
    1641:	1a 00                	sbb    al,BYTE PTR [rax]
    1643:	00 00                	add    BYTE PTR [rax],al
    1645:	00 00                	add    BYTE PTR [rax],al
    1647:	00 15 0b 00 00 63    	add    BYTE PTR [rip+0x6300000b],dl        # 63001658 <_end+0x62ffb640>
    164d:	0d 00 00 03 01       	or     eax,0x1030000
    1652:	55                   	push   rbp
    1653:	09 03                	or     DWORD PTR [rbx],eax
    1655:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    1658:	00 00                	add    BYTE PTR [rax],al
    165a:	00 00                	add    BYTE PTR [rax],al
    165c:	00 03                	add    BYTE PTR [rbx],al
    165e:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    1662:	68 42 00 00 00       	push   0x42
    1667:	00 00                	add    BYTE PTR [rax],al
    1669:	00 03                	add    BYTE PTR [rbx],al
    166b:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    166e:	08 c2                	or     dl,al
    1670:	03 01                	add    eax,DWORD PTR [rcx]
    1672:	52                   	push   rdx
    1673:	09 03                	or     DWORD PTR [rbx],eax
    1675:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1678:	00 00                	add    BYTE PTR [rax],al
    167a:	00 00                	add    BYTE PTR [rax],al
    167c:	00 00                	add    BYTE PTR [rax],al
    167e:	11 ac 1a 00 00 00 00 	adc    DWORD PTR [rdx+rbx*1+0x0],ebp
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	aa                   	stos   BYTE PTR es:[rdi],al
    1688:	1b 00                	sbb    eax,DWORD PTR [rax]
    168a:	00 00                	add    BYTE PTR [rax],al
    168c:	08 33                	or     BYTE PTR [rbx],dh
    168e:	0a 00                	or     al,BYTE PTR [rax]
    1690:	00 18                	add    BYTE PTR [rax],bl
    1692:	06                   	(bad)
    1693:	01 00                	add    DWORD PTR [rax],eax
    1695:	00 86 0d 00 00 19    	add    BYTE PTR [rsi+0x1900000d],al
    169b:	3a 00                	cmp    al,BYTE PTR [rax]
    169d:	00 00                	add    BYTE PTR [rax],al
    169f:	22 00                	and    al,BYTE PTR [rax]
    16a1:	0e                   	(bad)
    16a2:	76 0d                	jbe    16b1 <_Z17hashMapPopElementP7HashMap8string_t+0xa1>
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	50                   	push   rax
    16a7:	0d 06 00 00 01       	or     eax,0x1000006
    16ac:	b7 11                	mov    bh,0x11
    16ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    16af:	08 00                	or     BYTE PTR [rax],al
    16b1:	00 01                	add    BYTE PTR [rcx],al
    16b3:	d4                   	(bad)
    16b4:	0d 00 00 0d 05       	or     eax,0x50d0000
    16b9:	06                   	(bad)
    16ba:	00 00                	add    BYTE PTR [rax],al
    16bc:	01 b7 2b 71 0d 00    	add    DWORD PTR [rdi+0xd712b],esi
    16c2:	00 0d 4d 15 00 00    	add    BYTE PTR [rip+0x154d],cl        # 2c15 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x415>
    16c8:	01 b7 3b 05 09 00    	add    DWORD PTR [rdi+0x9053b],esi
    16ce:	00 30                	add    BYTE PTR [rax],dh
    16d0:	ec                   	in     al,dx
    16d1:	03 00                	add    eax,DWORD PTR [rax]
    16d3:	00 e4                	add    ah,ah
    16d5:	0d 00 00 29 69       	or     eax,0x69290000
    16da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16db:	78 00                	js     16dd <_Z17hashMapPopElementP7HashMap8string_t+0xcd>
    16dd:	ba 0e 6c 08 00       	mov    edx,0x86c0e
    16e2:	00 2a                	add    BYTE PTR [rdx],ch
    16e4:	41 06                	rex.B (bad)
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	bc 0e 6c 08 00       	mov    esp,0x86c0e
    16ed:	00 00                	add    BYTE PTR [rax],al
    16ef:	18 06                	sbb    BYTE PTR [rsi],al
    16f1:	01 00                	add    DWORD PTR [rax],eax
    16f3:	00 e4                	add    ah,ah
    16f5:	0d 00 00 19 3a       	or     eax,0x3a190000
    16fa:	00 00                	add    BYTE PTR [rax],al
    16fc:	00 2b                	add    BYTE PTR [rbx],ch
    16fe:	00 0e                	add    BYTE PTR [rsi],cl
    1700:	d4                   	(bad)
    1701:	0d 00 00 51 f3       	or     eax,0xf3510000
    1706:	07                   	(bad)
    1707:	00 00                	add    BYTE PTR [rax],al
    1709:	01 ad 06 1f 03 00    	add    DWORD PTR [rbp+0x31f06],ebp
    170f:	00 01                	add    BYTE PTR [rcx],al
    1711:	28 0e                	sub    BYTE PTR [rsi],cl
    1713:	00 00                	add    BYTE PTR [rax],al
    1715:	0d 05 06 00 00       	or     eax,0x605
    171a:	01 ad 1b 71 0d 00    	add    DWORD PTR [rbp+0xd711b],ebp
    1720:	00 30                	add    BYTE PTR [rax],dh
    1722:	ec                   	in     al,dx
    1723:	03 00                	add    eax,DWORD PTR [rax]
    1725:	00 38                	add    BYTE PTR [rax],bh
    1727:	0e                   	(bad)
    1728:	00 00                	add    BYTE PTR [rax],al
    172a:	31 29                	xor    DWORD PTR [rcx],ebp
    172c:	69 00 b0 13 6c 08    	imul   eax,DWORD PTR [rax],0x86c13b0
    1732:	00 00                	add    BYTE PTR [rax],al
    1734:	11 25 18 00 00 00    	adc    DWORD PTR [rip+0x18],esp        # 1752 <_Z20hashMapSearchElementP7HashMap8string_t+0x62>
    173a:	00 00                	add    BYTE PTR [rax],al
    173c:	00 4b 0a             	add    BYTE PTR [rbx+0xa],cl
    173f:	00 00                	add    BYTE PTR [rax],al
    1741:	00 00                	add    BYTE PTR [rax],al
    1743:	18 06                	sbb    BYTE PTR [rsi],al
    1745:	01 00                	add    DWORD PTR [rax],eax
    1747:	00 38                	add    BYTE PTR [rax],bh
    1749:	0e                   	(bad)
    174a:	00 00                	add    BYTE PTR [rax],al
    174c:	19 3a                	sbb    DWORD PTR [rdx],edi
    174e:	00 00                	add    BYTE PTR [rax],al
    1750:	00 1a                	add    BYTE PTR [rdx],bl
    1752:	00 0e                	add    BYTE PTR [rsi],cl
    1754:	28 0e                	sub    BYTE PTR [rsi],cl
    1756:	00 00                	add    BYTE PTR [rax],al
    1758:	21 04 05 00 00 a7 07 	and    DWORD PTR [rax*1+0x7a70000],eax
    175f:	e9 04 00 00 b3       	jmp    ffffffffb3001768 <_end+0xffffffffb2ffb750>
    1764:	06                   	(bad)
    1765:	00 00                	add    BYTE PTR [rax],al
    1767:	c0 17 00             	rcl    BYTE PTR [rdi],0x0
    176a:	00 00                	add    BYTE PTR [rax],al
    176c:	00 00                	add    BYTE PTR [rax],al
    176e:	00 2f                	add    BYTE PTR [rdi],ch
    1770:	00 00                	add    BYTE PTR [rax],al
    1772:	00 00                	add    BYTE PTR [rax],al
    1774:	00 00                	add    BYTE PTR [rax],al
    1776:	00 01                	add    BYTE PTR [rcx],al
    1778:	9c                   	pushf
    1779:	c4                   	(bad)
    177a:	0e                   	(bad)
    177b:	00 00                	add    BYTE PTR [rax],al
    177d:	0f 05                	syscall
    177f:	06                   	(bad)
    1780:	00 00                	add    BYTE PTR [rax],al
    1782:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1783:	1e                   	(bad)
    1784:	71 0d                	jno    1793 <_Z20hashMapSearchElementP7HashMap8string_t+0xa3>
    1786:	00 00                	add    BYTE PTR [rax],al
    1788:	fc                   	cld
    1789:	01 00                	add    DWORD PTR [rax],eax
    178b:	00 f8                	add    al,bh
    178d:	01 00                	add    DWORD PTR [rax],eax
    178f:	00 1a                	add    BYTE PTR [rdx],bl
    1791:	ec                   	in     al,dx
    1792:	03 00                	add    eax,DWORD PTR [rax]
    1794:	00 d4                	add    ah,dl
    1796:	0e                   	(bad)
    1797:	00 00                	add    BYTE PTR [rax],al
    1799:	09 03                	or     DWORD PTR [rbx],eax
    179b:	2a 40 00             	sub    al,BYTE PTR [rax+0x0]
    179e:	00 00                	add    BYTE PTR [rax],al
    17a0:	00 00                	add    BYTE PTR [rax],al
    17a2:	00 0b                	add    BYTE PTR [rbx],cl
    17a4:	ef                   	out    dx,eax
    17a5:	17                   	(bad)
    17a6:	00 00                	add    BYTE PTR [rax],al
    17a8:	00 00                	add    BYTE PTR [rax],al
    17aa:	00 00                	add    BYTE PTR [rax],al
    17ac:	15 0b 00 00 03       	adc    eax,0x300000b
    17b1:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    17b4:	03 22                	add    esp,DWORD PTR [rdx]
    17b6:	40 00 00             	rex add BYTE PTR [rax],al
    17b9:	00 00                	add    BYTE PTR [rax],al
    17bb:	00 00                	add    BYTE PTR [rax],al
    17bd:	03 01                	add    eax,DWORD PTR [rcx]
    17bf:	54                   	push   rsp
    17c0:	09 03                	or     DWORD PTR [rbx],eax
    17c2:	68 42 00 00 00       	push   0x42
    17c7:	00 00                	add    BYTE PTR [rax],al
    17c9:	00 03                	add    BYTE PTR [rbx],al
    17cb:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    17ce:	08 a8 03 01 52 09    	or     BYTE PTR [rax+0x9520103],ch
    17d4:	03 2a                	add    ebp,DWORD PTR [rdx]
    17d6:	40 00 00             	rex add BYTE PTR [rax],al
    17d9:	00 00                	add    BYTE PTR [rax],al
    17db:	00 00                	add    BYTE PTR [rax],al
    17dd:	00 00                	add    BYTE PTR [rax],al
    17df:	18 06                	sbb    BYTE PTR [rsi],al
    17e1:	01 00                	add    DWORD PTR [rax],eax
    17e3:	00 d4                	add    ah,dl
    17e5:	0e                   	(bad)
    17e6:	00 00                	add    BYTE PTR [rax],al
    17e8:	19 3a                	sbb    DWORD PTR [rdx],edi
    17ea:	00 00                	add    BYTE PTR [rax],al
    17ec:	00 1d 00 0e c4 0e    	add    BYTE PTR [rip+0xec40e00],bl        # ec425f2 <_end+0xec3c5da>
    17f2:	00 00                	add    BYTE PTR [rax],al
    17f4:	21 2c 06             	and    DWORD PTR [rsi+rax*1],ebp
    17f7:	00 00                	add    BYTE PTR [rax],al
    17f9:	69 06 58 07 00 00    	imul   eax,DWORD PTR [rsi],0x758
    17ff:	48 13 00             	adc    rax,QWORD PTR [rax]
    1802:	00 f0                	add    al,dh
    1804:	16                   	(bad)
    1805:	00 00                	add    BYTE PTR [rax],al
    1807:	00 00                	add    BYTE PTR [rax],al
    1809:	00 00                	add    BYTE PTR [rax],al
    180b:	c6 00 00             	mov    BYTE PTR [rax],0x0
    180e:	00 00                	add    BYTE PTR [rax],al
    1810:	00 00                	add    BYTE PTR [rax],al
    1812:	00 01                	add    BYTE PTR [rcx],al
    1814:	9c                   	pushf
    1815:	48 13 00             	adc    rax,QWORD PTR [rax]
    1818:	00 0f                	add    BYTE PTR [rdi],cl
    181a:	05 06 00 00 69       	add    eax,0x69000006
    181f:	24 71                	and    al,0x71
    1821:	0d 00 00 18 02       	or     eax,0x2180000
    1826:	00 00                	add    BYTE PTR [rax],al
    1828:	0e                   	(bad)
    1829:	02 00                	add    al,BYTE PTR [rax]
    182b:	00 0f                	add    BYTE PTR [rdi],cl
    182d:	4d 15 00 00 69 34    	rex.WRB adc rax,0x34690000
    1833:	05 09 00 00 4a       	add    eax,0x4a000009
    1838:	02 00                	add    al,BYTE PTR [rax]
    183a:	00 42 02             	add    BYTE PTR [rdx+0x2],al
    183d:	00 00                	add    BYTE PTR [rax],al
    183f:	1a ec                	sbb    ch,ah
    1841:	03 00                	add    eax,DWORD PTR [rax]
    1843:	00 e4                	add    ah,ah
    1845:	0d 00 00 09 03       	or     eax,0x3090000
    184a:	e8 42 00 00 00       	call   1891 <_Z6resizeP7HashMapj+0x31>
    184f:	00 00                	add    BYTE PTR [rax],al
    1851:	00 0a                	add    BYTE PTR [rdx],cl
    1853:	82                   	(bad)
    1854:	04 00                	add    al,0x0
    1856:	00 7a 12             	add    BYTE PTR [rdx+0x12],bh
    1859:	6c                   	ins    BYTE PTR es:[rdi],dx
    185a:	08 00                	or     BYTE PTR [rax],al
    185c:	00 7b 02             	add    BYTE PTR [rbx+0x2],bh
    185f:	00 00                	add    BYTE PTR [rax],al
    1861:	79 02                	jns    1865 <_Z6resizeP7HashMapj+0x5>
    1863:	00 00                	add    BYTE PTR [rax],al
    1865:	1b 63 72             	sbb    esp,DWORD PTR [rbx+0x72]
    1868:	63 00                	movsxd eax,DWORD PTR [rax]
    186a:	7b 12                	jnp    187e <_Z6resizeP7HashMapj+0x1e>
    186c:	78 08                	js     1876 <_Z6resizeP7HashMapj+0x16>
    186e:	00 00                	add    BYTE PTR [rax],al
    1870:	86 02                	xchg   BYTE PTR [rdx],al
    1872:	00 00                	add    BYTE PTR [rax],al
    1874:	84 02                	test   BYTE PTR [rdx],al
    1876:	00 00                	add    BYTE PTR [rax],al
    1878:	0a c0                	or     al,al
    187a:	03 00                	add    eax,DWORD PTR [rax]
    187c:	00 86 16 78 08 00    	add    BYTE PTR [rsi+0x87816],al
    1882:	00 9d 02 00 00 97    	add    BYTE PTR [rbp-0x68fffffe],bl
    1888:	02 00                	add    al,BYTE PTR [rax]
    188a:	00 0a                	add    BYTE PTR [rdx],cl
    188c:	c6 03 00             	mov    BYTE PTR [rbx],0x0
    188f:	00 87 16 78 08 00    	add    BYTE PTR [rdi+0x87816],al
    1895:	00 b7 02 00 00 b3    	add    BYTE PTR [rdi-0x4cfffffe],dh
    189b:	02 00                	add    al,BYTE PTR [rax]
    189d:	00 0a                	add    BYTE PTR [rdx],cl
    189f:	cc                   	int3
    18a0:	03 00                	add    eax,DWORD PTR [rax]
    18a2:	00 88 16 78 08 00    	add    BYTE PTR [rax+0x87816],cl
    18a8:	00 ca                	add    dl,cl
    18aa:	02 00                	add    al,BYTE PTR [rax]
    18ac:	00 c6                	add    dh,al
    18ae:	02 00                	add    al,BYTE PTR [rax]
    18b0:	00 0a                	add    BYTE PTR [rdx],cl
    18b2:	d2 03                	rol    BYTE PTR [rbx],cl
    18b4:	00 00                	add    BYTE PTR [rax],al
    18b6:	89 16                	mov    DWORD PTR [rsi],edx
    18b8:	78 08                	js     18c2 <_Z6resizeP7HashMapj+0x62>
    18ba:	00 00                	add    BYTE PTR [rax],al
    18bc:	dd 02                	fld    QWORD PTR [rdx]
    18be:	00 00                	add    BYTE PTR [rax],al
    18c0:	d9 02                	fld    DWORD PTR [rdx]
    18c2:	00 00                	add    BYTE PTR [rax],al
    18c4:	2a 59 04             	sub    bl,BYTE PTR [rcx+0x4]
    18c7:	00 00                	add    BYTE PTR [rax],al
    18c9:	9a                   	(bad)
    18ca:	16                   	(bad)
    18cb:	6c                   	ins    BYTE PTR es:[rdi],dx
    18cc:	08 00                	or     BYTE PTR [rax],al
    18ce:	00 1b                	add    BYTE PTR [rbx],bl
    18d0:	69 6e 78 00 a0 0e 6c 	imul   ebp,DWORD PTR [rsi+0x78],0x6c0ea000
    18d7:	08 00                	or     BYTE PTR [rax],al
    18d9:	00 ee                	add    dh,ch
    18db:	02 00                	add    al,BYTE PTR [rax]
    18dd:	00 ec                	add    ah,ch
    18df:	02 00                	add    al,BYTE PTR [rax]
    18e1:	00 0c 5b             	add    BYTE PTR [rbx+rbx*2],cl
    18e4:	19 00                	sbb    DWORD PTR [rax],eax
    18e6:	00 49 17             	add    BYTE PTR [rcx+0x17],cl
    18e9:	00 00                	add    BYTE PTR [rax],al
    18eb:	00 00                	add    BYTE PTR [rax],al
    18ed:	00 00                	add    BYTE PTR [rax],al
    18ef:	09 75 00             	or     DWORD PTR [rbp+0x0],esi
    18f2:	00 00                	add    BYTE PTR [rax],al
    18f4:	8d 1e                	lea    ebx,[rsi]
    18f6:	f2 0f 00 00          	repnz sldt WORD PTR [rax]
    18fa:	27                   	(bad)
    18fb:	7c 19                	jl     1916 <_Z6resizeP7HashMapj+0xb6>
    18fd:	00 00                	add    BYTE PTR [rax],al
    18ff:	04 6f                	add    al,0x6f
    1901:	19 00                	sbb    DWORD PTR [rax],eax
    1903:	00 f8                	add    al,bh
    1905:	02 00                	add    al,BYTE PTR [rax]
    1907:	00 f6                	add    dh,dh
    1909:	02 00                	add    al,BYTE PTR [rax]
    190b:	00 00                	add    BYTE PTR [rax],al
    190d:	0c f0                	or     al,0xf0
    190f:	18 00                	sbb    BYTE PTR [rax],al
    1911:	00 14 17             	add    BYTE PTR [rdi+rdx*1],dl
    1914:	00 00                	add    BYTE PTR [rax],al
    1916:	00 00                	add    BYTE PTR [rax],al
    1918:	00 00                	add    BYTE PTR [rax],al
    191a:	03 8a 00 00 00 86    	add    ecx,DWORD PTR [rdx-0x7a000000]
    1920:	32 aa 10 00 00 04    	xor    ch,BYTE PTR [rdx+0x4000010]
    1926:	11 19                	adc    DWORD PTR [rcx],ebx
    1928:	00 00                	add    BYTE PTR [rax],al
    192a:	0b 03                	or     eax,DWORD PTR [rbx]
    192c:	00 00                	add    BYTE PTR [rax],al
    192e:	09 03                	or     DWORD PTR [rbx],eax
    1930:	00 00                	add    BYTE PTR [rax],al
    1932:	04 04                	add    al,0x4
    1934:	19 00                	sbb    DWORD PTR [rax],eax
    1936:	00 16                	add    BYTE PTR [rsi],dl
    1938:	03 00                	add    eax,DWORD PTR [rax]
    193a:	00 14 03             	add    BYTE PTR [rbx+rax*1],dl
    193d:	00 00                	add    BYTE PTR [rax],al
    193f:	15 8a 00 00 00       	adc    eax,0x8a
    1944:	12 1e                	adc    bl,BYTE PTR [rsi]
    1946:	19 00                	sbb    DWORD PTR [rax],eax
    1948:	00 20                	add    BYTE PTR [rax],ah
    194a:	03 00                	add    eax,DWORD PTR [rax]
    194c:	00 1e                	add    BYTE PTR [rsi],bl
    194e:	03 00                	add    eax,DWORD PTR [rax]
    1950:	00 52 8a             	add    BYTE PTR [rdx-0x76],dl
    1953:	19 00                	sbb    DWORD PTR [rax],eax
    1955:	00 14 17             	add    BYTE PTR [rdi+rdx*1],dl
    1958:	00 00                	add    BYTE PTR [rax],al
    195a:	00 00                	add    BYTE PTR [rax],al
    195c:	00 00                	add    BYTE PTR [rax],al
    195e:	09 95 00 00 00 04    	or     DWORD PTR [rbp+0x4000000],edx
    1964:	31 02                	xor    DWORD PTR [rdx],eax
    1966:	1c 6b                	sbb    al,0x6b
    1968:	10 00                	adc    BYTE PTR [rax],al
    196a:	00 04 ab             	add    BYTE PTR [rbx+rbp*4],al
    196d:	19 00                	sbb    DWORD PTR [rax],eax
    196f:	00 2a                	add    BYTE PTR [rdx],ch
    1971:	03 00                	add    eax,DWORD PTR [rax]
    1973:	00 28                	add    BYTE PTR [rax],ch
    1975:	03 00                	add    eax,DWORD PTR [rax]
    1977:	00 04 9e             	add    BYTE PTR [rsi+rbx*4],al
    197a:	19 00                	sbb    DWORD PTR [rax],eax
    197c:	00 35 03 00 00 33    	add    BYTE PTR [rip+0x33000003],dh        # 33001985 <_end+0x32ffb96d>
    1982:	03 00                	add    eax,DWORD PTR [rax]
    1984:	00 00                	add    BYTE PTR [rax],al
    1986:	53                   	push   rbx
    1987:	2c 19                	sub    al,0x19
    1989:	00 00                	add    BYTE PTR [rax],al
    198b:	14 17                	adc    al,0x17
    198d:	00 00                	add    BYTE PTR [rax],al
    198f:	00 00                	add    BYTE PTR [rax],al
    1991:	00 00                	add    BYTE PTR [rax],al
    1993:	05 14 17 00 00       	add    eax,0x1714
	...
    19a4:	04 30                	add    al,0x30
    19a6:	02 2a                	add    ch,BYTE PTR [rdx]
    19a8:	04 4d                	add    al,0x4d
    19aa:	19 00                	sbb    DWORD PTR [rax],eax
    19ac:	00 3f                	add    BYTE PTR [rdi],bh
    19ae:	03 00                	add    eax,DWORD PTR [rax]
    19b0:	00 3d 03 00 00 04    	add    BYTE PTR [rip+0x4000003],bh        # 40019b9 <_end+0x3ffb9a1>
    19b6:	40 19 00             	rex sbb DWORD PTR [rax],eax
    19b9:	00 4a 03             	add    BYTE PTR [rdx+0x3],cl
    19bc:	00 00                	add    BYTE PTR [rax],al
    19be:	48 03 00             	add    rax,QWORD PTR [rax]
    19c1:	00 00                	add    BYTE PTR [rax],al
    19c3:	00 00                	add    BYTE PTR [rax],al
    19c5:	0c f0                	or     al,0xf0
    19c7:	18 00                	sbb    BYTE PTR [rax],al
    19c9:	00 14 17             	add    BYTE PTR [rdi+rdx*1],dl
    19cc:	00 00                	add    BYTE PTR [rax],al
    19ce:	00 00                	add    BYTE PTR [rax],al
    19d0:	00 00                	add    BYTE PTR [rax],al
    19d2:	0d a0 00 00 00       	or     eax,0xa0
    19d7:	87 32                	xchg   DWORD PTR [rdx],esi
    19d9:	1d 11 00 00 04       	sbb    eax,0x4000011
    19de:	11 19                	adc    DWORD PTR [rcx],ebx
    19e0:	00 00                	add    BYTE PTR [rax],al
    19e2:	54                   	push   rsp
    19e3:	03 00                	add    eax,DWORD PTR [rax]
    19e5:	00 52 03             	add    BYTE PTR [rdx+0x3],dl
    19e8:	00 00                	add    BYTE PTR [rax],al
    19ea:	04 04                	add    al,0x4
    19ec:	19 00                	sbb    DWORD PTR [rax],eax
    19ee:	00 5f 03             	add    BYTE PTR [rdi+0x3],bl
    19f1:	00 00                	add    BYTE PTR [rax],al
    19f3:	5d                   	pop    rbp
    19f4:	03 00                	add    eax,DWORD PTR [rax]
    19f6:	00 15 a0 00 00 00    	add    BYTE PTR [rip+0xa0],dl        # 1a9c <_Z6resizeP7HashMapj+0x23c>
    19fc:	12 1e                	adc    bl,BYTE PTR [rsi]
    19fe:	19 00                	sbb    DWORD PTR [rax],eax
    1a00:	00 69 03             	add    BYTE PTR [rcx+0x3],ch
    1a03:	00 00                	add    BYTE PTR [rax],al
    1a05:	67 03 00             	add    eax,DWORD PTR [eax]
    1a08:	00 2b                	add    BYTE PTR [rbx],ch
    1a0a:	8a 19                	mov    bl,BYTE PTR [rcx]
    1a0c:	00 00                	add    BYTE PTR [rax],al
    1a0e:	14 17                	adc    al,0x17
    1a10:	00 00                	add    BYTE PTR [rax],al
    1a12:	00 00                	add    BYTE PTR [rax],al
    1a14:	00 00                	add    BYTE PTR [rax],al
    1a16:	10 a0 00 00 00 04    	adc    BYTE PTR [rax+0x4000000],ah
    1a1c:	ab                   	stos   DWORD PTR es:[rdi],eax
    1a1d:	19 00                	sbb    DWORD PTR [rax],eax
    1a1f:	00 73 03             	add    BYTE PTR [rbx+0x3],dh
    1a22:	00 00                	add    BYTE PTR [rax],al
    1a24:	71 03                	jno    1a29 <_Z6resizeP7HashMapj+0x1c9>
    1a26:	00 00                	add    BYTE PTR [rax],al
    1a28:	04 9e                	add    al,0x9e
    1a2a:	19 00                	sbb    DWORD PTR [rax],eax
    1a2c:	00 7e 03             	add    BYTE PTR [rsi+0x3],bh
    1a2f:	00 00                	add    BYTE PTR [rax],al
    1a31:	7c 03                	jl     1a36 <_Z6resizeP7HashMapj+0x1d6>
    1a33:	00 00                	add    BYTE PTR [rax],al
    1a35:	00 00                	add    BYTE PTR [rax],al
    1a37:	00 0c f0             	add    BYTE PTR [rax+rsi*8],cl
    1a3a:	18 00                	sbb    BYTE PTR [rax],al
    1a3c:	00 20                	add    BYTE PTR [rax],ah
    1a3e:	17                   	(bad)
    1a3f:	00 00                	add    BYTE PTR [rax],al
    1a41:	00 00                	add    BYTE PTR [rax],al
    1a43:	00 00                	add    BYTE PTR [rax],al
    1a45:	02 ab 00 00 00 88    	add    ch,BYTE PTR [rbx-0x78000000]
    1a4b:	32 d1                	xor    dl,cl
    1a4d:	11 00                	adc    DWORD PTR [rax],eax
    1a4f:	00 04 11             	add    BYTE PTR [rcx+rdx*1],al
    1a52:	19 00                	sbb    DWORD PTR [rax],eax
    1a54:	00 88 03 00 00 86    	add    BYTE PTR [rax-0x79fffffd],cl
    1a5a:	03 00                	add    eax,DWORD PTR [rax]
    1a5c:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    1a5f:	19 00                	sbb    DWORD PTR [rax],eax
    1a61:	00 95 03 00 00 91    	add    BYTE PTR [rbp-0x6efffffd],dl
    1a67:	03 00                	add    eax,DWORD PTR [rax]
    1a69:	00 15 ab 00 00 00    	add    BYTE PTR [rip+0xab],dl        # 1b1a <_Z25_mm_crc32UnrollHashString8string_t+0x4a>
    1a6f:	12 1e                	adc    bl,BYTE PTR [rsi]
    1a71:	19 00                	sbb    DWORD PTR [rax],eax
    1a73:	00 a7 03 00 00 a5    	add    BYTE PTR [rdi-0x5afffffd],ah
    1a79:	03 00                	add    eax,DWORD PTR [rax]
    1a7b:	00 54 2c 19          	add    BYTE PTR [rsp+rbp*1+0x19],dl
    1a7f:	00 00                	add    BYTE PTR [rax],al
    1a81:	20 17                	and    BYTE PTR [rdi],dl
    1a83:	00 00                	add    BYTE PTR [rax],al
    1a85:	00 00                	add    BYTE PTR [rax],al
    1a87:	00 00                	add    BYTE PTR [rax],al
    1a89:	04 20                	add    al,0x20
    1a8b:	17                   	(bad)
    1a8c:	00 00                	add    BYTE PTR [rax],al
    1a8e:	00 00                	add    BYTE PTR [rax],al
    1a90:	00 00                	add    BYTE PTR [rax],al
    1a92:	06                   	(bad)
    1a93:	00 00                	add    BYTE PTR [rax],al
    1a95:	00 00                	add    BYTE PTR [rax],al
    1a97:	00 00                	add    BYTE PTR [rax],al
    1a99:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    1a9c:	02 2a                	add    ch,BYTE PTR [rdx]
    1a9e:	a2 11 00 00 04 4d 19 	movabs ds:0x194d04000011,al
    1aa5:	00 00 
    1aa7:	b1 03                	mov    cl,0x3
    1aa9:	00 00                	add    BYTE PTR [rax],al
    1aab:	af                   	scas   eax,DWORD PTR es:[rdi]
    1aac:	03 00                	add    eax,DWORD PTR [rax]
    1aae:	00 04 40             	add    BYTE PTR [rax+rax*2],al
    1ab1:	19 00                	sbb    DWORD PTR [rax],eax
    1ab3:	00 bc 03 00 00 ba 03 	add    BYTE PTR [rbx+rax*1+0x3ba0000],bh
    1aba:	00 00                	add    BYTE PTR [rax],al
    1abc:	00 2b                	add    BYTE PTR [rbx],ch
    1abe:	8a 19                	mov    bl,BYTE PTR [rcx]
    1ac0:	00 00                	add    BYTE PTR [rax],al
    1ac2:	26 17                	es (bad)
    1ac4:	00 00                	add    BYTE PTR [rax],al
    1ac6:	00 00                	add    BYTE PTR [rax],al
    1ac8:	00 00                	add    BYTE PTR [rax],al
    1aca:	02 b6 00 00 00 04    	add    dh,BYTE PTR [rsi+0x4000000]
    1ad0:	ab                   	stos   DWORD PTR es:[rdi],eax
    1ad1:	19 00                	sbb    DWORD PTR [rax],eax
    1ad3:	00 c6                	add    dh,al
    1ad5:	03 00                	add    eax,DWORD PTR [rax]
    1ad7:	00 c4                	add    ah,al
    1ad9:	03 00                	add    eax,DWORD PTR [rax]
    1adb:	00 04 9e             	add    BYTE PTR [rsi+rbx*4],al
    1ade:	19 00                	sbb    DWORD PTR [rax],eax
    1ae0:	00 d1                	add    cl,dl
    1ae2:	03 00                	add    eax,DWORD PTR [rax]
    1ae4:	00 cf                	add    bh,cl
    1ae6:	03 00                	add    eax,DWORD PTR [rax]
    1ae8:	00 00                	add    BYTE PTR [rax],al
    1aea:	00 00                	add    BYTE PTR [rax],al
    1aec:	0c 5b                	or     al,0x5b
    1aee:	19 00                	sbb    DWORD PTR [rax],eax
    1af0:	00 49 17             	add    BYTE PTR [rcx+0x17],cl
    1af3:	00 00                	add    BYTE PTR [rax],al
    1af5:	00 00                	add    BYTE PTR [rax],al
    1af7:	00 00                	add    BYTE PTR [rax],al
    1af9:	0d c1 00 00 00       	or     eax,0xc1
    1afe:	8e 1e                	mov    ds,WORD PTR [rsi]
    1b00:	04 12                	add    al,0x12
    1b02:	00 00                	add    BYTE PTR [rax],al
    1b04:	04 7c                	add    al,0x7c
    1b06:	19 00                	sbb    DWORD PTR [rax],eax
    1b08:	00 db                	add    bl,bl
    1b0a:	03 00                	add    eax,DWORD PTR [rax]
    1b0c:	00 d9                	add    cl,bl
    1b0e:	03 00                	add    eax,DWORD PTR [rax]
    1b10:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
    1b13:	19 00                	sbb    DWORD PTR [rax],eax
    1b15:	00 e5                	add    ch,ah
    1b17:	03 00                	add    eax,DWORD PTR [rax]
    1b19:	00 e3                	add    bl,ah
    1b1b:	03 00                	add    eax,DWORD PTR [rax]
    1b1d:	00 00                	add    BYTE PTR [rax],al
    1b1f:	0c f0                	or     al,0xf0
    1b21:	18 00                	sbb    BYTE PTR [rax],al
    1b23:	00 49 17             	add    BYTE PTR [rcx+0x17],cl
    1b26:	00 00                	add    BYTE PTR [rax],al
    1b28:	00 00                	add    BYTE PTR [rax],al
    1b2a:	00 00                	add    BYTE PTR [rax],al
    1b2c:	02 cc                	add    cl,ah
    1b2e:	00 00                	add    BYTE PTR [rax],al
    1b30:	00 89 32 77 12 00    	add    BYTE PTR [rcx+0x127732],cl
    1b36:	00 04 11             	add    BYTE PTR [rcx+rdx*1],al
    1b39:	19 00                	sbb    DWORD PTR [rax],eax
    1b3b:	00 f8                	add    al,bh
    1b3d:	03 00                	add    eax,DWORD PTR [rax]
    1b3f:	00 f6                	add    dh,dh
    1b41:	03 00                	add    eax,DWORD PTR [rax]
    1b43:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    1b46:	19 00                	sbb    DWORD PTR [rax],eax
    1b48:	00 03                	add    BYTE PTR [rbx],al
    1b4a:	04 00                	add    al,0x0
    1b4c:	00 01                	add    BYTE PTR [rcx],al
    1b4e:	04 00                	add    al,0x0
    1b50:	00 15 cc 00 00 00    	add    BYTE PTR [rip+0xcc],dl        # 1c22 <_Z17adler32HashString8string_t+0xd2>
    1b56:	12 1e                	adc    bl,BYTE PTR [rsi]
    1b58:	19 00                	sbb    DWORD PTR [rax],eax
    1b5a:	00 0e                	add    BYTE PTR [rsi],cl
    1b5c:	04 00                	add    al,0x0
    1b5e:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
    1b61:	00 00                	add    BYTE PTR [rax],al
    1b63:	2b 8a 19 00 00 49    	sub    ecx,DWORD PTR [rdx+0x49000019]
    1b69:	17                   	(bad)
    1b6a:	00 00                	add    BYTE PTR [rax],al
    1b6c:	00 00                	add    BYTE PTR [rax],al
    1b6e:	00 00                	add    BYTE PTR [rax],al
    1b70:	05 cc 00 00 00       	add    eax,0xcc
    1b75:	04 ab                	add    al,0xab
    1b77:	19 00                	sbb    DWORD PTR [rax],eax
    1b79:	00 18                	add    BYTE PTR [rax],bl
    1b7b:	04 00                	add    al,0x0
    1b7d:	00 16                	add    BYTE PTR [rsi],dl
    1b7f:	04 00                	add    al,0x0
    1b81:	00 04 9e             	add    BYTE PTR [rsi+rbx*4],al
    1b84:	19 00                	sbb    DWORD PTR [rax],eax
    1b86:	00 23                	add    BYTE PTR [rbx],ah
    1b88:	04 00                	add    al,0x0
    1b8a:	00 21                	add    BYTE PTR [rcx],ah
    1b8c:	04 00                	add    al,0x0
    1b8e:	00 00                	add    BYTE PTR [rax],al
    1b90:	00 00                	add    BYTE PTR [rax],al
    1b92:	0c 5b                	or     al,0x5b
    1b94:	19 00                	sbb    DWORD PTR [rax],eax
    1b96:	00 4f 17             	add    BYTE PTR [rdi+0x17],cl
    1b99:	00 00                	add    BYTE PTR [rax],al
    1b9b:	00 00                	add    BYTE PTR [rax],al
    1b9d:	00 00                	add    BYTE PTR [rax],al
    1b9f:	02 d7                	add    dl,bh
    1ba1:	00 00                	add    BYTE PTR [rax],al
    1ba3:	00 8f 1e aa 12 00    	add    BYTE PTR [rdi+0x12aa1e],cl
    1ba9:	00 04 7c             	add    BYTE PTR [rsp+rdi*2],al
    1bac:	19 00                	sbb    DWORD PTR [rax],eax
    1bae:	00 2d 04 00 00 2b    	add    BYTE PTR [rip+0x2b000004],ch        # 2b001bb8 <_end+0x2affbba0>
    1bb4:	04 00                	add    al,0x0
    1bb6:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
    1bb9:	19 00                	sbb    DWORD PTR [rax],eax
    1bbb:	00 37                	add    BYTE PTR [rdi],dh
    1bbd:	04 00                	add    al,0x0
    1bbf:	00 35 04 00 00 00    	add    BYTE PTR [rip+0x4],dh        # 1bc9 <_Z17adler32HashString8string_t+0x79>
    1bc5:	32 5b 19             	xor    bl,BYTE PTR [rbx+0x19]
    1bc8:	00 00                	add    BYTE PTR [rax],al
    1bca:	5a                   	pop    rdx
    1bcb:	17                   	(bad)
    1bcc:	00 00                	add    BYTE PTR [rax],al
    1bce:	00 00                	add    BYTE PTR [rax],al
    1bd0:	00 00                	add    BYTE PTR [rax],al
    1bd2:	02 5a 17             	add    bl,BYTE PTR [rdx+0x17]
    1bd5:	00 00                	add    BYTE PTR [rax],al
    1bd7:	00 00                	add    BYTE PTR [rax],al
    1bd9:	00 00                	add    BYTE PTR [rax],al
    1bdb:	06                   	(bad)
    1bdc:	00 00                	add    BYTE PTR [rax],al
    1bde:	00 00                	add    BYTE PTR [rax],al
    1be0:	00 00                	add    BYTE PTR [rax],al
    1be2:	00 90 1e e9 12 00    	add    BYTE PTR [rax+0x12e91e],dl
    1be8:	00 04 7c             	add    BYTE PTR [rsp+rdi*2],al
    1beb:	19 00                	sbb    DWORD PTR [rax],eax
    1bed:	00 4a 04             	add    BYTE PTR [rdx+0x4],cl
    1bf0:	00 00                	add    BYTE PTR [rax],al
    1bf2:	48 04 00             	rex.W add al,0x0
    1bf5:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
    1bf8:	19 00                	sbb    DWORD PTR [rax],eax
    1bfa:	00 54 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dl
    1bfe:	00 52 04             	add    BYTE PTR [rdx+0x4],dl
    1c01:	00 00                	add    BYTE PTR [rax],al
    1c03:	00 10                	add    BYTE PTR [rax],dl
    1c05:	85 17                	test   DWORD PTR [rdi],edx
    1c07:	00 00                	add    BYTE PTR [rax],al
    1c09:	00 00                	add    BYTE PTR [rax],al
    1c0b:	00 00                	add    BYTE PTR [rax],al
    1c0d:	01 30                	add    DWORD PTR [rax],esi
    1c0f:	11 8a 17 00 00 00    	adc    DWORD PTR [rdx+0x17],ecx
    1c15:	00 00                	add    BYTE PTR [rax],al
    1c17:	00 61 0a             	add    BYTE PTR [rcx+0xa],ah
    1c1a:	00 00                	add    BYTE PTR [rax],al
    1c1c:	10 b1 17 00 00 00    	adc    BYTE PTR [rcx+0x17],dh
    1c22:	00 00                	add    BYTE PTR [rax],al
    1c24:	00 01                	add    BYTE PTR [rcx],al
    1c26:	30 0b                	xor    BYTE PTR [rbx],cl
    1c28:	b6 17                	mov    dh,0x17
    1c2a:	00 00                	add    BYTE PTR [rax],al
    1c2c:	00 00                	add    BYTE PTR [rax],al
    1c2e:	00 00                	add    BYTE PTR [rax],al
    1c30:	15 0b 00 00 03       	adc    eax,0x300000b
    1c35:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1c38:	03 22                	add    esp,DWORD PTR [rdx]
    1c3a:	40 00 00             	rex add BYTE PTR [rax],al
    1c3d:	00 00                	add    BYTE PTR [rax],al
    1c3f:	00 00                	add    BYTE PTR [rax],al
    1c41:	03 01                	add    eax,DWORD PTR [rcx]
    1c43:	54                   	push   rsp
    1c44:	09 03                	or     DWORD PTR [rbx],eax
    1c46:	68 42 00 00 00       	push   0x42
    1c4b:	00 00                	add    BYTE PTR [rax],al
    1c4d:	00 03                	add    BYTE PTR [rbx],al
    1c4f:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1c52:	08 6a 03             	or     BYTE PTR [rdx+0x3],ch
    1c55:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    1c58:	03 e8                	add    ebp,eax
    1c5a:	42 00 00             	rex.X add BYTE PTR [rax],al
    1c5d:	00 00                	add    BYTE PTR [rax],al
    1c5f:	00 00                	add    BYTE PTR [rax],al
    1c61:	00 00                	add    BYTE PTR [rax],al
    1c63:	05 01 02 47 05       	add    eax,0x5470201
    1c68:	00 00                	add    BYTE PTR [rax],al
    1c6a:	33 7e 06             	xor    edi,DWORD PTR [rsi+0x6]
    1c6d:	00 00                	add    BYTE PTR [rax],al
    1c6f:	5c                   	pop    rsp
    1c70:	cb                   	retf
    1c71:	07                   	(bad)
    1c72:	00 00                	add    BYTE PTR [rax],al
    1c74:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c75:	08 00                	or     BYTE PTR [rax],al
    1c77:	00 10                	add    BYTE PTR [rax],dl
    1c79:	16                   	(bad)
    1c7a:	00 00                	add    BYTE PTR [rax],al
    1c7c:	00 00                	add    BYTE PTR [rax],al
    1c7e:	00 00                	add    BYTE PTR [rax],al
    1c80:	db 00                	fild   DWORD PTR [rax]
    1c82:	00 00                	add    BYTE PTR [rax],al
    1c84:	00 00                	add    BYTE PTR [rax],al
    1c86:	00 00                	add    BYTE PTR [rax],al
    1c88:	01 9c 18 14 00 00 0f 	add    DWORD PTR [rax+rbx*1+0xf000014],ebx
    1c8f:	05 06 00 00 5c       	add    eax,0x5c000006
    1c94:	25 71 0d 00 00       	and    eax,0xd71
    1c99:	73 04                	jae    1c9f <_Z17adler32HashString8string_t+0x14f>
    1c9b:	00 00                	add    BYTE PTR [rax],al
    1c9d:	65 04 00             	gs add al,0x0
    1ca0:	00 34 4d 15 00 00 5c 	add    BYTE PTR [rcx*2+0x5c000015],dh
    1ca7:	05 09 00 00 02       	add    eax,0x2000009
    1cac:	91                   	xchg   ecx,eax
    1cad:	00 1a                	add    BYTE PTR [rdx],bl
    1caf:	ec                   	in     al,dx
    1cb0:	03 00                	add    eax,DWORD PTR [rax]
    1cb2:	00 28                	add    BYTE PTR [rax],ch
    1cb4:	14 00                	adc    al,0x0
    1cb6:	00 09                	add    BYTE PTR [rcx],cl
    1cb8:	03 b8 42 00 00 00    	add    edi,DWORD PTR [rax+0x42]
    1cbe:	00 00                	add    BYTE PTR [rax],al
    1cc0:	00 1b                	add    BYTE PTR [rbx],bl
    1cc2:	69 6e 78 00 60 0e 6c 	imul   ebp,DWORD PTR [rsi+0x78],0x6c0e6000
    1cc9:	08 00                	or     BYTE PTR [rax],al
    1ccb:	00 b4 04 00 00 ae 04 	add    BYTE PTR [rsp+rax*1+0x4ae0000],dh
    1cd2:	00 00                	add    BYTE PTR [rax],al
    1cd4:	10 47 16             	adc    BYTE PTR [rdi+0x16],al
    1cd7:	00 00                	add    BYTE PTR [rax],al
    1cd9:	00 00                	add    BYTE PTR [rax],al
    1cdb:	00 00                	add    BYTE PTR [rax],al
    1cdd:	01 30                	add    DWORD PTR [rax],esi
    1cdf:	10 85 16 00 00 00    	adc    BYTE PTR [rbp+0x16],al
    1ce5:	00 00                	add    BYTE PTR [rax],al
    1ce7:	00 01                	add    BYTE PTR [rcx],al
    1ce9:	30 11                	xor    BYTE PTR [rcx],dl
    1ceb:	8a 16                	mov    dl,BYTE PTR [rsi]
    1ced:	00 00                	add    BYTE PTR [rax],al
    1cef:	00 00                	add    BYTE PTR [rax],al
    1cf1:	00 00                	add    BYTE PTR [rax],al
    1cf3:	80 0a 00             	or     BYTE PTR [rdx],0x0
    1cf6:	00 0b                	add    BYTE PTR [rbx],cl
    1cf8:	eb 16                	jmp    1d10 <_Z17adler32HashString8string_t+0x1c0>
    1cfa:	00 00                	add    BYTE PTR [rax],al
    1cfc:	00 00                	add    BYTE PTR [rax],al
    1cfe:	00 00                	add    BYTE PTR [rax],al
    1d00:	15 0b 00 00 03       	adc    eax,0x300000b
    1d05:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1d08:	03 22                	add    esp,DWORD PTR [rdx]
    1d0a:	40 00 00             	rex add BYTE PTR [rax],al
    1d0d:	00 00                	add    BYTE PTR [rax],al
    1d0f:	00 00                	add    BYTE PTR [rax],al
    1d11:	03 01                	add    eax,DWORD PTR [rcx]
    1d13:	54                   	push   rsp
    1d14:	09 03                	or     DWORD PTR [rbx],eax
    1d16:	68 42 00 00 00       	push   0x42
    1d1b:	00 00                	add    BYTE PTR [rax],al
    1d1d:	00 03                	add    BYTE PTR [rbx],al
    1d1f:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1d22:	08 5d 03             	or     BYTE PTR [rbp+0x3],bl
    1d25:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    1d28:	03 b8 42 00 00 00    	add    edi,DWORD PTR [rax+0x42]
    1d2e:	00 00                	add    BYTE PTR [rax],al
    1d30:	00 00                	add    BYTE PTR [rax],al
    1d32:	00 18                	add    BYTE PTR [rax],bl
    1d34:	06                   	(bad)
    1d35:	01 00                	add    DWORD PTR [rax],eax
    1d37:	00 28                	add    BYTE PTR [rax],ch
    1d39:	14 00                	adc    al,0x0
    1d3b:	00 19                	add    BYTE PTR [rcx],bl
    1d3d:	3a 00                	cmp    al,BYTE PTR [rax]
    1d3f:	00 00                	add    BYTE PTR [rax],al
    1d41:	2c 00                	sub    al,0x0
    1d43:	0e                   	(bad)
    1d44:	18 14 00             	sbb    BYTE PTR [rax+rax*1],dl
    1d47:	00 33                	add    BYTE PTR [rbx],dh
    1d49:	12 04 00             	adc    al,BYTE PTR [rax+rax*1]
    1d4c:	00 4e 90             	add    BYTE PTR [rsi-0x70],cl
    1d4f:	07                   	(bad)
    1d50:	00 00                	add    BYTE PTR [rax],al
    1d52:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d53:	08 00                	or     BYTE PTR [rax],al
    1d55:	00 40 15             	add    BYTE PTR [rax+0x15],al
    1d58:	00 00                	add    BYTE PTR [rax],al
    1d5a:	00 00                	add    BYTE PTR [rax],al
    1d5c:	00 00                	add    BYTE PTR [rax],al
    1d5e:	cd 00                	int    0x0
    1d60:	00 00                	add    BYTE PTR [rax],al
    1d62:	00 00                	add    BYTE PTR [rax],al
    1d64:	00 00                	add    BYTE PTR [rax],al
    1d66:	01 9c 09 15 00 00 0f 	add    DWORD PTR [rcx+rcx*1+0xf000015],ebx
    1d6d:	05 06 00 00 4e       	add    eax,0x4e000006
    1d72:	25 71 0d 00 00       	and    eax,0xd71
    1d77:	d4                   	(bad)
    1d78:	04 00                	add    al,0x0
    1d7a:	00 ca                	add    dl,cl
    1d7c:	04 00                	add    al,0x0
    1d7e:	00 34 4d 15 00 00 4e 	add    BYTE PTR [rcx*2+0x4e000015],dh
    1d85:	05 09 00 00 02       	add    eax,0x2000009
    1d8a:	91                   	xchg   ecx,eax
    1d8b:	00 1a                	add    BYTE PTR [rdx],bl
    1d8d:	ec                   	in     al,dx
    1d8e:	03 00                	add    eax,DWORD PTR [rax]
    1d90:	00 28                	add    BYTE PTR [rax],ch
    1d92:	14 00                	adc    al,0x0
    1d94:	00 09                	add    BYTE PTR [rcx],cl
    1d96:	03 88 42 00 00 00    	add    ecx,DWORD PTR [rax+0x42]
    1d9c:	00 00                	add    BYTE PTR [rax],al
    1d9e:	00 1b                	add    BYTE PTR [rbx],bl
    1da0:	69 6e 78 00 52 0e 6c 	imul   ebp,DWORD PTR [rsi+0x78],0x6c0e5200
    1da7:	08 00                	or     BYTE PTR [rax],al
    1da9:	00 02                	add    BYTE PTR [rdx],al
    1dab:	05 00 00 fe 04       	add    eax,0x4fe0000
    1db0:	00 00                	add    BYTE PTR [rax],al
    1db2:	0a 41 06             	or     al,BYTE PTR [rcx+0x6]
    1db5:	00 00                	add    BYTE PTR [rax],al
    1db7:	54                   	push   rsp
    1db8:	0e                   	(bad)
    1db9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dba:	08 00                	or     BYTE PTR [rax],al
    1dbc:	00 13                	add    BYTE PTR [rbx],dl
    1dbe:	05 00 00 11 05       	add    eax,0x5110000
    1dc3:	00 00                	add    BYTE PTR [rax],al
    1dc5:	10 77 15             	adc    BYTE PTR [rdi+0x15],dh
    1dc8:	00 00                	add    BYTE PTR [rax],al
    1dca:	00 00                	add    BYTE PTR [rax],al
    1dcc:	00 00                	add    BYTE PTR [rax],al
    1dce:	01 30                	add    DWORD PTR [rax],esi
    1dd0:	10 b5 15 00 00 00    	adc    BYTE PTR [rbp+0x15],dh
    1dd6:	00 00                	add    BYTE PTR [rax],al
    1dd8:	00 01                	add    BYTE PTR [rcx],al
    1dda:	30 11                	xor    BYTE PTR [rcx],dl
    1ddc:	ba 15 00 00 00       	mov    edx,0x15
    1de1:	00 00                	add    BYTE PTR [rax],al
    1de3:	00 9f 0a 00 00 0b    	add    BYTE PTR [rdi+0xb00000a],bl
    1de9:	0d 16 00 00 00       	or     eax,0x16
    1dee:	00 00                	add    BYTE PTR [rax],al
    1df0:	00 15 0b 00 00 03    	add    BYTE PTR [rip+0x300000b],dl        # 3001e01 <_end+0x2ffbde9>
    1df6:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1df9:	03 22                	add    esp,DWORD PTR [rdx]
    1dfb:	40 00 00             	rex add BYTE PTR [rax],al
    1dfe:	00 00                	add    BYTE PTR [rax],al
    1e00:	00 00                	add    BYTE PTR [rax],al
    1e02:	03 01                	add    eax,DWORD PTR [rcx]
    1e04:	54                   	push   rsp
    1e05:	09 03                	or     DWORD PTR [rbx],eax
    1e07:	68 42 00 00 00       	push   0x42
    1e0c:	00 00                	add    BYTE PTR [rax],al
    1e0e:	00 03                	add    BYTE PTR [rbx],al
    1e10:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1e13:	08 4f 03             	or     BYTE PTR [rdi+0x3],cl
    1e16:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    1e19:	03 88 42 00 00 00    	add    ecx,DWORD PTR [rax+0x42]
    1e1f:	00 00                	add    BYTE PTR [rax],al
    1e21:	00 00                	add    BYTE PTR [rax],al
    1e23:	00 35 5d 03 00 00    	add    BYTE PTR [rip+0x35d],dh        # 2186 <_Z13searchElementP4List8string_t+0x16>
    1e29:	01 3f                	add    DWORD PTR [rdi],edi
    1e2b:	09 a1 06 00 00 33    	or     DWORD PTR [rcx+0x33000006],esp
    1e31:	0a 00                	or     al,BYTE PTR [rax]
    1e33:	00 01                	add    BYTE PTR [rcx],al
    1e35:	61                   	(bad)
    1e36:	15 00 00 0d 49       	adc    eax,0x490d0000
    1e3b:	04 00                	add    al,0x0
    1e3d:	00 01                	add    BYTE PTR [rcx],al
    1e3f:	3f                   	(bad)
    1e40:	1c 11                	sbb    al,0x11
    1e42:	09 00                	or     DWORD PTR [rax],eax
    1e44:	00 0d 0f 08 00 00    	add    BYTE PTR [rip+0x80f],cl        # 2659 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2c9>
    1e4a:	01 3f                	add    DWORD PTR [rdi],edi
    1e4c:	30 6c 08 00          	xor    BYTE PTR [rax+rcx*1+0x0],ch
    1e50:	00 2a                	add    BYTE PTR [rdx],ch
    1e52:	05 06 00 00 40       	add    eax,0x40000006
    1e57:	0d 33 0a 00 00       	or     eax,0xa33
    1e5c:	31 29                	xor    DWORD PTR [rcx],ebp
    1e5e:	69 00 47 13 6c 08    	imul   eax,DWORD PTR [rax],0x86c1347
    1e64:	00 00                	add    BYTE PTR [rax],al
    1e66:	0b fc                	or     edi,esp
    1e68:	14 00                	adc    al,0x0
    1e6a:	00 00                	add    BYTE PTR [rax],al
    1e6c:	00 00                	add    BYTE PTR [rax],al
    1e6e:	00 be 0a 00 00 03    	add    BYTE PTR [rsi+0x300000a],bh
    1e74:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    1e77:	77 00                	ja     1e79 <_Z13searchElementP4List8string_t.part.0+0x9>
    1e79:	00 00                	add    BYTE PTR [rax],al
    1e7b:	00 21                	add    BYTE PTR [rcx],ah
    1e7d:	de 06                	fiadd  WORD PTR [rsi]
    1e7f:	00 00                	add    BYTE PTR [rax],al
    1e81:	14 0b                	adc    al,0xb
    1e83:	89 03                	mov    DWORD PTR [rbx],eax
    1e85:	00 00                	add    BYTE PTR [rax],al
    1e87:	c4                   	(bad)
    1e88:	18 00                	sbb    BYTE PTR [rax],al
    1e8a:	00 00                	add    BYTE PTR [rax],al
    1e8c:	13 00                	adc    eax,DWORD PTR [rax]
    1e8e:	00 00                	add    BYTE PTR [rax],al
    1e90:	00 00                	add    BYTE PTR [rax],al
    1e92:	00 86 01 00 00 00    	add    BYTE PTR [rsi+0x1],al
    1e98:	00 00                	add    BYTE PTR [rax],al
    1e9a:	00 01                	add    BYTE PTR [rcx],al
    1e9c:	9c                   	pushf
    1e9d:	c4                   	(bad)
    1e9e:	18 00                	sbb    BYTE PTR [rax],al
    1ea0:	00 0f                	add    BYTE PTR [rdi],cl
    1ea2:	a9 03 00 00 14       	test   eax,0x14000003
    1ea7:	22 41 01             	and    al,BYTE PTR [rcx+0x1]
    1eaa:	00 00                	add    BYTE PTR [rax],al
    1eac:	2d 05 00 00 1b       	sub    eax,0x1b000005
    1eb1:	05 00 00 0f 29       	add    eax,0x290f0000
    1eb6:	05 00 00 14 31       	add    eax,0x31140000
    1ebb:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ebc:	08 00                	or     BYTE PTR [rax],al
    1ebe:	00 7b 05             	add    BYTE PTR [rbx+0x5],bh
    1ec1:	00 00                	add    BYTE PTR [rax],al
    1ec3:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ec4:	05 00 00 1a ec       	add    eax,0xec1a0000
    1ec9:	03 00                	add    eax,DWORD PTR [rax]
    1ecb:	00 e4                	add    ah,ah
    1ecd:	0d 00 00 09 03       	or     eax,0x3090000
    1ed2:	38 42 00             	cmp    BYTE PTR [rdx+0x0],al
    1ed5:	00 00                	add    BYTE PTR [rax],al
    1ed7:	00 00                	add    BYTE PTR [rax],al
    1ed9:	00 0a                	add    BYTE PTR [rdx],cl
    1edb:	83 07 00             	add    DWORD PTR [rdi],0x0
    1ede:	00 18                	add    BYTE PTR [rax],bl
    1ee0:	0f c4 18 00          	pinsrw mm3,WORD PTR [rax],0x0
    1ee4:	00 ae 05 00 00 ac    	add    BYTE PTR [rsi-0x53fffffb],ch
    1eea:	05 00 00 0a a1       	add    eax,0xa10a0000
    1eef:	03 00                	add    eax,DWORD PTR [rax]
    1ef1:	00 19                	add    BYTE PTR [rcx],bl
    1ef3:	0b 41 01             	or     eax,DWORD PTR [rcx+0x1]
    1ef6:	00 00                	add    BYTE PTR [rax],al
    1ef8:	bd 05 00 00 b5       	mov    ebp,0xb5000005
    1efd:	05 00 00 0a 69       	add    eax,0x690a0000
    1f02:	03 00                	add    eax,DWORD PTR [rax]
    1f04:	00 1a                	add    BYTE PTR [rdx],bl
    1f06:	0b 41 01             	or     eax,DWORD PTR [rcx+0x1]
    1f09:	00 00                	add    BYTE PTR [rax],al
    1f0b:	e1 05                	loope  1f12 <_Z12pushListElemP4List8string_t+0x2>
    1f0d:	00 00                	add    BYTE PTR [rax],al
    1f0f:	d7                   	xlat   BYTE PTR ds:[rbx]
    1f10:	05 00 00 0a 5b       	add    eax,0x5b0a0000
    1f15:	06                   	(bad)
    1f16:	00 00                	add    BYTE PTR [rax],al
    1f18:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1f1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f1b:	08 00                	or     BYTE PTR [rax],al
    1f1d:	00 0d 06 00 00 05    	add    BYTE PTR [rip+0x5000006],cl        # 5001f29 <_end+0x4ffbf11>
    1f23:	06                   	(bad)
    1f24:	00 00                	add    BYTE PTR [rax],al
    1f26:	55                   	push   rbp
    1f27:	60                   	(bad)
    1f28:	13 00                	adc    eax,DWORD PTR [rax]
    1f2a:	00 00                	add    BYTE PTR [rax],al
    1f2c:	00 00                	add    BYTE PTR [rax],al
    1f2e:	00 cc                	add    ah,cl
    1f30:	00 00                	add    BYTE PTR [rax],al
    1f32:	00 00                	add    BYTE PTR [rax],al
    1f34:	00 00                	add    BYTE PTR [rax],al
    1f36:	00 e1                	add    cl,ah
    1f38:	17                   	(bad)
    1f39:	00 00                	add    BYTE PTR [rax],al
    1f3b:	1b 69 00             	sbb    ebp,DWORD PTR [rcx+0x0]
    1f3e:	20 13                	and    BYTE PTR [rbx],dl
    1f40:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f41:	08 00                	or     BYTE PTR [rax],al
    1f43:	00 2b                	add    BYTE PTR [rbx],ch
    1f45:	06                   	(bad)
    1f46:	00 00                	add    BYTE PTR [rax],al
    1f48:	29 06                	sub    DWORD PTR [rsi],eax
    1f4a:	00 00                	add    BYTE PTR [rax],al
    1f4c:	0c 1f                	or     al,0x1f
    1f4e:	1a 00                	sbb    al,BYTE PTR [rax]
    1f50:	00 90 13 00 00 00    	add    BYTE PTR [rax+0x13],dl
    1f56:	00 00                	add    BYTE PTR [rax],al
    1f58:	00 03                	add    BYTE PTR [rbx],al
    1f5a:	36 00 00             	ss add BYTE PTR [rax],al
    1f5d:	00 23                	add    BYTE PTR [rbx],ah
    1f5f:	17                   	(bad)
    1f60:	7d 16                	jge    1f78 <_Z12pushListElemP4List8string_t+0x68>
    1f62:	00 00                	add    BYTE PTR [rax],al
    1f64:	04 3f                	add    al,0x3f
    1f66:	1a 00                	sbb    al,BYTE PTR [rax]
    1f68:	00 34 06             	add    BYTE PTR [rsi+rax*1],dh
    1f6b:	00 00                	add    BYTE PTR [rax],al
    1f6d:	32 06                	xor    al,BYTE PTR [rsi]
    1f6f:	00 00                	add    BYTE PTR [rax],al
    1f71:	04 34                	add    al,0x34
    1f73:	1a 00                	sbb    al,BYTE PTR [rax]
    1f75:	00 41 06             	add    BYTE PTR [rcx+0x6],al
    1f78:	00 00                	add    BYTE PTR [rax],al
    1f7a:	3d 06 00 00 0b       	cmp    eax,0xb000006
    1f7f:	95                   	xchg   ebp,eax
    1f80:	13 00                	adc    eax,DWORD PTR [rax]
    1f82:	00 00                	add    BYTE PTR [rax],al
    1f84:	00 00                	add    BYTE PTR [rax],al
    1f86:	00 b3 1b 00 00 03    	add    BYTE PTR [rbx+0x300001b],dh
    1f8c:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    1f8f:	7c 00                	jl     1f91 <_Z12pushListElemP4List8string_t+0x81>
    1f91:	03 01                	add    eax,DWORD PTR [rcx]
    1f93:	54                   	push   rsp
    1f94:	01 3a                	add    DWORD PTR [rdx],edi
    1f96:	00 00                	add    BYTE PTR [rax],al
    1f98:	0c b9                	or     al,0xb9
    1f9a:	19 00                	sbb    DWORD PTR [rax],eax
    1f9c:	00 c3                	add    bl,al
    1f9e:	13 00                	adc    eax,DWORD PTR [rax]
    1fa0:	00 00                	add    BYTE PTR [rax],al
    1fa2:	00 00                	add    BYTE PTR [rax],al
    1fa4:	00 00                	add    BYTE PTR [rax],al
    1fa6:	41 00 00             	add    BYTE PTR [r8],al
    1fa9:	00 28                	add    BYTE PTR [rax],ch
    1fab:	10 07                	adc    BYTE PTR [rdi],al
    1fad:	17                   	(bad)
    1fae:	00 00                	add    BYTE PTR [rax],al
    1fb0:	04 df                	add    al,0xdf
    1fb2:	19 00                	sbb    DWORD PTR [rax],eax
    1fb4:	00 54 06 00          	add    BYTE PTR [rsi+rax*1+0x0],dl
    1fb8:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    1fbb:	00 00                	add    BYTE PTR [rax],al
    1fbd:	04 d3                	add    al,0xd3
    1fbf:	19 00                	sbb    DWORD PTR [rax],eax
    1fc1:	00 66 06             	add    BYTE PTR [rsi+0x6],ah
    1fc4:	00 00                	add    BYTE PTR [rax],al
    1fc6:	64 06                	fs (bad)
    1fc8:	00 00                	add    BYTE PTR [rax],al
    1fca:	04 c7                	add    al,0xc7
    1fcc:	19 00                	sbb    DWORD PTR [rax],eax
    1fce:	00 72 06             	add    BYTE PTR [rdx+0x6],dh
    1fd1:	00 00                	add    BYTE PTR [rax],al
    1fd3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fd4:	06                   	(bad)
    1fd5:	00 00                	add    BYTE PTR [rax],al
    1fd7:	0b d0                	or     edx,eax
    1fd9:	13 00                	adc    eax,DWORD PTR [rax]
    1fdb:	00 00                	add    BYTE PTR [rax],al
    1fdd:	00 00                	add    BYTE PTR [rax],al
    1fdf:	00 bc 1b 00 00 03 01 	add    BYTE PTR [rbx+rbx*1+0x1030000],bh
    1fe6:	55                   	push   rbp
    1fe7:	03 77 38             	add    esi,DWORD PTR [rdi+0x38]
    1fea:	06                   	(bad)
    1feb:	03 01                	add    eax,DWORD PTR [rcx]
    1fed:	51                   	push   rcx
    1fee:	03 77 30             	add    esi,DWORD PTR [rdi+0x30]
    1ff1:	06                   	(bad)
    1ff2:	03 01                	add    eax,DWORD PTR [rcx]
    1ff4:	52                   	push   rdx
    1ff5:	2a 73 00             	sub    dh,BYTE PTR [rbx+0x0]
    1ff8:	77 28                	ja     2022 <_Z12pushListElemP4List8string_t+0x112>
    1ffa:	06                   	(bad)
    1ffb:	73 00                	jae    1ffd <_Z12pushListElemP4List8string_t+0xed>
    1ffd:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    2003:	80 80 80 80 01 77 28 	add    BYTE PTR [rax+0x77018080],0x28
    200a:	06                   	(bad)
    200b:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    2011:	80 80 80 80 01 2a 28 	add    BYTE PTR [rax+0x2a018080],0x28
    2018:	01 00                	add    DWORD PTR [rax],eax
    201a:	16                   	(bad)
    201b:	13 77 28             	adc    esi,DWORD PTR [rdi+0x28]
    201e:	06                   	(bad)
    201f:	1c 00                	sbb    al,0x0
    2021:	00 0c ec             	add    BYTE PTR [rsp+rbp*8],cl
    2024:	19 00                	sbb    DWORD PTR [rax],eax
    2026:	00 de                	add    dh,bl
    2028:	13 00                	adc    eax,DWORD PTR [rax]
    202a:	00 00                	add    BYTE PTR [rax],al
    202c:	00 00                	add    BYTE PTR [rax],al
    202e:	00 00                	add    BYTE PTR [rax],al
    2030:	5b                   	pop    rbx
    2031:	00 00                	add    BYTE PTR [rax],al
    2033:	00 29                	add    BYTE PTR [rcx],ch
    2035:	0f b1 17             	cmpxchg DWORD PTR [rdi],edx
    2038:	00 00                	add    BYTE PTR [rax],al
    203a:	04 12                	add    al,0x12
    203c:	1a 00                	sbb    al,BYTE PTR [rax]
    203e:	00 88 06 00 00 82    	add    BYTE PTR [rax-0x7dfffffa],cl
    2044:	06                   	(bad)
    2045:	00 00                	add    BYTE PTR [rax],al
    2047:	04 06                	add    al,0x6
    2049:	1a 00                	sbb    al,BYTE PTR [rax]
    204b:	00 b6 06 00 00 b4    	add    BYTE PTR [rsi-0x4bfffffa],dh
    2051:	06                   	(bad)
    2052:	00 00                	add    BYTE PTR [rax],al
    2054:	04 fa                	add    al,0xfa
    2056:	19 00                	sbb    DWORD PTR [rax],eax
    2058:	00 c5                	add    ch,al
    205a:	06                   	(bad)
    205b:	00 00                	add    BYTE PTR [rax],al
    205d:	bf 06 00 00 0b       	mov    edi,0xb000006
    2062:	01 14 00             	add    DWORD PTR [rax+rax*1],edx
    2065:	00 00                	add    BYTE PTR [rax],al
    2067:	00 00                	add    BYTE PTR [rax],al
    2069:	00 c5                	add    ch,al
    206b:	1b 00                	sbb    eax,DWORD PTR [rax]
    206d:	00 03                	add    BYTE PTR [rbx],al
    206f:	01 55 0a             	add    DWORD PTR [rbp+0xa],edx
    2072:	7f 00                	jg     2074 <_Z12pushListElemP4List8string_t+0x164>
    2074:	77 30                	ja     20a6 <_Z12pushListElemP4List8string_t+0x196>
    2076:	06                   	(bad)
    2077:	22 77 28             	and    dh,BYTE PTR [rdi+0x28]
    207a:	06                   	(bad)
    207b:	22 03                	and    al,BYTE PTR [rbx]
    207d:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
    2081:	03 01                	add    eax,DWORD PTR [rcx]
    2083:	51                   	push   rcx
    2084:	0b 08                	or     ecx,DWORD PTR [rax]
    2086:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
    2089:	1c 0c                	sbb    al,0xc
    208b:	ff                   	(bad)
    208c:	ff                   	(bad)
    208d:	ff                   	(bad)
    208e:	ff 1a                	call   FWORD PTR [rdx]
    2090:	03 01                	add    eax,DWORD PTR [rcx]
    2092:	52                   	push   rdx
    2093:	36 73 00             	ss jae 2096 <_Z12pushListElemP4List8string_t+0x186>
    2096:	77 30                	ja     20c8 <_Z11popListElemP4List8string_t+0x18>
    2098:	06                   	(bad)
    2099:	77 28                	ja     20c3 <_Z11popListElemP4List8string_t+0x13>
    209b:	06                   	(bad)
    209c:	22 73 00             	and    dh,BYTE PTR [rbx+0x0]
    209f:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    20a5:	80 80 80 80 01 77 30 	add    BYTE PTR [rax+0x77018080],0x30
    20ac:	06                   	(bad)
    20ad:	77 28                	ja     20d7 <_Z11popListElemP4List8string_t+0x27>
    20af:	06                   	(bad)
    20b0:	22 23                	and    ah,BYTE PTR [rbx]
    20b2:	80 80 80 80 80 80 80 	add    BYTE PTR [rax-0x7f7f7f80],0x80
    20b9:	80 80 01 2a 28 01 00 	add    BYTE PTR [rax+0x1282a01],0x0
    20c0:	16                   	(bad)
    20c1:	13 77 30             	adc    esi,DWORD PTR [rdi+0x30]
    20c4:	06                   	(bad)
    20c5:	1c 77                	sbb    al,0x77
    20c7:	28 06                	sub    BYTE PTR [rsi],al
    20c9:	1c 00                	sbb    al,0x0
    20cb:	00 56 c9             	add    BYTE PTR [rsi-0x37],dl
    20ce:	18 00                	sbb    BYTE PTR [rax],al
    20d0:	00 01                	add    BYTE PTR [rcx],al
    20d2:	14 00                	adc    al,0x0
    20d4:	00 00                	add    BYTE PTR [rax],al
    20d6:	00 00                	add    BYTE PTR [rax],al
    20d8:	00 02                	add    BYTE PTR [rdx],al
    20da:	01 14 00             	add    DWORD PTR [rax+rax*1],edx
	...
    20e9:	00 01                	add    BYTE PTR [rcx],al
    20eb:	30 37                	xor    BYTE PTR [rdi],dh
    20ed:	04 dd                	add    al,0xdd
    20ef:	18 00                	sbb    BYTE PTR [rax],al
    20f1:	00 ec                	add    ah,ch
    20f3:	06                   	(bad)
    20f4:	00 00                	add    BYTE PTR [rax],al
    20f6:	ea                   	(bad)
    20f7:	06                   	(bad)
    20f8:	00 00                	add    BYTE PTR [rax],al
    20fa:	00 00                	add    BYTE PTR [rax],al
    20fc:	1c 42                	sbb    al,0x42
    20fe:	13 00                	adc    eax,DWORD PTR [rax]
    2100:	00 00                	add    BYTE PTR [rax],al
    2102:	00 00                	add    BYTE PTR [rax],al
    2104:	00 fa                	add    dl,bh
    2106:	0a 00                	or     al,BYTE PTR [rax]
    2108:	00 ff                	add    bh,bh
    210a:	17                   	(bad)
    210b:	00 00                	add    BYTE PTR [rax],al
    210d:	03 01                	add    eax,DWORD PTR [rcx]
    210f:	55                   	push   rbp
    2110:	02 08                	add    cl,BYTE PTR [rax]
    2112:	40 03 01             	rex add eax,DWORD PTR [rcx]
    2115:	54                   	push   rsp
    2116:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    2119:	00 1c 54             	add    BYTE PTR [rsp+rdx*2],bl
    211c:	13 00                	adc    eax,DWORD PTR [rax]
    211e:	00 00                	add    BYTE PTR [rax],al
    2120:	00 00                	add    BYTE PTR [rax],al
    2122:	00 fa                	add    dl,bh
    2124:	0a 00                	or     al,BYTE PTR [rax]
    2126:	00 1d 18 00 00 03    	add    BYTE PTR [rip+0x3000018],bl        # 3002144 <_end+0x2ffc12c>
    212c:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    212f:	08 20                	or     BYTE PTR [rax],ah
    2131:	03 01                	add    eax,DWORD PTR [rcx]
    2133:	54                   	push   rsp
    2134:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    2137:	00 10                	add    BYTE PTR [rax],dl
    2139:	83 13 00             	adc    DWORD PTR [rbx],0x0
    213c:	00 00                	add    BYTE PTR [rax],al
    213e:	00 00                	add    BYTE PTR [rax],al
    2140:	00 01                	add    BYTE PTR [rcx],al
    2142:	30 10                	xor    BYTE PTR [rax],dl
    2144:	2c 14                	sub    al,0x14
    2146:	00 00                	add    BYTE PTR [rax],al
    2148:	00 00                	add    BYTE PTR [rax],al
    214a:	00 00                	add    BYTE PTR [rax],al
    214c:	01 30                	add    DWORD PTR [rax],esi
    214e:	1c 34                	sbb    al,0x34
    2150:	14 00                	adc    al,0x0
    2152:	00 00                	add    BYTE PTR [rax],al
    2154:	00 00                	add    BYTE PTR [rax],al
    2156:	00 e9                	add    cl,ch
    2158:	0a 00                	or     al,BYTE PTR [rax]
    215a:	00 4b 18             	add    BYTE PTR [rbx+0x18],cl
    215d:	00 00                	add    BYTE PTR [rax],al
    215f:	03 01                	add    eax,DWORD PTR [rcx]
    2161:	55                   	push   rbp
    2162:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    2165:	00 1c 67             	add    BYTE PTR [rdi+riz*2],bl
    2168:	14 00                	adc    al,0x0
    216a:	00 00                	add    BYTE PTR [rax],al
    216c:	00 00                	add    BYTE PTR [rax],al
    216e:	00 15 0b 00 00 89    	add    BYTE PTR [rip+0xffffffff8900000b],dl        # ffffffff8900217f <_end+0xffffffff88ffc167>
    2174:	18 00                	sbb    BYTE PTR [rax],al
    2176:	00 03                	add    BYTE PTR [rbx],al
    2178:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    217b:	03 1d 40 00 00 00    	add    ebx,DWORD PTR [rip+0x40]        # 21c1 <_Z13searchElementP4List8string_t+0x51>
    2181:	00 00                	add    BYTE PTR [rax],al
    2183:	00 03                	add    BYTE PTR [rbx],al
    2185:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    2189:	68 42 00 00 00       	push   0x42
    218e:	00 00                	add    BYTE PTR [rax],al
    2190:	00 03                	add    BYTE PTR [rbx],al
    2192:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    2195:	45 03 01             	add    r8d,DWORD PTR [r9]
    2198:	52                   	push   rdx
    2199:	09 03                	or     DWORD PTR [rbx],eax
    219b:	38 42 00             	cmp    BYTE PTR [rdx+0x0],al
    219e:	00 00                	add    BYTE PTR [rax],al
    21a0:	00 00                	add    BYTE PTR [rax],al
    21a2:	00 00                	add    BYTE PTR [rax],al
    21a4:	0b 86 14 00 00 00    	or     eax,DWORD PTR [rsi+0x14]
    21aa:	00 00                	add    BYTE PTR [rax],al
    21ac:	00 15 0b 00 00 03    	add    BYTE PTR [rip+0x300000b],dl        # 30021bd <_end+0x2ffc1a5>
    21b2:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    21b5:	03 15 40 00 00 00    	add    edx,DWORD PTR [rip+0x40]        # 21fb <_Z8listDtorP4List+0x2b>
    21bb:	00 00                	add    BYTE PTR [rax],al
    21bd:	00 03                	add    BYTE PTR [rbx],al
    21bf:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    21c3:	68 42 00 00 00       	push   0x42
    21c8:	00 00                	add    BYTE PTR [rax],al
    21ca:	00 03                	add    BYTE PTR [rbx],al
    21cc:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    21cf:	4d 03 01             	add    r8,QWORD PTR [r9]
    21d2:	52                   	push   rdx
    21d3:	09 03                	or     DWORD PTR [rbx],eax
    21d5:	38 42 00             	cmp    BYTE PTR [rdx+0x0],al
    21d8:	00 00                	add    BYTE PTR [rax],al
    21da:	00 00                	add    BYTE PTR [rax],al
    21dc:	00 00                	add    BYTE PTR [rax],al
    21de:	00 08                	add    BYTE PTR [rax],cl
    21e0:	e1 08                	loope  21ea <_Z8listDtorP4List+0x1a>
    21e2:	00 00                	add    BYTE PTR [rax],al
    21e4:	1d 3f 07 00 00       	sbb    eax,0x73f
    21e9:	04 93                	add    al,0x93
    21eb:	03 a7 04 00 00 41    	add    esp,DWORD PTR [rdi+0x41000004]
    21f1:	08 00                	or     BYTE PTR [rax],al
    21f3:	00 eb                	add    bl,ch
    21f5:	18 00                	sbb    BYTE PTR [rax],al
    21f7:	00 13                	add    BYTE PTR [rbx],dl
    21f9:	5f                   	pop    rdi
    21fa:	5f                   	pop    rdi
    21fb:	50                   	push   rax
    21fc:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
    21ff:	03 23                	add    esp,DWORD PTR [rbx]
    2201:	eb 18                	jmp    221b <_Z8readFilePKcPm+0xb>
    2203:	00 00                	add    BYTE PTR [rax],al
    2205:	00 08                	add    BYTE PTR [rax],cl
    2207:	4d 08 00             	rex.WRB or BYTE PTR [r8],r8b
    220a:	00 1d 62 06 00 00    	add    BYTE PTR [rip+0x662],bl        # 2872 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x72>
    2210:	04 2e                	add    al,0x2e
    2212:	02 bf 06 00 00 db    	add    bh,BYTE PTR [rdi-0x24fffffa]
    2218:	00 00                	add    BYTE PTR [rax],al
    221a:	00 2c 19             	add    BYTE PTR [rcx+rbx*1],ch
    221d:	00 00                	add    BYTE PTR [rax],al
    221f:	13 5f 5f             	adc    ebx,DWORD PTR [rdi+0x5f]
    2222:	58                   	pop    rax
    2223:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
    2226:	02 1f                	add    bl,BYTE PTR [rdi]
    2228:	41 08 00             	or     BYTE PTR [r8],al
    222b:	00 13                	add    BYTE PTR [rbx],dl
    222d:	5f                   	pop    rdi
    222e:	5f                   	pop    rdi
    222f:	4e 00 04 2e          	rex.WRX add BYTE PTR [rsi+r13*1],r8b
    2233:	02 2e                	add    ch,BYTE PTR [rsi]
    2235:	6d                   	ins    DWORD PTR es:[rdi],dx
    2236:	00 00                	add    BYTE PTR [rax],al
    2238:	00 57 5f             	add    BYTE PTR [rdi+0x5f],dl
    223b:	5f                   	pop    rdi
    223c:	59                   	pop    rcx
    223d:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    2240:	02 0b                	add    cl,BYTE PTR [rbx]
    2242:	11 08                	adc    DWORD PTR [rax],ecx
    2244:	00 00                	add    BYTE PTR [rax],al
    2246:	00 1d 24 04 00 00    	add    BYTE PTR [rip+0x424],bl        # 2670 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    224c:	04 12                	add    al,0x12
    224e:	02 de                	add    bl,dh
    2250:	05 00 00 11 08       	add    eax,0x8110000
    2255:	00 00                	add    BYTE PTR [rax],al
    2257:	5b                   	pop    rbx
    2258:	19 00                	sbb    DWORD PTR [rax],eax
    225a:	00 13                	add    BYTE PTR [rbx],dl
    225c:	5f                   	pop    rdi
    225d:	5f                   	pop    rdi
    225e:	58                   	pop    rax
    225f:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
    2262:	02 23                	add    ah,BYTE PTR [rbx]
    2264:	41 08 00             	or     BYTE PTR [r8],al
    2267:	00 13                	add    BYTE PTR [rbx],dl
    2269:	5f                   	pop    rdi
    226a:	5f                   	pop    rdi
    226b:	4e 00 04 12          	rex.WRX add BYTE PTR [rdx+r10*1],r8b
    226f:	02 32                	add    dh,BYTE PTR [rdx]
    2271:	6d                   	ins    DWORD PTR es:[rdi],dx
    2272:	00 00                	add    BYTE PTR [rax],al
    2274:	00 00                	add    BYTE PTR [rax],al
    2276:	1d 1f 08 00 00       	sbb    eax,0x81f
    227b:	05 49 03 42 03       	add    eax,0x3420349
    2280:	00 00                	add    BYTE PTR [rax],al
    2282:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    2285:	00 8a 19 00 00 13    	add    BYTE PTR [rdx+0x13000019],cl
    228b:	5f                   	pop    rdi
    228c:	5f                   	pop    rdi
    228d:	43 00 05 49 03 23 4b 	rex.XB add BYTE PTR [rip+0x4b230349],al        # 4b2325dd <_end+0x4b22c5c5>
    2294:	01 00                	add    DWORD PTR [rax],eax
    2296:	00 13                	add    BYTE PTR [rbx],dl
    2298:	5f                   	pop    rdi
    2299:	5f                   	pop    rdi
    229a:	56                   	push   rsi
    229b:	00 05 49 03 3b 4b    	add    BYTE PTR [rip+0x4b3b0349],al        # 4b3b25ea <_end+0x4b3ac5d2>
    22a1:	01 00                	add    DWORD PTR [rax],eax
    22a3:	00 00                	add    BYTE PTR [rax],al
    22a5:	1d 00 04 00 00       	sbb    eax,0x400
    22aa:	05 c7 01 cd 04       	add    eax,0x4cd01c7
    22af:	00 00                	add    BYTE PTR [rax],al
    22b1:	db 00                	fild   DWORD PTR [rax]
    22b3:	00 00                	add    BYTE PTR [rax],al
    22b5:	b9 19 00 00 13       	mov    ecx,0x13000019
    22ba:	5f                   	pop    rdi
    22bb:	5f                   	pop    rdi
    22bc:	58                   	pop    rax
    22bd:	00 05 c7 01 1c 11    	add    BYTE PTR [rip+0x111c01c7],al        # 111c248a <_end+0x111bc472>
    22c3:	08 00                	or     BYTE PTR [rax],al
    22c5:	00 13                	add    BYTE PTR [rbx],dl
    22c7:	5f                   	pop    rdi
    22c8:	5f                   	pop    rdi
    22c9:	4e 00 05 c7 01 2b 6d 	rex.WRX add BYTE PTR [rip+0x6d2b01c7],r8b        # 6d2b2497 <_end+0x6d2ac47f>
    22d0:	00 00                	add    BYTE PTR [rax],al
    22d2:	00 00                	add    BYTE PTR [rax],al
    22d4:	36 96                	ss xchg esi,eax
    22d6:	04 00                	add    al,0x0
    22d8:	00 5c 41 01          	add    BYTE PTR [rcx+rax*2+0x1],bl
    22dc:	00 00                	add    BYTE PTR [rax],al
    22de:	ec                   	in     al,dx
    22df:	19 00                	sbb    DWORD PTR [rax],eax
    22e1:	00 0d 97 05 00 00    	add    BYTE PTR [rip+0x597],cl        # 287e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x7e>
    22e7:	03 5c 01 46          	add    ebx,DWORD PTR [rcx+rax*1+0x46]
    22eb:	01 00                	add    DWORD PTR [rax],eax
    22ed:	00 0d b5 03 00 00    	add    BYTE PTR [rip+0x3b5],cl        # 26a8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x318>
    22f3:	03 5c 01 fa          	add    ebx,DWORD PTR [rcx+rax*1-0x6]
    22f7:	00 00                	add    BYTE PTR [rax],al
    22f9:	00 0d 90 04 00 00    	add    BYTE PTR [rip+0x490],cl        # 278f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ff>
    22ff:	03 5c 01 2e          	add    ebx,DWORD PTR [rcx+rax*1+0x2e]
    2303:	00 00                	add    BYTE PTR [rax],al
    2305:	00 00                	add    BYTE PTR [rax],al
    2307:	36 6a 18             	ss push 0x18
    230a:	00 00                	add    BYTE PTR [rax],al
    230c:	39 3f                	cmp    DWORD PTR [rdi],edi
    230e:	01 00                	add    DWORD PTR [rax],eax
    2310:	00 1f                	add    BYTE PTR [rdi],bl
    2312:	1a 00                	sbb    al,BYTE PTR [rax]
    2314:	00 0d 97 05 00 00    	add    BYTE PTR [rip+0x597],cl        # 28b1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xb1>
    231a:	03 39                	add    edi,DWORD PTR [rcx]
    231c:	01 3f                	add    DWORD PTR [rdi],edi
    231e:	01 00                	add    DWORD PTR [rax],eax
    2320:	00 0d 84 03 00 00    	add    BYTE PTR [rip+0x384],cl        # 26aa <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x31a>
    2326:	03 39                	add    edi,DWORD PTR [rcx]
    2328:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    232b:	00 00                	add    BYTE PTR [rax],al
    232d:	0d 90 04 00 00       	or     eax,0x490
    2332:	03 39                	add    edi,DWORD PTR [rcx]
    2334:	01 2e                	add    DWORD PTR [rsi],ebp
    2336:	00 00                	add    BYTE PTR [rax],al
    2338:	00 00                	add    BYTE PTR [rax],al
    233a:	35 b5 05 00 00       	xor    eax,0x5b5
    233f:	02 e9                	add    ch,cl
    2341:	01 b5 05 00 00 41    	add    DWORD PTR [rbp+0x41000005],esi
    2347:	01 00                	add    DWORD PTR [rax],eax
    2349:	00 03                	add    BYTE PTR [rbx],al
    234b:	4b 1a 00             	rex.WXB sbb al,BYTE PTR [r8]
    234e:	00 37                	add    BYTE PTR [rdi],dh
    2350:	5f                   	pop    rdi
    2351:	5f                   	pop    rdi
    2352:	73 00                	jae    2354 <_Z10countLinesPcm+0x34>
    2354:	e9 0f 41 01 00       	jmp    16468 <_end+0x10450>
    2359:	00 37                	add    BYTE PTR [rdi],dh
    235b:	5f                   	pop    rdi
    235c:	5f                   	pop    rdi
    235d:	63 00                	movsxd eax,DWORD PTR [rax]
    235f:	e9 18 66 00 00       	jmp    897c <_end+0x2964>
    2364:	00 00                	add    BYTE PTR [rax],al
    2366:	38 09                	cmp    BYTE PTR [rcx],cl
    2368:	15 00 00 a1 06       	adc    eax,0x6a10000
    236d:	00 00                	add    BYTE PTR [rax],al
    236f:	90                   	nop
    2370:	14 00                	adc    al,0x0
    2372:	00 00                	add    BYTE PTR [rax],al
    2374:	00 00                	add    BYTE PTR [rax],al
    2376:	00 a9 00 00 00 00    	add    BYTE PTR [rcx+0x0],ch
    237c:	00 00                	add    BYTE PTR [rax],al
    237e:	00 01                	add    BYTE PTR [rcx],al
    2380:	9c                   	pushf
    2381:	e3 1a                	jrcxz  239d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xd>
    2383:	00 00                	add    BYTE PTR [rax],al
    2385:	04 1e                	add    al,0x1e
    2387:	15 00 00 fd 06       	adc    eax,0x6fd0000
    238c:	00 00                	add    BYTE PTR [rax],al
    238e:	f5                   	cmc
    238f:	06                   	(bad)
    2390:	00 00                	add    BYTE PTR [rax],al
    2392:	04 2a                	add    al,0x2a
    2394:	15 00 00 25 07       	adc    eax,0x7250000
    2399:	00 00                	add    BYTE PTR [rax],al
    239b:	1f                   	(bad)
    239c:	07                   	(bad)
    239d:	00 00                	add    BYTE PTR [rax],al
    239f:	12 36                	adc    dh,BYTE PTR [rsi]
    23a1:	15 00 00 46 07       	adc    eax,0x7460000
    23a6:	00 00                	add    BYTE PTR [rax],al
    23a8:	3e 07                	ds (bad)
    23aa:	00 00                	add    BYTE PTR [rax],al
    23ac:	39 41 15             	cmp    DWORD PTR [rcx+0x15],eax
    23af:	00 00                	add    BYTE PTR [rax],al
    23b1:	dd 14 00             	fst    QWORD PTR [rax+rax*1]
    23b4:	00 00                	add    BYTE PTR [rax],al
    23b6:	00 00                	add    BYTE PTR [rax],al
    23b8:	00 37                	add    BYTE PTR [rdi],dh
    23ba:	00 00                	add    BYTE PTR [rax],al
    23bc:	00 00                	add    BYTE PTR [rax],al
    23be:	00 00                	add    BYTE PTR [rax],al
    23c0:	00 b8 1a 00 00 12    	add    BYTE PTR [rax+0x1200001a],bh
    23c6:	42 15 00 00 69 07    	rex.X adc eax,0x7690000
    23cc:	00 00                	add    BYTE PTR [rax],al
    23ce:	67 07                	addr32 (bad)
    23d0:	00 00                	add    BYTE PTR [rax],al
    23d2:	00 1c d9             	add    BYTE PTR [rcx+rbx*8],bl
    23d5:	14 00                	adc    al,0x0
    23d7:	00 00                	add    BYTE PTR [rax],al
    23d9:	00 00                	add    BYTE PTR [rax],al
    23db:	00 ce                	add    dh,cl
    23dd:	0a 00                	or     al,BYTE PTR [rax]
    23df:	00 d5                	add    ch,dl
    23e1:	1a 00                	sbb    al,BYTE PTR [rax]
    23e3:	00 03                	add    BYTE PTR [rbx],al
    23e5:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    23e8:	7e 00                	jle    23ea <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x5a>
    23ea:	03 01                	add    eax,DWORD PTR [rcx]
    23ec:	54                   	push   rsp
    23ed:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    23f0:	11 39                	adc    DWORD PTR [rcx],edi
    23f2:	15 00 00 00 00       	adc    eax,0x0
    23f7:	00 00                	add    BYTE PTR [rax],al
    23f9:	aa                   	stos   BYTE PTR es:[rdi],al
    23fa:	1b 00                	sbb    eax,DWORD PTR [rax]
    23fc:	00 00                	add    BYTE PTR [rax],al
    23fe:	38 e9                	cmp    cl,ch
    2400:	0d 00 00 1f 03       	or     eax,0x31f0000
    2405:	00 00                	add    BYTE PTR [rax],al
    2407:	f0 17                	lock (bad)
    2409:	00 00                	add    BYTE PTR [rax],al
    240b:	00 00                	add    BYTE PTR [rax],al
    240d:	00 00                	add    BYTE PTR [rax],al
    240f:	68 00 00 00 00       	push   0x0
    2414:	00 00                	add    BYTE PTR [rax],al
    2416:	00 01                	add    BYTE PTR [rcx],al
    2418:	9c                   	pushf
    2419:	aa                   	stos   BYTE PTR es:[rdi],al
    241a:	1b 00                	sbb    eax,DWORD PTR [rax]
    241c:	00 04 fa             	add    BYTE PTR [rdx+rdi*8],al
    241f:	0d 00 00 7c 07       	or     eax,0x77c0000
    2424:	00 00                	add    BYTE PTR [rax],al
    2426:	72 07                	jb     242f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x9f>
    2428:	00 00                	add    BYTE PTR [rax],al
    242a:	39 0f                	cmp    DWORD PTR [rdi],ecx
    242c:	0e                   	(bad)
    242d:	00 00                	add    BYTE PTR [rax],al
    242f:	ff 17                	call   QWORD PTR [rdi]
    2431:	00 00                	add    BYTE PTR [rax],al
    2433:	00 00                	add    BYTE PTR [rax],al
    2435:	00 00                	add    BYTE PTR [rax],al
    2437:	2b 00                	sub    eax,DWORD PTR [rax]
    2439:	00 00                	add    BYTE PTR [rax],al
    243b:	00 00                	add    BYTE PTR [rax],al
    243d:	00 00                	add    BYTE PTR [rax],al
    243f:	36 1b 00             	ss sbb eax,DWORD PTR [rax]
    2442:	00 12                	add    BYTE PTR [rdx],dl
    2444:	10 0e                	adc    BYTE PTR [rsi],cl
    2446:	00 00                	add    BYTE PTR [rax],al
    2448:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2449:	07                   	(bad)
    244a:	00 00                	add    BYTE PTR [rax],al
    244c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    244d:	07                   	(bad)
    244e:	00 00                	add    BYTE PTR [rax],al
    2450:	00 32                	add    BYTE PTR [rdx],dh
    2452:	e9 0d 00 00 39       	jmp    39002464 <_end+0x38ffc44c>
    2457:	18 00                	sbb    BYTE PTR [rax],al
    2459:	00 00                	add    BYTE PTR [rax],al
    245b:	00 00                	add    BYTE PTR [rax],al
    245d:	00 00                	add    BYTE PTR [rax],al
    245f:	39 18                	cmp    DWORD PTR [rax],ebx
    2461:	00 00                	add    BYTE PTR [rax],al
    2463:	00 00                	add    BYTE PTR [rax],al
    2465:	00 00                	add    BYTE PTR [rax],al
    2467:	1f                   	(bad)
    2468:	00 00                	add    BYTE PTR [rax],al
    246a:	00 00                	add    BYTE PTR [rax],al
    246c:	00 00                	add    BYTE PTR [rax],al
    246e:	00 ad 06 9c 1b 00    	add    BYTE PTR [rbp+0x1b9c06],ch
    2474:	00 58 fa             	add    BYTE PTR [rax-0x6],bl
    2477:	0d 00 00 00 0b       	or     eax,0xb000000
    247c:	58                   	pop    rax
    247d:	18 00                	sbb    BYTE PTR [rax],al
    247f:	00 00                	add    BYTE PTR [rax],al
    2481:	00 00                	add    BYTE PTR [rax],al
    2483:	00 15 0b 00 00 03    	add    BYTE PTR [rip+0x300000b],dl        # 3002494 <_end+0x2ffc47c>
    2489:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    248c:	03 22                	add    esp,DWORD PTR [rdx]
    248e:	40 00 00             	rex add BYTE PTR [rax],al
    2491:	00 00                	add    BYTE PTR [rax],al
    2493:	00 00                	add    BYTE PTR [rax],al
    2495:	03 01                	add    eax,DWORD PTR [rcx]
    2497:	54                   	push   rsp
    2498:	09 03                	or     DWORD PTR [rbx],eax
    249a:	68 42 00 00 00       	push   0x42
    249f:	00 00                	add    BYTE PTR [rax],al
    24a1:	00 03                	add    BYTE PTR [rbx],al
    24a3:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    24a6:	08 ae 03 01 52 09    	or     BYTE PTR [rsi+0x9520103],ch
    24ac:	03 48 40             	add    ecx,DWORD PTR [rax+0x40]
	...
    24b7:	59                   	pop    rcx
    24b8:	39 18                	cmp    DWORD PTR [rax],ebx
    24ba:	00 00                	add    BYTE PTR [rax],al
    24bc:	00 00                	add    BYTE PTR [rax],al
    24be:	00 00                	add    BYTE PTR [rax],al
    24c0:	e9 0a 00 00 00       	jmp    24cf <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x13f>
    24c5:	22 2e                	and    ch,BYTE PTR [rsi]
    24c7:	07                   	(bad)
    24c8:	00 00                	add    BYTE PTR [rax],al
    24ca:	2e 07                	cs (bad)
    24cc:	00 00                	add    BYTE PTR [rax],al
    24ce:	22 b5 05 00 00 ab    	and    dh,BYTE PTR [rbp-0x54fffffb]
    24d4:	05 00 00 22 39       	add    eax,0x39220000
    24d9:	05 00 00 2f 05       	add    eax,0x52f0000
    24de:	00 00                	add    BYTE PTR [rax],al
    24e0:	22 1c 05 00 00 12 05 	and    bl,BYTE PTR [rax*1+0x5120000]
    24e7:	00 00                	add    BYTE PTR [rax],al
    24e9:	00 1c 0f             	add    BYTE PTR [rdi+rcx*1],bl
    24ec:	00 00                	add    BYTE PTR [rax],al
    24ee:	05 00 01 08 2a       	add    eax,0x2a080100
    24f3:	08 00                	or     BYTE PTR [rax],al
    24f5:	00 22                	add    BYTE PTR [rdx],ah
    24f7:	33 00                	xor    eax,DWORD PTR [rax]
    24f9:	00 00                	add    BYTE PTR [rax],al
    24fb:	21 04 02             	and    DWORD PTR [rdx+rax*1],eax
    24fe:	00 00                	add    BYTE PTR [rax],al
    2500:	00 00                	add    BYTE PTR [rax],al
    2502:	00 00                	add    BYTE PTR [rax],al
    2504:	b0 1a                	mov    al,0x1a
    2506:	00 00                	add    BYTE PTR [rax],al
    2508:	00 00                	add    BYTE PTR [rax],al
    250a:	00 00                	add    BYTE PTR [rax],al
    250c:	b5 03                	mov    ch,0x3
    250e:	00 00                	add    BYTE PTR [rax],al
    2510:	00 00                	add    BYTE PTR [rax],al
    2512:	00 00                	add    BYTE PTR [rax],al
    2514:	18 09                	sbb    BYTE PTR [rcx],cl
    2516:	00 00                	add    BYTE PTR [rax],al
    2518:	04 01                	add    al,0x1
    251a:	08 24 02             	or     BYTE PTR [rdx+rax*1],ah
    251d:	00 00                	add    BYTE PTR [rax],al
    251f:	04 02                	add    al,0x2
    2521:	07                   	(bad)
    2522:	73 02                	jae    2526 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x196>
    2524:	00 00                	add    BYTE PTR [rax],al
    2526:	04 04                	add    al,0x4
    2528:	07                   	(bad)
    2529:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    252a:	01 00                	add    DWORD PTR [rax],eax
    252c:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    252f:	07                   	(bad)
    2530:	a0 01 00 00 04 01 06 	movabs al,ds:0x226060104000001
    2537:	26 02 
    2539:	00 00                	add    BYTE PTR [rax],al
    253b:	04 02                	add    al,0x2
    253d:	05 05 01 00 00       	add    eax,0x105
    2542:	23 04 05 69 6e 74 00 	and    eax,DWORD PTR [rax*1+0x746e69]
    2549:	17                   	(bad)
    254a:	58                   	pop    rax
    254b:	00 00                	add    BYTE PTR [rax],al
    254d:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 26a6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x316>
    2553:	04 2a                	add    al,0x2a
    2555:	16                   	(bad)
    2556:	3c 00                	cmp    al,0x0
    2558:	00 00                	add    BYTE PTR [rax],al
    255a:	04 08                	add    al,0x8
    255c:	05 92 01 00 00       	add    eax,0x192
    2561:	05 d3 05 00 00       	add    eax,0x5d3
    2566:	04 2d                	add    al,0x2d
    2568:	1b 43 00             	sbb    eax,DWORD PTR [rbx+0x0]
    256b:	00 00                	add    BYTE PTR [rax],al
    256d:	24 08                	and    al,0x8
    256f:	07                   	(bad)
    2570:	8a 00                	mov    al,BYTE PTR [rax]
    2572:	00 00                	add    BYTE PTR [rax],al
    2574:	04 01                	add    al,0x1
    2576:	06                   	(bad)
    2577:	2d 02 00 00 17       	sub    eax,0x17000002
    257c:	8a 00                	mov    al,BYTE PTR [rax]
    257e:	00 00                	add    BYTE PTR [rax],al
    2580:	05 55 01 00 00       	add    eax,0x155
    2585:	05 1a 14 64 00       	add    eax,0x64141a
    258a:	00 00                	add    BYTE PTR [rax],al
    258c:	05 d5 05 00 00       	add    eax,0x5d5
    2591:	05 1b 14 77 00       	add    eax,0x77141b
    2596:	00 00                	add    BYTE PTR [rax],al
    2598:	05 2f 0b 00 00       	add    eax,0xb2f
    259d:	06                   	(bad)
    259e:	d6                   	(bad)
    259f:	17                   	(bad)
    25a0:	43 00 00             	rex.XB add BYTE PTR [r8],al
    25a3:	00 07                	add    BYTE PTR [rdi],al
    25a5:	91                   	xchg   ecx,eax
    25a6:	00 00                	add    BYTE PTR [rax],al
    25a8:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    25ab:	05 8d 01 00 00       	add    eax,0x18d
    25b0:	04 10                	add    al,0x10
    25b2:	04 18                	add    al,0x18
    25b4:	02 00                	add    al,BYTE PTR [rax]
    25b6:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    25b9:	07                   	(bad)
    25ba:	9b                   	fwait
    25bb:	01 00                	add    DWORD PTR [rax],eax
    25bd:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    25c0:	04 80                	add    al,0x80
    25c2:	01 00                	add    DWORD PTR [rax],eax
    25c4:	00 18                	add    BYTE PTR [rax],bl
    25c6:	08 3c e3             	or     BYTE PTR [rbx+riz*8],bh
    25c9:	02 00                	add    al,BYTE PTR [rax]
    25cb:	00 00                	add    BYTE PTR [rax],al
    25cd:	01 00                	add    DWORD PTR [rax],eax
    25cf:	00 0a                	add    BYTE PTR [rdx],cl
    25d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25d2:	02 00                	add    al,BYTE PTR [rax]
    25d4:	00 07                	add    BYTE PTR [rdi],al
    25d6:	3d 09 58 00 00       	cmp    eax,0x5809
    25db:	00 00                	add    BYTE PTR [rax],al
    25dd:	19 72 65             	sbb    DWORD PTR [rdx+0x65],esi
    25e0:	6d                   	ins    DWORD PTR es:[rdi],dx
    25e1:	00 3e                	add    BYTE PTR [rsi],bh
    25e3:	09 58 00             	or     DWORD PTR [rax+0x0],ebx
    25e6:	00 00                	add    BYTE PTR [rax],al
    25e8:	04 00                	add    al,0x0
    25ea:	05 e4 02 00 00       	add    eax,0x2e4
    25ef:	07                   	(bad)
    25f0:	3f                   	(bad)
    25f1:	05 db 00 00 00       	add    eax,0xdb
    25f6:	18 10                	sbb    BYTE PTR [rax],dl
    25f8:	44 09 00             	or     DWORD PTR [rax],r8d
    25fb:	00 00                	add    BYTE PTR [rax],al
    25fd:	31 01                	xor    DWORD PTR [rcx],eax
    25ff:	00 00                	add    BYTE PTR [rax],al
    2601:	0a 6e 02             	or     ch,BYTE PTR [rsi+0x2]
    2604:	00 00                	add    BYTE PTR [rax],al
    2606:	07                   	(bad)
    2607:	45 0e                	rex.RB (bad)
    2609:	70 00                	jo     260b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x27b>
    260b:	00 00                	add    BYTE PTR [rax],al
    260d:	00 19                	add    BYTE PTR [rcx],bl
    260f:	72 65                	jb     2676 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2e6>
    2611:	6d                   	ins    DWORD PTR es:[rdi],dx
    2612:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    2615:	70 00                	jo     2617 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x287>
    2617:	00 00                	add    BYTE PTR [rax],al
    2619:	08 00                	or     BYTE PTR [rax],al
    261b:	05 0a 00 00 00       	add    eax,0xa
    2620:	07                   	(bad)
    2621:	47 05 0c 01 00 00    	rex.RXB add eax,0x10c
    2627:	18 10                	sbb    BYTE PTR [rax],dl
    2629:	4e d4                	rex.WRX (bad)
    262b:	01 00                	add    DWORD PTR [rax],eax
    262d:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
    2630:	00 00                	add    BYTE PTR [rax],al
    2632:	0a 6e 02             	or     ch,BYTE PTR [rsi+0x2]
    2635:	00 00                	add    BYTE PTR [rax],al
    2637:	07                   	(bad)
    2638:	4f 13 bf 00 00 00 00 	rex.WRXB adc r15,QWORD PTR [r15+0x0]
    263f:	19 72 65             	sbb    DWORD PTR [rdx+0x65],esi
    2642:	6d                   	ins    DWORD PTR es:[rdi],dx
    2643:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    2646:	bf 00 00 00 08       	mov    edi,0x8000000
    264b:	00 05 d5 01 00 00    	add    BYTE PTR [rip+0x1d5],al        # 2826 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x26>
    2651:	07                   	(bad)
    2652:	51                   	push   rcx
    2653:	05 3d 01 00 00       	add    eax,0x13d
    2658:	25 d5 02 00 00       	and    eax,0x2d5
    265d:	07                   	(bad)
    265e:	b4 03                	mov    ah,0x3
    2660:	0f 7b                	(bad)
    2662:	01 00                	add    DWORD PTR [rax],eax
    2664:	00 07                	add    BYTE PTR [rdi],al
    2666:	80 01 00             	add    BYTE PTR [rcx],0x0
    2669:	00 26                	add    BYTE PTR [rsi],ah
    266b:	58                   	pop    rax
    266c:	00 00                	add    BYTE PTR [rax],al
    266e:	00 94 01 00 00 02 94 	add    BYTE PTR [rcx+rax*1-0x6bfe0000],dl
    2675:	01 00                	add    DWORD PTR [rax],eax
    2677:	00 02                	add    BYTE PTR [rdx],al
    2679:	94                   	xchg   esp,eax
    267a:	01 00                	add    DWORD PTR [rax],eax
    267c:	00 00                	add    BYTE PTR [rax],al
    267e:	07                   	(bad)
    267f:	99                   	cdq
    2680:	01 00                	add    DWORD PTR [rax],eax
    2682:	00 27                	add    BYTE PTR [rdi],ah
    2684:	28 73 74             	sub    BYTE PTR [rbx+0x74],dh
    2687:	64 00 10             	add    BYTE PTR fs:[rax],dl
    268a:	32 01                	xor    al,BYTE PTR [rcx]
    268c:	0b 6a 03             	or     ebp,DWORD PTR [rdx+0x3]
    268f:	00 00                	add    BYTE PTR [rax],al
    2691:	01 08                	add    DWORD PTR [rax],ecx
    2693:	83 0b 00             	or     DWORD PTR [rbx],0x0
    2696:	01 00                	add    DWORD PTR [rax],eax
    2698:	00 01                	add    BYTE PTR [rcx],al
    269a:	08 84 0b 31 01 00 00 	or     BYTE PTR [rbx+rcx*1+0x131],al
    26a1:	01 08                	add    DWORD PTR [rax],ecx
    26a3:	8a 0b                	mov    cl,BYTE PTR [rbx]
    26a5:	6a 03                	push   0x3
    26a7:	00 00                	add    BYTE PTR [rax],al
    26a9:	01 08                	add    DWORD PTR [rax],ecx
    26ab:	8d 0b                	lea    ecx,[rbx]
    26ad:	86 03                	xchg   BYTE PTR [rbx],al
    26af:	00 00                	add    BYTE PTR [rax],al
    26b1:	01 08                	add    DWORD PTR [rax],ecx
    26b3:	90                   	nop
    26b4:	0b a1 03 00 00 01    	or     esp,DWORD PTR [rcx+0x1000003]
    26ba:	08 91 0b be 03 00    	or     BYTE PTR [rcx+0x3be0b],dl
    26c0:	00 01                	add    BYTE PTR [rcx],al
    26c2:	08 92 0b d4 03 00    	or     BYTE PTR [rdx+0x3d40b],dl
    26c8:	00 01                	add    BYTE PTR [rcx],al
    26ca:	08 93 0b ea 03 00    	or     BYTE PTR [rbx+0x3ea0b],dl
    26d0:	00 01                	add    BYTE PTR [rcx],al
    26d2:	08 95 0b 14 04 00    	or     BYTE PTR [rbp+0x4140b],dl
    26d8:	00 01                	add    BYTE PTR [rcx],al
    26da:	08 98 0b 30 04 00    	or     BYTE PTR [rax+0x4300b],bl
    26e0:	00 01                	add    BYTE PTR [rcx],al
    26e2:	08 9a 0b 46 04 00    	or     BYTE PTR [rdx+0x4460b],bl
    26e8:	00 01                	add    BYTE PTR [rcx],al
    26ea:	08 9d 0b 61 04 00    	or     BYTE PTR [rbp+0x4610b],bl
    26f0:	00 01                	add    BYTE PTR [rcx],al
    26f2:	08 9e 0b 7c 04 00    	or     BYTE PTR [rsi+0x47c0b],bl
    26f8:	00 01                	add    BYTE PTR [rcx],al
    26fa:	08 9f 0b ad 04 00    	or     BYTE PTR [rdi+0x4ad0b],bl
    2700:	00 01                	add    BYTE PTR [rcx],al
    2702:	08 a1 0b cd 04 00    	or     BYTE PTR [rcx+0x4cd0b],ah
    2708:	00 01                	add    BYTE PTR [rcx],al
    270a:	08 a4 0b ed 04 00 00 	or     BYTE PTR [rbx+rcx*1+0x4ed],ah
    2711:	01 08                	add    DWORD PTR [rax],ecx
    2713:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2714:	0b 00                	or     eax,DWORD PTR [rax]
    2716:	05 00 00 01 08       	add    eax,0x8010000
    271b:	a9 0b 0d 05 00       	test   eax,0x50d0b
    2720:	00 01                	add    BYTE PTR [rcx],al
    2722:	08 aa 0b 1e 05 00    	or     BYTE PTR [rdx+0x51e0b],ch
    2728:	00 01                	add    BYTE PTR [rcx],al
    272a:	08 ab 0b 3e 05 00    	or     BYTE PTR [rbx+0x53e0b],ch
    2730:	00 01                	add    BYTE PTR [rcx],al
    2732:	08 ac 0b 61 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x561],ch
    2739:	01 08                	add    DWORD PTR [rax],ecx
    273b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    273c:	0b 84 05 00 00 01 08 	or     eax,DWORD PTR [rbp+rax*1+0x8010000]
    2743:	af                   	scas   eax,DWORD PTR es:[rdi]
    2744:	0b 9a 05 00 00 01    	or     ebx,DWORD PTR [rdx+0x1000005]
    274a:	08 b0 0b bf 05 00    	or     BYTE PTR [rax+0x5bf0b],dh
    2750:	00 01                	add    BYTE PTR [rcx],al
    2752:	08 f4                	or     ah,dh
    2754:	16                   	(bad)
    2755:	62 01 00 00 01       	(bad)
    275a:	08 f9                	or     cl,bh
    275c:	16                   	(bad)
    275d:	1f                   	(bad)
    275e:	06                   	(bad)
    275f:	00 00                	add    BYTE PTR [rax],al
    2761:	01 08                	add    DWORD PTR [rax],ecx
    2763:	fa                   	cli
    2764:	16                   	(bad)
    2765:	39 06                	cmp    DWORD PTR [rsi],eax
    2767:	00 00                	add    BYTE PTR [rax],al
    2769:	01 08                	add    DWORD PTR [rax],ecx
    276b:	fc                   	cld
    276c:	16                   	(bad)
    276d:	54                   	push   rsp
    276e:	06                   	(bad)
    276f:	00 00                	add    BYTE PTR [rax],al
    2771:	01 08                	add    DWORD PTR [rax],ecx
    2773:	fd                   	std
    2774:	16                   	(bad)
    2775:	b0 06                	mov    al,0x6
    2777:	00 00                	add    BYTE PTR [rax],al
    2779:	01 08                	add    DWORD PTR [rax],ecx
    277b:	fe                   	(bad)
    277c:	16                   	(bad)
    277d:	6a 06                	push   0x6
    277f:	00 00                	add    BYTE PTR [rax],al
    2781:	01 08                	add    DWORD PTR [rax],ecx
    2783:	ff 16                	call   QWORD PTR [rsi]
    2785:	8d 06                	lea    eax,[rsi]
    2787:	00 00                	add    BYTE PTR [rax],al
    2789:	29 08                	sub    DWORD PTR [rax],ecx
    278b:	00 01                	add    BYTE PTR [rcx],al
    278d:	16                   	(bad)
    278e:	cb                   	retf
    278f:	06                   	(bad)
    2790:	00 00                	add    BYTE PTR [rax],al
    2792:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    2795:	73 00                	jae    2797 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x407>
    2797:	89 15 03 00 00 0e    	mov    DWORD PTR [rip+0xe000003],edx        # e0027a0 <_end+0xdffc788>
    279d:	07                   	(bad)
    279e:	00 00                	add    BYTE PTR [rax],al
    27a0:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    27a3:	00 02                	add    BYTE PTR [rdx],al
    27a5:	0e                   	(bad)
    27a6:	07                   	(bad)
    27a7:	00 00                	add    BYTE PTR [rax],al
    27a9:	00 0b                	add    BYTE PTR [rbx],cl
    27ab:	61                   	(bad)
    27ac:	62 73 00 55 1b       	(bad)
    27b1:	00 00                	add    BYTE PTR [rax],al
    27b3:	00 1d 07 00 00 d8    	add    BYTE PTR [rip+0xffffffffd8000007],bl        # ffffffffd80027c0 <_end+0xffffffffd7ffc7a8>
    27b9:	02 00                	add    al,BYTE PTR [rax]
    27bb:	00 02                	add    BYTE PTR [rdx],al
    27bd:	1d 07 00 00 00       	sbb    eax,0x7
    27c2:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    27c5:	73 00                	jae    27c7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x437>
    27c7:	4f 01 03             	rex.WRXB add QWORD PTR [r11],r8
    27ca:	00 00                	add    BYTE PTR [rax],al
    27cc:	c6 00 00             	mov    BYTE PTR [rax],0x0
    27cf:	00 f0                	add    al,dh
    27d1:	02 00                	add    al,BYTE PTR [rax]
    27d3:	00 02                	add    BYTE PTR [rdx],al
    27d5:	c6 00 00             	mov    BYTE PTR [rax],0x0
    27d8:	00 00                	add    BYTE PTR [rax],al
    27da:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    27dd:	73 00                	jae    27df <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x44f>
    27df:	4b 0b 03             	rex.WXB or rax,QWORD PTR [r11]
    27e2:	00 00                	add    BYTE PTR [rax],al
    27e4:	d4                   	(bad)
    27e5:	00 00                	add    BYTE PTR [rax],al
    27e7:	00 08                	add    BYTE PTR [rax],cl
    27e9:	03 00                	add    eax,DWORD PTR [rax]
    27eb:	00 02                	add    BYTE PTR [rdx],al
    27ed:	d4                   	(bad)
    27ee:	00 00                	add    BYTE PTR [rax],al
    27f0:	00 00                	add    BYTE PTR [rax],al
    27f2:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    27f5:	73 00                	jae    27f7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x467>
    27f7:	47 f7 02 00 00 b7 03 	rex.RXB test DWORD PTR [r10],0x3b70000
    27fe:	00 00                	add    BYTE PTR [rax],al
    2800:	20 03                	and    BYTE PTR [rbx],al
    2802:	00 00                	add    BYTE PTR [rax],al
    2804:	02 b7 03 00 00 00    	add    dh,BYTE PTR [rdi+0x3]
    280a:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    280d:	73 00                	jae    280f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xf>
    280f:	3d eb 00 00 00       	cmp    eax,0xeb
    2814:	bf 00 00 00 38       	mov    edi,0x38000000
    2819:	03 00                	add    eax,DWORD PTR [rax]
    281b:	00 02                	add    BYTE PTR [rdx],al
    281d:	bf 00 00 00 00       	mov    edi,0x0
    2822:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    2825:	73 00                	jae    2827 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x27>
    2827:	38 11                	cmp    BYTE PTR [rcx],dl
    2829:	00 00                	add    BYTE PTR [rax],al
    282b:	00 70 00             	add    BYTE PTR [rax+0x0],dh
    282e:	00 00                	add    BYTE PTR [rax],al
    2830:	50                   	push   rax
    2831:	03 00                	add    eax,DWORD PTR [rax]
    2833:	00 02                	add    BYTE PTR [rdx],al
    2835:	70 00                	jo     2837 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x37>
    2837:	00 00                	add    BYTE PTR [rax],al
    2839:	00 1d 64 69 76 00    	add    BYTE PTR [rip+0x766964],bl        # 7691a3 <_end+0x76318b>
    283f:	b5 1e                	mov    ch,0x1e
    2841:	01 00                	add    DWORD PTR [rax],eax
    2843:	00 31                	add    BYTE PTR [rcx],dh
    2845:	01 00                	add    DWORD PTR [rax],eax
    2847:	00 02                	add    BYTE PTR [rdx],al
    2849:	70 00                	jo     284b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x4b>
    284b:	00 00                	add    BYTE PTR [rax],al
    284d:	02 70 00             	add    dh,BYTE PTR [rax+0x0]
    2850:	00 00                	add    BYTE PTR [rax],al
    2852:	00 00                	add    BYTE PTR [rax],al
    2854:	06                   	(bad)
    2855:	17                   	(bad)
    2856:	01 00                	add    DWORD PTR [rax],eax
    2858:	00 de                	add    dh,bl
    285a:	02 0c 58             	add    cl,BYTE PTR [rax+rbx*2]
    285d:	00 00                	add    BYTE PTR [rax],al
    285f:	00 80 03 00 00 02    	add    BYTE PTR [rax+0x2000003],al
    2865:	80 03 00             	add    BYTE PTR [rbx],0x0
    2868:	00 00                	add    BYTE PTR [rax],al
    286a:	07                   	(bad)
    286b:	85 03                	test   DWORD PTR [rbx],eax
    286d:	00 00                	add    BYTE PTR [rax],al
    286f:	2a 2b                	sub    ch,BYTE PTR [rbx]
    2871:	dd 00                	fld    QWORD PTR [rax]
    2873:	00 00                	add    BYTE PTR [rax],al
    2875:	07                   	(bad)
    2876:	e3 02                	jrcxz  287a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x7a>
    2878:	12 dd                	adc    bl,ch
    287a:	00 00                	add    BYTE PTR [rax],al
    287c:	00 58 00             	add    BYTE PTR [rax+0x0],bl
    287f:	00 00                	add    BYTE PTR [rax],al
    2881:	a1 03 00 00 02 80 03 	movabs eax,ds:0x38002000003
    2888:	00 00 
    288a:	00 08                	add    BYTE PTR [rax],cl
    288c:	f2 01 00             	repnz add DWORD PTR [rax],eax
    288f:	00 0a                	add    BYTE PTR [rdx],cl
    2891:	19 01                	sbb    DWORD PTR [rcx],eax
    2893:	b7 03                	mov    bh,0x3
    2895:	00 00                	add    BYTE PTR [rax],al
    2897:	b7 03                	mov    bh,0x3
    2899:	00 00                	add    BYTE PTR [rax],al
    289b:	02 ba 00 00 00 00    	add    bh,BYTE PTR [rdx+0x0]
    28a1:	04 08                	add    al,0x8
    28a3:	04 1d                	add    al,0x1d
    28a5:	02 00                	add    al,BYTE PTR [rax]
    28a7:	00 06                	add    BYTE PTR [rsi],al
    28a9:	f7 01 00 00 e1 01    	test   DWORD PTR [rcx],0x1e10000
    28af:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    28b2:	00 00                	add    BYTE PTR [rax],al
    28b4:	d4                   	(bad)
    28b5:	03 00                	add    eax,DWORD PTR [rax]
    28b7:	00 02                	add    BYTE PTR [rdx],al
    28b9:	ba 00 00 00 00       	mov    edx,0x0
    28be:	06                   	(bad)
    28bf:	01 02                	add    DWORD PTR [rdx],eax
    28c1:	00 00                	add    BYTE PTR [rax],al
    28c3:	e6 01                	out    0x1,al
    28c5:	01 70 00             	add    DWORD PTR [rax+0x0],esi
    28c8:	00 00                	add    BYTE PTR [rax],al
    28ca:	ea                   	(bad)
    28cb:	03 00                	add    eax,DWORD PTR [rax]
    28cd:	00 02                	add    BYTE PTR [rdx],al
    28cf:	ba 00 00 00 00       	mov    edx,0x0
    28d4:	08 0f                	or     BYTE PTR [rdi],cl
    28d6:	01 00                	add    DWORD PTR [rax],eax
    28d8:	00 0b                	add    BYTE PTR [rbx],cl
    28da:	14 01                	adc    al,0x1
    28dc:	83 00 00             	add    DWORD PTR [rax],0x0
    28df:	00 14 04             	add    BYTE PTR [rsp+rax*1],dl
    28e2:	00 00                	add    BYTE PTR [rax],al
    28e4:	02 94 01 00 00 02 94 	add    dl,BYTE PTR [rcx+rax*1-0x6bfe0000]
    28eb:	01 00                	add    DWORD PTR [rax],eax
    28ed:	00 02                	add    BYTE PTR [rdx],al
    28ef:	ae                   	scas   al,BYTE PTR es:[rdi]
    28f0:	00 00                	add    BYTE PTR [rax],al
    28f2:	00 02                	add    BYTE PTR [rdx],al
    28f4:	ae                   	scas   al,BYTE PTR es:[rdi]
    28f5:	00 00                	add    BYTE PTR [rax],al
    28f7:	00 02                	add    BYTE PTR [rdx],al
    28f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28fa:	01 00                	add    DWORD PTR [rax],eax
    28fc:	00 00                	add    BYTE PTR [rax],al
    28fe:	2c 64                	sub    al,0x64
    2900:	69 76 00 07 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e007
    2907:	00 01                	add    BYTE PTR [rcx],al
    2909:	00 00                	add    BYTE PTR [rax],al
    290b:	30 04 00             	xor    BYTE PTR [rax+rax*1],al
    290e:	00 02                	add    BYTE PTR [rdx],al
    2910:	58                   	pop    rax
    2911:	00 00                	add    BYTE PTR [rax],al
    2913:	00 02                	add    BYTE PTR [rdx],al
    2915:	58                   	pop    rax
    2916:	00 00                	add    BYTE PTR [rax],al
    2918:	00 00                	add    BYTE PTR [rax],al
    291a:	06                   	(bad)
    291b:	6a 01                	push   0x1
    291d:	00 00                	add    BYTE PTR [rax],al
    291f:	05 03 0e 85 00       	add    eax,0x850e03
    2924:	00 00                	add    BYTE PTR [rax],al
    2926:	46 04 00             	rex.RX add al,0x0
    2929:	00 02                	add    BYTE PTR [rdx],al
    292b:	ba 00 00 00 00       	mov    edx,0x0
    2930:	06                   	(bad)
    2931:	c9                   	leave
    2932:	02 00                	add    al,BYTE PTR [rax]
    2934:	00 e2                	add    dl,ah
    2936:	03 0f                	add    ecx,DWORD PTR [rdi]
    2938:	31 01                	xor    DWORD PTR [rcx],eax
    293a:	00 00                	add    BYTE PTR [rax],al
    293c:	61                   	(bad)
    293d:	04 00                	add    al,0x0
    293f:	00 02                	add    BYTE PTR [rdx],al
    2941:	70 00                	jo     2943 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x143>
    2943:	00 00                	add    BYTE PTR [rax],al
    2945:	02 70 00             	add    dh,BYTE PTR [rax+0x0]
    2948:	00 00                	add    BYTE PTR [rax],al
    294a:	00 06                	add    BYTE PTR [rsi],al
    294c:	58                   	pop    rax
    294d:	02 00                	add    al,BYTE PTR [rax]
    294f:	00 26                	add    BYTE PTR [rsi],ah
    2951:	04 0c                	add    al,0xc
    2953:	58                   	pop    rax
    2954:	00 00                	add    BYTE PTR [rax],al
    2956:	00 7c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],bh
    295a:	00 02                	add    BYTE PTR [rdx],al
    295c:	ba 00 00 00 02       	mov    edx,0x2000000
    2961:	ae                   	scas   al,BYTE PTR es:[rdi]
    2962:	00 00                	add    BYTE PTR [rax],al
    2964:	00 00                	add    BYTE PTR [rax],al
    2966:	08 5e 02             	or     BYTE PTR [rsi+0x2],bl
    2969:	00 00                	add    BYTE PTR [rax],al
    296b:	0c 75                	or     al,0x75
    296d:	01 ae 00 00 00 9c    	add    DWORD PTR [rsi-0x64000000],ebp
    2973:	04 00                	add    al,0x0
    2975:	00 02                	add    BYTE PTR [rdx],al
    2977:	9c                   	pushf
    2978:	04 00                	add    al,0x0
    297a:	00 02                	add    BYTE PTR [rdx],al
    297c:	ba 00 00 00 02       	mov    edx,0x2000000
    2981:	ae                   	scas   al,BYTE PTR es:[rdi]
    2982:	00 00                	add    BYTE PTR [rax],al
    2984:	00 00                	add    BYTE PTR [rax],al
    2986:	07                   	(bad)
    2987:	a1 04 00 00 04 04 05 	movabs eax,ds:0x286050404000004
    298e:	86 02 
    2990:	00 00                	add    BYTE PTR [rax],al
    2992:	17                   	(bad)
    2993:	a1 04 00 00 06 86 01 	movabs eax,ds:0x18606000004
    299a:	00 00 
    299c:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    299f:	58                   	pop    rax
    29a0:	00 00                	add    BYTE PTR [rax],al
    29a2:	00 cd                	add    ch,cl
    29a4:	04 00                	add    al,0x0
    29a6:	00 02                	add    BYTE PTR [rdx],al
    29a8:	9c                   	pushf
    29a9:	04 00                	add    al,0x0
    29ab:	00 02                	add    BYTE PTR [rdx],al
    29ad:	ba 00 00 00 02       	mov    edx,0x2000000
    29b2:	ae                   	scas   al,BYTE PTR es:[rdi]
    29b3:	00 00                	add    BYTE PTR [rax],al
    29b5:	00 00                	add    BYTE PTR [rax],al
    29b7:	1e                   	(bad)
    29b8:	25 00 00 00 ca       	and    eax,0xca000000
    29bd:	03 ed                	add    ebp,ebp
    29bf:	04 00                	add    al,0x0
    29c1:	00 02                	add    BYTE PTR [rdx],al
    29c3:	83 00 00             	add    DWORD PTR [rax],0x0
    29c6:	00 02                	add    BYTE PTR [rdx],al
    29c8:	ae                   	scas   al,BYTE PTR es:[rdi]
    29c9:	00 00                	add    BYTE PTR [rax],al
    29cb:	00 02                	add    BYTE PTR [rdx],al
    29cd:	ae                   	scas   al,BYTE PTR es:[rdi]
    29ce:	00 00                	add    BYTE PTR [rax],al
    29d0:	00 02                	add    BYTE PTR [rdx],al
    29d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29d3:	01 00                	add    DWORD PTR [rax],eax
    29d5:	00 00                	add    BYTE PTR [rax],al
    29d7:	2d e0 00 00 00       	sub    eax,0xe0
    29dc:	07                   	(bad)
    29dd:	fa                   	cli
    29de:	02 0d 00 05 00 00    	add    cl,BYTE PTR [rip+0x500]        # 2ee4 <_Z7testAllPKcjS0_j+0x1b4>
    29e4:	02 58 00             	add    bl,BYTE PTR [rax+0x0]
    29e7:	00 00                	add    BYTE PTR [rax],al
    29e9:	00 2e                	add    BYTE PTR [rsi],ch
    29eb:	f2 02 00             	repnz add al,BYTE PTR [rax]
    29ee:	00 07                	add    BYTE PTR [rdi],al
    29f0:	3d 02 0c 58 00       	cmp    eax,0x580c02
    29f5:	00 00                	add    BYTE PTR [rax],al
    29f7:	1e                   	(bad)
    29f8:	f1                   	int1
    29f9:	02 00                	add    al,BYTE PTR [rax]
    29fb:	00 3f                	add    BYTE PTR [rdi],bh
    29fd:	02 1e                	add    bl,BYTE PTR [rsi]
    29ff:	05 00 00 02 3c       	add    eax,0x3c020000
    2a04:	00 00                	add    BYTE PTR [rax],al
    2a06:	00 00                	add    BYTE PTR [rax],al
    2a08:	08 c5                	or     ch,al
    2a0a:	01 00                	add    DWORD PTR [rax],eax
    2a0c:	00 07                	add    BYTE PTR [rdi],al
    2a0e:	76 0f                	jbe    2a1f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x21f>
    2a10:	b7 03                	mov    bh,0x3
    2a12:	00 00                	add    BYTE PTR [rax],al
    2a14:	39 05 00 00 02 ba    	cmp    DWORD PTR [rip+0xffffffffba020000],eax        # ffffffffba022a1a <_end+0xffffffffba01ca02>
    2a1a:	00 00                	add    BYTE PTR [rax],al
    2a1c:	00 02                	add    BYTE PTR [rdx],al
    2a1e:	39 05 00 00 00 07    	cmp    DWORD PTR [rip+0x7000000],eax        # 7002a24 <_end+0x6ffca0c>
    2a24:	85 00                	test   DWORD PTR [rax],eax
    2a26:	00 00                	add    BYTE PTR [rax],al
    2a28:	0f fe 00             	paddd  mm0,QWORD PTR [rax]
    2a2b:	00 00                	add    BYTE PTR [rax],al
    2a2d:	d7                   	xlat   BYTE PTR ds:[rbx]
    2a2e:	11 f5                	adc    ebp,esi
    2a30:	00 00                	add    BYTE PTR [rax],al
    2a32:	00 70 00             	add    BYTE PTR [rax+0x0],dh
    2a35:	00 00                	add    BYTE PTR [rax],al
    2a37:	61                   	(bad)
    2a38:	05 00 00 02 ba       	add    eax,0xba020000
    2a3d:	00 00                	add    BYTE PTR [rax],al
    2a3f:	00 02                	add    BYTE PTR [rdx],al
    2a41:	39 05 00 00 02 58    	cmp    DWORD PTR [rip+0x58020000],eax        # 58022a47 <_end+0x5801ca2f>
    2a47:	00 00                	add    BYTE PTR [rax],al
    2a49:	00 00                	add    BYTE PTR [rax],al
    2a4b:	0f 4a 02             	cmovp  eax,DWORD PTR [rdx]
    2a4e:	00 00                	add    BYTE PTR [rax],al
    2a50:	db 1a                	fistp  DWORD PTR [rdx]
    2a52:	41 02 00             	add    al,BYTE PTR [r8]
    2a55:	00 43 00             	add    BYTE PTR [rbx+0x0],al
    2a58:	00 00                	add    BYTE PTR [rax],al
    2a5a:	84 05 00 00 02 ba    	test   BYTE PTR [rip+0xffffffffba020000],al        # ffffffffba022a60 <_end+0xffffffffba01ca48>
    2a60:	00 00                	add    BYTE PTR [rax],al
    2a62:	00 02                	add    BYTE PTR [rdx],al
    2a64:	39 05 00 00 02 58    	cmp    DWORD PTR [rip+0x58020000],eax        # 58022a6a <_end+0x5801ca52>
    2a6a:	00 00                	add    BYTE PTR [rax],al
    2a6c:	00 00                	add    BYTE PTR [rax],al
    2a6e:	06                   	(bad)
    2a6f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a70:	26 00 00             	es add BYTE PTR [rax],al
    2a73:	9b                   	fwait
    2a74:	03 0c 58             	add    ecx,DWORD PTR [rax+rbx*2]
    2a77:	00 00                	add    BYTE PTR [rax],al
    2a79:	00 9a 05 00 00 02    	add    BYTE PTR [rdx+0x2000005],bl
    2a7f:	ba 00 00 00 00       	mov    edx,0x0
    2a84:	08 06                	or     BYTE PTR [rsi],al
    2a86:	02 00                	add    al,BYTE PTR [rax]
    2a88:	00 0c 8f             	add    BYTE PTR [rdi+rcx*4],cl
    2a8b:	01 ae 00 00 00 ba    	add    DWORD PTR [rsi-0x46000000],ebp
    2a91:	05 00 00 02 85       	add    eax,0x85020000
    2a96:	00 00                	add    BYTE PTR [rax],al
    2a98:	00 02                	add    BYTE PTR [rdx],al
    2a9a:	ba 05 00 00 02       	mov    edx,0x2000005
    2a9f:	ae                   	scas   al,BYTE PTR es:[rdi]
    2aa0:	00 00                	add    BYTE PTR [rax],al
    2aa2:	00 00                	add    BYTE PTR [rax],al
    2aa4:	07                   	(bad)
    2aa5:	a8 04                	test   al,0x4
    2aa7:	00 00                	add    BYTE PTR [rax],al
    2aa9:	08 67 02             	or     BYTE PTR [rdi+0x2],ah
    2aac:	00 00                	add    BYTE PTR [rax],al
    2aae:	0c 4f                	or     al,0x4f
    2ab0:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    2ab3:	00 00                	add    BYTE PTR [rax],al
    2ab5:	da 05 00 00 02 85    	fiadd  DWORD PTR [rip+0xffffffff85020000]        # ffffffff85022abb <_end+0xffffffff8501caa3>
    2abb:	00 00                	add    BYTE PTR [rax],al
    2abd:	00 02                	add    BYTE PTR [rdx],al
    2abf:	a1 04 00 00 00 2f 37 	movabs eax,ds:0x2372f00000004
    2ac6:	02 00 
    2ac8:	00 10                	add    BYTE PTR [rax],dl
    2aca:	57                   	push   rdi
    2acb:	01 0b                	add    DWORD PTR [rbx],ecx
    2acd:	39 06                	cmp    DWORD PTR [rsi],eax
    2acf:	00 00                	add    BYTE PTR [rax],al
    2ad1:	01 08                	add    DWORD PTR [rax],ecx
    2ad3:	cc                   	int3
    2ad4:	0b 62 01             	or     esp,DWORD PTR [rdx+0x1]
    2ad7:	00 00                	add    BYTE PTR [rax],al
    2ad9:	01 08                	add    DWORD PTR [rax],ecx
    2adb:	dc 0b                	fmul   QWORD PTR [rbx]
    2add:	39 06                	cmp    DWORD PTR [rsi],eax
    2adf:	00 00                	add    BYTE PTR [rax],al
    2ae1:	01 08                	add    DWORD PTR [rax],ecx
    2ae3:	e7 0b                	out    0xb,eax
    2ae5:	54                   	push   rsp
    2ae6:	06                   	(bad)
    2ae7:	00 00                	add    BYTE PTR [rax],al
    2ae9:	01 08                	add    DWORD PTR [rax],ecx
    2aeb:	e8 0b 6a 06 00       	call   694fb <_end+0x634e3>
    2af0:	00 01                	add    BYTE PTR [rcx],al
    2af2:	08 e9                	or     cl,ch
    2af4:	0b 8d 06 00 00 01    	or     ecx,DWORD PTR [rbp+0x1000006]
    2afa:	08 eb                	or     bl,ch
    2afc:	0b b0 06 00 00 01    	or     esi,DWORD PTR [rax+0x1000006]
    2b02:	08 ec                	or     ah,ch
    2b04:	0b cb                	or     ecx,ebx
    2b06:	06                   	(bad)
    2b07:	00 00                	add    BYTE PTR [rax],al
    2b09:	1d 64 69 76 00       	sbb    eax,0x766964
    2b0e:	d9 dd                	(bad)
    2b10:	01 00                	add    DWORD PTR [rax],eax
    2b12:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
    2b15:	00 00                	add    BYTE PTR [rax],al
    2b17:	02 bf 00 00 00 02    	add    bh,BYTE PTR [rdi+0x2000000]
    2b1d:	bf 00 00 00 00       	mov    edi,0x0
    2b22:	00 06                	add    BYTE PTR [rsi],al
    2b24:	c8 02 00 00          	enter  0x2,0x0
    2b28:	e6 03                	out    0x3,al
    2b2a:	1e                   	(bad)
    2b2b:	62 01 00 00 54 06    	vandps xmm24,xmm31,XMMWORD PTR [r14]
    2b31:	00 00                	add    BYTE PTR [rax],al
    2b33:	02 bf 00 00 00 02    	add    bh,BYTE PTR [rdi+0x2000000]
    2b39:	bf 00 00 00 00       	mov    edi,0x0
    2b3e:	06                   	(bad)
    2b3f:	52                   	push   rdx
    2b40:	02 00                	add    al,BYTE PTR [rax]
    2b42:	00 ed                	add    ch,ch
    2b44:	01 01                	add    DWORD PTR [rcx],eax
    2b46:	bf 00 00 00 6a       	mov    edi,0x6a000000
    2b4b:	06                   	(bad)
    2b4c:	00 00                	add    BYTE PTR [rax],al
    2b4e:	02 ba 00 00 00 00    	add    bh,BYTE PTR [rdx+0x0]
    2b54:	0f 32                	rdmsr
    2b56:	01 00                	add    DWORD PTR [rax],eax
    2b58:	00 ee                	add    dh,ch
    2b5a:	16                   	(bad)
    2b5b:	29 01                	sub    DWORD PTR [rcx],eax
    2b5d:	00 00                	add    BYTE PTR [rax],al
    2b5f:	bf 00 00 00 8d       	mov    edi,0x8d000000
    2b64:	06                   	(bad)
    2b65:	00 00                	add    BYTE PTR [rax],al
    2b67:	02 ba 00 00 00 02    	add    bh,BYTE PTR [rdx+0x2000000]
    2b6d:	39 05 00 00 02 58    	cmp    DWORD PTR [rip+0x58020000],eax        # 58022b73 <_end+0x5801cb5b>
    2b73:	00 00                	add    BYTE PTR [rax],al
    2b75:	00 00                	add    BYTE PTR [rax],al
    2b77:	0f bf 02             	movsx  eax,WORD PTR [rdx]
    2b7a:	00 00                	add    BYTE PTR [rax],al
    2b7c:	f3 1f                	repz (bad)
    2b7e:	b6 02                	mov    dh,0x2
    2b80:	00 00                	add    BYTE PTR [rax],al
    2b82:	cd 00                	int    0x0
    2b84:	00 00                	add    BYTE PTR [rax],al
    2b86:	b0 06                	mov    al,0x6
    2b88:	00 00                	add    BYTE PTR [rax],al
    2b8a:	02 ba 00 00 00 02    	add    bh,BYTE PTR [rdx+0x2000000]
    2b90:	39 05 00 00 02 58    	cmp    DWORD PTR [rip+0x58020000],eax        # 58022b96 <_end+0x5801cb7e>
    2b96:	00 00                	add    BYTE PTR [rax],al
    2b98:	00 00                	add    BYTE PTR [rax],al
    2b9a:	08 af 02 00 00 07    	or     BYTE PTR [rdi+0x7000002],ch
    2ba0:	7c 0e                	jl     2bb0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3b0>
    2ba2:	d4                   	(bad)
    2ba3:	00 00                	add    BYTE PTR [rax],al
    2ba5:	00 cb                	add    bl,cl
    2ba7:	06                   	(bad)
    2ba8:	00 00                	add    BYTE PTR [rax],al
    2baa:	02 ba 00 00 00 02    	add    bh,BYTE PTR [rdx+0x2000000]
    2bb0:	39 05 00 00 00 08    	cmp    DWORD PTR [rip+0x8000000],eax        # 8002bb6 <_end+0x7ffcb9e>
    2bb6:	2b 00                	sub    eax,DWORD PTR [rax]
    2bb8:	00 00                	add    BYTE PTR [rax],al
    2bba:	07                   	(bad)
    2bbb:	7f 14                	jg     2bd1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3d1>
    2bbd:	c6 00 00             	mov    BYTE PTR [rax],0x0
    2bc0:	00 e6                	add    dh,ah
    2bc2:	06                   	(bad)
    2bc3:	00 00                	add    BYTE PTR [rax],al
    2bc5:	02 ba 00 00 00 02    	add    bh,BYTE PTR [rdx+0x2000000]
    2bcb:	39 05 00 00 00 01    	cmp    DWORD PTR [rip+0x1000000],eax        # 1002bd1 <_end+0xffcbb9>
    2bd1:	0d 27 0c 6a 03       	or     eax,0x36a0c27
    2bd6:	00 00                	add    BYTE PTR [rax],al
    2bd8:	01 0d 2b 0e 86 03    	add    DWORD PTR [rip+0x3860e2b],ecx        # 3863a09 <_end+0x385d9f1>
    2bde:	00 00                	add    BYTE PTR [rax],al
    2be0:	01 0d 2e 0e ed 04    	add    DWORD PTR [rip+0x4ed0e2e],ecx        # 4ed3a14 <_end+0x4ecd9fc>
    2be6:	00 00                	add    BYTE PTR [rax],al
    2be8:	01 0d 36 0c 00 01    	add    DWORD PTR [rip+0x1000c36],ecx        # 1003824 <_end+0xffd80c>
    2bee:	00 00                	add    BYTE PTR [rax],al
    2bf0:	01 0d 37 0c 31 01    	add    DWORD PTR [rip+0x1310c37],ecx        # 131382d <_end+0x130d815>
    2bf6:	00 00                	add    BYTE PTR [rax],al
    2bf8:	04 10                	add    al,0x10
    2bfa:	04 a4                	add    al,0xa4
    2bfc:	02 00                	add    al,BYTE PTR [rax]
    2bfe:	00 01                	add    BYTE PTR [rcx],al
    2c00:	0d 39 0c a8 02       	or     eax,0x2a80c39
    2c05:	00 00                	add    BYTE PTR [rax],al
    2c07:	04 10                	add    al,0x10
    2c09:	05 0f 02 00 00       	add    eax,0x20f
    2c0e:	01 0d 39 0c c0 02    	add    DWORD PTR [rip+0x2c00c39],ecx        # 2c0384d <_end+0x2bfd835>
    2c14:	00 00                	add    BYTE PTR [rax],al
    2c16:	01 0d 39 0c d8 02    	add    DWORD PTR [rip+0x2d80c39],ecx        # 2d83855 <_end+0x2d7d83d>
    2c1c:	00 00                	add    BYTE PTR [rax],al
    2c1e:	01 0d 39 0c f0 02    	add    DWORD PTR [rip+0x2f00c39],ecx        # 2f0385d <_end+0x2efd845>
    2c24:	00 00                	add    BYTE PTR [rax],al
    2c26:	01 0d 39 0c 08 03    	add    DWORD PTR [rip+0x3080c39],ecx        # 3083865 <_end+0x307d84d>
    2c2c:	00 00                	add    BYTE PTR [rax],al
    2c2e:	01 0d 39 0c 20 03    	add    DWORD PTR [rip+0x3200c39],ecx        # 320386d <_end+0x31fd855>
    2c34:	00 00                	add    BYTE PTR [rax],al
    2c36:	01 0d 39 0c 38 03    	add    DWORD PTR [rip+0x3380c39],ecx        # 3383875 <_end+0x337d85d>
    2c3c:	00 00                	add    BYTE PTR [rax],al
    2c3e:	01 0d 3a 0c a1 03    	add    DWORD PTR [rip+0x3a10c3a],ecx        # 3a1387e <_end+0x3a0d866>
    2c44:	00 00                	add    BYTE PTR [rax],al
    2c46:	01 0d 3b 0c be 03    	add    DWORD PTR [rip+0x3be0c3b],ecx        # 3be3887 <_end+0x3bdd86f>
    2c4c:	00 00                	add    BYTE PTR [rax],al
    2c4e:	01 0d 3c 0c d4 03    	add    DWORD PTR [rip+0x3d40c3c],ecx        # 3d43890 <_end+0x3d3d878>
    2c54:	00 00                	add    BYTE PTR [rax],al
    2c56:	01 0d 3d 0c ea 03    	add    DWORD PTR [rip+0x3ea0c3d],ecx        # 3ea3899 <_end+0x3e9d881>
    2c5c:	00 00                	add    BYTE PTR [rax],al
    2c5e:	01 0d 3f 0c 1f 06    	add    DWORD PTR [rip+0x61f0c3f],ecx        # 61f38a3 <_end+0x61ed88b>
    2c64:	00 00                	add    BYTE PTR [rax],al
    2c66:	01 0d 3f 0c 50 03    	add    DWORD PTR [rip+0x3500c3f],ecx        # 35038ab <_end+0x34fd893>
    2c6c:	00 00                	add    BYTE PTR [rax],al
    2c6e:	01 0d 3f 0c 14 04    	add    DWORD PTR [rip+0x4140c3f],ecx        # 41438b3 <_end+0x413d89b>
    2c74:	00 00                	add    BYTE PTR [rax],al
    2c76:	01 0d 41 0c 30 04    	add    DWORD PTR [rip+0x4300c41],ecx        # 43038bd <_end+0x42fd8a5>
    2c7c:	00 00                	add    BYTE PTR [rax],al
    2c7e:	01 0d 43 0c 46 04    	add    DWORD PTR [rip+0x4460c43],ecx        # 44638c7 <_end+0x445d8af>
    2c84:	00 00                	add    BYTE PTR [rax],al
    2c86:	01 0d 46 0c 61 04    	add    DWORD PTR [rip+0x4610c46],ecx        # 46138d2 <_end+0x460d8ba>
    2c8c:	00 00                	add    BYTE PTR [rax],al
    2c8e:	01 0d 47 0c 7c 04    	add    DWORD PTR [rip+0x47c0c47],ecx        # 47c38db <_end+0x47bd8c3>
    2c94:	00 00                	add    BYTE PTR [rax],al
    2c96:	01 0d 48 0c ad 04    	add    DWORD PTR [rip+0x4ad0c48],ecx        # 4ad38e4 <_end+0x4acd8cc>
    2c9c:	00 00                	add    BYTE PTR [rax],al
    2c9e:	01 0d 4a 0c cd 04    	add    DWORD PTR [rip+0x4cd0c4a],ecx        # 4cd38ee <_end+0x4ccd8d6>
    2ca4:	00 00                	add    BYTE PTR [rax],al
    2ca6:	01 0d 4b 0c 00 05    	add    DWORD PTR [rip+0x5000c4b],ecx        # 50038f7 <_end+0x4ffd8df>
    2cac:	00 00                	add    BYTE PTR [rax],al
    2cae:	01 0d 4d 0c 0d 05    	add    DWORD PTR [rip+0x50d0c4d],ecx        # 50d3901 <_end+0x50cd8e9>
    2cb4:	00 00                	add    BYTE PTR [rax],al
    2cb6:	01 0d 4e 0c 1e 05    	add    DWORD PTR [rip+0x51e0c4e],ecx        # 51e390a <_end+0x51dd8f2>
    2cbc:	00 00                	add    BYTE PTR [rax],al
    2cbe:	01 0d 4f 0c 3e 05    	add    DWORD PTR [rip+0x53e0c4f],ecx        # 53e3913 <_end+0x53dd8fb>
    2cc4:	00 00                	add    BYTE PTR [rax],al
    2cc6:	01 0d 50 0c 61 05    	add    DWORD PTR [rip+0x5610c50],ecx        # 561391c <_end+0x560d904>
    2ccc:	00 00                	add    BYTE PTR [rax],al
    2cce:	01 0d 51 0c 84 05    	add    DWORD PTR [rip+0x5840c51],ecx        # 5843925 <_end+0x583d90d>
    2cd4:	00 00                	add    BYTE PTR [rax],al
    2cd6:	01 0d 53 0c 9a 05    	add    DWORD PTR [rip+0x59a0c53],ecx        # 59a392f <_end+0x599d917>
    2cdc:	00 00                	add    BYTE PTR [rax],al
    2cde:	01 0d 54 0c bf 05    	add    DWORD PTR [rip+0x5bf0c54],ecx        # 5bf3938 <_end+0x5bed920>
    2ce4:	00 00                	add    BYTE PTR [rax],al
    2ce6:	05 77 06 00 00       	add    eax,0x677
    2ceb:	0e                   	(bad)
    2cec:	29 13                	sub    DWORD PTR [rbx],edx
    2cee:	08 08                	or     BYTE PTR [rax],cl
    2cf0:	00 00                	add    BYTE PTR [rax],al
    2cf2:	10 bf 00 00 00 14    	adc    BYTE PTR [rdi+0x14000000],bh
    2cf8:	08 00                	or     BYTE PTR [rax],al
    2cfa:	00 11                	add    BYTE PTR [rcx],dl
    2cfc:	01 00                	add    DWORD PTR [rax],eax
    2cfe:	05 99 06 00 00       	add    eax,0x699
    2d03:	0e                   	(bad)
    2d04:	35 13 20 08 00       	xor    eax,0x82013
    2d09:	00 10                	add    BYTE PTR [rax],dl
    2d0b:	bf 00 00 00 2c       	mov    edi,0x2c000000
    2d10:	08 00                	or     BYTE PTR [rax],al
    2d12:	00 11                	add    BYTE PTR [rcx],dl
    2d14:	01 00                	add    DWORD PTR [rax],eax
    2d16:	05 54 06 00 00       	add    eax,0x654
    2d1b:	02 2d 0d 38 08 00    	add    ch,BYTE PTR [rip+0x8380d]        # 8652e <_end+0x80516>
    2d21:	00 10                	add    BYTE PTR [rax],dl
    2d23:	58                   	pop    rax
    2d24:	00 00                	add    BYTE PTR [rax],al
    2d26:	00 44 08 00          	add    BYTE PTR [rax+rcx*1+0x0],al
    2d2a:	00 11                	add    BYTE PTR [rcx],dl
    2d2c:	07                   	(bad)
    2d2d:	00 05 7a 04 00 00    	add    BYTE PTR [rip+0x47a],al        # 31ad <_Z7testAllPKcjS0_j+0x47d>
    2d33:	02 39                	add    bh,BYTE PTR [rcx]
    2d35:	13 50 08             	adc    edx,DWORD PTR [rax+0x8]
    2d38:	00 00                	add    BYTE PTR [rax],al
    2d3a:	10 bf 00 00 00 5c    	adc    BYTE PTR [rdi+0x5c000000],bh
    2d40:	08 00                	or     BYTE PTR [rax],al
    2d42:	00 11                	add    BYTE PTR [rcx],dl
    2d44:	03 00                	add    eax,DWORD PTR [rax]
    2d46:	04 02                	add    al,0x2
    2d48:	04 00                	add    al,0x0
    2d4a:	00 00                	add    BYTE PTR [rax],al
    2d4c:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    2d4f:	04 ce                	add    al,0xce
    2d51:	02 00                	add    al,BYTE PTR [rax]
    2d53:	00 30                	add    BYTE PTR [rax],dh
    2d55:	7b 08                	jnp    2d5f <_Z7testAllPKcjS0_j+0x2f>
    2d57:	00 00                	add    BYTE PTR [rax],al
    2d59:	40 0f 11 10          	rex movups XMMWORD PTR [rax],xmm2
    2d5d:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2d5e:	08 00                	or     BYTE PTR [rax],al
    2d60:	00 0a                	add    BYTE PTR [rdx],cl
    2d62:	ae                   	scas   al,BYTE PTR es:[rdi]
    2d63:	03 00                	add    eax,DWORD PTR [rax]
    2d65:	00 0f                	add    BYTE PTR [rdi],cl
    2d67:	12 0d 44 08 00 00    	adc    cl,BYTE PTR [rip+0x844]        # 35b1 <_Z21standartDeviationTimePdjd+0xb1>
    2d6d:	00 0a                	add    BYTE PTR [rdx],cl
    2d6f:	82                   	(bad)
    2d70:	04 00                	add    al,0x0
    2d72:	00 0f                	add    BYTE PTR [rdi],cl
    2d74:	13 0e                	adc    ecx,DWORD PTR [rsi]
    2d76:	96                   	xchg   esi,eax
    2d77:	00 00                	add    BYTE PTR [rax],al
    2d79:	00 20                	add    BYTE PTR [rax],ah
    2d7b:	0a 5b 06             	or     bl,BYTE PTR [rbx+0x6]
    2d7e:	00 00                	add    BYTE PTR [rax],al
    2d80:	0f 14 0e             	unpcklps xmm1,XMMWORD PTR [rsi]
    2d83:	96                   	xchg   esi,eax
    2d84:	00 00                	add    BYTE PTR [rax],al
    2d86:	00 24 0a             	add    BYTE PTR [rdx+rcx*1],ah
    2d89:	53                   	push   rbx
    2d8a:	04 00                	add    al,0x0
    2d8c:	00 0f                	add    BYTE PTR [rdi],cl
    2d8e:	15 0a ac 08 00       	adc    eax,0x8ac0a
    2d93:	00 28                	add    BYTE PTR [rax],ch
    2d95:	00 31                	add    BYTE PTR [rcx],dh
    2d97:	8a 00                	mov    al,BYTE PTR [rax]
    2d99:	00 00                	add    BYTE PTR [rax],al
    2d9b:	bc 08 00 00 32       	mov    esp,0x32000008
    2da0:	43 00 00             	rex.XB add BYTE PTR [r8],al
    2da3:	00 17                	add    BYTE PTR [rdi],dl
    2da5:	00 05 7b 08 00 00    	add    BYTE PTR [rip+0x87b],al        # 3626 <_Z21standartDeviationTimePdjd+0x126>
    2dab:	0f 16 03             	movhps xmm0,QWORD PTR [rbx]
    2dae:	6a 08                	push   0x8
    2db0:	00 00                	add    BYTE PTR [rax],al
    2db2:	1a 27                	sbb    ah,BYTE PTR [rdi]
    2db4:	09 00                	or     DWORD PTR [rax],eax
    2db6:	00 ad 47 09 00 00    	add    BYTE PTR [rbp+0x947],ch
    2dbc:	96                   	xchg   esi,eax
    2dbd:	00 00                	add    BYTE PTR [rax],al
    2dbf:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
    2dc2:	00 00                	add    BYTE PTR [rax],al
    2dc4:	00 00                	add    BYTE PTR [rax],al
    2dc6:	00 00                	add    BYTE PTR [rax],al
    2dc8:	05 01 00 00 00       	add    eax,0x1
    2dcd:	00 00                	add    BYTE PTR [rax],al
    2dcf:	00 01                	add    BYTE PTR [rcx],al
    2dd1:	9c                   	pushf
    2dd2:	37                   	(bad)
    2dd3:	09 00                	or     DWORD PTR [rax],eax
    2dd5:	00 1f                	add    BYTE PTR [rdi],bl
    2dd7:	ae                   	scas   al,BYTE PTR es:[rdi]
    2dd8:	03 00                	add    eax,DWORD PTR [rax]
    2dda:	00 ad 21 bc 08 00    	add    BYTE PTR [rbp+0x8bc21],ch
    2de0:	00 02                	add    BYTE PTR [rdx],al
    2de2:	91                   	xchg   ecx,eax
    2de3:	00 0c 82             	add    BYTE PTR [rdx+rax*4],cl
    2de6:	04 00                	add    al,0x0
    2de8:	00 ae 0e 96 00 00    	add    BYTE PTR [rsi+0x960e],ch
    2dee:	00 ef                	add    bh,ch
    2df0:	07                   	(bad)
    2df1:	00 00                	add    BYTE PTR [rax],al
    2df3:	d1 07                	rol    DWORD PTR [rdi],1
    2df5:	00 00                	add    BYTE PTR [rax],al
    2df7:	0c fa                	or     al,0xfa
    2df9:	08 00                	or     BYTE PTR [rax],al
    2dfb:	00 af 0e 96 00 00    	add    BYTE PTR [rdi+0x960e],ch
    2e01:	00 5d 0d             	add    BYTE PTR [rbp+0xd],bl
    2e04:	00 00                	add    BYTE PTR [rax],al
    2e06:	39 0d 00 00 0e 9e    	cmp    DWORD PTR [rip+0xffffffff9e0e0000],ecx        # ffffffff9e0e2e0c <_end+0xffffffff9e0dcdf4>
    2e0c:	01 00                	add    DWORD PTR [rax],eax
    2e0e:	00 12                	add    BYTE PTR [rdx],dl
    2e10:	69 00 b0 58 00 00    	imul   eax,DWORD PTR [rax],0x58b0
    2e16:	00 9e 0f 00 00 8c    	add    BYTE PTR [rsi-0x73fffff1],bl
    2e1c:	0f 00 00             	sldt   WORD PTR [rax]
    2e1f:	00 00                	add    BYTE PTR [rax],al
    2e21:	1a b5 08 00 00 9f    	sbb    dh,BYTE PTR [rbp-0x60fffff8]
    2e27:	62 09 00 00 96       	(bad)
    2e2c:	00 00                	add    BYTE PTR [rax],al
    2e2e:	00 50 1b             	add    BYTE PTR [rax+0x1b],dl
    2e31:	00 00                	add    BYTE PTR [rax],al
    2e33:	00 00                	add    BYTE PTR [rax],al
    2e35:	00 00                	add    BYTE PTR [rax],al
    2e37:	06                   	(bad)
    2e38:	02 00                	add    al,BYTE PTR [rax]
    2e3a:	00 00                	add    BYTE PTR [rax],al
    2e3c:	00 00                	add    BYTE PTR [rax],al
    2e3e:	00 01                	add    BYTE PTR [rcx],al
    2e40:	9c                   	pushf
    2e41:	ae                   	scas   al,BYTE PTR es:[rdi]
    2e42:	09 00                	or     DWORD PTR [rax],eax
    2e44:	00 1f                	add    BYTE PTR [rdi],bl
    2e46:	ae                   	scas   al,BYTE PTR es:[rdi]
    2e47:	03 00                	add    eax,DWORD PTR [rax]
    2e49:	00 9f 25 bc 08 00    	add    BYTE PTR [rdi+0x8bc25],bl
    2e4f:	00 02                	add    BYTE PTR [rdx],al
    2e51:	91                   	xchg   ecx,eax
    2e52:	00 12                	add    BYTE PTR [rdx],dl
    2e54:	41 00 a0 96 00 00 00 	add    BYTE PTR [r8+0x96],spl
    2e5b:	02 10                	add    dl,BYTE PTR [rax]
    2e5d:	00 00                	add    BYTE PTR [rax],al
    2e5f:	e6 0f                	out    0xf,al
    2e61:	00 00                	add    BYTE PTR [rax],al
    2e63:	12 42 00             	adc    al,BYTE PTR [rdx+0x0]
    2e66:	a1 96 00 00 00 7d 10 	movabs eax,ds:0x107d00000096
    2e6d:	00 00 
    2e6f:	67 10 00             	adc    BYTE PTR [eax],al
    2e72:	00 33                	add    BYTE PTR [rbx],dh
    2e74:	84 08                	test   BYTE PTR [rax],cl
    2e76:	00 00                	add    BYTE PTR [rax],al
    2e78:	01 a2 0e 96 00 00    	add    DWORD PTR [rdx+0x960e],esp
    2e7e:	00 f1                	add    cl,dh
    2e80:	ff 0e                	dec    DWORD PTR [rsi]
    2e82:	93                   	xchg   ebx,eax
    2e83:	01 00                	add    DWORD PTR [rax],eax
    2e85:	00 12                	add    BYTE PTR [rdx],dl
    2e87:	69 00 a4 58 00 00    	imul   eax,DWORD PTR [rax],0x58a4
    2e8d:	00 df                	add    bh,bl
    2e8f:	10 00                	adc    BYTE PTR [rax],al
    2e91:	00 cd                	add    ch,cl
    2e93:	10 00                	adc    BYTE PTR [rax],al
    2e95:	00 00                	add    BYTE PTR [rax],al
    2e97:	00 1b                	add    BYTE PTR [rbx],bl
    2e99:	19 09                	sbb    DWORD PTR [rcx],ecx
    2e9b:	00 00                	add    BYTE PTR [rax],al
    2e9d:	84 81 09 00 00 96    	test   BYTE PTR [rcx-0x69fffff7],al
    2ea3:	00 00                	add    BYTE PTR [rax],al
    2ea5:	00 d7                	add    bh,dl
    2ea7:	09 00                	or     DWORD PTR [rax],eax
    2ea9:	00 13                	add    BYTE PTR [rbx],dl
    2eab:	ae                   	scas   al,BYTE PTR es:[rdi]
    2eac:	03 00                	add    eax,DWORD PTR [rax]
    2eae:	00 84 21 bc 08 00 00 	add    BYTE PTR [rcx+riz*1+0x8bc],al
    2eb5:	14 82                	adc    al,0x82
    2eb7:	04 00                	add    al,0x0
    2eb9:	00 85 0e 96 00 00    	add    BYTE PTR [rbp+0x960e],al
    2ebf:	00 00                	add    BYTE PTR [rax],al
    2ec1:	1b 35 09 00 00 50    	sbb    esi,DWORD PTR [rip+0x50000009]        # 50002ed0 <_end+0x4fffceb8>
    2ec7:	db 08                	fisttp DWORD PTR [rax]
    2ec9:	00 00                	add    BYTE PTR [rax],al
    2ecb:	96                   	xchg   esi,eax
    2ecc:	00 00                	add    BYTE PTR [rax],al
    2ece:	00 00                	add    BYTE PTR [rax],al
    2ed0:	0a 00                	or     al,BYTE PTR [rax]
    2ed2:	00 13                	add    BYTE PTR [rbx],dl
    2ed4:	ae                   	scas   al,BYTE PTR es:[rdi]
    2ed5:	03 00                	add    eax,DWORD PTR [rax]
    2ed7:	00 50 25             	add    BYTE PTR [rax+0x25],dl
    2eda:	bc 08 00 00 14       	mov    esp,0x14000008
    2edf:	82                   	(bad)
    2ee0:	04 00                	add    al,0x0
    2ee2:	00 7d 12             	add    BYTE PTR [rbp+0x12],bh
    2ee5:	96                   	xchg   esi,eax
    2ee6:	00 00                	add    BYTE PTR [rax],al
    2ee8:	00 00                	add    BYTE PTR [rax],al
    2eea:	1a ff                	sbb    bh,bh
    2eec:	08 00                	or     BYTE PTR [rax],al
    2eee:	00 32                	add    BYTE PTR [rdx],dh
    2ef0:	8e 08                	mov    cs,WORD PTR [rax]
    2ef2:	00 00                	add    BYTE PTR [rax],al
    2ef4:	96                   	xchg   esi,eax
    2ef5:	00 00                	add    BYTE PTR [rax],al
    2ef7:	00 d0                	add    al,dl
    2ef9:	1a 00                	sbb    al,BYTE PTR [rax]
    2efb:	00 00                	add    BYTE PTR [rax],al
    2efd:	00 00                	add    BYTE PTR [rax],al
    2eff:	00 59 00             	add    BYTE PTR [rcx+0x0],bl
    2f02:	00 00                	add    BYTE PTR [rax],al
    2f04:	00 00                	add    BYTE PTR [rax],al
    2f06:	00 00                	add    BYTE PTR [rax],al
    2f08:	01 9c d7 0d 00 00 34 	add    DWORD PTR [rdi+rdx*8+0x3400000d],ebx
    2f0f:	ae                   	scas   al,BYTE PTR es:[rdi]
    2f10:	03 00                	add    eax,DWORD PTR [rax]
    2f12:	00 01                	add    BYTE PTR [rcx],al
    2f14:	32 2d bc 08 00 00    	xor    ch,BYTE PTR [rip+0x8bc]        # 37d6 <_Z27standartDeviationCollisionsP7HashMapf+0x176>
    2f1a:	2a 11                	sub    dl,BYTE PTR [rcx]
    2f1c:	00 00                	add    BYTE PTR [rax],al
    2f1e:	28 11                	sub    BYTE PTR [rcx],dl
    2f20:	00 00                	add    BYTE PTR [rax],al
    2f22:	0c 82                	or     al,0x82
    2f24:	04 00                	add    al,0x0
    2f26:	00 33                	add    BYTE PTR [rbx],dh
    2f28:	0e                   	(bad)
    2f29:	96                   	xchg   esi,eax
    2f2a:	00 00                	add    BYTE PTR [rax],al
    2f2c:	00 37                	add    BYTE PTR [rdi],dh
    2f2e:	11 00                	adc    DWORD PTR [rax],eax
    2f30:	00 35 11 00 00 35    	add    BYTE PTR [rip+0x35000011],dh        # 35002f47 <_end+0x34ffcf2f>
    2f36:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    2f39:	00 01                	add    BYTE PTR [rcx],al
    2f3b:	34 0e                	xor    al,0xe
    2f3d:	a2 00 00 00 11 11 11 	movabs ds:0x1121111111000000,al
    2f44:	21 11 
    2f46:	12 12                	adc    dl,BYTE PTR [rdx]
    2f48:	12 0c c0             	adc    cl,BYTE PTR [rax+rax*8]
    2f4b:	03 00                	add    eax,DWORD PTR [rax]
    2f4d:	00 3f                	add    BYTE PTR [rdi],bh
    2f4f:	12 a2 00 00 00 42    	adc    ah,BYTE PTR [rdx+0x42000000]
    2f55:	11 00                	adc    DWORD PTR [rax],eax
    2f57:	00 3e                	add    BYTE PTR [rsi],bh
    2f59:	11 00                	adc    DWORD PTR [rax],eax
    2f5b:	00 0c c6             	add    BYTE PTR [rsi+rax*8],cl
    2f5e:	03 00                	add    eax,DWORD PTR [rax]
    2f60:	00 40 12             	add    BYTE PTR [rax+0x12],al
    2f63:	a2 00 00 00 51 11 00 	movabs ds:0x4d00001151000000,al
    2f6a:	00 4d 
    2f6c:	11 00                	adc    DWORD PTR [rax],eax
    2f6e:	00 0c cc             	add    BYTE PTR [rsp+rcx*8],cl
    2f71:	03 00                	add    eax,DWORD PTR [rax]
    2f73:	00 41 12             	add    BYTE PTR [rcx+0x12],al
    2f76:	a2 00 00 00 60 11 00 	movabs ds:0x5c00001160000000,al
    2f7d:	00 5c 
    2f7f:	11 00                	adc    DWORD PTR [rax],eax
    2f81:	00 0c d2             	add    BYTE PTR [rdx+rdx*8],cl
    2f84:	03 00                	add    eax,DWORD PTR [rax]
    2f86:	00 42 12             	add    BYTE PTR [rdx+0x12],al
    2f89:	a2 00 00 00 6f 11 00 	movabs ds:0x6b0000116f000000,al
    2f90:	00 6b 
    2f92:	11 00                	adc    DWORD PTR [rax],eax
    2f94:	00 0d 2c 0e 00 00    	add    BYTE PTR [rip+0xe2c],cl        # 3dc6 <_fini+0x432>
    2f9a:	d4                   	(bad)
    2f9b:	1a 00                	sbb    al,BYTE PTR [rax]
    2f9d:	00 00                	add    BYTE PTR [rax],al
    2f9f:	00 00                	add    BYTE PTR [rax],al
    2fa1:	00 03                	add    BYTE PTR [rbx],al
    2fa3:	45 01 00             	add    DWORD PTR [r8],r8d
    2fa6:	00 3f                	add    BYTE PTR [rdi],bh
    2fa8:	2e 5f                	cs pop rdi
    2faa:	0b 00                	or     eax,DWORD PTR [rax]
    2fac:	00 03                	add    BYTE PTR [rbx],al
    2fae:	4d 0e                	rex.WRB (bad)
    2fb0:	00 00                	add    BYTE PTR [rax],al
    2fb2:	7c 11                	jl     2fc5 <_Z7testAllPKcjS0_j+0x295>
    2fb4:	00 00                	add    BYTE PTR [rax],al
    2fb6:	7a 11                	jp     2fc9 <_Z7testAllPKcjS0_j+0x299>
    2fb8:	00 00                	add    BYTE PTR [rax],al
    2fba:	03 40 0e             	add    eax,DWORD PTR [rax+0xe]
    2fbd:	00 00                	add    BYTE PTR [rax],al
    2fbf:	85 11                	test   DWORD PTR [rcx],edx
    2fc1:	00 00                	add    BYTE PTR [rax],al
    2fc3:	83 11 00             	adc    DWORD PTR [rcx],0x0
    2fc6:	00 0e                	add    BYTE PTR [rsi],cl
    2fc8:	45 01 00             	add    DWORD PTR [r8],r8d
    2fcb:	00 15 5a 0e 00 00    	add    BYTE PTR [rip+0xe5a],dl        # 3e2b <_fini+0x497>
    2fd1:	8e 11                	mov    ss,WORD PTR [rcx]
    2fd3:	00 00                	add    BYTE PTR [rax],al
    2fd5:	8c 11                	mov    WORD PTR [rcx],ss
    2fd7:	00 00                	add    BYTE PTR [rax],al
    2fd9:	36 68 0e 00 00 d4    	ss push 0xffffffffd400000e
    2fdf:	1a 00                	sbb    al,BYTE PTR [rax]
    2fe1:	00 00                	add    BYTE PTR [rax],al
    2fe3:	00 00                	add    BYTE PTR [rax],al
    2fe5:	00 05 d4 1a 00 00    	add    BYTE PTR [rip+0x1ad4],al        # 4abf <__GNU_EH_FRAME_HDR+0x437>
    2feb:	00 00                	add    BYTE PTR [rax],al
    2fed:	00 00                	add    BYTE PTR [rax],al
    2fef:	06                   	(bad)
    2ff0:	00 00                	add    BYTE PTR [rax],al
    2ff2:	00 00                	add    BYTE PTR [rax],al
    2ff4:	00 00                	add    BYTE PTR [rax],al
    2ff6:	00 02                	add    BYTE PTR [rdx],al
    2ff8:	30 02                	xor    BYTE PTR [rdx],al
    2ffa:	2a 30                	sub    dh,BYTE PTR [rax]
    2ffc:	0b 00                	or     eax,DWORD PTR [rax]
    2ffe:	00 03                	add    BYTE PTR [rbx],al
    3000:	89 0e                	mov    DWORD PTR [rsi],ecx
    3002:	00 00                	add    BYTE PTR [rax],al
    3004:	96                   	xchg   esi,eax
    3005:	11 00                	adc    DWORD PTR [rax],eax
    3007:	00 94 11 00 00 03 7c 	add    BYTE PTR [rcx+rdx*1+0x7c030000],dl
    300e:	0e                   	(bad)
    300f:	00 00                	add    BYTE PTR [rax],al
    3011:	9f                   	lahf
    3012:	11 00                	adc    DWORD PTR [rax],eax
    3014:	00 9d 11 00 00 00    	add    BYTE PTR [rbp+0x11],bl
    301a:	1c c6                	sbb    al,0xc6
    301c:	0e                   	(bad)
    301d:	00 00                	add    BYTE PTR [rax],al
    301f:	da 1a                	ficomp DWORD PTR [rdx]
    3021:	00 00                	add    BYTE PTR [rax],al
    3023:	00 00                	add    BYTE PTR [rax],al
    3025:	00 00                	add    BYTE PTR [rax],al
    3027:	02 4c 01 00          	add    cl,BYTE PTR [rcx+rax*1+0x0]
    302b:	00 03                	add    BYTE PTR [rbx],al
    302d:	e7 0e                	out    0xe,eax
    302f:	00 00                	add    BYTE PTR [rax],al
    3031:	a8 11                	test   al,0x11
    3033:	00 00                	add    BYTE PTR [rax],al
    3035:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3036:	11 00                	adc    DWORD PTR [rax],eax
    3038:	00 03                	add    BYTE PTR [rbx],al
    303a:	da 0e                	fimul  DWORD PTR [rsi]
    303c:	00 00                	add    BYTE PTR [rax],al
    303e:	b1 11                	mov    cl,0x11
    3040:	00 00                	add    BYTE PTR [rax],al
    3042:	af                   	scas   eax,DWORD PTR es:[rdi]
    3043:	11 00                	adc    DWORD PTR [rax],eax
    3045:	00 00                	add    BYTE PTR [rax],al
    3047:	00 00                	add    BYTE PTR [rax],al
    3049:	0d 97 0e 00 00       	or     eax,0xe97
    304e:	13 1b                	adc    ebx,DWORD PTR [rbx]
    3050:	00 00                	add    BYTE PTR [rax],al
    3052:	00 00                	add    BYTE PTR [rax],al
    3054:	00 00                	add    BYTE PTR [rax],al
    3056:	02 53 01             	add    dl,BYTE PTR [rbx+0x1]
    3059:	00 00                	add    BYTE PTR [rax],al
    305b:	46 1a 8a 0b 00 00 20 	rex.RX sbb r9b,BYTE PTR [rdx+0x2000000b]
    3062:	b8 0e 00 00 03       	mov    eax,0x300000e
    3067:	ab                   	stos   DWORD PTR es:[rdi],eax
    3068:	0e                   	(bad)
    3069:	00 00                	add    BYTE PTR [rax],al
    306b:	b9 11 00 00 b7       	mov    ecx,0xb7000011
    3070:	11 00                	adc    DWORD PTR [rax],eax
    3072:	00 00                	add    BYTE PTR [rax],al
    3074:	0d 2c 0e 00 00       	or     eax,0xe2c
    3079:	f2 1a 00             	repnz sbb al,BYTE PTR [rax]
    307c:	00 00                	add    BYTE PTR [rax],al
    307e:	00 00                	add    BYTE PTR [rax],al
    3080:	00 02                	add    BYTE PTR [rdx],al
    3082:	60                   	(bad)
    3083:	01 00                	add    DWORD PTR [rax],eax
    3085:	00 41 2e             	add    BYTE PTR [rcx+0x2e],al
    3088:	32 0c 00             	xor    cl,BYTE PTR [rax+rax*1]
    308b:	00 03                	add    BYTE PTR [rbx],al
    308d:	4d 0e                	rex.WRB (bad)
    308f:	00 00                	add    BYTE PTR [rax],al
    3091:	ca 11 00             	retf   0x11
    3094:	00 c8                	add    al,cl
    3096:	11 00                	adc    DWORD PTR [rax],eax
    3098:	00 03                	add    BYTE PTR [rbx],al
    309a:	40 0e                	rex (bad)
    309c:	00 00                	add    BYTE PTR [rax],al
    309e:	d3 11                	rcl    DWORD PTR [rcx],cl
    30a0:	00 00                	add    BYTE PTR [rax],al
    30a2:	d1 11                	rcl    DWORD PTR [rcx],1
    30a4:	00 00                	add    BYTE PTR [rax],al
    30a6:	0e                   	(bad)
    30a7:	60                   	(bad)
    30a8:	01 00                	add    DWORD PTR [rax],eax
    30aa:	00 15 5a 0e 00 00    	add    BYTE PTR [rip+0xe5a],dl        # 3f0a <_fini+0x576>
    30b0:	dc 11                	fcom   QWORD PTR [rcx]
    30b2:	00 00                	add    BYTE PTR [rax],al
    30b4:	da 11                	ficom  DWORD PTR [rcx]
    30b6:	00 00                	add    BYTE PTR [rax],al
    30b8:	37                   	(bad)
    30b9:	68 0e 00 00 f2       	push   0xfffffffff200000e
    30be:	1a 00                	sbb    al,BYTE PTR [rax]
    30c0:	00 00                	add    BYTE PTR [rax],al
    30c2:	00 00                	add    BYTE PTR [rax],al
    30c4:	00 04 6a             	add    BYTE PTR [rdx+rbp*2],al
    30c7:	01 00                	add    DWORD PTR [rax],eax
    30c9:	00 02                	add    BYTE PTR [rdx],al
    30cb:	30 02                	xor    BYTE PTR [rdx],al
    30cd:	2a 03                	sub    al,BYTE PTR [rbx]
    30cf:	0c 00                	or     al,0x0
    30d1:	00 03                	add    BYTE PTR [rbx],al
    30d3:	89 0e                	mov    DWORD PTR [rsi],ecx
    30d5:	00 00                	add    BYTE PTR [rax],al
    30d7:	e4 11                	in     al,0x11
    30d9:	00 00                	add    BYTE PTR [rax],al
    30db:	e2 11                	loop   30ee <_Z7testAllPKcjS0_j+0x3be>
    30dd:	00 00                	add    BYTE PTR [rax],al
    30df:	03 7c 0e 00          	add    edi,DWORD PTR [rsi+rcx*1+0x0]
    30e3:	00 ed                	add    ch,ch
    30e5:	11 00                	adc    DWORD PTR [rax],eax
    30e7:	00 eb                	add    bl,ch
    30e9:	11 00                	adc    DWORD PTR [rax],eax
    30eb:	00 00                	add    BYTE PTR [rax],al
    30ed:	1c c6                	sbb    al,0xc6
    30ef:	0e                   	(bad)
    30f0:	00 00                	add    BYTE PTR [rax],al
    30f2:	f8                   	clc
    30f3:	1a 00                	sbb    al,BYTE PTR [rax]
    30f5:	00 00                	add    BYTE PTR [rax],al
    30f7:	00 00                	add    BYTE PTR [rax],al
    30f9:	00 02                	add    BYTE PTR [rdx],al
    30fb:	71 01                	jno    30fe <_Z7testAllPKcjS0_j+0x3ce>
    30fd:	00 00                	add    BYTE PTR [rax],al
    30ff:	03 e7                	add    esp,edi
    3101:	0e                   	(bad)
    3102:	00 00                	add    BYTE PTR [rax],al
    3104:	f6 11                	not    BYTE PTR [rcx]
    3106:	00 00                	add    BYTE PTR [rax],al
    3108:	f4                   	hlt
    3109:	11 00                	adc    DWORD PTR [rax],eax
    310b:	00 03                	add    BYTE PTR [rbx],al
    310d:	da 0e                	fimul  DWORD PTR [rsi]
    310f:	00 00                	add    BYTE PTR [rax],al
    3111:	ff 11                	call   QWORD PTR [rcx]
    3113:	00 00                	add    BYTE PTR [rax],al
    3115:	fd                   	std
    3116:	11 00                	adc    DWORD PTR [rax],eax
    3118:	00 00                	add    BYTE PTR [rax],al
    311a:	00 00                	add    BYTE PTR [rax],al
    311c:	21 2c 0e             	and    DWORD PTR [rsi+rcx*1],ebp
    311f:	00 00                	add    BYTE PTR [rax],al
    3121:	ec                   	in     al,dx
    3122:	1a 00                	sbb    al,BYTE PTR [rax]
    3124:	00 00                	add    BYTE PTR [rax],al
    3126:	00 00                	add    BYTE PTR [rax],al
    3128:	00 02                	add    BYTE PTR [rdx],al
    312a:	ec                   	in     al,dx
    312b:	1a 00                	sbb    al,BYTE PTR [rax]
    312d:	00 00                	add    BYTE PTR [rax],al
    312f:	00 00                	add    BYTE PTR [rax],al
    3131:	00 06                	add    BYTE PTR [rsi],al
    3133:	00 00                	add    BYTE PTR [rax],al
    3135:	00 00                	add    BYTE PTR [rax],al
    3137:	00 00                	add    BYTE PTR [rax],al
    3139:	00 40 2e             	add    BYTE PTR [rax+0x2e],al
    313c:	bb 0c 00 00 03       	mov    ebx,0x300000c
    3141:	4d 0e                	rex.WRB (bad)
    3143:	00 00                	add    BYTE PTR [rax],al
    3145:	07                   	(bad)
    3146:	12 00                	adc    al,BYTE PTR [rax]
    3148:	00 05 12 00 00 03    	add    BYTE PTR [rip+0x3000012],al        # 3003160 <_end+0x2ffd148>
    314e:	40 0e                	rex (bad)
    3150:	00 00                	add    BYTE PTR [rax],al
    3152:	10 12                	adc    BYTE PTR [rdx],dl
    3154:	00 00                	add    BYTE PTR [rax],al
    3156:	0e                   	(bad)
    3157:	12 00                	adc    al,BYTE PTR [rax]
    3159:	00 15 5a 0e 00 00    	add    BYTE PTR [rip+0xe5a],dl        # 3fb9 <_fini+0x625>
    315f:	19 12                	sbb    DWORD PTR [rdx],edx
    3161:	00 00                	add    BYTE PTR [rax],al
    3163:	17                   	(bad)
    3164:	12 00                	adc    al,BYTE PTR [rax]
    3166:	00 38                	add    BYTE PTR [rax],bh
    3168:	c6                   	(bad)
    3169:	0e                   	(bad)
    316a:	00 00                	add    BYTE PTR [rax],al
    316c:	ec                   	in     al,dx
    316d:	1a 00                	sbb    al,BYTE PTR [rax]
    316f:	00 00                	add    BYTE PTR [rax],al
    3171:	00 00                	add    BYTE PTR [rax],al
    3173:	00 05 ec 1a 00 00    	add    BYTE PTR [rip+0x1aec],al        # 4c65 <__GNU_EH_FRAME_HDR+0x5dd>
    3179:	00 00                	add    BYTE PTR [rax],al
    317b:	00 00                	add    BYTE PTR [rax],al
    317d:	06                   	(bad)
    317e:	00 00                	add    BYTE PTR [rax],al
    3180:	00 00                	add    BYTE PTR [rax],al
    3182:	00 00                	add    BYTE PTR [rax],al
    3184:	00 02                	add    BYTE PTR [rdx],al
    3186:	31 02                	xor    DWORD PTR [rdx],eax
    3188:	1c 03                	sbb    al,0x3
    318a:	e7 0e                	out    0xe,eax
    318c:	00 00                	add    BYTE PTR [rax],al
    318e:	21 12                	and    DWORD PTR [rdx],edx
    3190:	00 00                	add    BYTE PTR [rax],al
    3192:	1f                   	(bad)
    3193:	12 00                	adc    al,BYTE PTR [rax]
    3195:	00 03                	add    BYTE PTR [rbx],al
    3197:	da 0e                	fimul  DWORD PTR [rsi]
    3199:	00 00                	add    BYTE PTR [rax],al
    319b:	2a 12                	sub    dl,BYTE PTR [rdx]
    319d:	00 00                	add    BYTE PTR [rax],al
    319f:	28 12                	sub    BYTE PTR [rdx],dl
    31a1:	00 00                	add    BYTE PTR [rax],al
    31a3:	00 00                	add    BYTE PTR [rax],al
    31a5:	0d 97 0e 00 00       	or     eax,0xe97
    31aa:	13 1b                	adc    ebx,DWORD PTR [rbx]
    31ac:	00 00                	add    BYTE PTR [rax],al
    31ae:	00 00                	add    BYTE PTR [rax],al
    31b0:	00 00                	add    BYTE PTR [rax],al
    31b2:	06                   	(bad)
    31b3:	78 01                	js     31b6 <_Z7testAllPKcjS0_j+0x486>
    31b5:	00 00                	add    BYTE PTR [rax],al
    31b7:	47 1a e6             	rex.RXB sbb r12b,r14b
    31ba:	0c 00                	or     al,0x0
    31bc:	00 20                	add    BYTE PTR [rax],ah
    31be:	b8 0e 00 00 03       	mov    eax,0x300000e
    31c3:	ab                   	stos   DWORD PTR es:[rdi],eax
    31c4:	0e                   	(bad)
    31c5:	00 00                	add    BYTE PTR [rax],al
    31c7:	32 12                	xor    dl,BYTE PTR [rdx]
    31c9:	00 00                	add    BYTE PTR [rax],al
    31cb:	30 12                	xor    BYTE PTR [rdx],dl
    31cd:	00 00                	add    BYTE PTR [rax],al
    31cf:	00 0d 2c 0e 00 00    	add    BYTE PTR [rip+0xe2c],cl        # 4001 <_IO_stdin_used+0x1>
    31d5:	05 1b 00 00 00       	add    eax,0x1b
    31da:	00 00                	add    BYTE PTR [rax],al
    31dc:	00 02                	add    BYTE PTR [rdx],al
    31de:	82                   	(bad)
    31df:	01 00                	add    DWORD PTR [rax],eax
    31e1:	00 42 2e             	add    BYTE PTR [rdx+0x2e],al
    31e4:	59                   	pop    rcx
    31e5:	0d 00 00 03 4d       	or     eax,0x4d030000
    31ea:	0e                   	(bad)
    31eb:	00 00                	add    BYTE PTR [rax],al
    31ed:	43 12 00             	rex.XB adc al,BYTE PTR [r8]
    31f0:	00 41 12             	add    BYTE PTR [rcx+0x12],al
    31f3:	00 00                	add    BYTE PTR [rax],al
    31f5:	03 40 0e             	add    eax,DWORD PTR [rax+0xe]
    31f8:	00 00                	add    BYTE PTR [rax],al
    31fa:	4c 12 00             	rex.WR adc r8b,BYTE PTR [rax]
    31fd:	00 4a 12             	add    BYTE PTR [rdx+0x12],cl
    3200:	00 00                	add    BYTE PTR [rax],al
    3202:	0e                   	(bad)
    3203:	82                   	(bad)
    3204:	01 00                	add    DWORD PTR [rax],eax
    3206:	00 15 5a 0e 00 00    	add    BYTE PTR [rip+0xe5a],dl        # 4066 <_IO_stdin_used+0x66>
    320c:	55                   	push   rbp
    320d:	12 00                	adc    al,BYTE PTR [rax]
    320f:	00 53 12             	add    BYTE PTR [rbx+0x12],dl
    3212:	00 00                	add    BYTE PTR [rax],al
    3214:	1c c6                	sbb    al,0xc6
    3216:	0e                   	(bad)
    3217:	00 00                	add    BYTE PTR [rax],al
    3219:	05 1b 00 00 00       	add    eax,0x1b
    321e:	00 00                	add    BYTE PTR [rax],al
    3220:	00 05 82 01 00 00    	add    BYTE PTR [rip+0x182],al        # 33a8 <_Z7testAllPKcjS0_j+0x678>
    3226:	03 e7                	add    esp,edi
    3228:	0e                   	(bad)
    3229:	00 00                	add    BYTE PTR [rax],al
    322b:	5d                   	pop    rbp
    322c:	12 00                	adc    al,BYTE PTR [rax]
    322e:	00 5b 12             	add    BYTE PTR [rbx+0x12],bl
    3231:	00 00                	add    BYTE PTR [rax],al
    3233:	03 da                	add    ebx,edx
    3235:	0e                   	(bad)
    3236:	00 00                	add    BYTE PTR [rax],al
    3238:	66 12 00             	data16 adc al,BYTE PTR [rax]
    323b:	00 64 12 00          	add    BYTE PTR [rdx+rdx*1+0x0],ah
    323f:	00 00                	add    BYTE PTR [rax],al
    3241:	00 00                	add    BYTE PTR [rax],al
    3243:	0d 97 0e 00 00       	or     eax,0xe97
    3248:	13 1b                	adc    ebx,DWORD PTR [rbx]
    324a:	00 00                	add    BYTE PTR [rax],al
    324c:	00 00                	add    BYTE PTR [rax],al
    324e:	00 00                	add    BYTE PTR [rax],al
    3250:	0a 89 01 00 00 48    	or     cl,BYTE PTR [rcx+0x48000001]
    3256:	1a 8c 0d 00 00 03 b8 	sbb    cl,BYTE PTR [rbp+rcx*1-0x47fd0000]
    325d:	0e                   	(bad)
    325e:	00 00                	add    BYTE PTR [rax],al
    3260:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3261:	12 00                	adc    al,BYTE PTR [rax]
    3263:	00 6c 12 00          	add    BYTE PTR [rdx+rdx*1+0x0],ch
    3267:	00 03                	add    BYTE PTR [rbx],al
    3269:	ab                   	stos   DWORD PTR es:[rdi],eax
    326a:	0e                   	(bad)
    326b:	00 00                	add    BYTE PTR [rax],al
    326d:	76 12                	jbe    3281 <_Z7testAllPKcjS0_j+0x551>
    326f:	00 00                	add    BYTE PTR [rax],al
    3271:	74 12                	je     3285 <_Z7testAllPKcjS0_j+0x555>
    3273:	00 00                	add    BYTE PTR [rax],al
    3275:	00 21                	add    BYTE PTR [rcx],ah
    3277:	97                   	xchg   edi,eax
    3278:	0e                   	(bad)
    3279:	00 00                	add    BYTE PTR [rax],al
    327b:	1b 1b                	sbb    ebx,DWORD PTR [rbx]
    327d:	00 00                	add    BYTE PTR [rax],al
    327f:	00 00                	add    BYTE PTR [rax],al
    3281:	00 00                	add    BYTE PTR [rax],al
    3283:	02 1b                	add    bl,BYTE PTR [rbx]
    3285:	1b 00                	sbb    eax,DWORD PTR [rax]
    3287:	00 00                	add    BYTE PTR [rax],al
    3289:	00 00                	add    BYTE PTR [rax],al
    328b:	00 06                	add    BYTE PTR [rsi],al
    328d:	00 00                	add    BYTE PTR [rax],al
    328f:	00 00                	add    BYTE PTR [rax],al
    3291:	00 00                	add    BYTE PTR [rax],al
    3293:	00 49 1a             	add    BYTE PTR [rcx+0x1a],cl
    3296:	cb                   	retf
    3297:	0d 00 00 03 b8       	or     eax,0xb8030000
    329c:	0e                   	(bad)
    329d:	00 00                	add    BYTE PTR [rax],al
    329f:	87 12                	xchg   DWORD PTR [rdx],edx
    32a1:	00 00                	add    BYTE PTR [rax],al
    32a3:	85 12                	test   DWORD PTR [rdx],edx
    32a5:	00 00                	add    BYTE PTR [rax],al
    32a7:	03 ab 0e 00 00 8f    	add    ebp,DWORD PTR [rbx-0x70fffff2]
    32ad:	12 00                	adc    al,BYTE PTR [rax]
    32af:	00 8d 12 00 00 00    	add    BYTE PTR [rbp+0x12],cl
    32b5:	39 28                	cmp    DWORD PTR [rax],ebp
    32b7:	1b 00                	sbb    eax,DWORD PTR [rax]
    32b9:	00 00                	add    BYTE PTR [rax],al
    32bb:	00 00                	add    BYTE PTR [rax],al
    32bd:	00 01                	add    BYTE PTR [rcx],al
    32bf:	30 00                	xor    BYTE PTR [rax],al
    32c1:	1b c7                	sbb    eax,edi
    32c3:	08 00                	or     BYTE PTR [rax],al
    32c5:	00 1f                	add    BYTE PTR [rdi],bl
    32c7:	46 08 00             	rex.RX or BYTE PTR [rax],r8b
    32ca:	00 96 00 00 00 00    	add    BYTE PTR [rsi+0x0],dl
    32d0:	0e                   	(bad)
    32d1:	00 00                	add    BYTE PTR [rax],al
    32d3:	13 ae 03 00 00 1f    	adc    ebp,DWORD PTR [rsi+0x1f000003]
    32d9:	27                   	(bad)
    32da:	bc 08 00 00 14       	mov    esp,0x14000008
    32df:	82                   	(bad)
    32e0:	04 00                	add    al,0x0
    32e2:	00 20                	add    BYTE PTR [rax],ah
    32e4:	0e                   	(bad)
    32e5:	96                   	xchg   esi,eax
    32e6:	00 00                	add    BYTE PTR [rax],al
    32e8:	00 00                	add    BYTE PTR [rax],al
    32ea:	3a cb                	cmp    cl,bl
    32ec:	08 00                	or     BYTE PTR [rax],al
    32ee:	00 01                	add    BYTE PTR [rcx],al
    32f0:	0b 0a                	or     ecx,DWORD PTR [rdx]
    32f2:	67 08 00             	or     BYTE PTR [eax],al
    32f5:	00 96 00 00 00 01    	add    BYTE PTR [rsi+0x1000000],dl
    32fb:	2c 0e                	sub    al,0xe
    32fd:	00 00                	add    BYTE PTR [rax],al
    32ff:	13 ae 03 00 00 0b    	adc    ebp,DWORD PTR [rsi+0xb000003]
    3305:	23 bc 08 00 00 14 82 	and    edi,DWORD PTR [rax+rcx*1-0x7dec0000]
    330c:	04 00                	add    al,0x0
    330e:	00 0c 0e             	add    BYTE PTR [rsi+rcx*1],cl
    3311:	96                   	xchg   esi,eax
    3312:	00 00                	add    BYTE PTR [rax],al
    3314:	00 00                	add    BYTE PTR [rax],al
    3316:	16                   	(bad)
    3317:	62 06 00 00 02       	(bad)
    331c:	2e 02 bf 06 00 00 bf 	cs add bh,BYTE PTR [rdi-0x40fffffa]
    3323:	00 00                	add    BYTE PTR [rax],al
    3325:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    3328:	00 00                	add    BYTE PTR [rax],al
    332a:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    332d:	58                   	pop    rax
    332e:	00 02                	add    BYTE PTR [rdx],al
    3330:	2e 02 1f             	cs add bl,BYTE PTR [rdi]
    3333:	44 08 00             	or     BYTE PTR [rax],r8b
    3336:	00 09                	add    BYTE PTR [rcx],cl
    3338:	5f                   	pop    rdi
    3339:	5f                   	pop    rdi
    333a:	4e 00 02             	rex.WRX add BYTE PTR [rdx],r8b
    333d:	2e 02 2e             	cs add ch,BYTE PTR [rsi]
    3340:	5f                   	pop    rdi
    3341:	00 00                	add    BYTE PTR [rax],al
    3343:	00 3b                	add    BYTE PTR [rbx],bh
    3345:	5f                   	pop    rdi
    3346:	5f                   	pop    rdi
    3347:	59                   	pop    rcx
    3348:	00 02                	add    BYTE PTR [rdx],al
    334a:	30 02                	xor    BYTE PTR [rdx],al
    334c:	0b 14 08             	or     edx,DWORD PTR [rax+rcx*1]
    334f:	00 00                	add    BYTE PTR [rax],al
    3351:	00 16                	add    BYTE PTR [rsi],dl
    3353:	24 04                	and    al,0x4
    3355:	00 00                	add    BYTE PTR [rax],al
    3357:	02 12                	add    dl,BYTE PTR [rdx]
    3359:	02 de                	add    bl,dh
    335b:	05 00 00 14 08       	add    eax,0x8140000
    3360:	00 00                	add    BYTE PTR [rax],al
    3362:	97                   	xchg   edi,eax
    3363:	0e                   	(bad)
    3364:	00 00                	add    BYTE PTR [rax],al
    3366:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    3369:	58                   	pop    rax
    336a:	00 02                	add    BYTE PTR [rdx],al
    336c:	12 02                	adc    al,BYTE PTR [rdx]
    336e:	23 44 08 00          	and    eax,DWORD PTR [rax+rcx*1+0x0]
    3372:	00 09                	add    BYTE PTR [rcx],cl
    3374:	5f                   	pop    rdi
    3375:	5f                   	pop    rdi
    3376:	4e 00 02             	rex.WRX add BYTE PTR [rdx],r8b
    3379:	12 02                	adc    al,BYTE PTR [rdx]
    337b:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    337e:	00 00                	add    BYTE PTR [rax],al
    3380:	00 16                	add    BYTE PTR [rsi],dl
    3382:	1f                   	(bad)
    3383:	08 00                	or     BYTE PTR [rax],al
    3385:	00 03                	add    BYTE PTR [rbx],al
    3387:	49 03 42 03          	add    rax,QWORD PTR [r10+0x3]
    338b:	00 00                	add    BYTE PTR [rax],al
    338d:	cd 00                	int    0x0
    338f:	00 00                	add    BYTE PTR [rax],al
    3391:	c6                   	(bad)
    3392:	0e                   	(bad)
    3393:	00 00                	add    BYTE PTR [rax],al
    3395:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    3398:	43 00 03             	rex.XB add BYTE PTR [r11],al
    339b:	49 03 23             	add    rsp,QWORD PTR [r11]
    339e:	cd 00                	int    0x0
    33a0:	00 00                	add    BYTE PTR [rax],al
    33a2:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    33a5:	56                   	push   rsi
    33a6:	00 03                	add    BYTE PTR [rbx],al
    33a8:	49 03 3b             	add    rdi,QWORD PTR [r11]
    33ab:	cd 00                	int    0x0
    33ad:	00 00                	add    BYTE PTR [rax],al
    33af:	00 16                	add    BYTE PTR [rsi],dl
    33b1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    33b4:	00 03                	add    BYTE PTR [rbx],al
    33b6:	c7 01 cd 04 00 00    	mov    DWORD PTR [rcx],0x4cd
    33bc:	bf 00 00 00 f5       	mov    edi,0xf5000000
    33c1:	0e                   	(bad)
    33c2:	00 00                	add    BYTE PTR [rax],al
    33c4:	09 5f 5f             	or     DWORD PTR [rdi+0x5f],ebx
    33c7:	58                   	pop    rax
    33c8:	00 03                	add    BYTE PTR [rbx],al
    33ca:	c7 01 1c 14 08 00    	mov    DWORD PTR [rcx],0x8141c
    33d0:	00 09                	add    BYTE PTR [rcx],cl
    33d2:	5f                   	pop    rdi
    33d3:	5f                   	pop    rdi
    33d4:	4e 00 03             	rex.WRX add BYTE PTR [rbx],r8b
    33d7:	c7 01 2b 5f 00 00    	mov    DWORD PTR [rcx],0x5f2b
    33dd:	00 00                	add    BYTE PTR [rax],al
    33df:	3c 00                	cmp    al,0x0
    33e1:	0e                   	(bad)
    33e2:	00 00                	add    BYTE PTR [rax],al
    33e4:	67 08 00             	or     BYTE PTR [eax],al
    33e7:	00 b0 1a 00 00 00    	add    BYTE PTR [rax+0x1a],dh
    33ed:	00 00                	add    BYTE PTR [rax],al
    33ef:	00 07                	add    BYTE PTR [rdi],al
    33f1:	00 00                	add    BYTE PTR [rax],al
    33f3:	00 00                	add    BYTE PTR [rax],al
    33f5:	00 00                	add    BYTE PTR [rax],al
    33f7:	00 01                	add    BYTE PTR [rcx],al
    33f9:	9c                   	pushf
    33fa:	3d 15 0e 00 00       	cmp    eax,0xe15
    33ff:	02 91 00 3e 20 0e    	add    dl,BYTE PTR [rcx+0xe203e00]
    3405:	00 00                	add    BYTE PTR [rax],al
    3407:	00 00                	add    BYTE PTR [rax],al
    3409:	00 bc 11 00 00 05 00 	add    BYTE PTR [rcx+rdx*1+0x50000],bh
    3410:	01 08                	add    DWORD PTR [rax],ecx
    3412:	1d 0c 00 00 29       	sbb    eax,0x2900000c
    3417:	33 00                	xor    eax,DWORD PTR [rax]
    3419:	00 00                	add    BYTE PTR [rax],al
    341b:	21 25 02 00 00 00    	and    DWORD PTR [rip+0x2],esp        # 3423 <_Z7testAllPKcjS0_j+0x6f3>
    3421:	00 00                	add    BYTE PTR [rax],al
    3423:	00 70 1e             	add    BYTE PTR [rax+0x1e],dh
    3426:	00 00                	add    BYTE PTR [rax],al
    3428:	00 00                	add    BYTE PTR [rax],al
    342a:	00 00                	add    BYTE PTR [rax],al
    342c:	9e                   	sahf
    342d:	03 00                	add    eax,DWORD PTR [rax]
    342f:	00 00                	add    BYTE PTR [rax],al
    3431:	00 00                	add    BYTE PTR [rax],al
    3433:	00 5f 0e             	add    BYTE PTR [rdi+0xe],bl
    3436:	00 00                	add    BYTE PTR [rax],al
    3438:	07                   	(bad)
    3439:	2f                   	(bad)
    343a:	0b 00                	or     eax,DWORD PTR [rax]
    343c:	00 03                	add    BYTE PTR [rbx],al
    343e:	d6                   	(bad)
    343f:	17                   	(bad)
    3440:	3a 00                	cmp    al,BYTE PTR [rax]
    3442:	00 00                	add    BYTE PTR [rax],al
    3444:	05 08 07 a0 01       	add    eax,0x1a00708
    3449:	00 00                	add    BYTE PTR [rax],al
    344b:	16                   	(bad)
    344c:	08 3c e3             	or     BYTE PTR [rbx+riz*8],bh
    344f:	02 00                	add    al,BYTE PTR [rax]
    3451:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    3454:	00 00                	add    BYTE PTR [rax],al
    3456:	06                   	(bad)
    3457:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3458:	02 00                	add    al,BYTE PTR [rax]
    345a:	00 04 3d 09 66 00 00 	add    BYTE PTR [rdi*1+0x6609],al
    3461:	00 00                	add    BYTE PTR [rax],al
    3463:	17                   	(bad)
    3464:	72 65                	jb     34cb <_Z7testAllPKcjS0_j+0x79b>
    3466:	6d                   	ins    DWORD PTR es:[rdi],dx
    3467:	00 3e                	add    BYTE PTR [rsi],bh
    3469:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    346c:	00 00                	add    BYTE PTR [rax],al
    346e:	04 00                	add    al,0x0
    3470:	2a 04 05 69 6e 74 00 	sub    al,BYTE PTR [rax*1+0x746e69]
    3477:	0e                   	(bad)
    3478:	66 00 00             	data16 add BYTE PTR [rax],al
    347b:	00 07                	add    BYTE PTR [rdi],al
    347d:	e4 02                	in     al,0x2
    347f:	00 00                	add    BYTE PTR [rax],al
    3481:	04 3f                	add    al,0x3f
    3483:	05 41 00 00 00       	add    eax,0x41
    3488:	16                   	(bad)
    3489:	10 44 09 00          	adc    BYTE PTR [rcx+rcx*1+0x0],al
    348d:	00 00                	add    BYTE PTR [rax],al
    348f:	a3 00 00 00 06 6e 02 	movabs ds:0x26e06000000,eax
    3496:	00 00 
    3498:	04 45                	add    al,0x45
    349a:	0e                   	(bad)
    349b:	a3 00 00 00 00 17 72 	movabs ds:0x6d65721700000000,eax
    34a2:	65 6d 
    34a4:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    34a7:	a3 00 00 00 08 00 05 	movabs ds:0x508050008000000,eax
    34ae:	08 05 
    34b0:	92                   	xchg   edx,eax
    34b1:	01 00                	add    DWORD PTR [rax],eax
    34b3:	00 07                	add    BYTE PTR [rdi],al
    34b5:	0a 00                	or     al,BYTE PTR [rax]
    34b7:	00 00                	add    BYTE PTR [rax],al
    34b9:	04 47                	add    al,0x47
    34bb:	05 7e 00 00 00       	add    eax,0x7e
    34c0:	16                   	(bad)
    34c1:	10 4e d4             	adc    BYTE PTR [rsi-0x2c],cl
    34c4:	01 00                	add    DWORD PTR [rax],eax
    34c6:	00 db                	add    bl,bl
    34c8:	00 00                	add    BYTE PTR [rax],al
    34ca:	00 06                	add    BYTE PTR [rsi],al
    34cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34cd:	02 00                	add    al,BYTE PTR [rax]
    34cf:	00 04 4f             	add    BYTE PTR [rdi+rcx*2],al
    34d2:	13 db                	adc    ebx,ebx
    34d4:	00 00                	add    BYTE PTR [rax],al
    34d6:	00 00                	add    BYTE PTR [rax],al
    34d8:	17                   	(bad)
    34d9:	72 65                	jb     3540 <_Z21standartDeviationTimePdjd+0x40>
    34db:	6d                   	ins    DWORD PTR es:[rdi],dx
    34dc:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    34df:	db 00                	fild   DWORD PTR [rax]
    34e1:	00 00                	add    BYTE PTR [rax],al
    34e3:	08 00                	or     BYTE PTR [rax],al
    34e5:	05 08 05 8d 01       	add    eax,0x18d0508
    34ea:	00 00                	add    BYTE PTR [rax],al
    34ec:	07                   	(bad)
    34ed:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
    34f1:	04 51                	add    al,0x51
    34f3:	05 b6 00 00 00       	add    eax,0xb6
    34f8:	05 02 07 73 02       	add    eax,0x2730702
    34fd:	00 00                	add    BYTE PTR [rax],al
    34ff:	08 01                	or     BYTE PTR [rcx],al
    3501:	01 00                	add    DWORD PTR [rax],eax
    3503:	00 05 01 06 2d 02    	add    BYTE PTR [rip+0x22d0601],al        # 22d3b0a <_end+0x22cdaf2>
    3509:	00 00                	add    BYTE PTR [rax],al
    350b:	0e                   	(bad)
    350c:	fa                   	cli
    350d:	00 00                	add    BYTE PTR [rax],al
    350f:	00 05 01 08 24 02    	add    BYTE PTR [rip+0x2240801],al        # 2243d16 <_end+0x223dcfe>
    3515:	00 00                	add    BYTE PTR [rax],al
    3517:	05 04 07 a5 01       	add    eax,0x1a50704
    351c:	00 00                	add    BYTE PTR [rax],al
    351e:	05 01 06 26 02       	add    eax,0x2260601
    3523:	00 00                	add    BYTE PTR [rax],al
    3525:	05 02 05 05 01       	add    eax,0x1050502
    352a:	00 00                	add    BYTE PTR [rax],al
    352c:	07                   	(bad)
    352d:	53                   	push   rbx
    352e:	01 00                	add    DWORD PTR [rax],eax
    3530:	00 05 2a 16 0d 01    	add    BYTE PTR [rip+0x10d162a],al        # 10d4b60 <_end+0x10ceb48>
    3536:	00 00                	add    BYTE PTR [rax],al
    3538:	2b 08                	sub    ecx,DWORD PTR [rax]
    353a:	20 2e                	and    BYTE PTR [rsi],ch
    353c:	01 00                	add    DWORD PTR [rax],eax
    353e:	00 08                	add    BYTE PTR [rax],cl
    3540:	fa                   	cli
    3541:	00 00                	add    BYTE PTR [rax],al
    3543:	00 05 08 07 9b 01    	add    BYTE PTR [rip+0x19b0708],al        # 19b3c51 <_end+0x19adc39>
    3549:	00 00                	add    BYTE PTR [rax],al
    354b:	2c d5                	sub    al,0xd5
    354d:	02 00                	add    al,BYTE PTR [rax]
    354f:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    3552:	03 0f                	add    ecx,DWORD PTR [rdi]
    3554:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
    3557:	00 08                	add    BYTE PTR [rax],cl
    3559:	53                   	push   rbx
    355a:	01 00                	add    DWORD PTR [rax],eax
    355c:	00 2d 66 00 00 00    	add    BYTE PTR [rip+0x66],ch        # 35c8 <_Z21standartDeviationTimePdjd+0xc8>
    3562:	67 01 00             	add    DWORD PTR [eax],eax
    3565:	00 01                	add    BYTE PTR [rcx],al
    3567:	67 01 00             	add    DWORD PTR [eax],eax
    356a:	00 01                	add    BYTE PTR [rcx],al
    356c:	67 01 00             	add    DWORD PTR [eax],eax
    356f:	00 00                	add    BYTE PTR [rax],al
    3571:	08 71 01             	or     BYTE PTR [rcx+0x1],dh
    3574:	00 00                	add    BYTE PTR [rax],al
    3576:	20 67 01             	and    BYTE PTR [rdi+0x1],ah
    3579:	00 00                	add    BYTE PTR [rax],al
    357b:	2e 2f                	cs (bad)
    357d:	73 74                	jae    35f3 <_Z21standartDeviationTimePdjd+0xf3>
    357f:	64 00 12             	add    BYTE PTR fs:[rdx],dl
    3582:	32 01                	xor    al,BYTE PTR [rcx]
    3584:	0b 42 03             	or     eax,DWORD PTR [rdx+0x3]
    3587:	00 00                	add    BYTE PTR [rax],al
    3589:	02 06                	add    al,BYTE PTR [rsi]
    358b:	83 0b 72             	or     DWORD PTR [rbx],0x72
    358e:	00 00                	add    BYTE PTR [rax],al
    3590:	00 02                	add    BYTE PTR [rdx],al
    3592:	06                   	(bad)
    3593:	84 0b                	test   BYTE PTR [rbx],cl
    3595:	aa                   	stos   BYTE PTR es:[rdi],al
    3596:	00 00                	add    BYTE PTR [rax],al
    3598:	00 02                	add    BYTE PTR [rdx],al
    359a:	06                   	(bad)
    359b:	8a 0b                	mov    cl,BYTE PTR [rbx]
    359d:	42 03 00             	rex.X add eax,DWORD PTR [rax]
    35a0:	00 02                	add    BYTE PTR [rdx],al
    35a2:	06                   	(bad)
    35a3:	8d 0b                	lea    ecx,[rbx]
    35a5:	5e                   	pop    rsi
    35a6:	03 00                	add    eax,DWORD PTR [rax]
    35a8:	00 02                	add    BYTE PTR [rdx],al
    35aa:	06                   	(bad)
    35ab:	90                   	nop
    35ac:	0b 79 03             	or     edi,DWORD PTR [rcx+0x3]
    35af:	00 00                	add    BYTE PTR [rax],al
    35b1:	02 06                	add    al,BYTE PTR [rsi]
    35b3:	91                   	xchg   ecx,eax
    35b4:	0b 96 03 00 00 02    	or     edx,DWORD PTR [rsi+0x2000003]
    35ba:	06                   	(bad)
    35bb:	92                   	xchg   edx,eax
    35bc:	0b ac 03 00 00 02 06 	or     ebp,DWORD PTR [rbx+rax*1+0x6020000]
    35c3:	93                   	xchg   ebx,eax
    35c4:	0b c2                	or     eax,edx
    35c6:	03 00                	add    eax,DWORD PTR [rax]
    35c8:	00 02                	add    BYTE PTR [rdx],al
    35ca:	06                   	(bad)
    35cb:	95                   	xchg   ebp,eax
    35cc:	0b ec                	or     ebp,esp
    35ce:	03 00                	add    eax,DWORD PTR [rax]
    35d0:	00 02                	add    BYTE PTR [rdx],al
    35d2:	06                   	(bad)
    35d3:	98                   	cwde
    35d4:	0b 08                	or     ecx,DWORD PTR [rax]
    35d6:	04 00                	add    al,0x0
    35d8:	00 02                	add    BYTE PTR [rdx],al
    35da:	06                   	(bad)
    35db:	9a                   	(bad)
    35dc:	0b 1e                	or     ebx,DWORD PTR [rsi]
    35de:	04 00                	add    al,0x0
    35e0:	00 02                	add    BYTE PTR [rdx],al
    35e2:	06                   	(bad)
    35e3:	9d                   	popf
    35e4:	0b 39                	or     edi,DWORD PTR [rcx]
    35e6:	04 00                	add    al,0x0
    35e8:	00 02                	add    BYTE PTR [rdx],al
    35ea:	06                   	(bad)
    35eb:	9e                   	sahf
    35ec:	0b 54 04 00          	or     edx,DWORD PTR [rsp+rax*1+0x0]
    35f0:	00 02                	add    BYTE PTR [rdx],al
    35f2:	06                   	(bad)
    35f3:	9f                   	lahf
    35f4:	0b 85 04 00 00 02    	or     eax,DWORD PTR [rbp+0x2000004]
    35fa:	06                   	(bad)
    35fb:	a1 0b a5 04 00 00 02 	movabs eax,ds:0xa40602000004a50b
    3602:	06 a4 
    3604:	0b c5                	or     eax,ebp
    3606:	04 00                	add    al,0x0
    3608:	00 02                	add    BYTE PTR [rdx],al
    360a:	06                   	(bad)
    360b:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    360c:	0b d8                	or     ebx,eax
    360e:	04 00                	add    al,0x0
    3610:	00 02                	add    BYTE PTR [rdx],al
    3612:	06                   	(bad)
    3613:	a9 0b e5 04 00       	test   eax,0x4e50b
    3618:	00 02                	add    BYTE PTR [rdx],al
    361a:	06                   	(bad)
    361b:	aa                   	stos   BYTE PTR es:[rdi],al
    361c:	0b f6                	or     esi,esi
    361e:	04 00                	add    al,0x0
    3620:	00 02                	add    BYTE PTR [rdx],al
    3622:	06                   	(bad)
    3623:	ab                   	stos   DWORD PTR es:[rdi],eax
    3624:	0b 16                	or     edx,DWORD PTR [rsi]
    3626:	05 00 00 02 06       	add    eax,0x6020000
    362b:	ac                   	lods   al,BYTE PTR ds:[rsi]
    362c:	0b 39                	or     edi,DWORD PTR [rcx]
    362e:	05 00 00 02 06       	add    eax,0x6020000
    3633:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3634:	0b 5c 05 00          	or     ebx,DWORD PTR [rbp+rax*1+0x0]
    3638:	00 02                	add    BYTE PTR [rdx],al
    363a:	06                   	(bad)
    363b:	af                   	scas   eax,DWORD PTR es:[rdi]
    363c:	0b 72 05             	or     esi,DWORD PTR [rdx+0x5]
    363f:	00 00                	add    BYTE PTR [rax],al
    3641:	02 06                	add    al,BYTE PTR [rsi]
    3643:	b0 0b                	mov    al,0xb
    3645:	97                   	xchg   edi,eax
    3646:	05 00 00 02 06       	add    eax,0x6020000
    364b:	f4                   	hlt
    364c:	16                   	(bad)
    364d:	e2 00                	loop   364f <_Z21standartDeviationTimePdjd+0x14f>
    364f:	00 00                	add    BYTE PTR [rax],al
    3651:	02 06                	add    al,BYTE PTR [rsi]
    3653:	f9                   	stc
    3654:	16                   	(bad)
    3655:	f7 05 00 00 02 06 fa 	test   DWORD PTR [rip+0x6020000],0x61116fa        # 602365f <_end+0x601d647>
    365c:	16 11 06 
    365f:	00 00                	add    BYTE PTR [rax],al
    3661:	02 06                	add    al,BYTE PTR [rsi]
    3663:	fc                   	cld
    3664:	16                   	(bad)
    3665:	2c 06                	sub    al,0x6
    3667:	00 00                	add    BYTE PTR [rax],al
    3669:	02 06                	add    al,BYTE PTR [rsi]
    366b:	fd                   	std
    366c:	16                   	(bad)
    366d:	88 06                	mov    BYTE PTR [rsi],al
    366f:	00 00                	add    BYTE PTR [rax],al
    3671:	02 06                	add    al,BYTE PTR [rsi]
    3673:	fe                   	(bad)
    3674:	16                   	(bad)
    3675:	42 06                	rex.X (bad)
    3677:	00 00                	add    BYTE PTR [rax],al
    3679:	02 06                	add    al,BYTE PTR [rsi]
    367b:	ff 16                	call   QWORD PTR [rsi]
    367d:	65 06                	gs (bad)
    367f:	00 00                	add    BYTE PTR [rax],al
    3681:	30 06                	xor    BYTE PTR [rsi],al
    3683:	00 01                	add    BYTE PTR [rcx],al
    3685:	16                   	(bad)
    3686:	aa                   	stos   BYTE PTR es:[rdi],al
    3687:	06                   	(bad)
    3688:	00 00                	add    BYTE PTR [rax],al
    368a:	0f 61 62 73          	punpcklwd mm4,DWORD PTR [rdx+0x73]
    368e:	00 89 15 03 00 00    	add    BYTE PTR [rcx+0x315],cl
    3694:	f4                   	hlt
    3695:	06                   	(bad)
    3696:	00 00                	add    BYTE PTR [rax],al
    3698:	98                   	cwde
    3699:	02 00                	add    al,BYTE PTR [rax]
    369b:	00 01                	add    BYTE PTR [rcx],al
    369d:	f4                   	hlt
    369e:	06                   	(bad)
    369f:	00 00                	add    BYTE PTR [rax],al
    36a1:	00 0f                	add    BYTE PTR [rdi],cl
    36a3:	61                   	(bad)
    36a4:	62 73 00 55 1b       	(bad)
    36a9:	00 00                	add    BYTE PTR [rax],al
    36ab:	00 03                	add    BYTE PTR [rbx],al
    36ad:	07                   	(bad)
    36ae:	00 00                	add    BYTE PTR [rax],al
    36b0:	b0 02                	mov    al,0x2
    36b2:	00 00                	add    BYTE PTR [rax],al
    36b4:	01 03                	add    DWORD PTR [rbx],eax
    36b6:	07                   	(bad)
    36b7:	00 00                	add    BYTE PTR [rax],al
    36b9:	00 0f                	add    BYTE PTR [rdi],cl
    36bb:	61                   	(bad)
    36bc:	62 73 00 4f 01       	(bad)
    36c1:	03 00                	add    eax,DWORD PTR [rax]
    36c3:	00 c5                	add    ch,al
    36c5:	06                   	(bad)
    36c6:	00 00                	add    BYTE PTR [rax],al
    36c8:	c8 02 00 00          	enter  0x2,0x0
    36cc:	01 c5                	add    ebp,eax
    36ce:	06                   	(bad)
    36cf:	00 00                	add    BYTE PTR [rax],al
    36d1:	00 0f                	add    BYTE PTR [rdi],cl
    36d3:	61                   	(bad)
    36d4:	62 73 00 4b 0b       	(bad)
    36d9:	03 00                	add    eax,DWORD PTR [rax]
    36db:	00 a3 06 00 00 e0    	add    BYTE PTR [rbx-0x1ffffffa],ah
    36e1:	02 00                	add    al,BYTE PTR [rax]
    36e3:	00 01                	add    BYTE PTR [rcx],al
    36e5:	a3 06 00 00 00 0f 61 	movabs ds:0x7362610f00000006,eax
    36ec:	62 73 
    36ee:	00 47 f7             	add    BYTE PTR [rdi-0x9],al
    36f1:	02 00                	add    al,BYTE PTR [rax]
    36f3:	00 8f 03 00 00 f8    	add    BYTE PTR [rdi-0x7fffffd],cl
    36f9:	02 00                	add    al,BYTE PTR [rax]
    36fb:	00 01                	add    BYTE PTR [rcx],al
    36fd:	8f 03                	pop    QWORD PTR [rbx]
    36ff:	00 00                	add    BYTE PTR [rax],al
    3701:	00 0f                	add    BYTE PTR [rdi],cl
    3703:	61                   	(bad)
    3704:	62 73 00 3d eb       	(bad)
    3709:	00 00                	add    BYTE PTR [rax],al
    370b:	00 db                	add    bl,bl
    370d:	00 00                	add    BYTE PTR [rax],al
    370f:	00 10                	add    BYTE PTR [rax],dl
    3711:	03 00                	add    eax,DWORD PTR [rax]
    3713:	00 01                	add    BYTE PTR [rcx],al
    3715:	db 00                	fild   DWORD PTR [rax]
    3717:	00 00                	add    BYTE PTR [rax],al
    3719:	00 0f                	add    BYTE PTR [rdi],cl
    371b:	61                   	(bad)
    371c:	62 73 00 38 11       	(bad)
    3721:	00 00                	add    BYTE PTR [rax],al
    3723:	00 a3 00 00 00 28    	add    BYTE PTR [rbx+0x28000000],ah
    3729:	03 00                	add    eax,DWORD PTR [rax]
    372b:	00 01                	add    BYTE PTR [rcx],al
    372d:	a3 00 00 00 00 21 64 	movabs ds:0x7669642100000000,eax
    3734:	69 76 
    3736:	00 b5 1e 01 00 00    	add    BYTE PTR [rbp+0x11e],dh
    373c:	aa                   	stos   BYTE PTR es:[rdi],al
    373d:	00 00                	add    BYTE PTR [rax],al
    373f:	00 01                	add    BYTE PTR [rcx],al
    3741:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
    3748:	00 00 
    374a:	00 00                	add    BYTE PTR [rax],al
    374c:	09 17                	or     DWORD PTR [rdi],edx
    374e:	01 00                	add    DWORD PTR [rax],eax
    3750:	00 de                	add    dh,bl
    3752:	02 0c 66             	add    cl,BYTE PTR [rsi+riz*2]
    3755:	00 00                	add    BYTE PTR [rax],al
    3757:	00 58 03             	add    BYTE PTR [rax+0x3],bl
    375a:	00 00                	add    BYTE PTR [rax],al
    375c:	01 58 03             	add    DWORD PTR [rax+0x3],ebx
    375f:	00 00                	add    BYTE PTR [rax],al
    3761:	00 08                	add    BYTE PTR [rax],cl
    3763:	5d                   	pop    rbp
    3764:	03 00                	add    eax,DWORD PTR [rax]
    3766:	00 31                	add    BYTE PTR [rcx],dh
    3768:	32 dd                	xor    bl,ch
    376a:	00 00                	add    BYTE PTR [rax],al
    376c:	00 04 e3             	add    BYTE PTR [rbx+riz*8],al
    376f:	02 12                	add    dl,BYTE PTR [rdx]
    3771:	dd 00                	fld    QWORD PTR [rax]
    3773:	00 00                	add    BYTE PTR [rax],al
    3775:	66 00 00             	data16 add BYTE PTR [rax],al
    3778:	00 79 03             	add    BYTE PTR [rcx+0x3],bh
    377b:	00 00                	add    BYTE PTR [rax],al
    377d:	01 58 03             	add    DWORD PTR [rax+0x3],ebx
    3780:	00 00                	add    BYTE PTR [rax],al
    3782:	00 0c f2             	add    BYTE PTR [rdx+rsi*8],cl
    3785:	01 00                	add    DWORD PTR [rax],eax
    3787:	00 08                	add    BYTE PTR [rax],cl
    3789:	19 01                	sbb    DWORD PTR [rcx],eax
    378b:	8f 03                	pop    QWORD PTR [rbx]
    378d:	00 00                	add    BYTE PTR [rax],al
    378f:	8f 03                	pop    QWORD PTR [rbx]
    3791:	00 00                	add    BYTE PTR [rax],al
    3793:	01 f5                	add    ebp,esi
    3795:	00 00                	add    BYTE PTR [rax],al
    3797:	00 00                	add    BYTE PTR [rax],al
    3799:	05 08 04 1d 02       	add    eax,0x21d0408
    379e:	00 00                	add    BYTE PTR [rax],al
    37a0:	09 f7                	or     edi,esi
    37a2:	01 00                	add    DWORD PTR [rax],eax
    37a4:	00 e1                	add    cl,ah
    37a6:	01 01                	add    DWORD PTR [rcx],eax
    37a8:	66 00 00             	data16 add BYTE PTR [rax],al
    37ab:	00 ac 03 00 00 01 f5 	add    BYTE PTR [rbx+rax*1-0xaff0000],ch
    37b2:	00 00                	add    BYTE PTR [rax],al
    37b4:	00 00                	add    BYTE PTR [rax],al
    37b6:	09 01                	or     DWORD PTR [rcx],eax
    37b8:	02 00                	add    al,BYTE PTR [rax]
    37ba:	00 e6                	add    dh,ah
    37bc:	01 01                	add    DWORD PTR [rcx],eax
    37be:	a3 00 00 00 c2 03 00 	movabs ds:0x1000003c2000000,eax
    37c5:	00 01 
    37c7:	f5                   	cmc
    37c8:	00 00                	add    BYTE PTR [rax],al
    37ca:	00 00                	add    BYTE PTR [rax],al
    37cc:	0c 0f                	or     al,0xf
    37ce:	01 00                	add    DWORD PTR [rax],eax
    37d0:	00 09                	add    BYTE PTR [rcx],cl
    37d2:	14 01                	adc    al,0x1
    37d4:	2e 01 00             	cs add DWORD PTR [rax],eax
    37d7:	00 ec                	add    ah,ch
    37d9:	03 00                	add    eax,DWORD PTR [rax]
    37db:	00 01                	add    BYTE PTR [rcx],al
    37dd:	67 01 00             	add    DWORD PTR [eax],eax
    37e0:	00 01                	add    BYTE PTR [rcx],al
    37e2:	67 01 00             	add    DWORD PTR [eax],eax
    37e5:	00 01                	add    BYTE PTR [rcx],al
    37e7:	2e 00 00             	cs add BYTE PTR [rax],al
    37ea:	00 01                	add    BYTE PTR [rcx],al
    37ec:	2e 00 00             	cs add BYTE PTR [rax],al
    37ef:	00 01                	add    BYTE PTR [rcx],al
    37f1:	41 01 00             	add    DWORD PTR [r8],eax
    37f4:	00 00                	add    BYTE PTR [rax],al
    37f6:	33 64 69 76          	xor    esp,DWORD PTR [rcx+rbp*2+0x76]
    37fa:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    37fd:	03 0e                	add    ecx,DWORD PTR [rsi]
    37ff:	72 00                	jb     3801 <_Z27standartDeviationCollisionsP7HashMapf+0x1a1>
    3801:	00 00                	add    BYTE PTR [rax],al
    3803:	08 04 00             	or     BYTE PTR [rax+rax*1],al
    3806:	00 01                	add    BYTE PTR [rcx],al
    3808:	66 00 00             	data16 add BYTE PTR [rax],al
    380b:	00 01                	add    BYTE PTR [rcx],al
    380d:	66 00 00             	data16 add BYTE PTR [rax],al
    3810:	00 00                	add    BYTE PTR [rax],al
    3812:	09 6a 01             	or     DWORD PTR [rdx+0x1],ebp
    3815:	00 00                	add    BYTE PTR [rax],al
    3817:	05 03 0e 35 01       	add    eax,0x1350e03
    381c:	00 00                	add    BYTE PTR [rax],al
    381e:	1e                   	(bad)
    381f:	04 00                	add    al,0x0
    3821:	00 01                	add    BYTE PTR [rcx],al
    3823:	f5                   	cmc
    3824:	00 00                	add    BYTE PTR [rax],al
    3826:	00 00                	add    BYTE PTR [rax],al
    3828:	09 c9                	or     ecx,ecx
    382a:	02 00                	add    al,BYTE PTR [rax]
    382c:	00 e2                	add    dl,ah
    382e:	03 0f                	add    ecx,DWORD PTR [rdi]
    3830:	aa                   	stos   BYTE PTR es:[rdi],al
    3831:	00 00                	add    BYTE PTR [rax],al
    3833:	00 39                	add    BYTE PTR [rcx],bh
    3835:	04 00                	add    al,0x0
    3837:	00 01                	add    BYTE PTR [rcx],al
    3839:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
    3840:	00 00 
    3842:	00 09                	add    BYTE PTR [rcx],cl
    3844:	58                   	pop    rax
    3845:	02 00                	add    al,BYTE PTR [rax]
    3847:	00 26                	add    BYTE PTR [rsi],ah
    3849:	04 0c                	add    al,0xc
    384b:	66 00 00             	data16 add BYTE PTR [rax],al
    384e:	00 54 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dl
    3852:	00 01                	add    BYTE PTR [rcx],al
    3854:	f5                   	cmc
    3855:	00 00                	add    BYTE PTR [rax],al
    3857:	00 01                	add    BYTE PTR [rcx],al
    3859:	2e 00 00             	cs add BYTE PTR [rax],al
    385c:	00 00                	add    BYTE PTR [rax],al
    385e:	0c 5e                	or     al,0x5e
    3860:	02 00                	add    al,BYTE PTR [rax]
    3862:	00 0a                	add    BYTE PTR [rdx],cl
    3864:	75 01                	jne    3867 <_Z27standartDeviationCollisionsP7HashMapf+0x207>
    3866:	2e 00 00             	cs add BYTE PTR [rax],al
    3869:	00 74 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dh
    386d:	00 01                	add    BYTE PTR [rcx],al
    386f:	74 04                	je     3875 <_Z27standartDeviationCollisionsP7HashMapf+0x215>
    3871:	00 00                	add    BYTE PTR [rax],al
    3873:	01 f5                	add    ebp,esi
    3875:	00 00                	add    BYTE PTR [rax],al
    3877:	00 01                	add    BYTE PTR [rcx],al
    3879:	2e 00 00             	cs add BYTE PTR [rax],al
    387c:	00 00                	add    BYTE PTR [rax],al
    387e:	08 79 04             	or     BYTE PTR [rcx+0x4],bh
    3881:	00 00                	add    BYTE PTR [rax],al
    3883:	05 04 05 86 02       	add    eax,0x2860504
    3888:	00 00                	add    BYTE PTR [rax],al
    388a:	0e                   	(bad)
    388b:	79 04                	jns    3891 <_Z27standartDeviationCollisionsP7HashMapf+0x231>
    388d:	00 00                	add    BYTE PTR [rax],al
    388f:	09 86 01 00 00 29    	or     DWORD PTR [rsi+0x29000001],eax
    3895:	04 0c                	add    al,0xc
    3897:	66 00 00             	data16 add BYTE PTR [rax],al
    389a:	00 a5 04 00 00 01    	add    BYTE PTR [rbp+0x1000004],ah
    38a0:	74 04                	je     38a6 <_Z27standartDeviationCollisionsP7HashMapf+0x246>
    38a2:	00 00                	add    BYTE PTR [rax],al
    38a4:	01 f5                	add    ebp,esi
    38a6:	00 00                	add    BYTE PTR [rax],al
    38a8:	00 01                	add    BYTE PTR [rcx],al
    38aa:	2e 00 00             	cs add BYTE PTR [rax],al
    38ad:	00 00                	add    BYTE PTR [rax],al
    38af:	18 25 00 00 00 ca    	sbb    BYTE PTR [rip+0xffffffffca000000],ah        # ffffffffca0038b5 <_end+0xffffffffc9ffd89d>
    38b5:	03 c5                	add    eax,ebp
    38b7:	04 00                	add    al,0x0
    38b9:	00 01                	add    BYTE PTR [rcx],al
    38bb:	2e 01 00             	cs add DWORD PTR [rax],eax
    38be:	00 01                	add    BYTE PTR [rcx],al
    38c0:	2e 00 00             	cs add BYTE PTR [rax],al
    38c3:	00 01                	add    BYTE PTR [rcx],al
    38c5:	2e 00 00             	cs add BYTE PTR [rax],al
    38c8:	00 01                	add    BYTE PTR [rcx],al
    38ca:	41 01 00             	add    DWORD PTR [r8],eax
    38cd:	00 00                	add    BYTE PTR [rax],al
    38cf:	34 e0                	xor    al,0xe0
    38d1:	00 00                	add    BYTE PTR [rax],al
    38d3:	00 04 fa             	add    BYTE PTR [rdx+rdi*8],al
    38d6:	02 0d d8 04 00 00    	add    cl,BYTE PTR [rip+0x4d8]        # 3db4 <_fini+0x420>
    38dc:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    38df:	00 00                	add    BYTE PTR [rax],al
    38e1:	00 35 f2 02 00 00    	add    BYTE PTR [rip+0x2f2],dh        # 3bd9 <_fini+0x245>
    38e7:	04 3d                	add    al,0x3d
    38e9:	02 0c 66             	add    cl,BYTE PTR [rsi+riz*2]
    38ec:	00 00                	add    BYTE PTR [rax],al
    38ee:	00 18                	add    BYTE PTR [rax],bl
    38f0:	f1                   	int1
    38f1:	02 00                	add    al,BYTE PTR [rax]
    38f3:	00 3f                	add    BYTE PTR [rdi],bh
    38f5:	02 f6                	add    dh,dh
    38f7:	04 00                	add    al,0x0
    38f9:	00 01                	add    BYTE PTR [rcx],al
    38fb:	0d 01 00 00 00       	or     eax,0x1
    3900:	0c c5                	or     al,0xc5
    3902:	01 00                	add    DWORD PTR [rax],eax
    3904:	00 04 76             	add    BYTE PTR [rsi+rsi*2],al
    3907:	0f 8f 03 00 00 11    	jg     11003910 <_end+0x10ffd8f8>
    390d:	05 00 00 01 f5       	add    eax,0xf5010000
    3912:	00 00                	add    BYTE PTR [rax],al
    3914:	00 01                	add    BYTE PTR [rcx],al
    3916:	11 05 00 00 00 08    	adc    DWORD PTR [rip+0x8000000],eax        # 800391c <_end+0x7ffd904>
    391c:	35 01 00 00 14       	xor    eax,0x14000001
    3921:	fe 00                	inc    BYTE PTR [rax]
    3923:	00 00                	add    BYTE PTR [rax],al
    3925:	d7                   	xlat   BYTE PTR ds:[rbx]
    3926:	11 f5                	adc    ebp,esi
    3928:	00 00                	add    BYTE PTR [rax],al
    392a:	00 a3 00 00 00 39    	add    BYTE PTR [rbx+0x39000000],ah
    3930:	05 00 00 01 f5       	add    eax,0xf5010000
    3935:	00 00                	add    BYTE PTR [rax],al
    3937:	00 01                	add    BYTE PTR [rcx],al
    3939:	11 05 00 00 01 66    	adc    DWORD PTR [rip+0x66010000],eax        # 6601393f <_end+0x6600d927>
    393f:	00 00                	add    BYTE PTR [rax],al
    3941:	00 00                	add    BYTE PTR [rax],al
    3943:	14 4a                	adc    al,0x4a
    3945:	02 00                	add    al,BYTE PTR [rax]
    3947:	00 db                	add    bl,bl
    3949:	1a 41 02             	sbb    al,BYTE PTR [rcx+0x2]
    394c:	00 00                	add    BYTE PTR [rax],al
    394e:	3a 00                	cmp    al,BYTE PTR [rax]
    3950:	00 00                	add    BYTE PTR [rax],al
    3952:	5c                   	pop    rsp
    3953:	05 00 00 01 f5       	add    eax,0xf5010000
    3958:	00 00                	add    BYTE PTR [rax],al
    395a:	00 01                	add    BYTE PTR [rcx],al
    395c:	11 05 00 00 01 66    	adc    DWORD PTR [rip+0x66010000],eax        # 66013962 <_end+0x6600d94a>
    3962:	00 00                	add    BYTE PTR [rax],al
    3964:	00 00                	add    BYTE PTR [rax],al
    3966:	09 6f 26             	or     DWORD PTR [rdi+0x26],ebp
    3969:	00 00                	add    BYTE PTR [rax],al
    396b:	9b                   	fwait
    396c:	03 0c 66             	add    ecx,DWORD PTR [rsi+riz*2]
    396f:	00 00                	add    BYTE PTR [rax],al
    3971:	00 72 05             	add    BYTE PTR [rdx+0x5],dh
    3974:	00 00                	add    BYTE PTR [rax],al
    3976:	01 f5                	add    ebp,esi
    3978:	00 00                	add    BYTE PTR [rax],al
    397a:	00 00                	add    BYTE PTR [rax],al
    397c:	0c 06                	or     al,0x6
    397e:	02 00                	add    al,BYTE PTR [rax]
    3980:	00 0a                	add    BYTE PTR [rdx],cl
    3982:	8f 01                	pop    QWORD PTR [rcx]
    3984:	2e 00 00             	cs add BYTE PTR [rax],al
    3987:	00 92 05 00 00 01    	add    BYTE PTR [rdx+0x1000005],dl
    398d:	35 01 00 00 01       	xor    eax,0x1000001
    3992:	92                   	xchg   edx,eax
    3993:	05 00 00 01 2e       	add    eax,0x2e010000
    3998:	00 00                	add    BYTE PTR [rax],al
    399a:	00 00                	add    BYTE PTR [rax],al
    399c:	08 80 04 00 00 0c    	or     BYTE PTR [rax+0xc000004],al
    39a2:	67 02 00             	add    al,BYTE PTR [eax]
    39a5:	00 0a                	add    BYTE PTR [rdx],cl
    39a7:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    39ab:	00 00                	add    BYTE PTR [rax],al
    39ad:	b2 05                	mov    dl,0x5
    39af:	00 00                	add    BYTE PTR [rax],al
    39b1:	01 35 01 00 00 01    	add    DWORD PTR [rip+0x1000001],esi        # 10039b8 <_end+0xffd9a0>
    39b7:	79 04                	jns    39bd <_fini+0x29>
    39b9:	00 00                	add    BYTE PTR [rax],al
    39bb:	00 36                	add    BYTE PTR [rsi],dh
    39bd:	37                   	(bad)
    39be:	02 00                	add    al,BYTE PTR [rax]
    39c0:	00 12                	add    BYTE PTR [rdx],dl
    39c2:	57                   	push   rdi
    39c3:	01 0b                	add    DWORD PTR [rbx],ecx
    39c5:	11 06                	adc    DWORD PTR [rsi],eax
    39c7:	00 00                	add    BYTE PTR [rax],al
    39c9:	02 06                	add    al,BYTE PTR [rsi]
    39cb:	cc                   	int3
    39cc:	0b e2                	or     esp,edx
    39ce:	00 00                	add    BYTE PTR [rax],al
    39d0:	00 02                	add    BYTE PTR [rdx],al
    39d2:	06                   	(bad)
    39d3:	dc 0b                	fmul   QWORD PTR [rbx]
    39d5:	11 06                	adc    DWORD PTR [rsi],eax
    39d7:	00 00                	add    BYTE PTR [rax],al
    39d9:	02 06                	add    al,BYTE PTR [rsi]
    39db:	e7 0b                	out    0xb,eax
    39dd:	2c 06                	sub    al,0x6
    39df:	00 00                	add    BYTE PTR [rax],al
    39e1:	02 06                	add    al,BYTE PTR [rsi]
    39e3:	e8 0b 42 06 00       	call   67bf3 <_end+0x61bdb>
    39e8:	00 02                	add    BYTE PTR [rdx],al
    39ea:	06                   	(bad)
    39eb:	e9 0b 65 06 00       	jmp    69efb <_end+0x63ee3>
    39f0:	00 02                	add    BYTE PTR [rdx],al
    39f2:	06                   	(bad)
    39f3:	eb 0b                	jmp    3a00 <_fini+0x6c>
    39f5:	88 06                	mov    BYTE PTR [rsi],al
    39f7:	00 00                	add    BYTE PTR [rax],al
    39f9:	02 06                	add    al,BYTE PTR [rsi]
    39fb:	ec                   	in     al,dx
    39fc:	0b aa 06 00 00 21    	or     ebp,DWORD PTR [rdx+0x21000006]
    3a02:	64 69 76 00 d9 dd 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1ddd9
    3a09:	00 
    3a0a:	00 e2                	add    dl,ah
    3a0c:	00 00                	add    BYTE PTR [rax],al
    3a0e:	00 01                	add    BYTE PTR [rcx],al
    3a10:	db 00                	fild   DWORD PTR [rax]
    3a12:	00 00                	add    BYTE PTR [rax],al
    3a14:	01 db                	add    ebx,ebx
    3a16:	00 00                	add    BYTE PTR [rax],al
    3a18:	00 00                	add    BYTE PTR [rax],al
    3a1a:	00 09                	add    BYTE PTR [rcx],cl
    3a1c:	c8 02 00 00          	enter  0x2,0x0
    3a20:	e6 03                	out    0x3,al
    3a22:	1e                   	(bad)
    3a23:	e2 00                	loop   3a25 <_fini+0x91>
    3a25:	00 00                	add    BYTE PTR [rax],al
    3a27:	2c 06                	sub    al,0x6
    3a29:	00 00                	add    BYTE PTR [rax],al
    3a2b:	01 db                	add    ebx,ebx
    3a2d:	00 00                	add    BYTE PTR [rax],al
    3a2f:	00 01                	add    BYTE PTR [rcx],al
    3a31:	db 00                	fild   DWORD PTR [rax]
    3a33:	00 00                	add    BYTE PTR [rax],al
    3a35:	00 09                	add    BYTE PTR [rcx],cl
    3a37:	52                   	push   rdx
    3a38:	02 00                	add    al,BYTE PTR [rax]
    3a3a:	00 ed                	add    ch,ch
    3a3c:	01 01                	add    DWORD PTR [rcx],eax
    3a3e:	db 00                	fild   DWORD PTR [rax]
    3a40:	00 00                	add    BYTE PTR [rax],al
    3a42:	42 06                	rex.X (bad)
    3a44:	00 00                	add    BYTE PTR [rax],al
    3a46:	01 f5                	add    ebp,esi
    3a48:	00 00                	add    BYTE PTR [rax],al
    3a4a:	00 00                	add    BYTE PTR [rax],al
    3a4c:	14 32                	adc    al,0x32
    3a4e:	01 00                	add    DWORD PTR [rax],eax
    3a50:	00 ee                	add    dh,ch
    3a52:	16                   	(bad)
    3a53:	29 01                	sub    DWORD PTR [rcx],eax
    3a55:	00 00                	add    BYTE PTR [rax],al
    3a57:	db 00                	fild   DWORD PTR [rax]
    3a59:	00 00                	add    BYTE PTR [rax],al
    3a5b:	65 06                	gs (bad)
    3a5d:	00 00                	add    BYTE PTR [rax],al
    3a5f:	01 f5                	add    ebp,esi
    3a61:	00 00                	add    BYTE PTR [rax],al
    3a63:	00 01                	add    BYTE PTR [rcx],al
    3a65:	11 05 00 00 01 66    	adc    DWORD PTR [rip+0x66010000],eax        # 66013a6b <_end+0x6600da53>
    3a6b:	00 00                	add    BYTE PTR [rax],al
    3a6d:	00 00                	add    BYTE PTR [rax],al
    3a6f:	14 bf                	adc    al,0xbf
    3a71:	02 00                	add    al,BYTE PTR [rax]
    3a73:	00 f3                	add    bl,dh
    3a75:	1f                   	(bad)
    3a76:	b6 02                	mov    dh,0x2
    3a78:	00 00                	add    BYTE PTR [rax],al
    3a7a:	3a 01                	cmp    al,BYTE PTR [rcx]
    3a7c:	00 00                	add    BYTE PTR [rax],al
    3a7e:	88 06                	mov    BYTE PTR [rsi],al
    3a80:	00 00                	add    BYTE PTR [rax],al
    3a82:	01 f5                	add    ebp,esi
    3a84:	00 00                	add    BYTE PTR [rax],al
    3a86:	00 01                	add    BYTE PTR [rcx],al
    3a88:	11 05 00 00 01 66    	adc    DWORD PTR [rip+0x66010000],eax        # 66013a8e <_end+0x6600da76>
    3a8e:	00 00                	add    BYTE PTR [rax],al
    3a90:	00 00                	add    BYTE PTR [rax],al
    3a92:	0c af                	or     al,0xaf
    3a94:	02 00                	add    al,BYTE PTR [rax]
    3a96:	00 04 7c             	add    BYTE PTR [rsp+rdi*2],al
    3a99:	0e                   	(bad)
    3a9a:	a3 06 00 00 a3 06 00 	movabs ds:0x1000006a3000006,eax
    3aa1:	00 01 
    3aa3:	f5                   	cmc
    3aa4:	00 00                	add    BYTE PTR [rax],al
    3aa6:	00 01                	add    BYTE PTR [rcx],al
    3aa8:	11 05 00 00 00 05    	adc    DWORD PTR [rip+0x5000000],eax        # 5003aae <_end+0x4ffda96>
    3aae:	04 04                	add    al,0x4
    3ab0:	80 01 00             	add    BYTE PTR [rcx],0x0
    3ab3:	00 0c 2b             	add    BYTE PTR [rbx+rbp*1],cl
    3ab6:	00 00                	add    BYTE PTR [rax],al
    3ab8:	00 04 7f             	add    BYTE PTR [rdi+rdi*2],al
    3abb:	14 c5                	adc    al,0xc5
    3abd:	06                   	(bad)
    3abe:	00 00                	add    BYTE PTR [rax],al
    3ac0:	c5 06 00             	(bad)
    3ac3:	00 01                	add    BYTE PTR [rcx],al
    3ac5:	f5                   	cmc
    3ac6:	00 00                	add    BYTE PTR [rax],al
    3ac8:	00 01                	add    BYTE PTR [rcx],al
    3aca:	11 05 00 00 00 05    	adc    DWORD PTR [rip+0x5000000],eax        # 5003ad0 <_end+0x4ffdab8>
    3ad0:	10 04 18             	adc    BYTE PTR [rax+rbx*1],al
    3ad3:	02 00                	add    al,BYTE PTR [rax]
    3ad5:	00 02                	add    BYTE PTR [rdx],al
    3ad7:	0b 27                	or     esp,DWORD PTR [rdi]
    3ad9:	0c 42                	or     al,0x42
    3adb:	03 00                	add    eax,DWORD PTR [rax]
    3add:	00 02                	add    BYTE PTR [rdx],al
    3adf:	0b 2b                	or     ebp,DWORD PTR [rbx]
    3ae1:	0e                   	(bad)
    3ae2:	5e                   	pop    rsi
    3ae3:	03 00                	add    eax,DWORD PTR [rax]
    3ae5:	00 02                	add    BYTE PTR [rdx],al
    3ae7:	0b 2e                	or     ebp,DWORD PTR [rsi]
    3ae9:	0e                   	(bad)
    3aea:	c5 04 00             	(bad)
    3aed:	00 02                	add    BYTE PTR [rdx],al
    3aef:	0b 36                	or     esi,DWORD PTR [rsi]
    3af1:	0c 72                	or     al,0x72
    3af3:	00 00                	add    BYTE PTR [rax],al
    3af5:	00 02                	add    BYTE PTR [rdx],al
    3af7:	0b 37                	or     esi,DWORD PTR [rdi]
    3af9:	0c aa                	or     al,0xaa
    3afb:	00 00                	add    BYTE PTR [rax],al
    3afd:	00 05 10 04 a4 02    	add    BYTE PTR [rip+0x2a40410],al        # 2a43f13 <_end+0x2a3defb>
    3b03:	00 00                	add    BYTE PTR [rax],al
    3b05:	02 0b                	add    cl,BYTE PTR [rbx]
    3b07:	39 0c 80             	cmp    DWORD PTR [rax+rax*4],ecx
    3b0a:	02 00                	add    al,BYTE PTR [rax]
    3b0c:	00 05 10 05 0f 02    	add    BYTE PTR [rip+0x20f0510],al        # 20f4022 <_end+0x20ee00a>
    3b12:	00 00                	add    BYTE PTR [rax],al
    3b14:	02 0b                	add    cl,BYTE PTR [rbx]
    3b16:	39 0c 98             	cmp    DWORD PTR [rax+rbx*4],ecx
    3b19:	02 00                	add    al,BYTE PTR [rax]
    3b1b:	00 02                	add    BYTE PTR [rdx],al
    3b1d:	0b 39                	or     edi,DWORD PTR [rcx]
    3b1f:	0c b0                	or     al,0xb0
    3b21:	02 00                	add    al,BYTE PTR [rax]
    3b23:	00 02                	add    BYTE PTR [rdx],al
    3b25:	0b 39                	or     edi,DWORD PTR [rcx]
    3b27:	0c c8                	or     al,0xc8
    3b29:	02 00                	add    al,BYTE PTR [rax]
    3b2b:	00 02                	add    BYTE PTR [rdx],al
    3b2d:	0b 39                	or     edi,DWORD PTR [rcx]
    3b2f:	0c e0                	or     al,0xe0
    3b31:	02 00                	add    al,BYTE PTR [rax]
    3b33:	00 02                	add    BYTE PTR [rdx],al
    3b35:	0b 39                	or     edi,DWORD PTR [rcx]
    3b37:	0c f8                	or     al,0xf8
    3b39:	02 00                	add    al,BYTE PTR [rax]
    3b3b:	00 02                	add    BYTE PTR [rdx],al
    3b3d:	0b 39                	or     edi,DWORD PTR [rcx]
    3b3f:	0c 10                	or     al,0x10
    3b41:	03 00                	add    eax,DWORD PTR [rax]
    3b43:	00 02                	add    BYTE PTR [rdx],al
    3b45:	0b 3a                	or     edi,DWORD PTR [rdx]
    3b47:	0c 79                	or     al,0x79
    3b49:	03 00                	add    eax,DWORD PTR [rax]
    3b4b:	00 02                	add    BYTE PTR [rdx],al
    3b4d:	0b 3b                	or     edi,DWORD PTR [rbx]
    3b4f:	0c 96                	or     al,0x96
    3b51:	03 00                	add    eax,DWORD PTR [rax]
    3b53:	00 02                	add    BYTE PTR [rdx],al
    3b55:	0b 3c 0c             	or     edi,DWORD PTR [rsp+rcx*1]
    3b58:	ac                   	lods   al,BYTE PTR ds:[rsi]
    3b59:	03 00                	add    eax,DWORD PTR [rax]
    3b5b:	00 02                	add    BYTE PTR [rdx],al
    3b5d:	0b 3d 0c c2 03 00    	or     edi,DWORD PTR [rip+0x3c20c]        # 3fd6f <_end+0x39d57>
    3b63:	00 02                	add    BYTE PTR [rdx],al
    3b65:	0b 3f                	or     edi,DWORD PTR [rdi]
    3b67:	0c f7                	or     al,0xf7
    3b69:	05 00 00 02 0b       	add    eax,0xb020000
    3b6e:	3f                   	(bad)
    3b6f:	0c 28                	or     al,0x28
    3b71:	03 00                	add    eax,DWORD PTR [rax]
    3b73:	00 02                	add    BYTE PTR [rdx],al
    3b75:	0b 3f                	or     edi,DWORD PTR [rdi]
    3b77:	0c ec                	or     al,0xec
    3b79:	03 00                	add    eax,DWORD PTR [rax]
    3b7b:	00 02                	add    BYTE PTR [rdx],al
    3b7d:	0b 41 0c             	or     eax,DWORD PTR [rcx+0xc]
    3b80:	08 04 00             	or     BYTE PTR [rax+rax*1],al
    3b83:	00 02                	add    BYTE PTR [rdx],al
    3b85:	0b 43 0c             	or     eax,DWORD PTR [rbx+0xc]
    3b88:	1e                   	(bad)
    3b89:	04 00                	add    al,0x0
    3b8b:	00 02                	add    BYTE PTR [rdx],al
    3b8d:	0b 46 0c             	or     eax,DWORD PTR [rsi+0xc]
    3b90:	39 04 00             	cmp    DWORD PTR [rax+rax*1],eax
    3b93:	00 02                	add    BYTE PTR [rdx],al
    3b95:	0b 47 0c             	or     eax,DWORD PTR [rdi+0xc]
    3b98:	54                   	push   rsp
    3b99:	04 00                	add    al,0x0
    3b9b:	00 02                	add    BYTE PTR [rdx],al
    3b9d:	0b 48 0c             	or     ecx,DWORD PTR [rax+0xc]
    3ba0:	85 04 00             	test   DWORD PTR [rax+rax*1],eax
    3ba3:	00 02                	add    BYTE PTR [rdx],al
    3ba5:	0b 4a 0c             	or     ecx,DWORD PTR [rdx+0xc]
    3ba8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3ba9:	04 00                	add    al,0x0
    3bab:	00 02                	add    BYTE PTR [rdx],al
    3bad:	0b 4b 0c             	or     ecx,DWORD PTR [rbx+0xc]
    3bb0:	d8 04 00             	fadd   DWORD PTR [rax+rax*1]
    3bb3:	00 02                	add    BYTE PTR [rdx],al
    3bb5:	0b 4d 0c             	or     ecx,DWORD PTR [rbp+0xc]
    3bb8:	e5 04                	in     eax,0x4
    3bba:	00 00                	add    BYTE PTR [rax],al
    3bbc:	02 0b                	add    cl,BYTE PTR [rbx]
    3bbe:	4e 0c f6             	rex.WRX or al,0xf6
    3bc1:	04 00                	add    al,0x0
    3bc3:	00 02                	add    BYTE PTR [rdx],al
    3bc5:	0b 4f 0c             	or     ecx,DWORD PTR [rdi+0xc]
    3bc8:	16                   	(bad)
    3bc9:	05 00 00 02 0b       	add    eax,0xb020000
    3bce:	50                   	push   rax
    3bcf:	0c 39                	or     al,0x39
    3bd1:	05 00 00 02 0b       	add    eax,0xb020000
    3bd6:	51                   	push   rcx
    3bd7:	0c 5c                	or     al,0x5c
    3bd9:	05 00 00 02 0b       	add    eax,0xb020000
    3bde:	53                   	push   rbx
    3bdf:	0c 72                	or     al,0x72
    3be1:	05 00 00 02 0b       	add    eax,0xb020000
    3be6:	54                   	push   rsp
    3be7:	0c 97                	or     al,0x97
    3be9:	05 00 00 07 55       	add    eax,0x55070000
    3bee:	01 00                	add    DWORD PTR [rax],eax
    3bf0:	00 0c 1a             	add    BYTE PTR [rdx+rbx*1],cl
    3bf3:	14 22                	adc    al,0x22
    3bf5:	01 00                	add    DWORD PTR [rax],eax
    3bf7:	00 07                	add    BYTE PTR [rdi],al
    3bf9:	7a 04                	jp     3bff <_fini+0x26b>
    3bfb:	00 00                	add    BYTE PTR [rax],al
    3bfd:	0d 39 13 fa 07       	or     eax,0x7fa1339
    3c02:	00 00                	add    BYTE PTR [rax],al
    3c04:	37                   	(bad)
    3c05:	db 00                	fild   DWORD PTR [rax]
    3c07:	00 00                	add    BYTE PTR [rax],al
    3c09:	06                   	(bad)
    3c0a:	08 00                	or     BYTE PTR [rax],al
    3c0c:	00 38                	add    BYTE PTR [rax],bh
    3c0e:	03 00                	add    eax,DWORD PTR [rax]
    3c10:	05 02 04 00 00       	add    eax,0x402
    3c15:	00 00                	add    BYTE PTR [rax],al
    3c17:	05 02 04 ce 02       	add    eax,0x2ce0402
    3c1c:	00 00                	add    BYTE PTR [rax],al
    3c1e:	19 7b 08             	sbb    DWORD PTR [rbx+0x8],edi
    3c21:	00 00                	add    BYTE PTR [rax],al
    3c23:	40 0e                	rex (bad)
    3c25:	11 55 08             	adc    DWORD PTR [rbp+0x8],edx
    3c28:	00 00                	add    BYTE PTR [rax],al
    3c2a:	06                   	(bad)
    3c2b:	ae                   	scas   al,BYTE PTR es:[rdi]
    3c2c:	03 00                	add    eax,DWORD PTR [rax]
    3c2e:	00 0e                	add    BYTE PTR [rsi],cl
    3c30:	12 0d ee 07 00 00    	adc    cl,BYTE PTR [rip+0x7ee]        # 4424 <_IO_stdin_used+0x424>
    3c36:	00 06                	add    BYTE PTR [rsi],al
    3c38:	82                   	(bad)
    3c39:	04 00                	add    al,0x0
    3c3b:	00 0e                	add    BYTE PTR [rsi],cl
    3c3d:	13 0e                	adc    ecx,DWORD PTR [rsi]
    3c3f:	e2 07                	loop   3c48 <_fini+0x2b4>
    3c41:	00 00                	add    BYTE PTR [rax],al
    3c43:	20 06                	and    BYTE PTR [rsi],al
    3c45:	5b                   	pop    rbx
    3c46:	06                   	(bad)
    3c47:	00 00                	add    BYTE PTR [rax],al
    3c49:	0e                   	(bad)
    3c4a:	14 0e                	adc    al,0xe
    3c4c:	e2 07                	loop   3c55 <_fini+0x2c1>
    3c4e:	00 00                	add    BYTE PTR [rax],al
    3c50:	24 06                	and    al,0x6
    3c52:	53                   	push   rbx
    3c53:	04 00                	add    al,0x0
    3c55:	00 0e                	add    BYTE PTR [rsi],cl
    3c57:	15 0a 55 08 00       	adc    eax,0x8550a
    3c5c:	00 28                	add    BYTE PTR [rax],ch
    3c5e:	00 10                	add    BYTE PTR [rax],dl
    3c60:	fa                   	cli
    3c61:	00 00                	add    BYTE PTR [rax],al
    3c63:	00 65 08             	add    BYTE PTR [rbp+0x8],ah
    3c66:	00 00                	add    BYTE PTR [rax],al
    3c68:	11 3a                	adc    DWORD PTR [rdx],edi
    3c6a:	00 00                	add    BYTE PTR [rax],al
    3c6c:	00 17                	add    BYTE PTR [rdi],dl
    3c6e:	00 07                	add    BYTE PTR [rdi],al
    3c70:	7b 08                	jnp    3c7a <_fini+0x2e6>
    3c72:	00 00                	add    BYTE PTR [rax],al
    3c74:	0e                   	(bad)
    3c75:	16                   	(bad)
    3c76:	03 14 08             	add    edx,DWORD PTR [rax+rcx*1]
    3c79:	00 00                	add    BYTE PTR [rax],al
    3c7b:	1a 8e 02 00 00 0f    	sbb    cl,BYTE PTR [rsi+0xf000002]
    3c81:	0a 6d 00             	or     ch,BYTE PTR [rbp+0x0]
    3c84:	00 00                	add    BYTE PTR [rax],al
    3c86:	0f 1a 71 01          	bndldx (bad),[rcx+0x1]
    3c8a:	00 00                	add    BYTE PTR [rax],al
    3c8c:	0f 0e                	femms
    3c8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    3c8f:	00 00                	add    BYTE PTR [rax],al
    3c91:	00 20                	add    BYTE PTR [rax],ah
    3c93:	07                   	(bad)
    3c94:	56                   	push   rsi
    3c95:	03 00                	add    eax,DWORD PTR [rax]
    3c97:	00 0f                	add    BYTE PTR [rdi],cl
    3c99:	10 12                	adc    BYTE PTR [rdx],dl
    3c9b:	65 08 00             	or     BYTE PTR gs:[rax],al
    3c9e:	00 19                	add    BYTE PTR [rcx],bl
    3ca0:	a2 05 00 00 80 0f 13 	movabs ds:0x8e3130f80000005,al
    3ca7:	e3 08 
    3ca9:	00 00                	add    BYTE PTR [rax],al
    3cab:	06                   	(bad)
    3cac:	90                   	nop
    3cad:	06                   	(bad)
    3cae:	00 00                	add    BYTE PTR [rax],al
    3cb0:	0f 14 0e             	unpcklps xmm1,XMMWORD PTR [rsi]
    3cb3:	e2 07                	loop   3cbc <_fini+0x328>
    3cb5:	00 00                	add    BYTE PTR [rax],al
    3cb7:	00 06                	add    BYTE PTR [rsi],al
    3cb9:	9e                   	sahf
    3cba:	04 00                	add    al,0x0
    3cbc:	00 0f                	add    BYTE PTR [rdi],cl
    3cbe:	15 0e e2 07 00       	adc    eax,0x7e20e
    3cc3:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    3cc6:	41 06                	rex.B (bad)
    3cc8:	00 00                	add    BYTE PTR [rax],al
    3cca:	0f 17 0e             	movhps QWORD PTR [rsi],xmm1
    3ccd:	e2 07                	loop   3cd6 <_fini+0x342>
    3ccf:	00 00                	add    BYTE PTR [rax],al
    3cd1:	08 06                	or     BYTE PTR [rsi],al
    3cd3:	53                   	push   rbx
    3cd4:	04 00                	add    al,0x0
    3cd6:	00 0f                	add    BYTE PTR [rdi],cl
    3cd8:	1a 0a                	sbb    cl,BYTE PTR [rdx]
    3cda:	e3 08                	jrcxz  3ce4 <_fini+0x350>
    3cdc:	00 00                	add    BYTE PTR [rax],al
    3cde:	0c 06                	or     al,0x6
    3ce0:	4d 15 00 00 0f 1d    	rex.WRB adc rax,0x1d0f0000
    3ce6:	0c 89                	or     al,0x89
    3ce8:	08 00                	or     BYTE PTR [rax],al
    3cea:	00 40 00             	add    BYTE PTR [rax+0x0],al
    3ced:	10 fa                	adc    dl,bh
    3cef:	00 00                	add    BYTE PTR [rax],al
    3cf1:	00 f3                	add    bl,dh
    3cf3:	08 00                	or     BYTE PTR [rax],al
    3cf5:	00 11                	add    BYTE PTR [rcx],dl
    3cf7:	3a 00                	cmp    al,BYTE PTR [rax]
    3cf9:	00 00                	add    BYTE PTR [rax],al
    3cfb:	33 00                	xor    eax,DWORD PTR [rax]
    3cfd:	07                   	(bad)
    3cfe:	a2 05 00 00 0f 1e 03 	movabs ds:0x895031e0f000005,al
    3d05:	95 08 
    3d07:	00 00                	add    BYTE PTR [rax],al
    3d09:	19 75 04             	sbb    DWORD PTR [rbp+0x4],esi
    3d0c:	00 00                	add    BYTE PTR [rax],al
    3d0e:	18 0f                	sbb    BYTE PTR [rdi],cl
    3d10:	20 40 09             	and    BYTE PTR [rax+0x9],al
    3d13:	00 00                	add    BYTE PTR [rax],al
    3d15:	06                   	(bad)
    3d16:	49 06                	rex.WB (bad)
    3d18:	00 00                	add    BYTE PTR [rax],al
    3d1a:	0f 21 0f             	mov    rdi,dr1
    3d1d:	40 09 00             	rex or DWORD PTR [rax],eax
    3d20:	00 00                	add    BYTE PTR [rax],al
    3d22:	06                   	(bad)
    3d23:	bc 05 00 00 0f       	mov    esp,0xf000005
    3d28:	22 0e                	and    cl,BYTE PTR [rsi]
    3d2a:	e2 07                	loop   3d33 <_fini+0x39f>
    3d2c:	00 00                	add    BYTE PTR [rax],al
    3d2e:	08 06                	or     BYTE PTR [rsi],al
    3d30:	0f 08                	invd
    3d32:	00 00                	add    BYTE PTR [rax],al
    3d34:	0f 23 0e             	mov    dr1,rsi
    3d37:	e2 07                	loop   3d40 <_fini+0x3ac>
    3d39:	00 00                	add    BYTE PTR [rax],al
    3d3b:	0c 06                	or     al,0x6
    3d3d:	74 03                	je     3d42 <_fini+0x3ae>
    3d3f:	00 00                	add    BYTE PTR [rax],al
    3d41:	0f 24                	(bad)
    3d43:	0e                   	(bad)
    3d44:	e2 07                	loop   3d4d <_fini+0x3b9>
    3d46:	00 00                	add    BYTE PTR [rax],al
    3d48:	10 00                	adc    BYTE PTR [rax],al
    3d4a:	08 f3                	or     bl,dh
    3d4c:	08 00                	or     BYTE PTR [rax],al
    3d4e:	00 07                	add    BYTE PTR [rdi],al
    3d50:	75 04                	jne    3d56 <_fini+0x3c2>
    3d52:	00 00                	add    BYTE PTR [rax],al
    3d54:	0f 25                	(bad)
    3d56:	03 ff                	add    edi,edi
    3d58:	08 00                	or     BYTE PTR [rax],al
    3d5a:	00 08                	add    BYTE PTR [rax],cl
    3d5c:	45 09 00             	or     DWORD PTR [r8],r8d
    3d5f:	00 1a                	add    BYTE PTR [rdx],bl
    3d61:	b8 07 00 00 10       	mov    eax,0x10000007
    3d66:	06                   	(bad)
    3d67:	6d                   	ins    DWORD PTR es:[rdi],dx
    3d68:	00 00                	add    BYTE PTR [rax],al
    3d6a:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
    3d6d:	bb 03 00 00 af       	mov    ebx,0xaf000003
    3d72:	02 73 09             	add    dh,BYTE PTR [rbx+0x9]
    3d75:	00 00                	add    BYTE PTR [rax],al
    3d77:	01 2e                	add    DWORD PTR [rsi],ebp
    3d79:	01 00                	add    DWORD PTR [rax],eax
    3d7b:	00 00                	add    BYTE PTR [rax],al
    3d7d:	39 1e                	cmp    DWORD PTR [rsi],ebx
    3d7f:	06                   	(bad)
    3d80:	00 00                	add    BYTE PTR [rax],al
    3d82:	11 45 0d             	adc    DWORD PTR [rbp+0xd],eax
    3d85:	94                   	xchg   esp,eax
    3d86:	09 00                	or     DWORD PTR [rax],eax
    3d88:	00 01                	add    BYTE PTR [rcx],al
    3d8a:	f5                   	cmc
    3d8b:	00 00                	add    BYTE PTR [rax],al
    3d8d:	00 01                	add    BYTE PTR [rcx],al
    3d8f:	f5                   	cmc
    3d90:	00 00                	add    BYTE PTR [rax],al
    3d92:	00 01                	add    BYTE PTR [rcx],al
    3d94:	0d 01 00 00 01       	or     eax,0x1000001
    3d99:	f5                   	cmc
    3d9a:	00 00                	add    BYTE PTR [rax],al
    3d9c:	00 00                	add    BYTE PTR [rax],al
    3d9e:	09 4c 05 00          	or     DWORD PTR [rbp+rax*1+0x0],ecx
    3da2:	00 d4                	add    ah,dl
    3da4:	02 0e                	add    cl,BYTE PTR [rsi]
    3da6:	2e 01 00             	cs add DWORD PTR [rax],eax
    3da9:	00 af 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],ch
    3daf:	2e 00 00             	cs add BYTE PTR [rax],al
    3db2:	00 01                	add    BYTE PTR [rcx],al
    3db4:	2e 00 00             	cs add BYTE PTR [rax],al
    3db7:	00 00                	add    BYTE PTR [rax],al
    3db9:	3a c4                	cmp    al,ah
    3dbb:	04 00                	add    al,0x0
    3dbd:	00 01                	add    BYTE PTR [rcx],al
    3dbf:	ba 06 68 04 00       	mov    edx,0x46806
    3dc4:	00 d0                	add    al,dl
    3dc6:	21 00                	and    DWORD PTR [rax],eax
    3dc8:	00 00                	add    BYTE PTR [rax],al
    3dca:	00 00                	add    BYTE PTR [rax],al
    3dcc:	00 3e                	add    BYTE PTR [rsi],bh
    3dce:	00 00                	add    BYTE PTR [rax],al
    3dd0:	00 00                	add    BYTE PTR [rax],al
    3dd2:	00 00                	add    BYTE PTR [rax],al
    3dd4:	00 01                	add    BYTE PTR [rcx],al
    3dd6:	9c                   	pushf
    3dd7:	40 0a 00             	rex or al,BYTE PTR [rax]
    3dda:	00 1b                	add    BYTE PTR [rbx],bl
    3ddc:	19 22                	sbb    DWORD PTR [rdx],esp
    3dde:	00 00                	add    BYTE PTR [rax],al
    3de0:	ba 15 51 09 00       	mov    edx,0x95115
    3de5:	00 b4 12 00 00 aa 12 	add    BYTE PTR [rdx+rdx*1+0x12aa0000],dh
    3dec:	00 00                	add    BYTE PTR [rax],al
    3dee:	1c ec                	sbb    al,0xec
    3df0:	03 00                	add    eax,DWORD PTR [rax]
    3df2:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	09 03                	or     DWORD PTR [rbx],eax
    3df9:	83 40 00 00          	add    DWORD PTR [rax+0x0],0x0
    3dfd:	00 00                	add    BYTE PTR [rax],al
    3dff:	00 00                	add    BYTE PTR [rax],al
    3e01:	3b e5                	cmp    esp,ebp
    3e03:	21 00                	and    DWORD PTR [rax],eax
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 00                	add    BYTE PTR [rax],al
    3e09:	00 62 09             	add    BYTE PTR [rdx+0x9],ah
    3e0c:	00 00                	add    BYTE PTR [rax],al
    3e0e:	0b 0e                	or     ecx,DWORD PTR [rsi]
    3e10:	22 00                	and    al,BYTE PTR [rax]
    3e12:	00 00                	add    BYTE PTR [rax],al
    3e14:	00 00                	add    BYTE PTR [rax],al
    3e16:	00 73 09             	add    BYTE PTR [rbx+0x9],dh
    3e19:	00 00                	add    BYTE PTR [rax],al
    3e1b:	03 01                	add    eax,DWORD PTR [rcx]
    3e1d:	55                   	push   rbp
    3e1e:	09 03                	or     DWORD PTR [rbx],eax
    3e20:	7e 40                	jle    3e62 <_fini+0x4ce>
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	03 01                	add    eax,DWORD PTR [rcx]
    3e2a:	54                   	push   rsp
    3e2b:	09 03                	or     DWORD PTR [rbx],eax
    3e2d:	63 40 00             	movsxd eax,DWORD PTR [rax+0x0]
    3e30:	00 00                	add    BYTE PTR [rax],al
    3e32:	00 00                	add    BYTE PTR [rax],al
    3e34:	00 03                	add    BYTE PTR [rbx],al
    3e36:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    3e39:	08 bb 03 01 52 09    	or     BYTE PTR [rbx+0x9520103],bh
    3e3f:	03 83 40 00 00 00    	add    eax,DWORD PTR [rbx+0x40]
    3e45:	00 00                	add    BYTE PTR [rax],al
    3e47:	00 00                	add    BYTE PTR [rax],al
    3e49:	00 10                	add    BYTE PTR [rax],dl
    3e4b:	01 01                	add    DWORD PTR [rcx],eax
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	50                   	push   rax
    3e50:	0a 00                	or     al,BYTE PTR [rax]
    3e52:	00 11                	add    BYTE PTR [rcx],dl
    3e54:	3a 00                	cmp    al,BYTE PTR [rax]
    3e56:	00 00                	add    BYTE PTR [rax],al
    3e58:	14 00                	adc    al,0x0
    3e5a:	0e                   	(bad)
    3e5b:	40 0a 00             	rex or al,BYTE PTR [rax]
    3e5e:	00 3c ad 09 00 00 01 	add    BYTE PTR [rbp*4+0x1000009],bh
    3e65:	7f 0c                	jg     3e73 <_fini+0x4df>
    3e67:	66 00 00             	data16 add BYTE PTR [rax],al
    3e6a:	00 01                	add    BYTE PTR [rcx],al
    3e6c:	8a 0a                	mov    cl,BYTE PTR [rdx]
    3e6e:	00 00                	add    BYTE PTR [rax],al
    3e70:	0a c7                	or     al,bh
    3e72:	09 00                	or     DWORD PTR [rax],eax
    3e74:	00 01                	add    BYTE PTR [rcx],al
    3e76:	7f 21                	jg     3e99 <_fini+0x505>
    3e78:	8a 0a                	mov    cl,BYTE PTR [rdx]
    3e7a:	00 00                	add    BYTE PTR [rax],al
    3e7c:	0a e4                	or     ah,ah
    3e7e:	09 00                	or     DWORD PTR [rax],eax
    3e80:	00 01                	add    BYTE PTR [rcx],al
    3e82:	7f 30                	jg     3eb4 <_fini+0x520>
    3e84:	8a 0a                	mov    cl,BYTE PTR [rdx]
    3e86:	00 00                	add    BYTE PTR [rax],al
    3e88:	22 ea                	and    ch,dl
    3e8a:	09 00                	or     DWORD PTR [rax],eax
    3e8c:	00 81 0e e2 07 00    	add    BYTE PTR [rcx+0x7e20e],al
    3e92:	00 00                	add    BYTE PTR [rax],al
    3e94:	08 89 08 00 00 3d    	or     BYTE PTR [rcx+0x3d000008],cl
    3e9a:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    3e9b:	09 00                	or     DWORD PTR [rax],eax
    3e9d:	00 01                	add    BYTE PTR [rcx],al
    3e9f:	65 0d 01 bf 0a 00    	gs or  eax,0xabf01
    3ea5:	00 0a                	add    BYTE PTR [rdx],cl
    3ea7:	19 22                	sbb    DWORD PTR [rdx],esp
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	01 65 1c             	add    DWORD PTR [rbp+0x1c],esp
    3eae:	51                   	push   rcx
    3eaf:	09 00                	or     DWORD PTR [rax],eax
    3eb1:	00 22                	add    BYTE PTR [rdx],ah
    3eb3:	9c                   	pushf
    3eb4:	09 00                	or     DWORD PTR [rax],eax
    3eb6:	00 6e 13             	add    BYTE PTR [rsi+0x13],ch
    3eb9:	40 09 00             	rex or DWORD PTR [rax],eax
    3ebc:	00 3e                	add    BYTE PTR [rsi],bh
    3ebe:	23 69 00             	and    ebp,DWORD PTR [rcx+0x0]
    3ec1:	75 13                	jne    3ed6 <_fini+0x542>
    3ec3:	e2 07                	loop   3ecc <_fini+0x538>
    3ec5:	00 00                	add    BYTE PTR [rax],al
    3ec7:	00 00                	add    BYTE PTR [rax],al
    3ec9:	3f                   	(bad)
    3eca:	c5 05 00             	(bad)
    3ecd:	00 01                	add    BYTE PTR [rcx],al
    3ecf:	57                   	push   rdi
    3ed0:	05 76 05 00 00       	add    eax,0x576
    3ed5:	66 00 00             	data16 add BYTE PTR [rax],al
    3ed8:	00 01                	add    BYTE PTR [rcx],al
    3eda:	01 0b                	add    DWORD PTR [rbx],ecx
    3edc:	00 00                	add    BYTE PTR [rax],al
    3ede:	0a 19                	or     bl,BYTE PTR [rcx]
    3ee0:	22 00                	and    al,BYTE PTR [rax]
    3ee2:	00 01                	add    BYTE PTR [rcx],al
    3ee4:	57                   	push   rdi
    3ee5:	19 51 09             	sbb    DWORD PTR [rcx+0x9],edx
    3ee8:	00 00                	add    BYTE PTR [rax],al
    3eea:	0a 4d 15             	or     cl,BYTE PTR [rbp+0x15]
    3eed:	00 00                	add    BYTE PTR [rax],al
    3eef:	01 57 26             	add    DWORD PTR [rdi+0x26],edx
    3ef2:	89 08                	mov    DWORD PTR [rax],ecx
    3ef4:	00 00                	add    BYTE PTR [rax],al
    3ef6:	40 ec                	rex in al,dx
    3ef8:	03 00                	add    eax,DWORD PTR [rax]
    3efa:	00 11                	add    BYTE PTR [rcx],dl
    3efc:	0b 00                	or     eax,DWORD PTR [rax]
    3efe:	00 23                	add    BYTE PTR [rbx],ah
    3f00:	69 6e 78 00 5a 0e e2 	imul   ebp,DWORD PTR [rsi+0x78],0xe20e5a00
    3f07:	07                   	(bad)
    3f08:	00 00                	add    BYTE PTR [rax],al
    3f0a:	00 10                	add    BYTE PTR [rax],dl
    3f0c:	01 01                	add    DWORD PTR [rcx],eax
    3f0e:	00 00                	add    BYTE PTR [rax],al
    3f10:	11 0b                	adc    DWORD PTR [rbx],ecx
    3f12:	00 00                	add    BYTE PTR [rax],al
    3f14:	11 3a                	adc    DWORD PTR [rdx],edi
    3f16:	00 00                	add    BYTE PTR [rax],al
    3f18:	00 20                	add    BYTE PTR [rax],ah
    3f1a:	00 0e                	add    BYTE PTR [rsi],cl
    3f1c:	01 0b                	add    DWORD PTR [rbx],ecx
    3f1e:	00 00                	add    BYTE PTR [rax],al
    3f20:	1d 3d 04 00 00       	sbb    eax,0x43d
    3f25:	3b 05 ef 06 00 00    	cmp    eax,DWORD PTR [rip+0x6ef]        # 461a <_IO_stdin_used+0x61a>
    3f2b:	66 00 00             	data16 add BYTE PTR [rax],al
    3f2e:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
    3f34:	00 00                	add    BYTE PTR [rax],al
    3f36:	00 b4 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],dh
    3f3d:	00 00                	add    BYTE PTR [rax],al
    3f3f:	01 9c 87 0c 00 00 1b 	add    DWORD PTR [rdi+rax*4+0x1b00000c],ebx
    3f46:	19 22                	sbb    DWORD PTR [rdx],esp
    3f48:	00 00                	add    BYTE PTR [rax],al
    3f4a:	3b 17                	cmp    edx,DWORD PTR [rdi]
    3f4c:	51                   	push   rcx
    3f4d:	09 00                	or     DWORD PTR [rax],eax
    3f4f:	00 e2                	add    dl,ah
    3f51:	12 00                	adc    al,BYTE PTR [rax]
    3f53:	00 de                	add    dh,bl
    3f55:	12 00                	adc    al,BYTE PTR [rax]
    3f57:	00 24 4d 15 00 00 3b 	add    BYTE PTR [rcx*2+0x3b000015],ah
    3f5e:	24 89                	and    al,0x89
    3f60:	08 00                	or     BYTE PTR [rax],al
    3f62:	00 02                	add    BYTE PTR [rdx],al
    3f64:	91                   	xchg   ecx,eax
    3f65:	00 1c ec             	add    BYTE PTR [rsp+rbp*8],bl
    3f68:	03 00                	add    eax,DWORD PTR [rax]
    3f6a:	00 97 0c 00 00 09    	add    BYTE PTR [rdi+0x900000c],dl
    3f70:	03 88 43 00 00 00    	add    ecx,DWORD PTR [rax+0x43]
    3f76:	00 00                	add    BYTE PTR [rax],al
    3f78:	00 1e                	add    BYTE PTR [rsi],bl
    3f7a:	69 6e 78 00 3e 0e e2 	imul   ebp,DWORD PTR [rsi+0x78],0xe20e3e00
    3f81:	07                   	(bad)
    3f82:	00 00                	add    BYTE PTR [rax],al
    3f84:	f8                   	clc
    3f85:	12 00                	adc    al,BYTE PTR [rax]
    3f87:	00 f4                	add    ah,dh
    3f89:	12 00                	adc    al,BYTE PTR [rax]
    3f8b:	00 15 9e 04 00 00    	add    BYTE PTR [rip+0x49e],dl        # 442f <_IO_stdin_used+0x42f>
    3f91:	48 0e                	rex.W (bad)
    3f93:	e2 07                	loop   3f9c <_fini+0x608>
    3f95:	00 00                	add    BYTE PTR [rax],al
    3f97:	0c 13                	or     al,0x13
    3f99:	00 00                	add    BYTE PTR [rax],al
    3f9b:	08 13                	or     BYTE PTR [rbx],dl
    3f9d:	00 00                	add    BYTE PTR [rax],al
    3f9f:	15 90 06 00 00       	adc    eax,0x690
    3fa4:	49 0e                	rex.WB (bad)
    3fa6:	e2 07                	loop   3faf <_fini+0x61b>
    3fa8:	00 00                	add    BYTE PTR [rax],al
    3faa:	1d 13 00 00 1b       	sbb    eax,0x1b000013
    3faf:	13 00                	adc    eax,DWORD PTR [rax]
    3fb1:	00 12                	add    BYTE PTR [rdx],dl
    3fb3:	bf 0a 00 00 ca       	mov    edi,0xca00000a
    3fb8:	20 00                	and    BYTE PTR [rax],al
    3fba:	00 00                	add    BYTE PTR [rax],al
    3fbc:	00 00                	add    BYTE PTR [rax],al
    3fbe:	00 01                	add    BYTE PTR [rcx],al
    3fc0:	fa                   	cli
    3fc1:	01 00                	add    DWORD PTR [rax],eax
    3fc3:	00 3e                	add    BYTE PTR [rsi],bh
    3fc5:	21 35 0c 00 00 04    	and    DWORD PTR [rip+0x400000c],esi        # 4003fd7 <_end+0x3ffdfbf>
    3fcb:	e0 0a                	loopne 3fd7 <_fini+0x643>
    3fcd:	00 00                	add    BYTE PTR [rax],al
    3fcf:	2a 13                	sub    dl,BYTE PTR [rbx]
    3fd1:	00 00                	add    BYTE PTR [rax],al
    3fd3:	26 13 00             	es adc eax,DWORD PTR [rax]
    3fd6:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    3fd9:	0a 00                	or     al,BYTE PTR [rax]
    3fdb:	00 45 13             	add    BYTE PTR [rbp+0x13],al
    3fde:	00 00                	add    BYTE PTR [rax],al
    3fe0:	41 13 00             	adc    eax,DWORD PTR [r8]
    3fe3:	00 1f                	add    BYTE PTR [rdi],bl
    3fe5:	0a 02                	or     al,BYTE PTR [rdx]
    3fe7:	00 00                	add    BYTE PTR [rax],al
    3fe9:	0d f5 0a 00 00       	or     eax,0xaf5
    3fee:	5c                   	pop    rsp
    3fef:	13 00                	adc    eax,DWORD PTR [rax]
    3ff1:	00 54 13 00          	add    BYTE PTR [rbx+rdx*1+0x0],dl
    3ff5:	00 25 55 0a 00 00    	add    BYTE PTR [rip+0xa55],ah        # 4a50 <__GNU_EH_FRAME_HDR+0x3c8>
    3ffb:	d9 20                	fldenv [rax]
    3ffd:	00 00                	add    BYTE PTR [rax],al
    3fff:	00 00                	add    BYTE PTR [rax],al
    4001:	00 00                	add    BYTE PTR [rax],al
    4003:	00 d9                	add    cl,bl
    4005:	20 00                	and    BYTE PTR [rax],al
    4007:	00 00                	add    BYTE PTR [rax],al
    4009:	00 00                	add    BYTE PTR [rax],al
    400b:	00 19                	add    BYTE PTR [rcx],bl
    400d:	00 00                	add    BYTE PTR [rax],al
    400f:	00 00                	add    BYTE PTR [rax],al
    4011:	00 00                	add    BYTE PTR [rax],al
    4013:	00 5d 04             	add    BYTE PTR [rbp+0x4],bl
    4016:	72 0a                	jb     4022 <_IO_stdin_used+0x22>
    4018:	00 00                	add    BYTE PTR [rax],al
    401a:	7b 13                	jnp    402f <_IO_stdin_used+0x2f>
    401c:	00 00                	add    BYTE PTR [rax],al
    401e:	79 13                	jns    4033 <_IO_stdin_used+0x33>
    4020:	00 00                	add    BYTE PTR [rax],al
    4022:	04 66                	add    al,0x66
    4024:	0a 00                	or     al,BYTE PTR [rax]
    4026:	00 88 13 00 00 86    	add    BYTE PTR [rax-0x79ffffed],cl
    402c:	13 00                	adc    eax,DWORD PTR [rax]
    402e:	00 0d 7e 0a 00 00    	add    BYTE PTR [rip+0xa7e],cl        # 4ab2 <__GNU_EH_FRAME_HDR+0x42a>
    4034:	99                   	cdq
    4035:	13 00                	adc    eax,DWORD PTR [rax]
    4037:	00 95 13 00 00 00    	add    BYTE PTR [rbp+0x13],dl
    403d:	00 00                	add    BYTE PTR [rax],al
    403f:	13 01                	adc    eax,DWORD PTR [rcx]
    4041:	21 00                	and    DWORD PTR [rax],eax
    4043:	00 00                	add    BYTE PTR [rax],al
    4045:	00 00                	add    BYTE PTR [rax],al
    4047:	00 01                	add    BYTE PTR [rcx],al
    4049:	30 13                	xor    BYTE PTR [rbx],dl
    404b:	40 21 00             	rex and DWORD PTR [rax],eax
    404e:	00 00                	add    BYTE PTR [rax],al
    4050:	00 00                	add    BYTE PTR [rax],al
    4052:	00 01                	add    BYTE PTR [rcx],al
    4054:	30 0b                	xor    BYTE PTR [rbx],cl
    4056:	64 21 00             	and    DWORD PTR fs:[rax],eax
    4059:	00 00                	add    BYTE PTR [rax],al
    405b:	00 00                	add    BYTE PTR [rax],al
    405d:	00 73 09             	add    BYTE PTR [rbx+0x9],dh
    4060:	00 00                	add    BYTE PTR [rax],al
    4062:	03 01                	add    eax,DWORD PTR [rcx]
    4064:	55                   	push   rbp
    4065:	09 03                	or     DWORD PTR [rbx],eax
    4067:	7e 40                	jle    40a9 <_IO_stdin_used+0xa9>
    4069:	00 00                	add    BYTE PTR [rax],al
    406b:	00 00                	add    BYTE PTR [rax],al
    406d:	00 00                	add    BYTE PTR [rax],al
    406f:	03 01                	add    eax,DWORD PTR [rcx]
    4071:	54                   	push   rsp
    4072:	09 03                	or     DWORD PTR [rbx],eax
    4074:	63 40 00             	movsxd eax,DWORD PTR [rax+0x0]
    4077:	00 00                	add    BYTE PTR [rax],al
    4079:	00 00                	add    BYTE PTR [rax],al
    407b:	00 03                	add    BYTE PTR [rbx],al
    407d:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    4080:	08 3c 03             	or     BYTE PTR [rbx+rax*1],bh
    4083:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    4086:	03 88 43 00 00 00    	add    ecx,DWORD PTR [rax+0x43]
    408c:	00 00                	add    BYTE PTR [rax],al
    408e:	00 00                	add    BYTE PTR [rax],al
    4090:	00 10                	add    BYTE PTR [rax],dl
    4092:	01 01                	add    DWORD PTR [rcx],eax
    4094:	00 00                	add    BYTE PTR [rax],al
    4096:	97                   	xchg   edi,eax
    4097:	0c 00                	or     al,0x0
    4099:	00 11                	add    BYTE PTR [rcx],dl
    409b:	3a 00                	cmp    al,BYTE PTR [rax]
    409d:	00 00                	add    BYTE PTR [rax],al
    409f:	1e                   	(bad)
    40a0:	00 0e                	add    BYTE PTR [rsi],cl
    40a2:	87 0c 00             	xchg   DWORD PTR [rax+rax*1],ecx
    40a5:	00 1d 9e 05 00 00    	add    BYTE PTR [rip+0x59e],bl        # 4649 <_IO_stdin_used+0x649>
    40ab:	1e                   	(bad)
    40ac:	05 0e 07 00 00       	add    eax,0x70e
    40b1:	66 00 00             	data16 add BYTE PTR [rax],al
    40b4:	00 10                	add    BYTE PTR [rax],dl
    40b6:	1f                   	(bad)
    40b7:	00 00                	add    BYTE PTR [rax],al
    40b9:	00 00                	add    BYTE PTR [rax],al
    40bb:	00 00                	add    BYTE PTR [rax],al
    40bd:	9c                   	pushf
    40be:	01 00                	add    DWORD PTR [rax],eax
    40c0:	00 00                	add    BYTE PTR [rax],al
    40c2:	00 00                	add    BYTE PTR [rax],al
    40c4:	00 01                	add    BYTE PTR [rcx],al
    40c6:	9c                   	pushf
    40c7:	6d                   	ins    DWORD PTR es:[rdi],dx
    40c8:	0f 00 00             	sldt   WORD PTR [rax]
    40cb:	1b 19                	sbb    ebx,DWORD PTR [rcx]
    40cd:	22 00                	and    al,BYTE PTR [rax]
    40cf:	00 1e                	add    BYTE PTR [rsi],bl
    40d1:	18 51 09             	sbb    BYTE PTR [rcx+0x9],dl
    40d4:	00 00                	add    BYTE PTR [rax],al
    40d6:	b7 13                	mov    bh,0x13
    40d8:	00 00                	add    BYTE PTR [rax],al
    40da:	a9 13 00 00 24       	test   eax,0x24000013
    40df:	4d 15 00 00 1e 25    	rex.WRB adc rax,0x251e0000
    40e5:	89 08                	mov    DWORD PTR [rax],ecx
    40e7:	00 00                	add    BYTE PTR [rax],al
    40e9:	02 91 00 1c ec 03    	add    dl,BYTE PTR [rcx+0x3ec1c00]
    40ef:	00 00                	add    BYTE PTR [rax],al
    40f1:	7d 0f                	jge    4102 <_IO_stdin_used+0x102>
    40f3:	00 00                	add    BYTE PTR [rax],al
    40f5:	09 03                	or     DWORD PTR [rbx],eax
    40f7:	68 43 00 00 00       	push   0x43
    40fc:	00 00                	add    BYTE PTR [rax],al
    40fe:	00 1e                	add    BYTE PTR [rsi],bl
    4100:	69 6e 78 00 21 0e e2 	imul   ebp,DWORD PTR [rsi+0x78],0xe20e2100
    4107:	07                   	(bad)
    4108:	00 00                	add    BYTE PTR [rax],al
    410a:	f5                   	cmc
    410b:	13 00                	adc    eax,DWORD PTR [rax]
    410d:	00 ef                	add    bh,ch
    410f:	13 00                	adc    eax,DWORD PTR [rax]
    4111:	00 41 98             	add    BYTE PTR [rcx-0x68],al
    4114:	1f                   	(bad)
    4115:	00 00                	add    BYTE PTR [rax],al
    4117:	00 00                	add    BYTE PTR [rax],al
    4119:	00 00                	add    BYTE PTR [rax],al
    411b:	5a                   	pop    rdx
    411c:	00 00                	add    BYTE PTR [rax],al
    411e:	00 00                	add    BYTE PTR [rax],al
    4120:	00 00                	add    BYTE PTR [rax],al
    4122:	00 31                	add    BYTE PTR [rcx],dh
    4124:	0d 00 00 15 ba       	or     eax,0xba150000
    4129:	09 00                	or     DWORD PTR [rax],eax
    412b:	00 29                	add    BYTE PTR [rcx],ch
    412d:	12 e2                	adc    ah,dl
    412f:	07                   	(bad)
    4130:	00 00                	add    BYTE PTR [rax],al
    4132:	10 14 00             	adc    BYTE PTR [rax+rax*1],dl
    4135:	00 0c 14             	add    BYTE PTR [rsp+rdx*1],cl
    4138:	00 00                	add    BYTE PTR [rax],al
    413a:	00 12                	add    BYTE PTR [rdx],dl
    413c:	bf 0a 00 00 37       	mov    edi,0x3700000a
    4141:	1f                   	(bad)
    4142:	00 00                	add    BYTE PTR [rax],al
    4144:	00 00                	add    BYTE PTR [rax],al
    4146:	00 00                	add    BYTE PTR [rax],al
    4148:	01 c4                	add    esp,eax
    414a:	01 00                	add    DWORD PTR [rax],eax
    414c:	00 21                	add    BYTE PTR [rcx],ah
    414e:	21 be 0d 00 00 04    	and    DWORD PTR [rsi+0x400000d],edi
    4154:	e0 0a                	loopne 4160 <_IO_stdin_used+0x160>
    4156:	00 00                	add    BYTE PTR [rax],al
    4158:	22 14 00             	and    dl,BYTE PTR [rax+rax*1]
    415b:	00 20                	add    BYTE PTR [rax],ah
    415d:	14 00                	adc    al,0x0
    415f:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    4162:	0a 00                	or     al,BYTE PTR [rax]
    4164:	00 30                	add    BYTE PTR [rax],dh
    4166:	14 00                	adc    al,0x0
    4168:	00 2e                	add    BYTE PTR [rsi],ch
    416a:	14 00                	adc    al,0x0
    416c:	00 1f                	add    BYTE PTR [rdi],bl
    416e:	c4 01 00 00          	(bad)
    4172:	0d f5 0a 00 00       	or     eax,0xaf5
    4177:	3c 14                	cmp    al,0x14
    4179:	00 00                	add    BYTE PTR [rax],al
    417b:	38 14 00             	cmp    BYTE PTR [rax+rax*1],dl
    417e:	00 25 55 0a 00 00    	add    BYTE PTR [rip+0xa55],ah        # 4bd9 <__GNU_EH_FRAME_HDR+0x551>
    4184:	51                   	push   rcx
    4185:	1f                   	(bad)
    4186:	00 00                	add    BYTE PTR [rax],al
    4188:	00 00                	add    BYTE PTR [rax],al
    418a:	00 00                	add    BYTE PTR [rax],al
    418c:	00 51 1f             	add    BYTE PTR [rcx+0x1f],dl
    418f:	00 00                	add    BYTE PTR [rax],al
    4191:	00 00                	add    BYTE PTR [rax],al
    4193:	00 00                	add    BYTE PTR [rax],al
    4195:	17                   	(bad)
    4196:	00 00                	add    BYTE PTR [rax],al
    4198:	00 00                	add    BYTE PTR [rax],al
    419a:	00 00                	add    BYTE PTR [rax],al
    419c:	00 5d 04             	add    BYTE PTR [rbp+0x4],bl
    419f:	72 0a                	jb     41ab <_IO_stdin_used+0x1ab>
    41a1:	00 00                	add    BYTE PTR [rax],al
    41a3:	4d 14 00             	rex.WRB adc al,0x0
    41a6:	00 4b 14             	add    BYTE PTR [rbx+0x14],cl
    41a9:	00 00                	add    BYTE PTR [rax],al
    41ab:	04 66                	add    al,0x66
    41ad:	0a 00                	or     al,BYTE PTR [rax]
    41af:	00 5a 14             	add    BYTE PTR [rdx+0x14],bl
    41b2:	00 00                	add    BYTE PTR [rax],al
    41b4:	58                   	pop    rax
    41b5:	14 00                	adc    al,0x0
    41b7:	00 0d 7e 0a 00 00    	add    BYTE PTR [rip+0xa7e],cl        # 4c3b <__GNU_EH_FRAME_HDR+0x5b3>
    41bd:	6b 14 00 00          	imul   edx,DWORD PTR [rax+rax*1],0x0
    41c1:	67 14 00             	addr32 adc al,0x0
    41c4:	00 00                	add    BYTE PTR [rax],al
    41c6:	00 00                	add    BYTE PTR [rax],al
    41c8:	42 8f 0a 00 00       	(bad)
    41cd:	00 20                	add    BYTE PTR [rax],ah
    41cf:	00 00                	add    BYTE PTR [rax],al
    41d1:	00 00                	add    BYTE PTR [rax],al
    41d3:	00 00                	add    BYTE PTR [rax],al
    41d5:	02 00                	add    al,BYTE PTR [rax]
    41d7:	20 00                	and    BYTE PTR [rax],al
    41d9:	00 00                	add    BYTE PTR [rax],al
    41db:	00 00                	add    BYTE PTR [rax],al
    41dd:	00 83 00 00 00 00    	add    BYTE PTR [rbx+0x0],al
    41e3:	00 00                	add    BYTE PTR [rax],al
    41e5:	00 01                	add    BYTE PTR [rcx],al
    41e7:	36 33 27             	ss xor esp,DWORD PTR [rdi]
    41ea:	0f 00 00             	sldt   WORD PTR [rax]
    41ed:	04 9c                	add    al,0x9c
    41ef:	0a 00                	or     al,BYTE PTR [rax]
    41f1:	00 7f 14             	add    BYTE PTR [rdi+0x14],bh
    41f4:	00 00                	add    BYTE PTR [rax],al
    41f6:	7b 14                	jnp    420c <_IO_stdin_used+0x20c>
    41f8:	00 00                	add    BYTE PTR [rax],al
    41fa:	0d a8 0a 00 00       	or     eax,0xaa8
    41ff:	92                   	xchg   edx,eax
    4200:	14 00                	adc    al,0x0
    4202:	00 8e 14 00 00 12    	add    BYTE PTR [rsi+0x12000014],cl
    4208:	31 10                	xor    DWORD PTR [rax],edx
    420a:	00 00                	add    BYTE PTR [rax],al
    420c:	2c 20                	sub    al,0x20
    420e:	00 00                	add    BYTE PTR [rax],al
    4210:	00 00                	add    BYTE PTR [rax],al
    4212:	00 00                	add    BYTE PTR [rax],al
    4214:	01 cf                	add    edi,ecx
    4216:	01 00                	add    DWORD PTR [rax],eax
    4218:	00 6f 0f             	add    BYTE PTR [rdi+0xf],ch
    421b:	62 0e 00 00 04       	(bad)
    4220:	57                   	push   rdi
    4221:	10 00                	adc    BYTE PTR [rax],al
    4223:	00 a3 14 00 00 a1    	add    BYTE PTR [rbx-0x5effffec],ah
    4229:	14 00                	adc    al,0x0
    422b:	00 04 4b             	add    BYTE PTR [rbx+rcx*2],al
    422e:	10 00                	adc    BYTE PTR [rax],al
    4230:	00 ad 14 00 00 ab    	add    BYTE PTR [rbp-0x54ffffec],ch
    4236:	14 00                	adc    al,0x0
    4238:	00 04 3f             	add    BYTE PTR [rdi+rdi*1],al
    423b:	10 00                	adc    BYTE PTR [rax],al
    423d:	00 ba 14 00 00 b6    	add    BYTE PTR [rdx-0x49ffffec],bh
    4243:	14 00                	adc    al,0x0
    4245:	00 0b                	add    BYTE PTR [rbx],cl
    4247:	31 20                	xor    DWORD PTR [rax],esp
    4249:	00 00                	add    BYTE PTR [rax],al
    424b:	00 00                	add    BYTE PTR [rax],al
    424d:	00 00                	add    BYTE PTR [rax],al
    424f:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    4250:	11 00                	adc    DWORD PTR [rax],eax
    4252:	00 03                	add    BYTE PTR [rbx],al
    4254:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    4257:	7e 00                	jle    4259 <_IO_stdin_used+0x259>
    4259:	03 01                	add    eax,DWORD PTR [rcx]
    425b:	54                   	push   rsp
    425c:	01 30                	add    DWORD PTR [rax],esi
    425e:	03 01                	add    eax,DWORD PTR [rcx]
    4260:	51                   	push   rcx
    4261:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    4264:	03 01                	add    eax,DWORD PTR [rcx]
    4266:	52                   	push   rdx
    4267:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    426a:	00 00                	add    BYTE PTR [rax],al
    426c:	12 64 10 00          	adc    ah,BYTE PTR [rax+rdx*1+0x0]
    4270:	00 31                	add    BYTE PTR [rcx],dh
    4272:	20 00                	and    BYTE PTR [rax],al
    4274:	00 00                	add    BYTE PTR [rax],al
    4276:	00 00                	add    BYTE PTR [rax],al
    4278:	00 02                	add    BYTE PTR [rdx],al
    427a:	da 01                	fiadd  DWORD PTR [rcx]
    427c:	00 00                	add    BYTE PTR [rax],al
    427e:	70 0f                	jo     428f <_IO_stdin_used+0x28f>
    4280:	ce                   	(bad)
    4281:	0e                   	(bad)
    4282:	00 00                	add    BYTE PTR [rax],al
    4284:	04 8a                	add    al,0x8a
    4286:	10 00                	adc    BYTE PTR [rax],al
    4288:	00 cf                	add    bh,cl
    428a:	14 00                	adc    al,0x0
    428c:	00 c9                	add    cl,cl
    428e:	14 00                	adc    al,0x0
    4290:	00 26                	add    BYTE PTR [rsi],ah
    4292:	7e 10                	jle    42a4 <_IO_stdin_used+0x2a4>
    4294:	00 00                	add    BYTE PTR [rax],al
    4296:	04 72                	add    al,0x72
    4298:	10 00                	adc    BYTE PTR [rax],al
    429a:	00 07                	add    BYTE PTR [rdi],al
    429c:	15 00 00 05 15       	adc    eax,0x15050000
    42a1:	00 00                	add    BYTE PTR [rax],al
    42a3:	0b 4c 20 00          	or     ecx,DWORD PTR [rax+riz*1+0x0]
    42a7:	00 00                	add    BYTE PTR [rax],al
    42a9:	00 00                	add    BYTE PTR [rax],al
    42ab:	00 b6 11 00 00 03    	add    BYTE PTR [rsi+0x3000011],dh
    42b1:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    42b4:	7e 00                	jle    42b6 <_IO_stdin_used+0x2b6>
    42b6:	03 01                	add    eax,DWORD PTR [rcx]
    42b8:	54                   	push   rsp
    42b9:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    42bc:	03 01                	add    eax,DWORD PTR [rcx]
    42be:	51                   	push   rcx
    42bf:	10 7d 00             	adc    BYTE PTR [rbp+0x0],bh
    42c2:	0c ff                	or     al,0xff
    42c4:	ff                   	(bad)
    42c5:	ff                   	(bad)
    42c6:	7f 1a                	jg     42e2 <_IO_stdin_used+0x2e2>
    42c8:	0c ff                	or     al,0xff
    42ca:	ff                   	(bad)
    42cb:	ff                   	(bad)
    42cc:	ff 1a                	call   FWORD PTR [rdx]
    42ce:	37                   	(bad)
    42cf:	24 03                	and    al,0x3
    42d1:	01 52 02             	add    DWORD PTR [rdx+0x2],edx
    42d4:	7f 00                	jg     42d6 <_IO_stdin_used+0x2d6>
    42d6:	00 00                	add    BYTE PTR [rax],al
    42d8:	43 b3 0a             	rex.XB mov r11b,0xa
    42db:	00 00                	add    BYTE PTR [rax],al
    42dd:	ef                   	out    dx,eax
    42de:	01 00                	add    DWORD PTR [rax],eax
    42e0:	00 e9                	add    cl,ch
    42e2:	0e                   	(bad)
    42e3:	00 00                	add    BYTE PTR [rax],al
    42e5:	0d b4 0a 00 00       	or     eax,0xab4
    42ea:	17                   	(bad)
    42eb:	15 00 00 0f 15       	adc    eax,0x150f0000
    42f0:	00 00                	add    BYTE PTR [rax],al
    42f2:	00 13                	add    BYTE PTR [rbx],dl
    42f4:	19 20                	sbb    DWORD PTR [rax],esp
    42f6:	00 00                	add    BYTE PTR [rax],al
    42f8:	00 00                	add    BYTE PTR [rax],al
    42fa:	00 00                	add    BYTE PTR [rax],al
    42fc:	01 30                	add    DWORD PTR [rax],esi
    42fe:	44 1e                	rex.R (bad)
    4300:	20 00                	and    BYTE PTR [rax],al
    4302:	00 00                	add    BYTE PTR [rax],al
    4304:	00 00                	add    BYTE PTR [rax],al
    4306:	00 94 09 00 00 12 0f 	add    BYTE PTR [rcx+rcx*1+0xf120000],dl
    430d:	00 00                	add    BYTE PTR [rax],al
    430f:	03 01                	add    eax,DWORD PTR [rcx]
    4311:	55                   	push   rbp
    4312:	02 08                	add    cl,BYTE PTR [rax]
    4314:	80 03 01             	add    BYTE PTR [rbx],0x1
    4317:	54                   	push   rsp
    4318:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    431b:	00 0b                	add    BYTE PTR [rbx],cl
    431d:	54                   	push   rsp
    431e:	20 00                	and    BYTE PTR [rax],al
    4320:	00 00                	add    BYTE PTR [rax],al
    4322:	00 00                	add    BYTE PTR [rax],al
    4324:	00 62 09             	add    BYTE PTR [rdx+0x9],ah
    4327:	00 00                	add    BYTE PTR [rax],al
    4329:	03 01                	add    eax,DWORD PTR [rcx]
    432b:	55                   	push   rbp
    432c:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    432f:	00 00                	add    BYTE PTR [rax],al
    4331:	13 84 1f 00 00 00 00 	adc    eax,DWORD PTR [rdi+rbx*1+0x0]
    4338:	00 00                	add    BYTE PTR [rax],al
    433a:	01 30                	add    DWORD PTR [rax],esi
    433c:	0b ac 20 00 00 00 00 	or     ebp,DWORD PTR [rax+riz*1+0x0]
    4343:	00 00                	add    BYTE PTR [rax],al
    4345:	73 09                	jae    4350 <_IO_stdin_used+0x350>
    4347:	00 00                	add    BYTE PTR [rax],al
    4349:	03 01                	add    eax,DWORD PTR [rcx]
    434b:	55                   	push   rbp
    434c:	09 03                	or     DWORD PTR [rbx],eax
    434e:	7e 40                	jle    4390 <_IO_stdin_used+0x390>
    4350:	00 00                	add    BYTE PTR [rax],al
    4352:	00 00                	add    BYTE PTR [rax],al
    4354:	00 00                	add    BYTE PTR [rax],al
    4356:	03 01                	add    eax,DWORD PTR [rcx]
    4358:	54                   	push   rsp
    4359:	09 03                	or     DWORD PTR [rbx],eax
    435b:	63 40 00             	movsxd eax,DWORD PTR [rax+0x0]
    435e:	00 00                	add    BYTE PTR [rax],al
    4360:	00 00                	add    BYTE PTR [rax],al
    4362:	00 03                	add    BYTE PTR [rbx],al
    4364:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    4367:	4f 03 01             	rex.WRXB add r8,QWORD PTR [r9]
    436a:	52                   	push   rdx
    436b:	09 03                	or     DWORD PTR [rbx],eax
    436d:	68 43 00 00 00       	push   0x43
    4372:	00 00                	add    BYTE PTR [rax],al
    4374:	00 00                	add    BYTE PTR [rax],al
    4376:	00 10                	add    BYTE PTR [rax],dl
    4378:	01 01                	add    DWORD PTR [rcx],eax
    437a:	00 00                	add    BYTE PTR [rax],al
    437c:	7d 0f                	jge    438d <_IO_stdin_used+0x38d>
    437e:	00 00                	add    BYTE PTR [rax],al
    4380:	11 3a                	adc    DWORD PTR [rdx],edi
    4382:	00 00                	add    BYTE PTR [rax],al
    4384:	00 1f                	add    BYTE PTR [rdi],bl
    4386:	00 0e                	add    BYTE PTR [rsi],cl
    4388:	6d                   	ins    DWORD PTR es:[rdi],dx
    4389:	0f 00 00             	sldt   WORD PTR [rax]
    438c:	1d 60 05 00 00       	sbb    eax,0x560
    4391:	0d 06 69 05 00       	or     eax,0x56906
    4396:	00 45 09             	add    BYTE PTR [rbp+0x9],al
    4399:	00 00                	add    BYTE PTR [rax],al
    439b:	a0 1e 00 00 00 00 00 	movabs al,ds:0x6f0000000000001e
    43a2:	00 6f 
    43a4:	00 00                	add    BYTE PTR [rax],al
    43a6:	00 00                	add    BYTE PTR [rax],al
    43a8:	00 00                	add    BYTE PTR [rax],al
    43aa:	00 01                	add    BYTE PTR [rcx],al
    43ac:	9c                   	pushf
    43ad:	31 10                	xor    DWORD PTR [rax],edx
    43af:	00 00                	add    BYTE PTR [rax],al
    43b1:	15 19 22 00 00       	adc    eax,0x2219
    43b6:	0e                   	(bad)
    43b7:	0a 45 09             	or     al,BYTE PTR [rbp+0x9]
    43ba:	00 00                	add    BYTE PTR [rax],al
    43bc:	3a 15 00 00 34 15    	cmp    dl,BYTE PTR [rip+0x15340000]        # 153443c2 <_end+0x1533e3aa>
    43c2:	00 00                	add    BYTE PTR [rax],al
    43c4:	45 bc 01 00 00 d5    	rex.RB mov r12d,0xd5000001
    43ca:	0f 00 00             	sldt   WORD PTR [rax]
    43cd:	1e                   	(bad)
    43ce:	69 00 16 13 e2 07    	imul   eax,DWORD PTR [rax],0x7e21316
    43d4:	00 00                	add    BYTE PTR [rax],al
    43d6:	58                   	pop    rax
    43d7:	15 00 00 50 15       	adc    eax,0x15500000
    43dc:	00 00                	add    BYTE PTR [rax],al
    43de:	00 12                	add    BYTE PTR [rdx],dl
    43e0:	31 10                	xor    DWORD PTR [rax],edx
    43e2:	00 00                	add    BYTE PTR [rax],al
    43e4:	ca 1e 00             	retf   0x1e
    43e7:	00 00                	add    BYTE PTR [rax],al
    43e9:	00 00                	add    BYTE PTR [rax],al
    43eb:	00 01                	add    BYTE PTR [rcx],al
    43ed:	b5 01                	mov    ch,0x1
    43ef:	00 00                	add    BYTE PTR [rax],al
    43f1:	10 0b                	adc    BYTE PTR [rbx],cl
    43f3:	15 10 00 00 04       	adc    eax,0x4000010
    43f8:	57                   	push   rdi
    43f9:	10 00                	adc    BYTE PTR [rax],al
    43fb:	00 78 15             	add    BYTE PTR [rax+0x15],bh
    43fe:	00 00                	add    BYTE PTR [rax],al
    4400:	76 15                	jbe    4417 <_IO_stdin_used+0x417>
    4402:	00 00                	add    BYTE PTR [rax],al
    4404:	04 4b                	add    al,0x4b
    4406:	10 00                	adc    BYTE PTR [rax],al
    4408:	00 83 15 00 00 81    	add    BYTE PTR [rbx-0x7effffeb],al
    440e:	15 00 00 04 3f       	adc    eax,0x3f040000
    4413:	10 00                	adc    BYTE PTR [rax],al
    4415:	00 8e 15 00 00 8a    	add    BYTE PTR [rsi-0x75ffffeb],cl
    441b:	15 00 00 00 0b       	adc    eax,0xb000000
    4420:	b7 1e                	mov    bh,0x1e
    4422:	00 00                	add    BYTE PTR [rax],al
    4424:	00 00                	add    BYTE PTR [rax],al
    4426:	00 00                	add    BYTE PTR [rax],al
    4428:	94                   	xchg   esp,eax
    4429:	09 00                	or     DWORD PTR [rax],eax
    442b:	00 03                	add    BYTE PTR [rbx],al
    442d:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    4430:	08 80 03 01 54 03    	or     BYTE PTR [rax+0x3540103],al
    4436:	0a 00                	or     al,BYTE PTR [rax]
    4438:	02 00                	add    al,BYTE PTR [rax]
    443a:	00 27                	add    BYTE PTR [rdi],ah
    443c:	6a 18                	push   0x18
    443e:	00 00                	add    BYTE PTR [rax],al
    4440:	39 2e                	cmp    DWORD PTR [rsi],ebp
    4442:	01 00                	add    DWORD PTR [rax],eax
    4444:	00 64 10 00          	add    BYTE PTR [rax+rdx*1+0x0],ah
    4448:	00 0a                	add    BYTE PTR [rdx],cl
    444a:	97                   	xchg   edi,eax
    444b:	05 00 00 02 39       	add    eax,0x39020000
    4450:	01 2e                	add    DWORD PTR [rsi],ebp
    4452:	01 00                	add    DWORD PTR [rax],eax
    4454:	00 0a                	add    BYTE PTR [rdx],cl
    4456:	84 03                	test   BYTE PTR [rbx],al
    4458:	00 00                	add    BYTE PTR [rax],al
    445a:	02 39                	add    bh,BYTE PTR [rcx]
    445c:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    445f:	00 00                	add    BYTE PTR [rax],al
    4461:	0a 90 04 00 00 02    	or     dl,BYTE PTR [rax+0x2000004]
    4467:	39 01                	cmp    DWORD PTR [rcx],eax
    4469:	2e 00 00             	cs add BYTE PTR [rax],al
    446c:	00 00                	add    BYTE PTR [rax],al
    446e:	27                   	(bad)
    446f:	e3 21                	jrcxz  4492 <_IO_stdin_used+0x492>
    4471:	00 00                	add    BYTE PTR [rax],al
    4473:	1a 2e                	sbb    ch,BYTE PTR [rsi]
    4475:	01 00                	add    DWORD PTR [rax],eax
    4477:	00 97 10 00 00 0a    	add    BYTE PTR [rdi+0xa000010],dl
    447d:	97                   	xchg   edi,eax
    447e:	05 00 00 02 1a       	add    eax,0x1a020000
    4483:	01 30                	add    DWORD PTR [rax],esi
    4485:	01 00                	add    DWORD PTR [rax],eax
    4487:	00 0a                	add    BYTE PTR [rdx],cl
    4489:	b5 03                	mov    ch,0x3
    448b:	00 00                	add    BYTE PTR [rax],al
    448d:	02 1a                	add    bl,BYTE PTR [rdx]
    448f:	01 6c 01 00          	add    DWORD PTR [rcx+rax*1+0x0],ebp
    4493:	00 0a                	add    BYTE PTR [rdx],cl
    4495:	90                   	nop
    4496:	04 00                	add    al,0x0
    4498:	00 02                	add    BYTE PTR [rdx],al
    449a:	1a 01                	sbb    al,BYTE PTR [rcx]
    449c:	2e 00 00             	cs add BYTE PTR [rax],al
    449f:	00 00                	add    BYTE PTR [rax],al
    44a1:	46 bf 0a 00 00 70    	rex.RX mov edi,0x7000000a
    44a7:	1e                   	(bad)
    44a8:	00 00                	add    BYTE PTR [rax],al
    44aa:	00 00                	add    BYTE PTR [rax],al
    44ac:	00 00                	add    BYTE PTR [rax],al
    44ae:	25 00 00 00 00       	and    eax,0x0
    44b3:	00 00                	add    BYTE PTR [rax],al
    44b5:	00 01                	add    BYTE PTR [rcx],al
    44b7:	9c                   	pushf
    44b8:	05 11 00 00 47       	add    eax,0x47000011
    44bd:	f5                   	cmc
    44be:	0a 00                	or     al,BYTE PTR [rax]
    44c0:	00 26                	add    BYTE PTR [rsi],ah
    44c2:	e0 0a                	loopne 44ce <_IO_stdin_used+0x4ce>
    44c4:	00 00                	add    BYTE PTR [rax],al
    44c6:	04 d4                	add    al,0xd4
    44c8:	0a 00                	or     al,BYTE PTR [rax]
    44ca:	00 9b 15 00 00 99    	add    BYTE PTR [rbx-0x66ffffeb],bl
    44d0:	15 00 00 0b 95       	adc    eax,0x950b0000
    44d5:	1e                   	(bad)
    44d6:	00 00                	add    BYTE PTR [rax],al
    44d8:	00 00                	add    BYTE PTR [rax],al
    44da:	00 00                	add    BYTE PTR [rax],al
    44dc:	73 09                	jae    44e7 <_IO_stdin_used+0x4e7>
    44de:	00 00                	add    BYTE PTR [rax],al
    44e0:	03 01                	add    eax,DWORD PTR [rcx]
    44e2:	55                   	push   rbp
    44e3:	09 03                	or     DWORD PTR [rbx],eax
    44e5:	7e 40                	jle    4527 <_IO_stdin_used+0x527>
    44e7:	00 00                	add    BYTE PTR [rax],al
    44e9:	00 00                	add    BYTE PTR [rax],al
    44eb:	00 00                	add    BYTE PTR [rax],al
    44ed:	03 01                	add    eax,DWORD PTR [rcx]
    44ef:	54                   	push   rsp
    44f0:	09 03                	or     DWORD PTR [rbx],eax
    44f2:	63 40 00             	movsxd eax,DWORD PTR [rax+0x0]
    44f5:	00 00                	add    BYTE PTR [rax],al
    44f7:	00 00                	add    BYTE PTR [rax],al
    44f9:	00 03                	add    BYTE PTR [rbx],al
    44fb:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    44fe:	08 58 03             	or     BYTE PTR [rax+0x3],bl
    4501:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    4504:	03 40 43             	add    eax,DWORD PTR [rax+0x43]
	...
    450f:	48 bf 0a 00 00 76 05 	movabs rdi,0x700000057600000a
    4516:	00 00 70 
    4519:	21 00                	and    DWORD PTR [rax],eax
    451b:	00 00                	add    BYTE PTR [rax],al
    451d:	00 00                	add    BYTE PTR [rax],al
    451f:	00 5b 00             	add    BYTE PTR [rbx+0x0],bl
    4522:	00 00                	add    BYTE PTR [rax],al
    4524:	00 00                	add    BYTE PTR [rax],al
    4526:	00 00                	add    BYTE PTR [rax],al
    4528:	01 9c ad 11 00 00 04 	add    DWORD PTR [rbp+rbp*4+0x4000011],ebx
    452f:	d4                   	(bad)
    4530:	0a 00                	or     al,BYTE PTR [rax]
    4532:	00 aa 15 00 00 a6    	add    BYTE PTR [rdx-0x59ffffeb],ch
    4538:	15 00 00 49 e0       	adc    eax,0xe0490000
    453d:	0a 00                	or     al,BYTE PTR [rax]
    453f:	00 02                	add    BYTE PTR [rdx],al
    4541:	91                   	xchg   ecx,eax
    4542:	00 0d f5 0a 00 00    	add    BYTE PTR [rip+0xaf5],cl        # 503d <__FRAME_END__+0x321>
    4548:	c2 15 00             	ret    0x15
    454b:	00 bc 15 00 00 12 55 	add    BYTE PTR [rbp+rdx*1+0x55120000],bh
    4552:	0a 00                	or     al,BYTE PTR [rax]
    4554:	00 9f 21 00 00 00    	add    BYTE PTR [rdi+0x21],bl
    455a:	00 00                	add    BYTE PTR [rax],al
    455c:	00 00                	add    BYTE PTR [rax],al
    455e:	1f                   	(bad)
    455f:	02 00                	add    al,BYTE PTR [rax]
    4561:	00 5d 19             	add    BYTE PTR [rbp+0x19],bl
    4564:	8c 11                	mov    WORD PTR [rcx],ss
    4566:	00 00                	add    BYTE PTR [rax],al
    4568:	04 72                	add    al,0x72
    456a:	0a 00                	or     al,BYTE PTR [rax]
    456c:	00 db                	add    bl,bl
    456e:	15 00 00 d9 15       	adc    eax,0x15d90000
    4573:	00 00                	add    BYTE PTR [rax],al
    4575:	04 66                	add    al,0x66
    4577:	0a 00                	or     al,BYTE PTR [rax]
    4579:	00 e8                	add    al,ch
    457b:	15 00 00 e6 15       	adc    eax,0x15e60000
    4580:	00 00                	add    BYTE PTR [rax],al
    4582:	1f                   	(bad)
    4583:	1f                   	(bad)
    4584:	02 00                	add    al,BYTE PTR [rax]
    4586:	00 0d 7e 0a 00 00    	add    BYTE PTR [rip+0xa7e],cl        # 500a <__FRAME_END__+0x2ee>
    458c:	f6 15 00 00 f2 15    	not    BYTE PTR [rip+0x15f20000]        # 15f24592 <_end+0x15f1e57a>
    4592:	00 00                	add    BYTE PTR [rax],al
    4594:	00 00                	add    BYTE PTR [rax],al
    4596:	13 bd 21 00 00 00    	adc    edi,DWORD PTR [rbp+0x21]
    459c:	00 00                	add    BYTE PTR [rax],al
    459e:	00 01                	add    BYTE PTR [rcx],al
    45a0:	30 0b                	xor    BYTE PTR [rbx],cl
    45a2:	cb                   	retf
    45a3:	21 00                	and    DWORD PTR [rax],eax
    45a5:	00 00                	add    BYTE PTR [rax],al
    45a7:	00 00                	add    BYTE PTR [rax],al
    45a9:	00 97 10 00 00 4a    	add    BYTE PTR [rdi+0x4a000010],dl
    45af:	d4                   	(bad)
    45b0:	0a 00                	or     al,BYTE PTR [rax]
    45b2:	00 01                	add    BYTE PTR [rcx],al
    45b4:	30 00                	xor    BYTE PTR [rax],al
    45b6:	00 28                	add    BYTE PTR [rax],ch
    45b8:	1c 05                	sbb    al,0x5
    45ba:	00 00                	add    BYTE PTR [rax],al
    45bc:	12 05 00 00 28 d7    	adc    al,BYTE PTR [rip+0xffffffffd7280000]        # ffffffffd72845c2 <_end+0xffffffffd727e5aa>
    45c2:	09 00                	or     DWORD PTR [rax],eax
    45c4:	00 cd                	add    ch,cl
    45c6:	09 00                	or     DWORD PTR [rax],eax
    45c8:	00 00                	add    BYTE PTR [rax],al
    45ca:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    45cb:	0e                   	(bad)
    45cc:	00 00                	add    BYTE PTR [rax],al
    45ce:	05 00 01 08 7e       	add    eax,0x7e080100
    45d3:	10 00                	adc    BYTE PTR [rax],al
    45d5:	00 22                	add    BYTE PTR [rdx],ah
    45d7:	33 00                	xor    eax,DWORD PTR [rax]
    45d9:	00 00                	add    BYTE PTR [rax],al
    45db:	21 40 02             	and    DWORD PTR [rax+0x2],eax
    45de:	00 00                	add    BYTE PTR [rax],al
    45e0:	00 00                	add    BYTE PTR [rax],al
    45e2:	00 00                	add    BYTE PTR [rax],al
    45e4:	10 22                	adc    BYTE PTR [rdx],ah
    45e6:	00 00                	add    BYTE PTR [rax],al
    45e8:	00 00                	add    BYTE PTR [rax],al
    45ea:	00 00                	add    BYTE PTR [rax],al
    45ec:	72 01                	jb     45ef <_IO_stdin_used+0x5ef>
    45ee:	00 00                	add    BYTE PTR [rax],al
    45f0:	00 00                	add    BYTE PTR [rax],al
    45f2:	00 00                	add    BYTE PTR [rax],al
    45f4:	72 13                	jb     4609 <_IO_stdin_used+0x609>
    45f6:	00 00                	add    BYTE PTR [rax],al
    45f8:	04 2f                	add    al,0x2f
    45fa:	0b 00                	or     eax,DWORD PTR [rax]
    45fc:	00 05 d6 17 3a 00    	add    BYTE PTR [rip+0x3a17d6],al        # 3a5dd8 <_end+0x39fdc0>
    4602:	00 00                	add    BYTE PTR [rax],al
    4604:	06                   	(bad)
    4605:	08 07                	or     BYTE PTR [rdi],al
    4607:	a0 01 00 00 13 08 3c 	movabs al,ds:0x2e33c0813000001
    460e:	e3 02 
    4610:	00 00                	add    BYTE PTR [rax],al
    4612:	66 00 00             	data16 add BYTE PTR [rax],al
    4615:	00 03                	add    BYTE PTR [rbx],al
    4617:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4618:	02 00                	add    al,BYTE PTR [rax]
    461a:	00 06                	add    BYTE PTR [rsi],al
    461c:	3d 09 66 00 00       	cmp    eax,0x6609
    4621:	00 00                	add    BYTE PTR [rax],al
    4623:	14 72                	adc    al,0x72
    4625:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4627:	00 3e                	add    BYTE PTR [rsi],bh
    4629:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    462c:	00 00                	add    BYTE PTR [rax],al
    462e:	04 00                	add    al,0x0
    4630:	23 04 05 69 6e 74 00 	and    eax,DWORD PTR [rax*1+0x746e69]
    4637:	04 e4                	add    al,0xe4
    4639:	02 00                	add    al,BYTE PTR [rax]
    463b:	00 06                	add    BYTE PTR [rsi],al
    463d:	3f                   	(bad)
    463e:	05 41 00 00 00       	add    eax,0x41
    4643:	13 10                	adc    edx,DWORD PTR [rax]
    4645:	44 09 00             	or     DWORD PTR [rax],r8d
    4648:	00 00                	add    BYTE PTR [rax],al
    464a:	9e                   	sahf
    464b:	00 00                	add    BYTE PTR [rax],al
    464d:	00 03                	add    BYTE PTR [rbx],al
    464f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4650:	02 00                	add    al,BYTE PTR [rax]
    4652:	00 06                	add    BYTE PTR [rsi],al
    4654:	45 0e                	rex.RB (bad)
    4656:	9e                   	sahf
    4657:	00 00                	add    BYTE PTR [rax],al
    4659:	00 00                	add    BYTE PTR [rax],al
    465b:	14 72                	adc    al,0x72
    465d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    465f:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4662:	9e                   	sahf
    4663:	00 00                	add    BYTE PTR [rax],al
    4665:	00 08                	add    BYTE PTR [rax],cl
    4667:	00 06                	add    BYTE PTR [rsi],al
    4669:	08 05 92 01 00 00    	or     BYTE PTR [rip+0x192],al        # 4801 <__GNU_EH_FRAME_HDR+0x179>
    466f:	04 0a                	add    al,0xa
    4671:	00 00                	add    BYTE PTR [rax],al
    4673:	00 06                	add    BYTE PTR [rsi],al
    4675:	47 05 79 00 00 00    	rex.RXB add eax,0x79
    467b:	13 10                	adc    edx,DWORD PTR [rax]
    467d:	4e d4                	rex.WRX (bad)
    467f:	01 00                	add    DWORD PTR [rax],eax
    4681:	00 d6                	add    dh,dl
    4683:	00 00                	add    BYTE PTR [rax],al
    4685:	00 03                	add    BYTE PTR [rbx],al
    4687:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4688:	02 00                	add    al,BYTE PTR [rax]
    468a:	00 06                	add    BYTE PTR [rsi],al
    468c:	4f 13 d6             	rex.WRXB adc r10,r14
    468f:	00 00                	add    BYTE PTR [rax],al
    4691:	00 00                	add    BYTE PTR [rax],al
    4693:	14 72                	adc    al,0x72
    4695:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4697:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    469a:	d6                   	(bad)
    469b:	00 00                	add    BYTE PTR [rax],al
    469d:	00 08                	add    BYTE PTR [rax],cl
    469f:	00 06                	add    BYTE PTR [rsi],al
    46a1:	08 05 8d 01 00 00    	or     BYTE PTR [rip+0x18d],al        # 4834 <__GNU_EH_FRAME_HDR+0x1ac>
    46a7:	04 d5                	add    al,0xd5
    46a9:	01 00                	add    DWORD PTR [rax],eax
    46ab:	00 06                	add    BYTE PTR [rsi],al
    46ad:	51                   	push   rcx
    46ae:	05 b1 00 00 00       	add    eax,0xb1
    46b3:	06                   	(bad)
    46b4:	02 07                	add    al,BYTE PTR [rdi]
    46b6:	73 02                	jae    46ba <__GNU_EH_FRAME_HDR+0x32>
    46b8:	00 00                	add    BYTE PTR [rax],al
    46ba:	09 fc                	or     esp,edi
    46bc:	00 00                	add    BYTE PTR [rax],al
    46be:	00 06                	add    BYTE PTR [rsi],al
    46c0:	01 06                	add    DWORD PTR [rsi],eax
    46c2:	2d 02 00 00 0f       	sub    eax,0xf000002
    46c7:	f5                   	cmc
    46c8:	00 00                	add    BYTE PTR [rax],al
    46ca:	00 06                	add    BYTE PTR [rsi],al
    46cc:	01 08                	add    DWORD PTR [rax],ecx
    46ce:	24 02                	and    al,0x2
    46d0:	00 00                	add    BYTE PTR [rax],al
    46d2:	06                   	(bad)
    46d3:	04 07                	add    al,0x7
    46d5:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    46d6:	01 00                	add    DWORD PTR [rax],eax
    46d8:	00 06                	add    BYTE PTR [rsi],al
    46da:	01 06                	add    DWORD PTR [rsi],eax
    46dc:	26 02 00             	es add al,BYTE PTR [rax]
    46df:	00 06                	add    BYTE PTR [rsi],al
    46e1:	02 05 05 01 00 00    	add    al,BYTE PTR [rip+0x105]        # 47ec <__GNU_EH_FRAME_HDR+0x164>
    46e7:	04 53                	add    al,0x53
    46e9:	01 00                	add    DWORD PTR [rax],eax
    46eb:	00 07                	add    BYTE PTR [rdi],al
    46ed:	2a 16                	sub    dl,BYTE PTR [rsi]
    46ef:	08 01                	or     BYTE PTR [rcx],al
    46f1:	00 00                	add    BYTE PTR [rax],al
    46f3:	04 ff                	add    al,0xff
    46f5:	0a 00                	or     al,BYTE PTR [rax]
    46f7:	00 07                	add    BYTE PTR [rdi],al
    46f9:	91                   	xchg   ecx,eax
    46fa:	19 3a                	sbb    DWORD PTR [rdx],edi
    46fc:	00 00                	add    BYTE PTR [rax],al
    46fe:	00 04 8c             	add    BYTE PTR [rsp+rcx*4],al
    4701:	0b 00                	or     eax,DWORD PTR [rax]
    4703:	00 07                	add    BYTE PTR [rdi],al
    4705:	92                   	xchg   edx,eax
    4706:	19 08                	sbb    DWORD PTR [rax],ecx
    4708:	01 00                	add    DWORD PTR [rax],eax
    470a:	00 04 f1             	add    BYTE PTR [rcx+rsi*8],al
    470d:	09 00                	or     DWORD PTR [rax],eax
    470f:	00 07                	add    BYTE PTR [rdi],al
    4711:	93                   	xchg   ebx,eax
    4712:	19 08                	sbb    DWORD PTR [rax],ecx
    4714:	01 00                	add    DWORD PTR [rax],eax
    4716:	00 04 71             	add    BYTE PTR [rcx+rsi*2],al
    4719:	0b 00                	or     eax,DWORD PTR [rax]
    471b:	00 07                	add    BYTE PTR [rdi],al
    471d:	94                   	xchg   esp,eax
    471e:	19 3a                	sbb    DWORD PTR [rdx],edi
    4720:	00 00                	add    BYTE PTR [rax],al
    4722:	00 04 65 0a 00 00 07 	add    BYTE PTR [riz*2+0x700000a],al
    4729:	96                   	xchg   esi,eax
    472a:	1a 08                	sbb    cl,BYTE PTR [rax]
    472c:	01 00                	add    DWORD PTR [rax],eax
    472e:	00 04 b1             	add    BYTE PTR [rcx+rsi*4],al
    4731:	0a 00                	or     al,BYTE PTR [rax]
    4733:	00 07                	add    BYTE PTR [rdi],al
    4735:	97                   	xchg   edi,eax
    4736:	1b 3a                	sbb    edi,DWORD PTR [rdx]
    4738:	00 00                	add    BYTE PTR [rax],al
    473a:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
    473d:	0b 00                	or     eax,DWORD PTR [rax]
    473f:	00 07                	add    BYTE PTR [rdi],al
    4741:	98                   	cwde
    4742:	19 9e 00 00 00 04    	sbb    DWORD PTR [rsi+0x4000000],ebx
    4748:	9b                   	fwait
    4749:	0b 00                	or     eax,DWORD PTR [rax]
    474b:	00 07                	add    BYTE PTR [rdi],al
    474d:	a0 1a 9e 00 00 00 24 	movabs al,ds:0x408240000009e1a
    4754:	08 04 
    4756:	2a 0b                	sub    cl,BYTE PTR [rbx]
    4758:	00 00                	add    BYTE PTR [rax],al
    475a:	07                   	(bad)
    475b:	af                   	scas   eax,DWORD PTR es:[rdi]
    475c:	1d 9e 00 00 00       	sbb    eax,0x9e
    4761:	04 6e                	add    al,0x6e
    4763:	0a 00                	or     al,BYTE PTR [rax]
    4765:	00 07                	add    BYTE PTR [rdi],al
    4767:	b4 1c                	mov    ah,0x1c
    4769:	9e                   	sahf
    476a:	00 00                	add    BYTE PTR [rax],al
    476c:	00 04 79             	add    BYTE PTR [rcx+rdi*2],al
    476f:	0a 00                	or     al,BYTE PTR [rax]
    4771:	00 07                	add    BYTE PTR [rdi],al
    4773:	c2 1b 9e             	ret    0x9e1b
    4776:	00 00                	add    BYTE PTR [rax],al
    4778:	00 04 0e             	add    BYTE PTR [rsi+rcx*1],al
    477b:	0b 00                	or     eax,DWORD PTR [rax]
    477d:	00 07                	add    BYTE PTR [rdi],al
    477f:	c5 21 9e             	(bad)
    4782:	00 00                	add    BYTE PTR [rax],al
    4784:	00 09                	add    BYTE PTR [rcx],cl
    4786:	f5                   	cmc
    4787:	00 00                	add    BYTE PTR [rax],al
    4789:	00 04 7b             	add    BYTE PTR [rbx+rdi*2],al
    478c:	0a 00                	or     al,BYTE PTR [rax]
    478e:	00 08                	add    BYTE PTR [rax],cl
    4790:	6c                   	ins    BYTE PTR es:[rdi],dx
    4791:	13 a3 01 00 00 17    	adc    esp,DWORD PTR [rbx+0x17000001]
    4797:	68 0b 00 00 10       	push   0x1000000b
    479c:	09 0b                	or     DWORD PTR [rbx],ecx
    479e:	f3 01 00             	repz add DWORD PTR [rax],eax
    47a1:	00 03                	add    BYTE PTR [rbx],al
    47a3:	07                   	(bad)
    47a4:	0b 00                	or     eax,DWORD PTR [rax]
    47a6:	00 09                	add    BYTE PTR [rcx],cl
    47a8:	10 0c 7d 01 00 00 00 	adc    BYTE PTR [rdi*2+0x1],cl
    47af:	03 f7                	add    esi,edi
    47b1:	0a 00                	or     al,BYTE PTR [rax]
    47b3:	00 09                	add    BYTE PTR [rcx],cl
    47b5:	15 15 af 01 00       	adc    eax,0x1af15
    47ba:	00 08                	add    BYTE PTR [rax],cl
    47bc:	00 06                	add    BYTE PTR [rsi],al
    47be:	08 07                	or     BYTE PTR [rdi],al
    47c0:	9b                   	fwait
    47c1:	01 00                	add    DWORD PTR [rax],eax
    47c3:	00 25 d5 02 00 00    	add    BYTE PTR [rip+0x2d5],ah        # 4a9e <__GNU_EH_FRAME_HDR+0x416>
    47c9:	06                   	(bad)
    47ca:	b4 03                	mov    ah,0x3
    47cc:	0f 07                	sysretd
    47ce:	02 00                	add    al,BYTE PTR [rax]
    47d0:	00 09                	add    BYTE PTR [rcx],cl
    47d2:	0c 02                	or     al,0x2
    47d4:	00 00                	add    BYTE PTR [rax],al
    47d6:	26 66 00 00          	es data16 add BYTE PTR [rax],al
    47da:	00 20                	add    BYTE PTR [rax],ah
    47dc:	02 00                	add    al,BYTE PTR [rax]
    47de:	00 01                	add    BYTE PTR [rcx],al
    47e0:	20 02                	and    BYTE PTR [rdx],al
    47e2:	00 00                	add    BYTE PTR [rax],al
    47e4:	01 20                	add    DWORD PTR [rax],esp
    47e6:	02 00                	add    al,BYTE PTR [rax]
    47e8:	00 00                	add    BYTE PTR [rax],al
    47ea:	09 25 02 00 00 27    	or     DWORD PTR [rip+0x27000002],esp        # 270047f2 <_end+0x26ffe7da>
    47f0:	28 73 74             	sub    BYTE PTR [rbx+0x74],dh
    47f3:	64 00 16             	add    BYTE PTR fs:[rsi],dl
    47f6:	32 01                	xor    al,BYTE PTR [rcx]
    47f8:	0b f6                	or     esi,esi
    47fa:	03 00                	add    eax,DWORD PTR [rax]
    47fc:	00 02                	add    BYTE PTR [rdx],al
    47fe:	0a 83 0b 6d 00 00    	or     al,BYTE PTR [rbx+0x6d0b]
    4804:	00 02                	add    BYTE PTR [rdx],al
    4806:	0a 84 0b a5 00 00 00 	or     al,BYTE PTR [rbx+rcx*1+0xa5]
    480d:	02 0a                	add    cl,BYTE PTR [rdx]
    480f:	8a 0b                	mov    cl,BYTE PTR [rbx]
    4811:	f6 03 00             	test   BYTE PTR [rbx],0x0
    4814:	00 02                	add    BYTE PTR [rdx],al
    4816:	0a 8d 0b 13 04 00    	or     cl,BYTE PTR [rbp+0x4130b]
    481c:	00 02                	add    BYTE PTR [rdx],al
    481e:	0a 90 0b 2e 04 00    	or     dl,BYTE PTR [rax+0x42e0b]
    4824:	00 02                	add    BYTE PTR [rdx],al
    4826:	0a 91 0b 4b 04 00    	or     dl,BYTE PTR [rcx+0x44b0b]
    482c:	00 02                	add    BYTE PTR [rdx],al
    482e:	0a 92 0b 62 04 00    	or     dl,BYTE PTR [rdx+0x4620b]
    4834:	00 02                	add    BYTE PTR [rdx],al
    4836:	0a 93 0b 79 04 00    	or     dl,BYTE PTR [rbx+0x4790b]
    483c:	00 02                	add    BYTE PTR [rdx],al
    483e:	0a 95 0b a3 04 00    	or     dl,BYTE PTR [rbp+0x4a30b]
    4844:	00 02                	add    BYTE PTR [rdx],al
    4846:	0a 98 0b bf 04 00    	or     bl,BYTE PTR [rax+0x4bf0b]
    484c:	00 02                	add    BYTE PTR [rdx],al
    484e:	0a 9a 0b d6 04 00    	or     bl,BYTE PTR [rdx+0x4d60b]
    4854:	00 02                	add    BYTE PTR [rdx],al
    4856:	0a 9d 0b f2 04 00    	or     bl,BYTE PTR [rbp+0x4f20b]
    485c:	00 02                	add    BYTE PTR [rdx],al
    485e:	0a 9e 0b 0e 05 00    	or     bl,BYTE PTR [rsi+0x50e0b]
    4864:	00 02                	add    BYTE PTR [rdx],al
    4866:	0a 9f 0b 3f 05 00    	or     bl,BYTE PTR [rdi+0x53f0b]
    486c:	00 02                	add    BYTE PTR [rdx],al
    486e:	0a a1 0b 60 05 00    	or     ah,BYTE PTR [rcx+0x5600b]
    4874:	00 02                	add    BYTE PTR [rdx],al
    4876:	0a a4 0b 80 05 00 00 	or     ah,BYTE PTR [rbx+rcx*1+0x580]
    487d:	02 0a                	add    cl,BYTE PTR [rdx]
    487f:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    4880:	0b 93 05 00 00 02    	or     edx,DWORD PTR [rbx+0x2000005]
    4886:	0a a9 0b a0 05 00    	or     ch,BYTE PTR [rcx+0x5a00b]
    488c:	00 02                	add    BYTE PTR [rdx],al
    488e:	0a aa 0b b1 05 00    	or     ch,BYTE PTR [rdx+0x5b10b]
    4894:	00 02                	add    BYTE PTR [rdx],al
    4896:	0a ab 0b d1 05 00    	or     ch,BYTE PTR [rbx+0x5d10b]
    489c:	00 02                	add    BYTE PTR [rdx],al
    489e:	0a ac 0b f5 05 00 00 	or     ch,BYTE PTR [rbx+rcx*1+0x5f5]
    48a5:	02 0a                	add    cl,BYTE PTR [rdx]
    48a7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    48a8:	0b 19                	or     ebx,DWORD PTR [rcx]
    48aa:	06                   	(bad)
    48ab:	00 00                	add    BYTE PTR [rax],al
    48ad:	02 0a                	add    cl,BYTE PTR [rdx]
    48af:	af                   	scas   eax,DWORD PTR es:[rdi]
    48b0:	0b 30                	or     esi,DWORD PTR [rax]
    48b2:	06                   	(bad)
    48b3:	00 00                	add    BYTE PTR [rax],al
    48b5:	02 0a                	add    cl,BYTE PTR [rdx]
    48b7:	b0 0b                	mov    al,0xb
    48b9:	55                   	push   rbp
    48ba:	06                   	(bad)
    48bb:	00 00                	add    BYTE PTR [rax],al
    48bd:	02 0a                	add    cl,BYTE PTR [rdx]
    48bf:	f4                   	hlt
    48c0:	16                   	(bad)
    48c1:	dd 00                	fld    QWORD PTR [rax]
    48c3:	00 00                	add    BYTE PTR [rax],al
    48c5:	02 0a                	add    cl,BYTE PTR [rdx]
    48c7:	f9                   	stc
    48c8:	16                   	(bad)
    48c9:	b5 06                	mov    ch,0x6
    48cb:	00 00                	add    BYTE PTR [rax],al
    48cd:	02 0a                	add    cl,BYTE PTR [rdx]
    48cf:	fa                   	cli
    48d0:	16                   	(bad)
    48d1:	cf                   	iret
    48d2:	06                   	(bad)
    48d3:	00 00                	add    BYTE PTR [rax],al
    48d5:	02 0a                	add    cl,BYTE PTR [rdx]
    48d7:	fc                   	cld
    48d8:	16                   	(bad)
    48d9:	eb 06                	jmp    48e1 <__GNU_EH_FRAME_HDR+0x259>
    48db:	00 00                	add    BYTE PTR [rax],al
    48dd:	02 0a                	add    cl,BYTE PTR [rdx]
    48df:	fd                   	std
    48e0:	16                   	(bad)
    48e1:	4a 07                	rex.WX (bad)
    48e3:	00 00                	add    BYTE PTR [rax],al
    48e5:	02 0a                	add    cl,BYTE PTR [rdx]
    48e7:	fe                   	(bad)
    48e8:	16                   	(bad)
    48e9:	02 07                	add    al,BYTE PTR [rdi]
    48eb:	00 00                	add    BYTE PTR [rax],al
    48ed:	02 0a                	add    cl,BYTE PTR [rdx]
    48ef:	ff 16                	call   QWORD PTR [rsi]
    48f1:	26 07                	es (bad)
    48f3:	00 00                	add    BYTE PTR [rax],al
    48f5:	29 0a                	sub    DWORD PTR [rdx],ecx
    48f7:	00 01                	add    BYTE PTR [rcx],al
    48f9:	16                   	(bad)
    48fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    48fb:	07                   	(bad)
    48fc:	00 00                	add    BYTE PTR [rax],al
    48fe:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4901:	73 00                	jae    4903 <__GNU_EH_FRAME_HDR+0x27b>
    4903:	89 15 03 00 00 b6    	mov    DWORD PTR [rip+0xffffffffb6000003],edx        # ffffffffb600490c <_end+0xffffffffb5ffe8f4>
    4909:	07                   	(bad)
    490a:	00 00                	add    BYTE PTR [rax],al
    490c:	4c 03 00             	add    r8,QWORD PTR [rax]
    490f:	00 01                	add    BYTE PTR [rcx],al
    4911:	b6 07                	mov    dh,0x7
    4913:	00 00                	add    BYTE PTR [rax],al
    4915:	00 0a                	add    BYTE PTR [rdx],cl
    4917:	61                   	(bad)
    4918:	62 73 00 55 1b       	(bad)
    491d:	00 00                	add    BYTE PTR [rax],al
    491f:	00 c5                	add    ch,al
    4921:	07                   	(bad)
    4922:	00 00                	add    BYTE PTR [rax],al
    4924:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    4927:	00 01                	add    BYTE PTR [rcx],al
    4929:	c5 07 00             	(bad)
    492c:	00 00                	add    BYTE PTR [rax],al
    492e:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4931:	73 00                	jae    4933 <__GNU_EH_FRAME_HDR+0x2ab>
    4933:	4f 01 03             	rex.WRXB add QWORD PTR [r11],r8
    4936:	00 00                	add    BYTE PTR [rax],al
    4938:	87 07                	xchg   DWORD PTR [rdi],eax
    493a:	00 00                	add    BYTE PTR [rax],al
    493c:	7c 03                	jl     4941 <__GNU_EH_FRAME_HDR+0x2b9>
    493e:	00 00                	add    BYTE PTR [rax],al
    4940:	01 87 07 00 00 00    	add    DWORD PTR [rdi+0x7],eax
    4946:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4949:	73 00                	jae    494b <__GNU_EH_FRAME_HDR+0x2c3>
    494b:	4b 0b 03             	rex.WXB or rax,QWORD PTR [r11]
    494e:	00 00                	add    BYTE PTR [rax],al
    4950:	65 07                	gs (bad)
    4952:	00 00                	add    BYTE PTR [rax],al
    4954:	94                   	xchg   esp,eax
    4955:	03 00                	add    eax,DWORD PTR [rax]
    4957:	00 01                	add    BYTE PTR [rcx],al
    4959:	65 07                	gs (bad)
    495b:	00 00                	add    BYTE PTR [rax],al
    495d:	00 0a                	add    BYTE PTR [rdx],cl
    495f:	61                   	(bad)
    4960:	62 73 00 47 f7       	(bad)
    4965:	02 00                	add    al,BYTE PTR [rax]
    4967:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    496b:	00 ac 03 00 00 01 44 	add    BYTE PTR [rbx+rax*1+0x44010000],ch
    4972:	04 00                	add    al,0x0
    4974:	00 00                	add    BYTE PTR [rax],al
    4976:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4979:	73 00                	jae    497b <__GNU_EH_FRAME_HDR+0x2f3>
    497b:	3d eb 00 00 00       	cmp    eax,0xeb
    4980:	d6                   	(bad)
    4981:	00 00                	add    BYTE PTR [rax],al
    4983:	00 c4                	add    ah,al
    4985:	03 00                	add    eax,DWORD PTR [rax]
    4987:	00 01                	add    BYTE PTR [rcx],al
    4989:	d6                   	(bad)
    498a:	00 00                	add    BYTE PTR [rax],al
    498c:	00 00                	add    BYTE PTR [rax],al
    498e:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4991:	73 00                	jae    4993 <__GNU_EH_FRAME_HDR+0x30b>
    4993:	38 11                	cmp    BYTE PTR [rcx],dl
    4995:	00 00                	add    BYTE PTR [rax],al
    4997:	00 9e 00 00 00 dc    	add    BYTE PTR [rsi-0x24000000],bl
    499d:	03 00                	add    eax,DWORD PTR [rax]
    499f:	00 01                	add    BYTE PTR [rcx],al
    49a1:	9e                   	sahf
    49a2:	00 00                	add    BYTE PTR [rax],al
    49a4:	00 00                	add    BYTE PTR [rax],al
    49a6:	18 64 69 76          	sbb    BYTE PTR [rcx+rbp*2+0x76],ah
    49aa:	00 b5 1e 01 00 00    	add    BYTE PTR [rbp+0x11e],dh
    49b0:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    49b1:	00 00                	add    BYTE PTR [rax],al
    49b3:	00 01                	add    BYTE PTR [rcx],al
    49b5:	9e                   	sahf
    49b6:	00 00                	add    BYTE PTR [rax],al
    49b8:	00 01                	add    BYTE PTR [rcx],al
    49ba:	9e                   	sahf
    49bb:	00 00                	add    BYTE PTR [rax],al
    49bd:	00 00                	add    BYTE PTR [rax],al
    49bf:	00 07                	add    BYTE PTR [rdi],al
    49c1:	17                   	(bad)
    49c2:	01 00                	add    DWORD PTR [rax],eax
    49c4:	00 06                	add    BYTE PTR [rsi],al
    49c6:	de 02                	fiadd  WORD PTR [rdx]
    49c8:	0c 66                	or     al,0x66
    49ca:	00 00                	add    BYTE PTR [rax],al
    49cc:	00 0d 04 00 00 01    	add    BYTE PTR [rip+0x1000004],cl        # 10049d6 <_end+0xffe9be>
    49d2:	0d 04 00 00 00       	or     eax,0x4
    49d7:	09 12                	or     DWORD PTR [rdx],edx
    49d9:	04 00                	add    al,0x0
    49db:	00 2a                	add    BYTE PTR [rdx],ch
    49dd:	2b dd                	sub    ebx,ebp
    49df:	00 00                	add    BYTE PTR [rax],al
    49e1:	00 06                	add    BYTE PTR [rsi],al
    49e3:	e3 02                	jrcxz  49e7 <__GNU_EH_FRAME_HDR+0x35f>
    49e5:	12 dd                	adc    bl,ch
    49e7:	00 00                	add    BYTE PTR [rax],al
    49e9:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    49ec:	00 00                	add    BYTE PTR [rax],al
    49ee:	2e 04 00             	cs add al,0x0
    49f1:	00 01                	add    BYTE PTR [rcx],al
    49f3:	0d 04 00 00 00       	or     eax,0x4
    49f8:	08 f2                	or     dl,dh
    49fa:	01 00                	add    DWORD PTR [rax],eax
    49fc:	00 0c 19             	add    BYTE PTR [rcx+rbx*1],cl
    49ff:	01 44 04 00          	add    DWORD PTR [rsp+rax*1+0x0],eax
    4a03:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    4a07:	00 01                	add    BYTE PTR [rcx],al
    4a09:	f0 00 00             	lock add BYTE PTR [rax],al
    4a0c:	00 00                	add    BYTE PTR [rax],al
    4a0e:	06                   	(bad)
    4a0f:	08 04 1d 02 00 00 07 	or     BYTE PTR [rbx*1+0x7000002],al
    4a16:	f7 01 00 00 06 e1    	test   DWORD PTR [rcx],0xe1060000
    4a1c:	01 01                	add    DWORD PTR [rcx],eax
    4a1e:	66 00 00             	data16 add BYTE PTR [rax],al
    4a21:	00 62 04             	add    BYTE PTR [rdx+0x4],ah
    4a24:	00 00                	add    BYTE PTR [rax],al
    4a26:	01 f0                	add    eax,esi
    4a28:	00 00                	add    BYTE PTR [rax],al
    4a2a:	00 00                	add    BYTE PTR [rax],al
    4a2c:	07                   	(bad)
    4a2d:	01 02                	add    DWORD PTR [rdx],eax
    4a2f:	00 00                	add    BYTE PTR [rax],al
    4a31:	06                   	(bad)
    4a32:	e6 01                	out    0x1,al
    4a34:	01 9e 00 00 00 79    	add    DWORD PTR [rsi+0x79000000],ebx
    4a3a:	04 00                	add    al,0x0
    4a3c:	00 01                	add    BYTE PTR [rcx],al
    4a3e:	f0 00 00             	lock add BYTE PTR [rax],al
    4a41:	00 00                	add    BYTE PTR [rax],al
    4a43:	08 0f                	or     BYTE PTR [rdi],cl
    4a45:	01 00                	add    DWORD PTR [rax],eax
    4a47:	00 0d 14 01 89 01    	add    BYTE PTR [rip+0x1890114],cl        # 1894b61 <_end+0x188eb49>
    4a4d:	00 00                	add    BYTE PTR [rax],al
    4a4f:	a3 04 00 00 01 20 02 	movabs ds:0x22001000004,eax
    4a56:	00 00 
    4a58:	01 20                	add    DWORD PTR [rax],esp
    4a5a:	02 00                	add    al,BYTE PTR [rax]
    4a5c:	00 01                	add    BYTE PTR [rcx],al
    4a5e:	2e 00 00             	cs add BYTE PTR [rax],al
    4a61:	00 01                	add    BYTE PTR [rcx],al
    4a63:	2e 00 00             	cs add BYTE PTR [rax],al
    4a66:	00 01                	add    BYTE PTR [rcx],al
    4a68:	fa                   	cli
    4a69:	01 00                	add    DWORD PTR [rax],eax
    4a6b:	00 00                	add    BYTE PTR [rax],al
    4a6d:	2c 64                	sub    al,0x64
    4a6f:	69 76 00 06 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e006
    4a76:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a77:	00 00                	add    BYTE PTR [rax],al
    4a79:	00 bf 04 00 00 01    	add    BYTE PTR [rdi+0x1000004],bh
    4a7f:	66 00 00             	data16 add BYTE PTR [rax],al
    4a82:	00 01                	add    BYTE PTR [rcx],al
    4a84:	66 00 00             	data16 add BYTE PTR [rax],al
    4a87:	00 00                	add    BYTE PTR [rax],al
    4a89:	07                   	(bad)
    4a8a:	6a 01                	push   0x1
    4a8c:	00 00                	add    BYTE PTR [rax],al
    4a8e:	06                   	(bad)
    4a8f:	05 03 0e bb 01       	add    eax,0x1bb0e03
    4a94:	00 00                	add    BYTE PTR [rax],al
    4a96:	d6                   	(bad)
    4a97:	04 00                	add    al,0x0
    4a99:	00 01                	add    BYTE PTR [rcx],al
    4a9b:	f0 00 00             	lock add BYTE PTR [rax],al
    4a9e:	00 00                	add    BYTE PTR [rax],al
    4aa0:	07                   	(bad)
    4aa1:	c9                   	leave
    4aa2:	02 00                	add    al,BYTE PTR [rax]
    4aa4:	00 06                	add    BYTE PTR [rsi],al
    4aa6:	e2 03                	loop   4aab <__GNU_EH_FRAME_HDR+0x423>
    4aa8:	0f a5 00             	shld   DWORD PTR [rax],eax,cl
    4aab:	00 00                	add    BYTE PTR [rax],al
    4aad:	f2 04 00             	repnz add al,0x0
    4ab0:	00 01                	add    BYTE PTR [rcx],al
    4ab2:	9e                   	sahf
    4ab3:	00 00                	add    BYTE PTR [rax],al
    4ab5:	00 01                	add    BYTE PTR [rcx],al
    4ab7:	9e                   	sahf
    4ab8:	00 00                	add    BYTE PTR [rax],al
    4aba:	00 00                	add    BYTE PTR [rax],al
    4abc:	07                   	(bad)
    4abd:	58                   	pop    rax
    4abe:	02 00                	add    al,BYTE PTR [rax]
    4ac0:	00 06                	add    BYTE PTR [rsi],al
    4ac2:	26 04 0c             	es add al,0xc
    4ac5:	66 00 00             	data16 add BYTE PTR [rax],al
    4ac8:	00 0e                	add    BYTE PTR [rsi],cl
    4aca:	05 00 00 01 f0       	add    eax,0xf0010000
    4acf:	00 00                	add    BYTE PTR [rax],al
    4ad1:	00 01                	add    BYTE PTR [rcx],al
    4ad3:	2e 00 00             	cs add BYTE PTR [rax],al
    4ad6:	00 00                	add    BYTE PTR [rax],al
    4ad8:	08 5e 02             	or     BYTE PTR [rsi+0x2],bl
    4adb:	00 00                	add    BYTE PTR [rax],al
    4add:	0e                   	(bad)
    4ade:	75 01                	jne    4ae1 <__GNU_EH_FRAME_HDR+0x459>
    4ae0:	2e 00 00             	cs add BYTE PTR [rax],al
    4ae3:	00 2e                	add    BYTE PTR [rsi],ch
    4ae5:	05 00 00 01 2e       	add    eax,0x2e010000
    4aea:	05 00 00 01 f0       	add    eax,0xf0010000
    4aef:	00 00                	add    BYTE PTR [rax],al
    4af1:	00 01                	add    BYTE PTR [rcx],al
    4af3:	2e 00 00             	cs add BYTE PTR [rax],al
    4af6:	00 00                	add    BYTE PTR [rax],al
    4af8:	09 33                	or     DWORD PTR [rbx],esi
    4afa:	05 00 00 06 04       	add    eax,0x4060000
    4aff:	05 86 02 00 00       	add    eax,0x286
    4b04:	0f 33                	rdpmc
    4b06:	05 00 00 07 86       	add    eax,0x86070000
    4b0b:	01 00                	add    DWORD PTR [rax],eax
    4b0d:	00 06                	add    BYTE PTR [rsi],al
    4b0f:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    4b12:	66 00 00             	data16 add BYTE PTR [rax],al
    4b15:	00 60 05             	add    BYTE PTR [rax+0x5],ah
    4b18:	00 00                	add    BYTE PTR [rax],al
    4b1a:	01 2e                	add    DWORD PTR [rsi],ebp
    4b1c:	05 00 00 01 f0       	add    eax,0xf0010000
    4b21:	00 00                	add    BYTE PTR [rax],al
    4b23:	00 01                	add    BYTE PTR [rcx],al
    4b25:	2e 00 00             	cs add BYTE PTR [rax],al
    4b28:	00 00                	add    BYTE PTR [rax],al
    4b2a:	19 25 00 00 00 ca    	sbb    DWORD PTR [rip+0xffffffffca000000],esp        # ffffffffca004b30 <_end+0xffffffffc9ffeb18>
    4b30:	03 80 05 00 00 01    	add    eax,DWORD PTR [rax+0x1000005]
    4b36:	89 01                	mov    DWORD PTR [rcx],eax
    4b38:	00 00                	add    BYTE PTR [rax],al
    4b3a:	01 2e                	add    DWORD PTR [rsi],ebp
    4b3c:	00 00                	add    BYTE PTR [rax],al
    4b3e:	00 01                	add    BYTE PTR [rcx],al
    4b40:	2e 00 00             	cs add BYTE PTR [rax],al
    4b43:	00 01                	add    BYTE PTR [rcx],al
    4b45:	fa                   	cli
    4b46:	01 00                	add    DWORD PTR [rax],eax
    4b48:	00 00                	add    BYTE PTR [rax],al
    4b4a:	2d e0 00 00 00       	sub    eax,0xe0
    4b4f:	06                   	(bad)
    4b50:	fa                   	cli
    4b51:	02 0d 93 05 00 00    	add    cl,BYTE PTR [rip+0x593]        # 50ea <__FRAME_END__+0x3ce>
    4b57:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4b5a:	00 00                	add    BYTE PTR [rax],al
    4b5c:	00 2e                	add    BYTE PTR [rsi],ch
    4b5e:	f2 02 00             	repnz add al,BYTE PTR [rax]
    4b61:	00 06                	add    BYTE PTR [rsi],al
    4b63:	3d 02 0c 66 00       	cmp    eax,0x660c02
    4b68:	00 00                	add    BYTE PTR [rax],al
    4b6a:	19 f1                	sbb    ecx,esi
    4b6c:	02 00                	add    al,BYTE PTR [rax]
    4b6e:	00 3f                	add    BYTE PTR [rdi],bh
    4b70:	02 b1 05 00 00 01    	add    dh,BYTE PTR [rcx+0x1000005]
    4b76:	08 01                	or     BYTE PTR [rcx],al
    4b78:	00 00                	add    BYTE PTR [rax],al
    4b7a:	00 08                	add    BYTE PTR [rax],cl
    4b7c:	c5 01 00             	(bad)
    4b7f:	00 06                	add    BYTE PTR [rsi],al
    4b81:	76 0f                	jbe    4b92 <__GNU_EH_FRAME_HDR+0x50a>
    4b83:	44 04 00             	rex.R add al,0x0
    4b86:	00 cc                	add    ah,cl
    4b88:	05 00 00 01 f0       	add    eax,0xf0010000
    4b8d:	00 00                	add    BYTE PTR [rax],al
    4b8f:	00 01                	add    BYTE PTR [rcx],al
    4b91:	cc                   	int3
    4b92:	05 00 00 00 09       	add    eax,0x9000000
    4b97:	bb 01 00 00 0b       	mov    ebx,0xb000001
    4b9c:	fe 00                	inc    BYTE PTR [rax]
    4b9e:	00 00                	add    BYTE PTR [rax],al
    4ba0:	06                   	(bad)
    4ba1:	d7                   	xlat   BYTE PTR ds:[rbx]
    4ba2:	11 f5                	adc    ebp,esi
    4ba4:	00 00                	add    BYTE PTR [rax],al
    4ba6:	00 9e 00 00 00 f5    	add    BYTE PTR [rsi-0xb000000],bl
    4bac:	05 00 00 01 f0       	add    eax,0xf0010000
    4bb1:	00 00                	add    BYTE PTR [rax],al
    4bb3:	00 01                	add    BYTE PTR [rcx],al
    4bb5:	cc                   	int3
    4bb6:	05 00 00 01 66       	add    eax,0x66010000
    4bbb:	00 00                	add    BYTE PTR [rax],al
    4bbd:	00 00                	add    BYTE PTR [rax],al
    4bbf:	0b 4a 02             	or     ecx,DWORD PTR [rdx+0x2]
    4bc2:	00 00                	add    BYTE PTR [rax],al
    4bc4:	06                   	(bad)
    4bc5:	db 1a                	fistp  DWORD PTR [rdx]
    4bc7:	41 02 00             	add    al,BYTE PTR [r8]
    4bca:	00 3a                	add    BYTE PTR [rdx],bh
    4bcc:	00 00                	add    BYTE PTR [rax],al
    4bce:	00 19                	add    BYTE PTR [rcx],bl
    4bd0:	06                   	(bad)
    4bd1:	00 00                	add    BYTE PTR [rax],al
    4bd3:	01 f0                	add    eax,esi
    4bd5:	00 00                	add    BYTE PTR [rax],al
    4bd7:	00 01                	add    BYTE PTR [rcx],al
    4bd9:	cc                   	int3
    4bda:	05 00 00 01 66       	add    eax,0x66010000
    4bdf:	00 00                	add    BYTE PTR [rax],al
    4be1:	00 00                	add    BYTE PTR [rax],al
    4be3:	07                   	(bad)
    4be4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4be5:	26 00 00             	es add BYTE PTR [rax],al
    4be8:	06                   	(bad)
    4be9:	9b                   	fwait
    4bea:	03 0c 66             	add    ecx,DWORD PTR [rsi+riz*2]
    4bed:	00 00                	add    BYTE PTR [rax],al
    4bef:	00 30                	add    BYTE PTR [rax],dh
    4bf1:	06                   	(bad)
    4bf2:	00 00                	add    BYTE PTR [rax],al
    4bf4:	01 f0                	add    eax,esi
    4bf6:	00 00                	add    BYTE PTR [rax],al
    4bf8:	00 00                	add    BYTE PTR [rax],al
    4bfa:	08 06                	or     BYTE PTR [rsi],al
    4bfc:	02 00                	add    al,BYTE PTR [rax]
    4bfe:	00 0e                	add    BYTE PTR [rsi],cl
    4c00:	8f 01                	pop    QWORD PTR [rcx]
    4c02:	2e 00 00             	cs add BYTE PTR [rax],al
    4c05:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    4c08:	00 00                	add    BYTE PTR [rax],al
    4c0a:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4c10:	50                   	push   rax
    4c11:	06                   	(bad)
    4c12:	00 00                	add    BYTE PTR [rax],al
    4c14:	01 2e                	add    DWORD PTR [rsi],ebp
    4c16:	00 00                	add    BYTE PTR [rax],al
    4c18:	00 00                	add    BYTE PTR [rax],al
    4c1a:	09 3a                	or     DWORD PTR [rdx],edi
    4c1c:	05 00 00 08 67       	add    eax,0x67080000
    4c21:	02 00                	add    al,BYTE PTR [rax]
    4c23:	00 0e                	add    BYTE PTR [rsi],cl
    4c25:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    4c29:	00 00                	add    BYTE PTR [rax],al
    4c2b:	70 06                	jo     4c33 <__GNU_EH_FRAME_HDR+0x5ab>
    4c2d:	00 00                	add    BYTE PTR [rax],al
    4c2f:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4c35:	33 05 00 00 00 2f    	xor    eax,DWORD PTR [rip+0x2f000000]        # 2f004c3b <_end+0x2effec23>
    4c3b:	37                   	(bad)
    4c3c:	02 00                	add    al,BYTE PTR [rax]
    4c3e:	00 16                	add    BYTE PTR [rsi],dl
    4c40:	57                   	push   rdi
    4c41:	01 0b                	add    DWORD PTR [rbx],ecx
    4c43:	cf                   	iret
    4c44:	06                   	(bad)
    4c45:	00 00                	add    BYTE PTR [rax],al
    4c47:	02 0a                	add    cl,BYTE PTR [rdx]
    4c49:	cc                   	int3
    4c4a:	0b dd                	or     ebx,ebp
    4c4c:	00 00                	add    BYTE PTR [rax],al
    4c4e:	00 02                	add    BYTE PTR [rdx],al
    4c50:	0a dc                	or     bl,ah
    4c52:	0b cf                	or     ecx,edi
    4c54:	06                   	(bad)
    4c55:	00 00                	add    BYTE PTR [rax],al
    4c57:	02 0a                	add    cl,BYTE PTR [rdx]
    4c59:	e7 0b                	out    0xb,eax
    4c5b:	eb 06                	jmp    4c63 <__GNU_EH_FRAME_HDR+0x5db>
    4c5d:	00 00                	add    BYTE PTR [rax],al
    4c5f:	02 0a                	add    cl,BYTE PTR [rdx]
    4c61:	e8 0b 02 07 00       	call   74e71 <_end+0x6ee59>
    4c66:	00 02                	add    BYTE PTR [rdx],al
    4c68:	0a e9                	or     ch,cl
    4c6a:	0b 26                	or     esp,DWORD PTR [rsi]
    4c6c:	07                   	(bad)
    4c6d:	00 00                	add    BYTE PTR [rax],al
    4c6f:	02 0a                	add    cl,BYTE PTR [rdx]
    4c71:	eb 0b                	jmp    4c7e <__GNU_EH_FRAME_HDR+0x5f6>
    4c73:	4a 07                	rex.WX (bad)
    4c75:	00 00                	add    BYTE PTR [rax],al
    4c77:	02 0a                	add    cl,BYTE PTR [rdx]
    4c79:	ec                   	in     al,dx
    4c7a:	0b 6c 07 00          	or     ebp,DWORD PTR [rdi+rax*1+0x0]
    4c7e:	00 18                	add    BYTE PTR [rax],bl
    4c80:	64 69 76 00 d9 dd 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1ddd9
    4c87:	00 
    4c88:	00 dd                	add    ch,bl
    4c8a:	00 00                	add    BYTE PTR [rax],al
    4c8c:	00 01                	add    BYTE PTR [rcx],al
    4c8e:	d6                   	(bad)
    4c8f:	00 00                	add    BYTE PTR [rax],al
    4c91:	00 01                	add    BYTE PTR [rcx],al
    4c93:	d6                   	(bad)
    4c94:	00 00                	add    BYTE PTR [rax],al
    4c96:	00 00                	add    BYTE PTR [rax],al
    4c98:	00 07                	add    BYTE PTR [rdi],al
    4c9a:	c8 02 00 00          	enter  0x2,0x0
    4c9e:	06                   	(bad)
    4c9f:	e6 03                	out    0x3,al
    4ca1:	1e                   	(bad)
    4ca2:	dd 00                	fld    QWORD PTR [rax]
    4ca4:	00 00                	add    BYTE PTR [rax],al
    4ca6:	eb 06                	jmp    4cae <__GNU_EH_FRAME_HDR+0x626>
    4ca8:	00 00                	add    BYTE PTR [rax],al
    4caa:	01 d6                	add    esi,edx
    4cac:	00 00                	add    BYTE PTR [rax],al
    4cae:	00 01                	add    BYTE PTR [rcx],al
    4cb0:	d6                   	(bad)
    4cb1:	00 00                	add    BYTE PTR [rax],al
    4cb3:	00 00                	add    BYTE PTR [rax],al
    4cb5:	07                   	(bad)
    4cb6:	52                   	push   rdx
    4cb7:	02 00                	add    al,BYTE PTR [rax]
    4cb9:	00 06                	add    BYTE PTR [rsi],al
    4cbb:	ed                   	in     eax,dx
    4cbc:	01 01                	add    DWORD PTR [rcx],eax
    4cbe:	d6                   	(bad)
    4cbf:	00 00                	add    BYTE PTR [rax],al
    4cc1:	00 02                	add    BYTE PTR [rdx],al
    4cc3:	07                   	(bad)
    4cc4:	00 00                	add    BYTE PTR [rax],al
    4cc6:	01 f0                	add    eax,esi
    4cc8:	00 00                	add    BYTE PTR [rax],al
    4cca:	00 00                	add    BYTE PTR [rax],al
    4ccc:	0b 32                	or     esi,DWORD PTR [rdx]
    4cce:	01 00                	add    DWORD PTR [rax],eax
    4cd0:	00 06                	add    BYTE PTR [rsi],al
    4cd2:	ee                   	out    dx,al
    4cd3:	16                   	(bad)
    4cd4:	29 01                	sub    DWORD PTR [rcx],eax
    4cd6:	00 00                	add    BYTE PTR [rax],al
    4cd8:	d6                   	(bad)
    4cd9:	00 00                	add    BYTE PTR [rax],al
    4cdb:	00 26                	add    BYTE PTR [rsi],ah
    4cdd:	07                   	(bad)
    4cde:	00 00                	add    BYTE PTR [rax],al
    4ce0:	01 f0                	add    eax,esi
    4ce2:	00 00                	add    BYTE PTR [rax],al
    4ce4:	00 01                	add    BYTE PTR [rcx],al
    4ce6:	cc                   	int3
    4ce7:	05 00 00 01 66       	add    eax,0x66010000
    4cec:	00 00                	add    BYTE PTR [rax],al
    4cee:	00 00                	add    BYTE PTR [rax],al
    4cf0:	0b bf 02 00 00 06    	or     edi,DWORD PTR [rdi+0x6000002]
    4cf6:	f3 1f                	repz (bad)
    4cf8:	b6 02                	mov    dh,0x2
    4cfa:	00 00                	add    BYTE PTR [rax],al
    4cfc:	f3 01 00             	repz add DWORD PTR [rax],eax
    4cff:	00 4a 07             	add    BYTE PTR [rdx+0x7],cl
    4d02:	00 00                	add    BYTE PTR [rax],al
    4d04:	01 f0                	add    eax,esi
    4d06:	00 00                	add    BYTE PTR [rax],al
    4d08:	00 01                	add    BYTE PTR [rcx],al
    4d0a:	cc                   	int3
    4d0b:	05 00 00 01 66       	add    eax,0x66010000
    4d10:	00 00                	add    BYTE PTR [rax],al
    4d12:	00 00                	add    BYTE PTR [rax],al
    4d14:	08 af 02 00 00 06    	or     BYTE PTR [rdi+0x6000002],ch
    4d1a:	7c 0e                	jl     4d2a <__FRAME_END__+0xe>
    4d1c:	65 07                	gs (bad)
    4d1e:	00 00                	add    BYTE PTR [rax],al
    4d20:	65 07                	gs (bad)
    4d22:	00 00                	add    BYTE PTR [rax],al
    4d24:	01 f0                	add    eax,esi
    4d26:	00 00                	add    BYTE PTR [rax],al
    4d28:	00 01                	add    BYTE PTR [rcx],al
    4d2a:	cc                   	int3
    4d2b:	05 00 00 00 06       	add    eax,0x6000000
    4d30:	04 04                	add    al,0x4
    4d32:	80 01 00             	add    BYTE PTR [rcx],0x0
    4d35:	00 08                	add    BYTE PTR [rax],cl
    4d37:	2b 00                	sub    eax,DWORD PTR [rax]
    4d39:	00 00                	add    BYTE PTR [rax],al
    4d3b:	06                   	(bad)
    4d3c:	7f 14                	jg     4d52 <__FRAME_END__+0x36>
    4d3e:	87 07                	xchg   DWORD PTR [rdi],eax
    4d40:	00 00                	add    BYTE PTR [rax],al
    4d42:	87 07                	xchg   DWORD PTR [rdi],eax
    4d44:	00 00                	add    BYTE PTR [rax],al
    4d46:	01 f0                	add    eax,esi
    4d48:	00 00                	add    BYTE PTR [rax],al
    4d4a:	00 01                	add    BYTE PTR [rcx],al
    4d4c:	cc                   	int3
    4d4d:	05 00 00 00 06       	add    eax,0x6000000
    4d52:	10 04 18             	adc    BYTE PTR [rax+rbx*1],al
    4d55:	02 00                	add    al,BYTE PTR [rax]
    4d57:	00 02                	add    BYTE PTR [rdx],al
    4d59:	0f 27                	(bad)
    4d5b:	0c f6                	or     al,0xf6
    4d5d:	03 00                	add    eax,DWORD PTR [rax]
    4d5f:	00 02                	add    BYTE PTR [rdx],al
    4d61:	0f 2b 0e             	movntps XMMWORD PTR [rsi],xmm1
    4d64:	13 04 00             	adc    eax,DWORD PTR [rax+rax*1]
    4d67:	00 02                	add    BYTE PTR [rdx],al
    4d69:	0f 2e 0e             	ucomiss xmm1,DWORD PTR [rsi]
    4d6c:	80 05 00 00 02 0f 36 	add    BYTE PTR [rip+0xf020000],0x36        # f024d73 <_end+0xf01ed5b>
    4d73:	0c 6d                	or     al,0x6d
    4d75:	00 00                	add    BYTE PTR [rax],al
    4d77:	00 02                	add    BYTE PTR [rdx],al
    4d79:	0f 37                	getsec
    4d7b:	0c a5                	or     al,0xa5
    4d7d:	00 00                	add    BYTE PTR [rax],al
    4d7f:	00 06                	add    BYTE PTR [rsi],al
    4d81:	10 04 a4             	adc    BYTE PTR [rsp+riz*4],al
    4d84:	02 00                	add    al,BYTE PTR [rax]
    4d86:	00 02                	add    BYTE PTR [rdx],al
    4d88:	0f 39                	(bad)
    4d8a:	0c 34                	or     al,0x34
    4d8c:	03 00                	add    eax,DWORD PTR [rax]
    4d8e:	00 06                	add    BYTE PTR [rsi],al
    4d90:	10 05 0f 02 00 00    	adc    BYTE PTR [rip+0x20f],al        # 4fa5 <__FRAME_END__+0x289>
    4d96:	02 0f                	add    cl,BYTE PTR [rdi]
    4d98:	39 0c 4c             	cmp    DWORD PTR [rsp+rcx*2],ecx
    4d9b:	03 00                	add    eax,DWORD PTR [rax]
    4d9d:	00 02                	add    BYTE PTR [rdx],al
    4d9f:	0f 39                	(bad)
    4da1:	0c 64                	or     al,0x64
    4da3:	03 00                	add    eax,DWORD PTR [rax]
    4da5:	00 02                	add    BYTE PTR [rdx],al
    4da7:	0f 39                	(bad)
    4da9:	0c 7c                	or     al,0x7c
    4dab:	03 00                	add    eax,DWORD PTR [rax]
    4dad:	00 02                	add    BYTE PTR [rdx],al
    4daf:	0f 39                	(bad)
    4db1:	0c 94                	or     al,0x94
    4db3:	03 00                	add    eax,DWORD PTR [rax]
    4db5:	00 02                	add    BYTE PTR [rdx],al
    4db7:	0f 39                	(bad)
    4db9:	0c ac                	or     al,0xac
    4dbb:	03 00                	add    eax,DWORD PTR [rax]
    4dbd:	00 02                	add    BYTE PTR [rdx],al
    4dbf:	0f 39                	(bad)
    4dc1:	0c c4                	or     al,0xc4
    4dc3:	03 00                	add    eax,DWORD PTR [rax]
    4dc5:	00 02                	add    BYTE PTR [rdx],al
    4dc7:	0f 3a 0c             	(bad)
    4dca:	2e 04 00             	cs add al,0x0
    4dcd:	00 02                	add    BYTE PTR [rdx],al
    4dcf:	0f 3b                	(bad)
    4dd1:	0c 4b                	or     al,0x4b
    4dd3:	04 00                	add    al,0x0
    4dd5:	00 02                	add    BYTE PTR [rdx],al
    4dd7:	0f 3c                	(bad)
    4dd9:	0c 62                	or     al,0x62
    4ddb:	04 00                	add    al,0x0
    4ddd:	00 02                	add    BYTE PTR [rdx],al
    4ddf:	0f 3d                	(bad)
    4de1:	0c 79                	or     al,0x79
    4de3:	04 00                	add    al,0x0
    4de5:	00 02                	add    BYTE PTR [rdx],al
    4de7:	0f 3f                	(bad)
    4de9:	0c b5                	or     al,0xb5
    4deb:	06                   	(bad)
    4dec:	00 00                	add    BYTE PTR [rax],al
    4dee:	02 0f                	add    cl,BYTE PTR [rdi]
    4df0:	3f                   	(bad)
    4df1:	0c dc                	or     al,0xdc
    4df3:	03 00                	add    eax,DWORD PTR [rax]
    4df5:	00 02                	add    BYTE PTR [rdx],al
    4df7:	0f 3f                	(bad)
    4df9:	0c a3                	or     al,0xa3
    4dfb:	04 00                	add    al,0x0
    4dfd:	00 02                	add    BYTE PTR [rdx],al
    4dff:	0f 41 0c bf          	cmovno ecx,DWORD PTR [rdi+rdi*4]
    4e03:	04 00                	add    al,0x0
    4e05:	00 02                	add    BYTE PTR [rdx],al
    4e07:	0f 43 0c d6          	cmovae ecx,DWORD PTR [rsi+rdx*8]
    4e0b:	04 00                	add    al,0x0
    4e0d:	00 02                	add    BYTE PTR [rdx],al
    4e0f:	0f 46 0c f2          	cmovbe ecx,DWORD PTR [rdx+rsi*8]
    4e13:	04 00                	add    al,0x0
    4e15:	00 02                	add    BYTE PTR [rdx],al
    4e17:	0f 47 0c 0e          	cmova  ecx,DWORD PTR [rsi+rcx*1]
    4e1b:	05 00 00 02 0f       	add    eax,0xf020000
    4e20:	48 0c 3f             	rex.W or al,0x3f
    4e23:	05 00 00 02 0f       	add    eax,0xf020000
    4e28:	4a 0c 60             	rex.WX or al,0x60
    4e2b:	05 00 00 02 0f       	add    eax,0xf020000
    4e30:	4b 0c 93             	rex.WXB or al,0x93
    4e33:	05 00 00 02 0f       	add    eax,0xf020000
    4e38:	4d 0c a0             	rex.WRB or al,0xa0
    4e3b:	05 00 00 02 0f       	add    eax,0xf020000
    4e40:	4e 0c b1             	rex.WRX or al,0xb1
    4e43:	05 00 00 02 0f       	add    eax,0xf020000
    4e48:	4f 0c d1             	rex.WRXB or al,0xd1
    4e4b:	05 00 00 02 0f       	add    eax,0xf020000
    4e50:	50                   	push   rax
    4e51:	0c f5                	or     al,0xf5
    4e53:	05 00 00 02 0f       	add    eax,0xf020000
    4e58:	51                   	push   rcx
    4e59:	0c 19                	or     al,0x19
    4e5b:	06                   	(bad)
    4e5c:	00 00                	add    BYTE PTR [rax],al
    4e5e:	02 0f                	add    cl,BYTE PTR [rdi]
    4e60:	53                   	push   rbx
    4e61:	0c 30                	or     al,0x30
    4e63:	06                   	(bad)
    4e64:	00 00                	add    BYTE PTR [rax],al
    4e66:	02 0f                	add    cl,BYTE PTR [rdi]
    4e68:	54                   	push   rsp
    4e69:	0c 55                	or     al,0x55
    4e6b:	06                   	(bad)
    4e6c:	00 00                	add    BYTE PTR [rax],al
    4e6e:	17                   	(bad)
    4e6f:	25 0b 00 00 90       	and    eax,0x9000000b
    4e74:	10 1a                	adc    BYTE PTR [rdx],bl
    4e76:	74 09                	je     4e81 <__FRAME_END__+0x165>
    4e78:	00 00                	add    BYTE PTR [rax],al
    4e7a:	03 ac 0b 00 00 10 1f 	add    ebp,DWORD PTR [rbx+rcx*1+0x1f100000]
    4e81:	0d 29 01 00 00       	or     eax,0x129
    4e86:	00 03                	add    BYTE PTR [rbx],al
    4e88:	5e                   	pop    rsi
    4e89:	0a 00                	or     al,BYTE PTR [rax]
    4e8b:	00 10                	add    BYTE PTR [rax],dl
    4e8d:	24 0d                	and    al,0xd
    4e8f:	4d 01 00             	add    QWORD PTR [r8],r8
    4e92:	00 08                	add    BYTE PTR [rax],cl
    4e94:	03 54 0b 00          	add    edx,DWORD PTR [rbx+rcx*1+0x0]
    4e98:	00 10                	add    BYTE PTR [rax],dl
    4e9a:	2c 0f                	sub    al,0xf
    4e9c:	65 01 00             	add    DWORD PTR gs:[rax],eax
    4e9f:	00 10                	add    BYTE PTR [rax],dl
    4ea1:	03 e7                	add    esp,edi
    4ea3:	0a 00                	or     al,BYTE PTR [rax]
    4ea5:	00 10                	add    BYTE PTR [rax],dl
    4ea7:	2d 0e 59 01 00       	sub    eax,0x1590e
    4eac:	00 18                	add    BYTE PTR [rax],bl
    4eae:	03 96 0a 00 00 10    	add    edx,DWORD PTR [rsi+0x1000000a]
    4eb4:	2f                   	(bad)
    4eb5:	0d 35 01 00 00       	or     eax,0x135
    4eba:	1c 03                	sbb    al,0x3
    4ebc:	94                   	xchg   esp,eax
    4ebd:	0b 00                	or     eax,DWORD PTR [rax]
    4ebf:	00 10                	add    BYTE PTR [rax],dl
    4ec1:	30 0d 41 01 00 00    	xor    BYTE PTR [rip+0x141],cl        # 5008 <__FRAME_END__+0x2ec>
    4ec7:	20 03                	and    BYTE PTR [rbx],al
    4ec9:	3c 0b                	cmp    al,0xb
    4ecb:	00 00                	add    BYTE PTR [rax],al
    4ecd:	10 32                	adc    BYTE PTR [rdx],dh
    4ecf:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    4ed2:	00 00                	add    BYTE PTR [rax],al
    4ed4:	24 03                	and    al,0x3
    4ed6:	84 0b                	test   BYTE PTR [rbx],cl
    4ed8:	00 00                	add    BYTE PTR [rax],al
    4eda:	10 34 0d 29 01 00 00 	adc    BYTE PTR [rcx*1+0x129],dh
    4ee1:	28 03                	sub    BYTE PTR [rbx],al
    4ee3:	d6                   	(bad)
    4ee4:	0a 00                	or     al,BYTE PTR [rax]
    4ee6:	00 10                	add    BYTE PTR [rax],dl
    4ee8:	39 0d 71 01 00 00    	cmp    DWORD PTR [rip+0x171],ecx        # 505f <__FRAME_END__+0x343>
    4eee:	30 03                	xor    BYTE PTR [rbx],al
    4ef0:	5d                   	pop    rbp
    4ef1:	0b 00                	or     eax,DWORD PTR [rax]
    4ef3:	00 10                	add    BYTE PTR [rax],dl
    4ef5:	3d 11 8b 01 00       	cmp    eax,0x18b11
    4efa:	00 38                	add    BYTE PTR [rax],bh
    4efc:	03 83 0a 00 00 10    	add    eax,DWORD PTR [rbx+0x1000000a]
    4f02:	3f                   	(bad)
    4f03:	10 97 01 00 00 40    	adc    BYTE PTR [rdi+0x40000001],dl
    4f09:	03 ef                	add    ebp,edi
    4f0b:	0a 00                	or     al,BYTE PTR [rax]
    4f0d:	00 10                	add    BYTE PTR [rax],dl
    4f0f:	4a 15 cc 01 00 00    	rex.WX adc rax,0x1cc
    4f15:	48 03 c9             	add    rcx,rcx
    4f18:	0b 00                	or     eax,DWORD PTR [rax]
    4f1a:	00 10                	add    BYTE PTR [rax],dl
    4f1c:	4b 15 cc 01 00 00    	rex.WXB adc rax,0x1cc
    4f22:	58                   	pop    rax
    4f23:	03 f9                	add    edi,ecx
    4f25:	09 00                	or     DWORD PTR [rax],eax
    4f27:	00 10                	add    BYTE PTR [rax],dl
    4f29:	4c 15 cc 01 00 00    	rex.WR adc rax,0x1cc
    4f2f:	68 03 43 0b 00       	push   0xb4303
    4f34:	00 10                	add    BYTE PTR [rax],dl
    4f36:	59                   	pop    rcx
    4f37:	17                   	(bad)
    4f38:	74 09                	je     4f43 <__FRAME_END__+0x227>
    4f3a:	00 00                	add    BYTE PTR [rax],al
    4f3c:	78 00                	js     4f3e <__FRAME_END__+0x222>
    4f3e:	15 af 01 00 00       	adc    eax,0x1af
    4f43:	84 09                	test   BYTE PTR [rcx],cl
    4f45:	00 00                	add    BYTE PTR [rax],al
    4f47:	16                   	(bad)
    4f48:	3a 00                	cmp    al,BYTE PTR [rax]
    4f4a:	00 00                	add    BYTE PTR [rax],al
    4f4c:	02 00                	add    al,BYTE PTR [rax]
    4f4e:	06                   	(bad)
    4f4f:	10 07                	adc    BYTE PTR [rdi],al
    4f51:	34 08                	xor    al,0x8
    4f53:	00 00                	add    BYTE PTR [rax],al
    4f55:	04 55                	add    al,0x55
    4f57:	01 00                	add    DWORD PTR [rax],eax
    4f59:	00 11                	add    BYTE PTR [rcx],dl
    4f5b:	1a 14 1d 01 00 00 08 	sbb    dl,BYTE PTR [rbx*1+0x8000001]
    4f62:	bb 0a 00 00 12       	mov    ebx,0x1200000a
    4f67:	1a 10                	sbb    dl,BYTE PTR [rax]
    4f69:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    4f6c:	00 bc 09 00 00 01 66 	add    BYTE PTR [rcx+rcx*1+0x66010000],bh
    4f73:	00 00                	add    BYTE PTR [rax],al
    4f75:	00 01                	add    BYTE PTR [rcx],al
    4f77:	89 01                	mov    DWORD PTR [rcx],eax
    4f79:	00 00                	add    BYTE PTR [rax],al
    4f7b:	01 2e                	add    DWORD PTR [rsi],ebp
    4f7d:	00 00                	add    BYTE PTR [rax],al
    4f7f:	00 01                	add    BYTE PTR [rcx],al
    4f81:	2e 00 00             	cs add BYTE PTR [rax],al
    4f84:	00 00                	add    BYTE PTR [rax],al
    4f86:	0b d1                	or     edx,ecx
    4f88:	0b 00                	or     eax,DWORD PTR [rax]
    4f8a:	00 12                	add    BYTE PTR [rdx],dl
    4f8c:	20 10                	and    BYTE PTR [rax],dl
    4f8e:	bb 0a 00 00 c0       	mov    ebx,0xc000000a
    4f93:	01 00                	add    DWORD PTR [rax],eax
    4f95:	00 e5                	add    ch,ah
    4f97:	09 00                	or     DWORD PTR [rax],eax
    4f99:	00 01                	add    BYTE PTR [rcx],al
    4f9b:	66 00 00             	data16 add BYTE PTR [rax],al
    4f9e:	00 01                	add    BYTE PTR [rcx],al
    4fa0:	89 01                	mov    DWORD PTR [rcx],eax
    4fa2:	00 00                	add    BYTE PTR [rax],al
    4fa4:	01 2e                	add    DWORD PTR [rsi],ebp
    4fa6:	00 00                	add    BYTE PTR [rax],al
    4fa8:	00 01                	add    BYTE PTR [rcx],al
    4faa:	2e 00 00             	cs add BYTE PTR [rax],al
    4fad:	00 00                	add    BYTE PTR [rax],al
    4faf:	0b 01                	or     eax,DWORD PTR [rcx]
    4fb1:	0a 00                	or     al,BYTE PTR [rax]
    4fb3:	00 12                	add    BYTE PTR [rdx],dl
    4fb5:	1d 10 da 32 00       	sbb    eax,0x32da10
    4fba:	00 c0                	add    al,al
    4fbc:	01 00                	add    DWORD PTR [rax],eax
    4fbe:	00 09                	add    BYTE PTR [rcx],cl
    4fc0:	0a 00                	or     al,BYTE PTR [rax]
    4fc2:	00 01                	add    BYTE PTR [rcx],al
    4fc4:	66 00 00             	data16 add BYTE PTR [rax],al
    4fc7:	00 01                	add    BYTE PTR [rcx],al
    4fc9:	89 01                	mov    DWORD PTR [rcx],eax
    4fcb:	00 00                	add    BYTE PTR [rax],al
    4fcd:	01 2e                	add    DWORD PTR [rsi],ebp
    4fcf:	00 00                	add    BYTE PTR [rax],al
    4fd1:	00 00                	add    BYTE PTR [rax],al
    4fd3:	0b b3 0b 00 00 02    	or     esi,DWORD PTR [rbx+0x200000b]
    4fd9:	1b 0c 8f             	sbb    ecx,DWORD PTR [rdi+rcx*4]
    4fdc:	2e 00 00             	cs add BYTE PTR [rax],al
    4fdf:	66 00 00             	data16 add BYTE PTR [rax],al
    4fe2:	00 29                	add    BYTE PTR [rcx],ch
    4fe4:	0a 00                	or     al,BYTE PTR [rax]
    4fe6:	00 01                	add    BYTE PTR [rcx],al
    4fe8:	f0 00 00             	lock add BYTE PTR [rax],al
    4feb:	00 01                	add    BYTE PTR [rcx],al
    4fed:	66 00 00             	data16 add BYTE PTR [rax],al
    4ff0:	00 1a                	add    BYTE PTR [rdx],bl
    4ff2:	00 08                	add    BYTE PTR [rax],cl
    4ff4:	de 0a                	fimul  WORD PTR [rdx]
    4ff6:	00 00                	add    BYTE PTR [rax],al
    4ff8:	02 1a                	add    bl,BYTE PTR [rdx]
    4ffa:	0c 66                	or     al,0x66
    4ffc:	00 00                	add    BYTE PTR [rax],al
    4ffe:	00 44 0a 00          	add    BYTE PTR [rdx+rcx*1+0x0],al
    5002:	00 01                	add    BYTE PTR [rcx],al
    5004:	f0 00 00             	lock add BYTE PTR [rax],al
    5007:	00 01                	add    BYTE PTR [rcx],al
    5009:	66 00 00             	data16 add BYTE PTR [rax],al
    500c:	00 00                	add    BYTE PTR [rax],al
    500e:	1b 9d 0a 00 00 25    	sbb    ebx,DWORD PTR [rbp+0x2500000a]
    5014:	1b 41 0a             	sbb    eax,DWORD PTR [rcx+0xa]
    5017:	00 00                	add    BYTE PTR [rax],al
    5019:	23 07                	and    eax,DWORD PTR [rdi]
    501b:	ff 15 00 00 13 66    	call   QWORD PTR [rip+0x66130000]        # 66135021 <_end+0x6612f009>
    5021:	01 0c 66             	add    DWORD PTR [rsi+riz*2],ecx
    5024:	00 00                	add    BYTE PTR [rax],al
    5026:	00 67 0a             	add    BYTE PTR [rdi+0xa],ah
    5029:	00 00                	add    BYTE PTR [rax],al
    502b:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    502e:	00 00                	add    BYTE PTR [rax],al
    5030:	00 07                	add    BYTE PTR [rdi],al
    5032:	51                   	push   rcx
    5033:	07                   	(bad)
    5034:	00 00                	add    BYTE PTR [rax],al
    5036:	06                   	(bad)
    5037:	a3 02 0e 89 01 00 00 	movabs ds:0xa83000001890e02,eax
    503e:	83 0a 
    5040:	00 00                	add    BYTE PTR [rax],al
    5042:	01 2e                	add    DWORD PTR [rsi],ebp
    5044:	00 00                	add    BYTE PTR [rax],al
    5046:	00 01                	add    BYTE PTR [rcx],al
    5048:	2e 00 00             	cs add BYTE PTR [rax],al
    504b:	00 00                	add    BYTE PTR [rax],al
    504d:	08 25 0b 00 00 14    	or     BYTE PTR [rip+0x1400000b],ah        # 1400505e <_end+0x13fff046>
    5053:	cd 0c                	int    0xc
    5055:	66 00 00             	data16 add BYTE PTR [rax],al
    5058:	00 9e 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],bl
    505e:	f0 00 00             	lock add BYTE PTR [rax],al
    5061:	00 01                	add    BYTE PTR [rcx],al
    5063:	9e                   	sahf
    5064:	0a 00                	or     al,BYTE PTR [rax]
    5066:	00 00                	add    BYTE PTR [rax],al
    5068:	09 a4 08 00 00 30 1e 	or     DWORD PTR [rax+rcx*1+0x1e300000],esp
    506f:	06                   	(bad)
    5070:	00 00                	add    BYTE PTR [rax],al
    5072:	15 45 0d c4 0a       	adc    eax,0xac40d45
    5077:	00 00                	add    BYTE PTR [rax],al
    5079:	01 f0                	add    eax,esi
    507b:	00 00                	add    BYTE PTR [rax],al
    507d:	00 01                	add    BYTE PTR [rcx],al
    507f:	f0 00 00             	lock add BYTE PTR [rax],al
    5082:	00 01                	add    BYTE PTR [rcx],al
    5084:	08 01                	or     BYTE PTR [rcx],al
    5086:	00 00                	add    BYTE PTR [rax],al
    5088:	01 f0                	add    eax,esi
    508a:	00 00                	add    BYTE PTR [rax],al
    508c:	00 00                	add    BYTE PTR [rax],al
    508e:	1c c6                	sbb    al,0xc6
    5090:	0a 00                	or     al,BYTE PTR [rax]
    5092:	00 21                	add    BYTE PTR [rcx],ah
    5094:	0a 15 0a 00 00 8b    	or     dl,BYTE PTR [rip+0xffffffff8b00000a]        # ffffffff8b0050a4 <_end+0xffffffff8afff08c>
    509a:	09 00                	or     DWORD PTR [rax],eax
    509c:	00 20                	add    BYTE PTR [rax],ah
    509e:	23 00                	and    eax,DWORD PTR [rax]
    50a0:	00 00                	add    BYTE PTR [rax],al
    50a2:	00 00                	add    BYTE PTR [rax],al
    50a4:	00 62 00             	add    BYTE PTR [rdx+0x0],ah
    50a7:	00 00                	add    BYTE PTR [rax],al
    50a9:	00 00                	add    BYTE PTR [rax],al
    50ab:	00 00                	add    BYTE PTR [rax],al
    50ad:	01 9c ca 0b 00 00 10 	add    DWORD PTR [rdx+rcx*8+0x1000000b],ebx
    50b4:	a9 03 00 00 21       	test   eax,0x21000003
    50b9:	1b bb 01 00 00 1c    	sbb    edi,DWORD PTR [rbx+0x1c000001]
    50bf:	16                   	(bad)
    50c0:	00 00                	add    BYTE PTR [rax],al
    50c2:	12 16                	adc    dl,BYTE PTR [rsi]
    50c4:	00 00                	add    BYTE PTR [rax],al
    50c6:	10 e1                	adc    cl,ah
    50c8:	0b 00                	or     eax,DWORD PTR [rax]
    50ca:	00 21                	add    BYTE PTR [rcx],ah
    50cc:	28 2e                	sub    BYTE PTR [rsi],ch
    50ce:	00 00                	add    BYTE PTR [rax],al
    50d0:	00 50 16             	add    BYTE PTR [rax+0x16],dl
    50d3:	00 00                	add    BYTE PTR [rax],al
    50d5:	46 16                	rex.RX (bad)
    50d7:	00 00                	add    BYTE PTR [rax],al
    50d9:	1d ec 03 00 00       	sbb    eax,0x3ec
    50de:	da 0b                	fimul  DWORD PTR [rbx]
    50e0:	00 00                	add    BYTE PTR [rax],al
    50e2:	09 03                	or     DWORD PTR [rbx],eax
    50e4:	d0 43 00             	rol    BYTE PTR [rbx+0x0],1
    50e7:	00 00                	add    BYTE PTR [rax],al
    50e9:	00 00                	add    BYTE PTR [rax],al
    50eb:	00 0d c0 0b 00 00    	add    BYTE PTR [rip+0xbc0],cl        # 5cb1 <__FRAME_END__+0xf95>
    50f1:	24 0b                	and    al,0xb
    50f3:	bb 01 00 00 7e       	mov    ebx,0x7e000001
    50f8:	16                   	(bad)
    50f9:	00 00                	add    BYTE PTR [rax],al
    50fb:	7a 16                	jp     5113 <__FRAME_END__+0x3f7>
    50fd:	00 00                	add    BYTE PTR [rax],al
    50ff:	0d 29 05 00 00       	or     eax,0x529
    5104:	25 0e 8b 09 00       	and    eax,0x98b0e
    5109:	00 91 16 00 00 8d    	add    BYTE PTR [rcx-0x72ffffea],dl
    510f:	16                   	(bad)
    5110:	00 00                	add    BYTE PTR [rax],al
    5112:	1e                   	(bad)
    5113:	6b 0e 00             	imul   ecx,DWORD PTR [rsi],0x0
    5116:	00 48 23             	add    BYTE PTR [rax+0x23],cl
    5119:	00 00                	add    BYTE PTR [rax],al
    511b:	00 00                	add    BYTE PTR [rax],al
    511d:	00 00                	add    BYTE PTR [rax],al
    511f:	01 3e                	add    DWORD PTR [rsi],edi
    5121:	02 00                	add    al,BYTE PTR [rax]
    5123:	00 29                	add    BYTE PTR [rcx],ch
    5125:	1b 8e 0b 00 00 0c    	sbb    ecx,DWORD PTR [rsi+0xc00000b]
    512b:	8b 0e                	mov    ecx,DWORD PTR [rsi]
    512d:	00 00                	add    BYTE PTR [rax],al
    512f:	a3 16 00 00 a1 16 00 	movabs ds:0xc000016a1000016,eax
    5136:	00 0c 
    5138:	80 0e 00             	or     BYTE PTR [rsi],0x0
    513b:	00 ae 16 00 00 ac    	add    BYTE PTR [rsi-0x53ffffea],ch
    5141:	16                   	(bad)
    5142:	00 00                	add    BYTE PTR [rax],al
    5144:	11 4d 23             	adc    DWORD PTR [rbp+0x23],ecx
    5147:	00 00                	add    BYTE PTR [rax],al
    5149:	00 00                	add    BYTE PTR [rax],al
    514b:	00 00                	add    BYTE PTR [rax],al
    514d:	97                   	xchg   edi,eax
    514e:	0e                   	(bad)
    514f:	00 00                	add    BYTE PTR [rax],al
    5151:	05 01 54 01 3a       	add    eax,0x3a015401
    5156:	00 00                	add    BYTE PTR [rax],al
    5158:	11 82 23 00 00 00    	adc    DWORD PTR [rdx+0x23],eax
    515e:	00 00                	add    BYTE PTR [rax],al
    5160:	00 a3 0a 00 00 05    	add    BYTE PTR [rbx+0x500000a],ah
    5166:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    5169:	03 1d 40 00 00 00    	add    ebx,DWORD PTR [rip+0x40]        # 51af <__FRAME_END__+0x493>
    516f:	00 00                	add    BYTE PTR [rax],al
    5171:	00 05 01 54 09 03    	add    BYTE PTR [rip+0x3095401],al        # 309a578 <_end+0x3094560>
    5177:	98                   	cwde
    5178:	40 00 00             	rex add BYTE PTR [rax],al
    517b:	00 00                	add    BYTE PTR [rax],al
    517d:	00 00                	add    BYTE PTR [rax],al
    517f:	05 01 51 02 08       	add    eax,0x8025101
    5184:	22 05 01 52 09 03    	and    al,BYTE PTR [rip+0x3095201]        # 309a38b <_end+0x3094373>
    518a:	d0 43 00             	rol    BYTE PTR [rbx+0x0],1
    518d:	00 00                	add    BYTE PTR [rax],al
    518f:	00 00                	add    BYTE PTR [rax],al
    5191:	00 00                	add    BYTE PTR [rax],al
    5193:	00 15 fc 00 00 00    	add    BYTE PTR [rip+0xfc],dl        # 5295 <__FRAME_END__+0x579>
    5199:	da 0b                	fimul  DWORD PTR [rbx]
    519b:	00 00                	add    BYTE PTR [rax],al
    519d:	16                   	(bad)
    519e:	3a 00                	cmp    al,BYTE PTR [rax]
    51a0:	00 00                	add    BYTE PTR [rax],al
    51a2:	22 00                	and    al,BYTE PTR [rax]
    51a4:	0f ca                	bswap  edx
    51a6:	0b 00                	or     eax,DWORD PTR [rax]
    51a8:	00 1c 27             	add    BYTE PTR [rdi+riz*1],bl
    51ab:	0a 00                	or     al,BYTE PTR [rax]
    51ad:	00 0b                	add    BYTE PTR [rbx],cl
    51af:	07                   	(bad)
    51b0:	30 0a                	xor    BYTE PTR [rdx],cl
    51b2:	00 00                	add    BYTE PTR [rax],al
    51b4:	bb 01 00 00 10       	mov    ebx,0x10000001
    51b9:	22 00                	and    al,BYTE PTR [rax]
    51bb:	00 00                	add    BYTE PTR [rax],al
    51bd:	00 00                	add    BYTE PTR [rax],al
    51bf:	00 08                	add    BYTE PTR [rax],cl
    51c1:	01 00                	add    DWORD PTR [rax],eax
    51c3:	00 00                	add    BYTE PTR [rax],al
    51c5:	00 00                	add    BYTE PTR [rax],al
    51c7:	00 01                	add    BYTE PTR [rcx],al
    51c9:	9c                   	pushf
    51ca:	f4                   	hlt
    51cb:	0d 00 00 10 b6       	or     eax,0xb6100000
    51d0:	0e                   	(bad)
    51d1:	00 00                	add    BYTE PTR [rax],al
    51d3:	0b 1c f0             	or     ebx,DWORD PTR [rax+rsi*8]
    51d6:	00 00                	add    BYTE PTR [rax],al
    51d8:	00 c4                	add    ah,al
    51da:	16                   	(bad)
    51db:	00 00                	add    BYTE PTR [rax],al
    51dd:	b6 16                	mov    dh,0x16
    51df:	00 00                	add    BYTE PTR [rax],al
    51e1:	10 e6                	adc    dh,ah
    51e3:	0b 00                	or     eax,DWORD PTR [rax]
    51e5:	00 0b                	add    BYTE PTR [rbx],cl
    51e7:	2e f4                	cs hlt
    51e9:	0d 00 00 06 17       	or     eax,0x17060000
    51ee:	00 00                	add    BYTE PTR [rax],al
    51f0:	fc                   	cld
    51f1:	16                   	(bad)
    51f2:	00 00                	add    BYTE PTR [rax],al
    51f4:	1d ec 03 00 00       	sbb    eax,0x3ec
    51f9:	09 0e                	or     DWORD PTR [rsi],ecx
    51fb:	00 00                	add    BYTE PTR [rax],al
    51fd:	09 03                	or     DWORD PTR [rbx],eax
    51ff:	a8 43                	test   al,0x43
    5201:	00 00                	add    BYTE PTR [rax],al
    5203:	00 00                	add    BYTE PTR [rax],al
    5205:	00 00                	add    BYTE PTR [rax],al
    5207:	31 20                	xor    DWORD PTR [rax],esp
    5209:	0b 00                	or     eax,DWORD PTR [rax]
    520b:	00 01                	add    BYTE PTR [rcx],al
    520d:	0e                   	(bad)
    520e:	11 a4 08 00 00 02 77 	adc    DWORD PTR [rax+rcx*1+0x77020000],esp
    5215:	00 0d e1 0b 00 00    	add    BYTE PTR [rip+0xbe1],cl        # 5dfc <_DYNAMIC+0x114>
    521b:	11 0c 2e             	adc    DWORD PTR [rsi+rbp*1],ecx
    521e:	00 00                	add    BYTE PTR [rax],al
    5220:	00 2f                	add    BYTE PTR [rdi],ch
    5222:	17                   	(bad)
    5223:	00 00                	add    BYTE PTR [rax],al
    5225:	2d 17 00 00 0d       	sub    eax,0xd000017
    522a:	79 0b                	jns    5237 <__FRAME_END__+0x51b>
    522c:	00 00                	add    BYTE PTR [rax],al
    522e:	14 09                	adc    al,0x9
    5230:	66 00 00             	data16 add BYTE PTR [rax],al
    5233:	00 3a                	add    BYTE PTR [rdx],bh
    5235:	17                   	(bad)
    5236:	00 00                	add    BYTE PTR [rax],al
    5238:	36 17                	ss (bad)
    523a:	00 00                	add    BYTE PTR [rax],al
    523c:	0d a9 03 00 00       	or     eax,0x3a9
    5241:	17                   	(bad)
    5242:	0b bb 01 00 00 4d    	or     edi,DWORD PTR [rbx+0x4d000001]
    5248:	17                   	(bad)
    5249:	00 00                	add    BYTE PTR [rax],al
    524b:	49 17                	rex.WB (bad)
    524d:	00 00                	add    BYTE PTR [rax],al
    524f:	32 53 04             	xor    dl,BYTE PTR [rbx+0x4]
    5252:	00 00                	add    BYTE PTR [rax],al
    5254:	01 1a                	add    DWORD PTR [rdx],ebx
    5256:	0d c0 01 00 00       	or     eax,0x1c0
    525b:	1e                   	(bad)
    525c:	0e                   	(bad)
    525d:	0e                   	(bad)
    525e:	00 00                	add    BYTE PTR [rax],al
    5260:	8a 22                	mov    ah,BYTE PTR [rdx]
    5262:	00 00                	add    BYTE PTR [rax],al
    5264:	00 00                	add    BYTE PTR [rax],al
    5266:	00 00                	add    BYTE PTR [rax],al
    5268:	01 36                	add    DWORD PTR [rsi],esi
    526a:	02 00                	add    al,BYTE PTR [rax]
    526c:	00 14 1a             	add    BYTE PTR [rdx+rbx*1],dl
    526f:	dd 0c 00             	fisttp QWORD PTR [rax+rax*1]
    5272:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    5275:	0e                   	(bad)
    5276:	00 00                	add    BYTE PTR [rax],al
    5278:	5e                   	pop    rsi
    5279:	17                   	(bad)
    527a:	00 00                	add    BYTE PTR [rax],al
    527c:	5c                   	pop    rsp
    527d:	17                   	(bad)
    527e:	00 00                	add    BYTE PTR [rax],al
    5280:	0c 1d                	or     al,0x1d
    5282:	0e                   	(bad)
    5283:	00 00                	add    BYTE PTR [rax],al
    5285:	68 17 00 00 66       	push   0x66000017
    528a:	17                   	(bad)
    528b:	00 00                	add    BYTE PTR [rax],al
    528d:	11 8f 22 00 00 00    	adc    DWORD PTR [rdi+0x22],ecx
    5293:	00 00                	add    BYTE PTR [rax],al
    5295:	00 09                	add    BYTE PTR [rcx],cl
    5297:	0a 00                	or     al,BYTE PTR [rax]
    5299:	00 05 01 55 02 73    	add    BYTE PTR [rip+0x73025501],al        # 7302a7a0 <_end+0x73024788>
    529f:	00 05 01 54 01 30    	add    BYTE PTR [rip+0x30015401],al        # 3001a6a6 <_end+0x3001468e>
    52a5:	00 00                	add    BYTE PTR [rax],al
    52a7:	33 37                	xor    esi,DWORD PTR [rdi]
    52a9:	0e                   	(bad)
    52aa:	00 00                	add    BYTE PTR [rax],al
    52ac:	ac                   	lods   al,BYTE PTR ds:[rsi]
    52ad:	22 00                	and    al,BYTE PTR [rax]
    52af:	00 00                	add    BYTE PTR [rax],al
    52b1:	00 00                	add    BYTE PTR [rax],al
    52b3:	00 01                	add    BYTE PTR [rcx],al
    52b5:	ac                   	lods   al,BYTE PTR ds:[rsi]
    52b6:	22 00                	and    al,BYTE PTR [rax]
    52b8:	00 00                	add    BYTE PTR [rax],al
    52ba:	00 00                	add    BYTE PTR [rax],al
    52bc:	00 0e                	add    BYTE PTR [rsi],cl
    52be:	00 00                	add    BYTE PTR [rax],al
    52c0:	00 00                	add    BYTE PTR [rax],al
    52c2:	00 00                	add    BYTE PTR [rax],al
    52c4:	00 01                	add    BYTE PTR [rcx],al
    52c6:	1a 19                	sbb    bl,BYTE PTR [rcx]
    52c8:	4a 0d 00 00 0c 5e    	rex.WX or rax,0x5e0c0000
    52ce:	0e                   	(bad)
    52cf:	00 00                	add    BYTE PTR [rax],al
    52d1:	71 17                	jno    52ea <__FRAME_END__+0x5ce>
    52d3:	00 00                	add    BYTE PTR [rax],al
    52d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    52d6:	17                   	(bad)
    52d7:	00 00                	add    BYTE PTR [rax],al
    52d9:	0c 52                	or     al,0x52
    52db:	0e                   	(bad)
    52dc:	00 00                	add    BYTE PTR [rax],al
    52de:	7d 17                	jge    52f7 <__FRAME_END__+0x5db>
    52e0:	00 00                	add    BYTE PTR [rax],al
    52e2:	79 17                	jns    52fb <__FRAME_END__+0x5df>
    52e4:	00 00                	add    BYTE PTR [rax],al
    52e6:	0c 46                	or     al,0x46
    52e8:	0e                   	(bad)
    52e9:	00 00                	add    BYTE PTR [rax],al
    52eb:	8e 17                	mov    ss,WORD PTR [rdi]
    52ed:	00 00                	add    BYTE PTR [rax],al
    52ef:	8c 17                	mov    WORD PTR [rdi],ss
    52f1:	00 00                	add    BYTE PTR [rax],al
    52f3:	11 ba 22 00 00 00    	adc    DWORD PTR [rdx+0x22],edi
    52f9:	00 00                	add    BYTE PTR [rax],al
    52fb:	00 e5                	add    ch,ah
    52fd:	09 00                	or     DWORD PTR [rax],eax
    52ff:	00 05 01 55 02 7c    	add    BYTE PTR [rip+0x7c025501],al        # 7c02a806 <_end+0x7c0247ee>
    5305:	00 05 01 54 02 73    	add    BYTE PTR [rip+0x73025401],al        # 7302a70c <_end+0x730246f4>
    530b:	00 05 01 51 02 7d    	add    BYTE PTR [rip+0x7d025101],al        # 7d02a412 <_end+0x7d0243fa>
    5311:	00 00                	add    BYTE PTR [rax],al
    5313:	00 34 70             	add    BYTE PTR [rax+rsi*2],dh
    5316:	22 00                	and    al,BYTE PTR [rax]
    5318:	00 00                	add    BYTE PTR [rax],al
    531a:	00 00                	add    BYTE PTR [rax],al
    531c:	00 01                	add    BYTE PTR [rcx],al
    531e:	30 12                	xor    BYTE PTR [rdx],dl
    5320:	75 22                	jne    5344 <__FRAME_END__+0x628>
    5322:	00 00                	add    BYTE PTR [rax],al
    5324:	00 00                	add    BYTE PTR [rax],al
    5326:	00 00                	add    BYTE PTR [rax],al
    5328:	83 0a 00             	or     DWORD PTR [rdx],0x0
    532b:	00 73 0d             	add    BYTE PTR [rbx+0xd],dh
    532e:	00 00                	add    BYTE PTR [rax],al
    5330:	05 01 55 02 73       	add    eax,0x73025501
    5335:	00 05 01 54 02 77    	add    BYTE PTR [rip+0x77025401],al        # 7702a73c <_end+0x77024724>
    533b:	00 00                	add    BYTE PTR [rax],al
    533d:	12 a4 22 00 00 00 00 	adc    ah,BYTE PTR [rdx+riz*1+0x0]
    5344:	00 00                	add    BYTE PTR [rax],al
    5346:	67 0a 00             	or     al,BYTE PTR [eax]
    5349:	00 90 0d 00 00 05    	add    BYTE PTR [rax+0x500000d],dl
    534f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    5352:	7d 00                	jge    5354 <__FRAME_END__+0x638>
    5354:	05 01 54 01 31       	add    eax,0x31015401
    5359:	00 12                	add    BYTE PTR [rdx],dl
    535b:	c2 22 00             	ret    0x22
    535e:	00 00                	add    BYTE PTR [rax],al
    5360:	00 00                	add    BYTE PTR [rax],al
    5362:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
    5365:	00 00                	add    BYTE PTR [rax],al
    5367:	a8 0d                	test   al,0xd
    5369:	00 00                	add    BYTE PTR [rax],al
    536b:	05 01 55 02 7c       	add    eax,0x7c025501
    5370:	00 00                	add    BYTE PTR [rax],al
    5372:	12 13                	adc    dl,BYTE PTR [rbx]
    5374:	23 00                	and    eax,DWORD PTR [rax]
    5376:	00 00                	add    BYTE PTR [rax],al
    5378:	00 00                	add    BYTE PTR [rax],al
    537a:	00 a3 0a 00 00 e6    	add    BYTE PTR [rbx-0x19fffff6],ah
    5380:	0d 00 00 05 01       	or     eax,0x1050000
    5385:	55                   	push   rbp
    5386:	09 03                	or     DWORD PTR [rbx],eax
    5388:	b4 40                	mov    ah,0x40
    538a:	00 00                	add    BYTE PTR [rax],al
    538c:	00 00                	add    BYTE PTR [rax],al
    538e:	00 00                	add    BYTE PTR [rax],al
    5390:	05 01 54 09 03       	add    eax,0x3095401
    5395:	98                   	cwde
    5396:	40 00 00             	rex add BYTE PTR [rax],al
    5399:	00 00                	add    BYTE PTR [rax],al
    539b:	00 00                	add    BYTE PTR [rax],al
    539d:	05 01 51 01 3c       	add    eax,0x3c015101
    53a2:	05 01 52 09 03       	add    eax,0x3095201
    53a7:	a8 43                	test   al,0x43
    53a9:	00 00                	add    BYTE PTR [rax],al
    53ab:	00 00                	add    BYTE PTR [rax],al
    53ad:	00 00                	add    BYTE PTR [rax],al
    53af:	00 35 18 23 00 00    	add    BYTE PTR [rip+0x2318],dh        # 76cd <_end+0x16b5>
    53b5:	00 00                	add    BYTE PTR [rax],al
    53b7:	00 00                	add    BYTE PTR [rax],al
    53b9:	a0 0e 00 00 00 09 2e 	movabs al,ds:0x2e090000000e
    53c0:	00 00 
    53c2:	00 15 fc 00 00 00    	add    BYTE PTR [rip+0xfc],dl        # 54c4 <__FRAME_END__+0x7a8>
    53c8:	09 0e                	or     DWORD PTR [rsi],ecx
    53ca:	00 00                	add    BYTE PTR [rax],al
    53cc:	16                   	(bad)
    53cd:	3a 00                	cmp    al,BYTE PTR [rax]
    53cf:	00 00                	add    BYTE PTR [rax],al
    53d1:	24 00                	and    al,0x0
    53d3:	0f f9 0d 00 00 1f 8f 	psubw  mm1,QWORD PTR [rip+0xffffffff8f1f0000]        # ffffffff8f1f53da <_end+0xffffffff8f1ef3c2>
    53da:	2e 00 00             	cs add BYTE PTR [rax],al
    53dd:	02 29                	add    ch,BYTE PTR [rcx]
    53df:	66 00 00             	data16 add BYTE PTR [rax],al
    53e2:	00 37                	add    BYTE PTR [rdi],dh
    53e4:	0e                   	(bad)
    53e5:	00 00                	add    BYTE PTR [rax],al
    53e7:	0e                   	(bad)
    53e8:	0e                   	(bad)
    53e9:	0a 00                	or     al,BYTE PTR [rax]
    53eb:	00 02                	add    BYTE PTR [rdx],al
    53ed:	29 13                	sub    DWORD PTR [rbx],edx
    53ef:	f0 00 00             	lock add BYTE PTR [rax],al
    53f2:	00 0e                	add    BYTE PTR [rsi],cl
    53f4:	56                   	push   rsi
    53f5:	0a 00                	or     al,BYTE PTR [rax]
    53f7:	00 02                	add    BYTE PTR [rdx],al
    53f9:	29 1f                	sub    DWORD PTR [rdi],ebx
    53fb:	66 00 00             	data16 add BYTE PTR [rax],al
    53fe:	00 1a                	add    BYTE PTR [rdx],bl
    5400:	00 1f                	add    BYTE PTR [rdi],bl
    5402:	da 32                	fidiv  DWORD PTR [rdx]
    5404:	00 00                	add    BYTE PTR [rax],al
    5406:	03 1a                	add    ebx,DWORD PTR [rdx]
    5408:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    540b:	00 6b 0e             	add    BYTE PTR [rbx+0xe],ch
    540e:	00 00                	add    BYTE PTR [rax],al
    5410:	0e                   	(bad)
    5411:	d1 0a                	ror    DWORD PTR [rdx],1
    5413:	00 00                	add    BYTE PTR [rax],al
    5415:	03 1a                	add    ebx,DWORD PTR [rdx]
    5417:	0b 66 00             	or     esp,DWORD PTR [rsi+0x0]
    541a:	00 00                	add    BYTE PTR [rax],al
    541c:	0e                   	(bad)
    541d:	36 0b 00             	ss or  eax,DWORD PTR [rax]
    5420:	00 03                	add    BYTE PTR [rbx],al
    5422:	1a 17                	sbb    dl,BYTE PTR [rdi]
    5424:	89 01                	mov    DWORD PTR [rcx],eax
    5426:	00 00                	add    BYTE PTR [rax],al
    5428:	0e                   	(bad)
    5429:	8d 0a                	lea    ecx,[rdx]
    542b:	00 00                	add    BYTE PTR [rax],al
    542d:	03 1a                	add    ebx,DWORD PTR [rdx]
    542f:	25 2e 00 00 00       	and    eax,0x2e
    5434:	00 36                	add    BYTE PTR [rsi],dh
    5436:	b5 05                	mov    ch,0x5
    5438:	00 00                	add    BYTE PTR [rax],al
    543a:	04 e9                	add    al,0xe9
    543c:	01 b5 05 00 00 bb    	add    DWORD PTR [rbp-0x44fffffb],esi
    5442:	01 00                	add    DWORD PTR [rax],eax
    5444:	00 03                	add    BYTE PTR [rbx],al
    5446:	97                   	xchg   edi,eax
    5447:	0e                   	(bad)
    5448:	00 00                	add    BYTE PTR [rax],al
    544a:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    544d:	73 00                	jae    544f <__FRAME_END__+0x733>
    544f:	e9 0f bb 01 00       	jmp    20f63 <_end+0x1af4b>
    5454:	00 20                	add    BYTE PTR [rax],ah
    5456:	5f                   	pop    rdi
    5457:	5f                   	pop    rdi
    5458:	63 00                	movsxd eax,DWORD PTR [rax]
    545a:	e9 18 66 00 00       	jmp    ba77 <_end+0x5a5f>
    545f:	00 00                	add    BYTE PTR [rax],al
    5461:	21 b5 05 00 00 ab    	and    DWORD PTR [rbp-0x54fffffb],esi
    5467:	05 00 00 21 2e       	add    eax,0x2e210000
    546c:	07                   	(bad)
    546d:	00 00                	add    BYTE PTR [rax],al
    546f:	2e 07                	cs (bad)
    5471:	00 00                	add    BYTE PTR [rax],al
    5473:	00 23                	add    BYTE PTR [rbx],ah
    5475:	78 00                	js     5477 <__FRAME_END__+0x75b>
    5477:	00 05 00 01 08 d1    	add    BYTE PTR [rip+0xffffffffd1080100],al        # ffffffffd108557d <_end+0xffffffffd107f565>
    547d:	13 00                	adc    eax,DWORD PTR [rax]
    547f:	00 66 33             	add    BYTE PTR [rsi+0x33],ah
    5482:	00 00                	add    BYTE PTR [rax],al
    5484:	00 21                	add    BYTE PTR [rcx],ah
    5486:	e7 02                	out    0x2,eax
    5488:	00 00                	add    BYTE PTR [rax],al
    548a:	00 00                	add    BYTE PTR [rax],al
    548c:	00 00                	add    BYTE PTR [rax],al
    548e:	90                   	nop
    548f:	23 00                	and    eax,DWORD PTR [rax]
    5491:	00 00                	add    BYTE PTR [rax],al
    5493:	00 00                	add    BYTE PTR [rax],al
    5495:	00 ec                	add    ah,ch
    5497:	15 00 00 00 00       	adc    eax,0x0
    549c:	00 00                	add    BYTE PTR [rax],al
    549e:	75 15                	jne    54b5 <__FRAME_END__+0x799>
    54a0:	00 00                	add    BYTE PTR [rax],al
    54a2:	12 08                	adc    cl,BYTE PTR [rax]
    54a4:	04 1d                	add    al,0x1d
    54a6:	02 00                	add    al,BYTE PTR [rax]
    54a8:	00 12                	add    BYTE PTR [rdx],dl
    54aa:	04 04                	add    al,0x4
    54ac:	80 01 00             	add    BYTE PTR [rcx],0x0
    54af:	00 67 73             	add    BYTE PTR [rdi+0x73],ah
    54b2:	74 64                	je     5518 <__FRAME_END__+0x7fc>
    54b4:	00 11                	add    BYTE PTR [rcx],dl
    54b6:	32 01                	xor    al,BYTE PTR [rcx]
    54b8:	0b e3                	or     esp,ebx
    54ba:	20 00                	and    BYTE PTR [rax],al
    54bc:	00 18                	add    BYTE PTR [rax],bl
    54be:	03 59 07             	add    ebx,DWORD PTR [rcx+0x7]
    54c1:	0b ff                	or     edi,edi
    54c3:	22 00                	and    al,BYTE PTR [rax]
    54c5:	00 18                	add    BYTE PTR [rax],bl
    54c7:	03 5a 07             	add    ebx,DWORD PTR [rdx+0x7]
    54ca:	0b f3                	or     esi,ebx
    54cc:	22 00                	and    al,BYTE PTR [rax]
    54ce:	00 4f 78             	add    BYTE PTR [rdi+0x78],cl
    54d1:	2c 00                	sub    al,0x0
    54d3:	00 b0 0a 4f 8a 30    	add    BYTE PTR [rax+0x308a4f0a],dh
    54d9:	00 00                	add    BYTE PTR [rax],al
    54db:	06                   	(bad)
    54dc:	0b 3c 94             	or     edi,DWORD PTR [rsp+rdx*4]
    54df:	2e 00 00             	cs add BYTE PTR [rax],al
    54e2:	06                   	(bad)
    54e3:	32 0d 1a 61 62 73    	xor    cl,BYTE PTR [rip+0x7362611a]        # 7362b603 <_end+0x736255eb>
    54e9:	00 07                	add    BYTE PTR [rdi],al
    54eb:	89 15 03 00 00 cb    	mov    DWORD PTR [rip+0xffffffffcb000003],edx        # ffffffffcb0054f4 <_end+0xffffffffcafff4dc>
    54f1:	24 00                	and    al,0x0
    54f3:	00 8a 00 00 00 01    	add    BYTE PTR [rdx+0x1000000],cl
    54f9:	cb                   	retf
    54fa:	24 00                	and    al,0x0
    54fc:	00 00                	add    BYTE PTR [rax],al
    54fe:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5501:	73 00                	jae    5503 <__FRAME_END__+0x7e7>
    5503:	07                   	(bad)
    5504:	55                   	push   rbp
    5505:	1b 00                	sbb    eax,DWORD PTR [rax]
    5507:	00 00                	add    BYTE PTR [rax],al
    5509:	95                   	xchg   ebp,eax
    550a:	24 00                	and    al,0x0
    550c:	00 a3 00 00 00 01    	add    BYTE PTR [rbx+0x1000000],ah
    5512:	95                   	xchg   ebp,eax
    5513:	24 00                	and    al,0x0
    5515:	00 00                	add    BYTE PTR [rax],al
    5517:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    551a:	73 00                	jae    551c <__FRAME_END__+0x800>
    551c:	07                   	(bad)
    551d:	4f 01 03             	rex.WRXB add QWORD PTR [r11],r8
    5520:	00 00                	add    BYTE PTR [rax],al
    5522:	c5 21 00             	(bad)
    5525:	00 bc 00 00 00 01 c5 	add    BYTE PTR [rax+rax*1-0x3aff0000],bh
    552c:	21 00                	and    DWORD PTR [rax],eax
    552e:	00 00                	add    BYTE PTR [rax],al
    5530:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5533:	73 00                	jae    5535 <__FRAME_END__+0x819>
    5535:	07                   	(bad)
    5536:	4b 0b 03             	rex.WXB or rax,QWORD PTR [r11]
    5539:	00 00                	add    BYTE PTR [rax],al
    553b:	35 00 00 00 d5       	xor    eax,0xd5000000
    5540:	00 00                	add    BYTE PTR [rax],al
    5542:	00 01                	add    BYTE PTR [rcx],al
    5544:	35 00 00 00 00       	xor    eax,0x0
    5549:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    554c:	73 00                	jae    554e <__FRAME_END__+0x832>
    554e:	07                   	(bad)
    554f:	47 f7 02 00 00 2e 00 	rex.RXB test DWORD PTR [r10],0x2e0000
    5556:	00 00                	add    BYTE PTR [rax],al
    5558:	ee                   	out    dx,al
    5559:	00 00                	add    BYTE PTR [rax],al
    555b:	00 01                	add    BYTE PTR [rcx],al
    555d:	2e 00 00             	cs add BYTE PTR [rax],al
    5560:	00 00                	add    BYTE PTR [rax],al
    5562:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5565:	73 00                	jae    5567 <__FRAME_END__+0x84b>
    5567:	07                   	(bad)
    5568:	3d eb 00 00 00       	cmp    eax,0xeb
    556d:	be 21 00 00 07       	mov    esi,0x7000021
    5572:	01 00                	add    DWORD PTR [rax],eax
    5574:	00 01                	add    BYTE PTR [rcx],al
    5576:	be 21 00 00 00       	mov    esi,0x21
    557b:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    557e:	73 00                	jae    5580 <__FRAME_END__+0x864>
    5580:	07                   	(bad)
    5581:	38 11                	cmp    BYTE PTR [rcx],dl
    5583:	00 00                	add    BYTE PTR [rax],al
    5585:	00 b2 21 00 00 20    	add    BYTE PTR [rdx+0x20000021],dh
    558b:	01 00                	add    DWORD PTR [rax],eax
    558d:	00 01                	add    BYTE PTR [rcx],al
    558f:	b2 21                	mov    dl,0x21
    5591:	00 00                	add    BYTE PTR [rax],al
    5593:	00 0f                	add    BYTE PTR [rdi],cl
    5595:	d8 29                	fsubr  DWORD PTR [rcx]
    5597:	00 00                	add    BYTE PTR [rax],al
    5599:	03 5d 03             	add    ebx,DWORD PTR [rbp+0x3]
    559c:	37                   	(bad)
    559d:	25 00 00 c5 21       	and    eax,0x21c50000
    55a2:	00 00                	add    BYTE PTR [rax],al
    55a4:	3a 01                	cmp    al,BYTE PTR [rcx]
    55a6:	00 00                	add    BYTE PTR [rax],al
    55a8:	01 c5                	add    ebp,eax
    55aa:	21 00                	and    DWORD PTR [rax],eax
    55ac:	00 00                	add    BYTE PTR [rax],al
    55ae:	0f d8 29             	psubusb mm5,QWORD PTR [rcx]
    55b1:	00 00                	add    BYTE PTR [rax],al
    55b3:	03 59 03             	add    ebx,DWORD PTR [rcx+0x3]
    55b6:	42 25 00 00 35 00    	rex.X and eax,0x350000
    55bc:	00 00                	add    BYTE PTR [rax],al
    55be:	54                   	push   rsp
    55bf:	01 00                	add    DWORD PTR [rax],eax
    55c1:	00 01                	add    BYTE PTR [rcx],al
    55c3:	35 00 00 00 00       	xor    eax,0x0
    55c8:	0f 40 2a             	cmovo  ebp,DWORD PTR [rdx]
    55cb:	00 00                	add    BYTE PTR [rax],al
    55cd:	03 70 03             	add    esi,DWORD PTR [rax+0x3]
    55d0:	e9 18 00 00 c5       	jmp    ffffffffc50055ed <_end+0xffffffffc4fff5d5>
    55d5:	21 00                	and    DWORD PTR [rax],eax
    55d7:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
    55da:	00 00                	add    BYTE PTR [rax],al
    55dc:	01 c5                	add    ebp,eax
    55de:	21 00                	and    DWORD PTR [rax],eax
    55e0:	00 00                	add    BYTE PTR [rax],al
    55e2:	0f 40 2a             	cmovo  ebp,DWORD PTR [rdx]
    55e5:	00 00                	add    BYTE PTR [rax],al
    55e7:	03 6c 03 f4          	add    ebp,DWORD PTR [rbx+rax*1-0xc]
    55eb:	18 00                	sbb    BYTE PTR [rax],al
    55ed:	00 35 00 00 00 88    	add    BYTE PTR [rip+0xffffffff88000000],dh        # ffffffff880055f3 <_end+0xffffffff87fff5db>
    55f3:	01 00                	add    DWORD PTR [rax],eax
    55f5:	00 01                	add    BYTE PTR [rcx],al
    55f7:	35 00 00 00 00       	xor    eax,0x0
    55fc:	0f 34                	sysenter
    55fe:	27                   	(bad)
    55ff:	00 00                	add    BYTE PTR [rax],al
    5601:	03 83 03 e3 14 00    	add    eax,DWORD PTR [rbx+0x14e303]
    5607:	00 c5                	add    ch,al
    5609:	21 00                	and    DWORD PTR [rax],eax
    560b:	00 a2 01 00 00 01    	add    BYTE PTR [rdx+0x1000001],ah
    5611:	c5 21 00             	(bad)
    5614:	00 00                	add    BYTE PTR [rax],al
    5616:	0f 34                	sysenter
    5618:	27                   	(bad)
    5619:	00 00                	add    BYTE PTR [rax],al
    561b:	03 7f 03             	add    edi,DWORD PTR [rdi+0x3]
    561e:	ee                   	out    dx,al
    561f:	14 00                	adc    al,0x0
    5621:	00 35 00 00 00 bc    	add    BYTE PTR [rip+0xffffffffbc000000],dh        # ffffffffbc005627 <_end+0xffffffffbbfff60f>
    5627:	01 00                	add    DWORD PTR [rax],eax
    5629:	00 01                	add    BYTE PTR [rcx],al
    562b:	35 00 00 00 00       	xor    eax,0x0
    5630:	0f ab 32             	bts    DWORD PTR [rdx],esi
    5633:	00 00                	add    BYTE PTR [rax],al
    5635:	03 96 03 3d 24 00    	add    edx,DWORD PTR [rsi+0x243d03]
    563b:	00 c5                	add    ch,al
    563d:	21 00                	and    DWORD PTR [rax],eax
    563f:	00 db                	add    bl,bl
    5641:	01 00                	add    DWORD PTR [rax],eax
    5643:	00 01                	add    BYTE PTR [rcx],al
    5645:	c5 21 00             	(bad)
    5648:	00 01                	add    BYTE PTR [rcx],al
    564a:	c5 21 00             	(bad)
    564d:	00 00                	add    BYTE PTR [rax],al
    564f:	0f ab 32             	bts    DWORD PTR [rdx],esi
    5652:	00 00                	add    BYTE PTR [rax],al
    5654:	03 92 03 88 25 00    	add    edx,DWORD PTR [rdx+0x258803]
    565a:	00 35 00 00 00 fa    	add    BYTE PTR [rip+0xfffffffffa000000],dh        # fffffffffa005660 <_end+0xfffffffff9fff648>
    5660:	01 00                	add    DWORD PTR [rax],eax
    5662:	00 01                	add    BYTE PTR [rcx],al
    5664:	35 00 00 00 01       	xor    eax,0x1000000
    5669:	35 00 00 00 00       	xor    eax,0x0
    566e:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    5671:	73 00                	jae    5673 <__FRAME_END__+0x957>
    5673:	03 b5 44 26 00 00    	add    esi,DWORD PTR [rbp+0x2644]
    5679:	c5 21 00             	(bad)
    567c:	00 13                	add    BYTE PTR [rbx],dl
    567e:	02 00                	add    al,BYTE PTR [rax]
    5680:	00 01                	add    BYTE PTR [rcx],al
    5682:	c5 21 00             	(bad)
    5685:	00 00                	add    BYTE PTR [rax],al
    5687:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    568a:	73 00                	jae    568c <__FRAME_END__+0x970>
    568c:	03 b1 4e 26 00 00    	add    esi,DWORD PTR [rcx+0x264e]
    5692:	35 00 00 00 2c       	xor    eax,0x2c000000
    5697:	02 00                	add    al,BYTE PTR [rax]
    5699:	00 01                	add    BYTE PTR [rcx],al
    569b:	35 00 00 00 00       	xor    eax,0x0
    56a0:	1f                   	(bad)
    56a1:	73 69                	jae    570c <__FRAME_END__+0x9f0>
    56a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    56a4:	00 94 01 0c 1a 00 00 	add    BYTE PTR [rcx+rax*1+0x1a0c],dl
    56ab:	c5 21 00             	(bad)
    56ae:	00 45 02             	add    BYTE PTR [rbp+0x2],al
    56b1:	00 00                	add    BYTE PTR [rax],al
    56b3:	01 c5                	add    ebp,eax
    56b5:	21 00                	and    DWORD PTR [rax],eax
    56b7:	00 00                	add    BYTE PTR [rax],al
    56b9:	1f                   	(bad)
    56ba:	73 69                	jae    5725 <__FRAME_END__+0xa09>
    56bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    56bd:	00 90 01 16 1a 00    	add    BYTE PTR [rax+0x1a1601],dl
    56c3:	00 35 00 00 00 5e    	add    BYTE PTR [rip+0x5e000000],dh        # 5e0056c9 <_end+0x5dfff6b1>
    56c9:	02 00                	add    al,BYTE PTR [rax]
    56cb:	00 01                	add    BYTE PTR [rcx],al
    56cd:	35 00 00 00 00       	xor    eax,0x0
    56d2:	1f                   	(bad)
    56d3:	74 61                	je     5736 <__FRAME_END__+0xa1a>
    56d5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    56d6:	00 cd                	add    ch,cl
    56d8:	01 4d 32             	add    DWORD PTR [rbp+0x32],ecx
    56db:	00 00                	add    BYTE PTR [rax],al
    56dd:	c5 21 00             	(bad)
    56e0:	00 77 02             	add    BYTE PTR [rdi+0x2],dh
    56e3:	00 00                	add    BYTE PTR [rax],al
    56e5:	01 c5                	add    ebp,eax
    56e7:	21 00                	and    DWORD PTR [rax],eax
    56e9:	00 00                	add    BYTE PTR [rax],al
    56eb:	1f                   	(bad)
    56ec:	74 61                	je     574f <__FRAME_END__+0xa33>
    56ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    56ef:	00 c9                	add    cl,cl
    56f1:	01 16                	add    DWORD PTR [rsi],edx
    56f3:	16                   	(bad)
    56f4:	00 00                	add    BYTE PTR [rax],al
    56f6:	35 00 00 00 90       	xor    eax,0x90000000
    56fb:	02 00                	add    al,BYTE PTR [rax]
    56fd:	00 01                	add    BYTE PTR [rcx],al
    56ff:	35 00 00 00 00       	xor    eax,0x0
    5704:	0f                   	xcrypt-ofb (bad)
    5705:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    5706:	2a 00                	sub    al,BYTE PTR [rax]
    5708:	00 03                	add    BYTE PTR [rbx],al
    570a:	c8 03 49 2e          	enter  0x4903,0x2e
    570e:	00 00                	add    BYTE PTR [rax],al
    5710:	c5 21 00             	(bad)
    5713:	00 aa 02 00 00 01    	add    BYTE PTR [rdx+0x1000002],ch
    5719:	c5 21 00             	(bad)
    571c:	00 00                	add    BYTE PTR [rax],al
    571e:	0f                   	xcrypt-ofb (bad)
    571f:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    5720:	2a 00                	sub    al,BYTE PTR [rax]
    5722:	00 03                	add    BYTE PTR [rbx],al
    5724:	c4 03 54 2e          	(bad)
    5728:	00 00                	add    BYTE PTR [rax],al
    572a:	35 00 00 00 c4       	xor    eax,0xc4000000
    572f:	02 00                	add    al,BYTE PTR [rax]
    5731:	00 01                	add    BYTE PTR [rcx],al
    5733:	35 00 00 00 00       	xor    eax,0x0
    5738:	04 89                	add    al,0x89
    573a:	1f                   	(bad)
    573b:	00 00                	add    BYTE PTR [rax],al
    573d:	03 a7 01 03 7d 1f    	add    esp,DWORD PTR [rdi+0x1f7d0301]
    5743:	00 00                	add    BYTE PTR [rax],al
    5745:	c5 21 00             	(bad)
    5748:	00 df                	add    bh,bl
    574a:	02 00                	add    al,BYTE PTR [rax]
    574c:	00 01                	add    BYTE PTR [rcx],al
    574e:	c5 21 00             	(bad)
    5751:	00 00                	add    BYTE PTR [rax],al
    5753:	04 89                	add    al,0x89
    5755:	1f                   	(bad)
    5756:	00 00                	add    BYTE PTR [rax],al
    5758:	03 a3 01 03 b4 17    	add    esp,DWORD PTR [rbx+0x17b40301]
    575e:	00 00                	add    BYTE PTR [rax],al
    5760:	35 00 00 00 fa       	xor    eax,0xfa000000
    5765:	02 00                	add    al,BYTE PTR [rax]
    5767:	00 01                	add    BYTE PTR [rcx],al
    5769:	35 00 00 00 00       	xor    eax,0x0
    576e:	04 af                	add    al,0xaf
    5770:	25 00 00 03 e0       	and    eax,0xe0030000
    5775:	01 03                	add    DWORD PTR [rbx],eax
    5777:	8b 10                	mov    edx,DWORD PTR [rax]
    5779:	00 00                	add    BYTE PTR [rax],al
    577b:	c5 21 00             	(bad)
    577e:	00 15 03 00 00 01    	add    BYTE PTR [rip+0x1000003],dl        # 1005787 <_end+0xfff76f>
    5784:	c5 21 00             	(bad)
    5787:	00 00                	add    BYTE PTR [rax],al
    5789:	04 af                	add    al,0xaf
    578b:	25 00 00 03 dc       	and    eax,0xdc030000
    5790:	01 03                	add    DWORD PTR [rbx],eax
    5792:	96                   	xchg   esi,eax
    5793:	10 00                	adc    BYTE PTR [rax],al
    5795:	00 35 00 00 00 30    	add    BYTE PTR [rip+0x30000000],dh        # 3000579b <_end+0x2ffff783>
    579b:	03 00                	add    eax,DWORD PTR [rax]
    579d:	00 01                	add    BYTE PTR [rcx],al
    579f:	35 00 00 00 00       	xor    eax,0x0
    57a4:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    57a7:	70 00                	jo     57a9 <__FRAME_END__+0xa8d>
    57a9:	03 db                	add    ebx,ebx
    57ab:	53                   	push   rbx
    57ac:	0e                   	(bad)
    57ad:	00 00                	add    BYTE PTR [rax],al
    57af:	c5 21 00             	(bad)
    57b2:	00 49 03             	add    BYTE PTR [rcx+0x3],cl
    57b5:	00 00                	add    BYTE PTR [rax],al
    57b7:	01 c5                	add    ebp,eax
    57b9:	21 00                	and    DWORD PTR [rax],eax
    57bb:	00 00                	add    BYTE PTR [rax],al
    57bd:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    57c0:	70 00                	jo     57c2 <__FRAME_END__+0xaa6>
    57c2:	03 d7                	add    edx,edi
    57c4:	15 1b 00 00 35       	adc    eax,0x3500001b
    57c9:	00 00                	add    BYTE PTR [rax],al
    57cb:	00 62 03             	add    BYTE PTR [rdx+0x3],ah
    57ce:	00 00                	add    BYTE PTR [rax],al
    57d0:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 57d6 <__FRAME_END__+0xaba>
    57d6:	04 44                	add    al,0x44
    57d8:	28 00                	sub    BYTE PTR [rax],al
    57da:	00 03                	add    BYTE PTR [rbx],al
    57dc:	20 01                	and    BYTE PTR [rcx],al
    57de:	03 3d 1d 00 00 c5    	add    edi,DWORD PTR [rip+0xffffffffc500001d]        # ffffffffc5005801 <_end+0xffffffffc4fff7e9>
    57e4:	21 00                	and    DWORD PTR [rax],eax
    57e6:	00 82 03 00 00 01    	add    BYTE PTR [rdx+0x1000003],al
    57ec:	c5 21 00             	(bad)
    57ef:	00 01                	add    BYTE PTR [rcx],al
    57f1:	ba 25 00 00 00       	mov    edx,0x25
    57f6:	04 44                	add    al,0x44
    57f8:	28 00                	sub    BYTE PTR [rax],al
    57fa:	00 03                	add    BYTE PTR [rbx],al
    57fc:	1c 01                	sbb    al,0x1
    57fe:	03 07                	add    eax,DWORD PTR [rdi]
    5800:	25 00 00 35 00       	and    eax,0x350000
    5805:	00 00                	add    BYTE PTR [rax],al
    5807:	a2 03 00 00 01 35 00 	movabs ds:0x3501000003,al
    580e:	00 00 
    5810:	01 ba 25 00 00 00    	add    DWORD PTR [rdx+0x25],edi
    5816:	04 03                	add    al,0x3
    5818:	12 00                	adc    al,BYTE PTR [rax]
    581a:	00 03                	add    BYTE PTR [rbx],al
    581c:	33 01                	xor    eax,DWORD PTR [rcx]
    581e:	03 67 32             	add    esp,DWORD PTR [rdi+0x32]
    5821:	00 00                	add    BYTE PTR [rax],al
    5823:	c5 21 00             	(bad)
    5826:	00 c2                	add    dl,al
    5828:	03 00                	add    eax,DWORD PTR [rax]
    582a:	00 01                	add    BYTE PTR [rcx],al
    582c:	c5 21 00             	(bad)
    582f:	00 01                	add    BYTE PTR [rcx],al
    5831:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5832:	21 00                	and    DWORD PTR [rax],eax
    5834:	00 00                	add    BYTE PTR [rax],al
    5836:	04 03                	add    al,0x3
    5838:	12 00                	adc    al,BYTE PTR [rax]
    583a:	00 03                	add    BYTE PTR [rbx],al
    583c:	2f                   	(bad)
    583d:	01 03                	add    DWORD PTR [rbx],eax
    583f:	0a 20                	or     ah,BYTE PTR [rax]
    5841:	00 00                	add    BYTE PTR [rax],al
    5843:	35 00 00 00 e2       	xor    eax,0xe2000000
    5848:	03 00                	add    eax,DWORD PTR [rax]
    584a:	00 01                	add    BYTE PTR [rcx],al
    584c:	35 00 00 00 01       	xor    eax,0x1000000
    5851:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5852:	21 00                	and    DWORD PTR [rax],eax
    5854:	00 00                	add    BYTE PTR [rax],al
    5856:	1f                   	(bad)
    5857:	6c                   	ins    BYTE PTR es:[rdi],dx
    5858:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5859:	67 00 46 01          	add    BYTE PTR [esi+0x1],al
    585d:	8c 2c 00             	mov    WORD PTR [rax+rax*1],gs
    5860:	00 c5                	add    ch,al
    5862:	21 00                	and    DWORD PTR [rax],eax
    5864:	00 fb                	add    bl,bh
    5866:	03 00                	add    eax,DWORD PTR [rax]
    5868:	00 01                	add    BYTE PTR [rcx],al
    586a:	c5 21 00             	(bad)
    586d:	00 00                	add    BYTE PTR [rax],al
    586f:	1f                   	(bad)
    5870:	6c                   	ins    BYTE PTR es:[rdi],dx
    5871:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5872:	67 00 42 01          	add    BYTE PTR [edx+0x1],al
    5876:	96                   	xchg   esi,eax
    5877:	2c 00                	sub    al,0x0
    5879:	00 35 00 00 00 14    	add    BYTE PTR [rip+0x14000000],dh        # 1400587f <_end+0x13fff867>
    587f:	04 00                	add    al,0x0
    5881:	00 01                	add    BYTE PTR [rcx],al
    5883:	35 00 00 00 00       	xor    eax,0x0
    5888:	04 eb                	add    al,0xeb
    588a:	17                   	(bad)
    588b:	00 00                	add    BYTE PTR [rax],al
    588d:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    5890:	03 ca                	add    ecx,edx
    5892:	0c 00                	or     al,0x0
    5894:	00 c5                	add    ch,al
    5896:	21 00                	and    DWORD PTR [rax],eax
    5898:	00 2f                	add    BYTE PTR [rdi],ch
    589a:	04 00                	add    al,0x0
    589c:	00 01                	add    BYTE PTR [rcx],al
    589e:	c5 21 00             	(bad)
    58a1:	00 00                	add    BYTE PTR [rax],al
    58a3:	04 eb                	add    al,0xeb
    58a5:	17                   	(bad)
    58a6:	00 00                	add    BYTE PTR [rax],al
    58a8:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    58ab:	03 d6                	add    edx,esi
    58ad:	0c 00                	or     al,0x0
    58af:	00 35 00 00 00 4a    	add    BYTE PTR [rip+0x4a000000],dh        # 4a0058b5 <_end+0x49fff89d>
    58b5:	04 00                	add    al,0x0
    58b7:	00 01                	add    BYTE PTR [rcx],al
    58b9:	35 00 00 00 00       	xor    eax,0x0
    58be:	04 02                	add    al,0x2
    58c0:	15 00 00 03 6c       	adc    eax,0x6c030000
    58c5:	01 03                	add    DWORD PTR [rbx],eax
    58c7:	f1                   	int1
    58c8:	15 00 00 c5 21       	adc    eax,0x21c50000
    58cd:	00 00                	add    BYTE PTR [rax],al
    58cf:	6a 04                	push   0x4
    58d1:	00 00                	add    BYTE PTR [rax],al
    58d3:	01 c5                	add    ebp,eax
    58d5:	21 00                	and    DWORD PTR [rax],eax
    58d7:	00 01                	add    BYTE PTR [rcx],al
    58d9:	ff 25 00 00 00 04    	jmp    QWORD PTR [rip+0x4000000]        # 40058df <_end+0x3fff8c7>
    58df:	02 15 00 00 03 68    	add    dl,BYTE PTR [rip+0x68030000]        # 680358e5 <_end+0x6802f8cd>
    58e5:	01 03                	add    DWORD PTR [rbx],eax
    58e7:	84 1e                	test   BYTE PTR [rsi],bl
    58e9:	00 00                	add    BYTE PTR [rax],al
    58eb:	35 00 00 00 8a       	xor    eax,0x8a000000
    58f0:	04 00                	add    al,0x0
    58f2:	00 01                	add    BYTE PTR [rcx],al
    58f4:	35 00 00 00 01       	xor    eax,0x1000000
    58f9:	0c 26                	or     al,0x26
    58fb:	00 00                	add    BYTE PTR [rax],al
    58fd:	00 1f                	add    BYTE PTR [rdi],bl
    58ff:	70 6f                	jo     5970 <__FRAME_END__+0xc54>
    5901:	77 00                	ja     5903 <__FRAME_END__+0xbe7>
    5903:	78 01                	js     5906 <__FRAME_END__+0xbea>
    5905:	02 31                	add    dh,BYTE PTR [rcx]
    5907:	00 00                	add    BYTE PTR [rax],al
    5909:	c5 21 00             	(bad)
    590c:	00 a8 04 00 00 01    	add    BYTE PTR [rax+0x1000004],ch
    5912:	c5 21 00             	(bad)
    5915:	00 01                	add    BYTE PTR [rcx],al
    5917:	c5 21 00             	(bad)
    591a:	00 00                	add    BYTE PTR [rax],al
    591c:	1f                   	(bad)
    591d:	70 6f                	jo     598e <__FRAME_END__+0xc72>
    591f:	77 00                	ja     5921 <__FRAME_END__+0xc05>
    5921:	74 01                	je     5924 <__FRAME_END__+0xc08>
    5923:	b6 31                	mov    dh,0x31
    5925:	00 00                	add    BYTE PTR [rax],al
    5927:	35 00 00 00 c6       	xor    eax,0xc6000000
    592c:	04 00                	add    al,0x0
    592e:	00 01                	add    BYTE PTR [rcx],al
    5930:	35 00 00 00 01       	xor    eax,0x1000000
    5935:	35 00 00 00 00       	xor    eax,0x0
    593a:	04 4e                	add    al,0x4e
    593c:	0e                   	(bad)
    593d:	00 00                	add    BYTE PTR [rax],al
    593f:	03 ba 01 03 1a 23    	add    edi,DWORD PTR [rdx+0x231a0301]
    5945:	00 00                	add    BYTE PTR [rax],al
    5947:	c5 21 00             	(bad)
    594a:	00 e1                	add    cl,ah
    594c:	04 00                	add    al,0x0
    594e:	00 01                	add    BYTE PTR [rcx],al
    5950:	c5 21 00             	(bad)
    5953:	00 00                	add    BYTE PTR [rax],al
    5955:	04 4e                	add    al,0x4e
    5957:	0e                   	(bad)
    5958:	00 00                	add    BYTE PTR [rax],al
    595a:	03 b6 01 03 25 23    	add    esi,DWORD PTR [rsi+0x23250301]
    5960:	00 00                	add    BYTE PTR [rax],al
    5962:	35 00 00 00 fc       	xor    eax,0xfc000000
    5967:	04 00                	add    al,0x0
    5969:	00 01                	add    BYTE PTR [rcx],al
    596b:	35 00 00 00 00       	xor    eax,0x0
    5970:	0f 74 32             	pcmpeqb mm6,QWORD PTR [rdx]
    5973:	00 00                	add    BYTE PTR [rax],al
    5975:	03 a2 03 43 2c 00    	add    esp,DWORD PTR [rdx+0x2c4303]
    597b:	00 c5                	add    ch,al
    597d:	21 00                	and    DWORD PTR [rax],eax
    597f:	00 16                	add    BYTE PTR [rsi],dl
    5981:	05 00 00 01 c5       	add    eax,0xc5010000
    5986:	21 00                	and    DWORD PTR [rax],eax
    5988:	00 00                	add    BYTE PTR [rax],al
    598a:	0f 74 32             	pcmpeqb mm6,QWORD PTR [rdx]
    598d:	00 00                	add    BYTE PTR [rax],al
    598f:	03 9e 03 4e 2c 00    	add    ebx,DWORD PTR [rsi+0x2c4e03]
    5995:	00 35 00 00 00 30    	add    BYTE PTR [rip+0x30000000],dh        # 3000599b <_end+0x2ffff983>
    599b:	05 00 00 01 35       	add    eax,0x35010000
    59a0:	00 00                	add    BYTE PTR [rax],al
    59a2:	00 00                	add    BYTE PTR [rax],al
    59a4:	0f 4b 1d 00 00 03 ee 	cmovnp ebx,DWORD PTR [rip+0xffffffffee030000]        # ffffffffee0359ab <_end+0xffffffffee02f993>
    59ab:	03 fc                	add    edi,esp
    59ad:	33 00                	xor    eax,DWORD PTR [rax]
    59af:	00 c5                	add    ch,al
    59b1:	21 00                	and    DWORD PTR [rax],eax
    59b3:	00 4a 05             	add    BYTE PTR [rdx+0x5],cl
    59b6:	00 00                	add    BYTE PTR [rax],al
    59b8:	01 c5                	add    ebp,eax
    59ba:	21 00                	and    DWORD PTR [rax],eax
    59bc:	00 00                	add    BYTE PTR [rax],al
    59be:	0f 4b 1d 00 00 03 ea 	cmovnp ebx,DWORD PTR [rip+0xffffffffea030000]        # ffffffffea0359c5 <_end+0xffffffffea02f9ad>
    59c5:	03 98 14 00 00 35    	add    ebx,DWORD PTR [rax+0x35000014]
    59cb:	00 00                	add    BYTE PTR [rax],al
    59cd:	00 64 05 00          	add    BYTE PTR [rbp+rax*1+0x0],ah
    59d1:	00 01                	add    BYTE PTR [rcx],al
    59d3:	35 00 00 00 00       	xor    eax,0x0
    59d8:	04 50                	add    al,0x50
    59da:	1c 00                	sbb    al,0x0
    59dc:	00 03                	add    BYTE PTR [rbx],al
    59de:	01 01                	add    DWORD PTR [rcx],eax
    59e0:	03 03                	add    eax,DWORD PTR [rbx]
    59e2:	30 00                	xor    BYTE PTR [rax],al
    59e4:	00 c5                	add    ch,al
    59e6:	21 00                	and    DWORD PTR [rax],eax
    59e8:	00 7f 05             	add    BYTE PTR [rdi+0x5],bh
    59eb:	00 00                	add    BYTE PTR [rax],al
    59ed:	01 c5                	add    ebp,eax
    59ef:	21 00                	and    DWORD PTR [rax],eax
    59f1:	00 00                	add    BYTE PTR [rax],al
    59f3:	0f                   	movmskps ebx,(bad)
    59f4:	50                   	push   rax
    59f5:	1c 00                	sbb    al,0x0
    59f7:	00 03                	add    BYTE PTR [rbx],al
    59f9:	fd                   	std
    59fa:	03 0f                	add    ecx,DWORD PTR [rdi]
    59fc:	30 00                	xor    BYTE PTR [rax],al
    59fe:	00 35 00 00 00 99    	add    BYTE PTR [rip+0xffffffff99000000],dh        # ffffffff99005a04 <_end+0xffffffff98fff9ec>
    5a04:	05 00 00 01 35       	add    eax,0x35010000
    5a09:	00 00                	add    BYTE PTR [rax],al
    5a0b:	00 00                	add    BYTE PTR [rax],al
    5a0d:	04 b7                	add    al,0xb7
    5a0f:	16                   	(bad)
    5a10:	00 00                	add    BYTE PTR [rax],al
    5a12:	03 14 01             	add    edx,DWORD PTR [rcx+rax*1]
    5a15:	03 f0                	add    esi,eax
    5a17:	0b 00                	or     eax,DWORD PTR [rax]
    5a19:	00 c5                	add    ch,al
    5a1b:	21 00                	and    DWORD PTR [rax],eax
    5a1d:	00 b9 05 00 00 01    	add    BYTE PTR [rcx+0x1000005],bh
    5a23:	c5 21 00             	(bad)
    5a26:	00 01                	add    BYTE PTR [rcx],al
    5a28:	c5 21 00             	(bad)
    5a2b:	00 00                	add    BYTE PTR [rax],al
    5a2d:	04 b7                	add    al,0xb7
    5a2f:	16                   	(bad)
    5a30:	00 00                	add    BYTE PTR [rax],al
    5a32:	03 10                	add    edx,DWORD PTR [rax]
    5a34:	01 03                	add    DWORD PTR [rbx],eax
    5a36:	d6                   	(bad)
    5a37:	21 00                	and    DWORD PTR [rax],eax
    5a39:	00 35 00 00 00 d9    	add    BYTE PTR [rip+0xffffffffd9000000],dh        # ffffffffd9005a3f <_end+0xffffffffd8fffa27>
    5a3f:	05 00 00 01 35       	add    eax,0x35010000
    5a44:	00 00                	add    BYTE PTR [rax],al
    5a46:	00 01                	add    BYTE PTR [rcx],al
    5a48:	35 00 00 00 00       	xor    eax,0x0
    5a4d:	04 8b                	add    al,0x8b
    5a4f:	15 00 00 03 53       	adc    eax,0x53030000
    5a54:	04 03                	add    al,0x3
    5a56:	19 15 00 00 a6 21    	sbb    DWORD PTR [rip+0x21a60000],edx        # 21a65a5c <_end+0x21a5fa44>
    5a5c:	00 00                	add    BYTE PTR [rax],al
    5a5e:	f4                   	hlt
    5a5f:	05 00 00 01 c5       	add    eax,0xc5010000
    5a64:	21 00                	and    DWORD PTR [rax],eax
    5a66:	00 00                	add    BYTE PTR [rax],al
    5a68:	04 8b                	add    al,0x8b
    5a6a:	15 00 00 03 4e       	adc    eax,0x4e030000
    5a6f:	04 03                	add    al,0x3
    5a71:	07                   	(bad)
    5a72:	15 00 00 a6 21       	adc    eax,0x21a60000
    5a77:	00 00                	add    BYTE PTR [rax],al
    5a79:	0f 06                	clts
    5a7b:	00 00                	add    BYTE PTR [rax],al
    5a7d:	01 2e                	add    DWORD PTR [rsi],ebp
    5a7f:	00 00                	add    BYTE PTR [rax],al
    5a81:	00 00                	add    BYTE PTR [rax],al
    5a83:	04 8b                	add    al,0x8b
    5a85:	15 00 00 03 49       	adc    eax,0x49030000
    5a8a:	04 03                	add    al,0x3
    5a8c:	2b 15 00 00 a6 21    	sub    edx,DWORD PTR [rip+0x21a60000]        # 21a65a92 <_end+0x21a5fa7a>
    5a92:	00 00                	add    BYTE PTR [rax],al
    5a94:	2a 06                	sub    al,BYTE PTR [rsi]
    5a96:	00 00                	add    BYTE PTR [rax],al
    5a98:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5a9e <__FRAME_END__+0xd82>
    5a9e:	04 ee                	add    al,0xee
    5aa0:	2e 00 00             	cs add BYTE PTR [rax],al
    5aa3:	03 6a 04             	add    ebp,DWORD PTR [rdx+0x4]
    5aa6:	03 03                	add    eax,DWORD PTR [rbx]
    5aa8:	27                   	(bad)
    5aa9:	00 00                	add    BYTE PTR [rax],al
    5aab:	ea                   	(bad)
    5aac:	20 00                	and    BYTE PTR [rax],al
    5aae:	00 45 06             	add    BYTE PTR [rbp+0x6],al
    5ab1:	00 00                	add    BYTE PTR [rax],al
    5ab3:	01 c5                	add    ebp,eax
    5ab5:	21 00                	and    DWORD PTR [rax],eax
    5ab7:	00 00                	add    BYTE PTR [rax],al
    5ab9:	04 ee                	add    al,0xee
    5abb:	2e 00 00             	cs add BYTE PTR [rax],al
    5abe:	03 66 04             	add    esp,DWORD PTR [rsi+0x4]
    5ac1:	03 00                	add    eax,DWORD PTR [rax]
    5ac3:	28 00                	sub    BYTE PTR [rax],al
    5ac5:	00 ea                	add    dl,ch
    5ac7:	20 00                	and    BYTE PTR [rax],al
    5ac9:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    5acc:	00 00                	add    BYTE PTR [rax],al
    5ace:	01 2e                	add    DWORD PTR [rsi],ebp
    5ad0:	00 00                	add    BYTE PTR [rax],al
    5ad2:	00 00                	add    BYTE PTR [rax],al
    5ad4:	04 ee                	add    al,0xee
    5ad6:	2e 00 00             	cs add BYTE PTR [rax],al
    5ad9:	03 62 04             	add    esp,DWORD PTR [rdx+0x4]
    5adc:	03 21                	add    esp,DWORD PTR [rcx]
    5ade:	28 00                	sub    BYTE PTR [rax],al
    5ae0:	00 ea                	add    dl,ch
    5ae2:	20 00                	and    BYTE PTR [rax],al
    5ae4:	00 7b 06             	add    BYTE PTR [rbx+0x6],bh
    5ae7:	00 00                	add    BYTE PTR [rax],al
    5ae9:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5aef <__FRAME_END__+0xdd3>
    5aef:	04 85                	add    al,0x85
    5af1:	15 00 00 03 85       	adc    eax,0x85030000
    5af6:	04 03                	add    al,0x3
    5af8:	1c 2e                	sbb    al,0x2e
    5afa:	00 00                	add    BYTE PTR [rax],al
    5afc:	ea                   	(bad)
    5afd:	20 00                	and    BYTE PTR [rax],al
    5aff:	00 96 06 00 00 01    	add    BYTE PTR [rsi+0x1000006],dl
    5b05:	c5 21 00             	(bad)
    5b08:	00 00                	add    BYTE PTR [rax],al
    5b0a:	04 85                	add    al,0x85
    5b0c:	15 00 00 03 80       	adc    eax,0x80030000
    5b11:	04 03                	add    al,0x3
    5b13:	10 2e                	adc    BYTE PTR [rsi],ch
    5b15:	00 00                	add    BYTE PTR [rax],al
    5b17:	ea                   	(bad)
    5b18:	20 00                	and    BYTE PTR [rax],al
    5b1a:	00 b1 06 00 00 01    	add    BYTE PTR [rcx+0x1000006],dh
    5b20:	2e 00 00             	cs add BYTE PTR [rax],al
    5b23:	00 00                	add    BYTE PTR [rax],al
    5b25:	04 85                	add    al,0x85
    5b27:	15 00 00 03 78       	adc    eax,0x78030000
    5b2c:	04 03                	add    al,0x3
    5b2e:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    5b2f:	18 00                	sbb    BYTE PTR [rax],al
    5b31:	00 ea                	add    dl,ch
    5b33:	20 00                	and    BYTE PTR [rax],al
    5b35:	00 cc                	add    ah,cl
    5b37:	06                   	(bad)
    5b38:	00 00                	add    BYTE PTR [rax],al
    5b3a:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5b40 <__FRAME_END__+0xe24>
    5b40:	04 19                	add    al,0x19
    5b42:	1d 00 00 03 a0       	sbb    eax,0xa0030000
    5b47:	04 03                	add    al,0x3
    5b49:	bf 20 00 00 ea       	mov    edi,0xea000020
    5b4e:	20 00                	and    BYTE PTR [rax],al
    5b50:	00 e7                	add    bh,ah
    5b52:	06                   	(bad)
    5b53:	00 00                	add    BYTE PTR [rax],al
    5b55:	01 c5                	add    ebp,eax
    5b57:	21 00                	and    DWORD PTR [rax],eax
    5b59:	00 00                	add    BYTE PTR [rax],al
    5b5b:	04 19                	add    al,0x19
    5b5d:	1d 00 00 03 9b       	sbb    eax,0x9b030000
    5b62:	04 03                	add    al,0x3
    5b64:	b3 20                	mov    bl,0x20
    5b66:	00 00                	add    BYTE PTR [rax],al
    5b68:	ea                   	(bad)
    5b69:	20 00                	and    BYTE PTR [rax],al
    5b6b:	00 02                	add    BYTE PTR [rdx],al
    5b6d:	07                   	(bad)
    5b6e:	00 00                	add    BYTE PTR [rax],al
    5b70:	01 2e                	add    DWORD PTR [rsi],ebp
    5b72:	00 00                	add    BYTE PTR [rax],al
    5b74:	00 00                	add    BYTE PTR [rax],al
    5b76:	04 19                	add    al,0x19
    5b78:	1d 00 00 03 93       	sbb    eax,0x93030000
    5b7d:	04 03                	add    al,0x3
    5b7f:	cb                   	retf
    5b80:	20 00                	and    BYTE PTR [rax],al
    5b82:	00 ea                	add    dl,ch
    5b84:	20 00                	and    BYTE PTR [rax],al
    5b86:	00 1d 07 00 00 01    	add    BYTE PTR [rip+0x1000007],bl        # 1005b93 <_end+0xfffb7b>
    5b8c:	35 00 00 00 00       	xor    eax,0x0
    5b91:	04 1e                	add    al,0x1e
    5b93:	35 00 00 03 b6       	xor    eax,0xb6030000
    5b98:	04 03                	add    al,0x3
    5b9a:	4b 16                	rex.WXB (bad)
    5b9c:	00 00                	add    BYTE PTR [rax],al
    5b9e:	ea                   	(bad)
    5b9f:	20 00                	and    BYTE PTR [rax],al
    5ba1:	00 38                	add    BYTE PTR [rax],bh
    5ba3:	07                   	(bad)
    5ba4:	00 00                	add    BYTE PTR [rax],al
    5ba6:	01 c5                	add    ebp,eax
    5ba8:	21 00                	and    DWORD PTR [rax],eax
    5baa:	00 00                	add    BYTE PTR [rax],al
    5bac:	04 1e                	add    al,0x1e
    5bae:	35 00 00 03 b2       	xor    eax,0xb2030000
    5bb3:	04 03                	add    al,0x3
    5bb5:	3c 16                	cmp    al,0x16
    5bb7:	00 00                	add    BYTE PTR [rax],al
    5bb9:	ea                   	(bad)
    5bba:	20 00                	and    BYTE PTR [rax],al
    5bbc:	00 53 07             	add    BYTE PTR [rbx+0x7],dl
    5bbf:	00 00                	add    BYTE PTR [rax],al
    5bc1:	01 2e                	add    DWORD PTR [rsi],ebp
    5bc3:	00 00                	add    BYTE PTR [rax],al
    5bc5:	00 00                	add    BYTE PTR [rax],al
    5bc7:	04 1e                	add    al,0x1e
    5bc9:	35 00 00 03 ae       	xor    eax,0xae030000
    5bce:	04 03                	add    al,0x3
    5bd0:	5a                   	pop    rdx
    5bd1:	16                   	(bad)
    5bd2:	00 00                	add    BYTE PTR [rax],al
    5bd4:	ea                   	(bad)
    5bd5:	20 00                	and    BYTE PTR [rax],al
    5bd7:	00 6e 07             	add    BYTE PTR [rsi+0x7],ch
    5bda:	00 00                	add    BYTE PTR [rax],al
    5bdc:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5be2 <__FRAME_END__+0xec6>
    5be2:	04 bf                	add    al,0xbf
    5be4:	33 00                	xor    eax,DWORD PTR [rax]
    5be6:	00 03                	add    BYTE PTR [rbx],al
    5be8:	cd 04                	int    0x4
    5bea:	03 72 25             	add    esi,DWORD PTR [rdx+0x25]
    5bed:	00 00                	add    BYTE PTR [rax],al
    5bef:	ea                   	(bad)
    5bf0:	20 00                	and    BYTE PTR [rax],al
    5bf2:	00 89 07 00 00 01    	add    BYTE PTR [rcx+0x1000007],cl
    5bf8:	c5 21 00             	(bad)
    5bfb:	00 00                	add    BYTE PTR [rax],al
    5bfd:	04 bf                	add    al,0xbf
    5bff:	33 00                	xor    eax,DWORD PTR [rax]
    5c01:	00 03                	add    BYTE PTR [rbx],al
    5c03:	c9                   	leave
    5c04:	04 03                	add    al,0x3
    5c06:	48 0c 00             	rex.W or al,0x0
    5c09:	00 ea                	add    dl,ch
    5c0b:	20 00                	and    BYTE PTR [rax],al
    5c0d:	00 a4 07 00 00 01 2e 	add    BYTE PTR [rdi+rax*1+0x2e010000],ah
    5c14:	00 00                	add    BYTE PTR [rax],al
    5c16:	00 00                	add    BYTE PTR [rax],al
    5c18:	04 bf                	add    al,0xbf
    5c1a:	33 00                	xor    eax,DWORD PTR [rax]
    5c1c:	00 03                	add    BYTE PTR [rbx],al
    5c1e:	c5 04 03             	(bad)
    5c21:	56                   	push   rsi
    5c22:	0c 00                	or     al,0x0
    5c24:	00 ea                	add    dl,ch
    5c26:	20 00                	and    BYTE PTR [rax],al
    5c28:	00 bf 07 00 00 01    	add    BYTE PTR [rdi+0x1000007],bh
    5c2e:	35 00 00 00 00       	xor    eax,0x0
    5c33:	04 6c                	add    al,0x6c
    5c35:	19 00                	sbb    DWORD PTR [rax],eax
    5c37:	00 03                	add    BYTE PTR [rbx],al
    5c39:	e3 04                	jrcxz  5c3f <__FRAME_END__+0xf23>
    5c3b:	03 7f 1d             	add    edi,DWORD PTR [rdi+0x1d]
    5c3e:	00 00                	add    BYTE PTR [rax],al
    5c40:	ea                   	(bad)
    5c41:	20 00                	and    BYTE PTR [rax],al
    5c43:	00 df                	add    bh,bl
    5c45:	07                   	(bad)
    5c46:	00 00                	add    BYTE PTR [rax],al
    5c48:	01 c5                	add    ebp,eax
    5c4a:	21 00                	and    DWORD PTR [rax],eax
    5c4c:	00 01                	add    BYTE PTR [rcx],al
    5c4e:	c5 21 00             	(bad)
    5c51:	00 00                	add    BYTE PTR [rax],al
    5c53:	04 6c                	add    al,0x6c
    5c55:	19 00                	sbb    DWORD PTR [rax],eax
    5c57:	00 03                	add    BYTE PTR [rbx],al
    5c59:	df 04 03             	fild   WORD PTR [rbx+rax*1]
    5c5c:	30 1c 00             	xor    BYTE PTR [rax+rax*1],bl
    5c5f:	00 ea                	add    dl,ch
    5c61:	20 00                	and    BYTE PTR [rax],al
    5c63:	00 ff                	add    bh,bh
    5c65:	07                   	(bad)
    5c66:	00 00                	add    BYTE PTR [rax],al
    5c68:	01 2e                	add    DWORD PTR [rsi],ebp
    5c6a:	00 00                	add    BYTE PTR [rax],al
    5c6c:	00 01                	add    BYTE PTR [rcx],al
    5c6e:	2e 00 00             	cs add BYTE PTR [rax],al
    5c71:	00 00                	add    BYTE PTR [rax],al
    5c73:	04 6c                	add    al,0x6c
    5c75:	19 00                	sbb    DWORD PTR [rax],eax
    5c77:	00 03                	add    BYTE PTR [rbx],al
    5c79:	db 04 03             	fild   DWORD PTR [rbx+rax*1]
    5c7c:	e5 29                	in     eax,0x29
    5c7e:	00 00                	add    BYTE PTR [rax],al
    5c80:	ea                   	(bad)
    5c81:	20 00                	and    BYTE PTR [rax],al
    5c83:	00 1f                	add    BYTE PTR [rdi],bl
    5c85:	08 00                	or     BYTE PTR [rax],al
    5c87:	00 01                	add    BYTE PTR [rcx],al
    5c89:	35 00 00 00 01       	xor    eax,0x1000000
    5c8e:	35 00 00 00 00       	xor    eax,0x0
    5c93:	04 91                	add    al,0x91
    5c95:	1e                   	(bad)
    5c96:	00 00                	add    BYTE PTR [rax],al
    5c98:	03 fd                	add    edi,ebp
    5c9a:	04 03                	add    al,0x3
    5c9c:	ec                   	in     al,dx
    5c9d:	2f                   	(bad)
    5c9e:	00 00                	add    BYTE PTR [rax],al
    5ca0:	ea                   	(bad)
    5ca1:	20 00                	and    BYTE PTR [rax],al
    5ca3:	00 3f                	add    BYTE PTR [rdi],bh
    5ca5:	08 00                	or     BYTE PTR [rax],al
    5ca7:	00 01                	add    BYTE PTR [rcx],al
    5ca9:	c5 21 00             	(bad)
    5cac:	00 01                	add    BYTE PTR [rcx],al
    5cae:	c5 21 00             	(bad)
    5cb1:	00 00                	add    BYTE PTR [rax],al
    5cb3:	04 91                	add    al,0x91
    5cb5:	1e                   	(bad)
    5cb6:	00 00                	add    BYTE PTR [rax],al
    5cb8:	03 f9                	add    edi,ecx
    5cba:	04 03                	add    al,0x3
    5cbc:	b3 2e                	mov    bl,0x2e
    5cbe:	00 00                	add    BYTE PTR [rax],al
    5cc0:	ea                   	(bad)
    5cc1:	20 00                	and    BYTE PTR [rax],al
    5cc3:	00 5f 08             	add    BYTE PTR [rdi+0x8],bl
    5cc6:	00 00                	add    BYTE PTR [rax],al
    5cc8:	01 2e                	add    DWORD PTR [rsi],ebp
    5cca:	00 00                	add    BYTE PTR [rax],al
    5ccc:	00 01                	add    BYTE PTR [rcx],al
    5cce:	2e 00 00             	cs add BYTE PTR [rax],al
    5cd1:	00 00                	add    BYTE PTR [rax],al
    5cd3:	04 91                	add    al,0x91
    5cd5:	1e                   	(bad)
    5cd6:	00 00                	add    BYTE PTR [rax],al
    5cd8:	03 f5                	add    esi,ebp
    5cda:	04 03                	add    al,0x3
    5cdc:	27                   	(bad)
    5cdd:	31 00                	xor    DWORD PTR [rax],eax
    5cdf:	00 ea                	add    dl,ch
    5ce1:	20 00                	and    BYTE PTR [rax],al
    5ce3:	00 7f 08             	add    BYTE PTR [rdi+0x8],bh
    5ce6:	00 00                	add    BYTE PTR [rax],al
    5ce8:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005cee <_end+0xfffcd6>
    5cee:	35 00 00 00 00       	xor    eax,0x0
    5cf3:	04 cb                	add    al,0xcb
    5cf5:	31 00                	xor    DWORD PTR [rax],eax
    5cf7:	00 03                	add    BYTE PTR [rbx],al
    5cf9:	17                   	(bad)
    5cfa:	05 03 43 2f 00       	add    eax,0x2f4303
    5cff:	00 ea                	add    dl,ch
    5d01:	20 00                	and    BYTE PTR [rax],al
    5d03:	00 9f 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bl
    5d09:	c5 21 00             	(bad)
    5d0c:	00 01                	add    BYTE PTR [rcx],al
    5d0e:	c5 21 00             	(bad)
    5d11:	00 00                	add    BYTE PTR [rax],al
    5d13:	04 cb                	add    al,0xcb
    5d15:	31 00                	xor    DWORD PTR [rax],eax
    5d17:	00 03                	add    BYTE PTR [rbx],al
    5d19:	13 05 03 02 2e 00    	adc    eax,DWORD PTR [rip+0x2e0203]        # 2e5f22 <_end+0x2dff0a>
    5d1f:	00 ea                	add    dl,ch
    5d21:	20 00                	and    BYTE PTR [rax],al
    5d23:	00 bf 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bh
    5d29:	2e 00 00             	cs add BYTE PTR [rax],al
    5d2c:	00 01                	add    BYTE PTR [rcx],al
    5d2e:	2e 00 00             	cs add BYTE PTR [rax],al
    5d31:	00 00                	add    BYTE PTR [rax],al
    5d33:	04 cb                	add    al,0xcb
    5d35:	31 00                	xor    DWORD PTR [rax],eax
    5d37:	00 03                	add    BYTE PTR [rbx],al
    5d39:	0f 05                	syscall
    5d3b:	03 e3                	add    esp,ebx
    5d3d:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5d42:	00 00                	add    BYTE PTR [rax],al
    5d44:	df 08                	fisttp WORD PTR [rax]
    5d46:	00 00                	add    BYTE PTR [rax],al
    5d48:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005d4e <_end+0xfffd36>
    5d4e:	35 00 00 00 00       	xor    eax,0x0
    5d53:	04 30                	add    al,0x30
    5d55:	16                   	(bad)
    5d56:	00 00                	add    BYTE PTR [rax],al
    5d58:	03 31                	add    esi,DWORD PTR [rcx]
    5d5a:	05 03 63 27 00       	add    eax,0x276303
    5d5f:	00 ea                	add    dl,ch
    5d61:	20 00                	and    BYTE PTR [rax],al
    5d63:	00 ff                	add    bh,bh
    5d65:	08 00                	or     BYTE PTR [rax],al
    5d67:	00 01                	add    BYTE PTR [rcx],al
    5d69:	c5 21 00             	(bad)
    5d6c:	00 01                	add    BYTE PTR [rcx],al
    5d6e:	c5 21 00             	(bad)
    5d71:	00 00                	add    BYTE PTR [rax],al
    5d73:	04 30                	add    al,0x30
    5d75:	16                   	(bad)
    5d76:	00 00                	add    BYTE PTR [rax],al
    5d78:	03 2d 05 03 84 14    	add    ebp,DWORD PTR [rip+0x14840305]        # 14846083 <_end+0x1484006b>
    5d7e:	00 00                	add    BYTE PTR [rax],al
    5d80:	ea                   	(bad)
    5d81:	20 00                	and    BYTE PTR [rax],al
    5d83:	00 1f                	add    BYTE PTR [rdi],bl
    5d85:	09 00                	or     DWORD PTR [rax],eax
    5d87:	00 01                	add    BYTE PTR [rcx],al
    5d89:	2e 00 00             	cs add BYTE PTR [rax],al
    5d8c:	00 01                	add    BYTE PTR [rcx],al
    5d8e:	2e 00 00             	cs add BYTE PTR [rax],al
    5d91:	00 00                	add    BYTE PTR [rax],al
    5d93:	04 30                	add    al,0x30
    5d95:	16                   	(bad)
    5d96:	00 00                	add    BYTE PTR [rax],al
    5d98:	03 29                	add    ebp,DWORD PTR [rcx]
    5d9a:	05 03 81 29 00       	add    eax,0x298103
    5d9f:	00 ea                	add    dl,ch
    5da1:	20 00                	and    BYTE PTR [rax],al
    5da3:	00 3f                	add    BYTE PTR [rdi],bh
    5da5:	09 00                	or     DWORD PTR [rax],eax
    5da7:	00 01                	add    BYTE PTR [rcx],al
    5da9:	35 00 00 00 01       	xor    eax,0x1000000
    5dae:	35 00 00 00 00       	xor    eax,0x0
    5db3:	04 c3                	add    al,0xc3
    5db5:	18 00                	sbb    BYTE PTR [rax],al
    5db7:	00 03                	add    BYTE PTR [rbx],al
    5db9:	4b 05 03 c1 1b 00    	rex.WXB add rax,0x1bc103
    5dbf:	00 ea                	add    dl,ch
    5dc1:	20 00                	and    BYTE PTR [rax],al
    5dc3:	00 5f 09             	add    BYTE PTR [rdi+0x9],bl
    5dc6:	00 00                	add    BYTE PTR [rax],al
    5dc8:	01 c5                	add    ebp,eax
    5dca:	21 00                	and    DWORD PTR [rax],eax
    5dcc:	00 01                	add    BYTE PTR [rcx],al
    5dce:	c5 21 00             	(bad)
    5dd1:	00 00                	add    BYTE PTR [rax],al
    5dd3:	04 c3                	add    al,0xc3
    5dd5:	18 00                	sbb    BYTE PTR [rax],al
    5dd7:	00 03                	add    BYTE PTR [rbx],al
    5dd9:	47 05 03 cd 19 00    	rex.RXB add eax,0x19cd03
    5ddf:	00 ea                	add    dl,ch
    5de1:	20 00                	and    BYTE PTR [rax],al
    5de3:	00 7f 09             	add    BYTE PTR [rdi+0x9],bh
    5de6:	00 00                	add    BYTE PTR [rax],al
    5de8:	01 2e                	add    DWORD PTR [rsi],ebp
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	00 01                	add    BYTE PTR [rcx],al
    5dee:	2e 00 00             	cs add BYTE PTR [rax],al
    5df1:	00 00                	add    BYTE PTR [rax],al
    5df3:	04 c3                	add    al,0xc3
    5df5:	18 00                	sbb    BYTE PTR [rax],al
    5df7:	00 03                	add    BYTE PTR [rbx],al
    5df9:	43 05 03 27 1d 00    	rex.XB add eax,0x1d2703
    5dff:	00 ea                	add    dl,ch
    5e01:	20 00                	and    BYTE PTR [rax],al
    5e03:	00 9f 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],bl
    5e09:	35 00 00 00 01       	xor    eax,0x1000000
    5e0e:	35 00 00 00 00       	xor    eax,0x0
    5e13:	04 a8                	add    al,0xa8
    5e15:	0f 00 00             	sldt   WORD PTR [rax]
    5e18:	03 65 05             	add    esp,DWORD PTR [rbp+0x5]
    5e1b:	03 30                	add    esi,DWORD PTR [rax]
    5e1d:	28 00                	sub    BYTE PTR [rax],al
    5e1f:	00 ea                	add    dl,ch
    5e21:	20 00                	and    BYTE PTR [rax],al
    5e23:	00 bf 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],bh
    5e29:	c5 21 00             	(bad)
    5e2c:	00 01                	add    BYTE PTR [rcx],al
    5e2e:	c5 21 00             	(bad)
    5e31:	00 00                	add    BYTE PTR [rax],al
    5e33:	04 a8                	add    al,0xa8
    5e35:	0f 00 00             	sldt   WORD PTR [rax]
    5e38:	03 61 05             	add    esp,DWORD PTR [rcx+0x5]
    5e3b:	03 39                	add    edi,DWORD PTR [rcx]
    5e3d:	11 00                	adc    DWORD PTR [rax],eax
    5e3f:	00 ea                	add    dl,ch
    5e41:	20 00                	and    BYTE PTR [rax],al
    5e43:	00 df                	add    bh,bl
    5e45:	09 00                	or     DWORD PTR [rax],eax
    5e47:	00 01                	add    BYTE PTR [rcx],al
    5e49:	2e 00 00             	cs add BYTE PTR [rax],al
    5e4c:	00 01                	add    BYTE PTR [rcx],al
    5e4e:	2e 00 00             	cs add BYTE PTR [rax],al
    5e51:	00 00                	add    BYTE PTR [rax],al
    5e53:	04 a8                	add    al,0xa8
    5e55:	0f 00 00             	sldt   WORD PTR [rax]
    5e58:	03 5d 05             	add    ebx,DWORD PTR [rbp+0x5]
    5e5b:	03 67 2b             	add    esp,DWORD PTR [rdi+0x2b]
    5e5e:	00 00                	add    BYTE PTR [rax],al
    5e60:	ea                   	(bad)
    5e61:	20 00                	and    BYTE PTR [rax],al
    5e63:	00 ff                	add    bh,bh
    5e65:	09 00                	or     DWORD PTR [rax],eax
    5e67:	00 01                	add    BYTE PTR [rcx],al
    5e69:	35 00 00 00 01       	xor    eax,0x1000000
    5e6e:	35 00 00 00 00       	xor    eax,0x0
    5e73:	04 a6                	add    al,0xa6
    5e75:	2a 00                	sub    al,BYTE PTR [rax]
    5e77:	00 03                	add    BYTE PTR [rbx],al
    5e79:	f2 07                	repnz (bad)
    5e7b:	03 5f 35             	add    ebx,DWORD PTR [rdi+0x35]
    5e7e:	00 00                	add    BYTE PTR [rax],al
    5e80:	c5 21 00             	(bad)
    5e83:	00 1a                	add    BYTE PTR [rdx],bl
    5e85:	0a 00                	or     al,BYTE PTR [rax]
    5e87:	00 01                	add    BYTE PTR [rcx],al
    5e89:	c5 21 00             	(bad)
    5e8c:	00 00                	add    BYTE PTR [rax],al
    5e8e:	04 a6                	add    al,0xa6
    5e90:	2a 00                	sub    al,BYTE PTR [rax]
    5e92:	00 03                	add    BYTE PTR [rbx],al
    5e94:	ee                   	out    dx,al
    5e95:	07                   	(bad)
    5e96:	03 6b 35             	add    ebp,DWORD PTR [rbx+0x35]
    5e99:	00 00                	add    BYTE PTR [rax],al
    5e9b:	35 00 00 00 35       	xor    eax,0x35000000
    5ea0:	0a 00                	or     al,BYTE PTR [rax]
    5ea2:	00 01                	add    BYTE PTR [rcx],al
    5ea4:	35 00 00 00 00       	xor    eax,0x0
    5ea9:	04 88                	add    al,0x88
    5eab:	1f                   	(bad)
    5eac:	00 00                	add    BYTE PTR [rax],al
    5eae:	03 04 08             	add    eax,DWORD PTR [rax+rcx*1]
    5eb1:	03 28                	add    ebp,DWORD PTR [rax]
    5eb3:	2e 00 00             	cs add BYTE PTR [rax],al
    5eb6:	c5 21 00             	(bad)
    5eb9:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
    5ebc:	00 00                	add    BYTE PTR [rax],al
    5ebe:	01 c5                	add    ebp,eax
    5ec0:	21 00                	and    DWORD PTR [rax],eax
    5ec2:	00 00                	add    BYTE PTR [rax],al
    5ec4:	04 88                	add    al,0x88
    5ec6:	1f                   	(bad)
    5ec7:	00 00                	add    BYTE PTR [rax],al
    5ec9:	03 00                	add    eax,DWORD PTR [rax]
    5ecb:	08 03                	or     BYTE PTR [rbx],al
    5ecd:	34 2e                	xor    al,0x2e
    5ecf:	00 00                	add    BYTE PTR [rax],al
    5ed1:	35 00 00 00 6b       	xor    eax,0x6b000000
    5ed6:	0a 00                	or     al,BYTE PTR [rax]
    5ed8:	00 01                	add    BYTE PTR [rcx],al
    5eda:	35 00 00 00 00       	xor    eax,0x0
    5edf:	04 ae                	add    al,0xae
    5ee1:	25 00 00 03 16       	and    eax,0x16030000
    5ee6:	08 03                	or     BYTE PTR [rbx],al
    5ee8:	1f                   	(bad)
    5ee9:	25 00 00 c5 21       	and    eax,0x21c50000
    5eee:	00 00                	add    BYTE PTR [rax],al
    5ef0:	86 0a                	xchg   BYTE PTR [rdx],cl
    5ef2:	00 00                	add    BYTE PTR [rax],al
    5ef4:	01 c5                	add    ebp,eax
    5ef6:	21 00                	and    DWORD PTR [rax],eax
    5ef8:	00 00                	add    BYTE PTR [rax],al
    5efa:	04 ae                	add    al,0xae
    5efc:	25 00 00 03 12       	and    eax,0x12030000
    5f01:	08 03                	or     BYTE PTR [rbx],al
    5f03:	2b 25 00 00 35 00    	sub    esp,DWORD PTR [rip+0x350000]        # 355f09 <_end+0x34fef1>
    5f09:	00 00                	add    BYTE PTR [rax],al
    5f0b:	a1 0a 00 00 01 35 00 	movabs eax,ds:0x350100000a
    5f12:	00 00 
    5f14:	00 04 6d 25 00 00 03 	add    BYTE PTR [rbp*2+0x3000025],al
    5f1b:	28 08                	sub    BYTE PTR [rax],cl
    5f1d:	03 0c 1e             	add    ecx,DWORD PTR [rsi+rbx*1]
    5f20:	00 00                	add    BYTE PTR [rax],al
    5f22:	c5 21 00             	(bad)
    5f25:	00 bc 0a 00 00 01 c5 	add    BYTE PTR [rdx+rcx*1-0x3aff0000],bh
    5f2c:	21 00                	and    DWORD PTR [rax],eax
    5f2e:	00 00                	add    BYTE PTR [rax],al
    5f30:	04 6d                	add    al,0x6d
    5f32:	25 00 00 03 24       	and    eax,0x24030000
    5f37:	08 03                	or     BYTE PTR [rbx],al
    5f39:	17                   	(bad)
    5f3a:	1e                   	(bad)
    5f3b:	00 00                	add    BYTE PTR [rax],al
    5f3d:	35 00 00 00 d7       	xor    eax,0xd7000000
    5f42:	0a 00                	or     al,BYTE PTR [rax]
    5f44:	00 01                	add    BYTE PTR [rcx],al
    5f46:	35 00 00 00 00       	xor    eax,0x0
    5f4b:	04 0d                	add    al,0xd
    5f4d:	16                   	(bad)
    5f4e:	00 00                	add    BYTE PTR [rax],al
    5f50:	03 3a                	add    edi,DWORD PTR [rdx]
    5f52:	08 03                	or     BYTE PTR [rbx],al
    5f54:	78 18                	js     5f6e <_GLOBAL_OFFSET_TABLE_+0x76>
    5f56:	00 00                	add    BYTE PTR [rax],al
    5f58:	c5 21 00             	(bad)
    5f5b:	00 f7                	add    bh,dh
    5f5d:	0a 00                	or     al,BYTE PTR [rax]
    5f5f:	00 01                	add    BYTE PTR [rcx],al
    5f61:	c5 21 00             	(bad)
    5f64:	00 01                	add    BYTE PTR [rcx],al
    5f66:	c5 21 00             	(bad)
    5f69:	00 00                	add    BYTE PTR [rax],al
    5f6b:	04 0d                	add    al,0xd
    5f6d:	16                   	(bad)
    5f6e:	00 00                	add    BYTE PTR [rax],al
    5f70:	03 36                	add    esi,DWORD PTR [rsi]
    5f72:	08 03                	or     BYTE PTR [rbx],al
    5f74:	95                   	xchg   ebp,eax
    5f75:	18 00                	sbb    BYTE PTR [rax],al
    5f77:	00 35 00 00 00 17    	add    BYTE PTR [rip+0x17000000],dh        # 17005f7d <_end+0x16ffff65>
    5f7d:	0b 00                	or     eax,DWORD PTR [rax]
    5f7f:	00 01                	add    BYTE PTR [rcx],al
    5f81:	35 00 00 00 01       	xor    eax,0x1000000
    5f86:	35 00 00 00 00       	xor    eax,0x0
    5f8b:	1f                   	(bad)
    5f8c:	65 72 66             	gs jb  5ff5 <_GLOBAL_OFFSET_TABLE_+0xfd>
    5f8f:	00 44 08 d1          	add    BYTE PTR [rax+rcx*1-0x2f],al
    5f93:	2e 00 00             	cs add BYTE PTR [rax],al
    5f96:	c5 21 00             	(bad)
    5f99:	00 30                	add    BYTE PTR [rax],dh
    5f9b:	0b 00                	or     eax,DWORD PTR [rax]
    5f9d:	00 01                	add    BYTE PTR [rcx],al
    5f9f:	c5 21 00             	(bad)
    5fa2:	00 00                	add    BYTE PTR [rax],al
    5fa4:	1f                   	(bad)
    5fa5:	65 72 66             	gs jb  600e <__dso_handle+0x6>
    5fa8:	00 40 08             	add    BYTE PTR [rax+0x8],al
    5fab:	db 2e                	fld    TBYTE PTR [rsi]
    5fad:	00 00                	add    BYTE PTR [rax],al
    5faf:	35 00 00 00 49       	xor    eax,0x49000000
    5fb4:	0b 00                	or     eax,DWORD PTR [rax]
    5fb6:	00 01                	add    BYTE PTR [rcx],al
    5fb8:	35 00 00 00 00       	xor    eax,0x0
    5fbd:	04 69                	add    al,0x69
    5fbf:	1f                   	(bad)
    5fc0:	00 00                	add    BYTE PTR [rax],al
    5fc2:	03 56 08             	add    edx,DWORD PTR [rsi+0x8]
    5fc5:	03 9f 15 00 00 c5    	add    ebx,DWORD PTR [rdi-0x3affffeb]
    5fcb:	21 00                	and    DWORD PTR [rax],eax
    5fcd:	00 64 0b 00          	add    BYTE PTR [rbx+rcx*1+0x0],ah
    5fd1:	00 01                	add    BYTE PTR [rcx],al
    5fd3:	c5 21 00             	(bad)
    5fd6:	00 00                	add    BYTE PTR [rax],al
    5fd8:	04 69                	add    al,0x69
    5fda:	1f                   	(bad)
    5fdb:	00 00                	add    BYTE PTR [rax],al
    5fdd:	03 52 08             	add    edx,DWORD PTR [rdx+0x8]
    5fe0:	03 aa 15 00 00 35    	add    ebp,DWORD PTR [rdx+0x35000015]
    5fe6:	00 00                	add    BYTE PTR [rax],al
    5fe8:	00 7f 0b             	add    BYTE PTR [rdi+0xb],bh
    5feb:	00 00                	add    BYTE PTR [rax],al
    5fed:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5ff3 <_GLOBAL_OFFSET_TABLE_+0xfb>
    5ff3:	04 15                	add    al,0x15
    5ff5:	34 00                	xor    al,0x0
    5ff7:	00 03                	add    BYTE PTR [rbx],al
    5ff9:	68 08 03 12 27       	push   0x27120308
    5ffe:	00 00                	add    BYTE PTR [rax],al
    6000:	c5 21 00             	(bad)
    6003:	00 9a 0b 00 00 01    	add    BYTE PTR [rdx+0x100000b],bl
    6009:	c5 21 00             	(bad)
    600c:	00 00                	add    BYTE PTR [rax],al
    600e:	04 15                	add    al,0x15
    6010:	34 00                	xor    al,0x0
    6012:	00 03                	add    BYTE PTR [rbx],al
    6014:	64 08 03             	or     BYTE PTR fs:[rbx],al
    6017:	1d 27 00 00 35       	sbb    eax,0x35000027
    601c:	00 00                	add    BYTE PTR [rax],al
    601e:	00 b5 0b 00 00 01    	add    BYTE PTR [rbp+0x100000b],dh
    6024:	35 00 00 00 00       	xor    eax,0x0
    6029:	04 9e                	add    al,0x9e
    602b:	28 00                	sub    BYTE PTR [rax],al
    602d:	00 03                	add    BYTE PTR [rbx],al
    602f:	7a 08                	jp     6039 <_end+0x21>
    6031:	03 ec                	add    ebp,esp
    6033:	19 00                	sbb    DWORD PTR [rax],eax
    6035:	00 c5                	add    ch,al
    6037:	21 00                	and    DWORD PTR [rax],eax
    6039:	00 d0                	add    al,dl
    603b:	0b 00                	or     eax,DWORD PTR [rax]
    603d:	00 01                	add    BYTE PTR [rcx],al
    603f:	c5 21 00             	(bad)
    6042:	00 00                	add    BYTE PTR [rax],al
    6044:	04 9e                	add    al,0x9e
    6046:	28 00                	sub    BYTE PTR [rax],al
    6048:	00 03                	add    BYTE PTR [rbx],al
    604a:	76 08                	jbe    6054 <_end+0x3c>
    604c:	03 f8                	add    edi,eax
    604e:	19 00                	sbb    DWORD PTR [rax],eax
    6050:	00 35 00 00 00 eb    	add    BYTE PTR [rip+0xffffffffeb000000],dh        # ffffffffeb006056 <_end+0xffffffffeb00003e>
    6056:	0b 00                	or     eax,DWORD PTR [rax]
    6058:	00 01                	add    BYTE PTR [rcx],al
    605a:	35 00 00 00 00       	xor    eax,0x0
    605f:	04 eb                	add    al,0xeb
    6061:	0b 00                	or     eax,DWORD PTR [rax]
    6063:	00 03                	add    BYTE PTR [rbx],al
    6065:	8c 08                	mov    WORD PTR [rax],cs
    6067:	03 e0                	add    esp,eax
    6069:	13 00                	adc    eax,DWORD PTR [rax]
    606b:	00 c5                	add    ch,al
    606d:	21 00                	and    DWORD PTR [rax],eax
    606f:	00 0b                	add    BYTE PTR [rbx],cl
    6071:	0c 00                	or     al,0x0
    6073:	00 01                	add    BYTE PTR [rcx],al
    6075:	c5 21 00             	(bad)
    6078:	00 01                	add    BYTE PTR [rcx],al
    607a:	c5 21 00             	(bad)
    607d:	00 00                	add    BYTE PTR [rax],al
    607f:	04 eb                	add    al,0xeb
    6081:	0b 00                	or     eax,DWORD PTR [rax]
    6083:	00 03                	add    BYTE PTR [rbx],al
    6085:	88 08                	mov    BYTE PTR [rax],cl
    6087:	03 52 15             	add    edx,DWORD PTR [rdx+0x15]
    608a:	00 00                	add    BYTE PTR [rax],al
    608c:	35 00 00 00 2b       	xor    eax,0x2b000000
    6091:	0c 00                	or     al,0x0
    6093:	00 01                	add    BYTE PTR [rcx],al
    6095:	35 00 00 00 01       	xor    eax,0x1000000
    609a:	35 00 00 00 00       	xor    eax,0x0
    609f:	1f                   	(bad)
    60a0:	66 6d                	ins    WORD PTR es:[rdi],dx
    60a2:	61                   	(bad)
    60a3:	00 96 08 c4 0f 00    	add    BYTE PTR [rsi+0xfc408],dl
    60a9:	00 c5                	add    ch,al
    60ab:	21 00                	and    DWORD PTR [rax],eax
    60ad:	00 4e 0c             	add    BYTE PTR [rsi+0xc],cl
    60b0:	00 00                	add    BYTE PTR [rax],al
    60b2:	01 c5                	add    ebp,eax
    60b4:	21 00                	and    DWORD PTR [rax],eax
    60b6:	00 01                	add    BYTE PTR [rcx],al
    60b8:	c5 21 00             	(bad)
    60bb:	00 01                	add    BYTE PTR [rcx],al
    60bd:	c5 21 00             	(bad)
    60c0:	00 00                	add    BYTE PTR [rax],al
    60c2:	1f                   	(bad)
    60c3:	66 6d                	ins    WORD PTR es:[rdi],dx
    60c5:	61                   	(bad)
    60c6:	00 92 08 ff 18 00    	add    BYTE PTR [rdx+0x18ff08],dl
    60cc:	00 35 00 00 00 71    	add    BYTE PTR [rip+0x71000000],dh        # 710060d2 <_end+0x710000ba>
    60d2:	0c 00                	or     al,0x0
    60d4:	00 01                	add    BYTE PTR [rcx],al
    60d6:	35 00 00 00 01       	xor    eax,0x1000000
    60db:	35 00 00 00 01       	xor    eax,0x1000000
    60e0:	35 00 00 00 00       	xor    eax,0x0
    60e5:	04 6d                	add    al,0x6d
    60e7:	2d 00 00 03 a0       	sub    eax,0xa0030000
    60ec:	08 03                	or     BYTE PTR [rbx],al
    60ee:	3c 1b                	cmp    al,0x1b
    60f0:	00 00                	add    BYTE PTR [rax],al
    60f2:	c5 21 00             	(bad)
    60f5:	00 91 0c 00 00 01    	add    BYTE PTR [rcx+0x100000c],dl
    60fb:	c5 21 00             	(bad)
    60fe:	00 01                	add    BYTE PTR [rcx],al
    6100:	c5 21 00             	(bad)
    6103:	00 00                	add    BYTE PTR [rax],al
    6105:	04 6d                	add    al,0x6d
    6107:	2d 00 00 03 9c       	sub    eax,0x9c030000
    610c:	08 03                	or     BYTE PTR [rbx],al
    610e:	f4                   	hlt
    610f:	34 00                	xor    al,0x0
    6111:	00 35 00 00 00 b1    	add    BYTE PTR [rip+0xffffffffb1000000],dh        # ffffffffb1006117 <_end+0xffffffffb10000ff>
    6117:	0c 00                	or     al,0x0
    6119:	00 01                	add    BYTE PTR [rcx],al
    611b:	35 00 00 00 01       	xor    eax,0x1000000
    6120:	35 00 00 00 00       	xor    eax,0x0
    6125:	04 85                	add    al,0x85
    6127:	0e                   	(bad)
    6128:	00 00                	add    BYTE PTR [rax],al
    612a:	03 aa 08 03 c4 34    	add    ebp,DWORD PTR [rdx+0x34c40308]
    6130:	00 00                	add    BYTE PTR [rax],al
    6132:	c5 21 00             	(bad)
    6135:	00 d1                	add    cl,dl
    6137:	0c 00                	or     al,0x0
    6139:	00 01                	add    BYTE PTR [rcx],al
    613b:	c5 21 00             	(bad)
    613e:	00 01                	add    BYTE PTR [rcx],al
    6140:	c5 21 00             	(bad)
    6143:	00 00                	add    BYTE PTR [rax],al
    6145:	04 85                	add    al,0x85
    6147:	0e                   	(bad)
    6148:	00 00                	add    BYTE PTR [rax],al
    614a:	03 a6 08 03 be 0c    	add    esp,DWORD PTR [rsi+0xcbe0308]
    6150:	00 00                	add    BYTE PTR [rax],al
    6152:	35 00 00 00 f1       	xor    eax,0xf1000000
    6157:	0c 00                	or     al,0x0
    6159:	00 01                	add    BYTE PTR [rcx],al
    615b:	35 00 00 00 01       	xor    eax,0x1000000
    6160:	35 00 00 00 00       	xor    eax,0x0
    6165:	04 e6                	add    al,0xe6
    6167:	2f                   	(bad)
    6168:	00 00                	add    BYTE PTR [rax],al
    616a:	03 f6                	add    esi,esi
    616c:	0d 03 66 14 00       	or     eax,0x146603
    6171:	00 c5                	add    ch,al
    6173:	21 00                	and    DWORD PTR [rax],eax
    6175:	00 16                	add    BYTE PTR [rsi],dl
    6177:	0d 00 00 01 c5       	or     eax,0xc5010000
    617c:	21 00                	and    DWORD PTR [rax],eax
    617e:	00 01                	add    BYTE PTR [rcx],al
    6180:	c5 21 00             	(bad)
    6183:	00 01                	add    BYTE PTR [rcx],al
    6185:	c5 21 00             	(bad)
    6188:	00 00                	add    BYTE PTR [rax],al
    618a:	04 e6                	add    al,0xe6
    618c:	2f                   	(bad)
    618d:	00 00                	add    BYTE PTR [rax],al
    618f:	03 f2                	add    esi,edx
    6191:	0d 03 07 34 00       	or     eax,0x340703
    6196:	00 2e                	add    BYTE PTR [rsi],ch
    6198:	00 00                	add    BYTE PTR [rax],al
    619a:	00 3b                	add    BYTE PTR [rbx],bh
    619c:	0d 00 00 01 2e       	or     eax,0x2e010000
    61a1:	00 00                	add    BYTE PTR [rax],al
    61a3:	00 01                	add    BYTE PTR [rcx],al
    61a5:	2e 00 00             	cs add BYTE PTR [rax],al
    61a8:	00 01                	add    BYTE PTR [rcx],al
    61aa:	2e 00 00             	cs add BYTE PTR [rax],al
    61ad:	00 00                	add    BYTE PTR [rax],al
    61af:	04 e6                	add    al,0xe6
    61b1:	2f                   	(bad)
    61b2:	00 00                	add    BYTE PTR [rax],al
    61b4:	03 ee                	add    ebp,esi
    61b6:	0d 03 c2 29 00       	or     eax,0x29c203
    61bb:	00 35 00 00 00 60    	add    BYTE PTR [rip+0x60000000],dh        # 600061c1 <_end+0x600001a9>
    61c1:	0d 00 00 01 35       	or     eax,0x35010000
    61c6:	00 00                	add    BYTE PTR [rax],al
    61c8:	00 01                	add    BYTE PTR [rcx],al
    61ca:	35 00 00 00 01       	xor    eax,0x1000000
    61cf:	35 00 00 00 00       	xor    eax,0x0
    61d4:	04 e6                	add    al,0xe6
    61d6:	2f                   	(bad)
    61d7:	00 00                	add    BYTE PTR [rax],al
    61d9:	03 b4 08 03 f7 12 00 	add    esi,DWORD PTR [rax+rcx*1+0x12f703]
    61e0:	00 c5                	add    ch,al
    61e2:	21 00                	and    DWORD PTR [rax],eax
    61e4:	00 80 0d 00 00 01    	add    BYTE PTR [rax+0x100000d],al
    61ea:	c5 21 00             	(bad)
    61ed:	00 01                	add    BYTE PTR [rcx],al
    61ef:	c5 21 00             	(bad)
    61f2:	00 00                	add    BYTE PTR [rax],al
    61f4:	04 e6                	add    al,0xe6
    61f6:	2f                   	(bad)
    61f7:	00 00                	add    BYTE PTR [rax],al
    61f9:	03 b0 08 03 f6 13    	add    esi,DWORD PTR [rax+0x13f60308]
    61ff:	00 00                	add    BYTE PTR [rax],al
    6201:	35 00 00 00 a0       	xor    eax,0xa0000000
    6206:	0d 00 00 01 35       	or     eax,0x35010000
    620b:	00 00                	add    BYTE PTR [rax],al
    620d:	00 01                	add    BYTE PTR [rcx],al
    620f:	35 00 00 00 00       	xor    eax,0x0
    6214:	04 e7                	add    al,0xe7
    6216:	26 00 00             	es add BYTE PTR [rax],al
    6219:	03 be 08 03 1b 31    	add    edi,DWORD PTR [rsi+0x311b0308]
    621f:	00 00                	add    BYTE PTR [rax],al
    6221:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6222:	21 00                	and    DWORD PTR [rax],eax
    6224:	00 bb 0d 00 00 01    	add    BYTE PTR [rbx+0x100000d],bh
    622a:	c5 21 00             	(bad)
    622d:	00 00                	add    BYTE PTR [rax],al
    622f:	04 e7                	add    al,0xe7
    6231:	26 00 00             	es add BYTE PTR [rax],al
    6234:	03 ba 08 03 f6 30    	add    edi,DWORD PTR [rdx+0x30f60308]
    623a:	00 00                	add    BYTE PTR [rax],al
    623c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    623d:	21 00                	and    DWORD PTR [rax],eax
    623f:	00 d6                	add    dh,dl
    6241:	0d 00 00 01 35       	or     eax,0x35010000
    6246:	00 00                	add    BYTE PTR [rax],al
    6248:	00 00                	add    BYTE PTR [rax],al
    624a:	04 fb                	add    al,0xfb
    624c:	2d 00 00 03 d1       	sub    eax,0xd1030000
    6251:	08 03                	or     BYTE PTR [rbx],al
    6253:	95                   	xchg   ebp,eax
    6254:	0e                   	(bad)
    6255:	00 00                	add    BYTE PTR [rax],al
    6257:	c5 21 00             	(bad)
    625a:	00 f1                	add    cl,dh
    625c:	0d 00 00 01 c5       	or     eax,0xc5010000
    6261:	21 00                	and    DWORD PTR [rax],eax
    6263:	00 00                	add    BYTE PTR [rax],al
    6265:	04 fb                	add    al,0xfb
    6267:	2d 00 00 03 cd       	sub    eax,0xcd030000
    626c:	08 03                	or     BYTE PTR [rbx],al
    626e:	a2 0e 00 00 35 00 00 	movabs ds:0xc0000003500000e,al
    6275:	00 0c 
    6277:	0e                   	(bad)
    6278:	00 00                	add    BYTE PTR [rax],al
    627a:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6280 <_end+0x268>
    6280:	04 84                	add    al,0x84
    6282:	34 00                	xor    al,0x0
    6284:	00 03                	add    BYTE PTR [rbx],al
    6286:	e3 08                	jrcxz  6290 <_end+0x278>
    6288:	03 5f 2c             	add    ebx,DWORD PTR [rdi+0x2c]
    628b:	00 00                	add    BYTE PTR [rax],al
    628d:	be 21 00 00 27       	mov    esi,0x27000021
    6292:	0e                   	(bad)
    6293:	00 00                	add    BYTE PTR [rax],al
    6295:	01 c5                	add    ebp,eax
    6297:	21 00                	and    DWORD PTR [rax],eax
    6299:	00 00                	add    BYTE PTR [rax],al
    629b:	04 84                	add    al,0x84
    629d:	34 00                	xor    al,0x0
    629f:	00 03                	add    BYTE PTR [rbx],al
    62a1:	df 08                	fisttp WORD PTR [rax]
    62a3:	03 83 33 00 00 be    	add    eax,DWORD PTR [rbx-0x41ffffcd]
    62a9:	21 00                	and    DWORD PTR [rax],eax
    62ab:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
    62ae:	00 00                	add    BYTE PTR [rax],al
    62b0:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 62b6 <_end+0x29e>
    62b6:	04 fc                	add    al,0xfc
    62b8:	23 00                	and    eax,DWORD PTR [rax]
    62ba:	00 03                	add    BYTE PTR [rbx],al
    62bc:	f5                   	cmc
    62bd:	08 03                	or     BYTE PTR [rbx],al
    62bf:	ee                   	out    dx,al
    62c0:	1b 00                	sbb    eax,DWORD PTR [rax]
    62c2:	00 be 21 00 00 5d    	add    BYTE PTR [rsi+0x5d000021],bh
    62c8:	0e                   	(bad)
    62c9:	00 00                	add    BYTE PTR [rax],al
    62cb:	01 c5                	add    ebp,eax
    62cd:	21 00                	and    DWORD PTR [rax],eax
    62cf:	00 00                	add    BYTE PTR [rax],al
    62d1:	04 fc                	add    al,0xfc
    62d3:	23 00                	and    eax,DWORD PTR [rax]
    62d5:	00 03                	add    BYTE PTR [rbx],al
    62d7:	f1                   	int1
    62d8:	08 03                	or     BYTE PTR [rbx],al
    62da:	fc                   	cld
    62db:	1b 00                	sbb    eax,DWORD PTR [rax]
    62dd:	00 be 21 00 00 78    	add    BYTE PTR [rsi+0x78000021],bh
    62e3:	0e                   	(bad)
    62e4:	00 00                	add    BYTE PTR [rax],al
    62e6:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 62ec <_end+0x2d4>
    62ec:	04 66                	add    al,0x66
    62ee:	19 00                	sbb    DWORD PTR [rax],eax
    62f0:	00 03                	add    BYTE PTR [rbx],al
    62f2:	07                   	(bad)
    62f3:	09 03                	or     DWORD PTR [rbx],eax
    62f5:	29 12                	sub    DWORD PTR [rdx],edx
    62f7:	00 00                	add    BYTE PTR [rax],al
    62f9:	c5 21 00             	(bad)
    62fc:	00 93 0e 00 00 01    	add    BYTE PTR [rbx+0x100000e],dl
    6302:	c5 21 00             	(bad)
    6305:	00 00                	add    BYTE PTR [rax],al
    6307:	04 66                	add    al,0x66
    6309:	19 00                	sbb    DWORD PTR [rax],eax
    630b:	00 03                	add    BYTE PTR [rbx],al
    630d:	03 09                	add    ecx,DWORD PTR [rcx]
    630f:	03 61 1d             	add    esp,DWORD PTR [rcx+0x1d]
    6312:	00 00                	add    BYTE PTR [rax],al
    6314:	35 00 00 00 ae       	xor    eax,0xae000000
    6319:	0e                   	(bad)
    631a:	00 00                	add    BYTE PTR [rax],al
    631c:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6322 <_end+0x30a>
    6322:	04 fb                	add    al,0xfb
    6324:	1c 00                	sbb    al,0x0
    6326:	00 03                	add    BYTE PTR [rbx],al
    6328:	1a 09                	sbb    cl,BYTE PTR [rcx]
    632a:	03 5e 15             	add    ebx,DWORD PTR [rsi+0x15]
    632d:	00 00                	add    BYTE PTR [rax],al
    632f:	c5 21 00             	(bad)
    6332:	00 c9                	add    cl,cl
    6334:	0e                   	(bad)
    6335:	00 00                	add    BYTE PTR [rax],al
    6337:	01 c5                	add    ebp,eax
    6339:	21 00                	and    DWORD PTR [rax],eax
    633b:	00 00                	add    BYTE PTR [rax],al
    633d:	04 fb                	add    al,0xfb
    633f:	1c 00                	sbb    al,0x0
    6341:	00 03                	add    BYTE PTR [rbx],al
    6343:	16                   	(bad)
    6344:	09 03                	or     DWORD PTR [rbx],eax
    6346:	69 15 00 00 35 00 00 	imul   edx,DWORD PTR [rip+0x350000],0xee40000        # 356350 <_end+0x350338>
    634d:	00 e4 0e 
    6350:	00 00                	add    BYTE PTR [rax],al
    6352:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6358 <_end+0x340>
    6358:	04 e8                	add    al,0xe8
    635a:	26 00 00             	es add BYTE PTR [rax],al
    635d:	03 2c 09             	add    ebp,DWORD PTR [rcx+rcx*1]
    6360:	03 b9 2c 00 00 c5    	add    edi,DWORD PTR [rcx-0x3affffd4]
    6366:	21 00                	and    DWORD PTR [rax],eax
    6368:	00 ff                	add    bh,bh
    636a:	0e                   	(bad)
    636b:	00 00                	add    BYTE PTR [rax],al
    636d:	01 c5                	add    ebp,eax
    636f:	21 00                	and    DWORD PTR [rax],eax
    6371:	00 00                	add    BYTE PTR [rax],al
    6373:	04 e8                	add    al,0xe8
    6375:	26 00 00             	es add BYTE PTR [rax],al
    6378:	03 28                	add    ebp,DWORD PTR [rax]
    637a:	09 03                	or     DWORD PTR [rbx],eax
    637c:	c4                   	(bad)
    637d:	2c 00                	sub    al,0x0
    637f:	00 35 00 00 00 1a    	add    BYTE PTR [rip+0x1a000000],dh        # 1a006385 <_end+0x1a00036d>
    6385:	0f 00 00             	sldt   WORD PTR [rax]
    6388:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 638e <_end+0x376>
    638e:	04 85                	add    al,0x85
    6390:	34 00                	xor    al,0x0
    6392:	00 03                	add    BYTE PTR [rbx],al
    6394:	3e 09 03             	ds or  DWORD PTR [rbx],eax
    6397:	4b 31 00             	rex.WXB xor QWORD PTR [r8],rax
    639a:	00 b2 21 00 00 35    	add    BYTE PTR [rdx+0x35000021],dh
    63a0:	0f 00 00             	sldt   WORD PTR [rax]
    63a3:	01 c5                	add    ebp,eax
    63a5:	21 00                	and    DWORD PTR [rax],eax
    63a7:	00 00                	add    BYTE PTR [rax],al
    63a9:	04 85                	add    al,0x85
    63ab:	34 00                	xor    al,0x0
    63ad:	00 03                	add    BYTE PTR [rbx],al
    63af:	3a 09                	cmp    cl,BYTE PTR [rcx]
    63b1:	03 c3                	add    eax,ebx
    63b3:	10 00                	adc    BYTE PTR [rax],al
    63b5:	00 b2 21 00 00 50    	add    BYTE PTR [rdx+0x50000021],dh
    63bb:	0f 00 00             	sldt   WORD PTR [rax]
    63be:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 63c4 <_end+0x3ac>
    63c4:	04 fd                	add    al,0xfd
    63c6:	23 00                	and    eax,DWORD PTR [rax]
    63c8:	00 03                	add    BYTE PTR [rbx],al
    63ca:	50                   	push   rax
    63cb:	09 03                	or     DWORD PTR [rbx],eax
    63cd:	76 33                	jbe    6402 <_end+0x3ea>
    63cf:	00 00                	add    BYTE PTR [rax],al
    63d1:	b2 21                	mov    dl,0x21
    63d3:	00 00                	add    BYTE PTR [rax],al
    63d5:	6b 0f 00             	imul   ecx,DWORD PTR [rdi],0x0
    63d8:	00 01                	add    BYTE PTR [rcx],al
    63da:	c5 21 00             	(bad)
    63dd:	00 00                	add    BYTE PTR [rax],al
    63df:	04 fd                	add    al,0xfd
    63e1:	23 00                	and    eax,DWORD PTR [rax]
    63e3:	00 03                	add    BYTE PTR [rbx],al
    63e5:	4c 09 03             	or     QWORD PTR [rbx],r8
    63e8:	de 17                	ficom  WORD PTR [rdi]
    63ea:	00 00                	add    BYTE PTR [rax],al
    63ec:	b2 21                	mov    dl,0x21
    63ee:	00 00                	add    BYTE PTR [rax],al
    63f0:	86 0f                	xchg   BYTE PTR [rdi],cl
    63f2:	00 00                	add    BYTE PTR [rax],al
    63f4:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 63fa <_end+0x3e2>
    63fa:	04 cf                	add    al,0xcf
    63fc:	14 00                	adc    al,0x0
    63fe:	00 03                	add    BYTE PTR [rbx],al
    6400:	62 09 03 74 14       	(bad)
    6405:	00 00                	add    BYTE PTR [rax],al
    6407:	c5 21 00             	(bad)
    640a:	00 a1 0f 00 00 01    	add    BYTE PTR [rcx+0x100000f],ah
    6410:	c5 21 00             	(bad)
    6413:	00 00                	add    BYTE PTR [rax],al
    6415:	04 cf                	add    al,0xcf
    6417:	14 00                	adc    al,0x0
    6419:	00 03                	add    BYTE PTR [rbx],al
    641b:	5e                   	pop    rsi
    641c:	09 03                	or     DWORD PTR [rbx],eax
    641e:	9d                   	popf
    641f:	13 00                	adc    eax,DWORD PTR [rax]
    6421:	00 35 00 00 00 bc    	add    BYTE PTR [rip+0xffffffffbc000000],dh        # ffffffffbc006427 <_end+0xffffffffbc00040f>
    6427:	0f 00 00             	sldt   WORD PTR [rax]
    642a:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6430 <_end+0x418>
    6430:	04 94                	add    al,0x94
    6432:	28 00                	sub    BYTE PTR [rax],al
    6434:	00 03                	add    BYTE PTR [rbx],al
    6436:	74 09                	je     6441 <_end+0x429>
    6438:	03 65 0e             	add    esp,DWORD PTR [rbp+0xe]
    643b:	00 00                	add    BYTE PTR [rax],al
    643d:	c5 21 00             	(bad)
    6440:	00 dc                	add    ah,bl
    6442:	0f 00 00             	sldt   WORD PTR [rax]
    6445:	01 c5                	add    ebp,eax
    6447:	21 00                	and    DWORD PTR [rax],eax
    6449:	00 01                	add    BYTE PTR [rcx],al
    644b:	c5 21 00             	(bad)
    644e:	00 00                	add    BYTE PTR [rax],al
    6450:	04 94                	add    al,0x94
    6452:	28 00                	sub    BYTE PTR [rax],al
    6454:	00 03                	add    BYTE PTR [rbx],al
    6456:	70 09                	jo     6461 <_end+0x449>
    6458:	03 f5                	add    esi,ebp
    645a:	10 00                	adc    BYTE PTR [rax],al
    645c:	00 35 00 00 00 fc    	add    BYTE PTR [rip+0xfffffffffc000000],dh        # fffffffffc006462 <_end+0xfffffffffc00044a>
    6462:	0f 00 00             	sldt   WORD PTR [rax]
    6465:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 100646b <_end+0x1000453>
    646b:	35 00 00 00 00       	xor    eax,0x0
    6470:	04 77                	add    al,0x77
    6472:	12 00                	adc    al,BYTE PTR [rax]
    6474:	00 03                	add    BYTE PTR [rbx],al
    6476:	7e 09                	jle    6481 <_end+0x469>
    6478:	03 b4 25 00 00 c5 21 	add    esi,DWORD PTR [rbp+riz*1+0x21c50000]
    647f:	00 00                	add    BYTE PTR [rax],al
    6481:	1c 10                	sbb    al,0x10
    6483:	00 00                	add    BYTE PTR [rax],al
    6485:	01 c5                	add    ebp,eax
    6487:	21 00                	and    DWORD PTR [rax],eax
    6489:	00 01                	add    BYTE PTR [rcx],al
    648b:	c5 21 00             	(bad)
    648e:	00 00                	add    BYTE PTR [rax],al
    6490:	04 77                	add    al,0x77
    6492:	12 00                	adc    al,BYTE PTR [rax]
    6494:	00 03                	add    BYTE PTR [rbx],al
    6496:	7a 09                	jp     64a1 <_end+0x489>
    6498:	03 89 0f 00 00 35    	add    ecx,DWORD PTR [rcx+0x3500000f]
    649e:	00 00                	add    BYTE PTR [rax],al
    64a0:	00 3c 10             	add    BYTE PTR [rax+rdx*1],bh
    64a3:	00 00                	add    BYTE PTR [rax],al
    64a5:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 10064ab <_end+0x1000493>
    64ab:	c5 21 00             	(bad)
    64ae:	00 00                	add    BYTE PTR [rax],al
    64b0:	04 76                	add    al,0x76
    64b2:	2f                   	(bad)
    64b3:	00 00                	add    BYTE PTR [rax],al
    64b5:	03 90 09 03 5f 31    	add    edx,DWORD PTR [rax+0x315f0309]
    64bb:	00 00                	add    BYTE PTR [rax],al
    64bd:	c5 21 00             	(bad)
    64c0:	00 5c 10 00          	add    BYTE PTR [rax+rdx*1+0x0],bl
    64c4:	00 01                	add    BYTE PTR [rcx],al
    64c6:	c5 21 00             	(bad)
    64c9:	00 01                	add    BYTE PTR [rcx],al
    64cb:	c5 21 00             	(bad)
    64ce:	00 00                	add    BYTE PTR [rax],al
    64d0:	04 76                	add    al,0x76
    64d2:	2f                   	(bad)
    64d3:	00 00                	add    BYTE PTR [rax],al
    64d5:	03 8c 09 03 9a 32 00 	add    ecx,DWORD PTR [rcx+rcx*1+0x329a03]
    64dc:	00 35 00 00 00 7c    	add    BYTE PTR [rip+0x7c000000],dh        # 7c0064e2 <_end+0x7c0004ca>
    64e2:	10 00                	adc    BYTE PTR [rax],al
    64e4:	00 01                	add    BYTE PTR [rcx],al
    64e6:	35 00 00 00 01       	xor    eax,0x1000000
    64eb:	35 00 00 00 00       	xor    eax,0x0
    64f0:	04 2f                	add    al,0x2f
    64f2:	24 00                	and    al,0x0
    64f4:	00 03                	add    BYTE PTR [rbx],al
    64f6:	9a                   	(bad)
    64f7:	09 03                	or     DWORD PTR [rbx],eax
    64f9:	0d 17 00 00 c5       	or     eax,0xc5000017
    64fe:	21 00                	and    DWORD PTR [rax],eax
    6500:	00 a1 10 00 00 01    	add    BYTE PTR [rcx+0x1000010],ah
    6506:	c5 21 00             	(bad)
    6509:	00 01                	add    BYTE PTR [rcx],al
    650b:	c5 21 00             	(bad)
    650e:	00 01                	add    BYTE PTR [rcx],al
    6510:	ba 25 00 00 00       	mov    edx,0x25
    6515:	04 2f                	add    al,0x2f
    6517:	24 00                	and    al,0x0
    6519:	00 03                	add    BYTE PTR [rbx],al
    651b:	96                   	xchg   esi,eax
    651c:	09 03                	or     DWORD PTR [rbx],eax
    651e:	5f                   	pop    rdi
    651f:	34 00                	xor    al,0x0
    6521:	00 35 00 00 00 c6    	add    BYTE PTR [rip+0xffffffffc6000000],dh        # ffffffffc6006527 <_end+0xffffffffc600050f>
    6527:	10 00                	adc    BYTE PTR [rax],al
    6529:	00 01                	add    BYTE PTR [rcx],al
    652b:	35 00 00 00 01       	xor    eax,0x1000000
    6530:	35 00 00 00 01       	xor    eax,0x1000000
    6535:	ba 25 00 00 00       	mov    edx,0x25
    653a:	04 86                	add    al,0x86
    653c:	34 00                	xor    al,0x0
    653e:	00 03                	add    BYTE PTR [rbx],al
    6540:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    6541:	09 03                	or     DWORD PTR [rbx],eax
    6543:	51                   	push   rcx
    6544:	2f                   	(bad)
    6545:	00 00                	add    BYTE PTR [rax],al
    6547:	c5 21 00             	(bad)
    654a:	00 e1                	add    cl,ah
    654c:	10 00                	adc    BYTE PTR [rax],al
    654e:	00 01                	add    BYTE PTR [rcx],al
    6550:	c5 21 00             	(bad)
    6553:	00 00                	add    BYTE PTR [rax],al
    6555:	04 86                	add    al,0x86
    6557:	34 00                	xor    al,0x0
    6559:	00 03                	add    BYTE PTR [rbx],al
    655b:	a0 09 03 5c 2f 00 00 	movabs al,ds:0x3500002f5c0309
    6562:	35 00 
    6564:	00 00                	add    BYTE PTR [rax],al
    6566:	fc                   	cld
    6567:	10 00                	adc    BYTE PTR [rax],al
    6569:	00 01                	add    BYTE PTR [rcx],al
    656b:	35 00 00 00 00       	xor    eax,0x0
    6570:	04 fe                	add    al,0xfe
    6572:	23 00                	and    eax,DWORD PTR [rax]
    6574:	00 03                	add    BYTE PTR [rbx],al
    6576:	b6 09                	mov    dh,0x9
    6578:	03 ae 1e 00 00 c5    	add    ebp,DWORD PTR [rsi-0x3affffe2]
    657e:	21 00                	and    DWORD PTR [rax],eax
    6580:	00 17                	add    BYTE PTR [rdi],dl
    6582:	11 00                	adc    DWORD PTR [rax],eax
    6584:	00 01                	add    BYTE PTR [rcx],al
    6586:	c5 21 00             	(bad)
    6589:	00 00                	add    BYTE PTR [rax],al
    658b:	04 fe                	add    al,0xfe
    658d:	23 00                	and    eax,DWORD PTR [rax]
    658f:	00 03                	add    BYTE PTR [rbx],al
    6591:	b2 09                	mov    dl,0x9
    6593:	03 ba 1e 00 00 35    	add    edi,DWORD PTR [rdx+0x3500001e]
    6599:	00 00                	add    BYTE PTR [rax],al
    659b:	00 32                	add    BYTE PTR [rdx],dh
    659d:	11 00                	adc    DWORD PTR [rax],eax
    659f:	00 01                	add    BYTE PTR [rcx],al
    65a1:	35 00 00 00 00       	xor    eax,0x0
    65a6:	04 c7                	add    al,0xc7
    65a8:	25 00 00 03 c8       	and    eax,0xc8030000
    65ad:	09 03                	or     DWORD PTR [rbx],eax
    65af:	56                   	push   rsi
    65b0:	1a 00                	sbb    al,BYTE PTR [rax]
    65b2:	00 c5                	add    ch,al
    65b4:	21 00                	and    DWORD PTR [rax],eax
    65b6:	00 52 11             	add    BYTE PTR [rdx+0x11],dl
    65b9:	00 00                	add    BYTE PTR [rax],al
    65bb:	01 c5                	add    ebp,eax
    65bd:	21 00                	and    DWORD PTR [rax],eax
    65bf:	00 01                	add    BYTE PTR [rcx],al
    65c1:	b2 21                	mov    dl,0x21
    65c3:	00 00                	add    BYTE PTR [rax],al
    65c5:	00 04 c7             	add    BYTE PTR [rdi+rax*8],al
    65c8:	25 00 00 03 c4       	and    eax,0xc4030000
    65cd:	09 03                	or     DWORD PTR [rbx],eax
    65cf:	21 1c 00             	and    DWORD PTR [rax+rax*1],ebx
    65d2:	00 35 00 00 00 72    	add    BYTE PTR [rip+0x72000000],dh        # 720065d8 <_end+0x720005c0>
    65d8:	11 00                	adc    DWORD PTR [rax],eax
    65da:	00 01                	add    BYTE PTR [rcx],al
    65dc:	35 00 00 00 01       	xor    eax,0x1000000
    65e1:	b2 21                	mov    dl,0x21
    65e3:	00 00                	add    BYTE PTR [rax],al
    65e5:	00 04 ca             	add    BYTE PTR [rdx+rcx*8],al
    65e8:	2e 00 00             	cs add BYTE PTR [rax],al
    65eb:	03 da                	add    ebx,edx
    65ed:	09 03                	or     DWORD PTR [rbx],eax
    65ef:	6c                   	ins    BYTE PTR es:[rdi],dx
    65f0:	10 00                	adc    BYTE PTR [rax],al
    65f2:	00 c5                	add    ch,al
    65f4:	21 00                	and    DWORD PTR [rax],eax
    65f6:	00 92 11 00 00 01    	add    BYTE PTR [rdx+0x1000011],dl
    65fc:	c5 21 00             	(bad)
    65ff:	00 01                	add    BYTE PTR [rcx],al
    6601:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6602:	21 00                	and    DWORD PTR [rax],eax
    6604:	00 00                	add    BYTE PTR [rax],al
    6606:	04 ca                	add    al,0xca
    6608:	2e 00 00             	cs add BYTE PTR [rax],al
    660b:	03 d6                	add    edx,esi
    660d:	09 03                	or     DWORD PTR [rbx],eax
    660f:	3a 0c 00             	cmp    cl,BYTE PTR [rax+rax*1]
    6612:	00 35 00 00 00 b2    	add    BYTE PTR [rip+0xffffffffb2000000],dh        # ffffffffb2006618 <_end+0xffffffffb2000600>
    6618:	11 00                	adc    DWORD PTR [rax],eax
    661a:	00 01                	add    BYTE PTR [rcx],al
    661c:	35 00 00 00 01       	xor    eax,0x1000000
    6621:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6622:	21 00                	and    DWORD PTR [rax],eax
    6624:	00 00                	add    BYTE PTR [rax],al
    6626:	04 e7                	add    al,0xe7
    6628:	1b 00                	sbb    eax,DWORD PTR [rax]
    662a:	00 03                	add    BYTE PTR [rbx],al
    662c:	ec                   	in     al,dx
    662d:	09 03                	or     DWORD PTR [rbx],eax
    662f:	8e 1f                	mov    ds,WORD PTR [rdi]
    6631:	00 00                	add    BYTE PTR [rax],al
    6633:	c5 21 00             	(bad)
    6636:	00 cd                	add    ch,cl
    6638:	11 00                	adc    DWORD PTR [rax],eax
    663a:	00 01                	add    BYTE PTR [rcx],al
    663c:	c5 21 00             	(bad)
    663f:	00 00                	add    BYTE PTR [rax],al
    6641:	04 e7                	add    al,0xe7
    6643:	1b 00                	sbb    eax,DWORD PTR [rax]
    6645:	00 03                	add    BYTE PTR [rbx],al
    6647:	e8 09 03 9b 1f       	call   1f9b6955 <_end+0x1f9b093d>
    664c:	00 00                	add    BYTE PTR [rax],al
    664e:	35 00 00 00 e8       	xor    eax,0xe8000000
    6653:	11 00                	adc    DWORD PTR [rax],eax
    6655:	00 01                	add    BYTE PTR [rcx],al
    6657:	35 00 00 00 00       	xor    eax,0x0
    665c:	04 ac                	add    al,0xac
    665e:	2a 00                	sub    al,BYTE PTR [rax]
    6660:	00 03                	add    BYTE PTR [rbx],al
    6662:	fe 09                	dec    BYTE PTR [rcx]
    6664:	03 be 21 00 00 c5    	add    edi,DWORD PTR [rsi-0x3affffdf]
    666a:	21 00                	and    DWORD PTR [rax],eax
    666c:	00 03                	add    BYTE PTR [rbx],al
    666e:	12 00                	adc    al,BYTE PTR [rax]
    6670:	00 01                	add    BYTE PTR [rcx],al
    6672:	c5 21 00             	(bad)
    6675:	00 00                	add    BYTE PTR [rax],al
    6677:	04 ac                	add    al,0xac
    6679:	2a 00                	sub    al,BYTE PTR [rax]
    667b:	00 03                	add    BYTE PTR [rbx],al
    667d:	fa                   	cli
    667e:	09 03                	or     DWORD PTR [rbx],eax
    6680:	ca 21 00             	retf   0x21
    6683:	00 35 00 00 00 1e    	add    BYTE PTR [rip+0x1e000000],dh        # 1e006689 <_end+0x1e000671>
    6689:	12 00                	adc    al,BYTE PTR [rax]
    668b:	00 01                	add    BYTE PTR [rcx],al
    668d:	35 00 00 00 00       	xor    eax,0x0
    6692:	02 08                	add    cl,BYTE PTR [rax]
    6694:	83 0b 61             	or     DWORD PTR [rbx],0x61
    6697:	23 00                	and    eax,DWORD PTR [rax]
    6699:	00 02                	add    BYTE PTR [rdx],al
    669b:	08 84 0b 94 23 00 00 	or     BYTE PTR [rbx+rcx*1+0x2394],al
    66a2:	02 08                	add    cl,BYTE PTR [rax]
    66a4:	8a 0b                	mov    cl,BYTE PTR [rbx]
    66a6:	c2 2d 00             	ret    0x2d
    66a9:	00 02                	add    BYTE PTR [rdx],al
    66ab:	08 8d 0b df 2d 00    	or     BYTE PTR [rbp+0x2ddf0b],cl
    66b1:	00 02                	add    BYTE PTR [rdx],al
    66b3:	08 90 0b fa 2d 00    	or     BYTE PTR [rax+0x2dfa0b],dl
    66b9:	00 02                	add    BYTE PTR [rdx],al
    66bb:	08 91 0b 10 2e 00    	or     BYTE PTR [rcx+0x2e100b],dl
    66c1:	00 02                	add    BYTE PTR [rdx],al
    66c3:	08 92 0b 27 2e 00    	or     BYTE PTR [rdx+0x2e270b],dl
    66c9:	00 02                	add    BYTE PTR [rdx],al
    66cb:	08 93 0b 3e 2e 00    	or     BYTE PTR [rbx+0x2e3e0b],dl
    66d1:	00 02                	add    BYTE PTR [rdx],al
    66d3:	08 95 0b 68 2e 00    	or     BYTE PTR [rbp+0x2e680b],dl
    66d9:	00 02                	add    BYTE PTR [rdx],al
    66db:	08 98 0b 84 2e 00    	or     BYTE PTR [rax+0x2e840b],bl
    66e1:	00 02                	add    BYTE PTR [rdx],al
    66e3:	08 9a 0b 9b 2e 00    	or     BYTE PTR [rdx+0x2e9b0b],bl
    66e9:	00 02                	add    BYTE PTR [rdx],al
    66eb:	08 9d 0b b7 2e 00    	or     BYTE PTR [rbp+0x2eb70b],bl
    66f1:	00 02                	add    BYTE PTR [rdx],al
    66f3:	08 9e 0b d3 2e 00    	or     BYTE PTR [rsi+0x2ed30b],bl
    66f9:	00 02                	add    BYTE PTR [rdx],al
    66fb:	08 9f 0b f8 2e 00    	or     BYTE PTR [rdi+0x2ef80b],bl
    6701:	00 02                	add    BYTE PTR [rdx],al
    6703:	08 a1 0b 19 2f 00    	or     BYTE PTR [rcx+0x2f190b],ah
    6709:	00 02                	add    BYTE PTR [rdx],al
    670b:	08 a4 0b 3a 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2f3a],ah
    6712:	02 08                	add    cl,BYTE PTR [rax]
    6714:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    6715:	0b 4d 2f             	or     ecx,DWORD PTR [rbp+0x2f]
    6718:	00 00                	add    BYTE PTR [rax],al
    671a:	02 08                	add    cl,BYTE PTR [rax]
    671c:	a9 0b 5a 2f 00       	test   eax,0x2f5a0b
    6721:	00 02                	add    BYTE PTR [rdx],al
    6723:	08 aa 0b 6c 2f 00    	or     BYTE PTR [rdx+0x2f6c0b],ch
    6729:	00 02                	add    BYTE PTR [rdx],al
    672b:	08 ab 0b 8c 2f 00    	or     BYTE PTR [rbx+0x2f8c0b],ch
    6731:	00 02                	add    BYTE PTR [rdx],al
    6733:	08 ac 0b b0 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2fb0],ch
    673a:	02 08                	add    cl,BYTE PTR [rax]
    673c:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    673d:	0b d4                	or     edx,esp
    673f:	2f                   	(bad)
    6740:	00 00                	add    BYTE PTR [rax],al
    6742:	02 08                	add    cl,BYTE PTR [rax]
    6744:	af                   	scas   eax,DWORD PTR es:[rdi]
    6745:	0b eb                	or     ebp,ebx
    6747:	2f                   	(bad)
    6748:	00 00                	add    BYTE PTR [rax],al
    674a:	02 08                	add    cl,BYTE PTR [rax]
    674c:	b0 0b                	mov    al,0xb
    674e:	10 30                	adc    BYTE PTR [rax],dh
    6750:	00 00                	add    BYTE PTR [rax],al
    6752:	02 08                	add    cl,BYTE PTR [rax]
    6754:	f4                   	hlt
    6755:	16                   	(bad)
    6756:	c7                   	(bad)
    6757:	23 00                	and    eax,DWORD PTR [rax]
    6759:	00 02                	add    BYTE PTR [rdx],al
    675b:	08 f9                	or     cl,bh
    675d:	16                   	(bad)
    675e:	43 21 00             	rex.XB and DWORD PTR [r8],eax
    6761:	00 02                	add    BYTE PTR [rdx],al
    6763:	08 fa                	or     dl,bh
    6765:	16                   	(bad)
    6766:	2b 30                	sub    esi,DWORD PTR [rax]
    6768:	00 00                	add    BYTE PTR [rax],al
    676a:	02 08                	add    cl,BYTE PTR [rax]
    676c:	fc                   	cld
    676d:	16                   	(bad)
    676e:	47 30 00             	rex.RXB xor BYTE PTR [r8],r8b
    6771:	00 02                	add    BYTE PTR [rdx],al
    6773:	08 fd                	or     ch,bh
    6775:	16                   	(bad)
    6776:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6777:	30 00                	xor    BYTE PTR [rax],al
    6779:	00 02                	add    BYTE PTR [rdx],al
    677b:	08 fe                	or     dh,bh
    677d:	16                   	(bad)
    677e:	5e                   	pop    rsi
    677f:	30 00                	xor    BYTE PTR [rax],al
    6781:	00 02                	add    BYTE PTR [rdx],al
    6783:	08 ff                	or     bh,bh
    6785:	16                   	(bad)
    6786:	82                   	(bad)
    6787:	30 00                	xor    BYTE PTR [rax],al
    6789:	00 18                	add    BYTE PTR [rax],bl
    678b:	08 00                	or     BYTE PTR [rax],al
    678d:	01 16                	add    DWORD PTR [rsi],edx
    678f:	c1 30 00             	shl    DWORD PTR [rax],0x0
    6792:	00 1a                	add    BYTE PTR [rdx],bl
    6794:	64 69 76 00 08 b5 1e 	imul   esi,DWORD PTR fs:[rsi+0x0],0x11eb508
    679b:	01 
    679c:	00 00                	add    BYTE PTR [rax],al
    679e:	94                   	xchg   esp,eax
    679f:	23 00                	and    eax,DWORD PTR [rax]
    67a1:	00 3d 13 00 00 01    	add    BYTE PTR [rip+0x1000013],bh        # 10067ba <_end+0x10007a2>
    67a7:	b2 21                	mov    dl,0x21
    67a9:	00 00                	add    BYTE PTR [rax],al
    67ab:	01 b2 21 00 00 00    	add    DWORD PTR [rdx+0x21],esi
    67b1:	02 09                	add    cl,BYTE PTR [rcx]
    67b3:	40 0b 54 32 00       	rex or edx,DWORD PTR [rdx+rsi*1+0x0]
    67b8:	00 02                	add    BYTE PTR [rdx],al
    67ba:	09 8d 0b 48 32 00    	or     DWORD PTR [rbp+0x32480b],ecx
    67c0:	00 02                	add    BYTE PTR [rdx],al
    67c2:	09 8f 0b 65 32 00    	or     DWORD PTR [rdi+0x32650b],ecx
    67c8:	00 02                	add    BYTE PTR [rdx],al
    67ca:	09 90 0b 7c 32 00    	or     DWORD PTR [rax+0x327c0b],edx
    67d0:	00 02                	add    BYTE PTR [rdx],al
    67d2:	09 91 0b 98 32 00    	or     DWORD PTR [rcx+0x32980b],edx
    67d8:	00 02                	add    BYTE PTR [rdx],al
    67da:	09 92 0b b8 32 00    	or     DWORD PTR [rdx+0x32b80b],edx
    67e0:	00 02                	add    BYTE PTR [rdx],al
    67e2:	09 93 0b d4 32 00    	or     DWORD PTR [rbx+0x32d40b],edx
    67e8:	00 02                	add    BYTE PTR [rdx],al
    67ea:	09 94 0b f0 32 00 00 	or     DWORD PTR [rbx+rcx*1+0x32f0],edx
    67f1:	02 09                	add    cl,BYTE PTR [rcx]
    67f3:	95                   	xchg   ebp,eax
    67f4:	0b 0c 33             	or     ecx,DWORD PTR [rbx+rsi*1]
    67f7:	00 00                	add    BYTE PTR [rax],al
    67f9:	02 09                	add    cl,BYTE PTR [rcx]
    67fb:	96                   	xchg   esi,eax
    67fc:	0b 28                	or     ebp,DWORD PTR [rax]
    67fe:	33 00                	xor    eax,DWORD PTR [rax]
    6800:	00 02                	add    BYTE PTR [rdx],al
    6802:	09 97 0b 49 33 00    	or     DWORD PTR [rdi+0x33490b],edx
    6808:	00 02                	add    BYTE PTR [rdx],al
    680a:	09 98 0b 60 33 00    	or     DWORD PTR [rax+0x33600b],ebx
    6810:	00 02                	add    BYTE PTR [rdx],al
    6812:	09 99 0b 6d 33 00    	or     DWORD PTR [rcx+0x336d0b],ebx
    6818:	00 02                	add    BYTE PTR [rdx],al
    681a:	09 9a 0b 93 33 00    	or     DWORD PTR [rdx+0x33930b],ebx
    6820:	00 02                	add    BYTE PTR [rdx],al
    6822:	09 9b 0b b9 33 00    	or     DWORD PTR [rbx+0x33b90b],ebx
    6828:	00 02                	add    BYTE PTR [rdx],al
    682a:	09 9c 0b d5 33 00 00 	or     DWORD PTR [rbx+rcx*1+0x33d5],ebx
    6831:	02 09                	add    cl,BYTE PTR [rcx]
    6833:	9d                   	popf
    6834:	0b ff                	or     edi,edi
    6836:	33 00                	xor    eax,DWORD PTR [rax]
    6838:	00 02                	add    BYTE PTR [rdx],al
    683a:	09 9e 0b 1b 34 00    	or     DWORD PTR [rsi+0x341b0b],ebx
    6840:	00 02                	add    BYTE PTR [rdx],al
    6842:	09 a0 0b 32 34 00    	or     DWORD PTR [rax+0x34320b],esp
    6848:	00 02                	add    BYTE PTR [rdx],al
    684a:	09 a2 0b 53 34 00    	or     DWORD PTR [rdx+0x34530b],esp
    6850:	00 02                	add    BYTE PTR [rdx],al
    6852:	09 a3 0b 74 34 00    	or     DWORD PTR [rbx+0x34740b],esp
    6858:	00 02                	add    BYTE PTR [rdx],al
    685a:	09 a4 0b 90 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x3490],esp
    6861:	02 09                	add    cl,BYTE PTR [rcx]
    6863:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6864:	0b b5 34 00 00 02    	or     esi,DWORD PTR [rbp+0x2000034]
    686a:	09 a9 0b da 34 00    	or     DWORD PTR [rcx+0x34da0b],ebp
    6870:	00 02                	add    BYTE PTR [rdx],al
    6872:	09 ac 0b ff 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x34ff],ebp
    6879:	02 09                	add    cl,BYTE PTR [rcx]
    687b:	ae                   	scas   al,BYTE PTR es:[rdi]
    687c:	0b 24 35 00 00 02 09 	or     esp,DWORD PTR [rsi*1+0x9020000]
    6883:	b0 0b                	mov    al,0xb
    6885:	3f                   	(bad)
    6886:	35 00 00 02 09       	xor    eax,0x9020000
    688b:	b2 0b                	mov    dl,0xb
    688d:	5f                   	pop    rdi
    688e:	35 00 00 02 09       	xor    eax,0x9020000
    6893:	b3 0b                	mov    bl,0xb
    6895:	7f 35                	jg     68cc <_end+0x8b4>
    6897:	00 00                	add    BYTE PTR [rax],al
    6899:	02 09                	add    cl,BYTE PTR [rcx]
    689b:	b4 0b                	mov    ah,0xb
    689d:	9a                   	(bad)
    689e:	35 00 00 02 09       	xor    eax,0x9020000
    68a3:	b5 0b                	mov    ch,0xb
    68a5:	b5 35                	mov    ch,0x35
    68a7:	00 00                	add    BYTE PTR [rax],al
    68a9:	02 09                	add    cl,BYTE PTR [rcx]
    68ab:	b6 0b                	mov    dh,0xb
    68ad:	d0 35 00 00 02 09    	shl    BYTE PTR [rip+0x9020000],1        # 90268b3 <_end+0x902089b>
    68b3:	b7 0b                	mov    bh,0xb
    68b5:	eb 35                	jmp    68ec <_end+0x8d4>
    68b7:	00 00                	add    BYTE PTR [rax],al
    68b9:	02 09                	add    cl,BYTE PTR [rcx]
    68bb:	b8 0b 06 36 00       	mov    eax,0x36060b
    68c0:	00 02                	add    BYTE PTR [rdx],al
    68c2:	09 b9 0b d3 36 00    	or     DWORD PTR [rcx+0x36d30b],edi
    68c8:	00 02                	add    BYTE PTR [rdx],al
    68ca:	09 ba 0b e9 36 00    	or     DWORD PTR [rdx+0x36e90b],edi
    68d0:	00 02                	add    BYTE PTR [rdx],al
    68d2:	09 bb 0b 09 37 00    	or     DWORD PTR [rbx+0x37090b],edi
    68d8:	00 02                	add    BYTE PTR [rdx],al
    68da:	09 bc 0b 29 37 00 00 	or     DWORD PTR [rbx+rcx*1+0x3729],edi
    68e1:	02 09                	add    cl,BYTE PTR [rcx]
    68e3:	bd 0b 49 37 00       	mov    ebp,0x37490b
    68e8:	00 02                	add    BYTE PTR [rdx],al
    68ea:	09 be 0b 74 37 00    	or     DWORD PTR [rsi+0x37740b],edi
    68f0:	00 02                	add    BYTE PTR [rdx],al
    68f2:	09 bf 0b 8f 37 00    	or     DWORD PTR [rdi+0x378f0b],edi
    68f8:	00 02                	add    BYTE PTR [rdx],al
    68fa:	09 c1                	or     ecx,eax
    68fc:	0b b0 37 00 00 02    	or     esi,DWORD PTR [rax+0x2000037]
    6902:	09 c3                	or     ebx,eax
    6904:	0b cc                	or     ecx,esp
    6906:	37                   	(bad)
    6907:	00 00                	add    BYTE PTR [rax],al
    6909:	02 09                	add    cl,BYTE PTR [rcx]
    690b:	c4                   	(bad)
    690c:	0b ec                	or     ebp,esp
    690e:	37                   	(bad)
    690f:	00 00                	add    BYTE PTR [rax],al
    6911:	02 09                	add    cl,BYTE PTR [rcx]
    6913:	c5 0b 11             	(bad)
    6916:	38 00                	cmp    BYTE PTR [rax],al
    6918:	00 02                	add    BYTE PTR [rdx],al
    691a:	09 c6                	or     esi,eax
    691c:	0b 36                	or     esi,DWORD PTR [rsi]
    691e:	38 00                	cmp    BYTE PTR [rax],al
    6920:	00 02                	add    BYTE PTR [rdx],al
    6922:	09 c7                	or     edi,eax
    6924:	0b 56 38             	or     edx,DWORD PTR [rsi+0x38]
    6927:	00 00                	add    BYTE PTR [rax],al
    6929:	02 09                	add    cl,BYTE PTR [rcx]
    692b:	c8 0b 6d 38          	enter  0x6d0b,0x38
    692f:	00 00                	add    BYTE PTR [rax],al
    6931:	02 09                	add    cl,BYTE PTR [rcx]
    6933:	c9                   	leave
    6934:	0b 8e 38 00 00 02    	or     ecx,DWORD PTR [rsi+0x2000038]
    693a:	09 ca                	or     edx,ecx
    693c:	0b ae 38 00 00 02    	or     ebp,DWORD PTR [rsi+0x2000038]
    6942:	09 cb                	or     ebx,ecx
    6944:	0b ce                	or     ecx,esi
    6946:	38 00                	cmp    BYTE PTR [rax],al
    6948:	00 02                	add    BYTE PTR [rdx],al
    694a:	09 cc                	or     esp,ecx
    694c:	0b ee                	or     ebp,esi
    694e:	38 00                	cmp    BYTE PTR [rax],al
    6950:	00 02                	add    BYTE PTR [rdx],al
    6952:	09 cd                	or     ebp,ecx
    6954:	0b 05 39 00 00 02    	or     eax,DWORD PTR [rip+0x2000039]        # 2006993 <_end+0x200097b>
    695a:	09 ce                	or     esi,ecx
    695c:	0b 21                	or     esp,DWORD PTR [rcx]
    695e:	39 00                	cmp    DWORD PTR [rax],eax
    6960:	00 02                	add    BYTE PTR [rdx],al
    6962:	09 ce                	or     esi,ecx
    6964:	0b 40 39             	or     eax,DWORD PTR [rax+0x39]
    6967:	00 00                	add    BYTE PTR [rax],al
    6969:	02 09                	add    cl,BYTE PTR [rcx]
    696b:	cf                   	iret
    696c:	0b 5f 39             	or     ebx,DWORD PTR [rdi+0x39]
    696f:	00 00                	add    BYTE PTR [rax],al
    6971:	02 09                	add    cl,BYTE PTR [rcx]
    6973:	cf                   	iret
    6974:	0b 7e 39             	or     edi,DWORD PTR [rsi+0x39]
    6977:	00 00                	add    BYTE PTR [rax],al
    6979:	02 09                	add    cl,BYTE PTR [rcx]
    697b:	d0 0b                	ror    BYTE PTR [rbx],1
    697d:	9d                   	popf
    697e:	39 00                	cmp    DWORD PTR [rax],eax
    6980:	00 02                	add    BYTE PTR [rdx],al
    6982:	09 d0                	or     eax,edx
    6984:	0b bc 39 00 00 02 09 	or     edi,DWORD PTR [rcx+rdi*1+0x9020000]
    698b:	d1 0b                	ror    DWORD PTR [rbx],1
    698d:	db 39                	fstp   TBYTE PTR [rcx]
    698f:	00 00                	add    BYTE PTR [rax],al
    6991:	02 09                	add    cl,BYTE PTR [rcx]
    6993:	d1 0b                	ror    DWORD PTR [rbx],1
    6995:	fa                   	cli
    6996:	39 00                	cmp    DWORD PTR [rax],eax
    6998:	00 02                	add    BYTE PTR [rdx],al
    699a:	09 d2                	or     edx,edx
    699c:	0b 19                	or     ebx,DWORD PTR [rcx]
    699e:	3a 00                	cmp    al,BYTE PTR [rax]
    69a0:	00 02                	add    BYTE PTR [rdx],al
    69a2:	09 d2                	or     edx,edx
    69a4:	0b 3e                	or     edi,DWORD PTR [rsi]
    69a6:	3a 00                	cmp    al,BYTE PTR [rax]
    69a8:	00 18                	add    BYTE PTR [rax],bl
    69aa:	09 0b                	or     DWORD PTR [rbx],ecx
    69ac:	01 16                	add    DWORD PTR [rsi],edx
    69ae:	63 3a                	movsxd edi,DWORD PTR [rdx]
    69b0:	00 00                	add    BYTE PTR [rax],al
    69b2:	18 09                	sbb    BYTE PTR [rcx],cl
    69b4:	0c 01                	or     al,0x1
    69b6:	16                   	(bad)
    69b7:	7f 3a                	jg     69f3 <_end+0x9db>
    69b9:	00 00                	add    BYTE PTR [rax],al
    69bb:	18 09                	sbb    BYTE PTR [rcx],cl
    69bd:	0d 01 16 a4 3a       	or     eax,0x3aa41601
    69c2:	00 00                	add    BYTE PTR [rax],al
    69c4:	18 09                	sbb    BYTE PTR [rcx],cl
    69c6:	1b 01                	sbb    eax,DWORD PTR [rcx]
    69c8:	0e                   	(bad)
    69c9:	b0 37                	mov    al,0x37
    69cb:	00 00                	add    BYTE PTR [rax],al
    69cd:	18 09                	sbb    BYTE PTR [rcx],cl
    69cf:	1e                   	(bad)
    69d0:	01 0e                	add    DWORD PTR [rsi],ecx
    69d2:	b5 34                	mov    ch,0x34
    69d4:	00 00                	add    BYTE PTR [rax],al
    69d6:	18 09                	sbb    BYTE PTR [rcx],cl
    69d8:	21 01                	and    DWORD PTR [rcx],eax
    69da:	0e                   	(bad)
    69db:	ff 34 00             	push   QWORD PTR [rax+rax*1]
    69de:	00 18                	add    BYTE PTR [rax],bl
    69e0:	09 24 01             	or     DWORD PTR [rcx+rax*1],esp
    69e3:	0e                   	(bad)
    69e4:	3f                   	(bad)
    69e5:	35 00 00 18 09       	xor    eax,0x9180000
    69ea:	28 01                	sub    BYTE PTR [rcx],al
    69ec:	0e                   	(bad)
    69ed:	63 3a                	movsxd edi,DWORD PTR [rdx]
    69ef:	00 00                	add    BYTE PTR [rax],al
    69f1:	18 09                	sbb    BYTE PTR [rcx],cl
    69f3:	29 01                	sub    DWORD PTR [rcx],eax
    69f5:	0e                   	(bad)
    69f6:	7f 3a                	jg     6a32 <_end+0xa1a>
    69f8:	00 00                	add    BYTE PTR [rax],al
    69fa:	18 09                	sbb    BYTE PTR [rcx],cl
    69fc:	2a 01                	sub    al,BYTE PTR [rcx]
    69fe:	0e                   	(bad)
    69ff:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    6a00:	3a 00                	cmp    al,BYTE PTR [rax]
    6a02:	00 02                	add    BYTE PTR [rdx],al
    6a04:	0a 35 0b c9 3a 00    	or     dh,BYTE PTR [rip+0x3ac90b]        # 3b3315 <_end+0x3ad2fd>
    6a0a:	00 02                	add    BYTE PTR [rdx],al
    6a0c:	0a 36                	or     dh,BYTE PTR [rsi]
    6a0e:	0b 0f                	or     ecx,DWORD PTR [rdi]
    6a10:	3c 00                	cmp    al,0x0
    6a12:	00 02                	add    BYTE PTR [rdx],al
    6a14:	0a 37                	or     dh,BYTE PTR [rdi]
    6a16:	0b 2a                	or     ebp,DWORD PTR [rdx]
    6a18:	3c 00                	cmp    al,0x0
    6a1a:	00 02                	add    BYTE PTR [rdx],al
    6a1c:	0b 62 0b             	or     esp,DWORD PTR [rdx+0xb]
    6a1f:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    6a22:	00 02                	add    BYTE PTR [rdx],al
    6a24:	0b 63 0b             	or     esp,DWORD PTR [rbx+0xb]
    6a27:	7d 2c                	jge    6a55 <_end+0xa3d>
    6a29:	00 00                	add    BYTE PTR [rax],al
    6a2b:	02 0b                	add    cl,BYTE PTR [rbx]
    6a2d:	65 0b 3b             	or     edi,DWORD PTR gs:[rbx]
    6a30:	3c 00                	cmp    al,0x0
    6a32:	00 02                	add    BYTE PTR [rdx],al
    6a34:	0b 66 0b             	or     esp,DWORD PTR [rsi+0xb]
    6a37:	4d 3c 00             	rex.WRB cmp al,0x0
    6a3a:	00 02                	add    BYTE PTR [rdx],al
    6a3c:	0b 67 0b             	or     esp,DWORD PTR [rdi+0xb]
    6a3f:	63 3c 00             	movsxd edi,DWORD PTR [rax+rax*1]
    6a42:	00 02                	add    BYTE PTR [rdx],al
    6a44:	0b 68 0b             	or     ebp,DWORD PTR [rax+0xb]
    6a47:	7a 3c                	jp     6a85 <_end+0xa6d>
    6a49:	00 00                	add    BYTE PTR [rax],al
    6a4b:	02 0b                	add    cl,BYTE PTR [rbx]
    6a4d:	69 0b 91 3c 00 00    	imul   ecx,DWORD PTR [rbx],0x3c91
    6a53:	02 0b                	add    cl,BYTE PTR [rbx]
    6a55:	6a 0b                	push   0xb
    6a57:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    6a58:	3c 00                	cmp    al,0x0
    6a5a:	00 02                	add    BYTE PTR [rdx],al
    6a5c:	0b 6b 0b             	or     ebp,DWORD PTR [rbx+0xb]
    6a5f:	be 3c 00 00 02       	mov    esi,0x200003c
    6a64:	0b 6c 0b df          	or     ebp,DWORD PTR [rbx+rcx*1-0x21]
    6a68:	3c 00                	cmp    al,0x0
    6a6a:	00 02                	add    BYTE PTR [rdx],al
    6a6c:	0b 6d 0b             	or     ebp,DWORD PTR [rbp+0xb]
    6a6f:	ff                   	(bad)
    6a70:	3c 00                	cmp    al,0x0
    6a72:	00 02                	add    BYTE PTR [rdx],al
    6a74:	0b 71 0b             	or     esi,DWORD PTR [rcx+0xb]
    6a77:	1b 3d 00 00 02 0b    	sbb    edi,DWORD PTR [rip+0xb020000]        # b026a7d <_end+0xb020a65>
    6a7d:	72 0b                	jb     6a8a <_end+0xa72>
    6a7f:	40 3d 00 00 02 0b    	rex cmp eax,0xb020000
    6a85:	74 0b                	je     6a92 <_end+0xa7a>
    6a87:	61                   	(bad)
    6a88:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6a8d:	75 0b                	jne    6a9a <_end+0xa82>
    6a8f:	82                   	(bad)
    6a90:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6a95:	76 0b                	jbe    6aa2 <_end+0xa8a>
    6a97:	a3 3d 00 00 02 0b 78 	movabs ds:0xba0b780b0200003d,eax
    6a9e:	0b ba 
    6aa0:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6aa5:	79 0b                	jns    6ab2 <_end+0xa9a>
    6aa7:	d1 3d 00 00 02 0b    	sar    DWORD PTR [rip+0xb020000],1        # b026aad <_end+0xb020a95>
    6aad:	7e 0b                	jle    6aba <_end+0xaa2>
    6aaf:	dd 3d 00 00 02 0b    	fnstsw WORD PTR [rip+0xb020000]        # b026ab5 <_end+0xb020a9d>
    6ab5:	83 0b ef             	or     DWORD PTR [rbx],0xffffffef
    6ab8:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6abd:	84 0b                	test   BYTE PTR [rbx],cl
    6abf:	05 3e 00 00 02       	add    eax,0x200003e
    6ac4:	0b 85 0b 20 3e 00    	or     eax,DWORD PTR [rbp+0x3e200b]
    6aca:	00 02                	add    BYTE PTR [rdx],al
    6acc:	0b 87 0b 32 3e 00    	or     eax,DWORD PTR [rdi+0x3e320b]
    6ad2:	00 02                	add    BYTE PTR [rdx],al
    6ad4:	0b 88 0b 49 3e 00    	or     ecx,DWORD PTR [rax+0x3e490b]
    6ada:	00 02                	add    BYTE PTR [rdx],al
    6adc:	0b 8b 0b 6f 3e 00    	or     ecx,DWORD PTR [rbx+0x3e6f0b]
    6ae2:	00 02                	add    BYTE PTR [rdx],al
    6ae4:	0b 8d 0b 7b 3e 00    	or     ecx,DWORD PTR [rbp+0x3e7b0b]
    6aea:	00 02                	add    BYTE PTR [rdx],al
    6aec:	0b 8f 0b 91 3e 00    	or     ecx,DWORD PTR [rdi+0x3e910b]
    6af2:	00 50 4c             	add    BYTE PTR [rax+0x4c],dl
    6af5:	2a 00                	sub    al,BYTE PTR [rax]
    6af7:	00 11                	add    BYTE PTR [rcx],dl
    6af9:	55                   	push   rbp
    6afa:	01 41 02             	add    DWORD PTR [rcx+0x2],eax
    6afd:	0c 3a                	or     al,0x3a
    6aff:	0b 11                	or     edx,DWORD PTR [rcx]
    6b01:	32 00                	xor    al,BYTE PTR [rax]
    6b03:	00 68 70             	add    BYTE PTR [rax+0x70],ch
    6b06:	6d                   	ins    DWORD PTR es:[rdi],dx
    6b07:	72 00                	jb     6b09 <_end+0xaf1>
    6b09:	3d 35 0b 02 0d       	cmp    eax,0xd020b35
    6b0e:	33 0b                	xor    ecx,DWORD PTR [rbx]
    6b10:	fa                   	cli
    6b11:	23 00                	and    eax,DWORD PTR [rax]
    6b13:	00 02                	add    BYTE PTR [rdx],al
    6b15:	0d 34 0b 06 24       	or     eax,0x24060b34
    6b1a:	00 00                	add    BYTE PTR [rax],al
    6b1c:	02 0d 35 0b 12 24    	add    cl,BYTE PTR [rip+0x24120b35]        # 24127657 <_end+0x2412163f>
    6b22:	00 00                	add    BYTE PTR [rax],al
    6b24:	02 0d 36 0b 1e 24    	add    cl,BYTE PTR [rip+0x241e0b36]        # 241e7660 <_end+0x241e1648>
    6b2a:	00 00                	add    BYTE PTR [rax],al
    6b2c:	02 0d 38 0b 2d 2d    	add    cl,BYTE PTR [rip+0x2d2d0b38]        # 2d2d766a <_end+0x2d2d1652>
    6b32:	00 00                	add    BYTE PTR [rax],al
    6b34:	02 0d 39 0b 39 2d    	add    cl,BYTE PTR [rip+0x2d390b39]        # 2d397673 <_end+0x2d39165b>
    6b3a:	00 00                	add    BYTE PTR [rax],al
    6b3c:	02 0d 3a 0b 45 2d    	add    cl,BYTE PTR [rip+0x2d450b3a]        # 2d45767c <_end+0x2d451664>
    6b42:	00 00                	add    BYTE PTR [rax],al
    6b44:	02 0d 3b 0b 51 2d    	add    cl,BYTE PTR [rip+0x2d510b3b]        # 2d517685 <_end+0x2d51166d>
    6b4a:	00 00                	add    BYTE PTR [rax],al
    6b4c:	02 0d 3d 0b cd 2c    	add    cl,BYTE PTR [rip+0x2ccd0b3d]        # 2ccd768f <_end+0x2ccd1677>
    6b52:	00 00                	add    BYTE PTR [rax],al
    6b54:	02 0d 3e 0b d9 2c    	add    cl,BYTE PTR [rip+0x2cd90b3e]        # 2cd97698 <_end+0x2cd91680>
    6b5a:	00 00                	add    BYTE PTR [rax],al
    6b5c:	02 0d 3f 0b e5 2c    	add    cl,BYTE PTR [rip+0x2ce50b3f]        # 2ce576a1 <_end+0x2ce51689>
    6b62:	00 00                	add    BYTE PTR [rax],al
    6b64:	02 0d 40 0b f1 2c    	add    cl,BYTE PTR [rip+0x2cf10b40]        # 2cf176aa <_end+0x2cf11692>
    6b6a:	00 00                	add    BYTE PTR [rax],al
    6b6c:	02 0d 42 0b a5 2d    	add    cl,BYTE PTR [rip+0x2da50b42]        # 2da576b4 <_end+0x2da5169c>
    6b72:	00 00                	add    BYTE PTR [rax],al
    6b74:	02 0d 43 0b 8d 2d    	add    cl,BYTE PTR [rip+0x2d8d0b43]        # 2d8d76bd <_end+0x2d8d16a5>
    6b7a:	00 00                	add    BYTE PTR [rax],al
    6b7c:	02 0d 45 0b 98 2c    	add    cl,BYTE PTR [rip+0x2c980b45]        # 2c9876c7 <_end+0x2c9816af>
    6b82:	00 00                	add    BYTE PTR [rax],al
    6b84:	02 0d 46 0b a4 2c    	add    cl,BYTE PTR [rip+0x2ca40b46]        # 2ca476d0 <_end+0x2ca416b8>
    6b8a:	00 00                	add    BYTE PTR [rax],al
    6b8c:	02 0d 47 0b b0 2c    	add    cl,BYTE PTR [rip+0x2cb00b47]        # 2cb076d9 <_end+0x2cb016c1>
    6b92:	00 00                	add    BYTE PTR [rax],al
    6b94:	02 0d 48 0b c1 2c    	add    cl,BYTE PTR [rip+0x2cc10b48]        # 2cc176e2 <_end+0x2cc116ca>
    6b9a:	00 00                	add    BYTE PTR [rax],al
    6b9c:	02 0d 4a 0b 5d 2d    	add    cl,BYTE PTR [rip+0x2d5d0b4a]        # 2d5d76ec <_end+0x2d5d16d4>
    6ba2:	00 00                	add    BYTE PTR [rax],al
    6ba4:	02 0d 4b 0b 69 2d    	add    cl,BYTE PTR [rip+0x2d690b4b]        # 2d6976f5 <_end+0x2d6916dd>
    6baa:	00 00                	add    BYTE PTR [rax],al
    6bac:	02 0d 4c 0b 75 2d    	add    cl,BYTE PTR [rip+0x2d750b4c]        # 2d7576fe <_end+0x2d7516e6>
    6bb2:	00 00                	add    BYTE PTR [rax],al
    6bb4:	02 0d 4d 0b 81 2d    	add    cl,BYTE PTR [rip+0x2d810b4d]        # 2d817707 <_end+0x2d8116ef>
    6bba:	00 00                	add    BYTE PTR [rax],al
    6bbc:	02 0d 4f 0b fd 2c    	add    cl,BYTE PTR [rip+0x2cfd0b4f]        # 2cfd7711 <_end+0x2cfd16f9>
    6bc2:	00 00                	add    BYTE PTR [rax],al
    6bc4:	02 0d 50 0b 09 2d    	add    cl,BYTE PTR [rip+0x2d090b50]        # 2d09771a <_end+0x2d091702>
    6bca:	00 00                	add    BYTE PTR [rax],al
    6bcc:	02 0d 51 0b 15 2d    	add    cl,BYTE PTR [rip+0x2d150b51]        # 2d157723 <_end+0x2d15170b>
    6bd2:	00 00                	add    BYTE PTR [rax],al
    6bd4:	02 0d 52 0b 21 2d    	add    cl,BYTE PTR [rip+0x2d210b52]        # 2d21772c <_end+0x2d211714>
    6bda:	00 00                	add    BYTE PTR [rax],al
    6bdc:	02 0d 54 0b b6 2d    	add    cl,BYTE PTR [rip+0x2db60b54]        # 2db67736 <_end+0x2db6171e>
    6be2:	00 00                	add    BYTE PTR [rax],al
    6be4:	02 0d 55 0b 99 2d    	add    cl,BYTE PTR [rip+0x2d990b55]        # 2d99773f <_end+0x2d991727>
    6bea:	00 00                	add    BYTE PTR [rax],al
    6bec:	33 e5                	xor    esp,ebp
    6bee:	32 00                	xor    al,BYTE PTR [rax]
    6bf0:	00 05 91 0d a0 17    	add    BYTE PTR [rip+0x17a00d91],al        # 17a07987 <_end+0x17a0196f>
    6bf6:	00 00                	add    BYTE PTR [rax],al
    6bf8:	3d 9c 19 00 00       	cmp    eax,0x199c
    6bfd:	f1                   	int1
    6bfe:	20 00                	and    BYTE PTR [rax],al
    6c00:	00 3d 9c 19 00 00    	add    BYTE PTR [rip+0x199c],bh        # 85a2 <_end+0x258a>
    6c06:	f1                   	int1
    6c07:	20 00                	and    BYTE PTR [rax],al
    6c09:	00 3d 9c 19 00 00    	add    BYTE PTR [rip+0x199c],bh        # 85ab <_end+0x2593>
    6c0f:	f1                   	int1
    6c10:	20 00                	and    BYTE PTR [rax],al
    6c12:	00 00                	add    BYTE PTR [rax],al
    6c14:	02 0f                	add    cl,BYTE PTR [rdi]
    6c16:	3c 0b                	cmp    al,0xb
    6c18:	dd 23                	frstor [rbx]
    6c1a:	00 00                	add    BYTE PTR [rax],al
    6c1c:	02 0f                	add    cl,BYTE PTR [rdi]
    6c1e:	3d 0b e9 23 00       	cmp    eax,0x23e90b
    6c23:	00 02                	add    BYTE PTR [rdx],al
    6c25:	0f 3e                	(bad)
    6c27:	0b 31                	or     esi,DWORD PTR [rcx]
    6c29:	36 00 00             	ss add BYTE PTR [rax],al
    6c2c:	02 0f                	add    cl,BYTE PTR [rdi]
    6c2e:	40 0b d1             	rex or edx,ecx
    6c31:	3e 00 00             	ds add BYTE PTR [rax],al
    6c34:	02 0f                	add    cl,BYTE PTR [rdi]
    6c36:	41 0b dd             	or     ebx,r13d
    6c39:	3e 00 00             	ds add BYTE PTR [rax],al
    6c3c:	02 0f                	add    cl,BYTE PTR [rdi]
    6c3e:	42 0b f8             	rex.X or edi,eax
    6c41:	3e 00 00             	ds add BYTE PTR [rax],al
    6c44:	02 0f                	add    cl,BYTE PTR [rdi]
    6c46:	43 0b 13             	rex.XB or edx,DWORD PTR [r11]
    6c49:	3f                   	(bad)
    6c4a:	00 00                	add    BYTE PTR [rax],al
    6c4c:	02 0f                	add    cl,BYTE PTR [rdi]
    6c4e:	44 0b 2e             	or     r13d,DWORD PTR [rsi]
    6c51:	3f                   	(bad)
    6c52:	00 00                	add    BYTE PTR [rax],al
    6c54:	02 0f                	add    cl,BYTE PTR [rdi]
    6c56:	45 0b 44 3f 00       	or     r8d,DWORD PTR [r15+rdi*1+0x0]
    6c5b:	00 02                	add    BYTE PTR [rdx],al
    6c5d:	0f 46 0b             	cmovbe ecx,DWORD PTR [rbx]
    6c60:	5f                   	pop    rdi
    6c61:	3f                   	(bad)
    6c62:	00 00                	add    BYTE PTR [rax],al
    6c64:	02 0f                	add    cl,BYTE PTR [rdi]
    6c66:	47 0b 75 3f          	rex.RXB or r14d,DWORD PTR [r13+0x3f]
    6c6a:	00 00                	add    BYTE PTR [rax],al
    6c6c:	02 0f                	add    cl,BYTE PTR [rdi]
    6c6e:	4f 0b 2a             	rex.WRXB or r13,QWORD PTR [r10]
    6c71:	24 00                	and    al,0x0
    6c73:	00 02                	add    BYTE PTR [rdx],al
    6c75:	0f                   	movmskps ecx,(bad)
    6c76:	50                   	push   rax
    6c77:	0b 8b 3f 00 00 33    	or     ecx,DWORD PTR [rbx+0x3300003f]
    6c7d:	91                   	xchg   ecx,eax
    6c7e:	13 00                	adc    eax,DWORD PTR [rax]
    6c80:	00 04 37             	add    BYTE PTR [rdi+rsi*1],al
    6c83:	0d 94 1f 00 00       	or     eax,0x1f94
    6c88:	3e 09 2f             	ds or  DWORD PTR [rdi],ebp
    6c8b:	00 00                	add    BYTE PTR [rax],al
    6c8d:	ff 01                	inc    DWORD PTR [rcx]
    6c8f:	94                   	xchg   esp,eax
    6c90:	1a 00                	sbb    al,BYTE PTR [rax]
    6c92:	00 04 7e             	add    BYTE PTR [rsi+rdi*2],al
    6c95:	0e                   	(bad)
    6c96:	00 00                	add    BYTE PTR [rax],al
    6c98:	04 0b                	add    al,0xb
    6c9a:	02 02                	add    al,BYTE PTR [rdx]
    6c9c:	92                   	xchg   edx,eax
    6c9d:	2b 00                	sub    eax,DWORD PTR [rax]
    6c9f:	00 a5 2d 00 00 3f    	add    BYTE PTR [rbp+0x3f00002d],ah
    6ca5:	18 00                	sbb    BYTE PTR [rax],al
    6ca7:	00 01                	add    BYTE PTR [rcx],al
    6ca9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6caa:	2d 00 00 01 a5       	sub    eax,0xa5010000
    6caf:	2d 00 00 00 2b       	sub    eax,0x2b000000
    6cb4:	c5 0d 00             	(bad)
    6cb7:	00 34 02             	add    BYTE PTR [rdx+rax*1],dh
    6cba:	0c 1b                	or     al,0x1b
    6cbc:	18 00                	sbb    BYTE PTR [rax],al
    6cbe:	00 53 18             	add    BYTE PTR [rbx+0x18],dl
    6cc1:	00 00                	add    BYTE PTR [rax],al
    6cc3:	59                   	pop    rcx
    6cc4:	18 00                	sbb    BYTE PTR [rax],al
    6cc6:	00 10                	add    BYTE PTR [rax],dl
    6cc8:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6cc9:	3f                   	(bad)
    6cca:	00 00                	add    BYTE PTR [rax],al
    6ccc:	00 2b                	add    BYTE PTR [rbx],ch
    6cce:	c5 0d 00             	(bad)
    6cd1:	00 36                	add    BYTE PTR [rsi],dh
    6cd3:	02 02                	add    al,BYTE PTR [rdx]
    6cd5:	48 1b 00             	sbb    rax,QWORD PTR [rax]
    6cd8:	00 6d 18             	add    BYTE PTR [rbp+0x18],ch
    6cdb:	00 00                	add    BYTE PTR [rax],al
    6cdd:	78 18                	js     6cf7 <_end+0xcdf>
    6cdf:	00 00                	add    BYTE PTR [rax],al
    6ce1:	10 ac 3f 00 00 01 b6 	adc    BYTE PTR [rdi+rdi*1-0x49ff0000],ch
    6ce8:	3f                   	(bad)
    6ce9:	00 00                	add    BYTE PTR [rax],al
    6ceb:	00 2b                	add    BYTE PTR [rbx],ch
    6ced:	d9 0d 00 00 48 02    	(bad)  [rip+0x2480000]        # 2486cf3 <_end+0x2480cdb>
    6cf3:	02 04 13             	add    al,BYTE PTR [rbx+rdx*1]
    6cf6:	00 00                	add    BYTE PTR [rax],al
    6cf8:	8c 18                	mov    WORD PTR [rax],ds
    6cfa:	00 00                	add    BYTE PTR [rax],al
    6cfc:	97                   	xchg   edi,eax
    6cfd:	18 00                	sbb    BYTE PTR [rax],al
    6cff:	00 10                	add    BYTE PTR [rax],dl
    6d01:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6d02:	3f                   	(bad)
    6d03:	00 00                	add    BYTE PTR [rax],al
    6d05:	10 a6 21 00 00 00    	adc    BYTE PTR [rsi+0x21],ah
    6d0b:	51                   	push   rcx
    6d0c:	74 15                	je     6d23 <_end+0xd0b>
    6d0e:	00 00                	add    BYTE PTR [rax],al
    6d10:	01 33                	add    DWORD PTR [rbx],esi
    6d12:	00 00                	add    BYTE PTR [rax],al
    6d14:	bb 3f 00 00 ac       	mov    ebx,0xac00003f
    6d19:	18 00                	sbb    BYTE PTR [rax],al
    6d1b:	00 b7 18 00 00 10    	add    BYTE PTR [rdi+0x10000018],dh
    6d21:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6d22:	3f                   	(bad)
    6d23:	00 00                	add    BYTE PTR [rax],al
    6d25:	01 b6 3f 00 00 00    	add    DWORD PTR [rsi+0x3f],esi
    6d2b:	52                   	push   rdx
    6d2c:	72 65                	jb     6d93 <_end+0xd7b>
    6d2e:	70 00                	jo     6d30 <_end+0xd18>
    6d30:	b2 21                	mov    dl,0x21
    6d32:	00 00                	add    BYTE PTR [rax],al
    6d34:	13 b7 18 00 00 14    	adc    esi,DWORD PTR [rdi+0x14000018]
    6d3a:	97                   	xchg   edi,eax
    6d3b:	25 00 00 4d 02       	and    eax,0x24d0000
    6d40:	84 1b                	test   BYTE PTR [rbx],bl
    6d42:	00 00                	add    BYTE PTR [rax],al
    6d44:	b7 18                	mov    bh,0x18
    6d46:	00 00                	add    BYTE PTR [rax],al
    6d48:	dc 18                	fcomp  QWORD PTR [rax]
    6d4a:	00 00                	add    BYTE PTR [rax],al
    6d4c:	e2 18                	loop   6d66 <_end+0xd4e>
    6d4e:	00 00                	add    BYTE PTR [rax],al
    6d50:	10 c0                	adc    al,al
    6d52:	3f                   	(bad)
    6d53:	00 00                	add    BYTE PTR [rax],al
    6d55:	00 14 d9             	add    BYTE PTR [rcx+rbx*8],dl
    6d58:	14 00                	adc    al,0x0
    6d5a:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
    6d5d:	1b 30                	sbb    esi,DWORD PTR [rax]
    6d5f:	00 00                	add    BYTE PTR [rax],al
    6d61:	14 18                	adc    al,0x18
    6d63:	00 00                	add    BYTE PTR [rax],al
    6d65:	f9                   	stc
    6d66:	18 00                	sbb    BYTE PTR [rax],al
    6d68:	00 ff                	add    bh,bh
    6d6a:	18 00                	sbb    BYTE PTR [rax],al
    6d6c:	00 10                	add    BYTE PTR [rax],dl
    6d6e:	c0 3f 00             	sar    BYTE PTR [rdi],0x0
    6d71:	00 00                	add    BYTE PTR [rax],al
    6d73:	14 4e                	adc    al,0x4e
    6d75:	19 00                	sbb    DWORD PTR [rax],eax
    6d77:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    6d7a:	90                   	nop
    6d7b:	1d 00 00 14 18       	sbb    eax,0x18140000
    6d80:	00 00                	add    BYTE PTR [rax],al
    6d82:	16                   	(bad)
    6d83:	19 00                	sbb    DWORD PTR [rax],eax
    6d85:	00 1c 19             	add    BYTE PTR [rcx+rbx*1],bl
    6d88:	00 00                	add    BYTE PTR [rax],al
    6d8a:	10 c0                	adc    al,al
    6d8c:	3f                   	(bad)
    6d8d:	00 00                	add    BYTE PTR [rax],al
    6d8f:	00 14 38             	add    BYTE PTR [rax+rdi*1],dl
    6d92:	2f                   	(bad)
    6d93:	00 00                	add    BYTE PTR [rax],al
    6d95:	5b                   	pop    rbx
    6d96:	02 3f                	add    bh,BYTE PTR [rdi]
    6d98:	12 00                	adc    al,BYTE PTR [rax]
    6d9a:	00 bb 3f 00 00 33    	add    BYTE PTR [rbx+0x3300003f],bh
    6da0:	19 00                	sbb    DWORD PTR [rax],eax
    6da2:	00 39                	add    BYTE PTR [rcx],bh
    6da4:	19 00                	sbb    DWORD PTR [rax],eax
    6da6:	00 10                	add    BYTE PTR [rax],dl
    6da8:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6da9:	3f                   	(bad)
    6daa:	00 00                	add    BYTE PTR [rax],al
    6dac:	00 14 38             	add    BYTE PTR [rax+rdi*1],dl
    6daf:	2f                   	(bad)
    6db0:	00 00                	add    BYTE PTR [rax],al
    6db2:	62 02 cb 11 00       	(bad)
    6db7:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    6dba:	00 00                	add    BYTE PTR [rax],al
    6dbc:	50                   	push   rax
    6dbd:	19 00                	sbb    DWORD PTR [rax],eax
    6dbf:	00 5b 19             	add    BYTE PTR [rbx+0x19],bl
    6dc2:	00 00                	add    BYTE PTR [rax],al
    6dc4:	10 ac 3f 00 00 01 a6 	adc    BYTE PTR [rdi+rdi*1-0x59ff0000],ch
    6dcb:	21 00                	and    DWORD PTR [rax],eax
    6dcd:	00 00                	add    BYTE PTR [rax],al
    6dcf:	14 70                	adc    al,0x70
    6dd1:	31 00                	xor    DWORD PTR [rax],eax
    6dd3:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    6dd6:	fc                   	cld
    6dd7:	0b 00                	or     eax,DWORD PTR [rax]
    6dd9:	00 bb 3f 00 00 72    	add    BYTE PTR [rbx+0x7200003f],bh
    6ddf:	19 00                	sbb    DWORD PTR [rax],eax
    6de1:	00 78 19             	add    BYTE PTR [rax+0x19],bh
    6de4:	00 00                	add    BYTE PTR [rax],al
    6de6:	10 ac 3f 00 00 00 14 	adc    BYTE PTR [rdi+rdi*1+0x14000000],ch
    6ded:	70 31                	jo     6e20 <_end+0xe08>
    6def:	00 00                	add    BYTE PTR [rax],al
    6df1:	6d                   	ins    DWORD PTR es:[rdi],dx
    6df2:	02 27                	add    ah,BYTE PTR [rdi]
    6df4:	35 00 00 14 18       	xor    eax,0x18140000
    6df9:	00 00                	add    BYTE PTR [rax],al
    6dfb:	8f                   	(bad)
    6dfc:	19 00                	sbb    DWORD PTR [rax],eax
    6dfe:	00 9a 19 00 00 10    	add    BYTE PTR [rdx+0x10000019],bl
    6e04:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6e05:	3f                   	(bad)
    6e06:	00 00                	add    BYTE PTR [rax],al
    6e08:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    6e0e:	14 94                	adc    al,0x94
    6e10:	2a 00                	sub    al,BYTE PTR [rax]
    6e12:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    6e15:	17                   	(bad)
    6e16:	20 00                	and    BYTE PTR [rax],al
    6e18:	00 bb 3f 00 00 b1    	add    BYTE PTR [rbx-0x4effffc1],bh
    6e1e:	19 00                	sbb    DWORD PTR [rax],eax
    6e20:	00 bc 19 00 00 10 ac 	add    BYTE PTR [rcx+rbx*1-0x53f00000],bh
    6e27:	3f                   	(bad)
    6e28:	00 00                	add    BYTE PTR [rax],al
    6e2a:	01 b6 3f 00 00 00    	add    DWORD PTR [rsi+0x3f],esi
    6e30:	14 8b                	adc    al,0x8b
    6e32:	31 00                	xor    DWORD PTR [rax],eax
    6e34:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    6e37:	d0 0f                	ror    BYTE PTR [rdi],1
    6e39:	00 00                	add    BYTE PTR [rax],al
    6e3b:	bb 3f 00 00 d3       	mov    ebx,0xd300003f
    6e40:	19 00                	sbb    DWORD PTR [rax],eax
    6e42:	00 de                	add    dh,bl
    6e44:	19 00                	sbb    DWORD PTR [rax],eax
    6e46:	00 10                	add    BYTE PTR [rax],dl
    6e48:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6e49:	3f                   	(bad)
    6e4a:	00 00                	add    BYTE PTR [rax],al
    6e4c:	01 b6 3f 00 00 00    	add    DWORD PTR [rsi+0x3f],esi
    6e52:	14 67                	adc    al,0x67
    6e54:	2e 00 00             	cs add BYTE PTR [rax],al
    6e57:	7f 02                	jg     6e5b <_end+0xe43>
    6e59:	6c                   	ins    BYTE PTR es:[rdi],dx
    6e5a:	0d 00 00 bb 3f       	or     eax,0x3fbb0000
    6e5f:	00 00                	add    BYTE PTR [rax],al
    6e61:	f5                   	cmc
    6e62:	19 00                	sbb    DWORD PTR [rax],eax
    6e64:	00 00                	add    BYTE PTR [rax],al
    6e66:	1a 00                	sbb    al,BYTE PTR [rax]
    6e68:	00 10                	add    BYTE PTR [rax],dl
    6e6a:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6e6b:	3f                   	(bad)
    6e6c:	00 00                	add    BYTE PTR [rax],al
    6e6e:	01 ca                	add    edx,ecx
    6e70:	3f                   	(bad)
    6e71:	00 00                	add    BYTE PTR [rax],al
    6e73:	00 14 54             	add    BYTE PTR [rsp+rdx*2],dl
    6e76:	34 00                	xor    al,0x0
    6e78:	00 86 02 1a 34 00    	add    BYTE PTR [rsi+0x341a02],al
    6e7e:	00 bb 3f 00 00 17    	add    BYTE PTR [rbx+0x1700003f],bh
    6e84:	1a 00                	sbb    al,BYTE PTR [rax]
    6e86:	00 22                	add    BYTE PTR [rdx],ah
    6e88:	1a 00                	sbb    al,BYTE PTR [rax]
    6e8a:	00 10                	add    BYTE PTR [rax],dl
    6e8c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6e8d:	3f                   	(bad)
    6e8e:	00 00                	add    BYTE PTR [rax],al
    6e90:	01 ca                	add    edx,ecx
    6e92:	3f                   	(bad)
    6e93:	00 00                	add    BYTE PTR [rax],al
    6e95:	00 53 5b             	add    BYTE PTR [rbx+0x5b],dl
    6e98:	24 00                	and    al,0x0
    6e9a:	00 69 16             	add    BYTE PTR [rcx+0x16],ch
    6e9d:	00 00                	add    BYTE PTR [rax],al
    6e9f:	14 18                	adc    al,0x18
    6ea1:	00 00                	add    BYTE PTR [rax],al
    6ea3:	2c 6d                	sub    al,0x6d
    6ea5:	69 6e 00 a5 02 64 0c 	imul   ebp,DWORD PTR [rsi+0x0],0xc6402a5
    6eac:	00 00                	add    BYTE PTR [rax],al
    6eae:	14 18                	adc    al,0x18
    6eb0:	00 00                	add    BYTE PTR [rax],al
    6eb2:	2c 6d                	sub    al,0x6d
    6eb4:	61                   	(bad)
    6eb5:	78 00                	js     6eb7 <_end+0xe9f>
    6eb7:	a9 02 bc 30 00       	test   eax,0x30bc02
    6ebc:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    6ebf:	00 00                	add    BYTE PTR [rax],al
    6ec1:	3f                   	(bad)
    6ec2:	5f                   	pop    rdi
    6ec3:	5f                   	pop    rdi
    6ec4:	72 00                	jb     6ec6 <_end+0xeae>
    6ec6:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    6ec7:	02 06                	add    al,BYTE PTR [rsi]
    6ec9:	b7 18                	mov    bh,0x18
    6ecb:	00 00                	add    BYTE PTR [rax],al
    6ecd:	40 90                	rex nop
    6ecf:	2f                   	(bad)
    6ed0:	00 00                	add    BYTE PTR [rax],al
    6ed2:	3d 02 17 04 2c       	cmp    eax,0x2c041702
    6ed7:	00 00                	add    BYTE PTR [rax],al
    6ed9:	76 1a                	jbe    6ef5 <_end+0xedd>
    6edb:	00 00                	add    BYTE PTR [rax],al
    6edd:	81 1a 00 00 11 7c    	sbb    DWORD PTR [rdx],0x7c110000
    6ee3:	19 00                	sbb    DWORD PTR [rax],eax
    6ee5:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    6eeb:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6eec:	3f                   	(bad)
    6eed:	00 00                	add    BYTE PTR [rax],al
    6eef:	01 a9 44 00 00 00    	add    DWORD PTR [rcx+0x44],ebp
    6ef5:	11 fc                	adc    esp,edi
    6ef7:	32 00                	xor    al,BYTE PTR [rax]
    6ef9:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    6eff:	27                   	(bad)
    6f00:	24 00                	and    al,0x0
    6f02:	00 94 1f 00 00 00 13 	add    BYTE PTR [rdi+rbx*1+0x13000000],dl
    6f09:	14 18                	adc    al,0x18
    6f0b:	00 00                	add    BYTE PTR [rax],al
    6f0d:	69 5f 56 32 00 04 c1 	imul   ebx,DWORD PTR [rdi+0x56],0xc1040032
    6f14:	04 01                	add    al,0x1
    6f16:	e3 1a                	jrcxz  6f32 <_end+0xf1a>
    6f18:	00 00                	add    BYTE PTR [rax],al
    6f1a:	6a 1b                	push   0x1b
    6f1c:	11 00                	adc    DWORD PTR [rax],eax
    6f1e:	00 01                	add    BYTE PTR [rcx],al
    6f20:	04 f3                	add    al,0xf3
    6f22:	04 0c                	add    al,0xc
    6f24:	6b dd 1b             	imul   ebx,ebp,0x1b
    6f27:	00 00                	add    BYTE PTR [rax],al
    6f29:	04 fa                	add    al,0xfa
    6f2b:	04 1d                	add    al,0x1d
    6f2d:	f1                   	int1
    6f2e:	17                   	(bad)
    6f2f:	00 00                	add    BYTE PTR [rax],al
    6f31:	f1                   	int1
    6f32:	20 00                	and    BYTE PTR [rax],al
    6f34:	00 01                	add    BYTE PTR [rcx],al
    6f36:	01 41 ce             	add    DWORD PTR [rcx-0x32],eax
    6f39:	0d 00 00 04 f8       	or     eax,0xf8040000
    6f3e:	04 3a                	add    al,0x3a
    6f40:	e3 1a                	jrcxz  6f5c <_end+0xf44>
    6f42:	00 00                	add    BYTE PTR [rax],al
    6f44:	6c                   	ins    BYTE PTR es:[rdi],dx
    6f45:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6f46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6f47:	77 00                	ja     6f49 <_end+0xf31>
    6f49:	04 fd                	add    al,0xfd
    6f4b:	04 07                	add    al,0x7
    6f4d:	90                   	nop
    6f4e:	33 00                	xor    eax,DWORD PTR [rax]
    6f50:	00 c3                	add    bl,al
    6f52:	1a 00                	sbb    al,BYTE PTR [rax]
    6f54:	00 00                	add    BYTE PTR [rax],al
    6f56:	00 3e                	add    BYTE PTR [rsi],bh
    6f58:	db 25 00 00 9a 03    	(bad)  [rip+0x39a0000]        # 39a6f5e <_end+0x39a0f46>
    6f5e:	da 1b                	ficomp DWORD PTR [rbx]
    6f60:	00 00                	add    BYTE PTR [rax],al
    6f62:	6d                   	ins    DWORD PTR es:[rdi],dx
    6f63:	ce                   	(bad)
    6f64:	0d 00 00 04 a5       	or     eax,0xa5040000
    6f69:	03 0c 0c             	add    ecx,DWORD PTR [rsp+rcx*1]
    6f6c:	10 00                	adc    BYTE PTR [rax],al
    6f6e:	00 01                	add    BYTE PTR [rcx],al
    6f70:	04 1b                	add    al,0x1b
    6f72:	00 00                	add    BYTE PTR [rax],al
    6f74:	0a 1b                	or     bl,BYTE PTR [rbx]
    6f76:	00 00                	add    BYTE PTR [rax],al
    6f78:	10 2f                	adc    BYTE PTR [rdi],ch
    6f7a:	42 00 00             	rex.X add BYTE PTR [rax],al
    6f7d:	00 40 ce             	add    BYTE PTR [rax-0x32],al
    6f80:	0d 00 00 a8 03       	or     eax,0x3a80000
    6f85:	15 e2 0c 00 00       	adc    eax,0xce2
    6f8a:	1e                   	(bad)
    6f8b:	1b 00                	sbb    eax,DWORD PTR [rax]
    6f8d:	00 29                	add    BYTE PTR [rcx],ch
    6f8f:	1b 00                	sbb    eax,DWORD PTR [rax]
    6f91:	00 10                	add    BYTE PTR [rax],dl
    6f93:	2f                   	(bad)
    6f94:	42 00 00             	rex.X add BYTE PTR [rax],al
    6f97:	01 34 42             	add    DWORD PTR [rdx+rax*2],esi
    6f9a:	00 00                	add    BYTE PTR [rax],al
    6f9c:	00 6e c5             	add    BYTE PTR [rsi-0x3b],ch
    6f9f:	0d 00 00 04 a1       	or     eax,0xa1040000
    6fa4:	03 14 14             	add    edx,DWORD PTR [rsp+rdx*1]
    6fa7:	18 00                	sbb    BYTE PTR [rax],al
    6fa9:	00 01                	add    BYTE PTR [rcx],al
    6fab:	13 29                	adc    ebp,DWORD PTR [rcx]
    6fad:	1b 00                	sbb    eax,DWORD PTR [rax]
    6faf:	00 14 4a             	add    BYTE PTR [rdx+rcx*2],dl
    6fb2:	24 00                	and    al,0x0
    6fb4:	00 b5 03 72 2d 00    	add    BYTE PTR [rbp+0x2d7203],dh
    6fba:	00 29                	add    BYTE PTR [rcx],ch
    6fbc:	1b 00                	sbb    eax,DWORD PTR [rax]
    6fbe:	00 53 1b             	add    BYTE PTR [rbx+0x1b],dl
    6fc1:	00 00                	add    BYTE PTR [rax],al
    6fc3:	59                   	pop    rcx
    6fc4:	1b 00                	sbb    eax,DWORD PTR [rax]
    6fc6:	00 10                	add    BYTE PTR [rax],dl
    6fc8:	39 42 00             	cmp    DWORD PTR [rdx+0x0],eax
    6fcb:	00 00                	add    BYTE PTR [rax],al
    6fcd:	14 94                	adc    al,0x94
    6fcf:	2a 00                	sub    al,BYTE PTR [rax]
    6fd1:	00 d2                	add    dl,dl
    6fd3:	03 67 11             	add    esp,DWORD PTR [rdi+0x11]
    6fd6:	00 00                	add    BYTE PTR [rax],al
    6fd8:	43                   	rex.XB
    6fd9:	42 00 00             	rex.X add BYTE PTR [rax],al
    6fdc:	70 1b                	jo     6ff9 <_end+0xfe1>
    6fde:	00 00                	add    BYTE PTR [rax],al
    6fe0:	7b 1b                	jnp    6ffd <_end+0xfe5>
    6fe2:	00 00                	add    BYTE PTR [rax],al
    6fe4:	10 2f                	adc    BYTE PTR [rdi],ch
    6fe6:	42 00 00             	rex.X add BYTE PTR [rax],al
    6fe9:	01 34 42             	add    DWORD PTR [rdx+rax*2],esi
    6fec:	00 00                	add    BYTE PTR [rax],al
    6fee:	00 14 8b             	add    BYTE PTR [rbx+rcx*4],dl
    6ff1:	31 00                	xor    DWORD PTR [rax],eax
    6ff3:	00 d9                	add    cl,bl
    6ff5:	03 bf 0e 00 00 43    	add    edi,DWORD PTR [rdi+0x4300000e]
    6ffb:	42 00 00             	rex.X add BYTE PTR [rax],al
    6ffe:	92                   	xchg   edx,eax
    6fff:	1b 00                	sbb    eax,DWORD PTR [rax]
    7001:	00 9d 1b 00 00 10    	add    BYTE PTR [rbp+0x1000001b],bl
    7007:	2f                   	(bad)
    7008:	42 00 00             	rex.X add BYTE PTR [rax],al
    700b:	01 34 42             	add    DWORD PTR [rdx+rax*2],esi
    700e:	00 00                	add    BYTE PTR [rax],al
    7010:	00 2c 6d 69 6e 00 e1 	add    BYTE PTR [rbp*2-0x1eff9197],ch
    7017:	03 57 21             	add    edx,DWORD PTR [rdi+0x21]
    701a:	00 00                	add    BYTE PTR [rax],al
    701c:	e3 1a                	jrcxz  7038 <_end+0x1020>
    701e:	00 00                	add    BYTE PTR [rax],al
    7020:	2c 6d                	sub    al,0x6d
    7022:	61                   	(bad)
    7023:	78 00                	js     7025 <_end+0x100d>
    7025:	e5 03                	in     eax,0x3
    7027:	a8 1f                	test   al,0x1f
    7029:	00 00                	add    BYTE PTR [rax],al
    702b:	e3 1a                	jrcxz  7047 <_end+0x102f>
    702d:	00 00                	add    BYTE PTR [rax],al
    702f:	3f                   	(bad)
    7030:	5f                   	pop    rdi
    7031:	5f                   	pop    rdi
    7032:	64 00 e9             	fs add cl,ch
    7035:	03 0b                	add    ecx,DWORD PTR [rbx]
    7037:	29 1b                	sub    DWORD PTR [rbx],ebx
    7039:	00 00                	add    BYTE PTR [rax],al
    703b:	11 4b 29             	adc    DWORD PTR [rbx+0x29],ecx
    703e:	00 00                	add    BYTE PTR [rax],al
    7040:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7041:	1a 00                	sbb    al,BYTE PTR [rax]
    7043:	00 11                	add    BYTE PTR [rcx],dl
    7045:	8d 26                	lea    esp,[rsi]
    7047:	00 00                	add    BYTE PTR [rax],al
    7049:	14 18                	adc    al,0x18
    704b:	00 00                	add    BYTE PTR [rax],al
    704d:	00 13                	add    BYTE PTR [rbx],dl
    704f:	e3 1a                	jrcxz  706b <_end+0x1053>
    7051:	00 00                	add    BYTE PTR [rax],al
    7053:	3e a3 14 00 00 ff 01 	ds movabs ds:0x1e5f01ff000014,eax
    705a:	5f 1e 00 
    705d:	00 04 7e             	add    BYTE PTR [rsi+rdi*2],al
    7060:	0e                   	(bad)
    7061:	00 00                	add    BYTE PTR [rax],al
    7063:	04 0b                	add    al,0xb
    7065:	02 02                	add    al,BYTE PTR [rdx]
    7067:	ef                   	out    dx,eax
    7068:	2a 00                	sub    al,BYTE PTR [rax]
    706a:	00 a5 2d 00 00 0a    	add    BYTE PTR [rbp+0xa00002d],ah
    7070:	1c 00                	sbb    al,0x0
    7072:	00 01                	add    BYTE PTR [rcx],al
    7074:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    7075:	2d 00 00 01 a5       	sub    eax,0xa5010000
    707a:	2d 00 00 00 2b       	sub    eax,0x2b000000
    707f:	c5 0d 00             	(bad)
    7082:	00 34 02             	add    BYTE PTR [rdx+rax*1],dh
    7085:	0c 34                	or     al,0x34
    7087:	1f                   	(bad)
    7088:	00 00                	add    BYTE PTR [rax],al
    708a:	1e                   	(bad)
    708b:	1c 00                	sbb    al,0x0
    708d:	00 24 1c             	add    BYTE PTR [rsp+rbx*1],ah
    7090:	00 00                	add    BYTE PTR [rax],al
    7092:	10 cf                	adc    bh,cl
    7094:	3f                   	(bad)
    7095:	00 00                	add    BYTE PTR [rax],al
    7097:	00 2b                	add    BYTE PTR [rbx],ch
    7099:	c5 0d 00             	(bad)
    709c:	00 36                	add    BYTE PTR [rsi],dh
    709e:	02 02                	add    al,BYTE PTR [rdx]
    70a0:	3d 33 00 00 38       	cmp    eax,0x38000033
    70a5:	1c 00                	sbb    al,0x0
    70a7:	00 43 1c             	add    BYTE PTR [rbx+0x1c],al
    70aa:	00 00                	add    BYTE PTR [rax],al
    70ac:	10 cf                	adc    bh,cl
    70ae:	3f                   	(bad)
    70af:	00 00                	add    BYTE PTR [rax],al
    70b1:	01 d9                	add    ecx,ebx
    70b3:	3f                   	(bad)
    70b4:	00 00                	add    BYTE PTR [rax],al
    70b6:	00 2b                	add    BYTE PTR [rbx],ch
    70b8:	d9 0d 00 00 48 02    	(bad)  [rip+0x2480000]        # 24870be <_end+0x24810a6>
    70be:	02 c7                	add    al,bh
    70c0:	33 00                	xor    eax,DWORD PTR [rax]
    70c2:	00 57 1c             	add    BYTE PTR [rdi+0x1c],dl
    70c5:	00 00                	add    BYTE PTR [rax],al
    70c7:	62 1c 00             	(bad)
    70ca:	00 10                	add    BYTE PTR [rax],dl
    70cc:	cf                   	iret
    70cd:	3f                   	(bad)
    70ce:	00 00                	add    BYTE PTR [rax],al
    70d0:	10 a6 21 00 00 00    	adc    BYTE PTR [rsi+0x21],ah
    70d6:	51                   	push   rcx
    70d7:	74 15                	je     70ee <_end+0x10d6>
    70d9:	00 00                	add    BYTE PTR [rax],al
    70db:	e1 22                	loope  70ff <_end+0x10e7>
    70dd:	00 00                	add    BYTE PTR [rax],al
    70df:	de 3f                	fidivr WORD PTR [rdi]
    70e1:	00 00                	add    BYTE PTR [rax],al
    70e3:	77 1c                	ja     7101 <_end+0x10e9>
    70e5:	00 00                	add    BYTE PTR [rax],al
    70e7:	82                   	(bad)
    70e8:	1c 00                	sbb    al,0x0
    70ea:	00 10                	add    BYTE PTR [rax],dl
    70ec:	cf                   	iret
    70ed:	3f                   	(bad)
    70ee:	00 00                	add    BYTE PTR [rax],al
    70f0:	01 d9                	add    ecx,ebx
    70f2:	3f                   	(bad)
    70f3:	00 00                	add    BYTE PTR [rax],al
    70f5:	00 52 72             	add    BYTE PTR [rdx+0x72],dl
    70f8:	65 70 00             	gs jo  70fb <_end+0x10e3>
    70fb:	b2 21                	mov    dl,0x21
    70fd:	00 00                	add    BYTE PTR [rax],al
    70ff:	13 82 1c 00 00 14    	adc    eax,DWORD PTR [rdx+0x1400001c]
    7105:	97                   	xchg   edi,eax
    7106:	25 00 00 4d 02       	and    eax,0x24d0000
    710b:	62 17 00 00 82       	(bad)
    7110:	1c 00                	sbb    al,0x0
    7112:	00 a7 1c 00 00 ad    	add    BYTE PTR [rdi-0x52ffffe4],ah
    7118:	1c 00                	sbb    al,0x0
    711a:	00 10                	add    BYTE PTR [rax],dl
    711c:	e3 3f                	jrcxz  715d <_end+0x1145>
    711e:	00 00                	add    BYTE PTR [rax],al
    7120:	00 14 d9             	add    BYTE PTR [rcx+rbx*8],dl
    7123:	14 00                	adc    al,0x0
    7125:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
    7128:	21 14 00             	and    DWORD PTR [rax+rax*1],edx
    712b:	00 df                	add    bh,bl
    712d:	1b 00                	sbb    eax,DWORD PTR [rax]
    712f:	00 c4                	add    ah,al
    7131:	1c 00                	sbb    al,0x0
    7133:	00 ca                	add    dl,cl
    7135:	1c 00                	sbb    al,0x0
    7137:	00 10                	add    BYTE PTR [rax],dl
    7139:	e3 3f                	jrcxz  717a <_end+0x1162>
    713b:	00 00                	add    BYTE PTR [rax],al
    713d:	00 14 4e             	add    BYTE PTR [rsi+rcx*2],dl
    7140:	19 00                	sbb    DWORD PTR [rax],eax
    7142:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    7145:	31 2b                	xor    DWORD PTR [rbx],ebp
    7147:	00 00                	add    BYTE PTR [rax],al
    7149:	df 1b                	fistp  WORD PTR [rbx]
    714b:	00 00                	add    BYTE PTR [rax],al
    714d:	e1 1c                	loope  716b <_end+0x1153>
    714f:	00 00                	add    BYTE PTR [rax],al
    7151:	e7 1c                	out    0x1c,eax
    7153:	00 00                	add    BYTE PTR [rax],al
    7155:	10 e3                	adc    bl,ah
    7157:	3f                   	(bad)
    7158:	00 00                	add    BYTE PTR [rax],al
    715a:	00 14 38             	add    BYTE PTR [rax+rdi*1],dl
    715d:	2f                   	(bad)
    715e:	00 00                	add    BYTE PTR [rax],al
    7160:	5b                   	pop    rbx
    7161:	02 f5                	add    dh,ch
    7163:	1e                   	(bad)
    7164:	00 00                	add    BYTE PTR [rax],al
    7166:	de 3f                	fidivr WORD PTR [rdi]
    7168:	00 00                	add    BYTE PTR [rax],al
    716a:	fe                   	(bad)
    716b:	1c 00                	sbb    al,0x0
    716d:	00 04 1d 00 00 10 cf 	add    BYTE PTR [rbx*1-0x30f00000],al
    7174:	3f                   	(bad)
    7175:	00 00                	add    BYTE PTR [rax],al
    7177:	00 14 38             	add    BYTE PTR [rax+rdi*1],dl
    717a:	2f                   	(bad)
    717b:	00 00                	add    BYTE PTR [rax],al
    717d:	62 02 1d 17 00 00    	vpshufb xmm24{k7},xmm28,DWORD BCST [r8]
    7183:	df 1b                	fistp  WORD PTR [rbx]
    7185:	00 00                	add    BYTE PTR [rax],al
    7187:	1b 1d 00 00 26 1d    	sbb    ebx,DWORD PTR [rip+0x1d260000]        # 1d26718d <_end+0x1d261175>
    718d:	00 00                	add    BYTE PTR [rax],al
    718f:	10 cf                	adc    bh,cl
    7191:	3f                   	(bad)
    7192:	00 00                	add    BYTE PTR [rax],al
    7194:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    719a:	14 70                	adc    al,0x70
    719c:	31 00                	xor    DWORD PTR [rax],eax
    719e:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    71a1:	0b 19                	or     ebx,DWORD PTR [rcx]
    71a3:	00 00                	add    BYTE PTR [rax],al
    71a5:	de 3f                	fidivr WORD PTR [rdi]
    71a7:	00 00                	add    BYTE PTR [rax],al
    71a9:	3d 1d 00 00 43       	cmp    eax,0x4300001d
    71ae:	1d 00 00 10 cf       	sbb    eax,0xcf100000
    71b3:	3f                   	(bad)
    71b4:	00 00                	add    BYTE PTR [rax],al
    71b6:	00 14 70             	add    BYTE PTR [rax+rsi*2],dl
    71b9:	31 00                	xor    DWORD PTR [rax],eax
    71bb:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    71be:	3c 13                	cmp    al,0x13
    71c0:	00 00                	add    BYTE PTR [rax],al
    71c2:	df 1b                	fistp  WORD PTR [rbx]
    71c4:	00 00                	add    BYTE PTR [rax],al
    71c6:	5a                   	pop    rdx
    71c7:	1d 00 00 65 1d       	sbb    eax,0x1d650000
    71cc:	00 00                	add    BYTE PTR [rax],al
    71ce:	10 cf                	adc    bh,cl
    71d0:	3f                   	(bad)
    71d1:	00 00                	add    BYTE PTR [rax],al
    71d3:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    71d9:	14 94                	adc    al,0x94
    71db:	2a 00                	sub    al,BYTE PTR [rax]
    71dd:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    71e0:	15 0e 00 00 de       	adc    eax,0xde00000e
    71e5:	3f                   	(bad)
    71e6:	00 00                	add    BYTE PTR [rax],al
    71e8:	7c 1d                	jl     7207 <_end+0x11ef>
    71ea:	00 00                	add    BYTE PTR [rax],al
    71ec:	87 1d 00 00 10 cf    	xchg   DWORD PTR [rip+0xffffffffcf100000],ebx        # ffffffffcf1071f2 <_end+0xffffffffcf1011da>
    71f2:	3f                   	(bad)
    71f3:	00 00                	add    BYTE PTR [rax],al
    71f5:	01 d9                	add    ecx,ebx
    71f7:	3f                   	(bad)
    71f8:	00 00                	add    BYTE PTR [rax],al
    71fa:	00 14 8b             	add    BYTE PTR [rbx+rcx*4],dl
    71fd:	31 00                	xor    DWORD PTR [rax],eax
    71ff:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    7202:	8b 34 00             	mov    esi,DWORD PTR [rax+rax*1]
    7205:	00 de                	add    dh,bl
    7207:	3f                   	(bad)
    7208:	00 00                	add    BYTE PTR [rax],al
    720a:	9e                   	sahf
    720b:	1d 00 00 a9 1d       	sbb    eax,0x1da90000
    7210:	00 00                	add    BYTE PTR [rax],al
    7212:	10 cf                	adc    bh,cl
    7214:	3f                   	(bad)
    7215:	00 00                	add    BYTE PTR [rax],al
    7217:	01 d9                	add    ecx,ebx
    7219:	3f                   	(bad)
    721a:	00 00                	add    BYTE PTR [rax],al
    721c:	00 14 67             	add    BYTE PTR [rdi+riz*2],dl
    721f:	2e 00 00             	cs add BYTE PTR [rax],al
    7222:	7f 02                	jg     7226 <_end+0x120e>
    7224:	20 21                	and    BYTE PTR [rcx],ah
    7226:	00 00                	add    BYTE PTR [rax],al
    7228:	de 3f                	fidivr WORD PTR [rdi]
    722a:	00 00                	add    BYTE PTR [rax],al
    722c:	c0 1d 00 00 cb 1d 00 	rcr    BYTE PTR [rip+0x1dcb0000],0x0        # 1dcb7233 <_end+0x1dcb121b>
    7233:	00 10                	add    BYTE PTR [rax],dl
    7235:	cf                   	iret
    7236:	3f                   	(bad)
    7237:	00 00                	add    BYTE PTR [rax],al
    7239:	01 ed                	add    ebp,ebp
    723b:	3f                   	(bad)
    723c:	00 00                	add    BYTE PTR [rax],al
    723e:	00 14 54             	add    BYTE PTR [rsp+rdx*2],dl
    7241:	34 00                	xor    al,0x0
    7243:	00 86 02 5d 2a 00    	add    BYTE PTR [rsi+0x2a5d02],al
    7249:	00 de                	add    dh,bl
    724b:	3f                   	(bad)
    724c:	00 00                	add    BYTE PTR [rax],al
    724e:	e2 1d                	loop   726d <_end+0x1255>
    7250:	00 00                	add    BYTE PTR [rax],al
    7252:	ed                   	in     eax,dx
    7253:	1d 00 00 10 cf       	sbb    eax,0xcf100000
    7258:	3f                   	(bad)
    7259:	00 00                	add    BYTE PTR [rax],al
    725b:	01 ed                	add    ebp,ebp
    725d:	3f                   	(bad)
    725e:	00 00                	add    BYTE PTR [rax],al
    7260:	00 53 5b             	add    BYTE PTR [rbx+0x5b],dl
    7263:	24 00                	and    al,0x0
    7265:	00 e8                	add    al,ch
    7267:	20 00                	and    BYTE PTR [rax],al
    7269:	00 df                	add    bh,bl
    726b:	1b 00                	sbb    eax,DWORD PTR [rax]
    726d:	00 2c 6d 69 6e 00 a5 	add    BYTE PTR [rbp*2-0x5aff9197],ch
    7274:	02 4a 28             	add    cl,BYTE PTR [rdx+0x28]
    7277:	00 00                	add    BYTE PTR [rax],al
    7279:	df 1b                	fistp  WORD PTR [rbx]
    727b:	00 00                	add    BYTE PTR [rax],al
    727d:	2c 6d                	sub    al,0x6d
    727f:	61                   	(bad)
    7280:	78 00                	js     7282 <_end+0x126a>
    7282:	a9 02 95 22 00       	test   eax,0x229502
    7287:	00 df                	add    bh,bl
    7289:	1b 00                	sbb    eax,DWORD PTR [rax]
    728b:	00 3f                	add    BYTE PTR [rdi],bh
    728d:	5f                   	pop    rdi
    728e:	5f                   	pop    rdi
    728f:	72 00                	jb     7291 <_end+0x1279>
    7291:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    7292:	02 06                	add    al,BYTE PTR [rsi]
    7294:	82                   	(bad)
    7295:	1c 00                	sbb    al,0x0
    7297:	00 40 90             	add    BYTE PTR [rax-0x70],al
    729a:	2f                   	(bad)
    729b:	00 00                	add    BYTE PTR [rax],al
    729d:	3d 02 17 04 2a       	cmp    eax,0x2a041702
    72a2:	00 00                	add    BYTE PTR [rax],al
    72a4:	41 1e                	rex.B (bad)
    72a6:	00 00                	add    BYTE PTR [rax],al
    72a8:	4c 1e                	rex.WR (bad)
    72aa:	00 00                	add    BYTE PTR [rax],al
    72ac:	11 7c 19 00          	adc    DWORD PTR [rcx+rbx*1+0x0],edi
    72b0:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    72b6:	cf                   	iret
    72b7:	3f                   	(bad)
    72b8:	00 00                	add    BYTE PTR [rax],al
    72ba:	01 a9 44 00 00 00    	add    DWORD PTR [rcx+0x44],ebp
    72c0:	11 fc                	adc    esp,edi
    72c2:	32 00                	xor    al,BYTE PTR [rax]
    72c4:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    72ca:	27                   	(bad)
    72cb:	24 00                	and    al,0x0
    72cd:	00 3d 20 00 00 00    	add    BYTE PTR [rip+0x20],bh        # 72f3 <_end+0x12db>
    72d3:	13 df                	adc    ebx,edi
    72d5:	1b 00                	sbb    eax,DWORD PTR [rax]
    72d7:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    72da:	9e                   	sahf
    72db:	05 1f 89 20 00       	add    eax,0x20891f
    72e0:	00 1b                	add    BYTE PTR [rbx],bl
    72e2:	d2 31                	shl    BYTE PTR [rcx],cl
    72e4:	00 00                	add    BYTE PTR [rax],al
    72e6:	01 04 cc             	add    DWORD PTR [rsp+rcx*8],eax
    72e9:	0e                   	(bad)
    72ea:	d6                   	(bad)
    72eb:	1e                   	(bad)
    72ec:	00 00                	add    BYTE PTR [rax],al
    72ee:	0f 95 29             	setne  BYTE PTR [rcx]
    72f1:	00 00                	add    BYTE PTR [rax],al
    72f3:	04 d0                	add    al,0xd0
    72f5:	04 b3                	add    al,0xb3
    72f7:	28 00                	sub    BYTE PTR [rax],al
    72f9:	00 df                	add    bh,bl
    72fb:	1b 00                	sbb    eax,DWORD PTR [rax]
    72fd:	00 a6 1e 00 00 11    	add    BYTE PTR [rsi+0x1100001e],ah
    7303:	fc                   	cld
    7304:	32 00                	xor    al,BYTE PTR [rax]
    7306:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    730c:	27                   	(bad)
    730d:	24 00                	and    al,0x0
    730f:	00 94 1f 00 00 01 b6 	add    BYTE PTR [rdi+rbx*1-0x49ff0000],dl
    7316:	3f                   	(bad)
    7317:	00 00                	add    BYTE PTR [rax],al
    7319:	00 11                	add    BYTE PTR [rcx],dl
    731b:	da 22                	fisub  DWORD PTR [rdx]
    731d:	00 00                	add    BYTE PTR [rax],al
    731f:	df 1b                	fistp  WORD PTR [rbx]
    7321:	00 00                	add    BYTE PTR [rax],al
    7323:	42 5f                	rex.X pop rdi
    7325:	43                   	rex.XB
    7326:	46 00 fd             	rex.RX add bpl,r15b
    7329:	1f                   	(bad)
    732a:	00 00                	add    BYTE PTR [rax],al
    732c:	42 5f                	rex.X pop rdi
    732e:	43 52                	rex.XB push r10
    7330:	00 b2 21 00 00 2f    	add    BYTE PTR [rdx+0x2f000021],dh
    7336:	f1                   	int1
    7337:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    733c:	00 00                	add    BYTE PTR [rax],al
    733e:	01 2f                	add    DWORD PTR [rdi],ebp
    7340:	15 25 00 00 ea       	adc    eax,0xea000025
    7345:	20 00                	and    BYTE PTR [rax],al
    7347:	00 00                	add    BYTE PTR [rax],al
    7349:	00 04 92             	add    BYTE PTR [rdx+rdx*4],al
    734c:	26 00 00             	es add BYTE PTR [rax],al
    734f:	04 c6                	add    al,0xc6
    7351:	02 07                	add    al,BYTE PTR [rdi]
    7353:	1e                   	(bad)
    7354:	22 00                	and    al,BYTE PTR [rax]
    7356:	00 e0                	add    al,ah
    7358:	1f                   	(bad)
    7359:	00 00                	add    BYTE PTR [rax],al
    735b:	1a 1f                	sbb    bl,BYTE PTR [rdi]
    735d:	00 00                	add    BYTE PTR [rax],al
    735f:	11 76 19             	adc    DWORD PTR [rsi+0x19],esi
    7362:	00 00                	add    BYTE PTR [rax],al
    7364:	b2 21                	mov    dl,0x21
    7366:	00 00                	add    BYTE PTR [rax],al
    7368:	11 6f 23             	adc    DWORD PTR [rdi+0x23],ebp
    736b:	00 00                	add    BYTE PTR [rax],al
    736d:	94                   	xchg   esp,eax
    736e:	1f                   	(bad)
    736f:	00 00                	add    BYTE PTR [rax],al
    7371:	11 7c 19 00          	adc    DWORD PTR [rcx+rbx*1+0x0],edi
    7375:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    737b:	81 30 00 00 94 1f    	xor    DWORD PTR [rax],0x1f940000
    7381:	00 00                	add    BYTE PTR [rax],al
    7383:	01 b6 3f 00 00 01    	add    DWORD PTR [rsi+0x100003f],esi
    7389:	b6 3f                	mov    dh,0x3f
    738b:	00 00                	add    BYTE PTR [rax],al
    738d:	00 08                	add    BYTE PTR [rax],cl
    738f:	b6 0d                	mov    dh,0xd
    7391:	00 00                	add    BYTE PTR [rax],al
    7393:	04 f0                	add    al,0xf0
    7395:	0d a8 20 00 00       	or     eax,0x20a8
    739a:	04 77                	add    al,0x77
    739c:	27                   	(bad)
    739d:	00 00                	add    BYTE PTR [rax],al
    739f:	04 11                	add    al,0x11
    73a1:	01 07                	add    DWORD PTR [rdi],eax
    73a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    73a4:	1a 00                	sbb    al,BYTE PTR [rax]
    73a6:	00 1a                	add    BYTE PTR [rdx],bl
    73a8:	1f                   	(bad)
    73a9:	00 00                	add    BYTE PTR [rax],al
    73ab:	5c                   	pop    rsp
    73ac:	1f                   	(bad)
    73ad:	00 00                	add    BYTE PTR [rax],al
    73af:	11 da                	adc    edx,ebx
    73b1:	22 00                	and    al,BYTE PTR [rax]
    73b3:	00 df                	add    bh,bl
    73b5:	1b 00                	sbb    eax,DWORD PTR [rax]
    73b7:	00 11                	add    BYTE PTR [rcx],dl
    73b9:	fc                   	cld
    73ba:	32 00                	xor    al,BYTE PTR [rax]
    73bc:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    73c2:	27                   	(bad)
    73c3:	24 00                	and    al,0x0
    73c5:	00 94 1f 00 00 01 b6 	add    BYTE PTR [rdi+rbx*1-0x49ff0000],dl
    73cc:	3f                   	(bad)
    73cd:	00 00                	add    BYTE PTR [rax],al
    73cf:	00 70 56             	add    BYTE PTR [rax+0x56],dh
    73d2:	1c 00                	sbb    al,0x0
    73d4:	00 04 75 04 07 cf 2c 	add    BYTE PTR [rsi*2+0x2ccf0704],al
    73db:	00 00                	add    BYTE PTR [rax],al
    73dd:	e0 1f                	loopne 73fe <_end+0x13e6>
    73df:	00 00                	add    BYTE PTR [rax],al
    73e1:	11 4b 29             	adc    DWORD PTR [rbx+0x29],ecx
    73e4:	00 00                	add    BYTE PTR [rax],al
    73e6:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    73e7:	1a 00                	sbb    al,BYTE PTR [rax]
    73e9:	00 11                	add    BYTE PTR [rcx],dl
    73eb:	a1 23 00 00 14 18 00 	movabs eax,ds:0x1100001814000023
    73f2:	00 11 
    73f4:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    73f5:	23 00                	and    eax,DWORD PTR [rax]
    73f7:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    73fa:	00 00                	add    BYTE PTR [rax],al
    73fc:	01 fe                	add    esi,edi
    73fe:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    7401:	01 fe                	add    esi,edi
    7403:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    7406:	00 00                	add    BYTE PTR [rax],al
    7408:	43                   	rex.XB
    7409:	67 20 00             	and    BYTE PTR [eax],al
    740c:	00 d3                	add    bl,dl
    740e:	1f                   	(bad)
    740f:	00 00                	add    BYTE PTR [rax],al
    7411:	44 6e                	rex.R outs dx,BYTE PTR ds:[rsi]
    7413:	75 6d                	jne    7482 <_end+0x146a>
    7415:	00 8f 20 00 00 b1    	add    BYTE PTR [rdi-0x4effffe0],cl
    741b:	2d 00 00 54 64       	sub    eax,0x64540000
    7420:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    7422:	00 cd                	add    ch,cl
    7424:	15 00 00 b1 2d       	adc    eax,0x2db10000
    7429:	00 00                	add    BYTE PTR [rax],al
    742b:	00 ca                	add    dl,cl
    742d:	9a                   	(bad)
    742e:	3b 2f                	cmp    ebp,DWORD PTR [rdi]
    7430:	28 27                	sub    BYTE PTR [rdi],ah
    7432:	00 00                	add    BYTE PTR [rax],al
    7434:	b2 21                	mov    dl,0x21
    7436:	00 00                	add    BYTE PTR [rax],al
    7438:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
    743b:	12 00                	adc    al,BYTE PTR [rax]
    743d:	00 b2 21 00 00 00    	add    BYTE PTR [rdx+0x21],dh
    7443:	ca 9a 3b             	retf   0x3b9a
    7446:	00 1b                	add    BYTE PTR [rbx],bl
    7448:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
    744c:	01 04 70             	add    DWORD PTR [rax+rsi*2],eax
    744f:	0c fd                	or     al,0xfd
    7451:	1f                   	(bad)
    7452:	00 00                	add    BYTE PTR [rax],al
    7454:	08 d1                	or     cl,dl
    7456:	13 00                	adc    eax,DWORD PTR [rax]
    7458:	00 04 73             	add    BYTE PTR [rbx+rsi*2],al
    745b:	0d 14 18 00 00       	or     eax,0x1814
    7460:	71 5f                	jno    74c1 <_end+0x14a9>
    7462:	54                   	push   rsp
    7463:	70 00                	jo     7465 <_end+0x144d>
    7465:	56                   	push   rsi
    7466:	14 18                	adc    al,0x18
    7468:	00 00                	add    BYTE PTR [rax],al
    746a:	56                   	push   rsi
    746b:	14 18                	adc    al,0x18
    746d:	00 00                	add    BYTE PTR [rax],al
    746f:	00 00                	add    BYTE PTR [rax],al
    7471:	43 e0 2a             	rex.XB loopne 749e <_end+0x1486>
    7474:	00 00                	add    BYTE PTR [rax],al
    7476:	3d 20 00 00 44       	cmp    eax,0x44000020
    747b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    747c:	75 6d                	jne    74eb <_end+0x14d3>
    747e:	00 d1                	add    cl,dl
    7480:	1d 00 00 b1 2d       	sbb    eax,0x2db10000
    7485:	00 00                	add    BYTE PTR [rax],al
    7487:	72 64                	jb     74ed <_end+0x14d5>
    7489:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    748b:	00 10                	add    BYTE PTR [rax],dl
    748d:	14 01                	adc    al,0x1
    748f:	21 03                	and    DWORD PTR [rbx],eax
    7491:	14 00                	adc    al,0x0
    7493:	00 b1 2d 00 00 e8    	add    BYTE PTR [rcx-0x17ffffd3],dh
    7499:	03 01                	add    eax,DWORD PTR [rcx]
    749b:	2f                   	(bad)
    749c:	28 27                	sub    BYTE PTR [rdi],ah
    749e:	00 00                	add    BYTE PTR [rax],al
    74a0:	b2 21                	mov    dl,0x21
    74a2:	00 00                	add    BYTE PTR [rax],al
    74a4:	01 73 17             	add    DWORD PTR [rbx+0x17],esi
    74a7:	12 00                	adc    al,BYTE PTR [rax]
    74a9:	00 b2 21 00 00 e8    	add    BYTE PTR [rdx-0x17ffffdf],dh
    74af:	03 00                	add    eax,DWORD PTR [rax]
    74b1:	43 6d                	rex.XB ins DWORD PTR es:[rdi],dx
    74b3:	1d 00 00 7c 20       	sbb    eax,0x207c0000
    74b8:	00 00                	add    BYTE PTR [rax],al
    74ba:	44 6e                	rex.R outs dx,BYTE PTR ds:[rsi]
    74bc:	75 6d                	jne    752b <_end+0x1513>
    74be:	00 42 27             	add    BYTE PTR [rdx+0x27],al
    74c1:	00 00                	add    BYTE PTR [rax],al
    74c3:	b1 2d                	mov    cl,0x2d
    74c5:	00 00                	add    BYTE PTR [rax],al
    74c7:	54                   	push   rsp
    74c8:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    74cb:	00 cb                	add    bl,cl
    74cd:	1e                   	(bad)
    74ce:	00 00                	add    BYTE PTR [rax],al
    74d0:	b1 2d                	mov    cl,0x2d
    74d2:	00 00                	add    BYTE PTR [rax],al
    74d4:	40                   	rex
    74d5:	42 0f 00 2f          	rex.X verw WORD PTR [rdi]
    74d9:	28 27                	sub    BYTE PTR [rdi],ah
    74db:	00 00                	add    BYTE PTR [rax],al
    74dd:	b2 21                	mov    dl,0x21
    74df:	00 00                	add    BYTE PTR [rax],al
    74e1:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
    74e4:	12 00                	adc    al,BYTE PTR [rax]
    74e6:	00 b2 21 00 00 40    	add    BYTE PTR [rdx+0x40000021],dh
    74ec:	42 0f 00 00          	rex.X sldt WORD PTR [rax]
    74f0:	74 4d                	je     753f <_end+0x1527>
    74f2:	0d 00 00 3e 58       	or     eax,0x583e0000
    74f7:	03 14 93             	add    edx,DWORD PTR [rbx+rdx*4]
    74fa:	20 00                	and    BYTE PTR [rax],al
    74fc:	00 50 46             	add    BYTE PTR [rax+0x46],dl
    74ff:	0d 00 00 04 42       	or     eax,0x42040000
    7504:	05 14 00 3c 6b       	add    eax,0x6b3c0014
    7509:	26 00 00             	es add BYTE PTR [rax],al
    750c:	04 34                	add    al,0x34
    750e:	0d 1b 82 12 00       	or     eax,0x12821b
    7513:	00 01                	add    BYTE PTR [rcx],al
    7515:	05 6f 0c be 20       	add    eax,0x20be0c6f
    751a:	00 00                	add    BYTE PTR [rax],al
    751c:	08 d1                	or     cl,dl
    751e:	13 00                	adc    eax,DWORD PTR [rax]
    7520:	00 05 70 13 df 1b    	add    BYTE PTR [rip+0x1bdf1370],al        # 1bdf8896 <_end+0x1bdf287e>
    7526:	00 00                	add    BYTE PTR [rax],al
    7528:	42 5f                	rex.X pop rdi
    752a:	54                   	push   rsp
    752b:	70 00                	jo     752d <_end+0x1515>
    752d:	df 1b                	fistp  WORD PTR [rbx]
    752f:	00 00                	add    BYTE PTR [rax],al
    7531:	00 34 7f             	add    BYTE PTR [rdi+rdi*2],dh
    7534:	2e 00 00             	cs add BYTE PTR [rax],al
    7537:	f1                   	int1
    7538:	20 00                	and    BYTE PTR [rax],al
    753a:	00 34 7f             	add    BYTE PTR [rdi+rdi*2],dh
    753d:	2e 00 00             	cs add BYTE PTR [rax],al
    7540:	f1                   	int1
    7541:	20 00                	and    BYTE PTR [rax],al
    7543:	00 34 7f             	add    BYTE PTR [rdi+rdi*2],dh
    7546:	2e 00 00             	cs add BYTE PTR [rax],al
    7549:	f1                   	int1
    754a:	20 00                	and    BYTE PTR [rax],al
    754c:	00 34 7f             	add    BYTE PTR [rdi+rdi*2],dh
    754f:	2e 00 00             	cs add BYTE PTR [rax],al
    7552:	f1                   	int1
    7553:	20 00                	and    BYTE PTR [rax],al
    7555:	00 00                	add    BYTE PTR [rax],al
    7557:	12 04 07             	adc    al,BYTE PTR [rdi+rax*1]
    755a:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    755b:	01 00                	add    DWORD PTR [rax],eax
    755d:	00 12                	add    BYTE PTR [rdx],dl
    755f:	01 02                	add    DWORD PTR [rdx],eax
    7561:	47 05 00 00 13 ea    	rex.RXB add eax,0xea130000
    7567:	20 00                	and    BYTE PTR [rax],al
    7569:	00 75 37             	add    BYTE PTR [rbp+0x37],dh
    756c:	02 00                	add    al,BYTE PTR [rax]
    756e:	00 11                	add    BYTE PTR [rcx],dl
    7570:	57                   	push   rdi
    7571:	01 0b                	add    DWORD PTR [rbx],ecx
    7573:	7c 21                	jl     7596 <_end+0x157e>
    7575:	00 00                	add    BYTE PTR [rax],al
    7577:	3c df                	cmp    al,0xdf
    7579:	32 00                	xor    al,BYTE PTR [rax]
    757b:	00 12                	add    BYTE PTR [rdx],dl
    757d:	25 0b 02 08 cc       	and    eax,0xcc08020b
    7582:	0b c7                	or     eax,edi
    7584:	23 00                	and    eax,DWORD PTR [rax]
    7586:	00 02                	add    BYTE PTR [rdx],al
    7588:	08 dc                	or     ah,bl
    758a:	0b 2b                	or     ebp,DWORD PTR [rbx]
    758c:	30 00                	xor    BYTE PTR [rax],al
    758e:	00 02                	add    BYTE PTR [rdx],al
    7590:	08 e7                	or     bh,ah
    7592:	0b 47 30             	or     eax,DWORD PTR [rdi+0x30]
    7595:	00 00                	add    BYTE PTR [rax],al
    7597:	02 08                	add    cl,BYTE PTR [rax]
    7599:	e8 0b 5e 30 00       	call   30d3a9 <_end+0x307391>
    759e:	00 02                	add    BYTE PTR [rdx],al
    75a0:	08 e9                	or     cl,ch
    75a2:	0b 82 30 00 00 02    	or     eax,DWORD PTR [rdx+0x2000030]
    75a8:	08 eb                	or     bl,ch
    75aa:	0b a6 30 00 00 02    	or     esp,DWORD PTR [rsi+0x2000030]
    75b0:	08 ec                	or     ah,ch
    75b2:	0b c1                	or     eax,ecx
    75b4:	30 00                	xor    BYTE PTR [rax],al
    75b6:	00 1a                	add    BYTE PTR [rdx],bl
    75b8:	64 69 76 00 08 d9 dd 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1ddd908
    75bf:	01 
    75c0:	00 00                	add    BYTE PTR [rax],al
    75c2:	c7                   	(bad)
    75c3:	23 00                	and    eax,DWORD PTR [rax]
    75c5:	00 61 21             	add    BYTE PTR [rcx+0x21],ah
    75c8:	00 00                	add    BYTE PTR [rax],al
    75ca:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    75d0:	be 21 00 00 00       	mov    esi,0x21
    75d5:	02 09                	add    cl,BYTE PTR [rcx]
    75d7:	fb                   	sti
    75d8:	0b 63 3a             	or     esp,DWORD PTR [rbx+0x3a]
    75db:	00 00                	add    BYTE PTR [rax],al
    75dd:	18 09                	sbb    BYTE PTR [rcx],cl
    75df:	04 01                	add    al,0x1
    75e1:	0b 7f 3a             	or     edi,DWORD PTR [rdi+0x3a]
    75e4:	00 00                	add    BYTE PTR [rax],al
    75e6:	18 09                	sbb    BYTE PTR [rcx],cl
    75e8:	05 01 0b a4 3a       	add    eax,0x3aa40b01
    75ed:	00 00                	add    BYTE PTR [rax],al
    75ef:	00 12                	add    BYTE PTR [rdx],dl
    75f1:	01 08                	add    DWORD PTR [rax],ecx
    75f3:	24 02                	and    al,0x2
    75f5:	00 00                	add    BYTE PTR [rax],al
    75f7:	12 02                	adc    al,BYTE PTR [rdx]
    75f9:	07                   	(bad)
    75fa:	73 02                	jae    75fe <_end+0x15e6>
    75fc:	00 00                	add    BYTE PTR [rax],al
    75fe:	12 08                	adc    cl,BYTE PTR [rax]
    7600:	07                   	(bad)
    7601:	a0 01 00 00 12 08 07 	movabs al,ds:0x19b070812000001
    7608:	9b 01 
    760a:	00 00                	add    BYTE PTR [rax],al
    760c:	12 01                	adc    al,BYTE PTR [rcx]
    760e:	06                   	(bad)
    760f:	26 02 00             	es add al,BYTE PTR [rax]
    7612:	00 12                	add    BYTE PTR [rdx],dl
    7614:	02 05 05 01 00 00    	add    al,BYTE PTR [rip+0x105]        # 771f <_end+0x1707>
    761a:	76 04                	jbe    7620 <_end+0x1608>
    761c:	05 69 6e 74 00       	add    eax,0x746e69
    7621:	13 a6 21 00 00 12    	adc    esp,DWORD PTR [rsi+0x12000021]
    7627:	08 05 92 01 00 00    	or     BYTE PTR [rip+0x192],al        # 77bf <_end+0x17a7>
    762d:	13 b2 21 00 00 12    	adc    esi,DWORD PTR [rdx+0x12000021]
    7633:	08 05 8d 01 00 00    	or     BYTE PTR [rip+0x18d],al        # 77c6 <_end+0x17ae>
    7639:	12 10                	adc    dl,BYTE PTR [rax]
    763b:	04 18                	add    al,0x18
    763d:	02 00                	add    al,BYTE PTR [rax]
    763f:	00 08                	add    BYTE PTR [rax],cl
    7641:	39 27                	cmp    DWORD PTR [rdi],esp
    7643:	00 00                	add    BYTE PTR [rax],al
    7645:	13 25 15 98 21 00    	adc    esp,DWORD PTR [rip+0x219815]        # 220e60 <_end+0x21ae48>
    764b:	00 08                	add    BYTE PTR [rax],cl
    764d:	35 12 00 00 13       	xor    eax,0x13000012
    7652:	26 17                	es (bad)
    7654:	7c 21                	jl     7677 <_end+0x165f>
    7656:	00 00                	add    BYTE PTR [rax],al
    7658:	08 b2 2a 00 00 13    	or     BYTE PTR [rdx+0x1300002a],dh
    765e:	27                   	(bad)
    765f:	1a 9f 21 00 00 08    	sbb    bl,BYTE PTR [rdi+0x8000021]
    7665:	ca 17 00             	retf   0x17
    7668:	00 13                	add    BYTE PTR [rbx],dl
    766a:	28 1c 83             	sub    BYTE PTR [rbx+rax*4],bl
    766d:	21 00                	and    DWORD PTR [rax],eax
    766f:	00 08                	add    BYTE PTR [rax],cl
    7671:	b5 33                	mov    ch,0x33
    7673:	00 00                	add    BYTE PTR [rax],al
    7675:	13 29                	adc    ebp,DWORD PTR [rcx]
    7677:	14 a6                	adc    al,0xa6
    7679:	21 00                	and    DWORD PTR [rax],eax
    767b:	00 08                	add    BYTE PTR [rax],cl
    767d:	53                   	push   rbx
    767e:	01 00                	add    DWORD PTR [rax],eax
    7680:	00 13                	add    BYTE PTR [rbx],dl
    7682:	2a 16                	sub    dl,BYTE PTR [rsi]
    7684:	e3 20                	jrcxz  76a6 <_end+0x168e>
    7686:	00 00                	add    BYTE PTR [rax],al
    7688:	08 ab 30 00 00 13    	or     BYTE PTR [rbx+0x13000030],ch
    768e:	2c 19                	sub    al,0x19
    7690:	b2 21                	mov    dl,0x21
    7692:	00 00                	add    BYTE PTR [rax],al
    7694:	08 d3                	or     bl,dl
    7696:	05 00 00 13 2d       	add    eax,0x2d130000
    769b:	1b 8a 21 00 00 08    	sbb    ecx,DWORD PTR [rdx+0x8000021]
    76a1:	b1 32                	mov    cl,0x32
    76a3:	00 00                	add    BYTE PTR [rax],al
    76a5:	13 34 12             	adc    esi,DWORD PTR [rdx+rdx*1]
    76a8:	cc                   	int3
    76a9:	21 00                	and    DWORD PTR [rax],eax
    76ab:	00 08                	add    BYTE PTR [rax],cl
    76ad:	f8                   	clc
    76ae:	0d 00 00 13 35       	or     eax,0x35130000
    76b3:	13 d8                	adc    ebx,eax
    76b5:	21 00                	and    DWORD PTR [rax],eax
    76b7:	00 08                	add    BYTE PTR [rax],cl
    76b9:	5c                   	pop    rsp
    76ba:	29 00                	sub    DWORD PTR [rax],eax
    76bc:	00 13                	add    BYTE PTR [rbx],dl
    76be:	36 13 e4             	ss adc esp,esp
    76c1:	21 00                	and    DWORD PTR [rax],eax
    76c3:	00 08                	add    BYTE PTR [rax],cl
    76c5:	bc 15 00 00 13       	mov    esp,0x13000015
    76ca:	37                   	(bad)
    76cb:	14 f0                	adc    al,0xf0
    76cd:	21 00                	and    DWORD PTR [rax],eax
    76cf:	00 08                	add    BYTE PTR [rax],cl
    76d1:	57                   	push   rdi
    76d2:	32 00                	xor    al,BYTE PTR [rax]
    76d4:	00 13                	add    BYTE PTR [rbx],dl
    76d6:	38 13                	cmp    BYTE PTR [rbx],dl
    76d8:	fc                   	cld
    76d9:	21 00                	and    DWORD PTR [rax],eax
    76db:	00 08                	add    BYTE PTR [rax],cl
    76dd:	fb                   	sti
    76de:	1d 00 00 13 39       	sbb    eax,0x39130000
    76e3:	14 08                	adc    al,0x8
    76e5:	22 00                	and    al,BYTE PTR [rax]
    76e7:	00 08                	add    BYTE PTR [rax],cl
    76e9:	80 2f 00             	sub    BYTE PTR [rdi],0x0
    76ec:	00 13                	add    BYTE PTR [rbx],dl
    76ee:	3a 13                	cmp    dl,BYTE PTR [rbx]
    76f0:	14 22                	adc    al,0x22
    76f2:	00 00                	add    BYTE PTR [rax],al
    76f4:	08 34 1a             	or     BYTE PTR [rdx+rbx*1],dh
    76f7:	00 00                	add    BYTE PTR [rax],al
    76f9:	13 3b                	adc    edi,DWORD PTR [rbx]
    76fb:	14 20                	adc    al,0x20
    76fd:	22 00                	and    al,BYTE PTR [rax]
    76ff:	00 08                	add    BYTE PTR [rax],cl
    7701:	d2 23                	shl    BYTE PTR [rbx],cl
    7703:	00 00                	add    BYTE PTR [rax],al
    7705:	13 48 12             	adc    ecx,DWORD PTR [rax+0x12]
    7708:	b2 21                	mov    dl,0x21
    770a:	00 00                	add    BYTE PTR [rax],al
    770c:	08 da                	or     dl,bl
    770e:	2f                   	(bad)
    770f:	00 00                	add    BYTE PTR [rax],al
    7711:	13 49 1b             	adc    ecx,DWORD PTR [rcx+0x1b]
    7714:	8a 21                	mov    ah,BYTE PTR [rcx]
    7716:	00 00                	add    BYTE PTR [rax],al
    7718:	08 a4 0b 00 00 13 98 	or     BYTE PTR [rbx+rcx*1-0x67ed0000],ah
    771f:	19 b2 21 00 00 08    	sbb    DWORD PTR [rdx+0x8000021],esi
    7725:	88 2b                	mov    BYTE PTR [rbx],ch
    7727:	00 00                	add    BYTE PTR [rax],al
    7729:	13 99 1b b2 21 00    	adc    ebx,DWORD PTR [rcx+0x21b21b]
    772f:	00 08                	add    BYTE PTR [rax],cl
    7731:	4d 25 00 00 13 9c    	rex.WRB and rax,0xffffffff9c130000
    7737:	1b b2 21 00 00 08    	sbb    esi,DWORD PTR [rdx+0x8000021]
    773d:	9b                   	fwait
    773e:	0b 00                	or     eax,DWORD PTR [rax]
    7740:	00 13                	add    BYTE PTR [rbx],dl
    7742:	a0 1a b2 21 00 00 77 	movabs al,ds:0x80877000021b21a
    7749:	08 08 
    774b:	0e                   	(bad)
    774c:	0b 00                	or     eax,DWORD PTR [rax]
    774e:	00 13                	add    BYTE PTR [rbx],dl
    7750:	c5 21 b2             	(bad)
    7753:	21 00                	and    DWORD PTR [rax],eax
    7755:	00 0d e7 22 00 00    	add    BYTE PTR [rip+0x22e7],cl        # 9a42 <_end+0x3a2a>
    775b:	12 01                	adc    al,BYTE PTR [rcx]
    775d:	06                   	(bad)
    775e:	2d 02 00 00 13       	sub    eax,0x13000002
    7763:	e7 22                	out    0x22,eax
    7765:	00 00                	add    BYTE PTR [rax],al
    7767:	08 85 26 00 00 14    	or     BYTE PTR [rbp+0x14000026],al
    776d:	a3 0f 35 00 00 00 08 	movabs ds:0x23f308000000350f,eax
    7774:	f3 23 
    7776:	00 00                	add    BYTE PTR [rax],al
    7778:	14 a4                	adc    al,0xa4
    777a:	10 2e                	adc    BYTE PTR [rsi],ch
    777c:	00 00                	add    BYTE PTR [rax],al
    777e:	00 12                	add    BYTE PTR [rdx],dl
    7780:	04 04                	add    al,0x4
    7782:	e5 2e                	in     eax,0x2e
    7784:	00 00                	add    BYTE PTR [rax],al
    7786:	12 08                	adc    cl,BYTE PTR [rax]
    7788:	04 79                	add    al,0x79
    778a:	32 00                	xor    al,BYTE PTR [rax]
    778c:	00 12                	add    BYTE PTR [rdx],dl
    778e:	10 04 9e             	adc    BYTE PTR [rsi+rbx*4],al
    7791:	31 00                	xor    DWORD PTR [rax],eax
    7793:	00 12                	add    BYTE PTR [rdx],dl
    7795:	08 04 20             	or     BYTE PTR [rax+riz*1],al
    7798:	1a 00                	sbb    al,BYTE PTR [rax]
    779a:	00 12                	add    BYTE PTR [rdx],dl
    779c:	10 04 b4             	adc    BYTE PTR [rsp+rsi*4],al
    779f:	0c 00                	or     al,0x0
    77a1:	00 08                	add    BYTE PTR [rax],cl
    77a3:	2f                   	(bad)
    77a4:	0b 00                	or     eax,DWORD PTR [rax]
    77a6:	00 15 d6 17 8a 21    	add    BYTE PTR [rip+0x218a17d6],dl        # 218a8f82 <_end+0x218a2f6a>
    77ac:	00 00                	add    BYTE PTR [rax],al
    77ae:	35 08 16 3c 03       	xor    eax,0x33c1608
    77b3:	e3 02                	jrcxz  77b7 <_end+0x179f>
    77b5:	00 00                	add    BYTE PTR [rax],al
    77b7:	61                   	(bad)
    77b8:	23 00                	and    eax,DWORD PTR [rax]
    77ba:	00 06                	add    BYTE PTR [rsi],al
    77bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    77bd:	02 00                	add    al,BYTE PTR [rax]
    77bf:	00 16                	add    BYTE PTR [rsi],dl
    77c1:	3d 09 a6 21 00       	cmp    eax,0x21a609
    77c6:	00 00                	add    BYTE PTR [rax],al
    77c8:	45 72 65             	rex.RB jb 7830 <_end+0x1818>
    77cb:	6d                   	ins    DWORD PTR es:[rdi],dx
    77cc:	00 3e                	add    BYTE PTR [rsi],bh
    77ce:	09 a6 21 00 00 04    	or     DWORD PTR [rsi+0x4000021],esp
    77d4:	00 08                	add    BYTE PTR [rax],cl
    77d6:	e4 02                	in     al,0x2
    77d8:	00 00                	add    BYTE PTR [rax],al
    77da:	16                   	(bad)
    77db:	3f                   	(bad)
    77dc:	05 3a 23 00 00       	add    eax,0x233a
    77e1:	35 10 16 44 03       	xor    eax,0x3441610
    77e6:	09 00                	or     DWORD PTR [rax],eax
    77e8:	00 00                	add    BYTE PTR [rax],al
    77ea:	94                   	xchg   esp,eax
    77eb:	23 00                	and    eax,DWORD PTR [rax]
    77ed:	00 06                	add    BYTE PTR [rsi],al
    77ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    77f0:	02 00                	add    al,BYTE PTR [rax]
    77f2:	00 16                	add    BYTE PTR [rsi],dl
    77f4:	45 0e                	rex.RB (bad)
    77f6:	b2 21                	mov    dl,0x21
    77f8:	00 00                	add    BYTE PTR [rax],al
    77fa:	00 45 72             	add    BYTE PTR [rbp+0x72],al
    77fd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    77ff:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    7802:	b2 21                	mov    dl,0x21
    7804:	00 00                	add    BYTE PTR [rax],al
    7806:	08 00                	or     BYTE PTR [rax],al
    7808:	08 0a                	or     BYTE PTR [rdx],cl
    780a:	00 00                	add    BYTE PTR [rax],al
    780c:	00 16                	add    BYTE PTR [rsi],dl
    780e:	47 05 6d 23 00 00    	rex.RXB add eax,0x236d
    7814:	35 10 16 4e 03       	xor    eax,0x34e1610
    7819:	d4                   	(bad)
    781a:	01 00                	add    DWORD PTR [rax],eax
    781c:	00 c7                	add    bh,al
    781e:	23 00                	and    eax,DWORD PTR [rax]
    7820:	00 06                	add    BYTE PTR [rsi],al
    7822:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7823:	02 00                	add    al,BYTE PTR [rax]
    7825:	00 16                	add    BYTE PTR [rsi],dl
    7827:	4f 13 be 21 00 00 00 	rex.WRXB adc r15,QWORD PTR [r14+0x21]
    782e:	45 72 65             	rex.RB jb 7896 <_end+0x187e>
    7831:	6d                   	ins    DWORD PTR es:[rdi],dx
    7832:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    7835:	be 21 00 00 08       	mov    esi,0x8000021
    783a:	00 08                	add    BYTE PTR [rax],cl
    783c:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
    7840:	16                   	(bad)
    7841:	51                   	push   rcx
    7842:	05 a0 23 00 00       	add    eax,0x23a0
    7847:	0d ee 22 00 00       	or     eax,0x22ee
    784c:	57                   	push   rdi
    784d:	d3 23                	shl    DWORD PTR [rbx],cl
    784f:	00 00                	add    BYTE PTR [rax],al
    7851:	08 4f 25             	or     BYTE PTR [rdi+0x25],cl
    7854:	00 00                	add    BYTE PTR [rax],al
    7856:	17                   	(bad)
    7857:	07                   	(bad)
    7858:	13 bc 22 00 00 08 9d 	adc    edi,DWORD PTR [rdx+riz*1-0x62f80000]
    785f:	0b 00                	or     eax,DWORD PTR [rax]
    7861:	00 18                	add    BYTE PTR [rax],bl
    7863:	0a 12                	or     dl,BYTE PTR [rdx]
    7865:	c8 22 00 00          	enter  0x22,0x0
    7869:	13 e9                	adc    ebp,ecx
    786b:	23 00                	and    eax,DWORD PTR [rax]
    786d:	00 08                	add    BYTE PTR [rax],cl
    786f:	3b 27                	cmp    esp,DWORD PTR [rdi]
    7871:	00 00                	add    BYTE PTR [rax],al
    7873:	19 18                	sbb    DWORD PTR [rax],ebx
    7875:	12 cc                	adc    cl,ah
    7877:	21 00                	and    DWORD PTR [rax],eax
    7879:	00 08                	add    BYTE PTR [rax],cl
    787b:	b4 2a                	mov    ah,0x2a
    787d:	00 00                	add    BYTE PTR [rax],al
    787f:	19 19                	sbb    DWORD PTR [rcx],ebx
    7881:	13 e4                	adc    esp,esp
    7883:	21 00                	and    DWORD PTR [rax],eax
    7885:	00 08                	add    BYTE PTR [rax],cl
    7887:	b7 33                	mov    bh,0x33
    7889:	00 00                	add    BYTE PTR [rax],al
    788b:	19 1a                	sbb    DWORD PTR [rdx],ebx
    788d:	13 fc                	adc    edi,esp
    788f:	21 00                	and    DWORD PTR [rax],eax
    7891:	00 08                	add    BYTE PTR [rax],cl
    7893:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    7894:	30 00                	xor    BYTE PTR [rax],al
    7896:	00 19                	add    BYTE PTR [rcx],bl
    7898:	1b 13                	sbb    edx,DWORD PTR [rbx]
    789a:	14 22                	adc    al,0x22
    789c:	00 00                	add    BYTE PTR [rax],al
    789e:	1b 68 0b             	sbb    ebp,DWORD PTR [rax+0xb]
    78a1:	00 00                	add    BYTE PTR [rax],al
    78a3:	10 1a                	adc    BYTE PTR [rdx],bl
    78a5:	0b 08                	or     ecx,DWORD PTR [rax]
    78a7:	52                   	push   rdx
    78a8:	24 00                	and    al,0x0
    78aa:	00 06                	add    BYTE PTR [rsi],al
    78ac:	07                   	(bad)
    78ad:	0b 00                	or     eax,DWORD PTR [rax]
    78af:	00 1a                	add    BYTE PTR [rdx],bl
    78b1:	10 0c c8             	adc    BYTE PTR [rax+rcx*8],cl
    78b4:	22 00                	and    al,BYTE PTR [rax]
    78b6:	00 00                	add    BYTE PTR [rax],al
    78b8:	06                   	(bad)
    78b9:	f7 0a 00 00 1a 15    	test   DWORD PTR [rdx],0x151a0000
    78bf:	15 d6 22 00 00       	adc    eax,0x22d6
    78c4:	08 00                	or     BYTE PTR [rax],al
    78c6:	22 e7                	and    ah,bh
    78c8:	22 00                	and    al,BYTE PTR [rax]
    78ca:	00 62 24             	add    BYTE PTR [rdx+0x24],ah
    78cd:	00 00                	add    BYTE PTR [rax],al
    78cf:	23 8a 21 00 00 03    	and    ecx,DWORD PTR [rdx+0x3000021]
    78d5:	00 41 d5             	add    BYTE PTR [rcx-0x2b],al
    78d8:	02 00                	add    al,BYTE PTR [rax]
    78da:	00 16                	add    BYTE PTR [rsi],dl
    78dc:	b4 03                	mov    ah,0x3
    78de:	0f 6f 24 00          	movq   mm4,QWORD PTR [rax+rax*1]
    78e2:	00 0d 74 24 00 00    	add    BYTE PTR [rip+0x2474],cl        # 9d5c <_end+0x3d44>
    78e8:	58                   	pop    rax
    78e9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    78ea:	21 00                	and    DWORD PTR [rax],eax
    78ec:	00 88 24 00 00 01    	add    BYTE PTR [rax+0x1000024],cl
    78f2:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    78f5:	00 01                	add    BYTE PTR [rcx],al
    78f7:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    78fa:	00 00                	add    BYTE PTR [rax],al
    78fc:	0d 8d 24 00 00       	or     eax,0x248d
    7901:	78 12                	js     7915 <_end+0x18fd>
    7903:	10 07                	adc    BYTE PTR [rdi],al
    7905:	34 08                	xor    al,0x8
    7907:	00 00                	add    BYTE PTR [rax],al
    7909:	12 10                	adc    dl,BYTE PTR [rax]
    790b:	05 0f 02 00 00       	add    eax,0x20f
    7910:	12 04 05 86 02 00 00 	adc    al,BYTE PTR [rax*1+0x286]
    7917:	13 9c 24 00 00 12 02 	adc    ebx,DWORD PTR [rsp+0x2120000]
    791e:	10 82 32 00 00 12    	adc    BYTE PTR [rdx+0x12000032],al
    7924:	04 10                	add    al,0x10
    7926:	a0 2c 00 00 33 ef 1d 	movabs al,ds:0x1def3300002c
    792d:	00 00 
    792f:	06                   	(bad)
    7930:	38 0b                	cmp    BYTE PTR [rbx],cl
    7932:	cb                   	retf
    7933:	24 00                	and    al,0x0
    7935:	00 79 06             	add    BYTE PTR [rcx+0x6],bh
    7938:	3a 18                	cmp    bl,BYTE PTR [rax]
    793a:	69 00 00 00 00 12    	imul   eax,DWORD PTR [rax],0x12000000
    7940:	10 04 a4             	adc    BYTE PTR [rsp+riz*4],al
    7943:	02 00                	add    al,BYTE PTR [rax]
    7945:	00 02                	add    BYTE PTR [rdx],al
    7947:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7949:	0c 71                	or     al,0x71
    794b:	00 00                	add    BYTE PTR [rax],al
    794d:	00 02                	add    BYTE PTR [rdx],al
    794f:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7951:	0c 8a                	or     al,0x8a
    7953:	00 00                	add    BYTE PTR [rax],al
    7955:	00 02                	add    BYTE PTR [rdx],al
    7957:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7959:	0c a3                	or     al,0xa3
    795b:	00 00                	add    BYTE PTR [rax],al
    795d:	00 02                	add    BYTE PTR [rdx],al
    795f:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7961:	0c bc                	or     al,0xbc
    7963:	00 00                	add    BYTE PTR [rax],al
    7965:	00 02                	add    BYTE PTR [rdx],al
    7967:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7969:	0c d5                	or     al,0xd5
    796b:	00 00                	add    BYTE PTR [rax],al
    796d:	00 02                	add    BYTE PTR [rdx],al
    796f:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7971:	0c ee                	or     al,0xee
    7973:	00 00                	add    BYTE PTR [rax],al
    7975:	00 02                	add    BYTE PTR [rdx],al
    7977:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7979:	0c 07                	or     al,0x7
    797b:	01 00                	add    DWORD PTR [rax],eax
    797d:	00 02                	add    BYTE PTR [rdx],al
    797f:	1b 27                	sbb    esp,DWORD PTR [rdi]
    7981:	0c 20                	or     al,0x20
    7983:	01 00                	add    DWORD PTR [rax],eax
    7985:	00 02                	add    BYTE PTR [rdx],al
    7987:	1b 27                	sbb    esp,DWORD PTR [rdi]
    7989:	0c 3a                	or     al,0x3a
    798b:	01 00                	add    DWORD PTR [rax],eax
    798d:	00 02                	add    BYTE PTR [rdx],al
    798f:	1b 28                	sbb    ebp,DWORD PTR [rax]
    7991:	0c 54                	or     al,0x54
    7993:	01 00                	add    DWORD PTR [rax],eax
    7995:	00 02                	add    BYTE PTR [rdx],al
    7997:	1b 28                	sbb    ebp,DWORD PTR [rax]
    7999:	0c 6e                	or     al,0x6e
    799b:	01 00                	add    DWORD PTR [rax],eax
    799d:	00 02                	add    BYTE PTR [rdx],al
    799f:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    79a1:	0c 88                	or     al,0x88
    79a3:	01 00                	add    DWORD PTR [rax],eax
    79a5:	00 02                	add    BYTE PTR [rdx],al
    79a7:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    79a9:	0c a2                	or     al,0xa2
    79ab:	01 00                	add    DWORD PTR [rax],eax
    79ad:	00 02                	add    BYTE PTR [rdx],al
    79af:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    79b1:	0c bc                	or     al,0xbc
    79b3:	01 00                	add    DWORD PTR [rax],eax
    79b5:	00 02                	add    BYTE PTR [rdx],al
    79b7:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    79b9:	0c db                	or     al,0xdb
    79bb:	01 00                	add    DWORD PTR [rax],eax
    79bd:	00 02                	add    BYTE PTR [rdx],al
    79bf:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    79c1:	0c fa                	or     al,0xfa
    79c3:	01 00                	add    DWORD PTR [rax],eax
    79c5:	00 02                	add    BYTE PTR [rdx],al
    79c7:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    79c9:	0c 13                	or     al,0x13
    79cb:	02 00                	add    al,BYTE PTR [rax]
    79cd:	00 02                	add    BYTE PTR [rdx],al
    79cf:	1b 2c 0c             	sbb    ebp,DWORD PTR [rsp+rcx*1]
    79d2:	2c 02                	sub    al,0x2
    79d4:	00 00                	add    BYTE PTR [rax],al
    79d6:	02 1b                	add    bl,BYTE PTR [rbx]
    79d8:	2c 0c                	sub    al,0xc
    79da:	45 02 00             	add    r8b,BYTE PTR [r8]
    79dd:	00 02                	add    BYTE PTR [rdx],al
    79df:	1b 2d 0c 5e 02 00    	sbb    ebp,DWORD PTR [rip+0x25e0c]        # 2d7f1 <_end+0x277d9>
    79e5:	00 02                	add    BYTE PTR [rdx],al
    79e7:	1b 2d 0c 77 02 00    	sbb    ebp,DWORD PTR [rip+0x2770c]        # 2f0f9 <_end+0x290e1>
    79ed:	00 02                	add    BYTE PTR [rdx],al
    79ef:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    79f1:	0c 90                	or     al,0x90
    79f3:	02 00                	add    al,BYTE PTR [rax]
    79f5:	00 02                	add    BYTE PTR [rdx],al
    79f7:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    79f9:	0c aa                	or     al,0xaa
    79fb:	02 00                	add    al,BYTE PTR [rax]
    79fd:	00 02                	add    BYTE PTR [rdx],al
    79ff:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7a01:	0c c4                	or     al,0xc4
    7a03:	02 00                	add    al,BYTE PTR [rax]
    7a05:	00 02                	add    BYTE PTR [rdx],al
    7a07:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7a09:	0c df                	or     al,0xdf
    7a0b:	02 00                	add    al,BYTE PTR [rax]
    7a0d:	00 02                	add    BYTE PTR [rdx],al
    7a0f:	1b 30                	sbb    esi,DWORD PTR [rax]
    7a11:	0c fa                	or     al,0xfa
    7a13:	02 00                	add    al,BYTE PTR [rax]
    7a15:	00 02                	add    BYTE PTR [rdx],al
    7a17:	1b 30                	sbb    esi,DWORD PTR [rax]
    7a19:	0c 15                	or     al,0x15
    7a1b:	03 00                	add    eax,DWORD PTR [rax]
    7a1d:	00 02                	add    BYTE PTR [rdx],al
    7a1f:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7a21:	0c 30                	or     al,0x30
    7a23:	03 00                	add    eax,DWORD PTR [rax]
    7a25:	00 02                	add    BYTE PTR [rdx],al
    7a27:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7a29:	0c 49                	or     al,0x49
    7a2b:	03 00                	add    eax,DWORD PTR [rax]
    7a2d:	00 0d a6 21 00 00    	add    BYTE PTR [rip+0x21a6],cl        # 9bd9 <_end+0x3bc1>
    7a33:	02 1b                	add    bl,BYTE PTR [rbx]
    7a35:	32 0c 62             	xor    cl,BYTE PTR [rdx+riz*2]
    7a38:	03 00                	add    eax,DWORD PTR [rax]
    7a3a:	00 02                	add    BYTE PTR [rdx],al
    7a3c:	1b 32                	sbb    esi,DWORD PTR [rdx]
    7a3e:	0c 82                	or     al,0x82
    7a40:	03 00                	add    eax,DWORD PTR [rax]
    7a42:	00 02                	add    BYTE PTR [rdx],al
    7a44:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7a46:	0c a2                	or     al,0xa2
    7a48:	03 00                	add    eax,DWORD PTR [rax]
    7a4a:	00 02                	add    BYTE PTR [rdx],al
    7a4c:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7a4e:	0c c2                	or     al,0xc2
    7a50:	03 00                	add    eax,DWORD PTR [rax]
    7a52:	00 02                	add    BYTE PTR [rdx],al
    7a54:	1b 34 0c             	sbb    esi,DWORD PTR [rsp+rcx*1]
    7a57:	e2 03                	loop   7a5c <_end+0x1a44>
    7a59:	00 00                	add    BYTE PTR [rax],al
    7a5b:	02 1b                	add    bl,BYTE PTR [rbx]
    7a5d:	34 0c                	xor    al,0xc
    7a5f:	fb                   	sti
    7a60:	03 00                	add    eax,DWORD PTR [rax]
    7a62:	00 02                	add    BYTE PTR [rdx],al
    7a64:	1b 35 0c 14 04 00    	sbb    esi,DWORD PTR [rip+0x4140c]        # 48e76 <_end+0x42e5e>
    7a6a:	00 02                	add    BYTE PTR [rdx],al
    7a6c:	1b 35 0c 2f 04 00    	sbb    esi,DWORD PTR [rip+0x42f0c]        # 4a97e <_end+0x44966>
    7a72:	00 0d c5 21 00 00    	add    BYTE PTR [rip+0x21c5],cl        # 9c3d <_end+0x3c25>
    7a78:	02 1b                	add    bl,BYTE PTR [rbx]
    7a7a:	36 0c 4a             	ss or  al,0x4a
    7a7d:	04 00                	add    al,0x0
    7a7f:	00 0d 35 00 00 00    	add    BYTE PTR [rip+0x35],cl        # 7aba <_end+0x1aa2>
    7a85:	02 1b                	add    bl,BYTE PTR [rbx]
    7a87:	36 0c 6a             	ss or  al,0x6a
    7a8a:	04 00                	add    al,0x0
    7a8c:	00 02                	add    BYTE PTR [rdx],al
    7a8e:	1b 37                	sbb    esi,DWORD PTR [rdi]
    7a90:	0c 8a                	or     al,0x8a
    7a92:	04 00                	add    al,0x0
    7a94:	00 02                	add    BYTE PTR [rdx],al
    7a96:	1b 37                	sbb    esi,DWORD PTR [rdi]
    7a98:	0c a8                	or     al,0xa8
    7a9a:	04 00                	add    al,0x0
    7a9c:	00 02                	add    BYTE PTR [rdx],al
    7a9e:	1b 38                	sbb    edi,DWORD PTR [rax]
    7aa0:	0c c6                	or     al,0xc6
    7aa2:	04 00                	add    al,0x0
    7aa4:	00 02                	add    BYTE PTR [rdx],al
    7aa6:	1b 38                	sbb    edi,DWORD PTR [rax]
    7aa8:	0c e1                	or     al,0xe1
    7aaa:	04 00                	add    al,0x0
    7aac:	00 02                	add    BYTE PTR [rdx],al
    7aae:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7ab0:	0c fc                	or     al,0xfc
    7ab2:	04 00                	add    al,0x0
    7ab4:	00 02                	add    BYTE PTR [rdx],al
    7ab6:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7ab8:	0c 16                	or     al,0x16
    7aba:	05 00 00 02 1b       	add    eax,0x1b020000
    7abf:	3a 0c 30             	cmp    cl,BYTE PTR [rax+rsi*1]
    7ac2:	05 00 00 02 1b       	add    eax,0x1b020000
    7ac7:	3a 0c 4a             	cmp    cl,BYTE PTR [rdx+rcx*2]
    7aca:	05 00 00 02 1b       	add    eax,0x1b020000
    7acf:	3b 0c 64             	cmp    ecx,DWORD PTR [rsp+riz*2]
    7ad2:	05 00 00 02 1b       	add    eax,0x1b020000
    7ad7:	3b 0c 7f             	cmp    ecx,DWORD PTR [rdi+rdi*2]
    7ada:	05 00 00 02 1b       	add    eax,0x1b020000
    7adf:	3c 0c                	cmp    al,0xc
    7ae1:	99                   	cdq
    7ae2:	05 00 00 02 1b       	add    eax,0x1b020000
    7ae7:	3c 0c                	cmp    al,0xc
    7ae9:	b9 05 00 00 02       	mov    ecx,0x2000005
    7aee:	1b 3f                	sbb    edi,DWORD PTR [rdi]
    7af0:	0c d9                	or     al,0xd9
    7af2:	05 00 00 02 1b       	add    eax,0x1b020000
    7af7:	3f                   	(bad)
    7af8:	0c f4                	or     al,0xf4
    7afa:	05 00 00 02 1b       	add    eax,0x1b020000
    7aff:	3f                   	(bad)
    7b00:	0c 0f                	or     al,0xf
    7b02:	06                   	(bad)
    7b03:	00 00                	add    BYTE PTR [rax],al
    7b05:	02 1b                	add    bl,BYTE PTR [rbx]
    7b07:	40 0c 2a             	rex or al,0x2a
    7b0a:	06                   	(bad)
    7b0b:	00 00                	add    BYTE PTR [rax],al
    7b0d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b0f:	40 0c 45             	rex or al,0x45
    7b12:	06                   	(bad)
    7b13:	00 00                	add    BYTE PTR [rax],al
    7b15:	02 1b                	add    bl,BYTE PTR [rbx]
    7b17:	40 0c 60             	rex or al,0x60
    7b1a:	06                   	(bad)
    7b1b:	00 00                	add    BYTE PTR [rax],al
    7b1d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b1f:	41 0c 7b             	rex.B or al,0x7b
    7b22:	06                   	(bad)
    7b23:	00 00                	add    BYTE PTR [rax],al
    7b25:	02 1b                	add    bl,BYTE PTR [rbx]
    7b27:	41 0c 96             	rex.B or al,0x96
    7b2a:	06                   	(bad)
    7b2b:	00 00                	add    BYTE PTR [rax],al
    7b2d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b2f:	41 0c b1             	rex.B or al,0xb1
    7b32:	06                   	(bad)
    7b33:	00 00                	add    BYTE PTR [rax],al
    7b35:	02 1b                	add    bl,BYTE PTR [rbx]
    7b37:	42 0c cc             	rex.X or al,0xcc
    7b3a:	06                   	(bad)
    7b3b:	00 00                	add    BYTE PTR [rax],al
    7b3d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b3f:	42 0c e7             	rex.X or al,0xe7
    7b42:	06                   	(bad)
    7b43:	00 00                	add    BYTE PTR [rax],al
    7b45:	02 1b                	add    bl,BYTE PTR [rbx]
    7b47:	42 0c 02             	rex.X or al,0x2
    7b4a:	07                   	(bad)
    7b4b:	00 00                	add    BYTE PTR [rax],al
    7b4d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b4f:	43 0c 1d             	rex.XB or al,0x1d
    7b52:	07                   	(bad)
    7b53:	00 00                	add    BYTE PTR [rax],al
    7b55:	02 1b                	add    bl,BYTE PTR [rbx]
    7b57:	43 0c 38             	rex.XB or al,0x38
    7b5a:	07                   	(bad)
    7b5b:	00 00                	add    BYTE PTR [rax],al
    7b5d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b5f:	43 0c 53             	rex.XB or al,0x53
    7b62:	07                   	(bad)
    7b63:	00 00                	add    BYTE PTR [rax],al
    7b65:	02 1b                	add    bl,BYTE PTR [rbx]
    7b67:	44 0c 6e             	rex.R or al,0x6e
    7b6a:	07                   	(bad)
    7b6b:	00 00                	add    BYTE PTR [rax],al
    7b6d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b6f:	44 0c 89             	rex.R or al,0x89
    7b72:	07                   	(bad)
    7b73:	00 00                	add    BYTE PTR [rax],al
    7b75:	02 1b                	add    bl,BYTE PTR [rbx]
    7b77:	44 0c a4             	rex.R or al,0xa4
    7b7a:	07                   	(bad)
    7b7b:	00 00                	add    BYTE PTR [rax],al
    7b7d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b7f:	45 0c bf             	rex.RB or al,0xbf
    7b82:	07                   	(bad)
    7b83:	00 00                	add    BYTE PTR [rax],al
    7b85:	02 1b                	add    bl,BYTE PTR [rbx]
    7b87:	45 0c df             	rex.RB or al,0xdf
    7b8a:	07                   	(bad)
    7b8b:	00 00                	add    BYTE PTR [rax],al
    7b8d:	02 1b                	add    bl,BYTE PTR [rbx]
    7b8f:	45 0c ff             	rex.RB or al,0xff
    7b92:	07                   	(bad)
    7b93:	00 00                	add    BYTE PTR [rax],al
    7b95:	02 1b                	add    bl,BYTE PTR [rbx]
    7b97:	46 0c 1f             	rex.RX or al,0x1f
    7b9a:	08 00                	or     BYTE PTR [rax],al
    7b9c:	00 02                	add    BYTE PTR [rdx],al
    7b9e:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7ba1:	3f                   	(bad)
    7ba2:	08 00                	or     BYTE PTR [rax],al
    7ba4:	00 02                	add    BYTE PTR [rdx],al
    7ba6:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7ba9:	5f                   	pop    rdi
    7baa:	08 00                	or     BYTE PTR [rax],al
    7bac:	00 02                	add    BYTE PTR [rdx],al
    7bae:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7bb1:	7f 08                	jg     7bbb <_end+0x1ba3>
    7bb3:	00 00                	add    BYTE PTR [rax],al
    7bb5:	02 1b                	add    bl,BYTE PTR [rbx]
    7bb7:	47 0c 9f             	rex.RXB or al,0x9f
    7bba:	08 00                	or     BYTE PTR [rax],al
    7bbc:	00 02                	add    BYTE PTR [rdx],al
    7bbe:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7bc1:	bf 08 00 00 02       	mov    edi,0x2000008
    7bc6:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7bc9:	df 08                	fisttp WORD PTR [rax]
    7bcb:	00 00                	add    BYTE PTR [rax],al
    7bcd:	02 1b                	add    bl,BYTE PTR [rbx]
    7bcf:	48 0c ff             	rex.W or al,0xff
    7bd2:	08 00                	or     BYTE PTR [rax],al
    7bd4:	00 02                	add    BYTE PTR [rdx],al
    7bd6:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7bd9:	1f                   	(bad)
    7bda:	09 00                	or     DWORD PTR [rax],eax
    7bdc:	00 02                	add    BYTE PTR [rdx],al
    7bde:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7be1:	3f                   	(bad)
    7be2:	09 00                	or     DWORD PTR [rax],eax
    7be4:	00 02                	add    BYTE PTR [rdx],al
    7be6:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7be9:	5f                   	pop    rdi
    7bea:	09 00                	or     DWORD PTR [rax],eax
    7bec:	00 02                	add    BYTE PTR [rdx],al
    7bee:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7bf1:	7f 09                	jg     7bfc <_end+0x1be4>
    7bf3:	00 00                	add    BYTE PTR [rax],al
    7bf5:	02 1b                	add    bl,BYTE PTR [rbx]
    7bf7:	4a 0c 9f             	rex.WX or al,0x9f
    7bfa:	09 00                	or     DWORD PTR [rax],eax
    7bfc:	00 02                	add    BYTE PTR [rdx],al
    7bfe:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7c01:	bf 09 00 00 02       	mov    edi,0x2000009
    7c06:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7c09:	df 09                	fisttp WORD PTR [rcx]
    7c0b:	00 00                	add    BYTE PTR [rax],al
    7c0d:	02 1b                	add    bl,BYTE PTR [rbx]
    7c0f:	4e 0c ff             	rex.WRX or al,0xff
    7c12:	09 00                	or     DWORD PTR [rax],eax
    7c14:	00 02                	add    BYTE PTR [rdx],al
    7c16:	1b 4e 0c             	sbb    ecx,DWORD PTR [rsi+0xc]
    7c19:	1a 0a                	sbb    cl,BYTE PTR [rdx]
    7c1b:	00 00                	add    BYTE PTR [rax],al
    7c1d:	02 1b                	add    bl,BYTE PTR [rbx]
    7c1f:	4f 0c 35             	rex.WRXB or al,0x35
    7c22:	0a 00                	or     al,BYTE PTR [rax]
    7c24:	00 02                	add    BYTE PTR [rdx],al
    7c26:	1b 4f 0c             	sbb    ecx,DWORD PTR [rdi+0xc]
    7c29:	50                   	push   rax
    7c2a:	0a 00                	or     al,BYTE PTR [rax]
    7c2c:	00 02                	add    BYTE PTR [rdx],al
    7c2e:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7c31:	6b 0a 00             	imul   ecx,DWORD PTR [rdx],0x0
    7c34:	00 02                	add    BYTE PTR [rdx],al
    7c36:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7c39:	86 0a                	xchg   BYTE PTR [rdx],cl
    7c3b:	00 00                	add    BYTE PTR [rax],al
    7c3d:	02 1b                	add    bl,BYTE PTR [rbx]
    7c3f:	51                   	push   rcx
    7c40:	0c a1                	or     al,0xa1
    7c42:	0a 00                	or     al,BYTE PTR [rax]
    7c44:	00 02                	add    BYTE PTR [rdx],al
    7c46:	1b 51 0c             	sbb    edx,DWORD PTR [rcx+0xc]
    7c49:	bc 0a 00 00 02       	mov    esp,0x200000a
    7c4e:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7c51:	d7                   	xlat   BYTE PTR ds:[rbx]
    7c52:	0a 00                	or     al,BYTE PTR [rax]
    7c54:	00 02                	add    BYTE PTR [rdx],al
    7c56:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7c59:	f7 0a 00 00 02 1b    	test   DWORD PTR [rdx],0x1b020000
    7c5f:	53                   	push   rbx
    7c60:	0c 17                	or     al,0x17
    7c62:	0b 00                	or     eax,DWORD PTR [rax]
    7c64:	00 02                	add    BYTE PTR [rdx],al
    7c66:	1b 53 0c             	sbb    edx,DWORD PTR [rbx+0xc]
    7c69:	30 0b                	xor    BYTE PTR [rbx],cl
    7c6b:	00 00                	add    BYTE PTR [rax],al
    7c6d:	02 1b                	add    bl,BYTE PTR [rbx]
    7c6f:	54                   	push   rsp
    7c70:	0c 49                	or     al,0x49
    7c72:	0b 00                	or     eax,DWORD PTR [rax]
    7c74:	00 02                	add    BYTE PTR [rdx],al
    7c76:	1b 54 0c 64          	sbb    edx,DWORD PTR [rsp+rcx*1+0x64]
    7c7a:	0b 00                	or     eax,DWORD PTR [rax]
    7c7c:	00 02                	add    BYTE PTR [rdx],al
    7c7e:	1b 55 0c             	sbb    edx,DWORD PTR [rbp+0xc]
    7c81:	7f 0b                	jg     7c8e <_end+0x1c76>
    7c83:	00 00                	add    BYTE PTR [rax],al
    7c85:	02 1b                	add    bl,BYTE PTR [rbx]
    7c87:	55                   	push   rbp
    7c88:	0c 9a                	or     al,0x9a
    7c8a:	0b 00                	or     eax,DWORD PTR [rax]
    7c8c:	00 02                	add    BYTE PTR [rdx],al
    7c8e:	1b 56 0c             	sbb    edx,DWORD PTR [rsi+0xc]
    7c91:	b5 0b                	mov    ch,0xb
    7c93:	00 00                	add    BYTE PTR [rax],al
    7c95:	02 1b                	add    bl,BYTE PTR [rbx]
    7c97:	56                   	push   rsi
    7c98:	0c d0                	or     al,0xd0
    7c9a:	0b 00                	or     eax,DWORD PTR [rax]
    7c9c:	00 02                	add    BYTE PTR [rdx],al
    7c9e:	1b 57 0c             	sbb    edx,DWORD PTR [rdi+0xc]
    7ca1:	eb 0b                	jmp    7cae <_end+0x1c96>
    7ca3:	00 00                	add    BYTE PTR [rax],al
    7ca5:	02 1b                	add    bl,BYTE PTR [rbx]
    7ca7:	57                   	push   rdi
    7ca8:	0c 0b                	or     al,0xb
    7caa:	0c 00                	or     al,0x0
    7cac:	00 02                	add    BYTE PTR [rdx],al
    7cae:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7cb1:	2b 0c 00             	sub    ecx,DWORD PTR [rax+rax*1]
    7cb4:	00 02                	add    BYTE PTR [rdx],al
    7cb6:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7cb9:	4e 0c 00             	rex.WRX or al,0x0
    7cbc:	00 02                	add    BYTE PTR [rdx],al
    7cbe:	1b 59 0c             	sbb    ebx,DWORD PTR [rcx+0xc]
    7cc1:	71 0c                	jno    7ccf <_end+0x1cb7>
    7cc3:	00 00                	add    BYTE PTR [rax],al
    7cc5:	02 1b                	add    bl,BYTE PTR [rbx]
    7cc7:	59                   	pop    rcx
    7cc8:	0c 91                	or     al,0x91
    7cca:	0c 00                	or     al,0x0
    7ccc:	00 02                	add    BYTE PTR [rdx],al
    7cce:	1b 5a 0c             	sbb    ebx,DWORD PTR [rdx+0xc]
    7cd1:	b1 0c                	mov    cl,0xc
    7cd3:	00 00                	add    BYTE PTR [rax],al
    7cd5:	02 1b                	add    bl,BYTE PTR [rbx]
    7cd7:	5a                   	pop    rdx
    7cd8:	0c d1                	or     al,0xd1
    7cda:	0c 00                	or     al,0x0
    7cdc:	00 02                	add    BYTE PTR [rdx],al
    7cde:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7ce1:	f1                   	int1
    7ce2:	0c 00                	or     al,0x0
    7ce4:	00 02                	add    BYTE PTR [rdx],al
    7ce6:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7ce9:	16                   	(bad)
    7cea:	0d 00 00 02 1b       	or     eax,0x1b020000
    7cef:	5b                   	pop    rbx
    7cf0:	0c 3b                	or     al,0x3b
    7cf2:	0d 00 00 02 1b       	or     eax,0x1b020000
    7cf7:	5b                   	pop    rbx
    7cf8:	0c 60                	or     al,0x60
    7cfa:	0d 00 00 02 1b       	or     eax,0x1b020000
    7cff:	5b                   	pop    rbx
    7d00:	0c 80                	or     al,0x80
    7d02:	0d 00 00 02 1b       	or     eax,0x1b020000
    7d07:	5c                   	pop    rsp
    7d08:	0c a0                	or     al,0xa0
    7d0a:	0d 00 00 02 1b       	or     eax,0x1b020000
    7d0f:	5c                   	pop    rsp
    7d10:	0c bb                	or     al,0xbb
    7d12:	0d 00 00 02 1b       	or     eax,0x1b020000
    7d17:	5d                   	pop    rbp
    7d18:	0c d6                	or     al,0xd6
    7d1a:	0d 00 00 02 1b       	or     eax,0x1b020000
    7d1f:	5d                   	pop    rbp
    7d20:	0c f1                	or     al,0xf1
    7d22:	0d 00 00 02 1b       	or     eax,0x1b020000
    7d27:	5e                   	pop    rsi
    7d28:	0c 0c                	or     al,0xc
    7d2a:	0e                   	(bad)
    7d2b:	00 00                	add    BYTE PTR [rax],al
    7d2d:	02 1b                	add    bl,BYTE PTR [rbx]
    7d2f:	5e                   	pop    rsi
    7d30:	0c 27                	or     al,0x27
    7d32:	0e                   	(bad)
    7d33:	00 00                	add    BYTE PTR [rax],al
    7d35:	02 1b                	add    bl,BYTE PTR [rbx]
    7d37:	5f                   	pop    rdi
    7d38:	0c 42                	or     al,0x42
    7d3a:	0e                   	(bad)
    7d3b:	00 00                	add    BYTE PTR [rax],al
    7d3d:	02 1b                	add    bl,BYTE PTR [rbx]
    7d3f:	5f                   	pop    rdi
    7d40:	0c 5d                	or     al,0x5d
    7d42:	0e                   	(bad)
    7d43:	00 00                	add    BYTE PTR [rax],al
    7d45:	02 1b                	add    bl,BYTE PTR [rbx]
    7d47:	60                   	(bad)
    7d48:	0c 78                	or     al,0x78
    7d4a:	0e                   	(bad)
    7d4b:	00 00                	add    BYTE PTR [rax],al
    7d4d:	02 1b                	add    bl,BYTE PTR [rbx]
    7d4f:	60                   	(bad)
    7d50:	0c 93                	or     al,0x93
    7d52:	0e                   	(bad)
    7d53:	00 00                	add    BYTE PTR [rax],al
    7d55:	02 1b                	add    bl,BYTE PTR [rbx]
    7d57:	61                   	(bad)
    7d58:	0c ae                	or     al,0xae
    7d5a:	0e                   	(bad)
    7d5b:	00 00                	add    BYTE PTR [rax],al
    7d5d:	02 1b                	add    bl,BYTE PTR [rbx]
    7d5f:	61                   	(bad)
    7d60:	0c c9                	or     al,0xc9
    7d62:	0e                   	(bad)
    7d63:	00 00                	add    BYTE PTR [rax],al
    7d65:	02 1b                	add    bl,BYTE PTR [rbx]
    7d67:	62 0c e4             	(bad)  {k6}
    7d6a:	0e                   	(bad)
    7d6b:	00 00                	add    BYTE PTR [rax],al
    7d6d:	02 1b                	add    bl,BYTE PTR [rbx]
    7d6f:	62 0c ff             	(bad)  {k6}
    7d72:	0e                   	(bad)
    7d73:	00 00                	add    BYTE PTR [rax],al
    7d75:	02 1b                	add    bl,BYTE PTR [rbx]
    7d77:	63 0c 1a             	movsxd ecx,DWORD PTR [rdx+rbx*1]
    7d7a:	0f 00 00             	sldt   WORD PTR [rax]
    7d7d:	02 1b                	add    bl,BYTE PTR [rbx]
    7d7f:	63 0c 35 0f 00 00 02 	movsxd ecx,DWORD PTR [rsi*1+0x200000f]
    7d86:	1b 64 0c 50          	sbb    esp,DWORD PTR [rsp+rcx*1+0x50]
    7d8a:	0f 00 00             	sldt   WORD PTR [rax]
    7d8d:	02 1b                	add    bl,BYTE PTR [rbx]
    7d8f:	64 0c 6b             	fs or  al,0x6b
    7d92:	0f 00 00             	sldt   WORD PTR [rax]
    7d95:	02 1b                	add    bl,BYTE PTR [rbx]
    7d97:	65 0c 86             	gs or  al,0x86
    7d9a:	0f 00 00             	sldt   WORD PTR [rax]
    7d9d:	02 1b                	add    bl,BYTE PTR [rbx]
    7d9f:	65 0c a1             	gs or  al,0xa1
    7da2:	0f 00 00             	sldt   WORD PTR [rax]
    7da5:	02 1b                	add    bl,BYTE PTR [rbx]
    7da7:	66 0c bc             	data16 or al,0xbc
    7daa:	0f 00 00             	sldt   WORD PTR [rax]
    7dad:	02 1b                	add    bl,BYTE PTR [rbx]
    7daf:	66 0c dc             	data16 or al,0xdc
    7db2:	0f 00 00             	sldt   WORD PTR [rax]
    7db5:	02 1b                	add    bl,BYTE PTR [rbx]
    7db7:	67 0c fc             	addr32 or al,0xfc
    7dba:	0f 00 00             	sldt   WORD PTR [rax]
    7dbd:	02 1b                	add    bl,BYTE PTR [rbx]
    7dbf:	67 0c 1c             	addr32 or al,0x1c
    7dc2:	10 00                	adc    BYTE PTR [rax],al
    7dc4:	00 02                	add    BYTE PTR [rdx],al
    7dc6:	1b 68 0c             	sbb    ebp,DWORD PTR [rax+0xc]
    7dc9:	3c 10                	cmp    al,0x10
    7dcb:	00 00                	add    BYTE PTR [rax],al
    7dcd:	02 1b                	add    bl,BYTE PTR [rbx]
    7dcf:	68 0c 5c 10 00       	push   0x105c0c
    7dd4:	00 02                	add    BYTE PTR [rdx],al
    7dd6:	1b 69 0c             	sbb    ebp,DWORD PTR [rcx+0xc]
    7dd9:	7c 10                	jl     7deb <_end+0x1dd3>
    7ddb:	00 00                	add    BYTE PTR [rax],al
    7ddd:	02 1b                	add    bl,BYTE PTR [rbx]
    7ddf:	69 0c a1 10 00 00 02 	imul   ecx,DWORD PTR [rcx+riz*4],0x2000010
    7de6:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    7de9:	c6                   	(bad)
    7dea:	10 00                	adc    BYTE PTR [rax],al
    7dec:	00 02                	add    BYTE PTR [rdx],al
    7dee:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    7df1:	e1 10                	loope  7e03 <_end+0x1deb>
    7df3:	00 00                	add    BYTE PTR [rax],al
    7df5:	02 1b                	add    bl,BYTE PTR [rbx]
    7df7:	6b 0c fc 10          	imul   ecx,DWORD PTR [rsp+rdi*8],0x10
    7dfb:	00 00                	add    BYTE PTR [rax],al
    7dfd:	02 1b                	add    bl,BYTE PTR [rbx]
    7dff:	6b 0c 17 11          	imul   ecx,DWORD PTR [rdi+rdx*1],0x11
    7e03:	00 00                	add    BYTE PTR [rax],al
    7e05:	02 1b                	add    bl,BYTE PTR [rbx]
    7e07:	6c                   	ins    BYTE PTR es:[rdi],dx
    7e08:	0c 32                	or     al,0x32
    7e0a:	11 00                	adc    DWORD PTR [rax],eax
    7e0c:	00 02                	add    BYTE PTR [rdx],al
    7e0e:	1b 6c 0c 52          	sbb    ebp,DWORD PTR [rsp+rcx*1+0x52]
    7e12:	11 00                	adc    DWORD PTR [rax],eax
    7e14:	00 02                	add    BYTE PTR [rdx],al
    7e16:	1b 6d 0c             	sbb    ebp,DWORD PTR [rbp+0xc]
    7e19:	72 11                	jb     7e2c <_end+0x1e14>
    7e1b:	00 00                	add    BYTE PTR [rax],al
    7e1d:	02 1b                	add    bl,BYTE PTR [rbx]
    7e1f:	6d                   	ins    DWORD PTR es:[rdi],dx
    7e20:	0c 92                	or     al,0x92
    7e22:	11 00                	adc    DWORD PTR [rax],eax
    7e24:	00 02                	add    BYTE PTR [rdx],al
    7e26:	1b 6e 0c             	sbb    ebp,DWORD PTR [rsi+0xc]
    7e29:	b2 11                	mov    dl,0x11
    7e2b:	00 00                	add    BYTE PTR [rax],al
    7e2d:	02 1b                	add    bl,BYTE PTR [rbx]
    7e2f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7e30:	0c cd                	or     al,0xcd
    7e32:	11 00                	adc    DWORD PTR [rax],eax
    7e34:	00 02                	add    BYTE PTR [rdx],al
    7e36:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    7e39:	e8 11 00 00 02       	call   2007e4f <_end+0x2001e37>
    7e3e:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    7e41:	03 12                	add    edx,DWORD PTR [rdx]
    7e43:	00 00                	add    BYTE PTR [rax],al
    7e45:	7a d0                	jp     7e17 <_end+0x1dff>
    7e47:	34 00                	xor    al,0x0
    7e49:	00 18                	add    BYTE PTR [rax],bl
    7e4b:	1c 00                	sbb    al,0x0
    7e4d:	06                   	(bad)
    7e4e:	2a 00                	sub    al,BYTE PTR [rax]
    7e50:	00 36                	add    BYTE PTR [rsi],dh
    7e52:	9c                   	pushf
    7e53:	17                   	(bad)
    7e54:	00 00                	add    BYTE PTR [rax],al
    7e56:	e3 20                	jrcxz  7e78 <_end+0x1e60>
    7e58:	00 00                	add    BYTE PTR [rax],al
    7e5a:	00 36                	add    BYTE PTR [rsi],dh
    7e5c:	d9 18                	fstp   DWORD PTR [rax]
    7e5e:	00 00                	add    BYTE PTR [rax],al
    7e60:	e3 20                	jrcxz  7e82 <_end+0x1e6a>
    7e62:	00 00                	add    BYTE PTR [rax],al
    7e64:	04 36                	add    al,0x36
    7e66:	60                   	(bad)
    7e67:	24 00                	and    al,0x0
    7e69:	00 d4                	add    ah,dl
    7e6b:	22 00                	and    al,BYTE PTR [rax]
    7e6d:	00 08                	add    BYTE PTR [rax],cl
    7e6f:	36 a0 1e 00 00 d4 22 	ss movabs al,ds:0x10000022d400001e
    7e76:	00 00 10 
    7e79:	00 35 08 1d 0e 01    	add    BYTE PTR [rip+0x10e1d08],dh        # 10e9b87 <_end+0x10e3b6f>
    7e7f:	63 30                	movsxd esi,DWORD PTR [rax]
    7e81:	00 00                	add    BYTE PTR [rax],al
    7e83:	4e 2a 00             	rex.WRX sub r8b,BYTE PTR [rax]
    7e86:	00 7b 04             	add    BYTE PTR [rbx+0x4],bh
    7e89:	1d 11 03 33 2a       	sbb    eax,0x2a330311
    7e8e:	00 00                	add    BYTE PTR [rax],al
    7e90:	59                   	pop    rcx
    7e91:	d7                   	xlat   BYTE PTR ds:[rbx]
    7e92:	12 00                	adc    al,BYTE PTR [rax]
    7e94:	00 12                	add    BYTE PTR [rdx],dl
    7e96:	13 e3                	adc    esp,ebx
    7e98:	20 00                	and    BYTE PTR [rax],al
    7e9a:	00 59 2d             	add    BYTE PTR [rcx+0x2d],bl
    7e9d:	27                   	(bad)
    7e9e:	00 00                	add    BYTE PTR [rax],al
    7ea0:	13 0a                	adc    ecx,DWORD PTR [rdx]
    7ea2:	52                   	push   rdx
    7ea3:	24 00                	and    al,0x0
    7ea5:	00 00                	add    BYTE PTR [rax],al
    7ea7:	06                   	(bad)
    7ea8:	95                   	xchg   ebp,eax
    7ea9:	25 00 00 1d 0f       	and    eax,0xf1d0000
    7eae:	07                   	(bad)
    7eaf:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7eb0:	21 00                	and    DWORD PTR [rax],eax
    7eb2:	00 00                	add    BYTE PTR [rax],al
    7eb4:	06                   	(bad)
    7eb5:	ac                   	lods   al,BYTE PTR ds:[rsi]
    7eb6:	0c 00                	or     al,0x0
    7eb8:	00 1d 14 05 13 2a    	add    BYTE PTR [rip+0x2a130514],bl        # 2a1383d2 <_end+0x2a1323ba>
    7ebe:	00 00                	add    BYTE PTR [rax],al
    7ec0:	04 00                	add    al,0x0
    7ec2:	08 65 30             	or     BYTE PTR [rbp+0x30],ah
    7ec5:	00 00                	add    BYTE PTR [rax],al
    7ec7:	1d 15 03 06 2a       	sbb    eax,0x2a060315
    7ecc:	00 00                	add    BYTE PTR [rax],al
    7ece:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    7ed0:	1a 00                	sbb    al,BYTE PTR [rax]
    7ed2:	00 10                	add    BYTE PTR [rax],dl
    7ed4:	1e                   	(bad)
    7ed5:	0a 10                	or     dl,BYTE PTR [rax]
    7ed7:	82                   	(bad)
    7ed8:	2a 00                	sub    al,BYTE PTR [rax]
    7eda:	00 06                	add    BYTE PTR [rsi],al
    7edc:	0e                   	(bad)
    7edd:	11 00                	adc    DWORD PTR [rax],eax
    7edf:	00 1e                	add    BYTE PTR [rsi],bl
    7ee1:	0c 0b                	or     al,0xb
    7ee3:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    7ee4:	22 00                	and    al,BYTE PTR [rax]
    7ee6:	00 00                	add    BYTE PTR [rax],al
    7ee8:	06                   	(bad)
    7ee9:	01 2f                	add    DWORD PTR [rdi],ebp
    7eeb:	00 00                	add    BYTE PTR [rax],al
    7eed:	1e                   	(bad)
    7eee:	0d 0f 4e 2a 00       	or     eax,0x2a4e0f
    7ef3:	00 08                	add    BYTE PTR [rax],cl
    7ef5:	00 08                	add    BYTE PTR [rax],cl
    7ef7:	54                   	push   rsp
    7ef8:	2a 00                	sub    al,BYTE PTR [rax]
    7efa:	00 1e                	add    BYTE PTR [rsi],bl
    7efc:	0e                   	(bad)
    7efd:	03 5a 2a             	add    ebx,DWORD PTR [rdx+0x2a]
    7f00:	00 00                	add    BYTE PTR [rax],al
    7f02:	08 9f 2a 00 00 1f    	or     BYTE PTR [rdi+0x1f00002a],bl
    7f08:	05 19 9a 2a 00       	add    eax,0x2a9a19
    7f0d:	00 1b                	add    BYTE PTR [rbx],bl
    7f0f:	f9                   	stc
    7f10:	14 00                	adc    al,0x0
    7f12:	00 d8                	add    al,bl
    7f14:	20 31                	and    BYTE PTR [rcx],dh
    7f16:	08 21                	or     BYTE PTR [rcx],ah
    7f18:	2c 00                	sub    al,0x0
    7f1a:	00 06                	add    BYTE PTR [rsi],al
    7f1c:	79 24                	jns    7f42 <_end+0x1f2a>
    7f1e:	00 00                	add    BYTE PTR [rax],al
    7f20:	20 33                	and    BYTE PTR [rbx],dh
    7f22:	07                   	(bad)
    7f23:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7f24:	21 00                	and    DWORD PTR [rax],eax
    7f26:	00 00                	add    BYTE PTR [rax],al
    7f28:	06                   	(bad)
    7f29:	88 18                	mov    BYTE PTR [rax],bl
    7f2b:	00 00                	add    BYTE PTR [rax],al
    7f2d:	20 36                	and    BYTE PTR [rsi],dh
    7f2f:	09 e2                	or     edx,esp
    7f31:	22 00                	and    al,BYTE PTR [rax]
    7f33:	00 08                	add    BYTE PTR [rax],cl
    7f35:	06                   	(bad)
    7f36:	3e 31 00             	ds xor DWORD PTR [rax],eax
    7f39:	00 20                	add    BYTE PTR [rax],ah
    7f3b:	37                   	(bad)
    7f3c:	09 e2                	or     edx,esp
    7f3e:	22 00                	and    al,BYTE PTR [rax]
    7f40:	00 10                	add    BYTE PTR [rax],dl
    7f42:	06                   	(bad)
    7f43:	22 1e                	and    bl,BYTE PTR [rsi]
    7f45:	00 00                	add    BYTE PTR [rax],al
    7f47:	20 38                	and    BYTE PTR [rax],bh
    7f49:	09 e2                	or     edx,esp
    7f4b:	22 00                	and    al,BYTE PTR [rax]
    7f4d:	00 18                	add    BYTE PTR [rax],bl
    7f4f:	06                   	(bad)
    7f50:	73 0f                	jae    7f61 <_end+0x1f49>
    7f52:	00 00                	add    BYTE PTR [rax],al
    7f54:	20 39                	and    BYTE PTR [rcx],bh
    7f56:	09 e2                	or     edx,esp
    7f58:	22 00                	and    al,BYTE PTR [rax]
    7f5a:	00 20                	add    BYTE PTR [rax],ah
    7f5c:	06                   	(bad)
    7f5d:	ee                   	out    dx,al
    7f5e:	32 00                	xor    al,BYTE PTR [rax]
    7f60:	00 20                	add    BYTE PTR [rax],ah
    7f62:	3a 09                	cmp    cl,BYTE PTR [rcx]
    7f64:	e2 22                	loop   7f88 <_end+0x1f70>
    7f66:	00 00                	add    BYTE PTR [rax],al
    7f68:	28 06                	sub    BYTE PTR [rsi],al
    7f6a:	cc                   	int3
    7f6b:	22 00                	and    al,BYTE PTR [rax]
    7f6d:	00 20                	add    BYTE PTR [rax],ah
    7f6f:	3b 09                	cmp    ecx,DWORD PTR [rcx]
    7f71:	e2 22                	loop   7f95 <_end+0x1f7d>
    7f73:	00 00                	add    BYTE PTR [rax],al
    7f75:	30 06                	xor    BYTE PTR [rsi],al
    7f77:	dd 23                	frstor [rbx]
    7f79:	00 00                	add    BYTE PTR [rax],al
    7f7b:	20 3c 09             	and    BYTE PTR [rcx+rcx*1],bh
    7f7e:	e2 22                	loop   7fa2 <_end+0x1f8a>
    7f80:	00 00                	add    BYTE PTR [rax],al
    7f82:	38 06                	cmp    BYTE PTR [rsi],al
    7f84:	a1 10 00 00 20 3d 09 	movabs eax,ds:0x22e2093d20000010
    7f8b:	e2 22 
    7f8d:	00 00                	add    BYTE PTR [rax],al
    7f8f:	40 06                	rex (bad)
    7f91:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    7f92:	10 00                	adc    BYTE PTR [rax],al
    7f94:	00 20                	add    BYTE PTR [rax],ah
    7f96:	40 09 e2             	rex or edx,esp
    7f99:	22 00                	and    al,BYTE PTR [rax]
    7f9b:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    7f9e:	bc 2a 00 00 20       	mov    esp,0x2000002a
    7fa3:	41 09 e2             	or     r10d,esp
    7fa6:	22 00                	and    al,BYTE PTR [rax]
    7fa8:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    7fab:	08 0e                	or     BYTE PTR [rsi],cl
    7fad:	00 00                	add    BYTE PTR [rax],al
    7faf:	20 42 09             	and    BYTE PTR [rdx+0x9],al
    7fb2:	e2 22                	loop   7fd6 <_end+0x1fbe>
    7fb4:	00 00                	add    BYTE PTR [rax],al
    7fb6:	58                   	pop    rax
    7fb7:	06                   	(bad)
    7fb8:	e3 19                	jrcxz  7fd3 <_end+0x1fbb>
    7fba:	00 00                	add    BYTE PTR [rax],al
    7fbc:	20 44 16 3a          	and    BYTE PTR [rsi+rdx*1+0x3a],al
    7fc0:	2c 00                	sub    al,0x0
    7fc2:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    7fc5:	14 11                	adc    al,0x11
    7fc7:	00 00                	add    BYTE PTR [rax],al
    7fc9:	20 46 14             	and    BYTE PTR [rsi+0x14],al
    7fcc:	3f                   	(bad)
    7fcd:	2c 00                	sub    al,0x0
    7fcf:	00 68 06             	add    BYTE PTR [rax+0x6],ch
    7fd2:	96                   	xchg   esi,eax
    7fd3:	31 00                	xor    DWORD PTR [rax],eax
    7fd5:	00 20                	add    BYTE PTR [rax],ah
    7fd7:	48 07                	rex.W (bad)
    7fd9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7fda:	21 00                	and    DWORD PTR [rax],eax
    7fdc:	00 70 06             	add    BYTE PTR [rax+0x6],dh
    7fdf:	c9                   	leave
    7fe0:	1d 00 00 20 49       	sbb    eax,0x49200000
    7fe5:	07                   	(bad)
    7fe6:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7fe7:	21 00                	and    DWORD PTR [rax],eax
    7fe9:	00 74 06 53          	add    BYTE PTR [rsi+rax*1+0x53],dh
    7fed:	20 00                	and    BYTE PTR [rax],al
    7fef:	00 20                	add    BYTE PTR [rax],ah
    7ff1:	4a 0b a4 22 00 00 78 	or     rsp,QWORD PTR [rdx+r12*1+0x6780000]
    7ff8:	06 
    7ff9:	4d 11 00             	adc    QWORD PTR [r8],r8
    7ffc:	00 20                	add    BYTE PTR [rax],ah
    7ffe:	4d 12 83 21 00 00 80 	rex.WRB adc r8b,BYTE PTR [r11-0x7fffffdf]
    8005:	06                   	(bad)
    8006:	76 26                	jbe    802e <_end+0x2016>
    8008:	00 00                	add    BYTE PTR [rax],al
    800a:	20 4e 0f             	and    BYTE PTR [rsi+0xf],cl
    800d:	98                   	cwde
    800e:	21 00                	and    DWORD PTR [rax],eax
    8010:	00 82 06 d6 2a 00    	add    BYTE PTR [rdx+0x2ad606],al
    8016:	00 20                	add    BYTE PTR [rax],ah
    8018:	4f 08 44 2c 00       	rex.WRXB or BYTE PTR [r12+r13*1+0x0],r8b
    801d:	00 83 06 a2 0f 00    	add    BYTE PTR [rbx+0xfa206],al
    8023:	00 20                	add    BYTE PTR [rax],ah
    8025:	51                   	push   rcx
    8026:	0f 54 2c 00          	andps  xmm5,XMMWORD PTR [rax+rax*1]
    802a:	00 88 06 57 20 00    	add    BYTE PTR [rax+0x205706],cl
    8030:	00 20                	add    BYTE PTR [rax],ah
    8032:	59                   	pop    rcx
    8033:	0d b0 22 00 00       	or     eax,0x22b0
    8038:	90                   	nop
    8039:	06                   	(bad)
    803a:	8b 28                	mov    ebp,DWORD PTR [rax]
    803c:	00 00                	add    BYTE PTR [rax],al
    803e:	20 5b 17             	and    BYTE PTR [rbx+0x17],bl
    8041:	5e                   	pop    rsi
    8042:	2c 00                	sub    al,0x0
    8044:	00 98 06 47 15 00    	add    BYTE PTR [rax+0x154706],bl
    804a:	00 20                	add    BYTE PTR [rax],ah
    804c:	5c                   	pop    rsp
    804d:	19 68 2c             	sbb    DWORD PTR [rax+0x2c],ebp
    8050:	00 00                	add    BYTE PTR [rax],al
    8052:	a0 06 10 22 00 00 20 	movabs al,ds:0x145d200000221006
    8059:	5d 14 
    805b:	3f                   	(bad)
    805c:	2c 00                	sub    al,0x0
    805e:	00 a8 06 6c 29 00    	add    BYTE PTR [rax+0x296c06],ch
    8064:	00 20                	add    BYTE PTR [rax],ah
    8066:	5e                   	pop    rsi
    8067:	09 d4                	or     esp,edx
    8069:	22 00                	and    al,BYTE PTR [rax]
    806b:	00 b0 06 18 24 00    	add    BYTE PTR [rax+0x241806],dh
    8071:	00 20                	add    BYTE PTR [rax],ah
    8073:	5f                   	pop    rdi
    8074:	0a 2e                	or     ch,BYTE PTR [rsi]
    8076:	23 00                	and    eax,DWORD PTR [rax]
    8078:	00 b8 06 ab 0a 00    	add    BYTE PTR [rax+0xaab06],bh
    807e:	00 20                	add    BYTE PTR [rax],ah
    8080:	60                   	(bad)
    8081:	07                   	(bad)
    8082:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8083:	21 00                	and    DWORD PTR [rax],eax
    8085:	00 c0                	add    al,al
    8087:	06                   	(bad)
    8088:	ec                   	in     al,dx
    8089:	1e                   	(bad)
    808a:	00 00                	add    BYTE PTR [rax],al
    808c:	20 62 08             	and    BYTE PTR [rdx+0x8],ah
    808f:	6d                   	ins    DWORD PTR es:[rdi],dx
    8090:	2c 00                	sub    al,0x0
    8092:	00 c4                	add    ah,al
    8094:	00 08                	add    BYTE PTR [rax],cl
    8096:	fd                   	std
    8097:	14 00                	adc    al,0x0
    8099:	00 21                	add    BYTE PTR [rcx],ah
    809b:	07                   	(bad)
    809c:	19 9a 2a 00 00 7c    	sbb    DWORD PTR [rdx+0x7c00002a],ebx
    80a2:	bf 17 00 00 20       	mov    edi,0x20000017
    80a7:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    80a9:	46 ad                	rex.RX lods eax,DWORD PTR ds:[rsi]
    80ab:	13 00                	adc    eax,DWORD PTR [rax]
    80ad:	00 0d 35 2c 00 00    	add    BYTE PTR [rip+0x2c35],cl        # ace8 <_end+0x4cd0>
    80b3:	0d 9a 2a 00 00       	or     eax,0x2a9a
    80b8:	22 e7                	and    ah,bh
    80ba:	22 00                	and    al,BYTE PTR [rax]
    80bc:	00 54 2c 00          	add    BYTE PTR [rsp+rbp*1+0x0],dl
    80c0:	00 23                	add    BYTE PTR [rbx],ah
    80c2:	8a 21                	mov    ah,BYTE PTR [rcx]
    80c4:	00 00                	add    BYTE PTR [rax],al
    80c6:	00 00                	add    BYTE PTR [rax],al
    80c8:	0d 2d 2c 00 00       	or     eax,0x2c2d
    80cd:	46 88 28             	rex.RX mov BYTE PTR [rax],r13b
    80d0:	00 00                	add    BYTE PTR [rax],al
    80d2:	0d 59 2c 00 00       	or     eax,0x2c59
    80d7:	46                   	rex.RX
    80d8:	44 15 00 00 0d 63    	rex.R adc eax,0x630d0000
    80de:	2c 00                	sub    al,0x0
    80e0:	00 22                	add    BYTE PTR [rdx],ah
    80e2:	e7 22                	out    0x22,eax
    80e4:	00 00                	add    BYTE PTR [rax],al
    80e6:	7d 2c                	jge    8114 <_end+0x20fc>
    80e8:	00 00                	add    BYTE PTR [rax],al
    80ea:	23 8a 21 00 00 13    	and    ecx,DWORD PTR [rdx+0x13000021]
    80f0:	00 08                	add    BYTE PTR [rax],cl
    80f2:	2d 1a 00 00 22       	sub    eax,0x2200001a
    80f7:	55                   	push   rbp
    80f8:	12 82 2a 00 00 13    	adc    al,BYTE PTR [rdx+0x1300002a]
    80fe:	7d 2c                	jge    812c <_end+0x2114>
    8100:	00 00                	add    BYTE PTR [rax],al
    8102:	0d 21 2c 00 00       	or     eax,0x2c21
    8107:	57                   	push   rdi
    8108:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    810b:	00 08                	add    BYTE PTR [rax],cl
    810d:	37                   	(bad)
    810e:	12 00                	adc    al,BYTE PTR [rax]
    8110:	00 23                	add    BYTE PTR [rbx],ah
    8112:	18 13                	sbb    BYTE PTR [rbx],dl
    8114:	d8 21                	fsub   DWORD PTR [rcx]
    8116:	00 00                	add    BYTE PTR [rax],al
    8118:	08 cc                	or     ah,cl
    811a:	17                   	(bad)
    811b:	00 00                	add    BYTE PTR [rax],al
    811d:	23 19                	and    ebx,DWORD PTR [rcx]
    811f:	14 f0                	adc    al,0xf0
    8121:	21 00                	and    DWORD PTR [rax],eax
    8123:	00 08                	add    BYTE PTR [rax],cl
    8125:	55                   	push   rbp
    8126:	01 00                	add    DWORD PTR [rax],eax
    8128:	00 23                	add    BYTE PTR [rbx],ah
    812a:	1a 14 08             	sbb    dl,BYTE PTR [rax+rcx*1]
    812d:	22 00                	and    al,BYTE PTR [rax]
    812f:	00 13                	add    BYTE PTR [rbx],dl
    8131:	b0 2c                	mov    al,0x2c
    8133:	00 00                	add    BYTE PTR [rax],al
    8135:	08 d5                	or     ch,dl
    8137:	05 00 00 23 1b       	add    eax,0x1b230000
    813c:	14 20                	adc    al,0x20
    813e:	22 00                	and    al,BYTE PTR [rax]
    8140:	00 08                	add    BYTE PTR [rax],cl
    8142:	b3 32                	mov    bl,0x32
    8144:	00 00                	add    BYTE PTR [rax],al
    8146:	24 19                	and    al,0x19
    8148:	18 2c 22             	sbb    BYTE PTR [rdx+riz*1],ch
    814b:	00 00                	add    BYTE PTR [rax],al
    814d:	08 5e 29             	or     BYTE PTR [rsi+0x29],bl
    8150:	00 00                	add    BYTE PTR [rax],al
    8152:	24 1a                	and    al,0x1a
    8154:	19 44 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],eax
    8158:	00 08                	add    BYTE PTR [rax],cl
    815a:	59                   	pop    rcx
    815b:	32 00                	xor    al,BYTE PTR [rax]
    815d:	00 24 1b             	add    BYTE PTR [rbx+rbx*1],ah
    8160:	19 5c 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],ebx
    8164:	00 08                	add    BYTE PTR [rax],cl
    8166:	82                   	(bad)
    8167:	2f                   	(bad)
    8168:	00 00                	add    BYTE PTR [rax],al
    816a:	24 1c                	and    al,0x1c
    816c:	19 74 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],esi
    8170:	00 08                	add    BYTE PTR [rax],cl
    8172:	fa                   	cli
    8173:	0d 00 00 24 1f       	or     eax,0x1f240000
    8178:	19 38                	sbb    DWORD PTR [rax],edi
    817a:	22 00                	and    al,BYTE PTR [rax]
    817c:	00 08                	add    BYTE PTR [rax],cl
    817e:	be 15 00 00 24       	mov    esi,0x24000015
    8183:	20 1a                	and    BYTE PTR [rdx],bl
    8185:	50                   	push   rax
    8186:	22 00                	and    al,BYTE PTR [rax]
    8188:	00 08                	add    BYTE PTR [rax],cl
    818a:	fd                   	std
    818b:	1d 00 00 24 21       	sbb    eax,0x21240000
    8190:	1a 68 22             	sbb    ch,BYTE PTR [rax+0x22]
    8193:	00 00                	add    BYTE PTR [rax],al
    8195:	08 36                	or     BYTE PTR [rsi],dh
    8197:	1a 00                	sbb    al,BYTE PTR [rax]
    8199:	00 24 22             	add    BYTE PTR [rdx+riz*1],ah
    819c:	1a 80 22 00 00 08    	sbb    al,BYTE PTR [rax+0x8000022]
    81a2:	73 2e                	jae    81d2 <_end+0x21ba>
    81a4:	00 00                	add    BYTE PTR [rax],al
    81a6:	25 2f 16 98 21       	and    eax,0x2198162f
    81ab:	00 00                	add    BYTE PTR [rax],al
    81ad:	08 a9 31 00 00 25    	or     BYTE PTR [rcx+0x25000031],ch
    81b3:	31 13                	xor    DWORD PTR [rbx],edx
    81b5:	b2 21                	mov    dl,0x21
    81b7:	00 00                	add    BYTE PTR [rax],al
    81b9:	08 5a 11             	or     BYTE PTR [rdx+0x11],bl
    81bc:	00 00                	add    BYTE PTR [rax],al
    81be:	25 32 13 b2 21       	and    eax,0x21b21332
    81c3:	00 00                	add    BYTE PTR [rax],al
    81c5:	08 eb                	or     bl,ch
    81c7:	0d 00 00 25 33       	or     eax,0x33250000
    81cc:	13 b2 21 00 00 08    	adc    esi,DWORD PTR [rdx+0x8000021]
    81d2:	72 2e                	jb     8202 <_end+0x21ea>
    81d4:	00 00                	add    BYTE PTR [rax],al
    81d6:	25 3c 18 7c 21       	and    eax,0x217c183c
    81db:	00 00                	add    BYTE PTR [rax],al
    81dd:	08 a8 31 00 00 25    	or     BYTE PTR [rax+0x25000031],ch
    81e3:	3e 1b 8a 21 00 00 08 	ds sbb ecx,DWORD PTR [rdx+0x8000021]
    81ea:	59                   	pop    rcx
    81eb:	11 00                	adc    DWORD PTR [rax],eax
    81ed:	00 25 3f 1b 8a 21    	add    BYTE PTR [rip+0x218a1b3f],ah        # 218a9d32 <_end+0x218a3d1a>
    81f3:	00 00                	add    BYTE PTR [rax],al
    81f5:	08 ea                	or     dl,ch
    81f7:	0d 00 00 25 40       	or     eax,0x40250000
    81fc:	1b 8a 21 00 00 08    	sbb    ecx,DWORD PTR [rdx+0x8000021]
    8202:	39 03                	cmp    DWORD PTR [rbx],eax
    8204:	00 00                	add    BYTE PTR [rax],al
    8206:	25 4c 13 b2 21       	and    eax,0x21b2134c
    820b:	00 00                	add    BYTE PTR [rax],al
    820d:	08 38                	or     BYTE PTR [rax],bh
    820f:	03 00                	add    eax,DWORD PTR [rax]
    8211:	00 25 4f 1b 8a 21    	add    BYTE PTR [rip+0x218a1b4f],ah        # 218a9d66 <_end+0x218a3d4e>
    8217:	00 00                	add    BYTE PTR [rax],al
    8219:	08 d4                	or     ah,dl
    821b:	23 00                	and    eax,DWORD PTR [rax]
    821d:	00 25 5a 15 8c 22    	add    BYTE PTR [rip+0x228c155a],ah        # 228c977d <_end+0x228c3765>
    8223:	00 00                	add    BYTE PTR [rax],al
    8225:	13 a5 2d 00 00 08    	adc    esp,DWORD PTR [rbp+0x800002d]
    822b:	dc 2f                	fsubr  QWORD PTR [rdi]
    822d:	00 00                	add    BYTE PTR [rax],al
    822f:	25 5b 16 98 22       	and    eax,0x2298165b
    8234:	00 00                	add    BYTE PTR [rax],al
    8236:	0e                   	(bad)
    8237:	17                   	(bad)
    8238:	01 00                	add    DWORD PTR [rax],eax
    823a:	00 16                	add    BYTE PTR [rsi],dl
    823c:	de 02                	fiadd  WORD PTR [rdx]
    823e:	0c a6                	or     al,0xa6
    8240:	21 00                	and    DWORD PTR [rax],eax
    8242:	00 d9                	add    cl,bl
    8244:	2d 00 00 01 d9       	sub    eax,0xd9010000
    8249:	2d 00 00 00 0d       	sub    eax,0xd000000
    824e:	de 2d 00 00 7d 04    	fisubr WORD PTR [rip+0x47d0000]        # 47d8254 <_end+0x47d223c>
    8254:	dd 00                	fld    QWORD PTR [rax]
    8256:	00 00                	add    BYTE PTR [rax],al
    8258:	16                   	(bad)
    8259:	e3 02                	jrcxz  825d <_end+0x2245>
    825b:	12 dd                	adc    bl,ch
    825d:	00 00                	add    BYTE PTR [rax],al
    825f:	00 a6 21 00 00 fa    	add    BYTE PTR [rsi-0x5ffffdf],ah
    8265:	2d 00 00 01 d9       	sub    eax,0xd9010000
    826a:	2d 00 00 00 0c       	sub    eax,0xc000000
    826f:	f2 01 00             	repnz add DWORD PTR [rax],eax
    8272:	00 26                	add    BYTE PTR [rsi],ah
    8274:	19 01                	sbb    DWORD PTR [rcx],eax
    8276:	2e 00 00             	cs add BYTE PTR [rax],al
    8279:	00 10                	add    BYTE PTR [rax],dl
    827b:	2e 00 00             	cs add BYTE PTR [rax],al
    827e:	01 d3                	add    ebx,edx
    8280:	23 00                	and    eax,DWORD PTR [rax]
    8282:	00 00                	add    BYTE PTR [rax],al
    8284:	0e                   	(bad)
    8285:	f7 01 00 00 16 e1    	test   DWORD PTR [rcx],0xe1160000
    828b:	01 01                	add    DWORD PTR [rcx],eax
    828d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    828e:	21 00                	and    DWORD PTR [rax],eax
    8290:	00 27                	add    BYTE PTR [rdi],ah
    8292:	2e 00 00             	cs add BYTE PTR [rax],al
    8295:	01 d3                	add    ebx,edx
    8297:	23 00                	and    eax,DWORD PTR [rax]
    8299:	00 00                	add    BYTE PTR [rax],al
    829b:	0e                   	(bad)
    829c:	01 02                	add    DWORD PTR [rdx],eax
    829e:	00 00                	add    BYTE PTR [rax],al
    82a0:	16                   	(bad)
    82a1:	e6 01                	out    0x1,al
    82a3:	01 b2 21 00 00 3e    	add    DWORD PTR [rdx+0x3e000021],esi
    82a9:	2e 00 00             	cs add BYTE PTR [rax],al
    82ac:	01 d3                	add    ebx,edx
    82ae:	23 00                	and    eax,DWORD PTR [rax]
    82b0:	00 00                	add    BYTE PTR [rax],al
    82b2:	0c 0f                	or     al,0xf
    82b4:	01 00                	add    DWORD PTR [rax],eax
    82b6:	00 27                	add    BYTE PTR [rdi],ah
    82b8:	14 01                	adc    al,0x1
    82ba:	d4                   	(bad)
    82bb:	22 00                	and    al,BYTE PTR [rax]
    82bd:	00 68 2e             	add    BYTE PTR [rax+0x2e],ch
    82c0:	00 00                	add    BYTE PTR [rax],al
    82c2:	01 88 24 00 00 01    	add    DWORD PTR [rax+0x1000024],ecx
    82c8:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    82cb:	00 01                	add    BYTE PTR [rcx],al
    82cd:	2e 23 00             	cs and eax,DWORD PTR [rax]
    82d0:	00 01                	add    BYTE PTR [rcx],al
    82d2:	2e 23 00             	cs and eax,DWORD PTR [rax]
    82d5:	00 01                	add    BYTE PTR [rcx],al
    82d7:	62 24 00             	(bad)
    82da:	00 00                	add    BYTE PTR [rax],al
    82dc:	7e 64                	jle    8342 <_end+0x232a>
    82de:	69 76 00 16 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e016
    82e5:	61                   	(bad)
    82e6:	23 00                	and    eax,DWORD PTR [rax]
    82e8:	00 84 2e 00 00 01 a6 	add    BYTE PTR [rsi+rbp*1-0x59ff0000],al
    82ef:	21 00                	and    DWORD PTR [rax],eax
    82f1:	00 01                	add    BYTE PTR [rcx],al
    82f3:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    82f4:	21 00                	and    DWORD PTR [rax],eax
    82f6:	00 00                	add    BYTE PTR [rax],al
    82f8:	0e                   	(bad)
    82f9:	6a 01                	push   0x1
    82fb:	00 00                	add    BYTE PTR [rax],al
    82fd:	16                   	(bad)
    82fe:	05 03 0e e2 22       	add    eax,0x22e20e03
    8303:	00 00                	add    BYTE PTR [rax],al
    8305:	9b                   	fwait
    8306:	2e 00 00             	cs add BYTE PTR [rax],al
    8309:	01 d3                	add    ebx,edx
    830b:	23 00                	and    eax,DWORD PTR [rax]
    830d:	00 00                	add    BYTE PTR [rax],al
    830f:	0e                   	(bad)
    8310:	c9                   	leave
    8311:	02 00                	add    al,BYTE PTR [rax]
    8313:	00 16                	add    BYTE PTR [rsi],dl
    8315:	e2 03                	loop   831a <_end+0x2302>
    8317:	0f 94 23             	sete   BYTE PTR [rbx]
    831a:	00 00                	add    BYTE PTR [rax],al
    831c:	b7 2e                	mov    bh,0x2e
    831e:	00 00                	add    BYTE PTR [rax],al
    8320:	01 b2 21 00 00 01    	add    DWORD PTR [rdx+0x1000021],esi
    8326:	b2 21                	mov    dl,0x21
    8328:	00 00                	add    BYTE PTR [rax],al
    832a:	00 0e                	add    BYTE PTR [rsi],cl
    832c:	58                   	pop    rax
    832d:	02 00                	add    al,BYTE PTR [rax]
    832f:	00 16                	add    BYTE PTR [rsi],dl
    8331:	26 04 0c             	es add al,0xc
    8334:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8335:	21 00                	and    DWORD PTR [rax],eax
    8337:	00 d3                	add    bl,dl
    8339:	2e 00 00             	cs add BYTE PTR [rax],al
    833c:	01 d3                	add    ebx,edx
    833e:	23 00                	and    eax,DWORD PTR [rax]
    8340:	00 01                	add    BYTE PTR [rcx],al
    8342:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8345:	00 00                	add    BYTE PTR [rax],al
    8347:	0c 5e                	or     al,0x5e
    8349:	02 00                	add    al,BYTE PTR [rax]
    834b:	00 28                	add    BYTE PTR [rax],ch
    834d:	75 01                	jne    8350 <_end+0x2338>
    834f:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8352:	00 f3                	add    bl,dh
    8354:	2e 00 00             	cs add BYTE PTR [rax],al
    8357:	01 f3                	add    ebx,esi
    8359:	2e 00 00             	cs add BYTE PTR [rax],al
    835c:	01 d3                	add    ebx,edx
    835e:	23 00                	and    eax,DWORD PTR [rax]
    8360:	00 01                	add    BYTE PTR [rcx],al
    8362:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8365:	00 00                	add    BYTE PTR [rax],al
    8367:	0d 9c 24 00 00       	or     eax,0x249c
    836c:	0e                   	(bad)
    836d:	86 01                	xchg   BYTE PTR [rcx],al
    836f:	00 00                	add    BYTE PTR [rax],al
    8371:	16                   	(bad)
    8372:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    8375:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8376:	21 00                	and    DWORD PTR [rax],eax
    8378:	00 19                	add    BYTE PTR [rcx],bl
    837a:	2f                   	(bad)
    837b:	00 00                	add    BYTE PTR [rax],al
    837d:	01 f3                	add    ebx,esi
    837f:	2e 00 00             	cs add BYTE PTR [rax],al
    8382:	01 d3                	add    ebx,edx
    8384:	23 00                	and    eax,DWORD PTR [rax]
    8386:	00 01                	add    BYTE PTR [rcx],al
    8388:	2e 23 00             	cs and eax,DWORD PTR [rax]
    838b:	00 00                	add    BYTE PTR [rax],al
    838d:	28 25 00 00 00 16    	sub    BYTE PTR [rip+0x16000000],ah        # 16008393 <_end+0x1600237b>
    8393:	ca 03 3a             	retf   0x3a03
    8396:	2f                   	(bad)
    8397:	00 00                	add    BYTE PTR [rax],al
    8399:	01 d4                	add    esp,edx
    839b:	22 00                	and    al,BYTE PTR [rax]
    839d:	00 01                	add    BYTE PTR [rcx],al
    839f:	2e 23 00             	cs and eax,DWORD PTR [rax]
    83a2:	00 01                	add    BYTE PTR [rcx],al
    83a4:	2e 23 00             	cs and eax,DWORD PTR [rax]
    83a7:	00 01                	add    BYTE PTR [rcx],al
    83a9:	62 24 00             	(bad)
    83ac:	00 00                	add    BYTE PTR [rax],al
    83ae:	7f e0                	jg     8390 <_end+0x2378>
    83b0:	00 00                	add    BYTE PTR [rax],al
    83b2:	00 16                	add    BYTE PTR [rsi],dl
    83b4:	fa                   	cli
    83b5:	02 0d 4d 2f 00 00    	add    cl,BYTE PTR [rip+0x2f4d]        # b308 <_end+0x52f0>
    83bb:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    83c1:	5a                   	pop    rdx
    83c2:	f2 02 00             	repnz add al,BYTE PTR [rax]
    83c5:	00 16                	add    BYTE PTR [rsi],dl
    83c7:	3d 02 0c a6 21       	cmp    eax,0x21a60c02
    83cc:	00 00                	add    BYTE PTR [rax],al
    83ce:	28 f1                	sub    cl,dh
    83d0:	02 00                	add    al,BYTE PTR [rax]
    83d2:	00 16                	add    BYTE PTR [rsi],dl
    83d4:	3f                   	(bad)
    83d5:	02 6c 2f 00          	add    ch,BYTE PTR [rdi+rbp*1+0x0]
    83d9:	00 01                	add    BYTE PTR [rcx],al
    83db:	e3 20                	jrcxz  83fd <_end+0x23e5>
    83dd:	00 00                	add    BYTE PTR [rax],al
    83df:	00 0c c5 01 00 00 16 	add    BYTE PTR [rax*8+0x16000001],cl
    83e6:	76 0f                	jbe    83f7 <_end+0x23df>
    83e8:	2e 00 00             	cs add BYTE PTR [rax],al
    83eb:	00 87 2f 00 00 01    	add    BYTE PTR [rdi+0x100002f],al
    83f1:	d3 23                	shl    DWORD PTR [rbx],cl
    83f3:	00 00                	add    BYTE PTR [rax],al
    83f5:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    83fb:	0d e2 22 00 00       	or     eax,0x22e2
    8400:	0f fe 00             	paddd  mm0,QWORD PTR [rax]
    8403:	00 00                	add    BYTE PTR [rax],al
    8405:	16                   	(bad)
    8406:	d7                   	xlat   BYTE PTR ds:[rbx]
    8407:	11 f5                	adc    ebp,esi
    8409:	00 00                	add    BYTE PTR [rax],al
    840b:	00 b2 21 00 00 b0    	add    BYTE PTR [rdx-0x4fffffdf],dh
    8411:	2f                   	(bad)
    8412:	00 00                	add    BYTE PTR [rax],al
    8414:	01 d3                	add    ebx,edx
    8416:	23 00                	and    eax,DWORD PTR [rax]
    8418:	00 01                	add    BYTE PTR [rcx],al
    841a:	87 2f                	xchg   DWORD PTR [rdi],ebp
    841c:	00 00                	add    BYTE PTR [rax],al
    841e:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8424:	0f 4a 02             	cmovp  eax,DWORD PTR [rdx]
    8427:	00 00                	add    BYTE PTR [rax],al
    8429:	16                   	(bad)
    842a:	db 1a                	fistp  DWORD PTR [rdx]
    842c:	41 02 00             	add    al,BYTE PTR [r8]
    842f:	00 8a 21 00 00 d4    	add    BYTE PTR [rdx-0x2bffffdf],cl
    8435:	2f                   	(bad)
    8436:	00 00                	add    BYTE PTR [rax],al
    8438:	01 d3                	add    ebx,edx
    843a:	23 00                	and    eax,DWORD PTR [rax]
    843c:	00 01                	add    BYTE PTR [rcx],al
    843e:	87 2f                	xchg   DWORD PTR [rdi],ebp
    8440:	00 00                	add    BYTE PTR [rax],al
    8442:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8448:	0e                   	(bad)
    8449:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    844a:	26 00 00             	es add BYTE PTR [rax],al
    844d:	16                   	(bad)
    844e:	9b                   	fwait
    844f:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    8452:	21 00                	and    DWORD PTR [rax],eax
    8454:	00 eb                	add    bl,ch
    8456:	2f                   	(bad)
    8457:	00 00                	add    BYTE PTR [rax],al
    8459:	01 d3                	add    ebx,edx
    845b:	23 00                	and    eax,DWORD PTR [rax]
    845d:	00 00                	add    BYTE PTR [rax],al
    845f:	0c 06                	or     al,0x6
    8461:	02 00                	add    al,BYTE PTR [rax]
    8463:	00 28                	add    BYTE PTR [rax],ch
    8465:	8f 01                	pop    QWORD PTR [rcx]
    8467:	2e 23 00             	cs and eax,DWORD PTR [rax]
    846a:	00 0b                	add    BYTE PTR [rbx],cl
    846c:	30 00                	xor    BYTE PTR [rax],al
    846e:	00 01                	add    BYTE PTR [rcx],al
    8470:	e2 22                	loop   8494 <_end+0x247c>
    8472:	00 00                	add    BYTE PTR [rax],al
    8474:	01 0b                	add    DWORD PTR [rbx],ecx
    8476:	30 00                	xor    BYTE PTR [rax],al
    8478:	00 01                	add    BYTE PTR [rcx],al
    847a:	2e 23 00             	cs and eax,DWORD PTR [rax]
    847d:	00 00                	add    BYTE PTR [rax],al
    847f:	0d a3 24 00 00       	or     eax,0x24a3
    8484:	0c 67                	or     al,0x67
    8486:	02 00                	add    al,BYTE PTR [rax]
    8488:	00 28                	add    BYTE PTR [rax],ch
    848a:	4f 01 a6 21 00 00 2b 	rex.WRXB add QWORD PTR [r14+0x2b000021],r12
    8491:	30 00                	xor    BYTE PTR [rax],al
    8493:	00 01                	add    BYTE PTR [rcx],al
    8495:	e2 22                	loop   84b9 <_end+0x24a1>
    8497:	00 00                	add    BYTE PTR [rax],al
    8499:	01 9c 24 00 00 00 0e 	add    DWORD PTR [rsp+0xe000000],ebx
    84a0:	c8 02 00 00          	enter  0x2,0x0
    84a4:	16                   	(bad)
    84a5:	e6 03                	out    0x3,al
    84a7:	1e                   	(bad)
    84a8:	c7                   	(bad)
    84a9:	23 00                	and    eax,DWORD PTR [rax]
    84ab:	00 47 30             	add    BYTE PTR [rdi+0x30],al
    84ae:	00 00                	add    BYTE PTR [rax],al
    84b0:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    84b6:	be 21 00 00 00       	mov    esi,0x21
    84bb:	0e                   	(bad)
    84bc:	52                   	push   rdx
    84bd:	02 00                	add    al,BYTE PTR [rax]
    84bf:	00 16                	add    BYTE PTR [rsi],dl
    84c1:	ed                   	in     eax,dx
    84c2:	01 01                	add    DWORD PTR [rcx],eax
    84c4:	be 21 00 00 5e       	mov    esi,0x5e000021
    84c9:	30 00                	xor    BYTE PTR [rax],al
    84cb:	00 01                	add    BYTE PTR [rcx],al
    84cd:	d3 23                	shl    DWORD PTR [rbx],cl
    84cf:	00 00                	add    BYTE PTR [rax],al
    84d1:	00 0f                	add    BYTE PTR [rdi],cl
    84d3:	32 01                	xor    al,BYTE PTR [rcx]
    84d5:	00 00                	add    BYTE PTR [rax],al
    84d7:	16                   	(bad)
    84d8:	ee                   	out    dx,al
    84d9:	16                   	(bad)
    84da:	29 01                	sub    DWORD PTR [rcx],eax
    84dc:	00 00                	add    BYTE PTR [rax],al
    84de:	be 21 00 00 82       	mov    esi,0x82000021
    84e3:	30 00                	xor    BYTE PTR [rax],al
    84e5:	00 01                	add    BYTE PTR [rcx],al
    84e7:	d3 23                	shl    DWORD PTR [rbx],cl
    84e9:	00 00                	add    BYTE PTR [rax],al
    84eb:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    84f1:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    84f2:	21 00                	and    DWORD PTR [rax],eax
    84f4:	00 00                	add    BYTE PTR [rax],al
    84f6:	0f bf 02             	movsx  eax,WORD PTR [rdx]
    84f9:	00 00                	add    BYTE PTR [rax],al
    84fb:	16                   	(bad)
    84fc:	f3 1f                	repz (bad)
    84fe:	b6 02                	mov    dh,0x2
    8500:	00 00                	add    BYTE PTR [rax],al
    8502:	91                   	xchg   ecx,eax
    8503:	21 00                	and    DWORD PTR [rax],eax
    8505:	00 a6 30 00 00 01    	add    BYTE PTR [rsi+0x1000030],ah
    850b:	d3 23                	shl    DWORD PTR [rbx],cl
    850d:	00 00                	add    BYTE PTR [rax],al
    850f:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    8515:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8516:	21 00                	and    DWORD PTR [rax],eax
    8518:	00 00                	add    BYTE PTR [rax],al
    851a:	0c af                	or     al,0xaf
    851c:	02 00                	add    al,BYTE PTR [rax]
    851e:	00 16                	add    BYTE PTR [rsi],dl
    8520:	7c 0e                	jl     8530 <_end+0x2518>
    8522:	35 00 00 00 c1       	xor    eax,0xc1000000
    8527:	30 00                	xor    BYTE PTR [rax],al
    8529:	00 01                	add    BYTE PTR [rcx],al
    852b:	d3 23                	shl    DWORD PTR [rbx],cl
    852d:	00 00                	add    BYTE PTR [rax],al
    852f:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    8535:	0c 2b                	or     al,0x2b
    8537:	00 00                	add    BYTE PTR [rax],al
    8539:	00 16                	add    BYTE PTR [rsi],dl
    853b:	7f 14                	jg     8551 <_end+0x2539>
    853d:	c5 21 00             	(bad)
    8540:	00 dc                	add    ah,bl
    8542:	30 00                	xor    BYTE PTR [rax],al
    8544:	00 01                	add    BYTE PTR [rcx],al
    8546:	d3 23                	shl    DWORD PTR [rbx],cl
    8548:	00 00                	add    BYTE PTR [rax],al
    854a:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    8550:	02 29                	add    ch,BYTE PTR [rcx]
    8552:	27                   	(bad)
    8553:	0c c2                	or     al,0xc2
    8555:	2d 00 00 02 29       	sub    eax,0x29020000
    855a:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    855c:	df 2d 00 00 02 29    	fild   QWORD PTR [rip+0x29020000]        # 29028562 <_end+0x2902254a>
    8562:	2e 0e                	cs (bad)
    8564:	3a 2f                	cmp    ch,BYTE PTR [rdi]
    8566:	00 00                	add    BYTE PTR [rax],al
    8568:	02 29                	add    ch,BYTE PTR [rcx]
    856a:	36 0c 61             	ss or  al,0x61
    856d:	23 00                	and    eax,DWORD PTR [rax]
    856f:	00 02                	add    BYTE PTR [rdx],al
    8571:	29 37                	sub    DWORD PTR [rdi],esi
    8573:	0c 94                	or     al,0x94
    8575:	23 00                	and    eax,DWORD PTR [rax]
    8577:	00 02                	add    BYTE PTR [rdx],al
    8579:	29 39                	sub    DWORD PTR [rcx],edi
    857b:	0c 71                	or     al,0x71
    857d:	00 00                	add    BYTE PTR [rax],al
    857f:	00 02                	add    BYTE PTR [rdx],al
    8581:	29 39                	sub    DWORD PTR [rcx],edi
    8583:	0c 8a                	or     al,0x8a
    8585:	00 00                	add    BYTE PTR [rax],al
    8587:	00 02                	add    BYTE PTR [rdx],al
    8589:	29 39                	sub    DWORD PTR [rcx],edi
    858b:	0c a3                	or     al,0xa3
    858d:	00 00                	add    BYTE PTR [rax],al
    858f:	00 02                	add    BYTE PTR [rdx],al
    8591:	29 39                	sub    DWORD PTR [rcx],edi
    8593:	0c bc                	or     al,0xbc
    8595:	00 00                	add    BYTE PTR [rax],al
    8597:	00 02                	add    BYTE PTR [rdx],al
    8599:	29 39                	sub    DWORD PTR [rcx],edi
    859b:	0c d5                	or     al,0xd5
    859d:	00 00                	add    BYTE PTR [rax],al
    859f:	00 02                	add    BYTE PTR [rdx],al
    85a1:	29 39                	sub    DWORD PTR [rcx],edi
    85a3:	0c ee                	or     al,0xee
    85a5:	00 00                	add    BYTE PTR [rax],al
    85a7:	00 02                	add    BYTE PTR [rdx],al
    85a9:	29 39                	sub    DWORD PTR [rcx],edi
    85ab:	0c 07                	or     al,0x7
    85ad:	01 00                	add    DWORD PTR [rax],eax
    85af:	00 02                	add    BYTE PTR [rdx],al
    85b1:	29 3a                	sub    DWORD PTR [rdx],edi
    85b3:	0c fa                	or     al,0xfa
    85b5:	2d 00 00 02 29       	sub    eax,0x29020000
    85ba:	3b 0c 10             	cmp    ecx,DWORD PTR [rax+rdx*1]
    85bd:	2e 00 00             	cs add BYTE PTR [rax],al
    85c0:	02 29                	add    ch,BYTE PTR [rcx]
    85c2:	3c 0c                	cmp    al,0xc
    85c4:	27                   	(bad)
    85c5:	2e 00 00             	cs add BYTE PTR [rax],al
    85c8:	02 29                	add    ch,BYTE PTR [rcx]
    85ca:	3d 0c 3e 2e 00       	cmp    eax,0x2e3e0c
    85cf:	00 02                	add    BYTE PTR [rdx],al
    85d1:	29 3f                	sub    DWORD PTR [rdi],edi
    85d3:	0c 43                	or     al,0x43
    85d5:	21 00                	and    DWORD PTR [rax],eax
    85d7:	00 02                	add    BYTE PTR [rdx],al
    85d9:	29 3f                	sub    DWORD PTR [rdi],edi
    85db:	0c 1f                	or     al,0x1f
    85dd:	13 00                	adc    eax,DWORD PTR [rax]
    85df:	00 02                	add    BYTE PTR [rdx],al
    85e1:	29 3f                	sub    DWORD PTR [rdi],edi
    85e3:	0c 68                	or     al,0x68
    85e5:	2e 00 00             	cs add BYTE PTR [rax],al
    85e8:	02 29                	add    ch,BYTE PTR [rcx]
    85ea:	41 0c 84             	rex.B or al,0x84
    85ed:	2e 00 00             	cs add BYTE PTR [rax],al
    85f0:	02 29                	add    ch,BYTE PTR [rcx]
    85f2:	43 0c 9b             	rex.XB or al,0x9b
    85f5:	2e 00 00             	cs add BYTE PTR [rax],al
    85f8:	02 29                	add    ch,BYTE PTR [rcx]
    85fa:	46 0c b7             	rex.RX or al,0xb7
    85fd:	2e 00 00             	cs add BYTE PTR [rax],al
    8600:	02 29                	add    ch,BYTE PTR [rcx]
    8602:	47 0c d3             	rex.RXB or al,0xd3
    8605:	2e 00 00             	cs add BYTE PTR [rax],al
    8608:	02 29                	add    ch,BYTE PTR [rcx]
    860a:	48 0c f8             	rex.W or al,0xf8
    860d:	2e 00 00             	cs add BYTE PTR [rax],al
    8610:	02 29                	add    ch,BYTE PTR [rcx]
    8612:	4a 0c 19             	rex.WX or al,0x19
    8615:	2f                   	(bad)
    8616:	00 00                	add    BYTE PTR [rax],al
    8618:	02 29                	add    ch,BYTE PTR [rcx]
    861a:	4b 0c 4d             	rex.WXB or al,0x4d
    861d:	2f                   	(bad)
    861e:	00 00                	add    BYTE PTR [rax],al
    8620:	02 29                	add    ch,BYTE PTR [rcx]
    8622:	4d 0c 5a             	rex.WRB or al,0x5a
    8625:	2f                   	(bad)
    8626:	00 00                	add    BYTE PTR [rax],al
    8628:	02 29                	add    ch,BYTE PTR [rcx]
    862a:	4e 0c 6c             	rex.WRX or al,0x6c
    862d:	2f                   	(bad)
    862e:	00 00                	add    BYTE PTR [rax],al
    8630:	02 29                	add    ch,BYTE PTR [rcx]
    8632:	4f 0c 8c             	rex.WRXB or al,0x8c
    8635:	2f                   	(bad)
    8636:	00 00                	add    BYTE PTR [rax],al
    8638:	02 29                	add    ch,BYTE PTR [rcx]
    863a:	50                   	push   rax
    863b:	0c b0                	or     al,0xb0
    863d:	2f                   	(bad)
    863e:	00 00                	add    BYTE PTR [rax],al
    8640:	02 29                	add    ch,BYTE PTR [rcx]
    8642:	51                   	push   rcx
    8643:	0c d4                	or     al,0xd4
    8645:	2f                   	(bad)
    8646:	00 00                	add    BYTE PTR [rax],al
    8648:	02 29                	add    ch,BYTE PTR [rcx]
    864a:	53                   	push   rbx
    864b:	0c eb                	or     al,0xeb
    864d:	2f                   	(bad)
    864e:	00 00                	add    BYTE PTR [rax],al
    8650:	02 29                	add    ch,BYTE PTR [rcx]
    8652:	54                   	push   rsp
    8653:	0c 10                	or     al,0x10
    8655:	30 00                	xor    BYTE PTR [rax],al
    8657:	00 80 01 20 10 15    	add    BYTE PTR [rax+0x15102001],al
    865d:	a9 01 10 cf 10       	test   eax,0x10cf1001
    8662:	00 00                	add    BYTE PTR [rax],al
    8664:	11 32                	adc    DWORD PTR [rdx],esi
    8666:	00 00                	add    BYTE PTR [rax],al
    8668:	5b                   	pop    rbx
    8669:	57                   	push   rdi
    866a:	25 00 00 aa 01       	and    eax,0x1aa0000
    866f:	0d be 21 00 00       	or     eax,0x21be
    8674:	08 00                	or     BYTE PTR [rax],al
    8676:	5b                   	pop    rbx
    8677:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    8678:	28 00                	sub    BYTE PTR [rax],al
    867a:	00 ab 01 0f c5 21    	add    BYTE PTR [rbx+0x21c50f01],ch
    8680:	00 00                	add    BYTE PTR [rax],al
    8682:	10 10                	adc    BYTE PTR [rax],dl
    8684:	00 81 01 d1 10 00    	add    BYTE PTR [rcx+0x10d101],al
    868a:	00 15 b4 01 03 e4    	add    BYTE PTR [rip+0xffffffffe40301b4],dl        # ffffffffe4038844 <_end+0xffffffffe403282c>
    8690:	31 00                	xor    DWORD PTR [rax],eax
    8692:	00 10                	add    BYTE PTR [rax],dl
    8694:	08 7a 04             	or     BYTE PTR [rdx+0x4],bh
    8697:	00 00                	add    BYTE PTR [rax],al
    8699:	2a 39                	sub    bh,BYTE PTR [rcx]
    869b:	13 2c 32             	adc    ebp,DWORD PTR [rdx+rsi*1]
    869e:	00 00                	add    BYTE PTR [rax],al
    86a0:	82                   	(bad)
    86a1:	01 be 21 00 00 3a    	add    DWORD PTR [rsi+0x3a000021],edi
    86a7:	32 00                	xor    al,BYTE PTR [rax]
    86a9:	00 83 01 03 00 12    	add    BYTE PTR [rbx+0x12000301],al
    86af:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    86b2:	00 00                	add    BYTE PTR [rax],al
    86b4:	00 12                	add    BYTE PTR [rdx],dl
    86b6:	02 04 ce             	add    al,BYTE PTR [rsi+rcx*8]
    86b9:	02 00                	add    al,BYTE PTR [rax]
    86bb:	00 08                	add    BYTE PTR [rax],cl
    86bd:	2a 2b                	sub    ch,BYTE PTR [rbx]
    86bf:	00 00                	add    BYTE PTR [rax],al
    86c1:	2b 14 17             	sub    edx,DWORD PTR [rdi+rdx*1]
    86c4:	e3 20                	jrcxz  86e6 <_end+0x26ce>
    86c6:	00 00                	add    BYTE PTR [rax],al
    86c8:	08 67 30             	or     BYTE PTR [rdi+0x30],ah
    86cb:	00 00                	add    BYTE PTR [rax],al
    86cd:	2c 06                	sub    al,0x6
    86cf:	15 4e 2a 00 00       	adc    eax,0x2a4e
    86d4:	13 54 32 00          	adc    edx,DWORD PTR [rdx+rsi*1+0x0]
    86d8:	00 0e                	add    BYTE PTR [rsi],cl
    86da:	87 01                	xchg   DWORD PTR [rcx],eax
    86dc:	00 00                	add    BYTE PTR [rax],al
    86de:	2d 57 01 01 48       	sub    eax,0x48010157
    86e3:	32 00                	xor    al,BYTE PTR [rax]
    86e5:	00 7c 32 00          	add    BYTE PTR [rdx+rsi*1+0x0],bh
    86e9:	00 01                	add    BYTE PTR [rcx],al
    86eb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    86ec:	21 00                	and    DWORD PTR [rax],eax
    86ee:	00 00                	add    BYTE PTR [rax],al
    86f0:	0e                   	(bad)
    86f1:	7e 15                	jle    8708 <_end+0x26f0>
    86f3:	00 00                	add    BYTE PTR [rax],al
    86f5:	2d a7 03 0f 48       	sub    eax,0x480f03a7
    86fa:	32 00                	xor    al,BYTE PTR [rax]
    86fc:	00 93 32 00 00 01    	add    BYTE PTR [rbx+0x1000032],dl
    8702:	93                   	xchg   ebx,eax
    8703:	32 00                	xor    al,BYTE PTR [rax]
    8705:	00 00                	add    BYTE PTR [rax],al
    8707:	0d 8e 2a 00 00       	or     eax,0x2a8e
    870c:	0c b5                	or     al,0xb5
    870e:	15 00 00 2e d3       	adc    eax,0xd32e0000
    8713:	01 f3                	add    ebx,esi
    8715:	2e 00 00             	cs add BYTE PTR [rax],al
    8718:	b8 32 00 00 01       	mov    eax,0x1000032
    871d:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8721:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    8727:	93                   	xchg   ebx,eax
    8728:	32 00                	xor    al,BYTE PTR [rax]
    872a:	00 00                	add    BYTE PTR [rax],al
    872c:	0e                   	(bad)
    872d:	8b 32                	mov    esi,DWORD PTR [rdx]
    872f:	00 00                	add    BYTE PTR [rax],al
    8731:	2d b5 03 0f 48       	sub    eax,0x480f03b5
    8736:	32 00                	xor    al,BYTE PTR [rax]
    8738:	00 d4                	add    ah,dl
    873a:	32 00                	xor    al,BYTE PTR [rax]
    873c:	00 01                	add    BYTE PTR [rcx],al
    873e:	9c                   	pushf
    873f:	24 00                	and    al,0x0
    8741:	00 01                	add    BYTE PTR [rcx],al
    8743:	93                   	xchg   ebx,eax
    8744:	32 00                	xor    al,BYTE PTR [rax]
    8746:	00 00                	add    BYTE PTR [rax],al
    8748:	0e                   	(bad)
    8749:	e3 0d                	jrcxz  8758 <_end+0x2740>
    874b:	00 00                	add    BYTE PTR [rax],al
    874d:	2d cb 03 0c a6       	sub    eax,0xa60c03cb
    8752:	21 00                	and    DWORD PTR [rax],eax
    8754:	00 f0                	add    al,dh
    8756:	32 00                	xor    al,BYTE PTR [rax]
    8758:	00 01                	add    BYTE PTR [rcx],al
    875a:	0b 30                	or     esi,DWORD PTR [rax]
    875c:	00 00                	add    BYTE PTR [rax],al
    875e:	01 93 32 00 00 00    	add    DWORD PTR [rbx+0x32],edx
    8764:	0e                   	(bad)
    8765:	d7                   	xlat   BYTE PTR ds:[rbx]
    8766:	1b 00                	sbb    eax,DWORD PTR [rax]
    8768:	00 2d d5 02 0c a6    	add    BYTE PTR [rip+0xffffffffa60c02d5],ch        # ffffffffa60c8a43 <_end+0xffffffffa60c2a2b>
    876e:	21 00                	and    DWORD PTR [rax],eax
    8770:	00 0c 33             	add    BYTE PTR [rbx+rsi*1],cl
    8773:	00 00                	add    BYTE PTR [rax],al
    8775:	01 93 32 00 00 01    	add    DWORD PTR [rbx+0x1000032],edx
    877b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    877c:	21 00                	and    DWORD PTR [rax],eax
    877e:	00 00                	add    BYTE PTR [rax],al
    8780:	0c c9                	or     al,0xc9
    8782:	23 00                	and    eax,DWORD PTR [rax]
    8784:	00 2e                	add    BYTE PTR [rsi],ch
    8786:	b8 01 a6 21 00       	mov    eax,0x21a601
    878b:	00 28                	add    BYTE PTR [rax],ch
    878d:	33 00                	xor    eax,DWORD PTR [rax]
    878f:	00 01                	add    BYTE PTR [rcx],al
    8791:	93                   	xchg   ebx,eax
    8792:	32 00                	xor    al,BYTE PTR [rax]
    8794:	00 01                	add    BYTE PTR [rcx],al
    8796:	0b 30                	or     esi,DWORD PTR [rax]
    8798:	00 00                	add    BYTE PTR [rax],al
    879a:	24 00                	and    al,0x0
    879c:	04 f3                	add    al,0xf3
    879e:	21 00                	and    DWORD PTR [rax],eax
    87a0:	00 2d 1b 03 0c ea    	add    BYTE PTR [rip+0xffffffffea0c031b],ch        # ffffffffea0c8ac1 <_end+0xffffffffea0c2aa9>
    87a6:	21 00                	and    DWORD PTR [rax],eax
    87a8:	00 a6 21 00 00 49    	add    BYTE PTR [rsi+0x49000021],ah
    87ae:	33 00                	xor    eax,DWORD PTR [rax]
    87b0:	00 01                	add    BYTE PTR [rcx],al
    87b2:	93                   	xchg   ebx,eax
    87b3:	32 00                	xor    al,BYTE PTR [rax]
    87b5:	00 01                	add    BYTE PTR [rcx],al
    87b7:	0b 30                	or     esi,DWORD PTR [rax]
    87b9:	00 00                	add    BYTE PTR [rax],al
    87bb:	24 00                	and    al,0x0
    87bd:	0e                   	(bad)
    87be:	7f 15                	jg     87d5 <_end+0x27bd>
    87c0:	00 00                	add    BYTE PTR [rax],al
    87c2:	2d a8 03 0f 48       	sub    eax,0x480f03a8
    87c7:	32 00                	xor    al,BYTE PTR [rax]
    87c9:	00 60 33             	add    BYTE PTR [rax+0x33],ah
    87cc:	00 00                	add    BYTE PTR [rax],al
    87ce:	01 93 32 00 00 00    	add    DWORD PTR [rbx+0x32],edx
    87d4:	5a                   	pop    rdx
    87d5:	96                   	xchg   esi,eax
    87d6:	15 00 00 2d ae       	adc    eax,0xae2d0000
    87db:	03 0f                	add    ecx,DWORD PTR [rdi]
    87dd:	48 32 00             	rex.W xor al,BYTE PTR [rax]
    87e0:	00 0e                	add    BYTE PTR [rsi],cl
    87e2:	40 19 00             	rex sbb DWORD PTR [rax],eax
    87e5:	00 2d 62 01 01 2e    	add    BYTE PTR [rip+0x2e010162],ch        # 2e01894d <_end+0x2e012935>
    87eb:	23 00                	and    eax,DWORD PTR [rax]
    87ed:	00 8e 33 00 00 01    	add    BYTE PTR [rsi+0x1000033],cl
    87f3:	d3 23                	shl    DWORD PTR [rbx],cl
    87f5:	00 00                	add    BYTE PTR [rax],al
    87f7:	01 2e                	add    DWORD PTR [rsi],ebp
    87f9:	23 00                	and    eax,DWORD PTR [rax]
    87fb:	00 01                	add    BYTE PTR [rcx],al
    87fd:	8e 33                	mov    ?,WORD PTR [rbx]
    87ff:	00 00                	add    BYTE PTR [rax],al
    8801:	00 0d 54 32 00 00    	add    BYTE PTR [rip+0x3254],cl        # ba5b <_end+0x5a43>
    8807:	0e                   	(bad)
    8808:	bb 10 00 00 2d       	mov    ebx,0x2d000010
    880d:	41 01 0f             	add    DWORD PTR [r15],ecx
    8810:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8813:	00 b9 33 00 00 01    	add    BYTE PTR [rcx+0x1000033],bh
    8819:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    881d:	01 d3                	add    ebx,edx
    881f:	23 00                	and    eax,DWORD PTR [rax]
    8821:	00 01                	add    BYTE PTR [rcx],al
    8823:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8826:	00 01                	add    BYTE PTR [rcx],al
    8828:	8e 33                	mov    ?,WORD PTR [rbx]
    882a:	00 00                	add    BYTE PTR [rax],al
    882c:	00 0e                	add    BYTE PTR [rsi],cl
    882e:	d0 29                	shr    BYTE PTR [rcx],1
    8830:	00 00                	add    BYTE PTR [rax],al
    8832:	2d 3d 01 0c a6       	sub    eax,0xa60c013d
    8837:	21 00                	and    DWORD PTR [rax],eax
    8839:	00 d0                	add    al,dl
    883b:	33 00                	xor    eax,DWORD PTR [rax]
    883d:	00 01                	add    BYTE PTR [rcx],al
    883f:	d0 33                	shl    BYTE PTR [rbx],1
    8841:	00 00                	add    BYTE PTR [rax],al
    8843:	00 0d 60 32 00 00    	add    BYTE PTR [rip+0x3260],cl        # baa9 <_end+0x5a91>
    8849:	0c c1                	or     al,0xc1
    884b:	31 00                	xor    DWORD PTR [rax],eax
    884d:	00 2e                	add    BYTE PTR [rsi],ch
    884f:	fd                   	std
    8850:	01 2e                	add    DWORD PTR [rsi],ebp
    8852:	23 00                	and    eax,DWORD PTR [rax]
    8854:	00 fa                	add    dl,bh
    8856:	33 00                	xor    eax,DWORD PTR [rax]
    8858:	00 01                	add    BYTE PTR [rcx],al
    885a:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    885e:	01 fa                	add    edx,edi
    8860:	33 00                	xor    eax,DWORD PTR [rax]
    8862:	00 01                	add    BYTE PTR [rcx],al
    8864:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8867:	00 01                	add    BYTE PTR [rcx],al
    8869:	8e 33                	mov    ?,WORD PTR [rbx]
    886b:	00 00                	add    BYTE PTR [rax],al
    886d:	00 0d d3 23 00 00    	add    BYTE PTR [rip+0x23d3],cl        # ac46 <_end+0x4c2e>
    8873:	0e                   	(bad)
    8874:	8c 32                	mov    WORD PTR [rdx],?
    8876:	00 00                	add    BYTE PTR [rax],al
    8878:	2d b6 03 0f 48       	sub    eax,0x480f03b6
    887d:	32 00                	xor    al,BYTE PTR [rax]
    887f:	00 1b                	add    BYTE PTR [rbx],bl
    8881:	34 00                	xor    al,0x0
    8883:	00 01                	add    BYTE PTR [rcx],al
    8885:	9c                   	pushf
    8886:	24 00                	and    al,0x0
    8888:	00 01                	add    BYTE PTR [rcx],al
    888a:	93                   	xchg   ebx,eax
    888b:	32 00                	xor    al,BYTE PTR [rax]
    888d:	00 00                	add    BYTE PTR [rax],al
    888f:	0e                   	(bad)
    8890:	00 1d 00 00 2d bc    	add    BYTE PTR [rip+0xffffffffbc2d0000],bl        # ffffffffbc2d8896 <_end+0xffffffffbc2d287e>
    8896:	03 0f                	add    ecx,DWORD PTR [rdi]
    8898:	48 32 00             	rex.W xor al,BYTE PTR [rax]
    889b:	00 32                	add    BYTE PTR [rdx],dh
    889d:	34 00                	xor    al,0x0
    889f:	00 01                	add    BYTE PTR [rcx],al
    88a1:	9c                   	pushf
    88a2:	24 00                	and    al,0x0
    88a4:	00 00                	add    BYTE PTR [rax],al
    88a6:	0c 66                	or     al,0x66
    88a8:	1a 00                	sbb    al,BYTE PTR [rax]
    88aa:	00 2e                	add    BYTE PTR [rsi],ch
    88ac:	90                   	nop
    88ad:	01 a6 21 00 00 53    	add    DWORD PTR [rsi+0x53000021],esp
    88b3:	34 00                	xor    al,0x0
    88b5:	00 01                	add    BYTE PTR [rcx],al
    88b7:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    88bb:	01 2e                	add    DWORD PTR [rsi],ebp
    88bd:	23 00                	and    eax,DWORD PTR [rax]
    88bf:	00 01                	add    BYTE PTR [rcx],al
    88c1:	0b 30                	or     esi,DWORD PTR [rax]
    88c3:	00 00                	add    BYTE PTR [rax],al
    88c5:	24 00                	and    al,0x0
    88c7:	04 e0                	add    al,0xe0
    88c9:	20 00                	and    BYTE PTR [rax],al
    88cb:	00 2d 22 03 0c d7    	add    BYTE PTR [rip+0xffffffffd70c0322],ch        # ffffffffd70c8bf3 <_end+0xffffffffd70c2bdb>
    88d1:	20 00                	and    BYTE PTR [rax],al
    88d3:	00 a6 21 00 00 74    	add    BYTE PTR [rsi+0x74000021],ah
    88d9:	34 00                	xor    al,0x0
    88db:	00 01                	add    BYTE PTR [rcx],al
    88dd:	0b 30                	or     esi,DWORD PTR [rax]
    88df:	00 00                	add    BYTE PTR [rax],al
    88e1:	01 0b                	add    DWORD PTR [rbx],ecx
    88e3:	30 00                	xor    BYTE PTR [rax],al
    88e5:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    88e8:	0e                   	(bad)
    88e9:	d1 18                	rcr    DWORD PTR [rax],1
    88eb:	00 00                	add    BYTE PTR [rax],al
    88ed:	2d d3 03 0f 48       	sub    eax,0x480f03d3
    88f2:	32 00                	xor    al,BYTE PTR [rax]
    88f4:	00 90 34 00 00 01    	add    BYTE PTR [rax+0x1000034],dl
    88fa:	48 32 00             	rex.W xor al,BYTE PTR [rax]
    88fd:	00 01                	add    BYTE PTR [rcx],al
    88ff:	93                   	xchg   ebx,eax
    8900:	32 00                	xor    al,BYTE PTR [rax]
    8902:	00 00                	add    BYTE PTR [rax],al
    8904:	0c c8                	or     al,0xc8
    8906:	23 00                	and    eax,DWORD PTR [rax]
    8908:	00 2e                	add    BYTE PTR [rsi],ch
    890a:	cb                   	retf
    890b:	01 a6 21 00 00 b0    	add    DWORD PTR [rsi-0x4fffffdf],esp
    8911:	34 00                	xor    al,0x0
    8913:	00 01                	add    BYTE PTR [rcx],al
    8915:	93                   	xchg   ebx,eax
    8916:	32 00                	xor    al,BYTE PTR [rax]
    8918:	00 01                	add    BYTE PTR [rcx],al
    891a:	0b 30                	or     esi,DWORD PTR [rax]
    891c:	00 00                	add    BYTE PTR [rax],al
    891e:	01 b0 34 00 00 00    	add    DWORD PTR [rax+0x34],esi
    8924:	0d d1 29 00 00       	or     eax,0x29d1
    8929:	04 28                	add    al,0x28
    892b:	1b 00                	sbb    eax,DWORD PTR [rax]
    892d:	00 2d 6b 03 0c 1f    	add    BYTE PTR [rip+0x1f0c036b],ch        # 1f0c8c9e <_end+0x1f0c2c86>
    8933:	1b 00                	sbb    eax,DWORD PTR [rax]
    8935:	00 a6 21 00 00 da    	add    BYTE PTR [rsi-0x25ffffdf],ah
    893b:	34 00                	xor    al,0x0
    893d:	00 01                	add    BYTE PTR [rcx],al
    893f:	93                   	xchg   ebx,eax
    8940:	32 00                	xor    al,BYTE PTR [rax]
    8942:	00 01                	add    BYTE PTR [rcx],al
    8944:	0b 30                	or     esi,DWORD PTR [rax]
    8946:	00 00                	add    BYTE PTR [rax],al
    8948:	01 b0 34 00 00 00    	add    DWORD PTR [rax+0x34],esi
    894e:	0c 65                	or     al,0x65
    8950:	1a 00                	sbb    al,BYTE PTR [rax]
    8952:	00 2e                	add    BYTE PTR [rsi],ch
    8954:	a3 01 a6 21 00 00 ff 	movabs ds:0x34ff000021a601,eax
    895b:	34 00 
    895d:	00 01                	add    BYTE PTR [rcx],al
    895f:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8963:	01 2e                	add    DWORD PTR [rsi],ebp
    8965:	23 00                	and    eax,DWORD PTR [rax]
    8967:	00 01                	add    BYTE PTR [rcx],al
    8969:	0b 30                	or     esi,DWORD PTR [rax]
    896b:	00 00                	add    BYTE PTR [rax],al
    896d:	01 b0 34 00 00 00    	add    DWORD PTR [rax+0x34],esi
    8973:	04 c4                	add    al,0xc4
    8975:	19 00                	sbb    DWORD PTR [rax],eax
    8977:	00 2d 72 03 0c bb    	add    BYTE PTR [rip+0xffffffffbb0c0372],ch        # ffffffffbb0c8cef <_end+0xffffffffbb0c2cd7>
    897d:	19 00                	sbb    DWORD PTR [rax],eax
    897f:	00 a6 21 00 00 24    	add    BYTE PTR [rsi+0x24000021],ah
    8985:	35 00 00 01 0b       	xor    eax,0xb010000
    898a:	30 00                	xor    BYTE PTR [rax],al
    898c:	00 01                	add    BYTE PTR [rcx],al
    898e:	0b 30                	or     esi,DWORD PTR [rax]
    8990:	00 00                	add    BYTE PTR [rax],al
    8992:	01 b0 34 00 00 00    	add    DWORD PTR [rax+0x34],esi
    8998:	0c 7a                	or     al,0x7a
    899a:	13 00                	adc    eax,DWORD PTR [rax]
    899c:	00 2e                	add    BYTE PTR [rsi],ch
    899e:	c5 01 a6             	(bad)
    89a1:	21 00                	and    DWORD PTR [rax],eax
    89a3:	00 3f                	add    BYTE PTR [rdi],bh
    89a5:	35 00 00 01 0b       	xor    eax,0xb010000
    89aa:	30 00                	xor    BYTE PTR [rax],al
    89ac:	00 01                	add    BYTE PTR [rcx],al
    89ae:	b0 34                	mov    al,0x34
    89b0:	00 00                	add    BYTE PTR [rax],al
    89b2:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    89b5:	25 00 00 2d 6f       	and    eax,0x6f2d0000
    89ba:	03 0c 9d 25 00 00 a6 	add    ecx,DWORD PTR [rbx*4-0x59ffffdb]
    89c1:	21 00                	and    DWORD PTR [rax],eax
    89c3:	00 5f 35             	add    BYTE PTR [rdi+0x35],bl
    89c6:	00 00                	add    BYTE PTR [rax],al
    89c8:	01 0b                	add    DWORD PTR [rbx],ecx
    89ca:	30 00                	xor    BYTE PTR [rax],al
    89cc:	00 01                	add    BYTE PTR [rcx],al
    89ce:	b0 34                	mov    al,0x34
    89d0:	00 00                	add    BYTE PTR [rax],al
    89d2:	00 0c 0d 31 00 00 2e 	add    BYTE PTR [rcx*1+0x2e000031],cl
    89d9:	ec                   	in     al,dx
    89da:	01 2e                	add    DWORD PTR [rsi],ebp
    89dc:	23 00                	and    eax,DWORD PTR [rax]
    89de:	00 7f 35             	add    BYTE PTR [rdi+0x35],bh
    89e1:	00 00                	add    BYTE PTR [rax],al
    89e3:	01 e2                	add    edx,esp
    89e5:	22 00                	and    al,BYTE PTR [rax]
    89e7:	00 01                	add    BYTE PTR [rcx],al
    89e9:	9c                   	pushf
    89ea:	24 00                	and    al,0x0
    89ec:	00 01                	add    BYTE PTR [rcx],al
    89ee:	8e 33                	mov    ?,WORD PTR [rbx]
    89f0:	00 00                	add    BYTE PTR [rax],al
    89f2:	00 0c 54             	add    BYTE PTR [rsp+rdx*2],cl
    89f5:	30 00                	xor    BYTE PTR [rax],al
    89f7:	00 2e                	add    BYTE PTR [rsi],ch
    89f9:	60                   	(bad)
    89fa:	01 f3                	add    ebx,esi
    89fc:	2e 00 00             	cs add BYTE PTR [rax],al
    89ff:	9a                   	(bad)
    8a00:	35 00 00 01 f3       	xor    eax,0xf3010000
    8a05:	2e 00 00             	cs add BYTE PTR [rax],al
    8a08:	01 0b                	add    DWORD PTR [rbx],ecx
    8a0a:	30 00                	xor    BYTE PTR [rax],al
    8a0c:	00 00                	add    BYTE PTR [rax],al
    8a0e:	0c bc                	or     al,0xbc
    8a10:	16                   	(bad)
    8a11:	00 00                	add    BYTE PTR [rax],al
    8a13:	2d 82 0c a6 21       	sub    eax,0x21a60c82
    8a18:	00 00                	add    BYTE PTR [rax],al
    8a1a:	b5 35                	mov    ch,0x35
    8a1c:	00 00                	add    BYTE PTR [rax],al
    8a1e:	01 0b                	add    DWORD PTR [rbx],ecx
    8a20:	30 00                	xor    BYTE PTR [rax],al
    8a22:	00 01                	add    BYTE PTR [rcx],al
    8a24:	0b 30                	or     esi,DWORD PTR [rax]
    8a26:	00 00                	add    BYTE PTR [rax],al
    8a28:	00 0c 28             	add    BYTE PTR [rax+rbp*1],cl
    8a2b:	11 00                	adc    DWORD PTR [rax],eax
    8a2d:	00 2d 9b 0c a6 21    	add    BYTE PTR [rip+0x21a60c9b],ch        # 21a696ce <_end+0x21a636b6>
    8a33:	00 00                	add    BYTE PTR [rax],al
    8a35:	d0 35 00 00 01 0b    	shl    BYTE PTR [rip+0xb010000],1        # b018a3b <_end+0xb012a23>
    8a3b:	30 00                	xor    BYTE PTR [rax],al
    8a3d:	00 01                	add    BYTE PTR [rcx],al
    8a3f:	0b 30                	or     esi,DWORD PTR [rax]
    8a41:	00 00                	add    BYTE PTR [rax],al
    8a43:	00 0c 4f             	add    BYTE PTR [rdi+rcx*2],cl
    8a46:	1a 00                	sbb    al,BYTE PTR [rax]
    8a48:	00 2e                	add    BYTE PTR [rsi],ch
    8a4a:	3c 01                	cmp    al,0x1
    8a4c:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8a50:	eb 35                	jmp    8a87 <_end+0x2a6f>
    8a52:	00 00                	add    BYTE PTR [rax],al
    8a54:	01 f3                	add    ebx,esi
    8a56:	2e 00 00             	cs add BYTE PTR [rax],al
    8a59:	01 0b                	add    DWORD PTR [rbx],ecx
    8a5b:	30 00                	xor    BYTE PTR [rax],al
    8a5d:	00 00                	add    BYTE PTR [rax],al
    8a5f:	0c 76                	or     al,0x76
    8a61:	0e                   	(bad)
    8a62:	00 00                	add    BYTE PTR [rax],al
    8a64:	2d d4 0f 2e 23       	sub    eax,0x232e0fd4
    8a69:	00 00                	add    BYTE PTR [rax],al
    8a6b:	06                   	(bad)
    8a6c:	36 00 00             	ss add BYTE PTR [rax],al
    8a6f:	01 0b                	add    DWORD PTR [rbx],ecx
    8a71:	30 00                	xor    BYTE PTR [rax],al
    8a73:	00 01                	add    BYTE PTR [rcx],al
    8a75:	0b 30                	or     esi,DWORD PTR [rax]
    8a77:	00 00                	add    BYTE PTR [rax],al
    8a79:	00 0e                	add    BYTE PTR [rsi],cl
    8a7b:	40                   	rex
    8a7c:	2e 00 00             	cs add BYTE PTR [rax],al
    8a7f:	2d 13 04 0f 2e       	sub    eax,0x2e0f0413
    8a84:	23 00                	and    eax,DWORD PTR [rax]
    8a86:	00 2c 36             	add    BYTE PTR [rsi+rsi*1],ch
    8a89:	00 00                	add    BYTE PTR [rax],al
    8a8b:	01 f3                	add    ebx,esi
    8a8d:	2e 00 00             	cs add BYTE PTR [rax],al
    8a90:	01 2e                	add    DWORD PTR [rsi],ebp
    8a92:	23 00                	and    eax,DWORD PTR [rax]
    8a94:	00 01                	add    BYTE PTR [rcx],al
    8a96:	0b 30                	or     esi,DWORD PTR [rax]
    8a98:	00 00                	add    BYTE PTR [rax],al
    8a9a:	01 2c 36             	add    DWORD PTR [rsi+rsi*1],ebp
    8a9d:	00 00                	add    BYTE PTR [rax],al
    8a9f:	00 0d ce 36 00 00    	add    BYTE PTR [rip+0x36ce],cl        # c173 <_end+0x615b>
    8aa5:	84 01                	test   BYTE PTR [rcx],al
    8aa7:	74 6d                	je     8b16 <_end+0x2afe>
    8aa9:	00 38                	add    BYTE PTR [rax],bh
    8aab:	2f                   	(bad)
    8aac:	07                   	(bad)
    8aad:	08 ce                	or     dh,cl
    8aaf:	36 00 00             	ss add BYTE PTR [rax],al
    8ab2:	06                   	(bad)
    8ab3:	0a 1c 00             	or     bl,BYTE PTR [rax+rax*1]
    8ab6:	00 2f                	add    BYTE PTR [rdi],ch
    8ab8:	09 07                	or     DWORD PTR [rdi],eax
    8aba:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8abb:	21 00                	and    DWORD PTR [rax],eax
    8abd:	00 00                	add    BYTE PTR [rax],al
    8abf:	06                   	(bad)
    8ac0:	71 18                	jno    8ada <_end+0x2ac2>
    8ac2:	00 00                	add    BYTE PTR [rax],al
    8ac4:	2f                   	(bad)
    8ac5:	0a 07                	or     al,BYTE PTR [rdi]
    8ac7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8ac8:	21 00                	and    DWORD PTR [rax],eax
    8aca:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    8acd:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    8ace:	0c 00                	or     al,0x0
    8ad0:	00 2f                	add    BYTE PTR [rdi],ch
    8ad2:	0b 07                	or     eax,DWORD PTR [rdi]
    8ad4:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8ad5:	21 00                	and    DWORD PTR [rax],eax
    8ad7:	00 08                	add    BYTE PTR [rax],cl
    8ad9:	06                   	(bad)
    8ada:	04 1a                	add    al,0x1a
    8adc:	00 00                	add    BYTE PTR [rax],al
    8ade:	2f                   	(bad)
    8adf:	0c 07                	or     al,0x7
    8ae1:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8ae2:	21 00                	and    DWORD PTR [rax],eax
    8ae4:	00 0c 06             	add    BYTE PTR [rsi+rax*1],cl
    8ae7:	fb                   	sti
    8ae8:	21 00                	and    DWORD PTR [rax],eax
    8aea:	00 2f                	add    BYTE PTR [rdi],ch
    8aec:	0d 07 a6 21 00       	or     eax,0x21a607
    8af1:	00 10                	add    BYTE PTR [rax],dl
    8af3:	06                   	(bad)
    8af4:	92                   	xchg   edx,eax
    8af5:	32 00                	xor    al,BYTE PTR [rax]
    8af7:	00 2f                	add    BYTE PTR [rdi],ch
    8af9:	0e                   	(bad)
    8afa:	07                   	(bad)
    8afb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8afc:	21 00                	and    DWORD PTR [rax],eax
    8afe:	00 14 06             	add    BYTE PTR [rsi+rax*1],dl
    8b01:	79 29                	jns    8b2c <_end+0x2b14>
    8b03:	00 00                	add    BYTE PTR [rax],al
    8b05:	2f                   	(bad)
    8b06:	0f 07                	sysretd
    8b08:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8b09:	21 00                	and    DWORD PTR [rax],eax
    8b0b:	00 18                	add    BYTE PTR [rax],bl
    8b0d:	06                   	(bad)
    8b0e:	dd 29                	(bad)  [rcx]
    8b10:	00 00                	add    BYTE PTR [rax],al
    8b12:	2f                   	(bad)
    8b13:	10 07                	adc    BYTE PTR [rdi],al
    8b15:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8b16:	21 00                	and    DWORD PTR [rax],eax
    8b18:	00 1c 06             	add    BYTE PTR [rsi+rax*1],bl
    8b1b:	71 13                	jno    8b30 <_end+0x2b18>
    8b1d:	00 00                	add    BYTE PTR [rax],al
    8b1f:	2f                   	(bad)
    8b20:	11 07                	adc    DWORD PTR [rdi],eax
    8b22:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8b23:	21 00                	and    DWORD PTR [rax],eax
    8b25:	00 20                	add    BYTE PTR [rax],ah
    8b27:	06                   	(bad)
    8b28:	2a 1f                	sub    bl,BYTE PTR [rdi]
    8b2a:	00 00                	add    BYTE PTR [rax],al
    8b2c:	2f                   	(bad)
    8b2d:	14 0c                	adc    al,0xc
    8b2f:	b2 21                	mov    dl,0x21
    8b31:	00 00                	add    BYTE PTR [rax],al
    8b33:	28 06                	sub    BYTE PTR [rsi],al
    8b35:	a3 30 00 00 2f 15 0f 	movabs ds:0x23d30f152f000030,eax
    8b3c:	d3 23 
    8b3e:	00 00                	add    BYTE PTR [rax],al
    8b40:	30 00                	xor    BYTE PTR [rax],al
    8b42:	13 31                	adc    esi,DWORD PTR [rcx]
    8b44:	36 00 00             	ss add BYTE PTR [rax],al
    8b47:	0c 66                	or     al,0x66
    8b49:	25 00 00 2d f7       	and    eax,0xf72d0000
    8b4e:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8b51:	00 00                	add    BYTE PTR [rax],al
    8b53:	e9 36 00 00 01       	jmp    1008b8e <_end+0x1002b76>
    8b58:	0b 30                	or     esi,DWORD PTR [rax]
    8b5a:	00 00                	add    BYTE PTR [rax],al
    8b5c:	00 0c 57             	add    BYTE PTR [rdi+rdx*2],cl
    8b5f:	31 00                	xor    DWORD PTR [rax],eax
    8b61:	00 2e                	add    BYTE PTR [rsi],ch
    8b63:	69 01 f3 2e 00 00    	imul   eax,DWORD PTR [rcx],0x2ef3
    8b69:	09 37                	or     DWORD PTR [rdi],esi
    8b6b:	00 00                	add    BYTE PTR [rax],al
    8b6d:	01 f3                	add    ebx,esi
    8b6f:	2e 00 00             	cs add BYTE PTR [rax],al
    8b72:	01 0b                	add    DWORD PTR [rbx],ecx
    8b74:	30 00                	xor    BYTE PTR [rax],al
    8b76:	00 01                	add    BYTE PTR [rcx],al
    8b78:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8b7b:	00 00                	add    BYTE PTR [rax],al
    8b7d:	0c ac                	or     al,0xac
    8b7f:	17                   	(bad)
    8b80:	00 00                	add    BYTE PTR [rax],al
    8b82:	2d 85 0c a6 21       	sub    eax,0x21a60c85
    8b87:	00 00                	add    BYTE PTR [rax],al
    8b89:	29 37                	sub    DWORD PTR [rdi],esi
    8b8b:	00 00                	add    BYTE PTR [rax],al
    8b8d:	01 0b                	add    DWORD PTR [rbx],ecx
    8b8f:	30 00                	xor    BYTE PTR [rax],al
    8b91:	00 01                	add    BYTE PTR [rcx],al
    8b93:	0b 30                	or     esi,DWORD PTR [rax]
    8b95:	00 00                	add    BYTE PTR [rax],al
    8b97:	01 2e                	add    DWORD PTR [rsi],ebp
    8b99:	23 00                	and    eax,DWORD PTR [rax]
    8b9b:	00 00                	add    BYTE PTR [rax],al
    8b9d:	0c 48                	or     al,0x48
    8b9f:	1c 00                	sbb    al,0x0
    8ba1:	00 2e                	add    BYTE PTR [rsi],ch
    8ba3:	4e 01 f3             	rex.WRX add rbx,r14
    8ba6:	2e 00 00             	cs add BYTE PTR [rax],al
    8ba9:	49 37                	rex.WB (bad)
    8bab:	00 00                	add    BYTE PTR [rax],al
    8bad:	01 f3                	add    ebx,esi
    8baf:	2e 00 00             	cs add BYTE PTR [rax],al
    8bb2:	01 0b                	add    DWORD PTR [rbx],ecx
    8bb4:	30 00                	xor    BYTE PTR [rax],al
    8bb6:	00 01                	add    BYTE PTR [rcx],al
    8bb8:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8bbb:	00 00                	add    BYTE PTR [rax],al
    8bbd:	0e                   	(bad)
    8bbe:	52                   	push   rdx
    8bbf:	29 00                	sub    DWORD PTR [rax],eax
    8bc1:	00 2e                	add    BYTE PTR [rsi],ch
    8bc3:	06                   	(bad)
    8bc4:	01 01                	add    DWORD PTR [rcx],eax
    8bc6:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8bc9:	00 6f 37             	add    BYTE PTR [rdi+0x37],ch
    8bcc:	00 00                	add    BYTE PTR [rax],al
    8bce:	01 e2                	add    edx,esp
    8bd0:	22 00                	and    al,BYTE PTR [rax]
    8bd2:	00 01                	add    BYTE PTR [rcx],al
    8bd4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8bd5:	37                   	(bad)
    8bd6:	00 00                	add    BYTE PTR [rax],al
    8bd8:	01 2e                	add    DWORD PTR [rsi],ebp
    8bda:	23 00                	and    eax,DWORD PTR [rax]
    8bdc:	00 01                	add    BYTE PTR [rcx],al
    8bde:	8e 33                	mov    ?,WORD PTR [rbx]
    8be0:	00 00                	add    BYTE PTR [rax],al
    8be2:	00 0d 0b 30 00 00    	add    BYTE PTR [rip+0x300b],cl        # bbf3 <_end+0x5bdb>
    8be8:	0c 0b                	or     al,0xb
    8bea:	24 00                	and    al,0x0
    8bec:	00 2d d8 0f 2e 23    	add    BYTE PTR [rip+0x232e0fd8],ch        # 232e9bca <_end+0x232e3bb2>
    8bf2:	00 00                	add    BYTE PTR [rax],al
    8bf4:	8f                   	(bad)
    8bf5:	37                   	(bad)
    8bf6:	00 00                	add    BYTE PTR [rax],al
    8bf8:	01 0b                	add    DWORD PTR [rbx],ecx
    8bfa:	30 00                	xor    BYTE PTR [rax],al
    8bfc:	00 01                	add    BYTE PTR [rcx],al
    8bfe:	0b 30                	or     esi,DWORD PTR [rax]
    8c00:	00 00                	add    BYTE PTR [rax],al
    8c02:	00 0e                	add    BYTE PTR [rsi],cl
    8c04:	f6 29                	imul   BYTE PTR [rcx]
    8c06:	00 00                	add    BYTE PTR [rax],al
    8c08:	2d 92 01 0f 2e       	sub    eax,0x2e0f0192
    8c0d:	00 00                	add    BYTE PTR [rax],al
    8c0f:	00 ab 37 00 00 01    	add    BYTE PTR [rbx+0x1000037],ch
    8c15:	0b 30                	or     esi,DWORD PTR [rax]
    8c17:	00 00                	add    BYTE PTR [rax],al
    8c19:	01 ab 37 00 00 00    	add    DWORD PTR [rbx+0x37],ebp
    8c1f:	0d f3 2e 00 00       	or     eax,0x2ef3
    8c24:	0e                   	(bad)
    8c25:	fd                   	std
    8c26:	29 00                	sub    DWORD PTR [rax],eax
    8c28:	00 2d 97 01 0e 35    	add    BYTE PTR [rip+0x350e0197],ch        # 350e8dc5 <_end+0x350e2dad>
    8c2e:	00 00                	add    BYTE PTR [rax],al
    8c30:	00 cc                	add    ah,cl
    8c32:	37                   	(bad)
    8c33:	00 00                	add    BYTE PTR [rax],al
    8c35:	01 0b                	add    DWORD PTR [rbx],ecx
    8c37:	30 00                	xor    BYTE PTR [rax],al
    8c39:	00 01                	add    BYTE PTR [rcx],al
    8c3b:	ab                   	stos   DWORD PTR es:[rdi],eax
    8c3c:	37                   	(bad)
    8c3d:	00 00                	add    BYTE PTR [rax],al
    8c3f:	00 0c 45 2a 00 00 2d 	add    BYTE PTR [rax*2+0x2d00002a],cl
    8c46:	f2 11 f3             	repnz adc ebx,esi
    8c49:	2e 00 00             	cs add BYTE PTR [rax],al
    8c4c:	ec                   	in     al,dx
    8c4d:	37                   	(bad)
    8c4e:	00 00                	add    BYTE PTR [rax],al
    8c50:	01 f3                	add    ebx,esi
    8c52:	2e 00 00             	cs add BYTE PTR [rax],al
    8c55:	01 0b                	add    DWORD PTR [rbx],ecx
    8c57:	30 00                	xor    BYTE PTR [rax],al
    8c59:	00 01                	add    BYTE PTR [rcx],al
    8c5b:	ab                   	stos   DWORD PTR es:[rdi],eax
    8c5c:	37                   	(bad)
    8c5d:	00 00                	add    BYTE PTR [rax],al
    8c5f:	00 04 1a             	add    BYTE PTR [rdx+rbx*1],al
    8c62:	1c 00                	sbb    al,0x0
    8c64:	00 2d f4 01 11 11    	add    BYTE PTR [rip+0x111101f4],ch        # 11118e5e <_end+0x11112e46>
    8c6a:	1c 00                	sbb    al,0x0
    8c6c:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    8c72:	38 00                	cmp    BYTE PTR [rax],al
    8c74:	00 01                	add    BYTE PTR [rcx],al
    8c76:	0b 30                	or     esi,DWORD PTR [rax]
    8c78:	00 00                	add    BYTE PTR [rax],al
    8c7a:	01 ab 37 00 00 01    	add    DWORD PTR [rbx+0x1000037],ebp
    8c80:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8c81:	21 00                	and    DWORD PTR [rax],eax
    8c83:	00 00                	add    BYTE PTR [rax],al
    8c85:	04 2c                	add    al,0x2c
    8c87:	0f 00 00             	sldt   WORD PTR [rax]
    8c8a:	2d f7 01 1a 23       	sub    eax,0x231a01f7
    8c8f:	0f 00 00             	sldt   WORD PTR [rax]
    8c92:	8a 21                	mov    ah,BYTE PTR [rcx]
    8c94:	00 00                	add    BYTE PTR [rax],al
    8c96:	36 38 00             	ss cmp BYTE PTR [rax],al
    8c99:	00 01                	add    BYTE PTR [rcx],al
    8c9b:	0b 30                	or     esi,DWORD PTR [rax]
    8c9d:	00 00                	add    BYTE PTR [rax],al
    8c9f:	01 ab 37 00 00 01    	add    DWORD PTR [rbx+0x1000037],ebp
    8ca5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8ca6:	21 00                	and    DWORD PTR [rax],eax
    8ca8:	00 00                	add    BYTE PTR [rax],al
    8caa:	0c dd                	or     al,0xdd
    8cac:	10 00                	adc    BYTE PTR [rax],al
    8cae:	00 2d 9f 0f 2e 23    	add    BYTE PTR [rip+0x232e0f9f],ch        # 232e9c53 <_end+0x232e3c3b>
    8cb4:	00 00                	add    BYTE PTR [rax],al
    8cb6:	56                   	push   rsi
    8cb7:	38 00                	cmp    BYTE PTR [rax],al
    8cb9:	00 01                	add    BYTE PTR [rcx],al
    8cbb:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8cbf:	01 0b                	add    DWORD PTR [rbx],ecx
    8cc1:	30 00                	xor    BYTE PTR [rax],al
    8cc3:	00 01                	add    BYTE PTR [rcx],al
    8cc5:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8cc8:	00 00                	add    BYTE PTR [rax],al
    8cca:	0e                   	(bad)
    8ccb:	5a                   	pop    rdx
    8ccc:	23 00                	and    eax,DWORD PTR [rax]
    8cce:	00 2d 5d 01 01 a6    	add    BYTE PTR [rip+0xffffffffa601015d],ch        # ffffffffa6018e31 <_end+0xffffffffa6012e19>
    8cd4:	21 00                	and    DWORD PTR [rax],eax
    8cd6:	00 6d 38             	add    BYTE PTR [rbp+0x38],ch
    8cd9:	00 00                	add    BYTE PTR [rax],al
    8cdb:	01 48 32             	add    DWORD PTR [rax+0x32],ecx
    8cde:	00 00                	add    BYTE PTR [rax],al
    8ce0:	00 0e                	add    BYTE PTR [rsi],cl
    8ce2:	1f                   	(bad)
    8ce3:	1d 00 00 2d 1b       	sbb    eax,0x1b2d0000
    8ce8:	01 0c a6             	add    DWORD PTR [rsi+riz*4],ecx
    8ceb:	21 00                	and    DWORD PTR [rax],eax
    8ced:	00 8e 38 00 00 01    	add    BYTE PTR [rsi+0x1000038],cl
    8cf3:	0b 30                	or     esi,DWORD PTR [rax]
    8cf5:	00 00                	add    BYTE PTR [rax],al
    8cf7:	01 0b                	add    DWORD PTR [rbx],ecx
    8cf9:	30 00                	xor    BYTE PTR [rax],al
    8cfb:	00 01                	add    BYTE PTR [rcx],al
    8cfd:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8d00:	00 00                	add    BYTE PTR [rax],al
    8d02:	0c e2                	or     al,0xe2
    8d04:	21 00                	and    DWORD PTR [rax],eax
    8d06:	00 2e                	add    BYTE PTR [rsi],ch
    8d08:	18 01                	sbb    BYTE PTR [rcx],al
    8d0a:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d0e:	ae                   	scas   al,BYTE PTR es:[rdi]
    8d0f:	38 00                	cmp    BYTE PTR [rax],al
    8d11:	00 01                	add    BYTE PTR [rcx],al
    8d13:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d17:	01 0b                	add    DWORD PTR [rbx],ecx
    8d19:	30 00                	xor    BYTE PTR [rax],al
    8d1b:	00 01                	add    BYTE PTR [rcx],al
    8d1d:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8d20:	00 00                	add    BYTE PTR [rax],al
    8d22:	0c d5                	or     al,0xd5
    8d24:	17                   	(bad)
    8d25:	00 00                	add    BYTE PTR [rax],al
    8d27:	2e 21 01             	cs and DWORD PTR [rcx],eax
    8d2a:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d2e:	ce                   	(bad)
    8d2f:	38 00                	cmp    BYTE PTR [rax],al
    8d31:	00 01                	add    BYTE PTR [rcx],al
    8d33:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d37:	01 0b                	add    DWORD PTR [rbx],ecx
    8d39:	30 00                	xor    BYTE PTR [rax],al
    8d3b:	00 01                	add    BYTE PTR [rcx],al
    8d3d:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8d40:	00 00                	add    BYTE PTR [rax],al
    8d42:	0c 69                	or     al,0x69
    8d44:	18 00                	sbb    BYTE PTR [rax],al
    8d46:	00 2e                	add    BYTE PTR [rsi],ch
    8d48:	34 01                	xor    al,0x1
    8d4a:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d4e:	ee                   	out    dx,al
    8d4f:	38 00                	cmp    BYTE PTR [rax],al
    8d51:	00 01                	add    BYTE PTR [rcx],al
    8d53:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8d57:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    8d5e:	23 00                	and    eax,DWORD PTR [rax]
    8d60:	00 00                	add    BYTE PTR [rax],al
    8d62:	0c ca                	or     al,0xca
    8d64:	23 00                	and    eax,DWORD PTR [rax]
    8d66:	00 2e                	add    BYTE PTR [rsi],ch
    8d68:	b2 01                	mov    dl,0x1
    8d6a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d6b:	21 00                	and    DWORD PTR [rax],eax
    8d6d:	00 05 39 00 00 01    	add    BYTE PTR [rip+0x1000039],al        # 1008dac <_end+0x1002d94>
    8d73:	0b 30                	or     esi,DWORD PTR [rax]
    8d75:	00 00                	add    BYTE PTR [rax],al
    8d77:	24 00                	and    al,0x0
    8d79:	04 5b                	add    al,0x5b
    8d7b:	17                   	(bad)
    8d7c:	00 00                	add    BYTE PTR [rax],al
    8d7e:	2d 1f 03 0c 52       	sub    eax,0x520c031f
    8d83:	17                   	(bad)
    8d84:	00 00                	add    BYTE PTR [rax],al
    8d86:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d87:	21 00                	and    DWORD PTR [rax],eax
    8d89:	00 21                	add    BYTE PTR [rcx],ah
    8d8b:	39 00                	cmp    DWORD PTR [rax],eax
    8d8d:	00 01                	add    BYTE PTR [rcx],al
    8d8f:	0b 30                	or     esi,DWORD PTR [rax]
    8d91:	00 00                	add    BYTE PTR [rax],al
    8d93:	24 00                	and    al,0x0
    8d95:	0f ca                	bswap  edx
    8d97:	13 00                	adc    eax,DWORD PTR [rax]
    8d99:	00 2d ba 1d ca 13    	add    BYTE PTR [rip+0x13ca1dba],ch        # 13caab59 <_end+0x13ca4b41>
    8d9f:	00 00                	add    BYTE PTR [rax],al
    8da1:	0b 30                	or     esi,DWORD PTR [rax]
    8da3:	00 00                	add    BYTE PTR [rax],al
    8da5:	40 39 00             	rex cmp DWORD PTR [rax],eax
    8da8:	00 01                	add    BYTE PTR [rcx],al
    8daa:	0b 30                	or     esi,DWORD PTR [rax]
    8dac:	00 00                	add    BYTE PTR [rax],al
    8dae:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8db5:	ca 13 00             	retf   0x13
    8db8:	00 2d b8 17 ca 13    	add    BYTE PTR [rip+0x13ca17b8],ch        # 13caa576 <_end+0x13ca455e>
    8dbe:	00 00                	add    BYTE PTR [rax],al
    8dc0:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8dc4:	5f                   	pop    rdi
    8dc5:	39 00                	cmp    DWORD PTR [rax],eax
    8dc7:	00 01                	add    BYTE PTR [rcx],al
    8dc9:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8dcd:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8dd4:	c9                   	leave
    8dd5:	16                   	(bad)
    8dd6:	00 00                	add    BYTE PTR [rax],al
    8dd8:	2d de 1d c9 16       	sub    eax,0x16c91dde
    8ddd:	00 00                	add    BYTE PTR [rax],al
    8ddf:	0b 30                	or     esi,DWORD PTR [rax]
    8de1:	00 00                	add    BYTE PTR [rax],al
    8de3:	7e 39                	jle    8e1e <_end+0x2e06>
    8de5:	00 00                	add    BYTE PTR [rax],al
    8de7:	01 0b                	add    DWORD PTR [rbx],ecx
    8de9:	30 00                	xor    BYTE PTR [rax],al
    8deb:	00 01                	add    BYTE PTR [rcx],al
    8ded:	0b 30                	or     esi,DWORD PTR [rax]
    8def:	00 00                	add    BYTE PTR [rax],al
    8df1:	00 0f                	add    BYTE PTR [rdi],cl
    8df3:	c9                   	leave
    8df4:	16                   	(bad)
    8df5:	00 00                	add    BYTE PTR [rax],al
    8df7:	2d dc 17 c9 16       	sub    eax,0x16c917dc
    8dfc:	00 00                	add    BYTE PTR [rax],al
    8dfe:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8e02:	9d                   	popf
    8e03:	39 00                	cmp    DWORD PTR [rax],eax
    8e05:	00 01                	add    BYTE PTR [rcx],al
    8e07:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8e0b:	01 0b                	add    DWORD PTR [rbx],ecx
    8e0d:	30 00                	xor    BYTE PTR [rax],al
    8e0f:	00 00                	add    BYTE PTR [rax],al
    8e11:	0f dd 12             	paddusw mm2,QWORD PTR [rdx]
    8e14:	00 00                	add    BYTE PTR [rax],al
    8e16:	2d c4 1d dd 12       	sub    eax,0x12dd1dc4
    8e1b:	00 00                	add    BYTE PTR [rax],al
    8e1d:	0b 30                	or     esi,DWORD PTR [rax]
    8e1f:	00 00                	add    BYTE PTR [rax],al
    8e21:	bc 39 00 00 01       	mov    esp,0x1000039
    8e26:	0b 30                	or     esi,DWORD PTR [rax]
    8e28:	00 00                	add    BYTE PTR [rax],al
    8e2a:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8e31:	dd 12                	fst    QWORD PTR [rdx]
    8e33:	00 00                	add    BYTE PTR [rax],al
    8e35:	2d c2 17 dd 12       	sub    eax,0x12dd17c2
    8e3a:	00 00                	add    BYTE PTR [rax],al
    8e3c:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8e40:	db 39                	fstp   TBYTE PTR [rcx]
    8e42:	00 00                	add    BYTE PTR [rax],al
    8e44:	01 f3                	add    ebx,esi
    8e46:	2e 00 00             	cs add BYTE PTR [rax],al
    8e49:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8e50:	81 28 00 00 2d e9    	sub    DWORD PTR [rax],0xe92d0000
    8e56:	1d 81 28 00 00       	sbb    eax,0x2881
    8e5b:	0b 30                	or     esi,DWORD PTR [rax]
    8e5d:	00 00                	add    BYTE PTR [rax],al
    8e5f:	fa                   	cli
    8e60:	39 00                	cmp    DWORD PTR [rax],eax
    8e62:	00 01                	add    BYTE PTR [rcx],al
    8e64:	0b 30                	or     esi,DWORD PTR [rax]
    8e66:	00 00                	add    BYTE PTR [rax],al
    8e68:	01 0b                	add    DWORD PTR [rbx],ecx
    8e6a:	30 00                	xor    BYTE PTR [rax],al
    8e6c:	00 00                	add    BYTE PTR [rax],al
    8e6e:	0f 81 28 00 00 2d    	jno    2d008e9c <_end+0x2d002e84>
    8e74:	e7 17                	out    0x17,eax
    8e76:	81 28 00 00 f3 2e    	sub    DWORD PTR [rax],0x2ef30000
    8e7c:	00 00                	add    BYTE PTR [rax],al
    8e7e:	19 3a                	sbb    DWORD PTR [rdx],edi
    8e80:	00 00                	add    BYTE PTR [rax],al
    8e82:	01 f3                	add    ebx,esi
    8e84:	2e 00 00             	cs add BYTE PTR [rax],al
    8e87:	01 0b                	add    DWORD PTR [rbx],ecx
    8e89:	30 00                	xor    BYTE PTR [rax],al
    8e8b:	00 00                	add    BYTE PTR [rax],al
    8e8d:	04 05                	add    al,0x5
    8e8f:	16                   	(bad)
    8e90:	00 00                	add    BYTE PTR [rax],al
    8e92:	2d 12 01 1d 05       	sub    eax,0x51d0112
    8e97:	16                   	(bad)
    8e98:	00 00                	add    BYTE PTR [rax],al
    8e9a:	0b 30                	or     esi,DWORD PTR [rax]
    8e9c:	00 00                	add    BYTE PTR [rax],al
    8e9e:	3e 3a 00             	ds cmp al,BYTE PTR [rax]
    8ea1:	00 01                	add    BYTE PTR [rcx],al
    8ea3:	0b 30                	or     esi,DWORD PTR [rax]
    8ea5:	00 00                	add    BYTE PTR [rax],al
    8ea7:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    8eae:	23 00                	and    eax,DWORD PTR [rax]
    8eb0:	00 00                	add    BYTE PTR [rax],al
    8eb2:	04 05                	add    al,0x5
    8eb4:	16                   	(bad)
    8eb5:	00 00                	add    BYTE PTR [rax],al
    8eb7:	2d 10 01 17 05       	sub    eax,0x5170110
    8ebc:	16                   	(bad)
    8ebd:	00 00                	add    BYTE PTR [rax],al
    8ebf:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8ec3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    8ec5:	00 00                	add    BYTE PTR [rax],al
    8ec7:	01 f3                	add    ebx,esi
    8ec9:	2e 00 00             	cs add BYTE PTR [rax],al
    8ecc:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    8ed3:	23 00                	and    eax,DWORD PTR [rax]
    8ed5:	00 00                	add    BYTE PTR [rax],al
    8ed7:	0e                   	(bad)
    8ed8:	e5 27                	in     eax,0x27
    8eda:	00 00                	add    BYTE PTR [rax],al
    8edc:	2d 99 01 14 c5       	sub    eax,0xc5140199
    8ee1:	21 00                	and    DWORD PTR [rax],eax
    8ee3:	00 7f 3a             	add    BYTE PTR [rdi+0x3a],bh
    8ee6:	00 00                	add    BYTE PTR [rax],al
    8ee8:	01 0b                	add    DWORD PTR [rbx],ecx
    8eea:	30 00                	xor    BYTE PTR [rax],al
    8eec:	00 01                	add    BYTE PTR [rcx],al
    8eee:	ab                   	stos   DWORD PTR es:[rdi],eax
    8eef:	37                   	(bad)
    8ef0:	00 00                	add    BYTE PTR [rax],al
    8ef2:	00 04 6e             	add    BYTE PTR [rsi+rbp*2],al
    8ef5:	1e                   	(bad)
    8ef6:	00 00                	add    BYTE PTR [rax],al
    8ef8:	2d fc 01 16 65       	sub    eax,0x651601fc
    8efd:	1e                   	(bad)
    8efe:	00 00                	add    BYTE PTR [rax],al
    8f00:	be 21 00 00 a4       	mov    esi,0xa4000021
    8f05:	3a 00                	cmp    al,BYTE PTR [rax]
    8f07:	00 01                	add    BYTE PTR [rcx],al
    8f09:	0b 30                	or     esi,DWORD PTR [rax]
    8f0b:	00 00                	add    BYTE PTR [rax],al
    8f0d:	01 ab 37 00 00 01    	add    DWORD PTR [rbx+0x1000037],ebp
    8f13:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8f14:	21 00                	and    DWORD PTR [rax],eax
    8f16:	00 00                	add    BYTE PTR [rax],al
    8f18:	04 d0                	add    al,0xd0
    8f1a:	32 00                	xor    al,BYTE PTR [rax]
    8f1c:	00 2d 01 02 1f c7    	add    BYTE PTR [rip+0xffffffffc71f0201],ch        # ffffffffc71f9123 <_end+0xffffffffc71f310b>
    8f22:	32 00                	xor    al,BYTE PTR [rax]
    8f24:	00 91 21 00 00 c9    	add    BYTE PTR [rcx-0x36ffffdf],dl
    8f2a:	3a 00                	cmp    al,BYTE PTR [rax]
    8f2c:	00 01                	add    BYTE PTR [rcx],al
    8f2e:	0b 30                	or     esi,DWORD PTR [rax]
    8f30:	00 00                	add    BYTE PTR [rax],al
    8f32:	01 ab 37 00 00 01    	add    DWORD PTR [rbx+0x1000037],ebp
    8f38:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8f39:	21 00                	and    DWORD PTR [rax],eax
    8f3b:	00 00                	add    BYTE PTR [rax],al
    8f3d:	1b 15 31 00 00 60    	sbb    edx,DWORD PTR [rip+0x60000031]        # 60008f74 <_end+0x60002f5c>
    8f43:	30 33                	xor    BYTE PTR [rbx],dh
    8f45:	08 0f                	or     BYTE PTR [rdi],cl
    8f47:	3c 00                	cmp    al,0x0
    8f49:	00 06                	add    BYTE PTR [rsi],al
    8f4b:	e9 12 00 00 30       	jmp    30008f62 <_end+0x30002f4a>
    8f50:	37                   	(bad)
    8f51:	09 e2                	or     edx,esp
    8f53:	22 00                	and    al,BYTE PTR [rax]
    8f55:	00 00                	add    BYTE PTR [rax],al
    8f57:	06                   	(bad)
    8f58:	b5 18                	mov    ch,0x18
    8f5a:	00 00                	add    BYTE PTR [rax],al
    8f5c:	30 38                	xor    BYTE PTR [rax],bh
    8f5e:	09 e2                	or     edx,esp
    8f60:	22 00                	and    al,BYTE PTR [rax]
    8f62:	00 08                	add    BYTE PTR [rax],cl
    8f64:	06                   	(bad)
    8f65:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    8f66:	2f                   	(bad)
    8f67:	00 00                	add    BYTE PTR [rax],al
    8f69:	30 3e                	xor    BYTE PTR [rsi],bh
    8f6b:	09 e2                	or     edx,esp
    8f6d:	22 00                	and    al,BYTE PTR [rax]
    8f6f:	00 10                	add    BYTE PTR [rax],dl
    8f71:	06                   	(bad)
    8f72:	b4 0f                	mov    ah,0xf
    8f74:	00 00                	add    BYTE PTR [rax],al
    8f76:	30 44 09 e2          	xor    BYTE PTR [rcx+rcx*1-0x1e],al
    8f7a:	22 00                	and    al,BYTE PTR [rax]
    8f7c:	00 18                	add    BYTE PTR [rax],bl
    8f7e:	06                   	(bad)
    8f7f:	a3 2e 00 00 30 45 09 	movabs ds:0x22e209453000002e,eax
    8f86:	e2 22 
    8f88:	00 00                	add    BYTE PTR [rax],al
    8f8a:	20 06                	and    BYTE PTR [rsi],al
    8f8c:	e5 12                	in     eax,0x12
    8f8e:	00 00                	add    BYTE PTR [rax],al
    8f90:	30 46 09             	xor    BYTE PTR [rsi+0x9],al
    8f93:	e2 22                	loop   8fb7 <_end+0x2f9f>
    8f95:	00 00                	add    BYTE PTR [rax],al
    8f97:	28 06                	sub    BYTE PTR [rsi],al
    8f99:	b1 18                	mov    cl,0x18
    8f9b:	00 00                	add    BYTE PTR [rax],al
    8f9d:	30 47 09             	xor    BYTE PTR [rdi+0x9],al
    8fa0:	e2 22                	loop   8fc4 <_end+0x2fac>
    8fa2:	00 00                	add    BYTE PTR [rax],al
    8fa4:	30 06                	xor    BYTE PTR [rsi],al
    8fa6:	a3 2f 00 00 30 48 09 	movabs ds:0x22e209483000002f,eax
    8fad:	e2 22 
    8faf:	00 00                	add    BYTE PTR [rax],al
    8fb1:	38 06                	cmp    BYTE PTR [rsi],al
    8fb3:	09 12                	or     DWORD PTR [rdx],edx
    8fb5:	00 00                	add    BYTE PTR [rax],al
    8fb7:	30 49 09             	xor    BYTE PTR [rcx+0x9],cl
    8fba:	e2 22                	loop   8fde <_end+0x2fc6>
    8fbc:	00 00                	add    BYTE PTR [rax],al
    8fbe:	40 06                	rex (bad)
    8fc0:	58                   	pop    rax
    8fc1:	19 00                	sbb    DWORD PTR [rax],eax
    8fc3:	00 30                	add    BYTE PTR [rax],dh
    8fc5:	4a 09 e2             	rex.WX or rdx,rsp
    8fc8:	22 00                	and    al,BYTE PTR [rax]
    8fca:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    8fcd:	e5 10                	in     eax,0x10
    8fcf:	00 00                	add    BYTE PTR [rax],al
    8fd1:	30 4b 08             	xor    BYTE PTR [rbx+0x8],cl
    8fd4:	e7 22                	out    0x22,eax
    8fd6:	00 00                	add    BYTE PTR [rax],al
    8fd8:	50                   	push   rax
    8fd9:	06                   	(bad)
    8fda:	e9 10 00 00 30       	jmp    30008fef <_end+0x30002fd7>
    8fdf:	4c 08 e7             	rex.WR or dil,r12b
    8fe2:	22 00                	and    al,BYTE PTR [rax]
    8fe4:	00 51 06             	add    BYTE PTR [rcx+0x6],dl
    8fe7:	86 19                	xchg   BYTE PTR [rcx],bl
    8fe9:	00 00                	add    BYTE PTR [rax],al
    8feb:	30 4e 08             	xor    BYTE PTR [rsi+0x8],cl
    8fee:	e7 22                	out    0x22,eax
    8ff0:	00 00                	add    BYTE PTR [rax],al
    8ff2:	52                   	push   rdx
    8ff3:	06                   	(bad)
    8ff4:	f1                   	int1
    8ff5:	27                   	(bad)
    8ff6:	00 00                	add    BYTE PTR [rax],al
    8ff8:	30 50 08             	xor    BYTE PTR [rax+0x8],dl
    8ffb:	e7 22                	out    0x22,eax
    8ffd:	00 00                	add    BYTE PTR [rax],al
    8fff:	53                   	push   rbx
    9000:	06                   	(bad)
    9001:	bc 13 00 00 30       	mov    esp,0x30000013
    9006:	52                   	push   rdx
    9007:	08 e7                	or     bh,ah
    9009:	22 00                	and    al,BYTE PTR [rax]
    900b:	00 54 06 80          	add    BYTE PTR [rsi+rax*1-0x80],dl
    900f:	20 00                	and    BYTE PTR [rax],al
    9011:	00 30                	add    BYTE PTR [rax],dh
    9013:	54                   	push   rsp
    9014:	08 e7                	or     bh,ah
    9016:	22 00                	and    al,BYTE PTR [rax]
    9018:	00 55 06             	add    BYTE PTR [rbp+0x6],dl
    901b:	75 30                	jne    904d <_end+0x3035>
    901d:	00 00                	add    BYTE PTR [rax],al
    901f:	30 5b 08             	xor    BYTE PTR [rbx+0x8],bl
    9022:	e7 22                	out    0x22,eax
    9024:	00 00                	add    BYTE PTR [rax],al
    9026:	56                   	push   rsi
    9027:	06                   	(bad)
    9028:	7f 31                	jg     905b <_end+0x3043>
    902a:	00 00                	add    BYTE PTR [rax],al
    902c:	30 5c 08 e7          	xor    BYTE PTR [rax+rcx*1-0x19],bl
    9030:	22 00                	and    al,BYTE PTR [rax]
    9032:	00 57 06             	add    BYTE PTR [rdi+0x6],dl
    9035:	82                   	(bad)
    9036:	19 00                	sbb    DWORD PTR [rax],eax
    9038:	00 30                	add    BYTE PTR [rax],dh
    903a:	5f                   	pop    rdi
    903b:	08 e7                	or     bh,ah
    903d:	22 00                	and    al,BYTE PTR [rax]
    903f:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    9042:	ed                   	in     eax,dx
    9043:	27                   	(bad)
    9044:	00 00                	add    BYTE PTR [rax],al
    9046:	30 61 08             	xor    BYTE PTR [rcx+0x8],ah
    9049:	e7 22                	out    0x22,eax
    904b:	00 00                	add    BYTE PTR [rax],al
    904d:	59                   	pop    rcx
    904e:	06                   	(bad)
    904f:	b8 13 00 00 30       	mov    eax,0x30000013
    9054:	63 08                	movsxd ecx,DWORD PTR [rax]
    9056:	e7 22                	out    0x22,eax
    9058:	00 00                	add    BYTE PTR [rax],al
    905a:	5a                   	pop    rdx
    905b:	06                   	(bad)
    905c:	7c 20                	jl     907e <_end+0x3066>
    905e:	00 00                	add    BYTE PTR [rax],al
    9060:	30 65 08             	xor    BYTE PTR [rbp+0x8],ah
    9063:	e7 22                	out    0x22,eax
    9065:	00 00                	add    BYTE PTR [rax],al
    9067:	5b                   	pop    rbx
    9068:	06                   	(bad)
    9069:	71 30                	jno    909b <_end+0x3083>
    906b:	00 00                	add    BYTE PTR [rax],al
    906d:	30 6c 08 e7          	xor    BYTE PTR [rax+rcx*1-0x19],ch
    9071:	22 00                	and    al,BYTE PTR [rax]
    9073:	00 5c 06 7b          	add    BYTE PTR [rsi+rax*1+0x7b],bl
    9077:	31 00                	xor    DWORD PTR [rax],eax
    9079:	00 30                	add    BYTE PTR [rax],dh
    907b:	6d                   	ins    DWORD PTR es:[rdi],dx
    907c:	08 e7                	or     bh,ah
    907e:	22 00                	and    al,BYTE PTR [rax]
    9080:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
    9083:	0c cc                	or     al,0xcc
    9085:	2a 00                	sub    al,BYTE PTR [rax]
    9087:	00 30                	add    BYTE PTR [rax],dh
    9089:	7a 0e                	jp     9099 <_end+0x3081>
    908b:	e2 22                	loop   90af <_end+0x3097>
    908d:	00 00                	add    BYTE PTR [rax],al
    908f:	2a 3c 00             	sub    bh,BYTE PTR [rax+rax*1]
    9092:	00 01                	add    BYTE PTR [rcx],al
    9094:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9095:	21 00                	and    DWORD PTR [rax],eax
    9097:	00 01                	add    BYTE PTR [rcx],al
    9099:	d3 23                	shl    DWORD PTR [rbx],cl
    909b:	00 00                	add    BYTE PTR [rax],al
    909d:	00 37                	add    BYTE PTR [rdi],dh
    909f:	8a 0e                	mov    cl,BYTE PTR [rsi]
    90a1:	00 00                	add    BYTE PTR [rax],al
    90a3:	30 7d 16             	xor    BYTE PTR [rbp+0x16],bh
    90a6:	36 3c 00             	ss cmp al,0x0
    90a9:	00 0d c9 3a 00 00    	add    BYTE PTR [rip+0x3ac9],cl        # cb78 <_end+0x6b60>
    90af:	28 30                	sub    BYTE PTR [rax],dh
    90b1:	11 00                	adc    DWORD PTR [rax],eax
    90b3:	00 22                	add    BYTE PTR [rdx],ah
    90b5:	5c                   	pop    rsp
    90b6:	03 4d 3c             	add    ecx,DWORD PTR [rbp+0x3c]
    90b9:	00 00                	add    BYTE PTR [rax],al
    90bb:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    90c1:	0c fe                	or     al,0xfe
    90c3:	15 00 00 22 b8       	adc    eax,0xb8220000
    90c8:	0c a6                	or     al,0xa6
    90ca:	21 00                	and    DWORD PTR [rax],eax
    90cc:	00 63 3c             	add    BYTE PTR [rbx+0x3c],ah
    90cf:	00 00                	add    BYTE PTR [rax],al
    90d1:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    90d7:	0e                   	(bad)
    90d8:	d6                   	(bad)
    90d9:	25 00 00 22 5e       	and    eax,0x5e220000
    90de:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    90e1:	21 00                	and    DWORD PTR [rax],eax
    90e3:	00 7a 3c             	add    BYTE PTR [rdx+0x3c],bh
    90e6:	00 00                	add    BYTE PTR [rax],al
    90e8:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    90ee:	0e                   	(bad)
    90ef:	9c                   	pushf
    90f0:	2e 00 00             	cs add BYTE PTR [rax],al
    90f3:	22 60 03             	and    ah,BYTE PTR [rax+0x3]
    90f6:	0c a6                	or     al,0xa6
    90f8:	21 00                	and    DWORD PTR [rax],eax
    90fa:	00 91 3c 00 00 01    	add    BYTE PTR [rcx+0x100003c],dl
    9100:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9103:	00 00                	add    BYTE PTR [rax],al
    9105:	0c 7d                	or     al,0x7d
    9107:	34 00                	xor    al,0x0
    9109:	00 22                	add    BYTE PTR [rdx],ah
    910b:	ec                   	in     al,dx
    910c:	0c a6                	or     al,0xa6
    910e:	21 00                	and    DWORD PTR [rax],eax
    9110:	00 a7 3c 00 00 01    	add    BYTE PTR [rdi+0x100003c],ah
    9116:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9119:	00 00                	add    BYTE PTR [rax],al
    911b:	0e                   	(bad)
    911c:	34 0c                	xor    al,0xc
    911e:	00 00                	add    BYTE PTR [rax],al
    9120:	22 3f                	and    bh,BYTE PTR [rdi]
    9122:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    9125:	21 00                	and    DWORD PTR [rax],eax
    9127:	00 be 3c 00 00 01    	add    BYTE PTR [rsi+0x100003c],bh
    912d:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9130:	00 00                	add    BYTE PTR [rax],al
    9132:	0e                   	(bad)
    9133:	06                   	(bad)
    9134:	11 00                	adc    DWORD PTR [rax],eax
    9136:	00 22                	add    BYTE PTR [rdx],ah
    9138:	3d 03 0c a6 21       	cmp    eax,0x21a60c03
    913d:	00 00                	add    BYTE PTR [rax],al
    913f:	da 3c 00             	fidivr DWORD PTR [rax+rax*1]
    9142:	00 01                	add    BYTE PTR [rcx],al
    9144:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9147:	00 01                	add    BYTE PTR [rcx],al
    9149:	da 3c 00             	fidivr DWORD PTR [rax+rax*1]
    914c:	00 00                	add    BYTE PTR [rax],al
    914e:	0d 7d 2c 00 00       	or     eax,0x2c7d
    9153:	0c 9e                	or     al,0x9e
    9155:	0c 00                	or     al,0x0
    9157:	00 02                	add    BYTE PTR [rdx],al
    9159:	c4 01 e2 22          	(bad)
    915d:	00 00                	add    BYTE PTR [rax],al
    915f:	ff                   	(bad)
    9160:	3c 00                	cmp    al,0x0
    9162:	00 01                	add    BYTE PTR [rcx],al
    9164:	e2 22                	loop   9188 <_end+0x3170>
    9166:	00 00                	add    BYTE PTR [rax],al
    9168:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    916e:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9171:	00 00                	add    BYTE PTR [rax],al
    9173:	0e                   	(bad)
    9174:	59                   	pop    rcx
    9175:	2c 00                	sub    al,0x0
    9177:	00 22                	add    BYTE PTR [rdx],ah
    9179:	08 01                	or     BYTE PTR [rcx],al
    917b:	0e                   	(bad)
    917c:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    917f:	00 1b                	add    BYTE PTR [rbx],bl
    9181:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    9186:	23 00                	and    eax,DWORD PTR [rax]
    9188:	00 01                	add    BYTE PTR [rcx],al
    918a:	d3 23                	shl    DWORD PTR [rbx],cl
    918c:	00 00                	add    BYTE PTR [rax],al
    918e:	00 0c d9             	add    BYTE PTR [rcx+rbx*8],cl
    9191:	32 00                	xor    al,BYTE PTR [rax]
    9193:	00 02                	add    BYTE PTR [rdx],al
    9195:	cf                   	iret
    9196:	01 2e                	add    DWORD PTR [rsi],ebp
    9198:	23 00                	and    eax,DWORD PTR [rax]
    919a:	00 40 3d             	add    BYTE PTR [rax+0x3d],al
    919d:	00 00                	add    BYTE PTR [rax],al
    919f:	01 d4                	add    esp,edx
    91a1:	22 00                	and    al,BYTE PTR [rax]
    91a3:	00 01                	add    BYTE PTR [rcx],al
    91a5:	2e 23 00             	cs and eax,DWORD PTR [rax]
    91a8:	00 01                	add    BYTE PTR [rcx],al
    91aa:	2e 23 00             	cs and eax,DWORD PTR [rax]
    91ad:	00 01                	add    BYTE PTR [rcx],al
    91af:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    91b2:	00 00                	add    BYTE PTR [rax],al
    91b4:	0e                   	(bad)
    91b5:	8c 2e                	mov    WORD PTR [rsi],gs
    91b7:	00 00                	add    BYTE PTR [rax],al
    91b9:	22 0f                	and    cl,BYTE PTR [rdi]
    91bb:	01 0e                	add    DWORD PTR [rsi],ecx
    91bd:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    91c0:	00 61 3d             	add    BYTE PTR [rcx+0x3d],ah
    91c3:	00 00                	add    BYTE PTR [rax],al
    91c5:	01 d3                	add    ebx,edx
    91c7:	23 00                	and    eax,DWORD PTR [rax]
    91c9:	00 01                	add    BYTE PTR [rcx],al
    91cb:	d3 23                	shl    DWORD PTR [rbx],cl
    91cd:	00 00                	add    BYTE PTR [rax],al
    91cf:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    91d5:	0e                   	(bad)
    91d6:	12 24 00             	adc    ah,BYTE PTR [rax+rax*1]
    91d9:	00 22                	add    BYTE PTR [rdx],ah
    91db:	0b 03                	or     eax,DWORD PTR [rbx]
    91dd:	0c a6                	or     al,0xa6
    91df:	21 00                	and    DWORD PTR [rax],eax
    91e1:	00 82 3d 00 00 01    	add    BYTE PTR [rdx+0x100003d],al
    91e7:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    91ea:	00 01                	add    BYTE PTR [rcx],al
    91ec:	b2 21                	mov    dl,0x21
    91ee:	00 00                	add    BYTE PTR [rax],al
    91f0:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    91f6:	0e                   	(bad)
    91f7:	5f                   	pop    rdi
    91f8:	20 00                	and    BYTE PTR [rax],al
    91fa:	00 22                	add    BYTE PTR [rdx],ah
    91fc:	43 03 0c a6          	add    ecx,DWORD PTR [r14+r12*4]
    9200:	21 00                	and    DWORD PTR [rax],eax
    9202:	00 9e 3d 00 00 01    	add    BYTE PTR [rsi+0x100003d],bl
    9208:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    920b:	00 01                	add    BYTE PTR [rcx],al
    920d:	9e                   	sahf
    920e:	3d 00 00 00 0d       	cmp    eax,0xd000000
    9213:	89 2c 00             	mov    DWORD PTR [rax+rax*1],ebp
    9216:	00 0e                	add    BYTE PTR [rsi],cl
    9218:	e3 18                	jrcxz  9232 <_end+0x321a>
    921a:	00 00                	add    BYTE PTR [rax],al
    921c:	22 11                	and    dl,BYTE PTR [rcx]
    921e:	03 11                	add    edx,DWORD PTR [rcx]
    9220:	b2 21                	mov    dl,0x21
    9222:	00 00                	add    BYTE PTR [rax],al
    9224:	ba 3d 00 00 01       	mov    edx,0x100003d
    9229:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    922c:	00 00                	add    BYTE PTR [rax],al
    922e:	0e                   	(bad)
    922f:	35 0c 00 00 22       	xor    eax,0x2200000c
    9234:	40 02 0c a6          	rex add cl,BYTE PTR [rsi+riz*4]
    9238:	21 00                	and    DWORD PTR [rax],eax
    923a:	00 d1                	add    cl,dl
    923c:	3d 00 00 01 8e       	cmp    eax,0x8e010000
    9241:	2c 00                	sub    al,0x0
    9243:	00 00                	add    BYTE PTR [rax],al
    9245:	37                   	(bad)
    9246:	80 25 00 00 31 2f 01 	and    BYTE PTR [rip+0x2f310000],0x1        # 2f31924d <_end+0x2f313235>
    924d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    924e:	21 00                	and    DWORD PTR [rax],eax
    9250:	00 28                	add    BYTE PTR [rax],ch
    9252:	04 24                	add    al,0x24
    9254:	00 00                	add    BYTE PTR [rax],al
    9256:	22 6e 03             	and    ch,BYTE PTR [rsi+0x3]
    9259:	ef                   	out    dx,eax
    925a:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    925f:	23 00                	and    eax,DWORD PTR [rax]
    9261:	00 00                	add    BYTE PTR [rax],al
    9263:	0c 3d                	or     al,0x3d
    9265:	15 00 00 22 9e       	adc    eax,0x9e220000
    926a:	0c a6                	or     al,0xa6
    926c:	21 00                	and    DWORD PTR [rax],eax
    926e:	00 05 3e 00 00 01    	add    BYTE PTR [rip+0x100003e],al        # 10092b2 <_end+0x100329a>
    9274:	d3 23                	shl    DWORD PTR [rbx],cl
    9276:	00 00                	add    BYTE PTR [rax],al
    9278:	00 0c 72             	add    BYTE PTR [rdx+rsi*2],cl
    927b:	24 00                	and    al,0x0
    927d:	00 22                	add    BYTE PTR [rdx],ah
    927f:	a0 0c a6 21 00 00 20 	movabs al,ds:0x3e20000021a60c
    9286:	3e 00 
    9288:	00 01                	add    BYTE PTR [rcx],al
    928a:	d3 23                	shl    DWORD PTR [rbx],cl
    928c:	00 00                	add    BYTE PTR [rax],al
    928e:	01 d3                	add    ebx,edx
    9290:	23 00                	and    eax,DWORD PTR [rax]
    9292:	00 00                	add    BYTE PTR [rax],al
    9294:	28 a9 2c 00 00 22    	sub    BYTE PTR [rcx+0x2200002c],ch
    929a:	16                   	(bad)
    929b:	03 32                	add    esi,DWORD PTR [rdx]
    929d:	3e 00 00             	ds add BYTE PTR [rax],al
    92a0:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    92a6:	28 cf                	sub    bh,cl
    92a8:	25 00 00 22 4e       	and    eax,0x4e220000
    92ad:	01 49 3e             	add    DWORD PTR [rcx+0x3e],ecx
    92b0:	00 00                	add    BYTE PTR [rax],al
    92b2:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    92b8:	e2 22                	loop   92dc <_end+0x32c4>
    92ba:	00 00                	add    BYTE PTR [rax],al
    92bc:	00 0e                	add    BYTE PTR [rsi],cl
    92be:	1f                   	(bad)
    92bf:	24 00                	and    al,0x0
    92c1:	00 22                	add    BYTE PTR [rdx],ah
    92c3:	53                   	push   rbx
    92c4:	01 0c a6             	add    DWORD PTR [rsi+riz*4],ecx
    92c7:	21 00                	and    DWORD PTR [rax],eax
    92c9:	00 6f 3e             	add    BYTE PTR [rdi+0x3e],ch
    92cc:	00 00                	add    BYTE PTR [rax],al
    92ce:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    92d4:	e2 22                	loop   92f8 <_end+0x32e0>
    92d6:	00 00                	add    BYTE PTR [rax],al
    92d8:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    92de:	2e 23 00             	cs and eax,DWORD PTR [rax]
    92e1:	00 00                	add    BYTE PTR [rax],al
    92e3:	37                   	(bad)
    92e4:	5b                   	pop    rbx
    92e5:	30 00                	xor    BYTE PTR [rax],al
    92e7:	00 22                	add    BYTE PTR [rdx],ah
    92e9:	c2 0e 8e             	ret    0x8e0e
    92ec:	2c 00                	sub    al,0x0
    92ee:	00 0c 82             	add    BYTE PTR [rdx+rax*4],cl
    92f1:	0f 00 00             	sldt   WORD PTR [rax]
    92f4:	22 d3                	and    dl,bl
    92f6:	0e                   	(bad)
    92f7:	e2 22                	loop   931b <_end+0x3303>
    92f9:	00 00                	add    BYTE PTR [rax],al
    92fb:	91                   	xchg   ecx,eax
    92fc:	3e 00 00             	ds add BYTE PTR [rax],al
    92ff:	01 e2                	add    edx,esp
    9301:	22 00                	and    al,BYTE PTR [rax]
    9303:	00 00                	add    BYTE PTR [rax],al
    9305:	0e                   	(bad)
    9306:	b5 30                	mov    ch,0x30
    9308:	00 00                	add    BYTE PTR [rax],al
    930a:	22 db                	and    bl,bl
    930c:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    930f:	21 00                	and    DWORD PTR [rax],eax
    9311:	00 ad 3e 00 00 01    	add    BYTE PTR [rbp+0x100003e],ch
    9317:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9318:	21 00                	and    DWORD PTR [rax],eax
    931a:	00 01                	add    BYTE PTR [rcx],al
    931c:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    931f:	00 00                	add    BYTE PTR [rax],al
    9321:	0d 2e 00 00 00       	or     eax,0x2e
    9326:	33 41 1c             	xor    eax,DWORD PTR [rcx+0x1c]
    9329:	00 00                	add    BYTE PTR [rax],al
    932b:	32 0f                	xor    cl,BYTE PTR [rdi]
    932d:	0b d1                	or     edx,ecx
    932f:	3e 00 00             	ds add BYTE PTR [rax],al
    9332:	85 01                	test   DWORD PTR [rcx],eax
    9334:	ec                   	in     al,dx
    9335:	13 00                	adc    eax,DWORD PTR [rax]
    9337:	00 32                	add    BYTE PTR [rdx],dh
    9339:	11 0b                	adc    DWORD PTR [rbx],ecx
    933b:	86 01                	xchg   BYTE PTR [rcx],al
    933d:	76 31                	jbe    9370 <_end+0x3358>
    933f:	00 32                	add    BYTE PTR [rdx],dh
    9341:	13 12                	adc    edx,DWORD PTR [rdx]
    9343:	00 00                	add    BYTE PTR [rax],al
    9345:	37                   	(bad)
    9346:	22 11                	and    dl,BYTE PTR [rcx]
    9348:	00 00                	add    BYTE PTR [rax],al
    934a:	33 48 10             	xor    ecx,DWORD PTR [rax+0x10]
    934d:	dd 23                	frstor [rbx]
    934f:	00 00                	add    BYTE PTR [rax],al
    9351:	0c 7a                	or     al,0x7a
    9353:	10 00                	adc    BYTE PTR [rax],al
    9355:	00 33                	add    BYTE PTR [rbx],dh
    9357:	4f 0f 2e 00          	rex.WRXB ucomiss xmm8,DWORD PTR [r8]
    935b:	00 00                	add    BYTE PTR [rax],al
    935d:	f8                   	clc
    935e:	3e 00 00             	ds add BYTE PTR [rax],al
    9361:	01 e9                	add    ecx,ebp
    9363:	23 00                	and    eax,DWORD PTR [rax]
    9365:	00 01                	add    BYTE PTR [rcx],al
    9367:	e9 23 00 00 00       	jmp    938f <_end+0x3377>
    936c:	0c 36                	or     al,0x36
    936e:	24 00                	and    al,0x0
    9370:	00 33                	add    BYTE PTR [rbx],dh
    9372:	53                   	push   rbx
    9373:	0f e9 23             	psubsw mm4,QWORD PTR [rbx]
    9376:	00 00                	add    BYTE PTR [rax],al
    9378:	0e                   	(bad)
    9379:	3f                   	(bad)
    937a:	00 00                	add    BYTE PTR [rax],al
    937c:	01 0e                	add    DWORD PTR [rsi],ecx
    937e:	3f                   	(bad)
    937f:	00 00                	add    BYTE PTR [rax],al
    9381:	00 0d 31 36 00 00    	add    BYTE PTR [rip+0x3631],cl        # c9b8 <_end+0x69a0>
    9387:	0c 80                	or     al,0x80
    9389:	23 00                	and    eax,DWORD PTR [rax]
    938b:	00 33                	add    BYTE PTR [rbx],dh
    938d:	4c 0f e9 23          	rex.WR psubsw mm4,QWORD PTR [rbx]
    9391:	00 00                	add    BYTE PTR [rax],al
    9393:	29 3f                	sub    DWORD PTR [rdi],edi
    9395:	00 00                	add    BYTE PTR [rax],al
    9397:	01 29                	add    DWORD PTR [rcx],ebp
    9399:	3f                   	(bad)
    939a:	00 00                	add    BYTE PTR [rax],al
    939c:	00 0d e9 23 00 00    	add    BYTE PTR [rip+0x23e9],cl        # b78b <_end+0x5773>
    93a2:	0c 5d                	or     al,0x5d
    93a4:	0e                   	(bad)
    93a5:	00 00                	add    BYTE PTR [rax],al
    93a7:	33 b4 0e e2 22 00 00 	xor    esi,DWORD PTR [rsi+rcx*1+0x22e2]
    93ae:	44 3f                	rex.R (bad)
    93b0:	00 00                	add    BYTE PTR [rax],al
    93b2:	01 2c 36             	add    DWORD PTR [rsi+rsi*1],ebp
    93b5:	00 00                	add    BYTE PTR [rax],al
    93b7:	00 0c 5f             	add    BYTE PTR [rdi+rbx*2],cl
    93ba:	0e                   	(bad)
    93bb:	00 00                	add    BYTE PTR [rax],al
    93bd:	33 b8 0e e2 22 00    	xor    edi,DWORD PTR [rax+0x22e20e]
    93c3:	00 5a 3f             	add    BYTE PTR [rdx+0x3f],bl
    93c6:	00 00                	add    BYTE PTR [rax],al
    93c8:	01 5a 3f             	add    DWORD PTR [rdx+0x3f],ebx
    93cb:	00 00                	add    BYTE PTR [rax],al
    93cd:	00 0d f5 23 00 00    	add    BYTE PTR [rip+0x23f5],cl        # b7c8 <_end+0x57b0>
    93d3:	0c c0                	or     al,0xc0
    93d5:	32 00                	xor    al,BYTE PTR [rax]
    93d7:	00 33                	add    BYTE PTR [rbx],dh
    93d9:	85 13                	test   DWORD PTR [rbx],edx
    93db:	0e                   	(bad)
    93dc:	3f                   	(bad)
    93dd:	00 00                	add    BYTE PTR [rax],al
    93df:	75 3f                	jne    9420 <_end+0x3408>
    93e1:	00 00                	add    BYTE PTR [rax],al
    93e3:	01 5a 3f             	add    DWORD PTR [rdx+0x3f],ebx
    93e6:	00 00                	add    BYTE PTR [rax],al
    93e8:	00 0c 45 1a 00 00 33 	add    BYTE PTR [rax*2+0x3300001a],cl
    93ef:	89 13                	mov    DWORD PTR [rbx],edx
    93f1:	0e                   	(bad)
    93f2:	3f                   	(bad)
    93f3:	00 00                	add    BYTE PTR [rax],al
    93f5:	8b 3f                	mov    edi,DWORD PTR [rdi]
    93f7:	00 00                	add    BYTE PTR [rax],al
    93f9:	01 5a 3f             	add    DWORD PTR [rdx+0x3f],ebx
    93fc:	00 00                	add    BYTE PTR [rax],al
    93fe:	00 0e                	add    BYTE PTR [rsi],cl
    9400:	7b 2b                	jnp    942d <_end+0x3415>
    9402:	00 00                	add    BYTE PTR [rax],al
    9404:	33 80 01 0c a6 21    	xor    eax,DWORD PTR [rax+0x21a60c01]
    940a:	00 00                	add    BYTE PTR [rax],al
    940c:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    940d:	3f                   	(bad)
    940e:	00 00                	add    BYTE PTR [rax],al
    9410:	01 a7 3f 00 00 01    	add    DWORD PTR [rdi+0x100003f],esp
    9416:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9417:	21 00                	and    DWORD PTR [rax],eax
    9419:	00 00                	add    BYTE PTR [rax],al
    941b:	0d 2a 24 00 00       	or     eax,0x242a
    9420:	0d 14 18 00 00       	or     eax,0x1814
    9425:	13 ac 3f 00 00 25 94 	adc    ebp,DWORD PTR [rdi+rdi*1-0x6bdb0000]
    942c:	1a 00                	sbb    al,BYTE PTR [rax]
    942e:	00 25 14 18 00 00    	add    BYTE PTR [rip+0x1814],ah        # ac48 <_end+0x4c30>
    9434:	0d 94 1a 00 00       	or     eax,0x1a94
    9439:	13 c0                	adc    eax,eax
    943b:	3f                   	(bad)
    943c:	00 00                	add    BYTE PTR [rax],al
    943e:	25 c0 18 00 00       	and    eax,0x18c0
    9443:	0d df 1b 00 00       	or     eax,0x1bdf
    9448:	13 cf                	adc    ecx,edi
    944a:	3f                   	(bad)
    944b:	00 00                	add    BYTE PTR [rax],al
    944d:	25 5f 1e 00 00       	and    eax,0x1e5f
    9452:	25 df 1b 00 00       	and    eax,0x1bdf
    9457:	0d 5f 1e 00 00       	or     eax,0x1e5f
    945c:	13 e3                	adc    esp,ebx
    945e:	3f                   	(bad)
    945f:	00 00                	add    BYTE PTR [rax],al
    9461:	25 8b 1c 00 00       	and    eax,0x1c8b
    9466:	1b 7b 08             	sbb    edi,DWORD PTR [rbx+0x8]
    9469:	00 00                	add    BYTE PTR [rax],al
    946b:	40 34 11             	rex xor al,0x11
    946e:	10 34 40             	adc    BYTE PTR [rax+rax*2],dh
    9471:	00 00                	add    BYTE PTR [rax],al
    9473:	06                   	(bad)
    9474:	ae                   	scas   al,BYTE PTR es:[rdi]
    9475:	03 00                	add    eax,DWORD PTR [rax]
    9477:	00 34 12             	add    BYTE PTR [rdx+rdx*1],dh
    947a:	0d 20 32 00 00       	or     eax,0x3220
    947f:	00 06                	add    BYTE PTR [rsi],al
    9481:	82                   	(bad)
    9482:	04 00                	add    al,0x0
    9484:	00 34 13             	add    BYTE PTR [rbx+rdx*1],dh
    9487:	0e                   	(bad)
    9488:	b0 2c                	mov    al,0x2c
    948a:	00 00                	add    BYTE PTR [rax],al
    948c:	20 06                	and    BYTE PTR [rsi],al
    948e:	5b                   	pop    rbx
    948f:	06                   	(bad)
    9490:	00 00                	add    BYTE PTR [rax],al
    9492:	34 14                	xor    al,0x14
    9494:	0e                   	(bad)
    9495:	b0 2c                	mov    al,0x2c
    9497:	00 00                	add    BYTE PTR [rax],al
    9499:	24 06                	and    al,0x6
    949b:	53                   	push   rbx
    949c:	04 00                	add    al,0x0
    949e:	00 34 15 0a 34 40 00 	add    BYTE PTR [rdx*1+0x40340a],dh
    94a5:	00 28                	add    BYTE PTR [rax],ch
    94a7:	00 22                	add    BYTE PTR [rdx],ah
    94a9:	e7 22                	out    0x22,eax
    94ab:	00 00                	add    BYTE PTR [rax],al
    94ad:	44                   	rex.R
    94ae:	40 00 00             	rex add BYTE PTR [rax],al
    94b1:	23 8a 21 00 00 17    	and    ecx,DWORD PTR [rdx+0x17000021]
    94b7:	00 08                	add    BYTE PTR [rax],cl
    94b9:	7b 08                	jnp    94c3 <_end+0x34ab>
    94bb:	00 00                	add    BYTE PTR [rax],al
    94bd:	34 16                	xor    al,0x16
    94bf:	03 f2                	add    esi,edx
    94c1:	3f                   	(bad)
    94c2:	00 00                	add    BYTE PTR [rax],al
    94c4:	47 8e 02             	rex.RXB mov es,WORD PTR [r10]
    94c7:	00 00                	add    BYTE PTR [rax],al
    94c9:	35 0a ad 21 00       	xor    eax,0x21ad0a
    94ce:	00 0f                	add    BYTE PTR [rdi],cl
    94d0:	47 71 01             	rex.RXB jno 94d4 <_end+0x34bc>
    94d3:	00 00                	add    BYTE PTR [rax],al
    94d5:	35 0e ad 21 00       	xor    eax,0x21ad0e
    94da:	00 20                	add    BYTE PTR [rax],ah
    94dc:	08 56 03             	or     BYTE PTR [rsi+0x3],dl
    94df:	00 00                	add    BYTE PTR [rax],al
    94e1:	35 10 12 44 40       	xor    eax,0x40441210
    94e6:	00 00                	add    BYTE PTR [rax],al
    94e8:	08 2d 08 00 00 35    	or     BYTE PTR [rip+0x35000008],ch        # 350094f6 <_end+0x350034de>
    94ee:	11 14 80             	adc    DWORD PTR [rax+rax*4],edx
    94f1:	40 00 00             	rex add BYTE PTR [rax],al
    94f4:	0d 85 40 00 00       	or     eax,0x4085
    94f9:	58                   	pop    rax
    94fa:	b0 2c                	mov    al,0x2c
    94fc:	00 00                	add    BYTE PTR [rax],al
    94fe:	94                   	xchg   esp,eax
    94ff:	40 00 00             	rex add BYTE PTR [rax],al
    9502:	01 68 40             	add    DWORD PTR [rax+0x40],ebp
    9505:	00 00                	add    BYTE PTR [rax],al
    9507:	00 1b                	add    BYTE PTR [rbx],bl
    9509:	a2 05 00 00 80 35 13 	movabs ds:0xe310133580000005,al
    9510:	10 e3 
    9512:	40 00 00             	rex add BYTE PTR [rax],al
    9515:	06                   	(bad)
    9516:	90                   	nop
    9517:	06                   	(bad)
    9518:	00 00                	add    BYTE PTR [rax],al
    951a:	35 14 0e b0 2c       	xor    eax,0x2cb00e14
    951f:	00 00                	add    BYTE PTR [rax],al
    9521:	00 06                	add    BYTE PTR [rsi],al
    9523:	9e                   	sahf
    9524:	04 00                	add    al,0x0
    9526:	00 35 15 0e b0 2c    	add    BYTE PTR [rip+0x2cb00e15],dh        # 2cb0a341 <_end+0x2cb04329>
    952c:	00 00                	add    BYTE PTR [rax],al
    952e:	04 06                	add    al,0x6
    9530:	41 06                	rex.B (bad)
    9532:	00 00                	add    BYTE PTR [rax],al
    9534:	35 17 0e b0 2c       	xor    eax,0x2cb00e17
    9539:	00 00                	add    BYTE PTR [rax],al
    953b:	08 06                	or     BYTE PTR [rsi],al
    953d:	53                   	push   rbx
    953e:	04 00                	add    al,0x0
    9540:	00 35 1a 0a e3 40    	add    BYTE PTR [rip+0x40e30a1a],dh        # 40e39f60 <_end+0x40e33f48>
    9546:	00 00                	add    BYTE PTR [rax],al
    9548:	0c 06                	or     al,0x6
    954a:	4d 15 00 00 35 1d    	rex.WRB adc rax,0x1d350000
    9550:	0c 68                	or     al,0x68
    9552:	40 00 00             	rex add BYTE PTR [rax],al
    9555:	40 00 22             	add    BYTE PTR [rdx],spl
    9558:	e7 22                	out    0x22,eax
    955a:	00 00                	add    BYTE PTR [rax],al
    955c:	f3 40 00 00          	repz rex add BYTE PTR [rax],al
    9560:	23 8a 21 00 00 33    	and    ecx,DWORD PTR [rdx+0x33000021]
    9566:	00 08                	add    BYTE PTR [rax],cl
    9568:	a2 05 00 00 35 1e 03 	movabs ds:0x4094031e35000005,al
    956f:	94 40 
    9571:	00 00                	add    BYTE PTR [rax],al
    9573:	1b 75 04             	sbb    esi,DWORD PTR [rbp+0x4]
    9576:	00 00                	add    BYTE PTR [rax],al
    9578:	18 35 20 10 41 41    	sbb    BYTE PTR [rip+0x41411020],dh        # 4141a59e <_end+0x41414586>
    957e:	00 00                	add    BYTE PTR [rax],al
    9580:	06                   	(bad)
    9581:	49 06                	rex.WB (bad)
    9583:	00 00                	add    BYTE PTR [rax],al
    9585:	35 21 0f 41 41       	xor    eax,0x41410f21
    958a:	00 00                	add    BYTE PTR [rax],al
    958c:	00 06                	add    BYTE PTR [rsi],al
    958e:	bc 05 00 00 35       	mov    esp,0x35000005
    9593:	22 0e                	and    cl,BYTE PTR [rsi]
    9595:	b0 2c                	mov    al,0x2c
    9597:	00 00                	add    BYTE PTR [rax],al
    9599:	08 06                	or     BYTE PTR [rsi],al
    959b:	0f 08                	invd
    959d:	00 00                	add    BYTE PTR [rax],al
    959f:	35 23 0e b0 2c       	xor    eax,0x2cb00e23
    95a4:	00 00                	add    BYTE PTR [rax],al
    95a6:	0c 06                	or     al,0x6
    95a8:	74 03                	je     95ad <_end+0x3595>
    95aa:	00 00                	add    BYTE PTR [rax],al
    95ac:	35 24 0e b0 2c       	xor    eax,0x2cb00e24
    95b1:	00 00                	add    BYTE PTR [rax],al
    95b3:	10 00                	adc    BYTE PTR [rax],al
    95b5:	0d f3 40 00 00       	or     eax,0x40f3
    95ba:	08 75 04             	or     BYTE PTR [rbp+0x4],dh
    95bd:	00 00                	add    BYTE PTR [rax],al
    95bf:	35 25 03 ff 40       	xor    eax,0x40ff0325
    95c4:	00 00                	add    BYTE PTR [rax],al
    95c6:	1b 30                	sbb    esi,DWORD PTR [rax]
    95c8:	03 00                	add    eax,DWORD PTR [rax]
    95ca:	00 18                	add    BYTE PTR [rax],bl
    95cc:	35 27 10 94 41       	xor    eax,0x41941027
    95d1:	00 00                	add    BYTE PTR [rax],al
    95d3:	06                   	(bad)
    95d4:	5a                   	pop    rdx
    95d5:	05 00 00 35 28       	add    eax,0x28350000
    95da:	0b 94 41 00 00 00 06 	or     edx,DWORD PTR [rcx+rax*2+0x6000000]
    95e1:	0f 08                	invd
    95e3:	00 00                	add    BYTE PTR [rax],al
    95e5:	35 29 0e b0 2c       	xor    eax,0x2cb00e29
    95ea:	00 00                	add    BYTE PTR [rax],al
    95ec:	08 06                	or     BYTE PTR [rsi],al
    95ee:	ff 07                	inc    DWORD PTR [rdi]
    95f0:	00 00                	add    BYTE PTR [rax],al
    95f2:	35 2a 0b 35 00       	xor    eax,0x350b2a
    95f7:	00 00                	add    BYTE PTR [rax],al
    95f9:	0c 06                	or     al,0x6
    95fb:	49 04 00             	rex.WB add al,0x0
    95fe:	00 35 2b 0c 74 40    	add    BYTE PTR [rip+0x40740c2b],dh        # 4074a22f <_end+0x40744217>
    9604:	00 00                	add    BYTE PTR [rax],al
    9606:	10 00                	adc    BYTE PTR [rax],al
    9608:	0d 46 41 00 00       	or     eax,0x4146
    960d:	08 30                	or     BYTE PTR [rax],dh
    960f:	03 00                	add    eax,DWORD PTR [rax]
    9611:	00 35 2c 03 52 41    	add    BYTE PTR [rip+0x4152032c],dh        # 41529943 <_end+0x4152392b>
    9617:	00 00                	add    BYTE PTR [rax],al
    9619:	47 b8 07 00 00 36    	rex.RXB mov r8d,0x36000007
    961f:	06                   	(bad)
    9620:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9621:	21 00                	and    DWORD PTR [rax],eax
    9623:	00 04 87             	add    BYTE PTR [rdi+rax*4],al
    9626:	01 3a                	add    DWORD PTR [rdx],edi
    9628:	01 00                	add    DWORD PTR [rax],eax
    962a:	00 37                	add    BYTE PTR [rdi],dh
    962c:	06                   	(bad)
    962d:	10 bc 2c 00 00 40 42 	adc    BYTE PTR [rsp+rbp*1+0x42400000],bh
    9634:	0f 00 1b             	ltr    WORD PTR [rbx]
    9637:	ea                   	(bad)
    9638:	23 00                	and    eax,DWORD PTR [rax]
    963a:	00 10                	add    BYTE PTR [rax],dl
    963c:	37                   	(bad)
    963d:	08 10                	or     BYTE PTR [rax],dl
    963f:	ea                   	(bad)
    9640:	41 00 00             	add    BYTE PTR [r8],al
    9643:	06                   	(bad)
    9644:	31 1b                	xor    DWORD PTR [rbx],ebx
    9646:	00 00                	add    BYTE PTR [rax],al
    9648:	37                   	(bad)
    9649:	09 0d ea 41 00 00    	or     DWORD PTR [rip+0x41ea],ecx        # d839 <_end+0x7821>
    964f:	00 06                	add    BYTE PTR [rsi],al
    9651:	29 05 00 00 37 0a    	sub    DWORD PTR [rip+0xa370000],eax        # a379657 <_end+0xa37363f>
    9657:	0e                   	(bad)
    9658:	b0 2c                	mov    al,0x2c
    965a:	00 00                	add    BYTE PTR [rax],al
    965c:	08 00                	or     BYTE PTR [rax],al
    965e:	0d 68 40 00 00       	or     eax,0x4068
    9663:	08 ea                	or     dl,ch
    9665:	23 00                	and    eax,DWORD PTR [rax]
    9667:	00 37                	add    BYTE PTR [rdi],dh
    9669:	0b 03                	or     eax,DWORD PTR [rbx]
    966b:	c2 41 00             	ret    0x41
    966e:	00 1b                	add    BYTE PTR [rbx],bl
    9670:	d6                   	(bad)
    9671:	13 00                	adc    eax,DWORD PTR [rax]
    9673:	00 10                	add    BYTE PTR [rax],dl
    9675:	37                   	(bad)
    9676:	0d 10 23 42 00       	or     eax,0x422310
    967b:	00 06                	add    BYTE PTR [rsi],al
    967d:	58                   	pop    rax
    967e:	26 00 00             	es add BYTE PTR [rax],al
    9681:	37                   	(bad)
    9682:	0e                   	(bad)
    9683:	11 d3                	adc    ebx,edx
    9685:	23 00                	and    eax,DWORD PTR [rax]
    9687:	00 00                	add    BYTE PTR [rax],al
    9689:	06                   	(bad)
    968a:	af                   	scas   eax,DWORD PTR es:[rdi]
    968b:	0e                   	(bad)
    968c:	00 00                	add    BYTE PTR [rax],al
    968e:	37                   	(bad)
    968f:	0f 11 d3             	movups xmm3,xmm2
    9692:	23 00                	and    eax,DWORD PTR [rax]
    9694:	00 08                	add    BYTE PTR [rax],cl
    9696:	00 08                	add    BYTE PTR [rax],cl
    9698:	d6                   	(bad)
    9699:	13 00                	adc    eax,DWORD PTR [rax]
    969b:	00 37                	add    BYTE PTR [rdi],dh
    969d:	10 03                	adc    BYTE PTR [rbx],al
    969f:	fb                   	sti
    96a0:	41 00 00             	add    BYTE PTR [r8],al
    96a3:	0d e3 1a 00 00       	or     eax,0x1ae3
    96a8:	25 37 1b 00 00       	and    eax,0x1b37
    96ad:	0d da 1b 00 00       	or     eax,0x1bda
    96b2:	13 39                	adc    edi,DWORD PTR [rcx]
    96b4:	42 00 00             	rex.X add BYTE PTR [rax],al
    96b7:	25 e3 1a 00 00       	and    eax,0x1ae3
    96bc:	29 84 17 00 00 29 8d 	sub    DWORD PTR [rdi+rdx*1-0x72d70000],eax
    96c3:	17                   	(bad)
    96c4:	00 00                	add    BYTE PTR [rax],al
    96c6:	29 96 17 00 00 29    	sub    DWORD PTR [rsi+0x29000017],edx
    96cc:	be 20 00 00 29       	mov    esi,0x29000020
    96d1:	c7                   	(bad)
    96d2:	20 00                	and    BYTE PTR [rax],al
    96d4:	00 29                	add    BYTE PTR [rcx],ch
    96d6:	d0 20                	shl    BYTE PTR [rax],1
    96d8:	00 00                	add    BYTE PTR [rax],al
    96da:	29 d9                	sub    ecx,ebx
    96dc:	20 00                	and    BYTE PTR [rax],al
    96de:	00 0f                	add    BYTE PTR [rdi],cl
    96e0:	2c 06                	sub    al,0x6
    96e2:	00 00                	add    BYTE PTR [rax],al
    96e4:	35 33 06 58 07       	xor    eax,0x7580633
    96e9:	00 00                	add    BYTE PTR [rax],al
    96eb:	ea                   	(bad)
    96ec:	20 00                	and    BYTE PTR [rax],al
    96ee:	00 8a 42 00 00 01    	add    BYTE PTR [rdx+0x1000042],cl
    96f4:	8a 42 00             	mov    al,BYTE PTR [rdx+0x0]
    96f7:	00 01                	add    BYTE PTR [rcx],al
    96f9:	68 40 00 00 00       	push   0x40
    96fe:	0d 99 41 00 00       	or     eax,0x4199
    9703:	0e                   	(bad)
    9704:	51                   	push   rcx
    9705:	07                   	(bad)
    9706:	00 00                	add    BYTE PTR [rax],al
    9708:	16                   	(bad)
    9709:	a3 02 0e d4 22 00 00 	movabs ds:0x42ab000022d40e02,eax
    9710:	ab 42 
    9712:	00 00                	add    BYTE PTR [rax],al
    9714:	01 2e                	add    DWORD PTR [rsi],ebp
    9716:	23 00                	and    eax,DWORD PTR [rax]
    9718:	00 01                	add    BYTE PTR [rcx],al
    971a:	2e 23 00             	cs and eax,DWORD PTR [rax]
    971d:	00 00                	add    BYTE PTR [rax],al
    971f:	0c 83                	or     al,0x83
    9721:	13 00                	adc    eax,DWORD PTR [rax]
    9723:	00 38                	add    BYTE PTR [rax],bh
    9725:	31 0c a6             	xor    DWORD PTR [rsi+riz*4],ecx
    9728:	21 00                	and    DWORD PTR [rax],eax
    972a:	00 cc                	add    ah,cl
    972c:	42 00 00             	rex.X add BYTE PTR [rax],al
    972f:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    9735:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9736:	21 00                	and    DWORD PTR [rax],eax
    9738:	00 01                	add    BYTE PTR [rcx],al
    973a:	d3 23                	shl    DWORD PTR [rbx],cl
    973c:	00 00                	add    BYTE PTR [rax],al
    973e:	24 00                	and    al,0x0
    9740:	88 01                	mov    BYTE PTR [rcx],al
    9742:	f3 07                	repz (bad)
    9744:	00 00                	add    BYTE PTR [rax],al
    9746:	35 34 06 1f 03       	xor    eax,0x31f0634
    974b:	00 00                	add    BYTE PTR [rax],al
    974d:	e3 42                	jrcxz  9791 <_end+0x3779>
    974f:	00 00                	add    BYTE PTR [rax],al
    9751:	01 8a 42 00 00 00    	add    DWORD PTR [rdx+0x42],ecx
    9757:	0f 12 04 00          	movlps xmm0,QWORD PTR [rax+rax*1]
    975b:	00 35 30 0a 90 07    	add    BYTE PTR [rip+0x7900a30],dh        # 790a191 <_end+0x7904179>
    9761:	00 00                	add    BYTE PTR [rax],al
    9763:	b0 2c                	mov    al,0x2c
    9765:	00 00                	add    BYTE PTR [rax],al
    9767:	02 43 00             	add    al,BYTE PTR [rbx+0x0]
    976a:	00 01                	add    BYTE PTR [rcx],al
    976c:	8a 42 00             	mov    al,BYTE PTR [rdx+0x0]
    976f:	00 01                	add    BYTE PTR [rcx],al
    9771:	68 40 00 00 00       	push   0x40
    9776:	0f 5d 03             	minps  xmm0,XMMWORD PTR [rbx]
    9779:	00 00                	add    BYTE PTR [rax],al
    977b:	35 2f 09 a1 06       	xor    eax,0x6a1092f
    9780:	00 00                	add    BYTE PTR [rax],al
    9782:	99                   	cdq
    9783:	41 00 00             	add    BYTE PTR [r8],al
    9786:	21 43 00             	and    DWORD PTR [rbx+0x0],eax
    9789:	00 01                	add    BYTE PTR [rcx],al
    978b:	74 40                	je     97cd <_end+0x37b5>
    978d:	00 00                	add    BYTE PTR [rax],al
    978f:	01 b0 2c 00 00 00    	add    DWORD PTR [rax+0x2c],esi
    9795:	0c 1c                	or     al,0x1c
    9797:	12 00                	adc    al,BYTE PTR [rax]
    9799:	00 38                	add    BYTE PTR [rax],bh
    979b:	34 0c                	xor    al,0xc
    979d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    979e:	21 00                	and    DWORD PTR [rax],eax
    97a0:	00 3d 43 00 00 01    	add    BYTE PTR [rip+0x1000043],bh        # 10097e9 <_end+0x10037d1>
    97a6:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    97a7:	21 00                	and    DWORD PTR [rax],eax
    97a9:	00 01                	add    BYTE PTR [rcx],al
    97ab:	d3 23                	shl    DWORD PTR [rbx],cl
    97ad:	00 00                	add    BYTE PTR [rax],al
    97af:	24 00                	and    al,0x0
    97b1:	28 bb 03 00 00 16    	sub    BYTE PTR [rbx+0x16000003],bh
    97b7:	af                   	scas   eax,DWORD PTR es:[rdi]
    97b8:	02 4f 43             	add    cl,BYTE PTR [rdi+0x43]
    97bb:	00 00                	add    BYTE PTR [rax],al
    97bd:	01 d4                	add    esp,edx
    97bf:	22 00                	and    al,BYTE PTR [rax]
    97c1:	00 00                	add    BYTE PTR [rax],al
    97c3:	0f ff 08             	ud0    ecx,DWORD PTR [rax]
    97c6:	00 00                	add    BYTE PTR [rax],al
    97c8:	39 0a                	cmp    DWORD PTR [rdx],ecx
    97ca:	0a 8e 08 00 00 b0    	or     cl,BYTE PTR [rsi-0x4ffffff8]
    97d0:	2c 00                	sub    al,0x0
    97d2:	00 69 43             	add    BYTE PTR [rcx+0x43],ch
    97d5:	00 00                	add    BYTE PTR [rax],al
    97d7:	01 44 40 00          	add    DWORD PTR [rax+rax*2+0x0],eax
    97db:	00 00                	add    BYTE PTR [rax],al
    97dd:	0f 27                	(bad)
    97df:	09 00                	or     DWORD PTR [rax],eax
    97e1:	00 39                	add    BYTE PTR [rcx],bh
    97e3:	0e                   	(bad)
    97e4:	0a 47 09             	or     al,BYTE PTR [rdi+0x9]
    97e7:	00 00                	add    BYTE PTR [rax],al
    97e9:	b0 2c                	mov    al,0x2c
    97eb:	00 00                	add    BYTE PTR [rax],al
    97ed:	83 43 00 00          	add    DWORD PTR [rbx+0x0],0x0
    97f1:	01 44 40 00          	add    DWORD PTR [rax+rax*2+0x0],eax
    97f5:	00 00                	add    BYTE PTR [rax],al
    97f7:	0f b5 08             	lgs    ecx,FWORD PTR [rax]
    97fa:	00 00                	add    BYTE PTR [rax],al
    97fc:	39 0d 0a 62 09 00    	cmp    DWORD PTR [rip+0x9620a],ecx        # 9fa0c <_end+0x999f4>
    9802:	00 b0 2c 00 00 9d    	add    BYTE PTR [rax-0x62ffffd4],dh
    9808:	43 00 00             	rex.XB add BYTE PTR [r8],al
    980b:	01 44 40 00          	add    DWORD PTR [rax+rax*2+0x0],eax
    980f:	00 00                	add    BYTE PTR [rax],al
    9811:	0f 19 09             	nop    DWORD PTR [rcx]
    9814:	00 00                	add    BYTE PTR [rax],al
    9816:	39 0c 0a             	cmp    DWORD PTR [rdx+rcx*1],ecx
    9819:	81 09 00 00 b0 2c    	or     DWORD PTR [rcx],0x2cb00000
    981f:	00 00                	add    BYTE PTR [rax],al
    9821:	b7 43                	mov    bh,0x43
    9823:	00 00                	add    BYTE PTR [rax],al
    9825:	01 44 40 00          	add    DWORD PTR [rax+rax*2+0x0],eax
    9829:	00 00                	add    BYTE PTR [rax],al
    982b:	0f 35                	sysexitd
    982d:	09 00                	or     DWORD PTR [rax],eax
    982f:	00 39                	add    BYTE PTR [rcx],bh
    9831:	0b 0a                	or     ecx,DWORD PTR [rdx]
    9833:	db 08                	fisttp DWORD PTR [rax]
    9835:	00 00                	add    BYTE PTR [rax],al
    9837:	b0 2c                	mov    al,0x2c
    9839:	00 00                	add    BYTE PTR [rax],al
    983b:	d1 43 00             	rol    DWORD PTR [rbx+0x0],1
    983e:	00 01                	add    BYTE PTR [rcx],al
    9840:	44                   	rex.R
    9841:	40 00 00             	rex add BYTE PTR [rax],al
    9844:	00 0f                	add    BYTE PTR [rdi],cl
    9846:	c7                   	(bad)
    9847:	08 00                	or     BYTE PTR [rax],al
    9849:	00 39                	add    BYTE PTR [rcx],bh
    984b:	09 0a                	or     DWORD PTR [rdx],ecx
    984d:	46 08 00             	rex.RX or BYTE PTR [rax],r8b
    9850:	00 b0 2c 00 00 eb    	add    BYTE PTR [rax-0x14ffffd4],dh
    9856:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9859:	01 44 40 00          	add    DWORD PTR [rax+rax*2+0x0],eax
    985d:	00 00                	add    BYTE PTR [rax],al
    985f:	0f cb                	bswap  ebx
    9861:	08 00                	or     BYTE PTR [rax],al
    9863:	00 39                	add    BYTE PTR [rcx],bh
    9865:	08 0a                	or     BYTE PTR [rdx],cl
    9867:	67 08 00             	or     BYTE PTR [eax],al
    986a:	00 b0 2c 00 00 05    	add    BYTE PTR [rax+0x500002c],dh
    9870:	44 00 00             	add    BYTE PTR [rax],r8b
    9873:	01 44 40 00          	add    DWORD PTR [rax+rax*2+0x0],eax
    9877:	00 00                	add    BYTE PTR [rax],al
    9879:	0c 47                	or     al,0x47
    987b:	19 00                	sbb    DWORD PTR [rax],eax
    987d:	00 3a                	add    BYTE PTR [rdx],bh
    987f:	9c                   	pushf
    9880:	0c a6                	or     al,0xa6
    9882:	21 00                	and    DWORD PTR [rax],eax
    9884:	00 20                	add    BYTE PTR [rax],ah
    9886:	44 00 00             	add    BYTE PTR [rax],r8b
    9889:	01 d3                	add    ebx,edx
    988b:	23 00                	and    eax,DWORD PTR [rax]
    988d:	00 01                	add    BYTE PTR [rcx],al
    988f:	d3 23                	shl    DWORD PTR [rbx],cl
    9891:	00 00                	add    BYTE PTR [rax],al
    9893:	00 0f                	add    BYTE PTR [rdi],cl
    9895:	de 06                	fiadd  WORD PTR [rsi]
    9897:	00 00                	add    BYTE PTR [rax],al
    9899:	35 2e 0b 89 03       	xor    eax,0x3890b2e
    989e:	00 00                	add    BYTE PTR [rax],al
    98a0:	3f                   	(bad)
    98a1:	44 00 00             	add    BYTE PTR [rax],r8b
    98a4:	3f                   	(bad)
    98a5:	44 00 00             	add    BYTE PTR [rax],r8b
    98a8:	01 e2                	add    edx,esp
    98aa:	22 00                	and    al,BYTE PTR [rax]
    98ac:	00 01                	add    BYTE PTR [rcx],al
    98ae:	b0 2c                	mov    al,0x2c
    98b0:	00 00                	add    BYTE PTR [rax],al
    98b2:	00 0d 44 40 00 00    	add    BYTE PTR [rip+0x4044],cl        # d8fc <_end+0x78e4>
    98b8:	0f c6 0a 00          	shufps xmm1,XMMWORD PTR [rdx],0x0
    98bc:	00 3b                	add    BYTE PTR [rbx],bh
    98be:	07                   	(bad)
    98bf:	0a 15 0a 00 00 b0    	or     dl,BYTE PTR [rip+0xffffffffb000000a]        # ffffffffb00098cf <_end+0xffffffffb00038b7>
    98c5:	2c 00                	sub    al,0x0
    98c7:	00 63 44             	add    BYTE PTR [rbx+0x44],ah
    98ca:	00 00                	add    BYTE PTR [rax],al
    98cc:	01 e2                	add    edx,esp
    98ce:	22 00                	and    al,BYTE PTR [rax]
    98d0:	00 01                	add    BYTE PTR [rcx],al
    98d2:	2e 23 00             	cs and eax,DWORD PTR [rax]
    98d5:	00 00                	add    BYTE PTR [rax],al
    98d7:	0f 27                	(bad)
    98d9:	0a 00                	or     al,BYTE PTR [rax]
    98db:	00 3b                	add    BYTE PTR [rbx],bh
    98dd:	06                   	(bad)
    98de:	07                   	(bad)
    98df:	30 0a                	xor    BYTE PTR [rdx],cl
    98e1:	00 00                	add    BYTE PTR [rax],al
    98e3:	e2 22                	loop   9907 <_end+0x38ef>
    98e5:	00 00                	add    BYTE PTR [rax],al
    98e7:	82                   	(bad)
    98e8:	44 00 00             	add    BYTE PTR [rax],r8b
    98eb:	01 d3                	add    ebx,edx
    98ed:	23 00                	and    eax,DWORD PTR [rax]
    98ef:	00 01                	add    BYTE PTR [rcx],al
    98f1:	82                   	(bad)
    98f2:	44 00 00             	add    BYTE PTR [rax],r8b
    98f5:	00 0d 2e 23 00 00    	add    BYTE PTR [rip+0x232e],cl        # bc29 <_end+0x5c11>
    98fb:	89 01                	mov    DWORD PTR [rcx],eax
    98fd:	1e                   	(bad)
    98fe:	06                   	(bad)
    98ff:	00 00                	add    BYTE PTR [rax],al
    9901:	3c 45                	cmp    al,0x45
    9903:	0d a9 44 00 00       	or     eax,0x44a9
    9908:	01 d3                	add    ebx,edx
    990a:	23 00                	and    eax,DWORD PTR [rax]
    990c:	00 01                	add    BYTE PTR [rcx],al
    990e:	d3 23                	shl    DWORD PTR [rbx],cl
    9910:	00 00                	add    BYTE PTR [rax],al
    9912:	01 e3                	add    ebx,esp
    9914:	20 00                	and    BYTE PTR [rax],al
    9916:	00 01                	add    BYTE PTR [rcx],al
    9918:	d3 23                	shl    DWORD PTR [rbx],cl
    991a:	00 00                	add    BYTE PTR [rax],al
    991c:	00 25 b9 21 00 00    	add    BYTE PTR [rip+0x21b9],ah        # badb <_end+0x5ac3>
    9922:	30 24 1e             	xor    BYTE PTR [rsi+rbx*1],ah
    9925:	00 00                	add    BYTE PTR [rax],al
    9927:	c5 44 00             	(bad)
    992a:	00 02                	add    BYTE PTR [rdx],al
    992c:	db 44 00 00          	fild   DWORD PTR [rax+rax*1+0x0]
    9930:	11 7c 19 00          	adc    DWORD PTR [rcx+rbx*1+0x0],edi
    9934:	00 b2 21 00 00 31    	add    BYTE PTR [rdx+0x31000021],dh
    993a:	c6                   	(bad)
    993b:	1e                   	(bad)
    993c:	00 00                	add    BYTE PTR [rax],al
    993e:	d4                   	(bad)
    993f:	3f                   	(bad)
    9940:	00 00                	add    BYTE PTR [rax],al
    9942:	2d c3 16 00 00       	sub    eax,0x16c3
    9947:	3d 02 2d a9 44       	cmp    eax,0x44a92d02
    994c:	00 00                	add    BYTE PTR [rax],al
    994e:	00 5c ae 44          	add    BYTE PTR [rsi+rbp*4+0x44],bl
    9952:	00 00                	add    BYTE PTR [rax],al
    9954:	d1 16                	rcl    DWORD PTR [rsi],1
    9956:	00 00                	add    BYTE PTR [rax],al
    9958:	f5                   	cmc
    9959:	44 00 00             	add    BYTE PTR [rax],r8b
    995c:	00 45 00             	add    BYTE PTR [rbp+0x0],al
    995f:	00 11                	add    BYTE PTR [rcx],dl
    9961:	7c 19                	jl     997c <_end+0x3964>
    9963:	00 00                	add    BYTE PTR [rax],al
    9965:	b2 21                	mov    dl,0x21
    9967:	00 00                	add    BYTE PTR [rax],al
    9969:	0b c5                	or     eax,ebp
    996b:	44 00 00             	add    BYTE PTR [rax],r8b
    996e:	0b ce                	or     ecx,esi
    9970:	44 00 00             	add    BYTE PTR [rax],r8b
    9973:	00 32                	add    BYTE PTR [rdx],dh
    9975:	7a 1e                	jp     9995 <_end+0x397d>
    9977:	00 00                	add    BYTE PTR [rax],al
    9979:	35 45 00 00 11       	xor    eax,0x11000045
    997e:	fc                   	cld
    997f:	32 00                	xor    al,BYTE PTR [rax]
    9981:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    9987:	27                   	(bad)
    9988:	24 00                	and    al,0x0
    998a:	00 94 1f 00 00 8a 01 	add    BYTE PTR [rdi+rbx*1+0x18a0000],dl
    9991:	5f                   	pop    rdi
    9992:	5f                   	pop    rdi
    9993:	64 00 04 d0          	add    BYTE PTR fs:[rax+rdx*8],al
    9997:	2a b6 3f 00 00 08    	sub    dh,BYTE PTR [rsi+0x800003f]
    999d:	bf 23 00 00 04       	mov    edi,0x4000023
    99a2:	d2 25 82 1c 00 00    	shl    BYTE PTR [rip+0x1c82],cl        # b62a <_end+0x5612>
    99a8:	00 32                	add    BYTE PTR [rdx],dh
    99aa:	d6                   	(bad)
    99ab:	1e                   	(bad)
    99ac:	00 00                	add    BYTE PTR [rax],al
    99ae:	88 45 00             	mov    BYTE PTR [rbp+0x0],al
    99b1:	00 11                	add    BYTE PTR [rcx],dl
    99b3:	76 19                	jbe    99ce <_end+0x39b6>
    99b5:	00 00                	add    BYTE PTR [rax],al
    99b7:	b2 21                	mov    dl,0x21
    99b9:	00 00                	add    BYTE PTR [rax],al
    99bb:	11 6f 23             	adc    DWORD PTR [rdi+0x23],ebp
    99be:	00 00                	add    BYTE PTR [rax],al
    99c0:	94                   	xchg   esp,eax
    99c1:	1f                   	(bad)
    99c2:	00 00                	add    BYTE PTR [rax],al
    99c4:	11 7c 19 00          	adc    DWORD PTR [rcx+rbx*1+0x0],edi
    99c8:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    99ce:	81 30 00 00 94 1f    	xor    DWORD PTR [rax],0x1f940000
    99d4:	00 00                	add    BYTE PTR [rax],al
    99d6:	2d 9c 0f 00 00       	sub    eax,0xf9c
    99db:	c6 02 32             	mov    BYTE PTR [rdx],0x32
    99de:	b6 3f                	mov    dh,0x3f
    99e0:	00 00                	add    BYTE PTR [rax],al
    99e2:	2d a6 17 00 00       	sub    eax,0x17a6
    99e7:	c7 02 24 b6 3f 00    	mov    DWORD PTR [rdx],0x3fb624
    99ed:	00 41 b9             	add    BYTE PTR [rcx-0x47],al
    99f0:	21 00                	and    DWORD PTR [rax],eax
    99f2:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
    99f5:	02 34 e0             	add    dh,BYTE PTR [rax+riz*8]
    99f8:	1f                   	(bad)
    99f9:	00 00                	add    BYTE PTR [rax],al
    99fb:	00 32                	add    BYTE PTR [rdx],dh
    99fd:	26 1f                	es (bad)
    99ff:	00 00                	add    BYTE PTR [rax],al
    9a01:	bc 45 00 00 11       	mov    esp,0x11000045
    9a06:	da 22                	fisub  DWORD PTR [rdx]
    9a08:	00 00                	add    BYTE PTR [rax],al
    9a0a:	df 1b                	fistp  WORD PTR [rbx]
    9a0c:	00 00                	add    BYTE PTR [rax],al
    9a0e:	11 fc                	adc    esp,edi
    9a10:	32 00                	xor    al,BYTE PTR [rax]
    9a12:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    9a18:	27                   	(bad)
    9a19:	24 00                	and    al,0x0
    9a1b:	00 94 1f 00 00 5d 5f 	add    BYTE PTR [rdi+rbx*1+0x5f5d0000],dl
    9a22:	5f                   	pop    rdi
    9a23:	64 00 04 11          	add    BYTE PTR fs:[rcx+rdx*1],al
    9a27:	01 34 b6             	add    DWORD PTR [rsi+rsi*4],esi
    9a2a:	3f                   	(bad)
    9a2b:	00 00                	add    BYTE PTR [rax],al
    9a2d:	8b 01                	mov    eax,DWORD PTR [rcx]
    9a2f:	00 5e 85             	add    BYTE PTR [rsi-0x7b],bl
    9a32:	23 00                	and    eax,DWORD PTR [rax]
    9a34:	00 b8 07 b0 2f 00    	add    BYTE PTR [rax+0x2fb007],bh
    9a3a:	00 35 00 00 00 14    	add    BYTE PTR [rip+0x14000000],dh        # 14009a40 <_end+0x14003a28>
    9a40:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9a43:	1c 05                	sbb    al,0x5
    9a45:	06                   	(bad)
    9a46:	00 00                	add    BYTE PTR [rax],al
    9a48:	01 b8 2c 8a 42 00    	add    DWORD PTR [rax+0x428a2c],edi
    9a4e:	00 1c 83             	add    BYTE PTR [rbx+rax*4],bl
    9a51:	10 00                	adc    BYTE PTR [rax],al
    9a53:	00 01                	add    BYTE PTR [rcx],al
    9a55:	b8 3b 35 00 00       	mov    eax,0x353b
    9a5a:	00 5f ec             	add    BYTE PTR [rdi-0x14],bl
    9a5d:	03 00                	add    eax,DWORD PTR [rax]
    9a5f:	00 24 46             	add    BYTE PTR [rsi+rax*2],ah
    9a62:	00 00                	add    BYTE PTR [rax],al
    9a64:	17                   	(bad)
    9a65:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    9a66:	16                   	(bad)
    9a67:	00 00                	add    BYTE PTR [rax],al
    9a69:	bb 0b 35 00 00       	mov    ebx,0x350b
    9a6e:	00 48 49             	add    BYTE PTR [rax+0x49],cl
    9a71:	69 00 bc 13 b0 2c    	imul   eax,DWORD PTR [rax],0x2cb013bc
    9a77:	00 00                	add    BYTE PTR [rax],al
    9a79:	48 17                	rex.W (bad)
    9a7b:	4e 06                	rex.WRX (bad)
    9a7d:	00 00                	add    BYTE PTR [rax],al
    9a7f:	bd 12 b0 2c 00       	mov    ebp,0x2cb012
    9a84:	00 00                	add    BYTE PTR [rax],al
    9a86:	00 00                	add    BYTE PTR [rax],al
    9a88:	22 ee                	and    ch,dh
    9a8a:	22 00                	and    al,BYTE PTR [rax]
    9a8c:	00 24 46             	add    BYTE PTR [rsi+rax*2],ah
    9a8f:	00 00                	add    BYTE PTR [rax],al
    9a91:	23 8a 21 00 00 32    	and    ecx,DWORD PTR [rdx+0x32000021]
    9a97:	00 13                	add    BYTE PTR [rbx],dl
    9a99:	14 46                	adc    al,0x46
    9a9b:	00 00                	add    BYTE PTR [rax],al
    9a9d:	5e                   	pop    rsi
    9a9e:	ed                   	in     eax,dx
    9a9f:	26 00 00             	es add BYTE PTR [rax],al
    9aa2:	ac                   	lods   al,BYTE PTR ds:[rsi]
    9aa3:	08 00                	or     BYTE PTR [rax],al
    9aa5:	35 00 00 2e 00       	xor    eax,0x2e0000
    9aaa:	00 00                	add    BYTE PTR [rax],al
    9aac:	80 46 00 00          	add    BYTE PTR [rsi+0x0],0x0
    9ab0:	1c b4                	sbb    al,0xb4
    9ab2:	23 00                	and    eax,DWORD PTR [rax]
    9ab4:	00 01                	add    BYTE PTR [rcx],al
    9ab6:	ac                   	lods   al,BYTE PTR ds:[rsi]
    9ab7:	26 ad                	lods   eax,DWORD PTR ds:[rsi]
    9ab9:	3e 00 00             	ds add BYTE PTR [rax],al
    9abc:	1c 5b                	sbb    al,0x5b
    9abe:	06                   	(bad)
    9abf:	00 00                	add    BYTE PTR [rax],al
    9ac1:	01 ac 3b b0 2c 00 00 	add    DWORD PTR [rbx+rdi*1+0x2cb0],ebp
    9ac8:	1c 83                	sbb    al,0x83
    9aca:	10 00                	adc    BYTE PTR [rax],al
    9acc:	00 01                	add    BYTE PTR [rcx],al
    9ace:	ac                   	lods   al,BYTE PTR ds:[rsi]
    9acf:	4a                   	rex.WX
    9ad0:	2e 00 00             	cs add BYTE PTR [rax],al
    9ad3:	00 5f ec             	add    BYTE PTR [rdi-0x14],bl
    9ad6:	03 00                	add    eax,DWORD PTR [rax]
    9ad8:	00 90 46 00 00 17    	add    BYTE PTR [rax+0x17000046],dl
    9ade:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    9adf:	16                   	(bad)
    9ae0:	00 00                	add    BYTE PTR [rax],al
    9ae2:	af                   	scas   eax,DWORD PTR es:[rdi]
    9ae3:	0c 2e                	or     al,0x2e
    9ae5:	00 00                	add    BYTE PTR [rax],al
    9ae7:	00 48 49             	add    BYTE PTR [rax+0x49],cl
    9aea:	69 00 b0 13 b0 2c    	imul   eax,DWORD PTR [rax],0x2cb013b0
    9af0:	00 00                	add    BYTE PTR [rax],al
    9af2:	00 00                	add    BYTE PTR [rax],al
    9af4:	22 ee                	and    ch,dh
    9af6:	22 00                	and    al,BYTE PTR [rax]
    9af8:	00 90 46 00 00 23    	add    BYTE PTR [rax+0x23000046],dl
    9afe:	8a 21                	mov    ah,BYTE PTR [rcx]
    9b00:	00 00                	add    BYTE PTR [rax],al
    9b02:	37                   	(bad)
    9b03:	00 13                	add    BYTE PTR [rbx],dl
    9b05:	80 46 00 00          	add    BYTE PTR [rsi+0x0],0x0
    9b09:	4a 57                	rex.WX push rdi
    9b0b:	14 00                	adc    al,0x0
    9b0d:	00 61 30             	add    BYTE PTR [rcx+0x30],ah
    9b10:	1e                   	(bad)
    9b11:	00 00                	add    BYTE PTR [rax],al
    9b13:	00 28                	add    BYTE PTR [rax],ch
    9b15:	00 00                	add    BYTE PTR [rax],al
    9b17:	00 00                	add    BYTE PTR [rax],al
    9b19:	00 00                	add    BYTE PTR [rax],al
    9b1b:	b9 04 00 00 00       	mov    ecx,0x4
    9b20:	00 00                	add    BYTE PTR [rax],al
    9b22:	00 01                	add    BYTE PTR [rcx],al
    9b24:	9c                   	pushf
    9b25:	b4 4e                	mov    ah,0x4e
    9b27:	00 00                	add    BYTE PTR [rax],al
    9b29:	1d 73 2c 00 00       	sbb    eax,0x2c73
    9b2e:	61                   	(bad)
    9b2f:	1b 8e 2c 00 00 b0    	sbb    ecx,DWORD PTR [rsi-0x4fffffd4]
    9b35:	17                   	(bad)
    9b36:	00 00                	add    BYTE PTR [rax],al
    9b38:	a2 17 00 00 1d 49 04 	movabs ds:0x4491d000017,al
    9b3f:	00 00 
    9b41:	61                   	(bad)
    9b42:	28 74 40 00          	sub    BYTE PTR [rax+rax*2+0x0],dh
    9b46:	00 fb                	add    bl,bh
    9b48:	17                   	(bad)
    9b49:	00 00                	add    BYTE PTR [rax],al
    9b4b:	f1                   	int1
    9b4c:	17                   	(bad)
    9b4d:	00 00                	add    BYTE PTR [rax],al
    9b4f:	1d 62 0d 00 00       	sbb    eax,0xd62
    9b54:	61                   	(bad)
    9b55:	3c ef                	cmp    al,0xef
    9b57:	41 00 00             	add    BYTE PTR [r8],al
    9b5a:	2d 18 00 00 27       	sub    eax,0x27000018
    9b5f:	18 00                	sbb    BYTE PTR [rax],al
    9b61:	00 1d 5e 01 00 00    	add    BYTE PTR [rip+0x15e],bl        # 9cc5 <_end+0x3cad>
    9b67:	61                   	(bad)
    9b68:	50                   	push   rax
    9b69:	b0 2c                	mov    al,0x2c
    9b6b:	00 00                	add    BYTE PTR [rax],al
    9b6d:	60                   	(bad)
    9b6e:	18 00                	sbb    BYTE PTR [rax],al
    9b70:	00 52 18             	add    BYTE PTR [rdx+0x18],dl
    9b73:	00 00                	add    BYTE PTR [rax],al
    9b75:	1d 0f 08 00 00       	sbb    eax,0x80f
    9b7a:	61                   	(bad)
    9b7b:	66 b0 2c             	data16 mov al,0x2c
    9b7e:	00 00                	add    BYTE PTR [rax],al
    9b80:	ab                   	stos   DWORD PTR es:[rdi],eax
    9b81:	18 00                	sbb    BYTE PTR [rax],al
    9b83:	00 a1 18 00 00 4b    	add    BYTE PTR [rcx+0x4b000018],ah
    9b89:	ec                   	in     al,dx
    9b8a:	03 00                	add    eax,DWORD PTR [rax]
    9b8c:	00 c4                	add    ah,al
    9b8e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9b91:	09 03                	or     DWORD PTR [rbx],eax
    9b93:	30 44 00 00          	xor    BYTE PTR [rax+rax*1+0x0],al
    9b97:	00 00                	add    BYTE PTR [rax],al
    9b99:	00 00                	add    BYTE PTR [rax],al
    9b9b:	4c 05 06 00 00 65    	rex.WR add rax,0x65000006
    9ba1:	0d 99 41 00 00       	or     eax,0x4199
    9ba6:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    9ba9:	7f 20                	jg     9bcb <_end+0x3bb3>
    9bab:	56                   	push   rsi
    9bac:	0d 00 00 6a 0f       	or     eax,0xf6a0000
    9bb1:	c9                   	leave
    9bb2:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9bb5:	e3 18                	jrcxz  9bcf <_end+0x3bb7>
    9bb7:	00 00                	add    BYTE PTR [rax],al
    9bb9:	d5 18 00 00          	{rex2 0x18} add BYTE PTR [r16],al
    9bbd:	20 ad 23 00 00 6b    	and    BYTE PTR [rbp+0x6b000023],ch
    9bc3:	0d ad 3e 00 00       	or     eax,0x3ead
    9bc8:	30 19                	xor    BYTE PTR [rcx],bl
    9bca:	00 00                	add    BYTE PTR [rax],al
    9bcc:	24 19                	and    al,0x19
    9bce:	00 00                	add    BYTE PTR [rax],al
    9bd0:	20 b0 2c 00 00 6c    	and    BYTE PTR [rax+0x6c00002c],dh
    9bd6:	0e                   	(bad)
    9bd7:	b0 2c                	mov    al,0x2c
    9bd9:	00 00                	add    BYTE PTR [rax],al
    9bdb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9bdc:	19 00                	sbb    DWORD PTR [rax],eax
    9bde:	00 6a 19             	add    BYTE PTR [rdx+0x19],ch
    9be1:	00 00                	add    BYTE PTR [rax],al
    9be3:	20 78 23             	and    BYTE PTR [rax+0x23],bh
    9be6:	00 00                	add    BYTE PTR [rax],al
    9be8:	99                   	cdq
    9be9:	0c 2e                	or     al,0x2e
    9beb:	00 00                	add    BYTE PTR [rax],al
    9bed:	00 9b 19 00 00 87    	add    BYTE PTR [rbx-0x78ffffe7],bl
    9bf3:	19 00                	sbb    DWORD PTR [rax],eax
    9bf5:	00 20                	add    BYTE PTR [rax],ah
    9bf7:	02 22                	add    ah,BYTE PTR [rdx]
    9bf9:	00 00                	add    BYTE PTR [rax],al
    9bfb:	a2 0c 2e 00 00 00 09 	movabs ds:0x1a090000002e0c,al
    9c02:	1a 00 
    9c04:	00 05 1a 00 00 16    	add    BYTE PTR [rip+0x1600001a],al        # 16009c24 <_end+0x16003c0c>
    9c0a:	77 28                	ja     9c34 <_end+0x3c1c>
    9c0c:	00 00                	add    BYTE PTR [rax],al
    9c0e:	00 00                	add    BYTE PTR [rax],al
    9c10:	00 00                	add    BYTE PTR [rax],al
    9c12:	42 00 00             	rex.X add BYTE PTR [rax],al
    9c15:	00 00                	add    BYTE PTR [rax],al
    9c17:	00 00                	add    BYTE PTR [rax],al
    9c19:	00 db                	add    bl,bl
    9c1b:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    9c1e:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9c21:	66 0e                	data16 (bad)
    9c23:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9c24:	21 00                	and    DWORD PTR [rax],eax
    9c26:	00 1a                	add    BYTE PTR [rdx],bl
    9c28:	1a 00                	sbb    al,BYTE PTR [rax]
    9c2a:	00 18                	add    BYTE PTR [rax],bl
    9c2c:	1a 00                	sbb    al,BYTE PTR [rax]
    9c2e:	00 21                	add    BYTE PTR [rcx],ah
    9c30:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9c31:	28 00                	sub    BYTE PTR [rax],al
    9c33:	00 00                	add    BYTE PTR [rax],al
    9c35:	00 00                	add    BYTE PTR [rax],al
    9c37:	00 01                	add    BYTE PTR [rcx],al
    9c39:	30 07                	xor    BYTE PTR [rdi],al
    9c3b:	ac                   	lods   al,BYTE PTR ds:[rsi]
    9c3c:	28 00                	sub    BYTE PTR [rax],al
    9c3e:	00 00                	add    BYTE PTR [rax],al
    9c40:	00 00                	add    BYTE PTR [rax],al
    9c42:	00 e3                	add    bl,ah
    9c44:	42 00 00             	rex.X add BYTE PTR [rax],al
    9c47:	03 01                	add    eax,DWORD PTR [rcx]
    9c49:	55                   	push   rbp
    9c4a:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    9c4e:	00 16                	add    BYTE PTR [rsi],dl
    9c50:	f7 28                	imul   DWORD PTR [rax]
    9c52:	00 00                	add    BYTE PTR [rax],al
    9c54:	00 00                	add    BYTE PTR [rax],al
    9c56:	00 00                	add    BYTE PTR [rax],al
    9c58:	20 00                	and    BYTE PTR [rax],al
    9c5a:	00 00                	add    BYTE PTR [rax],al
    9c5c:	00 00                	add    BYTE PTR [rax],al
    9c5e:	00 00                	add    BYTE PTR [rax],al
    9c60:	0f 48 00             	cmovs  eax,DWORD PTR [rax]
    9c63:	00 2a                	add    BYTE PTR [rdx],ch
    9c65:	6a 00                	push   0x0
    9c67:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9c68:	0e                   	(bad)
    9c69:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9c6a:	21 00                	and    DWORD PTR [rax],eax
    9c6c:	00 25 1a 00 00 23    	add    BYTE PTR [rip+0x2300001a],ah        # 23009c8c <_end+0x23003c74>
    9c72:	1a 00                	sbb    al,BYTE PTR [rax]
    9c74:	00 26                	add    BYTE PTR [rsi],ah
    9c76:	05 29 00 00 00       	add    eax,0x29
    9c7b:	00 00                	add    BYTE PTR [rax],al
    9c7d:	00 4d 2f             	add    BYTE PTR [rbp+0x2f],cl
    9c80:	00 00                	add    BYTE PTR [rax],al
    9c82:	00 16                	add    BYTE PTR [rsi],dl
    9c84:	17                   	(bad)
    9c85:	29 00                	sub    DWORD PTR [rax],eax
    9c87:	00 00                	add    BYTE PTR [rax],al
    9c89:	00 00                	add    BYTE PTR [rax],al
    9c8b:	00 bd 00 00 00 00    	add    BYTE PTR [rbp+0x0],bh
    9c91:	00 00                	add    BYTE PTR [rax],al
    9c93:	00 33                	add    BYTE PTR [rbx],dh
    9c95:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    9c98:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    9c9b:	8a 0e                	mov    cl,BYTE PTR [rsi]
    9c9d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9c9e:	21 00                	and    DWORD PTR [rax],eax
    9ca0:	00 34 1a             	add    BYTE PTR [rdx+rbx*1],dh
    9ca3:	00 00                	add    BYTE PTR [rax],al
    9ca5:	2e 1a 00             	cs sbb al,BYTE PTR [rax]
    9ca8:	00 2e                	add    BYTE PTR [rsi],ch
    9caa:	df 02                	fild   WORD PTR [rdx]
    9cac:	00 00                	add    BYTE PTR [rax],al
    9cae:	20 67 2f             	and    BYTE PTR [rdi+0x2f],ah
    9cb1:	00 00                	add    BYTE PTR [rax],al
    9cb3:	8b 0e                	mov    ecx,DWORD PTR [rsi]
    9cb5:	e3 1a                	jrcxz  9cd1 <_end+0x3cb9>
    9cb7:	00 00                	add    BYTE PTR [rax],al
    9cb9:	4f 1a 00             	rex.WRXB sbb r8b,BYTE PTR [r8]
    9cbc:	00 4d 1a             	add    BYTE PTR [rbp+0x1a],cl
    9cbf:	00 00                	add    BYTE PTR [rax],al
    9cc1:	49                   	rex.WB
    9cc2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    9cc4:	64 00 91 0e e3 1a 00 	add    BYTE PTR fs:[rcx+0x1ae30e],dl
    9ccb:	00 20                	add    BYTE PTR [rax],ah
    9ccd:	94                   	xchg   esp,eax
    9cce:	19 00                	sbb    DWORD PTR [rax],eax
    9cd0:	00 92 0e df 1b 00    	add    BYTE PTR [rdx+0x1bdf0e],dl
    9cd6:	00 5a 1a             	add    BYTE PTR [rdx+0x1a],bl
    9cd9:	00 00                	add    BYTE PTR [rax],al
    9cdb:	58                   	pop    rax
    9cdc:	1a 00                	sbb    al,BYTE PTR [rax]
    9cde:	00 16                	add    BYTE PTR [rsi],dl
    9ce0:	4f 29 00             	rex.WRXB sub QWORD PTR [r8],r8
    9ce3:	00 00                	add    BYTE PTR [rax],al
    9ce5:	00 00                	add    BYTE PTR [rax],al
    9ce7:	00 3b                	add    BYTE PTR [rbx],bh
    9ce9:	00 00                	add    BYTE PTR [rax],al
    9ceb:	00 00                	add    BYTE PTR [rax],al
    9ced:	00 00                	add    BYTE PTR [rax],al
    9cef:	00 b1 48 00 00 2a    	add    BYTE PTR [rcx+0x2a000048],dh
    9cf5:	6a 00                	push   0x0
    9cf7:	8d 12                	lea    edx,[rdx]
    9cf9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9cfa:	21 00                	and    DWORD PTR [rax],eax
    9cfc:	00 71 1a             	add    BYTE PTR [rcx+0x1a],dh
    9cff:	00 00                	add    BYTE PTR [rax],al
    9d01:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9d02:	1a 00                	sbb    al,BYTE PTR [rax]
    9d04:	00 21                	add    BYTE PTR [rcx],ah
    9d06:	78 29                	js     9d31 <_end+0x3d19>
    9d08:	00 00                	add    BYTE PTR [rax],al
    9d0a:	00 00                	add    BYTE PTR [rax],al
    9d0c:	00 00                	add    BYTE PTR [rax],al
    9d0e:	01 30                	add    DWORD PTR [rax],esi
    9d10:	07                   	(bad)
    9d11:	7d 29                	jge    9d3c <_end+0x3d24>
    9d13:	00 00                	add    BYTE PTR [rax],al
    9d15:	00 00                	add    BYTE PTR [rax],al
    9d17:	00 00                	add    BYTE PTR [rax],al
    9d19:	6b 42 00 00          	imul   eax,DWORD PTR [rdx+0x0],0x0
    9d1d:	03 01                	add    eax,DWORD PTR [rcx]
    9d1f:	55                   	push   rbp
    9d20:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    9d24:	00 1e                	add    BYTE PTR [rsi],bl
    9d26:	03 4f 00             	add    ecx,DWORD PTR [rdi+0x0]
    9d29:	00 8f 29 00 00 00    	add    BYTE PTR [rdi+0x29],cl
    9d2f:	00 00                	add    BYTE PTR [rax],al
    9d31:	00 01                	add    BYTE PTR [rcx],al
    9d33:	00 ef                	add    bh,ch
    9d35:	02 00                	add    al,BYTE PTR [rax]
    9d37:	00 92 54 9f 49 00    	add    BYTE PTR [rdx+0x499f54],dl
    9d3d:	00 05 33 4f 00 00    	add    BYTE PTR [rip+0x4f33],al        # ec76 <_end+0x8c5e>
    9d43:	7c 1a                	jl     9d5f <_end+0x3d47>
    9d45:	00 00                	add    BYTE PTR [rax],al
    9d47:	7a 1a                	jp     9d63 <_end+0x3d4b>
    9d49:	00 00                	add    BYTE PTR [rax],al
    9d4b:	05 27 4f 00 00       	add    eax,0x4f27
    9d50:	8b 1a                	mov    ebx,DWORD PTR [rdx]
    9d52:	00 00                	add    BYTE PTR [rax],al
    9d54:	89 1a                	mov    DWORD PTR [rdx],ebx
    9d56:	00 00                	add    BYTE PTR [rax],al
    9d58:	60                   	(bad)
    9d59:	e6 4e                	out    0x4e,al
    9d5b:	00 00                	add    BYTE PTR [rax],al
    9d5d:	8f 29 00 00          	(bad)
    9d61:	00 00                	add    BYTE PTR [rax],al
    9d63:	00 00                	add    BYTE PTR [rax],al
    9d65:	02 00                	add    al,BYTE PTR [rax]
    9d67:	8f 29 00 00          	(bad)
	...
    9d77:	41 16                	rex.B (bad)
    9d79:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9d7c:	05 f4 4e 00 00       	add    eax,0x4ef4
    9d81:	9a                   	(bad)
    9d82:	1a 00                	sbb    al,BYTE PTR [rax]
    9d84:	00 98 1a 00 00 00    	add    BYTE PTR [rax+0x1a],bl
    9d8a:	60                   	(bad)
    9d8b:	e6 4e                	out    0x4e,al
    9d8d:	00 00                	add    BYTE PTR [rax],al
    9d8f:	8f 29 00 00          	(bad)
    9d93:	00 00                	add    BYTE PTR [rax],al
    9d95:	00 00                	add    BYTE PTR [rax],al
    9d97:	04 00                	add    al,0x0
    9d99:	8f 29 00 00          	(bad)
	...
    9da9:	26 48                	es rex.W
    9dab:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9dae:	05 f4 4e 00 00       	add    eax,0x4ef4
    9db3:	a9 1a 00 00 a7       	test   eax,0xa700001a
    9db8:	1a 00                	sbb    al,BYTE PTR [rax]
    9dba:	00 00                	add    BYTE PTR [rax],al
    9dbc:	61                   	(bad)
    9dbd:	35 45 00 00 8f       	xor    eax,0x8f000045
    9dc2:	29 00                	sub    DWORD PTR [rax],eax
    9dc4:	00 00                	add    BYTE PTR [rax],al
    9dc6:	00 00                	add    BYTE PTR [rax],al
    9dc8:	00 06                	add    BYTE PTR [rsi],al
    9dca:	00 ff                	add    bh,bh
    9dcc:	02 00                	add    al,BYTE PTR [rax]
    9dce:	00 77 04             	add    BYTE PTR [rdi+0x4],dh
    9dd1:	29 0b                	sub    DWORD PTR [rbx],ecx
    9dd3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9dd4:	45 00 00             	add    BYTE PTR [r8],r8b
    9dd7:	0b 62 45             	or     esp,DWORD PTR [rdx+0x45]
    9dda:	00 00                	add    BYTE PTR [rax],al
    9ddc:	2e ff 02             	cs inc DWORD PTR [rdx]
    9ddf:	00 00                	add    BYTE PTR [rax],al
    9de1:	8c 01                	mov    WORD PTR [rcx],es
    9de3:	54                   	push   rsp
    9de4:	73 00                	jae    9de6 <_end+0x3dce>
    9de6:	00 8f 29 00 00 00    	add    BYTE PTR [rdi+0x29],cl
    9dec:	00 00                	add    BYTE PTR [rax],al
    9dee:	00 07                	add    BYTE PTR [rdi],al
    9df0:	00 8f 29 00 00 00    	add    BYTE PTR [rdi+0x29],cl
	...
    9dfe:	00 00                	add    BYTE PTR [rax],al
    9e00:	00 04 cc             	add    BYTE PTR [rsp+rcx*8],al
    9e03:	02 09                	add    cl,BYTE PTR [rcx]
    9e05:	0b 74 73 00          	or     esi,DWORD PTR [rbx+rsi*2+0x0]
    9e09:	00 0b                	add    BYTE PTR [rbx],cl
    9e0b:	6b 73 00 00          	imul   esi,DWORD PTR [rbx+0x0],0x0
    9e0f:	00 00                	add    BYTE PTR [rax],al
    9e11:	00 00                	add    BYTE PTR [rax],al
    9e13:	1e                   	(bad)
    9e14:	88 45 00             	mov    BYTE PTR [rbp+0x0],al
    9e17:	00 8f 29 00 00 00    	add    BYTE PTR [rdi+0x29],cl
    9e1d:	00 00                	add    BYTE PTR [rax],al
    9e1f:	00 09                	add    BYTE PTR [rcx],cl
    9e21:	00 0f                	add    BYTE PTR [rdi],cl
    9e23:	03 00                	add    eax,DWORD PTR [rax]
    9e25:	00 92 4d 17 4a 00    	add    BYTE PTR [rdx+0x4a174d],dl
    9e2b:	00 0b                	add    BYTE PTR [rbx],cl
    9e2d:	ac                   	lods   al,BYTE PTR ds:[rsi]
    9e2e:	45 00 00             	add    BYTE PTR [r8],r8b
    9e31:	4d b9 45 00 00 0f 03 	rex.WRB movabs r9,0x610000030f000045
    9e38:	00 00 61 
    9e3b:	00 45 00             	add    BYTE PTR [rbp+0x0],al
    9e3e:	00 8f 29 00 00 00    	add    BYTE PTR [rdi+0x29],cl
    9e44:	00 00                	add    BYTE PTR [rax],al
    9e46:	00 0a                	add    BYTE PTR [rdx],cl
    9e48:	00 0f                	add    BYTE PTR [rdi],cl
    9e4a:	03 00                	add    eax,DWORD PTR [rax]
    9e4c:	00 1f                	add    BYTE PTR [rdi],bl
    9e4e:	01 17                	add    DWORD PTR [rdi],edx
    9e50:	0b 1b                	or     ebx,DWORD PTR [rbx]
    9e52:	45 00 00             	add    BYTE PTR [r8],r8b
    9e55:	2e 0f 03 00          	cs lsl eax,WORD PTR [rax]
    9e59:	00 19                	add    BYTE PTR [rcx],bl
    9e5b:	ae                   	scas   al,BYTE PTR es:[rdi]
    9e5c:	44 00 00             	add    BYTE PTR [rax],r8b
    9e5f:	8f 29 00 00          	(bad)
    9e63:	00 00                	add    BYTE PTR [rax],al
    9e65:	00 00                	add    BYTE PTR [rax],al
    9e67:	0b 00                	or     eax,DWORD PTR [rax]
    9e69:	8f 29 00 00          	(bad)
	...
    9e79:	04 d3                	add    al,0xd3
    9e7b:	0d 0b ce 44 00       	or     eax,0x44ce0b
    9e80:	00 0b                	add    BYTE PTR [rbx],cl
    9e82:	c5 44 00             	(bad)
    9e85:	00 00                	add    BYTE PTR [rax],al
    9e87:	00 00                	add    BYTE PTR [rax],al
    9e89:	00 00                	add    BYTE PTR [rax],al
    9e8b:	26 41 29 00          	es sub DWORD PTR [r8],eax
    9e8f:	00 00                	add    BYTE PTR [rax],al
    9e91:	00 00                	add    BYTE PTR [rax],al
    9e93:	00 d0                	add    al,dl
    9e95:	1a 00                	sbb    al,BYTE PTR [rax]
    9e97:	00 26                	add    BYTE PTR [rsi],ah
    9e99:	8f 29 00 00          	(bad)
    9e9d:	00 00                	add    BYTE PTR [rax],al
    9e9f:	00 00                	add    BYTE PTR [rax],al
    9ea1:	d0 1a                	rcr    BYTE PTR [rdx],1
    9ea3:	00 00                	add    BYTE PTR [rax],al
    9ea5:	00 00                	add    BYTE PTR [rax],al
    9ea7:	62 2f 03 00 00       	(bad)
    9eac:	af                   	scas   eax,DWORD PTR es:[rdi]
    9ead:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    9eb0:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    9eb3:	9c                   	pushf
    9eb4:	13 b0 2c 00 00 c0    	adc    esi,DWORD PTR [rax-0x3fffffd4]
    9eba:	1a 00                	sbb    al,BYTE PTR [rax]
    9ebc:	00 b6 1a 00 00 38    	add    BYTE PTR [rsi+0x3800001a],dh
    9ec2:	c2 73 00             	ret    0x73
    9ec5:	00 22                	add    BYTE PTR [rdx],ah
    9ec7:	2a 00                	sub    al,BYTE PTR [rax]
    9ec9:	00 00                	add    BYTE PTR [rax],al
    9ecb:	00 00                	add    BYTE PTR [rax],al
    9ecd:	00 00                	add    BYTE PTR [rax],al
    9ecf:	00 3f                	add    BYTE PTR [rdi],bh
    9ed1:	03 00                	add    eax,DWORD PTR [rax]
    9ed3:	00 9d 10 05 dc 73    	add    BYTE PTR [rbp+0x73dc0510],bl
    9ed9:	00 00                	add    BYTE PTR [rax],al
    9edb:	eb 1a                	jmp    9ef7 <_end+0x3edf>
    9edd:	00 00                	add    BYTE PTR [rax],al
    9edf:	e9 1a 00 00 05       	jmp    5009efe <_end+0x5003ee6>
    9ee4:	d0 73 00             	shl    BYTE PTR [rbx+0x0],1
    9ee7:	00 00                	add    BYTE PTR [rax],al
    9ee9:	1b 00                	sbb    eax,DWORD PTR [rax]
    9eeb:	00 fc                	add    ah,bh
    9eed:	1a 00                	sbb    al,BYTE PTR [rax]
    9eef:	00 07                	add    BYTE PTR [rdi],al
    9ef1:	38 2a                	cmp    BYTE PTR [rdx],ch
    9ef3:	00 00                	add    BYTE PTR [rax],al
    9ef5:	00 00                	add    BYTE PTR [rax],al
    9ef7:	00 00                	add    BYTE PTR [rax],al
    9ef9:	ab                   	stos   DWORD PTR es:[rdi],eax
    9efa:	42 00 00             	rex.X add BYTE PTR [rax],al
    9efd:	03 01                	add    eax,DWORD PTR [rcx]
    9eff:	55                   	push   rbp
    9f00:	04 76                	add    al,0x76
    9f02:	98                   	cwde
    9f03:	7f 06                	jg     9f0b <_end+0x3ef3>
    9f05:	03 01                	add    eax,DWORD PTR [rcx]
    9f07:	54                   	push   rsp
    9f08:	01 32                	add    DWORD PTR [rdx],esi
    9f0a:	03 01                	add    eax,DWORD PTR [rcx]
    9f0c:	51                   	push   rcx
    9f0d:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    9f10:	03 01                	add    eax,DWORD PTR [rcx]
    9f12:	52                   	push   rdx
    9f13:	02 7c 7f 03          	add    bh,BYTE PTR [rdi+rdi*2+0x3]
    9f17:	01 61 06             	add    DWORD PTR [rcx+0x6],esp
    9f1a:	76 f0                	jbe    9f0c <_end+0x3ef4>
    9f1c:	7e a6                	jle    9ec4 <_end+0x3eac>
    9f1e:	08 2e                	or     BYTE PTR [rsi],ch
    9f20:	00 00                	add    BYTE PTR [rax],al
    9f22:	00 1e                	add    BYTE PTR [rsi],bl
    9f24:	c2 73 00             	ret    0x73
    9f27:	00 e6                	add    dh,ah
    9f29:	29 00                	sub    DWORD PTR [rax],eax
    9f2b:	00 00                	add    BYTE PTR [rax],al
    9f2d:	00 00                	add    BYTE PTR [rax],al
    9f2f:	00 02                	add    BYTE PTR [rdx],al
    9f31:	00 1f                	add    BYTE PTR [rdi],bl
    9f33:	03 00                	add    eax,DWORD PTR [rax]
    9f35:	00 9b 0c 41 4b 00    	add    BYTE PTR [rbx+0x4b410c],bl
    9f3b:	00 05 dc 73 00 00    	add    BYTE PTR [rip+0x73dc],al        # 1131d <_end+0xb305>
    9f41:	15 1b 00 00 11       	adc    eax,0x1100001b
    9f46:	1b 00                	sbb    eax,DWORD PTR [rax]
    9f48:	00 05 d0 73 00 00    	add    BYTE PTR [rip+0x73d0],al        # 1131e <_end+0xb306>
    9f4e:	3a 1b                	cmp    bl,BYTE PTR [rbx]
    9f50:	00 00                	add    BYTE PTR [rax],al
    9f52:	36 1b 00             	ss sbb eax,DWORD PTR [rax]
    9f55:	00 0a                	add    BYTE PTR [rdx],cl
    9f57:	00 2a                	add    BYTE PTR [rdx],ch
    9f59:	00 00                	add    BYTE PTR [rax],al
    9f5b:	00 00                	add    BYTE PTR [rax],al
    9f5d:	00 00                	add    BYTE PTR [rax],al
    9f5f:	3a 77 00             	cmp    dh,BYTE PTR [rdi+0x0]
    9f62:	00 13                	add    BYTE PTR [rbx],dl
    9f64:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    9f67:	03 01                	add    eax,DWORD PTR [rcx]
    9f69:	55                   	push   rbp
    9f6a:	09 03                	or     DWORD PTR [rbx],eax
    9f6c:	33 41 00             	xor    eax,DWORD PTR [rcx+0x0]
    9f6f:	00 00                	add    BYTE PTR [rax],al
    9f71:	00 00                	add    BYTE PTR [rax],al
    9f73:	00 03                	add    BYTE PTR [rbx],al
    9f75:	01 54 01 31          	add    DWORD PTR [rcx+rax*1+0x31],edx
    9f79:	03 01                	add    eax,DWORD PTR [rcx]
    9f7b:	51                   	push   rcx
    9f7c:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    9f7f:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    9f82:	76 98                	jbe    9f1c <_end+0x3f04>
    9f84:	7f 06                	jg     9f8c <_end+0x3f74>
    9f86:	00 07                	add    BYTE PTR [rdi],al
    9f88:	35 2c 00 00 00       	xor    eax,0x2c
    9f8d:	00 00                	add    BYTE PTR [rax],al
    9f8f:	00 3a                	add    BYTE PTR [rdx],bh
    9f91:	77 00                	ja     9f93 <_end+0x3f7b>
    9f93:	00 03                	add    BYTE PTR [rbx],al
    9f95:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    9f98:	03 33                	add    esi,DWORD PTR [rbx]
    9f9a:	41 00 00             	add    BYTE PTR [r8],al
    9f9d:	00 00                	add    BYTE PTR [rax],al
    9f9f:	00 00                	add    BYTE PTR [rax],al
    9fa1:	03 01                	add    eax,DWORD PTR [rcx]
    9fa3:	54                   	push   rsp
    9fa4:	01 31                	add    DWORD PTR [rcx],esi
    9fa6:	03 01                	add    eax,DWORD PTR [rcx]
    9fa8:	51                   	push   rcx
    9fa9:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    9fac:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    9faf:	76 98                	jbe    9f49 <_end+0x3f31>
    9fb1:	7f 06                	jg     9fb9 <_end+0x3fa1>
    9fb3:	00 00                	add    BYTE PTR [rax],al
    9fb5:	1e                   	(bad)
    9fb6:	29 46 00             	sub    DWORD PTR [rsi+0x0],eax
    9fb9:	00 66 2a             	add    BYTE PTR [rsi+0x2a],ah
    9fbc:	00 00                	add    BYTE PTR [rax],al
    9fbe:	00 00                	add    BYTE PTR [rax],al
    9fc0:	00 00                	add    BYTE PTR [rax],al
    9fc2:	01 00                	add    DWORD PTR [rax],eax
    9fc4:	4f 03 00             	rex.WRXB add r8,QWORD PTR [r8]
    9fc7:	00 a2 31 5e 4c 00    	add    BYTE PTR [rdx+0x4c5e31],ah
    9fcd:	00 05 54 46 00 00    	add    BYTE PTR [rip+0x4654],al        # e627 <_end+0x860f>
    9fd3:	59                   	pop    rcx
    9fd4:	1b 00                	sbb    eax,DWORD PTR [rax]
    9fd6:	00 4d 1b             	add    BYTE PTR [rbp+0x1b],cl
    9fd9:	00 00                	add    BYTE PTR [rax],al
    9fdb:	05 48 46 00 00       	add    eax,0x4648
    9fe0:	a1 1b 00 00 93 1b 00 	movabs eax,ds:0x500001b9300001b
    9fe7:	00 05 
    9fe9:	3c 46                	cmp    al,0x46
    9feb:	00 00                	add    BYTE PTR [rax],al
    9fed:	e3 1b                	jrcxz  a00a <_end+0x3ff2>
    9fef:	00 00                	add    BYTE PTR [rax],al
    9ff1:	db 1b                	fistp  DWORD PTR [rbx]
    9ff3:	00 00                	add    BYTE PTR [rax],al
    9ff5:	2e 4f 03 00          	cs rex.WRXB add r8,QWORD PTR [r8]
    9ff9:	00 15 69 46 00 00    	add    BYTE PTR [rip+0x4669],dl        # e668 <_end+0x8650>
    9fff:	12 1c 00             	adc    bl,BYTE PTR [rax+rax*1]
    a002:	00 06                	add    BYTE PTR [rsi],al
    a004:	1c 00                	sbb    al,0x0
    a006:	00 39                	add    BYTE PTR [rcx],bh
    a008:	74 46                	je     a050 <_end+0x4038>
    a00a:	00 00                	add    BYTE PTR [rax],al
    a00c:	69 03 00 00 a6 4b    	imul   eax,DWORD PTR [rbx],0x4ba60000
    a012:	00 00                	add    BYTE PTR [rax],al
    a014:	3a 75 46             	cmp    dh,BYTE PTR [rbp+0x46]
    a017:	00 00                	add    BYTE PTR [rax],al
    a019:	00 1e                	add    BYTE PTR [rsi],bl
    a01b:	ea                   	(bad)
    a01c:	73 00                	jae    a01e <_end+0x4006>
    a01e:	00 48 2b             	add    BYTE PTR [rax+0x2b],cl
	...
    a029:	74 03                	je     a02e <_end+0x4016>
    a02b:	00 00                	add    BYTE PTR [rax],al
    a02d:	b3 1e                	mov    bl,0x1e
    a02f:	da 4b 00             	fimul  DWORD PTR [rbx+0x0]
    a032:	00 05 f3 73 00 00    	add    BYTE PTR [rip+0x73f3],al        # 1142b <_end+0xb413>
    a038:	43 1c 00             	rex.XB sbb al,0x0
    a03b:	00 3d 1c 00 00 26    	add    BYTE PTR [rip+0x2600001c],bh        # 2600a05d <_end+0x26004045>
    a041:	ac                   	lods   al,BYTE PTR ds:[rsi]
    a042:	2c 00                	sub    al,0x0
    a044:	00 00                	add    BYTE PTR [rax],al
    a046:	00 00                	add    BYTE PTR [rax],al
    a048:	00 43 77             	add    BYTE PTR [rbx+0x77],al
    a04b:	00 00                	add    BYTE PTR [rax],al
    a04d:	00 19                	add    BYTE PTR [rcx],bl
    a04f:	29 46 00             	sub    DWORD PTR [rsi+0x0],eax
    a052:	00 5c 2c 00          	add    BYTE PTR [rsp+rbp*1+0x0],bl
    a056:	00 00                	add    BYTE PTR [rax],al
    a058:	00 00                	add    BYTE PTR [rax],al
    a05a:	00 01                	add    BYTE PTR [rcx],al
    a05c:	00 5c 2c 00          	add    BYTE PTR [rsp+rbp*1+0x0],bl
    a060:	00 00                	add    BYTE PTR [rax],al
    a062:	00 00                	add    BYTE PTR [rax],al
    a064:	00 1f                	add    BYTE PTR [rdi],bl
    a066:	00 00                	add    BYTE PTR [rax],al
    a068:	00 00                	add    BYTE PTR [rax],al
    a06a:	00 00                	add    BYTE PTR [rax],al
    a06c:	00 01                	add    BYTE PTR [rcx],al
    a06e:	ac                   	lods   al,BYTE PTR ds:[rsi]
    a06f:	08 05 3c 46 00 00    	or     BYTE PTR [rip+0x463c],al        # e6b1 <_end+0x8699>
    a075:	5b                   	pop    rbx
    a076:	1c 00                	sbb    al,0x0
    a078:	00 59 1c             	add    BYTE PTR [rcx+0x1c],bl
    a07b:	00 00                	add    BYTE PTR [rax],al
    a07d:	05 48 46 00 00       	add    eax,0x4648
    a082:	5b                   	pop    rbx
    a083:	1c 00                	sbb    al,0x0
    a085:	00 59 1c             	add    BYTE PTR [rcx+0x1c],bl
    a088:	00 00                	add    BYTE PTR [rax],al
    a08a:	0b 54 46 00          	or     edx,DWORD PTR [rsi+rax*2+0x0]
    a08e:	00 3a                	add    BYTE PTR [rdx],bh
    a090:	69 46 00 00 07 7b 2c 	imul   eax,DWORD PTR [rsi+0x0],0x2c7b0700
    a097:	00 00                	add    BYTE PTR [rax],al
    a099:	00 00                	add    BYTE PTR [rax],al
    a09b:	00 00                	add    BYTE PTR [rax],al
    a09d:	87 44 00 00          	xchg   DWORD PTR [rax+rax*1+0x0],eax
    a0a1:	03 01                	add    eax,DWORD PTR [rcx]
    a0a3:	55                   	push   rbp
    a0a4:	09 03                	or     DWORD PTR [rbx],eax
    a0a6:	47                   	rex.RXB
    a0a7:	41 00 00             	add    BYTE PTR [r8],al
    a0aa:	00 00                	add    BYTE PTR [rax],al
    a0ac:	00 00                	add    BYTE PTR [rax],al
    a0ae:	03 01                	add    eax,DWORD PTR [rcx]
    a0b0:	54                   	push   rsp
    a0b1:	09 03                	or     DWORD PTR [rbx],eax
    a0b3:	bd 40 00 00 00       	mov    ebp,0x40
    a0b8:	00 00                	add    BYTE PTR [rax],al
    a0ba:	00 03                	add    BYTE PTR [rbx],al
    a0bc:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    a0bf:	08 ad 03 01 52 09    	or     BYTE PTR [rbp+0x9520103],ch
    a0c5:	03 78 44             	add    edi,DWORD PTR [rax+0x44]
	...
    a0d0:	00 00                	add    BYTE PTR [rax],al
    a0d2:	1e                   	(bad)
    a0d3:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a0d4:	73 00                	jae    a0d6 <_end+0x40be>
    a0d6:	00 6a 2b             	add    BYTE PTR [rdx+0x2b],ch
    a0d9:	00 00                	add    BYTE PTR [rax],al
    a0db:	00 00                	add    BYTE PTR [rax],al
    a0dd:	00 00                	add    BYTE PTR [rax],al
    a0df:	03 00                	add    eax,DWORD PTR [rax]
    a0e1:	84 03                	test   BYTE PTR [rbx],al
    a0e3:	00 00                	add    BYTE PTR [rax],al
    a0e5:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    a0e6:	0b af 4c 00 00 05    	or     ebp,DWORD PTR [rdi+0x500004c]
    a0ec:	b4 73                	mov    ah,0x73
    a0ee:	00 00                	add    BYTE PTR [rax],al
    a0f0:	66 1c 00             	data16 sbb al,0x0
    a0f3:	00 64 1c 00          	add    BYTE PTR [rsp+rbx*1+0x0],ah
    a0f7:	00 07                	add    BYTE PTR [rdi],al
    a0f9:	85 2b                	test   DWORD PTR [rbx],ebp
    a0fb:	00 00                	add    BYTE PTR [rax],al
    a0fd:	00 00                	add    BYTE PTR [rax],al
    a0ff:	00 00                	add    BYTE PTR [rax],al
    a101:	21 43 00             	and    DWORD PTR [rbx+0x0],eax
    a104:	00 03                	add    BYTE PTR [rbx],al
    a106:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a109:	32 03                	xor    al,BYTE PTR [rbx]
    a10b:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a10f:	5b                   	pop    rbx
    a110:	41 00 00             	add    BYTE PTR [r8],al
    a113:	00 00                	add    BYTE PTR [rax],al
    a115:	00 00                	add    BYTE PTR [rax],al
    a117:	03 01                	add    eax,DWORD PTR [rcx]
    a119:	61                   	(bad)
    a11a:	06                   	(bad)
    a11b:	76 f0                	jbe    a10d <_end+0x40f5>
    a11d:	7e a6                	jle    a0c5 <_end+0x40ad>
    a11f:	08 2e                	or     BYTE PTR [rsi],ch
    a121:	00 00                	add    BYTE PTR [rax],al
    a123:	09 a6 73 00 00 85    	or     DWORD PTR [rsi-0x7affff8d],esp
    a129:	2b 00                	sub    eax,DWORD PTR [rax]
    a12b:	00 00                	add    BYTE PTR [rax],al
    a12d:	00 00                	add    BYTE PTR [rax],al
    a12f:	00 02                	add    BYTE PTR [rdx],al
    a131:	00 85 2b 00 00 00    	add    BYTE PTR [rbp+0x2b],al
    a137:	00 00                	add    BYTE PTR [rax],al
    a139:	00 1b                	add    BYTE PTR [rbx],bl
    a13b:	00 00                	add    BYTE PTR [rax],al
    a13d:	00 00                	add    BYTE PTR [rax],al
    a13f:	00 00                	add    BYTE PTR [rax],al
    a141:	00 a5 0b 09 4d 00    	add    BYTE PTR [rbp+0x4d090b],ah
    a147:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 11501 <_end+0xb4e9>
    a14d:	79 1c                	jns    a16b <_end+0x4153>
    a14f:	00 00                	add    BYTE PTR [rax],al
    a151:	77 1c                	ja     a16f <_end+0x4157>
    a153:	00 00                	add    BYTE PTR [rax],al
    a155:	07                   	(bad)
    a156:	a0 2b 00 00 00 00 00 	movabs al,ds:0x210000000000002b
    a15d:	00 21 
    a15f:	43 00 00             	rex.XB add BYTE PTR [r8],al
    a162:	03 01                	add    eax,DWORD PTR [rcx]
    a164:	55                   	push   rbp
    a165:	01 32                	add    DWORD PTR [rdx],esi
    a167:	03 01                	add    eax,DWORD PTR [rcx]
    a169:	54                   	push   rsp
    a16a:	09 03                	or     DWORD PTR [rbx],eax
    a16c:	79 41                	jns    a1af <_end+0x4197>
    a16e:	00 00                	add    BYTE PTR [rax],al
    a170:	00 00                	add    BYTE PTR [rax],al
    a172:	00 00                	add    BYTE PTR [rax],al
    a174:	03 01                	add    eax,DWORD PTR [rcx]
    a176:	61                   	(bad)
    a177:	03 a5 03 2e 00 00    	add    esp,DWORD PTR [rbp+0x2e03]
    a17d:	1e                   	(bad)
    a17e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a17f:	73 00                	jae    a181 <_end+0x4169>
    a181:	00 a0 2b 00 00 00    	add    BYTE PTR [rax+0x2b],ah
    a187:	00 00                	add    BYTE PTR [rax],al
    a189:	00 02                	add    BYTE PTR [rdx],al
    a18b:	00 8f 03 00 00 a6    	add    BYTE PTR [rdi-0x59fffffd],cl
    a191:	0b 6a 4d             	or     ebp,DWORD PTR [rdx+0x4d]
    a194:	00 00                	add    BYTE PTR [rax],al
    a196:	05 b4 73 00 00       	add    eax,0x73b4
    a19b:	8c 1c 00             	mov    WORD PTR [rax+rax*1],ds
    a19e:	00 8a 1c 00 00 07    	add    BYTE PTR [rdx+0x700001c],cl
    a1a4:	cf                   	iret
    a1a5:	2b 00                	sub    eax,DWORD PTR [rax]
    a1a7:	00 00                	add    BYTE PTR [rax],al
    a1a9:	00 00                	add    BYTE PTR [rax],al
    a1ab:	00 21                	add    BYTE PTR [rcx],ah
    a1ad:	43 00 00             	rex.XB add BYTE PTR [r8],al
    a1b0:	03 01                	add    eax,DWORD PTR [rcx]
    a1b2:	55                   	push   rbp
    a1b3:	01 32                	add    DWORD PTR [rdx],esi
    a1b5:	03 01                	add    eax,DWORD PTR [rcx]
    a1b7:	54                   	push   rsp
    a1b8:	09 03                	or     DWORD PTR [rbx],eax
    a1ba:	97                   	xchg   edi,eax
    a1bb:	41 00 00             	add    BYTE PTR [r8],al
    a1be:	00 00                	add    BYTE PTR [rax],al
    a1c0:	00 00                	add    BYTE PTR [rax],al
    a1c2:	03 01                	add    eax,DWORD PTR [rcx]
    a1c4:	61                   	(bad)
    a1c5:	16                   	(bad)
    a1c6:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a1c7:	03 2e                	add    ebp,DWORD PTR [rsi]
    a1c9:	76 f0                	jbe    a1bb <_end+0x41a3>
    a1cb:	7e a6                	jle    a173 <_end+0x415b>
    a1cd:	08 2e                	or     BYTE PTR [rsi],ch
    a1cf:	1b a4 2e 08 00 00 00 	sbb    esp,DWORD PTR [rsi+rbp*1+0x8]
    a1d6:	00 00                	add    BYTE PTR [rax],al
    a1d8:	00 59 40             	add    BYTE PTR [rcx+0x40],bl
    a1db:	1e                   	(bad)
    a1dc:	00 00                	add    BYTE PTR [rax],al
    a1de:	0a 68 28             	or     ch,BYTE PTR [rax+0x28]
    a1e1:	00 00                	add    BYTE PTR [rax],al
    a1e3:	00 00                	add    BYTE PTR [rax],al
    a1e5:	00 00                	add    BYTE PTR [rax],al
    a1e7:	5a                   	pop    rdx
    a1e8:	2f                   	(bad)
    a1e9:	00 00                	add    BYTE PTR [rax],al
    a1eb:	81 4d 00 00 03 01 55 	or     DWORD PTR [rbp+0x0],0x55010300
    a1f2:	01 3a                	add    DWORD PTR [rdx],edi
    a1f4:	00 0a                	add    BYTE PTR [rdx],cl
    a1f6:	77 28                	ja     a220 <_end+0x4208>
    a1f8:	00 00                	add    BYTE PTR [rax],al
    a1fa:	00 00                	add    BYTE PTR [rax],al
    a1fc:	00 00                	add    BYTE PTR [rax],al
    a1fe:	02 43 00             	add    al,BYTE PTR [rbx+0x0]
    a201:	00 a7 4d 00 00 03    	add    BYTE PTR [rdi+0x300004d],ah
    a207:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a20a:	7c 00                	jl     a20c <_end+0x41f4>
    a20c:	03 01                	add    eax,DWORD PTR [rcx]
    a20e:	54                   	push   rsp
    a20f:	04 76                	add    al,0x76
    a211:	a8 7f                	test   al,0x7f
    a213:	06                   	(bad)
    a214:	03 01                	add    eax,DWORD PTR [rcx]
    a216:	51                   	push   rcx
    a217:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    a21a:	00 0a                	add    BYTE PTR [rdx],cl
    a21c:	c8 28 00 00          	enter  0x28,0x0
    a220:	00 00                	add    BYTE PTR [rax],al
    a222:	00 00                	add    BYTE PTR [rax],al
    a224:	8f 42 00             	pop    QWORD PTR [rdx+0x0]
    a227:	00 c7                	add    bh,al
    a229:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a22c:	03 01                	add    eax,DWORD PTR [rcx]
    a22e:	55                   	push   rbp
    a22f:	05 0c 40 42 0f       	add    eax,0xf42400c
    a234:	00 03                	add    BYTE PTR [rbx],al
    a236:	01 54 01 34          	add    DWORD PTR [rcx+rax*1+0x34],edx
    a23a:	00 0a                	add    BYTE PTR [rdx],cl
    a23c:	f3 28 00             	repz sub BYTE PTR [rax],al
    a23f:	00 00                	add    BYTE PTR [rax],al
    a241:	00 00                	add    BYTE PTR [rax],al
    a243:	00 8f 42 00 00 e6    	add    BYTE PTR [rdi-0x19ffffbe],cl
    a249:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a24c:	03 01                	add    eax,DWORD PTR [rcx]
    a24e:	55                   	push   rbp
    a24f:	04 76                	add    al,0x76
    a251:	90                   	nop
    a252:	7f 06                	jg     a25a <_end+0x4242>
    a254:	03 01                	add    eax,DWORD PTR [rcx]
    a256:	54                   	push   rsp
    a257:	01 38                	add    DWORD PTR [rax],edi
    a259:	00 0a                	add    BYTE PTR [rdx],cl
    a25b:	e6 29                	out    0x29,al
    a25d:	00 00                	add    BYTE PTR [rax],al
    a25f:	00 00                	add    BYTE PTR [rax],al
    a261:	00 00                	add    BYTE PTR [rax],al
    a263:	cc                   	int3
    a264:	42 00 00             	rex.X add BYTE PTR [rax],al
    a267:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    a26a:	00 03                	add    BYTE PTR [rbx],al
    a26c:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
    a26f:	76 b0                	jbe    a221 <_end+0x4209>
    a271:	7f 00                	jg     a273 <_end+0x425b>
    a273:	21 e5                	and    ebp,esp
    a275:	2a 00                	sub    al,BYTE PTR [rax]
    a277:	00 00                	add    BYTE PTR [rax],al
    a279:	00 00                	add    BYTE PTR [rax],al
    a27b:	00 01                	add    BYTE PTR [rcx],al
    a27d:	30 0a                	xor    BYTE PTR [rdx],cl
    a27f:	d8 2b                	fsubr  DWORD PTR [rbx]
    a281:	00 00                	add    BYTE PTR [rax],al
    a283:	00 00                	add    BYTE PTR [rax],al
    a285:	00 00                	add    BYTE PTR [rax],al
    a287:	3d 43 00 00 24       	cmp    eax,0x24000043
    a28c:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a28f:	03 01                	add    eax,DWORD PTR [rcx]
    a291:	55                   	push   rbp
    a292:	04 76                	add    al,0x76
    a294:	a8 7f                	test   al,0x7f
    a296:	06                   	(bad)
    a297:	00 8d 01 0b 2c 00    	add    BYTE PTR [rbp+0x2c0b01],cl
    a29d:	00 00                	add    BYTE PTR [rax],al
    a29f:	00 00                	add    BYTE PTR [rax],al
    a2a1:	00 3d 43 00 00 44    	add    BYTE PTR [rip+0x44000043],bh        # 4400a2ea <_end+0x440042d2>
    a2a7:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a2aa:	03 01                	add    eax,DWORD PTR [rcx]
    a2ac:	55                   	push   rbp
    a2ad:	09 91 70 09 e0 1a    	or     DWORD PTR [rcx+0x1ae00970],edx
    a2b3:	08 a8 1c 06 00 21    	or     BYTE PTR [rax+0x2100061c],ch
    a2b9:	0e                   	(bad)
    a2ba:	2c 00                	sub    al,0x0
    a2bc:	00 00                	add    BYTE PTR [rax],al
    a2be:	00 00                	add    BYTE PTR [rax],al
    a2c0:	00 01                	add    BYTE PTR [rcx],al
    a2c2:	30 0a                	xor    BYTE PTR [rdx],cl
    a2c4:	1b 2c 00             	sbb    ebp,DWORD PTR [rax+rax*1]
    a2c7:	00 00                	add    BYTE PTR [rax],al
    a2c9:	00 00                	add    BYTE PTR [rax],al
    a2cb:	00 cc                	add    ah,cl
    a2cd:	42 00 00             	rex.X add BYTE PTR [rax],al
    a2d0:	67 4e 00 00          	rex.WRX add BYTE PTR [eax],r8b
    a2d4:	03 01                	add    eax,DWORD PTR [rcx]
    a2d6:	55                   	push   rbp
    a2d7:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a2db:	0a 9a 2c 00 00 00    	or     bl,BYTE PTR [rdx+0x2c]
    a2e1:	00 00                	add    BYTE PTR [rax],al
    a2e3:	00 87 44 00 00 a6    	add    BYTE PTR [rdi-0x59ffffbc],al
    a2e9:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a2ec:	03 01                	add    eax,DWORD PTR [rcx]
    a2ee:	55                   	push   rbp
    a2ef:	09 03                	or     DWORD PTR [rbx],eax
    a2f1:	d9 40 00             	fld    DWORD PTR [rax+0x0]
    a2f4:	00 00                	add    BYTE PTR [rax],al
    a2f6:	00 00                	add    BYTE PTR [rax],al
    a2f8:	00 03                	add    BYTE PTR [rbx],al
    a2fa:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a2fe:	bd 40 00 00 00       	mov    ebp,0x40
    a303:	00 00                	add    BYTE PTR [rax],al
    a305:	00 03                	add    BYTE PTR [rbx],al
    a307:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    a30a:	08 62 03             	or     BYTE PTR [rdx+0x3],ah
    a30d:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    a310:	03 30                	add    esi,DWORD PTR [rax]
    a312:	44 00 00             	add    BYTE PTR [rax],r8b
    a315:	00 00                	add    BYTE PTR [rax],al
    a317:	00 00                	add    BYTE PTR [rax],al
    a319:	00 26                	add    BYTE PTR [rsi],ah
    a31b:	9f                   	lahf
    a31c:	2c 00                	sub    al,0x0
    a31e:	00 00                	add    BYTE PTR [rax],al
    a320:	00 00                	add    BYTE PTR [rax],al
    a322:	00 4c 77 00          	add    BYTE PTR [rdi+rsi*2+0x0],cl
    a326:	00 00                	add    BYTE PTR [rax],al
    a328:	22 ee                	and    ch,dh
    a32a:	22 00                	and    al,BYTE PTR [rax]
    a32c:	00 c4                	add    ah,al
    a32e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a331:	23 8a 21 00 00 40    	and    ecx,DWORD PTR [rdx+0x40000021]
    a337:	00 13                	add    BYTE PTR [rbx],dl
    a339:	b4 4e                	mov    ah,0x4e
    a33b:	00 00                	add    BYTE PTR [rax],al
    a33d:	0d b0 2c 00 00       	or     eax,0x2cb0
    a342:	30 90 1c 00 00 dc    	xor    BYTE PTR [rax-0x23ffffe4],dl
    a348:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a34b:	03 e6                	add    esp,esi
    a34d:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a350:	31 c6                	xor    esi,eax
    a352:	1e                   	(bad)
    a353:	00 00                	add    BYTE PTR [rax],al
    a355:	e8 3f 00 00 00       	call   a399 <_end+0x4381>
    a35a:	30 3c 1b             	xor    BYTE PTR [rbx+rbx*1],bh
    a35d:	00 00                	add    BYTE PTR [rax],al
    a35f:	f4                   	hlt
    a360:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a363:	03 fe                	add    edi,esi
    a365:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a368:	31 c6                	xor    esi,eax
    a36a:	1e                   	(bad)
    a36b:	00 00                	add    BYTE PTR [rax],al
    a36d:	3e 42 00 00          	ds rex.X add BYTE PTR [rax],al
    a371:	00 25 da 1b 00 00    	add    BYTE PTR [rip+0x1bda],ah        # bf51 <_end+0x5f39>
    a377:	32 5c 1f 00          	xor    bl,BYTE PTR [rdi+rbx*1+0x0]
    a37b:	00 40 4f             	add    BYTE PTR [rax+0x4f],al
    a37e:	00 00                	add    BYTE PTR [rax],al
    a380:	11 4b 29             	adc    DWORD PTR [rbx+0x29],ecx
    a383:	00 00                	add    BYTE PTR [rax],al
    a385:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a386:	1a 00                	sbb    al,BYTE PTR [rax]
    a388:	00 11                	add    BYTE PTR [rcx],dl
    a38a:	a1 23 00 00 14 18 00 	movabs eax,ds:0x1100001814000023
    a391:	00 11 
    a393:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    a394:	23 00                	and    eax,DWORD PTR [rax]
    a396:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    a399:	00 00                	add    BYTE PTR [rax],al
    a39b:	2d 9c 0f 00 00       	sub    eax,0xf9c
    a3a0:	75 04                	jne    a3a6 <_end+0x438e>
    a3a2:	32 fe                	xor    bh,dh
    a3a4:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a3a7:	2d a6 17 00 00       	sub    eax,0x17a6
    a3ac:	76 04                	jbe    a3b2 <_end+0x439a>
    a3ae:	24 fe                	and    al,0xfe
    a3b0:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a3b3:	00 4a 6e             	add    BYTE PTR [rdx+0x6e],cl
    a3b6:	1f                   	(bad)
    a3b7:	00 00                	add    BYTE PTR [rax],al
    a3b9:	47 d0 2b             	rex.RXB shr BYTE PTR [r11],1
    a3bc:	00 00                	add    BYTE PTR [rax],al
    a3be:	90                   	nop
    a3bf:	23 00                	and    eax,DWORD PTR [rax]
    a3c1:	00 00                	add    BYTE PTR [rax],al
    a3c3:	00 00                	add    BYTE PTR [rax],al
    a3c5:	00 63 04             	add    BYTE PTR [rbx+0x4],ah
    a3c8:	00 00                	add    BYTE PTR [rax],al
    a3ca:	00 00                	add    BYTE PTR [rax],al
    a3cc:	00 00                	add    BYTE PTR [rax],al
    a3ce:	01 9c e0 52 00 00 1d 	add    DWORD PTR [rax+riz*8+0x1d000052],ebx
    a3d5:	73 2c                	jae    a403 <_end+0x43eb>
    a3d7:	00 00                	add    BYTE PTR [rax],al
    a3d9:	47 1b 8e 2c 00 00 ab 	rex.RXB sbb r9d,DWORD PTR [r14-0x54ffffd4]
    a3e0:	1c 00                	sbb    al,0x0
    a3e2:	00 9d 1c 00 00 1d    	add    BYTE PTR [rbp+0x1d00001c],bl
    a3e8:	49 04 00             	rex.WB add al,0x0
    a3eb:	00 47 28             	add    BYTE PTR [rdi+0x28],al
    a3ee:	74 40                	je     a430 <_end+0x4418>
    a3f0:	00 00                	add    BYTE PTR [rax],al
    a3f2:	e8 1c 00 00 e0       	call   ffffffffe000a413 <_end+0xffffffffe00043fb>
    a3f7:	1c 00                	sbb    al,0x0
    a3f9:	00 1d 62 0d 00 00    	add    BYTE PTR [rip+0xd62],bl        # b161 <_end+0x5149>
    a3ff:	47 3c ef             	rex.RXB cmp al,0xef
    a402:	41 00 00             	add    BYTE PTR [r8],al
    a405:	18 1d 00 00 08 1d    	sbb    BYTE PTR [rip+0x1d080000],bl        # 1d08a40b <_end+0x1d0843f3>
    a40b:	00 00                	add    BYTE PTR [rax],al
    a40d:	1d 0f 08 00 00       	sbb    eax,0x80f
    a412:	47 50                	rex.RXB push r8
    a414:	b0 2c                	mov    al,0x2c
    a416:	00 00                	add    BYTE PTR [rax],al
    a418:	7d 1d                	jge    a437 <_end+0x441f>
    a41a:	00 00                	add    BYTE PTR [rax],al
    a41c:	75 1d                	jne    a43b <_end+0x4423>
    a41e:	00 00                	add    BYTE PTR [rax],al
    a420:	4b ec                	rex.WXB in al,dx
    a422:	03 00                	add    eax,DWORD PTR [rax]
    a424:	00 f0                	add    al,dh
    a426:	52                   	push   rdx
    a427:	00 00                	add    BYTE PTR [rax],al
    a429:	09 03                	or     DWORD PTR [rbx],eax
    a42b:	f8                   	clc
    a42c:	43 00 00             	rex.XB add BYTE PTR [r8],al
    a42f:	00 00                	add    BYTE PTR [rax],al
    a431:	00 00                	add    BYTE PTR [rax],al
    a433:	4c 05 06 00 00 4a    	rex.WR add rax,0x4a000006
    a439:	0d 99 41 00 00       	or     eax,0x4199
    a43e:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    a441:	7f 20                	jg     a463 <_end+0x444b>
    a443:	0f 28 00             	movaps xmm0,XMMWORD PTR [rax]
    a446:	00 50 0b             	add    BYTE PTR [rax+0xb],dl
    a449:	35 00 00 00 ad       	xor    eax,0xad000000
    a44e:	1d 00 00 9d 1d       	sbb    eax,0x1d9d0000
    a453:	00 00                	add    BYTE PTR [rax],al
    a455:	16                   	(bad)
    a456:	e4 23                	in     al,0x23
    a458:	00 00                	add    BYTE PTR [rax],al
    a45a:	00 00                	add    BYTE PTR [rax],al
    a45c:	00 00                	add    BYTE PTR [rax],al
    a45e:	44 00 00             	add    BYTE PTR [rax],r8b
    a461:	00 00                	add    BYTE PTR [rax],al
    a463:	00 00                	add    BYTE PTR [rax],al
    a465:	00 27                	add    BYTE PTR [rdi],ah
    a467:	50                   	push   rax
    a468:	00 00                	add    BYTE PTR [rax],al
    a46a:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    a46d:	4c 0e                	rex.WR (bad)
    a46f:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a470:	21 00                	and    DWORD PTR [rax],eax
    a472:	00 f5                	add    ch,dh
    a474:	1d 00 00 f3 1d       	sbb    eax,0x1df30000
    a479:	00 00                	add    BYTE PTR [rax],al
    a47b:	21 16                	and    DWORD PTR [rsi],edx
    a47d:	24 00                	and    al,0x0
    a47f:	00 00                	add    BYTE PTR [rax],al
    a481:	00 00                	add    BYTE PTR [rax],al
    a483:	00 01                	add    BYTE PTR [rcx],al
    a485:	30 07                	xor    BYTE PTR [rdi],al
    a487:	1b 24 00             	sbb    esp,DWORD PTR [rax+rax*1]
    a48a:	00 00                	add    BYTE PTR [rax],al
    a48c:	00 00                	add    BYTE PTR [rax],al
    a48e:	00 e3                	add    bl,ah
    a490:	42 00 00             	rex.X add BYTE PTR [rax],al
    a493:	03 01                	add    eax,DWORD PTR [rcx]
    a495:	55                   	push   rbp
    a496:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a49a:	00 62 55             	add    BYTE PTR [rdx+0x55],ah
    a49d:	02 00                	add    al,BYTE PTR [rax]
    a49f:	00 91 50 00 00 2a    	add    BYTE PTR [rcx+0x2a000050],dl
    a4a5:	69 00 54 13 b0 2c    	imul   eax,DWORD PTR [rax],0x2cb01354
    a4ab:	00 00                	add    BYTE PTR [rax],al
    a4ad:	00 1e                	add    BYTE PTR [rsi],bl
    a4af:	00 00                	add    BYTE PTR [rax],al
    a4b1:	fc                   	cld
    a4b2:	1d 00 00 38 c2       	sbb    eax,0xc2380000
    a4b7:	73 00                	jae    a4b9 <_end+0x44a1>
    a4b9:	00 82 24 00 00 00    	add    BYTE PTR [rdx+0x24],al
    a4bf:	00 00                	add    BYTE PTR [rax],al
    a4c1:	00 02                	add    BYTE PTR [rdx],al
    a4c3:	00 65 02             	add    BYTE PTR [rbp+0x2],ah
    a4c6:	00 00                	add    BYTE PTR [rax],al
    a4c8:	55                   	push   rbp
    a4c9:	10 05 dc 73 00 00    	adc    BYTE PTR [rip+0x73dc],al        # 118ab <_end+0xb893>
    a4cf:	12 1e                	adc    bl,BYTE PTR [rsi]
    a4d1:	00 00                	add    BYTE PTR [rax],al
    a4d3:	10 1e                	adc    BYTE PTR [rsi],bl
    a4d5:	00 00                	add    BYTE PTR [rax],al
    a4d7:	05 d0 73 00 00       	add    eax,0x73d0
    a4dc:	27                   	(bad)
    a4dd:	1e                   	(bad)
    a4de:	00 00                	add    BYTE PTR [rax],al
    a4e0:	23 1e                	and    ebx,DWORD PTR [rsi]
    a4e2:	00 00                	add    BYTE PTR [rax],al
    a4e4:	07                   	(bad)
    a4e5:	92                   	xchg   edx,eax
    a4e6:	24 00                	and    al,0x0
    a4e8:	00 00                	add    BYTE PTR [rax],al
    a4ea:	00 00                	add    BYTE PTR [rax],al
    a4ec:	00 ab 42 00 00 03    	add    BYTE PTR [rbx+0x3000042],ch
    a4f2:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a4f5:	7d 00                	jge    a4f7 <_end+0x44df>
    a4f7:	03 01                	add    eax,DWORD PTR [rcx]
    a4f9:	54                   	push   rsp
    a4fa:	01 32                	add    DWORD PTR [rdx],esi
    a4fc:	03 01                	add    eax,DWORD PTR [rcx]
    a4fe:	51                   	push   rcx
    a4ff:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    a502:	00 00                	add    BYTE PTR [rax],al
    a504:	00 09                	add    BYTE PTR [rcx],cl
    a506:	c2 73 00             	ret    0x73
    a509:	00 28                	add    BYTE PTR [rax],ch
    a50b:	24 00                	and    al,0x0
    a50d:	00 00                	add    BYTE PTR [rax],al
    a50f:	00 00                	add    BYTE PTR [rax],al
    a511:	00 03                	add    BYTE PTR [rbx],al
    a513:	00 28                	add    BYTE PTR [rax],ch
    a515:	24 00                	and    al,0x0
    a517:	00 00                	add    BYTE PTR [rax],al
    a519:	00 00                	add    BYTE PTR [rax],al
    a51b:	00 19                	add    BYTE PTR [rcx],bl
    a51d:	00 00                	add    BYTE PTR [rax],al
    a51f:	00 00                	add    BYTE PTR [rax],al
    a521:	00 00                	add    BYTE PTR [rax],al
    a523:	00 52 0c             	add    BYTE PTR [rdx+0xc],dl
    a526:	fc                   	cld
    a527:	50                   	push   rax
    a528:	00 00                	add    BYTE PTR [rax],al
    a52a:	05 dc 73 00 00       	add    eax,0x73dc
    a52f:	38 1e                	cmp    BYTE PTR [rsi],bl
    a531:	00 00                	add    BYTE PTR [rax],al
    a533:	36 1e                	ss (bad)
    a535:	00 00                	add    BYTE PTR [rax],al
    a537:	05 d0 73 00 00       	add    eax,0x73d0
    a53c:	4b 1e                	rex.WXB (bad)
    a53e:	00 00                	add    BYTE PTR [rax],al
    a540:	49 1e                	rex.WB (bad)
    a542:	00 00                	add    BYTE PTR [rax],al
    a544:	07                   	(bad)
    a545:	41 24 00             	rex.B and al,0x0
    a548:	00 00                	add    BYTE PTR [rax],al
    a54a:	00 00                	add    BYTE PTR [rax],al
    a54c:	00 3a                	add    BYTE PTR [rdx],bh
    a54e:	77 00                	ja     a550 <_end+0x4538>
    a550:	00 03                	add    BYTE PTR [rbx],al
    a552:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a555:	03 de                	add    ebx,esi
    a557:	40 00 00             	rex add BYTE PTR [rax],al
    a55a:	00 00                	add    BYTE PTR [rax],al
    a55c:	00 00                	add    BYTE PTR [rax],al
    a55e:	03 01                	add    eax,DWORD PTR [rcx]
    a560:	54                   	push   rsp
    a561:	01 31                	add    DWORD PTR [rcx],esi
    a563:	03 01                	add    eax,DWORD PTR [rcx]
    a565:	51                   	push   rcx
    a566:	01 49 03             	add    DWORD PTR [rcx+0x3],ecx
    a569:	01 52 02             	add    DWORD PTR [rdx+0x2],edx
    a56c:	7d 00                	jge    a56e <_end+0x4556>
    a56e:	00 00                	add    BYTE PTR [rax],al
    a570:	1e                   	(bad)
    a571:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a572:	73 00                	jae    a574 <_end+0x455c>
    a574:	00 bd 24 00 00 00    	add    BYTE PTR [rbp+0x24],bh
    a57a:	00 00                	add    BYTE PTR [rax],al
    a57c:	00 01                	add    BYTE PTR [rcx],al
    a57e:	00 75 02             	add    BYTE PTR [rbp+0x2],dh
    a581:	00 00                	add    BYTE PTR [rax],al
    a583:	5b                   	pop    rbx
    a584:	0b 4f 51             	or     ecx,DWORD PTR [rdi+0x51]
    a587:	00 00                	add    BYTE PTR [rax],al
    a589:	05 b4 73 00 00       	add    eax,0x73b4
    a58e:	55                   	push   rbp
    a58f:	1e                   	(bad)
    a590:	00 00                	add    BYTE PTR [rax],al
    a592:	53                   	push   rbx
    a593:	1e                   	(bad)
    a594:	00 00                	add    BYTE PTR [rax],al
    a596:	07                   	(bad)
    a597:	dc 24 00             	fsub   QWORD PTR [rax+rax*1]
    a59a:	00 00                	add    BYTE PTR [rax],al
    a59c:	00 00                	add    BYTE PTR [rax],al
    a59e:	00 21                	add    BYTE PTR [rcx],ah
    a5a0:	43 00 00             	rex.XB add BYTE PTR [r8],al
    a5a3:	03 01                	add    eax,DWORD PTR [rcx]
    a5a5:	55                   	push   rbp
    a5a6:	01 32                	add    DWORD PTR [rdx],esi
    a5a8:	03 01                	add    eax,DWORD PTR [rcx]
    a5aa:	54                   	push   rsp
    a5ab:	09 03                	or     DWORD PTR [rbx],eax
    a5ad:	ff 40 00             	inc    DWORD PTR [rax+0x0]
    a5b0:	00 00                	add    BYTE PTR [rax],al
    a5b2:	00 00                	add    BYTE PTR [rax],al
    a5b4:	00 03                	add    BYTE PTR [rbx],al
    a5b6:	01 61 08             	add    DWORD PTR [rcx+0x8],esp
    a5b9:	76 90                	jbe    a54b <_end+0x4533>
    a5bb:	7f a6                	jg     a563 <_end+0x454b>
    a5bd:	04 35                	add    al,0x35
    a5bf:	a8 2e                	test   al,0x2e
    a5c1:	00 00                	add    BYTE PTR [rax],al
    a5c3:	1e                   	(bad)
    a5c4:	bc 45 00 00 dc       	mov    esp,0xdc000045
    a5c9:	24 00                	and    al,0x0
    a5cb:	00 00                	add    BYTE PTR [rax],al
    a5cd:	00 00                	add    BYTE PTR [rax],al
    a5cf:	00 02                	add    BYTE PTR [rdx],al
    a5d1:	00 80 02 00 00 5c    	add    BYTE PTR [rax+0x5c000002],al
    a5d7:	45 f8                	rex.RB clc
    a5d9:	51                   	push   rcx
    a5da:	00 00                	add    BYTE PTR [rax],al
    a5dc:	05 db 45 00 00       	add    eax,0x45db
    a5e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    a5e2:	1e                   	(bad)
    a5e3:	00 00                	add    BYTE PTR [rax],al
    a5e5:	66 1e                	data16 (bad)
    a5e7:	00 00                	add    BYTE PTR [rax],al
    a5e9:	05 cf 45 00 00       	add    eax,0x45cf
    a5ee:	93                   	xchg   ebx,eax
    a5ef:	1e                   	(bad)
    a5f0:	00 00                	add    BYTE PTR [rax],al
    a5f2:	8f                   	(bad)
    a5f3:	1e                   	(bad)
    a5f4:	00 00                	add    BYTE PTR [rax],al
    a5f6:	2e 80 02 00          	cs add BYTE PTR [rdx],0x0
    a5fa:	00 15 f0 45 00 00    	add    BYTE PTR [rip+0x45f0],dl        # ebf0 <_end+0x8bd8>
    a600:	b6 1e                	mov    dh,0x1e
    a602:	00 00                	add    BYTE PTR [rax],al
    a604:	a8 1e                	test   al,0x1e
    a606:	00 00                	add    BYTE PTR [rax],al
    a608:	39 fb                	cmp    ebx,edi
    a60a:	45 00 00             	add    BYTE PTR [r8],r8b
    a60d:	8b 02                	mov    eax,DWORD PTR [rdx]
    a60f:	00 00                	add    BYTE PTR [rax],al
    a611:	c6                   	(bad)
    a612:	51                   	push   rcx
    a613:	00 00                	add    BYTE PTR [rax],al
    a615:	15 fc 45 00 00       	adc    eax,0x45fc
    a61a:	03 1f                	add    ebx,DWORD PTR [rdi]
    a61c:	00 00                	add    BYTE PTR [rax],al
    a61e:	f7 1e                	neg    DWORD PTR [rsi]
    a620:	00 00                	add    BYTE PTR [rax],al
    a622:	4d 05 46 00 00 9b    	rex.WRB add rax,0xffffffff9b000046
    a628:	02 00                	add    al,BYTE PTR [rax]
    a62a:	00 15 06 46 00 00    	add    BYTE PTR [rip+0x4606],dl        # ec36 <_end+0x8c1e>
    a630:	39 1f                	cmp    DWORD PTR [rdi],ebx
    a632:	00 00                	add    BYTE PTR [rax],al
    a634:	33 1f                	xor    ebx,DWORD PTR [rdi]
    a636:	00 00                	add    BYTE PTR [rax],al
    a638:	00 00                	add    BYTE PTR [rax],al
    a63a:	38 ea                	cmp    dl,ch
    a63c:	73 00                	jae    a63e <_end+0x4626>
    a63e:	00 4b 27             	add    BYTE PTR [rbx+0x27],cl
	...
    a649:	c4 02 00 00          	(bad)
    a64d:	c0 1e 05             	rcr    BYTE PTR [rsi],0x5
    a650:	f3 73 00             	repz jae a653 <_end+0x463b>
    a653:	00 7f 1f             	add    BYTE PTR [rdi+0x1f],bh
    a656:	00 00                	add    BYTE PTR [rax],al
    a658:	79 1f                	jns    a679 <_end+0x4661>
    a65a:	00 00                	add    BYTE PTR [rax],al
    a65c:	26 c9                	es leave
    a65e:	27                   	(bad)
    a65f:	00 00                	add    BYTE PTR [rax],al
    a661:	00 00                	add    BYTE PTR [rax],al
    a663:	00 00                	add    BYTE PTR [rax],al
    a665:	43 77 00             	rex.XB ja a668 <_end+0x4650>
    a668:	00 00                	add    BYTE PTR [rax],al
    a66a:	00 00                	add    BYTE PTR [rax],al
    a66c:	1e                   	(bad)
    a66d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a66e:	73 00                	jae    a670 <_end+0x4658>
    a670:	00 59 27             	add    BYTE PTR [rcx+0x27],bl
    a673:	00 00                	add    BYTE PTR [rax],al
    a675:	00 00                	add    BYTE PTR [rax],al
    a677:	00 00                	add    BYTE PTR [rax],al
    a679:	03 00                	add    eax,DWORD PTR [rax]
    a67b:	d4                   	(bad)
    a67c:	02 00                	add    al,BYTE PTR [rax]
    a67e:	00 5c 0b 3f          	add    BYTE PTR [rbx+rcx*1+0x3f],bl
    a682:	52                   	push   rdx
    a683:	00 00                	add    BYTE PTR [rax],al
    a685:	05 b4 73 00 00       	add    eax,0x73b4
    a68a:	97                   	xchg   edi,eax
    a68b:	1f                   	(bad)
    a68c:	00 00                	add    BYTE PTR [rax],al
    a68e:	95                   	xchg   ebp,eax
    a68f:	1f                   	(bad)
    a690:	00 00                	add    BYTE PTR [rax],al
    a692:	07                   	(bad)
    a693:	73 27                	jae    a6bc <_end+0x46a4>
    a695:	00 00                	add    BYTE PTR [rax],al
    a697:	00 00                	add    BYTE PTR [rax],al
    a699:	00 00                	add    BYTE PTR [rax],al
    a69b:	21 43 00             	and    DWORD PTR [rbx+0x0],eax
    a69e:	00 03                	add    BYTE PTR [rbx],al
    a6a0:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a6a3:	32 03                	xor    al,BYTE PTR [rbx]
    a6a5:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a6a9:	19 41 00             	sbb    DWORD PTR [rcx+0x0],eax
    a6ac:	00 00                	add    BYTE PTR [rax],al
    a6ae:	00 00                	add    BYTE PTR [rax],al
    a6b0:	00 00                	add    BYTE PTR [rax],al
    a6b2:	00 0a                	add    BYTE PTR [rdx],cl
    a6b4:	e4 23                	in     al,0x23
    a6b6:	00 00                	add    BYTE PTR [rax],al
    a6b8:	00 00                	add    BYTE PTR [rax],al
    a6ba:	00 00                	add    BYTE PTR [rax],al
    a6bc:	02 43 00             	add    al,BYTE PTR [rbx+0x0]
    a6bf:	00 65 52             	add    BYTE PTR [rbp+0x52],ah
    a6c2:	00 00                	add    BYTE PTR [rax],al
    a6c4:	03 01                	add    eax,DWORD PTR [rcx]
    a6c6:	55                   	push   rbp
    a6c7:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    a6cb:	01 54 03 a3          	add    DWORD PTR [rbx+rax*1-0x5d],edx
    a6cf:	01 54 03 01          	add    DWORD PTR [rbx+rax*1+0x1],edx
    a6d3:	51                   	push   rcx
    a6d4:	03 a3 01 58 00 21    	add    esp,DWORD PTR [rbx+0x21005801]
    a6da:	44                   	rex.R
    a6db:	26 00 00             	es add BYTE PTR [rax],al
    a6de:	00 00                	add    BYTE PTR [rax],al
    a6e0:	00 00                	add    BYTE PTR [rax],al
    a6e2:	01 30                	add    DWORD PTR [rax],esi
    a6e4:	0a 7b 27             	or     bh,BYTE PTR [rbx+0x27]
    a6e7:	00 00                	add    BYTE PTR [rax],al
    a6e9:	00 00                	add    BYTE PTR [rax],al
    a6eb:	00 00                	add    BYTE PTR [rax],al
    a6ed:	cc                   	int3
    a6ee:	42 00 00             	rex.X add BYTE PTR [rax],al
    a6f1:	88 52 00             	mov    BYTE PTR [rdx+0x0],dl
    a6f4:	00 03                	add    BYTE PTR [rbx],al
    a6f6:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a6f9:	7c 00                	jl     a6fb <_end+0x46e3>
    a6fb:	00 21                	add    BYTE PTR [rcx],ah
    a6fd:	b3 27                	mov    bl,0x27
    a6ff:	00 00                	add    BYTE PTR [rax],al
    a701:	00 00                	add    BYTE PTR [rax],al
    a703:	00 00                	add    BYTE PTR [rax],al
    a705:	01 30                	add    DWORD PTR [rax],esi
    a707:	0a ee                	or     ch,dh
    a709:	27                   	(bad)
    a70a:	00 00                	add    BYTE PTR [rax],al
    a70c:	00 00                	add    BYTE PTR [rax],al
    a70e:	00 00                	add    BYTE PTR [rax],al
    a710:	87 44 00 00          	xchg   DWORD PTR [rax+rax*1+0x0],eax
    a714:	d2 52 00             	rcl    BYTE PTR [rdx+0x0],cl
    a717:	00 03                	add    BYTE PTR [rbx],al
    a719:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a71c:	03 d9                	add    ebx,ecx
    a71e:	40 00 00             	rex add BYTE PTR [rax],al
    a721:	00 00                	add    BYTE PTR [rax],al
    a723:	00 00                	add    BYTE PTR [rax],al
    a725:	03 01                	add    eax,DWORD PTR [rcx]
    a727:	54                   	push   rsp
    a728:	09 03                	or     DWORD PTR [rbx],eax
    a72a:	bd 40 00 00 00       	mov    ebp,0x40
    a72f:	00 00                	add    BYTE PTR [rax],al
    a731:	00 03                	add    BYTE PTR [rbx],al
    a733:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    a736:	08 48 03             	or     BYTE PTR [rax+0x3],cl
    a739:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    a73c:	03 f8                	add    edi,eax
    a73e:	43 00 00             	rex.XB add BYTE PTR [r8],al
    a741:	00 00                	add    BYTE PTR [rax],al
    a743:	00 00                	add    BYTE PTR [rax],al
    a745:	00 26                	add    BYTE PTR [rsi],ah
    a747:	f3 27                	repz (bad)
    a749:	00 00                	add    BYTE PTR [rax],al
    a74b:	00 00                	add    BYTE PTR [rax],al
    a74d:	00 00                	add    BYTE PTR [rax],al
    a74f:	4c 77 00             	rex.WR ja a752 <_end+0x473a>
    a752:	00 00                	add    BYTE PTR [rax],al
    a754:	22 ee                	and    ch,dh
    a756:	22 00                	and    al,BYTE PTR [rax]
    a758:	00 f0                	add    al,dh
    a75a:	52                   	push   rdx
    a75b:	00 00                	add    BYTE PTR [rax],al
    a75d:	23 8a 21 00 00 36    	and    ecx,DWORD PTR [rdx+0x36000021]
    a763:	00 13                	add    BYTE PTR [rbx],dl
    a765:	e0 52                	loopne a7b9 <_end+0x47a1>
    a767:	00 00                	add    BYTE PTR [rax],al
    a769:	8e 01                	mov    es,WORD PTR [rcx]
    a76b:	98                   	cwde
    a76c:	13 00                	adc    eax,DWORD PTR [rax]
    a76e:	00 01                	add    BYTE PTR [rcx],al
    a770:	37                   	(bad)
    a771:	06                   	(bad)
    a772:	30 23                	xor    BYTE PTR [rbx],ah
    a774:	00 00                	add    BYTE PTR [rax],al
    a776:	01 4f 53             	add    DWORD PTR [rdi+0x53],ecx
    a779:	00 00                	add    BYTE PTR [rax],al
    a77b:	1c 49                	sbb    al,0x49
    a77d:	04 00                	add    al,0x0
    a77f:	00 01                	add    BYTE PTR [rcx],al
    a781:	37                   	(bad)
    a782:	12 74 40 00          	adc    dh,BYTE PTR [rax+rax*2+0x0]
    a786:	00 1c f7             	add    BYTE PTR [rdi+rsi*8],bl
    a789:	2e 00 00             	cs add BYTE PTR [rax],al
    a78c:	01 37                	add    DWORD PTR [rdi],esi
    a78e:	27                   	(bad)
    a78f:	23 42 00             	and    eax,DWORD PTR [rdx+0x0]
    a792:	00 1c 62             	add    BYTE PTR [rdx+riz*2],bl
    a795:	0d 00 00 01 37       	or     eax,0x37010000
    a79a:	3b ef                	cmp    ebp,edi
    a79c:	41 00 00             	add    BYTE PTR [r8],al
    a79f:	1c 5e                	sbb    al,0x5e
    a7a1:	01 00                	add    DWORD PTR [rax],eax
    a7a3:	00 01                	add    BYTE PTR [rcx],al
    a7a5:	37                   	(bad)
    a7a6:	4f b0 2c             	rex.WRXB mov r8b,0x2c
    a7a9:	00 00                	add    BYTE PTR [rax],al
    a7ab:	1c 0f                	sbb    al,0xf
    a7ad:	08 00                	or     BYTE PTR [rax],al
    a7af:	00 01                	add    BYTE PTR [rcx],al
    a7b1:	37                   	(bad)
    a7b2:	65 b0 2c             	gs mov al,0x2c
    a7b5:	00 00                	add    BYTE PTR [rax],al
    a7b7:	17                   	(bad)
    a7b8:	6c                   	ins    BYTE PTR es:[rdi],dx
    a7b9:	2c 00                	sub    al,0x0
    a7bb:	00 42 0b             	add    BYTE PTR [rdx+0xb],al
    a7be:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    a7c1:	00 00                	add    BYTE PTR [rax],al
    a7c3:	4a cc                	rex.WX int3
    a7c5:	01 00                	add    DWORD PTR [rax],eax
    a7c7:	00 11                	add    BYTE PTR [rcx],dl
    a7c9:	b2 01                	mov    dl,0x1
    a7cb:	00 00                	add    BYTE PTR [rax],al
    a7cd:	30 2d 00 00 00 00    	xor    BYTE PTR [rip+0x0],ch        # a7d3 <_end+0x47bb>
    a7d3:	00 00                	add    BYTE PTR [rax],al
    a7d5:	ce                   	(bad)
    a7d6:	07                   	(bad)
    a7d7:	00 00                	add    BYTE PTR [rax],al
    a7d9:	00 00                	add    BYTE PTR [rax],al
    a7db:	00 00                	add    BYTE PTR [rax],al
    a7dd:	01 9c 27 73 00 00 1d 	add    DWORD PTR [rdi+riz*1+0x1d000073],ebx
    a7e4:	b6 0e                	mov    dh,0xe
    a7e6:	00 00                	add    BYTE PTR [rax],al
    a7e8:	11 1a                	adc    DWORD PTR [rdx],ebx
    a7ea:	d3 23                	shl    DWORD PTR [rbx],cl
    a7ec:	00 00                	add    BYTE PTR [rax],al
    a7ee:	b4 1f                	mov    ah,0x1f
    a7f0:	00 00                	add    BYTE PTR [rax],al
    a7f2:	a8 1f                	test   al,0x1f
    a7f4:	00 00                	add    BYTE PTR [rax],al
    a7f6:	1d 5e 01 00 00       	sbb    eax,0x15e
    a7fb:	11 2d b0 2c 00 00    	adc    DWORD PTR [rip+0x2cb0],ebp        # d4b1 <_end+0x7499>
    a801:	f8                   	clc
    a802:	1f                   	(bad)
    a803:	00 00                	add    BYTE PTR [rax],al
    a805:	e8 1f 00 00 1d       	call   1d00a829 <_end+0x1d004811>
    a80a:	9a                   	(bad)
    a80b:	02 00                	add    al,BYTE PTR [rax]
    a80d:	00 11                	add    BYTE PTR [rcx],dl
    a80f:	46 d3 23             	rex.RX shl DWORD PTR [rbx],cl
    a812:	00 00                	add    BYTE PTR [rax],al
    a814:	50                   	push   rax
    a815:	20 00                	and    BYTE PTR [rax],al
    a817:	00 3a                	add    BYTE PTR [rdx],bh
    a819:	20 00                	and    BYTE PTR [rax],al
    a81b:	00 1d 0f 08 00 00    	add    BYTE PTR [rip+0x80f],bl        # b030 <_end+0x5018>
    a821:	11 5a b0             	adc    DWORD PTR [rdx-0x50],ebx
    a824:	2c 00                	sub    al,0x0
    a826:	00 b6 20 00 00 aa    	add    BYTE PTR [rsi-0x55ffffe0],dh
    a82c:	20 00                	and    BYTE PTR [rax],al
    a82e:	00 4b ec             	add    BYTE PTR [rbx-0x14],cl
    a831:	03 00                	add    eax,DWORD PTR [rax]
    a833:	00 37                	add    BYTE PTR [rdi],dh
    a835:	73 00                	jae    a837 <_end+0x481f>
    a837:	00 09                	add    BYTE PTR [rcx],cl
    a839:	03 b0 44 00 00 00    	add    esi,DWORD PTR [rax+0x44]
    a83f:	00 00                	add    BYTE PTR [rax],al
    a841:	00 4c e1 0b          	add    BYTE PTR [rcx+riz*8+0xb],cl
    a845:	00 00                	add    BYTE PTR [rax],al
    a847:	15 0c 2e 23 00       	adc    eax,0x232e0c
    a84c:	00 03                	add    BYTE PTR [rbx],al
    a84e:	91                   	xchg   ecx,eax
    a84f:	b0 7f                	mov    al,0x7f
    a851:	20 a9 03 00 00 16    	and    BYTE PTR [rcx+0x16000003],ch
    a857:	0b e2                	or     esp,edx
    a859:	22 00                	and    al,BYTE PTR [rax]
    a85b:	00 f1                	add    cl,dh
    a85d:	20 00                	and    BYTE PTR [rax],al
    a85f:	00 e7                	add    bh,ah
    a861:	20 00                	and    BYTE PTR [rax],al
    a863:	00 20                	add    BYTE PTR [rax],ah
    a865:	29 05 00 00 18 0e    	sub    DWORD PTR [rip+0xe180000],eax        # e18a86b <_end+0xe184853>
    a86b:	b0 2c                	mov    al,0x2c
    a86d:	00 00                	add    BYTE PTR [rax],al
    a86f:	21 21                	and    DWORD PTR [rcx],esp
    a871:	00 00                	add    BYTE PTR [rax],al
    a873:	19 21                	sbb    DWORD PTR [rcx],esp
    a875:	00 00                	add    BYTE PTR [rax],al
    a877:	20 62 0d             	and    BYTE PTR [rdx+0xd],ah
    a87a:	00 00                	add    BYTE PTR [rax],al
    a87c:	1a 0e                	sbb    cl,BYTE PTR [rsi]
    a87e:	ef                   	out    dx,eax
    a87f:	41 00 00             	add    BYTE PTR [r8],al
    a882:	62 21 00 00 40       	(bad)
    a887:	21 00                	and    DWORD PTR [rax],eax
    a889:	00 16                	add    BYTE PTR [rsi],dl
    a88b:	a0 2e 00 00 00 00 00 	movabs al,ds:0x6e0000000000002e
    a892:	00 6e 
    a894:	00 00                	add    BYTE PTR [rax],al
    a896:	00 00                	add    BYTE PTR [rax],al
    a898:	00 00                	add    BYTE PTR [rax],al
    a89a:	00 2f                	add    BYTE PTR [rdi],ch
    a89c:	56                   	push   rsi
    a89d:	00 00                	add    BYTE PTR [rax],al
    a89f:	17                   	(bad)
    a8a0:	24 16                	and    al,0x16
    a8a2:	00 00                	add    BYTE PTR [rax],al
    a8a4:	1d 34 23 42 00       	sbb    eax,0x422334
    a8a9:	00 09                	add    BYTE PTR [rcx],cl
    a8ab:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a8ac:	73 00                	jae    a8ae <_end+0x4896>
    a8ae:	00 a0 2e 00 00 00    	add    BYTE PTR [rax+0x2e],ah
    a8b4:	00 00                	add    BYTE PTR [rax],al
    a8b6:	00 01                	add    BYTE PTR [rcx],al
    a8b8:	00 a0 2e 00 00 00    	add    BYTE PTR [rax+0x2e],ah
    a8be:	00 00                	add    BYTE PTR [rax],al
    a8c0:	00 0f                	add    BYTE PTR [rdi],cl
    a8c2:	00 00                	add    BYTE PTR [rax],al
    a8c4:	00 00                	add    BYTE PTR [rax],al
    a8c6:	00 00                	add    BYTE PTR [rax],al
    a8c8:	00 1d 34 84 54 00    	add    BYTE PTR [rip+0x548434],bl        # 552d02 <_end+0x54ccea>
    a8ce:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 11c88 <_end+0xbc70>
    a8d4:	4b 22 00             	rex.WXB and al,BYTE PTR [r8]
    a8d7:	00 49 22             	add    BYTE PTR [rcx+0x22],cl
    a8da:	00 00                	add    BYTE PTR [rax],al
    a8dc:	07                   	(bad)
    a8dd:	af                   	scas   eax,DWORD PTR es:[rdi]
    a8de:	2e 00 00             	cs add BYTE PTR [rax],al
    a8e1:	00 00                	add    BYTE PTR [rax],al
    a8e3:	00 00                	add    BYTE PTR [rax],al
    a8e5:	7a 77                	jp     a95e <_end+0x4946>
    a8e7:	00 00                	add    BYTE PTR [rax],al
    a8e9:	03 01                	add    eax,DWORD PTR [rcx]
    a8eb:	55                   	push   rbp
    a8ec:	09 03                	or     DWORD PTR [rbx],eax
    a8ee:	f0 44 00 00          	lock add BYTE PTR [rax],r8b
    a8f2:	00 00                	add    BYTE PTR [rax],al
    a8f4:	00 00                	add    BYTE PTR [rax],al
    a8f6:	00 00                	add    BYTE PTR [rax],al
    a8f8:	09 a6 73 00 00 af    	or     DWORD PTR [rsi-0x50ffff8d],esp
    a8fe:	2e 00 00             	cs add BYTE PTR [rax],al
    a901:	00 00                	add    BYTE PTR [rax],al
    a903:	00 00                	add    BYTE PTR [rax],al
    a905:	02 00                	add    al,BYTE PTR [rax]
    a907:	af                   	scas   eax,DWORD PTR es:[rdi]
    a908:	2e 00 00             	cs add BYTE PTR [rax],al
    a90b:	00 00                	add    BYTE PTR [rax],al
    a90d:	00 00                	add    BYTE PTR [rax],al
    a90f:	0c 00                	or     al,0x0
    a911:	00 00                	add    BYTE PTR [rax],al
    a913:	00 00                	add    BYTE PTR [rax],al
    a915:	00 00                	add    BYTE PTR [rax],al
    a917:	1d 34 d2 54 00       	sbb    eax,0x54d234
    a91c:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 11cd6 <_end+0xbcbe>
    a922:	5a                   	pop    rdx
    a923:	22 00                	and    al,BYTE PTR [rax]
    a925:	00 58 22             	add    BYTE PTR [rax+0x22],bl
    a928:	00 00                	add    BYTE PTR [rax],al
    a92a:	07                   	(bad)
    a92b:	bb 2e 00 00 00       	mov    ebx,0x2e
    a930:	00 00                	add    BYTE PTR [rax],al
    a932:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    a935:	00 00                	add    BYTE PTR [rax],al
    a937:	03 01                	add    eax,DWORD PTR [rcx]
    a939:	55                   	push   rbp
    a93a:	09 03                	or     DWORD PTR [rbx],eax
    a93c:	c2 41 00             	ret    0x41
    a93f:	00 00                	add    BYTE PTR [rax],al
    a941:	00 00                	add    BYTE PTR [rax],al
    a943:	00 00                	add    BYTE PTR [rax],al
    a945:	00 09                	add    BYTE PTR [rcx],cl
    a947:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a948:	73 00                	jae    a94a <_end+0x4932>
    a94a:	00 bb 2e 00 00 00    	add    BYTE PTR [rbx+0x2e],bh
    a950:	00 00                	add    BYTE PTR [rax],al
    a952:	00 02                	add    BYTE PTR [rdx],al
    a954:	00 bb 2e 00 00 00    	add    BYTE PTR [rbx+0x2e],bh
    a95a:	00 00                	add    BYTE PTR [rax],al
    a95c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    a95f:	00 00                	add    BYTE PTR [rax],al
    a961:	00 00                	add    BYTE PTR [rax],al
    a963:	00 00                	add    BYTE PTR [rax],al
    a965:	1d 34 20 55 00       	sbb    eax,0x552034
    a96a:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 11d24 <_end+0xbd0c>
    a970:	69 22 00 00 67 22    	imul   esp,DWORD PTR [rdx],0x22670000
    a976:	00 00                	add    BYTE PTR [rax],al
    a978:	07                   	(bad)
    a979:	c7                   	(bad)
    a97a:	2e 00 00             	cs add BYTE PTR [rax],al
    a97d:	00 00                	add    BYTE PTR [rax],al
    a97f:	00 00                	add    BYTE PTR [rax],al
    a981:	7a 77                	jp     a9fa <_end+0x49e2>
    a983:	00 00                	add    BYTE PTR [rax],al
    a985:	03 01                	add    eax,DWORD PTR [rcx]
    a987:	55                   	push   rbp
    a988:	09 03                	or     DWORD PTR [rbx],eax
    a98a:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    a98d:	00 00                	add    BYTE PTR [rax],al
    a98f:	00 00                	add    BYTE PTR [rax],al
    a991:	00 00                	add    BYTE PTR [rax],al
    a993:	00 09                	add    BYTE PTR [rcx],cl
    a995:	f5                   	cmc
    a996:	52                   	push   rdx
    a997:	00 00                	add    BYTE PTR [rax],al
    a999:	c7                   	(bad)
    a99a:	2e 00 00             	cs add BYTE PTR [rax],al
    a99d:	00 00                	add    BYTE PTR [rax],al
    a99f:	00 00                	add    BYTE PTR [rax],al
    a9a1:	03 00                	add    eax,DWORD PTR [rax]
    a9a3:	c7                   	(bad)
    a9a4:	2e 00 00             	cs add BYTE PTR [rax],al
    a9a7:	00 00                	add    BYTE PTR [rax],al
    a9a9:	00 00                	add    BYTE PTR [rax],al
    a9ab:	3b 00                	cmp    eax,DWORD PTR [rax]
    a9ad:	00 00                	add    BYTE PTR [rax],al
    a9af:	00 00                	add    BYTE PTR [rax],al
    a9b1:	00 00                	add    BYTE PTR [rax],al
    a9b3:	1d 34 e3 55 00       	sbb    eax,0x55e334
    a9b8:	00 05 37 53 00 00    	add    BYTE PTR [rip+0x5337],al        # fcf5 <_end+0x9cdd>
    a9be:	78 22                	js     a9e2 <_end+0x49ca>
    a9c0:	00 00                	add    BYTE PTR [rax],al
    a9c2:	76 22                	jbe    a9e6 <_end+0x49ce>
    a9c4:	00 00                	add    BYTE PTR [rax],al
    a9c6:	05 2b 53 00 00       	add    eax,0x532b
    a9cb:	84 22                	test   BYTE PTR [rdx],ah
    a9cd:	00 00                	add    BYTE PTR [rax],al
    a9cf:	82                   	(bad)
    a9d0:	22 00                	and    al,BYTE PTR [rax]
    a9d2:	00 0b                	add    BYTE PTR [rbx],cl
    a9d4:	1f                   	(bad)
    a9d5:	53                   	push   rbx
    a9d6:	00 00                	add    BYTE PTR [rax],al
    a9d8:	0b 13                	or     edx,DWORD PTR [rbx]
    a9da:	53                   	push   rbx
    a9db:	00 00                	add    BYTE PTR [rax],al
    a9dd:	0b 07                	or     eax,DWORD PTR [rdi]
    a9df:	53                   	push   rbx
    a9e0:	00 00                	add    BYTE PTR [rax],al
    a9e2:	15 43 53 00 00       	adc    eax,0x5343
    a9e7:	90                   	nop
    a9e8:	22 00                	and    al,BYTE PTR [rax]
    a9ea:	00 8c 22 00 00 0a da 	add    BYTE PTR [rdx+riz*1-0x25f60000],cl
    a9f1:	2e 00 00             	cs add BYTE PTR [rax],al
    a9f4:	00 00                	add    BYTE PTR [rax],al
    a9f6:	00 00                	add    BYTE PTR [rax],al
    a9f8:	ff                   	(bad)
    a9f9:	3c 00                	cmp    al,0x0
    a9fb:	00 a7 55 00 00 03    	add    BYTE PTR [rdi+0x3000055],ah
    aa01:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    aa04:	03 30                	add    esi,DWORD PTR [rax]
    aa06:	45 00 00             	add    BYTE PTR [r8],r8b
    aa09:	00 00                	add    BYTE PTR [rax],al
    aa0b:	00 00                	add    BYTE PTR [rax],al
    aa0d:	03 01                	add    eax,DWORD PTR [rcx]
    aa0f:	54                   	push   rsp
    aa10:	09 03                	or     DWORD PTR [rbx],eax
    aa12:	b2 41                	mov    dl,0x41
    aa14:	00 00                	add    BYTE PTR [rax],al
    aa16:	00 00                	add    BYTE PTR [rax],al
    aa18:	00 00                	add    BYTE PTR [rax],al
    aa1a:	00 0a                	add    BYTE PTR [rdx],cl
    aa1c:	fa                   	cli
    aa1d:	2e 00 00             	cs add BYTE PTR [rax],al
    aa20:	00 00                	add    BYTE PTR [rax],al
    aa22:	00 00                	add    BYTE PTR [rax],al
    aa24:	95                   	xchg   ebp,eax
    aa25:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    aa28:	ce                   	(bad)
    aa29:	55                   	push   rbp
    aa2a:	00 00                	add    BYTE PTR [rax],al
    aa2c:	03 01                	add    eax,DWORD PTR [rcx]
    aa2e:	55                   	push   rbp
    aa2f:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    aa32:	03 01                	add    eax,DWORD PTR [rcx]
    aa34:	58                   	pop    rax
    aa35:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    aa38:	03 01                	add    eax,DWORD PTR [rcx]
    aa3a:	59                   	pop    rcx
    aa3b:	05 91 9c 7f 94       	add    eax,0x947f9c91
    aa40:	04 00                	add    al,0x0
    aa42:	07                   	(bad)
    aa43:	02 2f                	add    ch,BYTE PTR [rdi]
    aa45:	00 00                	add    BYTE PTR [rax],al
    aa47:	00 00                	add    BYTE PTR [rax],al
    aa49:	00 00                	add    BYTE PTR [rax],al
    aa4b:	4d 3c 00             	rex.WRB cmp al,0x0
    aa4e:	00 03                	add    BYTE PTR [rbx],al
    aa50:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    aa53:	7f 00                	jg     aa55 <_end+0x4a3d>
    aa55:	00 00                	add    BYTE PTR [rax],al
    aa57:	19 a6 73 00 00 02    	sbb    DWORD PTR [rsi+0x2000073],esp
    aa5d:	2f                   	(bad)
    aa5e:	00 00                	add    BYTE PTR [rax],al
    aa60:	00 00                	add    BYTE PTR [rax],al
    aa62:	00 00                	add    BYTE PTR [rax],al
    aa64:	02 00                	add    al,BYTE PTR [rax]
    aa66:	02 2f                	add    ch,BYTE PTR [rdi]
    aa68:	00 00                	add    BYTE PTR [rax],al
    aa6a:	00 00                	add    BYTE PTR [rax],al
    aa6c:	00 00                	add    BYTE PTR [rax],al
    aa6e:	0c 00                	or     al,0x0
    aa70:	00 00                	add    BYTE PTR [rax],al
    aa72:	00 00                	add    BYTE PTR [rax],al
    aa74:	00 00                	add    BYTE PTR [rax],al
    aa76:	01 1d 34 05 b4 73    	add    DWORD PTR [rip+0x73b40534],ebx        # 73b4afb0 <_end+0x73b44f98>
    aa7c:	00 00                	add    BYTE PTR [rax],al
    aa7e:	a1 22 00 00 9f 22 00 	movabs eax,ds:0x70000229f000022
    aa85:	00 07 
    aa87:	0e                   	(bad)
    aa88:	2f                   	(bad)
    aa89:	00 00                	add    BYTE PTR [rax],al
    aa8b:	00 00                	add    BYTE PTR [rax],al
    aa8d:	00 00                	add    BYTE PTR [rax],al
    aa8f:	7a 77                	jp     ab08 <_end+0x4af0>
    aa91:	00 00                	add    BYTE PTR [rax],al
    aa93:	03 01                	add    eax,DWORD PTR [rcx]
    aa95:	55                   	push   rbp
    aa96:	09 03                	or     DWORD PTR [rbx],eax
    aa98:	58                   	pop    rax
    aa99:	45 00 00             	add    BYTE PTR [r8],r8b
    aa9c:	00 00                	add    BYTE PTR [rax],al
    aa9e:	00 00                	add    BYTE PTR [rax],al
    aaa0:	00 00                	add    BYTE PTR [rax],al
    aaa2:	00 16                	add    BYTE PTR [rsi],dl
    aaa4:	48 34 00             	rex.W xor al,0x0
    aaa7:	00 00                	add    BYTE PTR [rax],al
    aaa9:	00 00                	add    BYTE PTR [rax],al
    aaab:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    aaae:	00 00                	add    BYTE PTR [rax],al
    aab0:	00 00                	add    BYTE PTR [rax],al
    aab2:	00 00                	add    BYTE PTR [rax],al
    aab4:	48 58                	rex.W pop rax
    aab6:	00 00                	add    BYTE PTR [rax],al
    aab8:	17                   	(bad)
    aab9:	20 16                	and    BYTE PTR [rsi],dl
    aabb:	00 00                	add    BYTE PTR [rax],al
    aabd:	1e                   	(bad)
    aabe:	34 23                	xor    al,0x23
    aac0:	42 00 00             	rex.X add BYTE PTR [rax],al
    aac3:	09 a6 73 00 00 48    	or     DWORD PTR [rsi+0x48000073],esp
    aac9:	34 00                	xor    al,0x0
    aacb:	00 00                	add    BYTE PTR [rax],al
    aacd:	00 00                	add    BYTE PTR [rax],al
    aacf:	00 02                	add    BYTE PTR [rdx],al
    aad1:	00 48 34             	add    BYTE PTR [rax+0x34],cl
    aad4:	00 00                	add    BYTE PTR [rax],al
    aad6:	00 00                	add    BYTE PTR [rax],al
    aad8:	00 00                	add    BYTE PTR [rax],al
    aada:	0f 00 00             	sldt   WORD PTR [rax]
    aadd:	00 00                	add    BYTE PTR [rax],al
    aadf:	00 00                	add    BYTE PTR [rax],al
    aae1:	00 1e                	add    BYTE PTR [rsi],bl
    aae3:	34 9d                	xor    al,0x9d
    aae5:	56                   	push   rsi
    aae6:	00 00                	add    BYTE PTR [rax],al
    aae8:	05 b4 73 00 00       	add    eax,0x73b4
    aaed:	b0 22                	mov    al,0x22
    aaef:	00 00                	add    BYTE PTR [rax],al
    aaf1:	ae                   	scas   al,BYTE PTR es:[rdi]
    aaf2:	22 00                	and    al,BYTE PTR [rax]
    aaf4:	00 07                	add    BYTE PTR [rdi],al
    aaf6:	57                   	push   rdi
    aaf7:	34 00                	xor    al,0x0
    aaf9:	00 00                	add    BYTE PTR [rax],al
    aafb:	00 00                	add    BYTE PTR [rax],al
    aafd:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    ab00:	00 00                	add    BYTE PTR [rax],al
    ab02:	03 01                	add    eax,DWORD PTR [rcx]
    ab04:	55                   	push   rbp
    ab05:	09 03                	or     DWORD PTR [rbx],eax
    ab07:	f0 44 00 00          	lock add BYTE PTR [rax],r8b
    ab0b:	00 00                	add    BYTE PTR [rax],al
    ab0d:	00 00                	add    BYTE PTR [rax],al
    ab0f:	00 00                	add    BYTE PTR [rax],al
    ab11:	09 a6 73 00 00 57    	or     DWORD PTR [rsi+0x57000073],esp
    ab17:	34 00                	xor    al,0x0
    ab19:	00 00                	add    BYTE PTR [rax],al
    ab1b:	00 00                	add    BYTE PTR [rax],al
    ab1d:	00 02                	add    BYTE PTR [rdx],al
    ab1f:	00 57 34             	add    BYTE PTR [rdi+0x34],dl
    ab22:	00 00                	add    BYTE PTR [rax],al
    ab24:	00 00                	add    BYTE PTR [rax],al
    ab26:	00 00                	add    BYTE PTR [rax],al
    ab28:	0c 00                	or     al,0x0
    ab2a:	00 00                	add    BYTE PTR [rax],al
    ab2c:	00 00                	add    BYTE PTR [rax],al
    ab2e:	00 00                	add    BYTE PTR [rax],al
    ab30:	1e                   	(bad)
    ab31:	34 eb                	xor    al,0xeb
    ab33:	56                   	push   rsi
    ab34:	00 00                	add    BYTE PTR [rax],al
    ab36:	05 b4 73 00 00       	add    eax,0x73b4
    ab3b:	bf 22 00 00 bd       	mov    edi,0xbd000022
    ab40:	22 00                	and    al,BYTE PTR [rax]
    ab42:	00 07                	add    BYTE PTR [rdi],al
    ab44:	63 34 00             	movsxd esi,DWORD PTR [rax+rax*1]
    ab47:	00 00                	add    BYTE PTR [rax],al
    ab49:	00 00                	add    BYTE PTR [rax],al
    ab4b:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    ab4e:	00 00                	add    BYTE PTR [rax],al
    ab50:	03 01                	add    eax,DWORD PTR [rcx]
    ab52:	55                   	push   rbp
    ab53:	09 03                	or     DWORD PTR [rbx],eax
    ab55:	be 41 00 00 00       	mov    esi,0x41
    ab5a:	00 00                	add    BYTE PTR [rax],al
    ab5c:	00 00                	add    BYTE PTR [rax],al
    ab5e:	00 09                	add    BYTE PTR [rcx],cl
    ab60:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    ab61:	73 00                	jae    ab63 <_end+0x4b4b>
    ab63:	00 63 34             	add    BYTE PTR [rbx+0x34],ah
    ab66:	00 00                	add    BYTE PTR [rax],al
    ab68:	00 00                	add    BYTE PTR [rax],al
    ab6a:	00 00                	add    BYTE PTR [rax],al
    ab6c:	02 00                	add    al,BYTE PTR [rax]
    ab6e:	63 34 00             	movsxd esi,DWORD PTR [rax+rax*1]
    ab71:	00 00                	add    BYTE PTR [rax],al
    ab73:	00 00                	add    BYTE PTR [rax],al
    ab75:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ab78:	00 00                	add    BYTE PTR [rax],al
    ab7a:	00 00                	add    BYTE PTR [rax],al
    ab7c:	00 00                	add    BYTE PTR [rax],al
    ab7e:	1e                   	(bad)
    ab7f:	34 39                	xor    al,0x39
    ab81:	57                   	push   rdi
    ab82:	00 00                	add    BYTE PTR [rax],al
    ab84:	05 b4 73 00 00       	add    eax,0x73b4
    ab89:	ce                   	(bad)
    ab8a:	22 00                	and    al,BYTE PTR [rax]
    ab8c:	00 cc                	add    ah,cl
    ab8e:	22 00                	and    al,BYTE PTR [rax]
    ab90:	00 07                	add    BYTE PTR [rdi],al
    ab92:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ab93:	34 00                	xor    al,0x0
    ab95:	00 00                	add    BYTE PTR [rax],al
    ab97:	00 00                	add    BYTE PTR [rax],al
    ab99:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    ab9c:	00 00                	add    BYTE PTR [rax],al
    ab9e:	03 01                	add    eax,DWORD PTR [rcx]
    aba0:	55                   	push   rbp
    aba1:	09 03                	or     DWORD PTR [rbx],eax
    aba3:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    aba6:	00 00                	add    BYTE PTR [rax],al
    aba8:	00 00                	add    BYTE PTR [rax],al
    abaa:	00 00                	add    BYTE PTR [rax],al
    abac:	00 09                	add    BYTE PTR [rcx],cl
    abae:	f5                   	cmc
    abaf:	52                   	push   rdx
    abb0:	00 00                	add    BYTE PTR [rax],al
    abb2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    abb3:	34 00                	xor    al,0x0
    abb5:	00 00                	add    BYTE PTR [rax],al
    abb7:	00 00                	add    BYTE PTR [rax],al
    abb9:	00 03                	add    BYTE PTR [rbx],al
    abbb:	00 6f 34             	add    BYTE PTR [rdi+0x34],ch
    abbe:	00 00                	add    BYTE PTR [rax],al
    abc0:	00 00                	add    BYTE PTR [rax],al
    abc2:	00 00                	add    BYTE PTR [rax],al
    abc4:	3b 00                	cmp    eax,DWORD PTR [rax]
    abc6:	00 00                	add    BYTE PTR [rax],al
    abc8:	00 00                	add    BYTE PTR [rax],al
    abca:	00 00                	add    BYTE PTR [rax],al
    abcc:	1e                   	(bad)
    abcd:	34 fc                	xor    al,0xfc
    abcf:	57                   	push   rdi
    abd0:	00 00                	add    BYTE PTR [rax],al
    abd2:	05 37 53 00 00       	add    eax,0x5337
    abd7:	dd 22                	frstor [rdx]
    abd9:	00 00                	add    BYTE PTR [rax],al
    abdb:	db 22                	(bad)  [rdx]
    abdd:	00 00                	add    BYTE PTR [rax],al
    abdf:	05 2b 53 00 00       	add    eax,0x532b
    abe4:	e9 22 00 00 e7       	jmp    ffffffffe700ac0b <_end+0xffffffffe7004bf3>
    abe9:	22 00                	and    al,BYTE PTR [rax]
    abeb:	00 0b                	add    BYTE PTR [rbx],cl
    abed:	1f                   	(bad)
    abee:	53                   	push   rbx
    abef:	00 00                	add    BYTE PTR [rax],al
    abf1:	0b 13                	or     edx,DWORD PTR [rbx]
    abf3:	53                   	push   rbx
    abf4:	00 00                	add    BYTE PTR [rax],al
    abf6:	0b 07                	or     eax,DWORD PTR [rdi]
    abf8:	53                   	push   rbx
    abf9:	00 00                	add    BYTE PTR [rax],al
    abfb:	15 43 53 00 00       	adc    eax,0x5343
    ac00:	f5                   	cmc
    ac01:	22 00                	and    al,BYTE PTR [rax]
    ac03:	00 f1                	add    cl,dh
    ac05:	22 00                	and    al,BYTE PTR [rax]
    ac07:	00 0a                	add    BYTE PTR [rdx],cl
    ac09:	82                   	(bad)
    ac0a:	34 00                	xor    al,0x0
    ac0c:	00 00                	add    BYTE PTR [rax],al
    ac0e:	00 00                	add    BYTE PTR [rax],al
    ac10:	00 ff                	add    bh,bh
    ac12:	3c 00                	cmp    al,0x0
    ac14:	00 c0                	add    al,al
    ac16:	57                   	push   rdi
    ac17:	00 00                	add    BYTE PTR [rax],al
    ac19:	03 01                	add    eax,DWORD PTR [rcx]
    ac1b:	55                   	push   rbp
    ac1c:	09 03                	or     DWORD PTR [rbx],eax
    ac1e:	78 45                	js     ac65 <_end+0x4c4d>
    ac20:	00 00                	add    BYTE PTR [rax],al
    ac22:	00 00                	add    BYTE PTR [rax],al
    ac24:	00 00                	add    BYTE PTR [rax],al
    ac26:	03 01                	add    eax,DWORD PTR [rcx]
    ac28:	54                   	push   rsp
    ac29:	09 03                	or     DWORD PTR [rbx],eax
    ac2b:	b2 41                	mov    dl,0x41
    ac2d:	00 00                	add    BYTE PTR [rax],al
    ac2f:	00 00                	add    BYTE PTR [rax],al
    ac31:	00 00                	add    BYTE PTR [rax],al
    ac33:	00 0a                	add    BYTE PTR [rdx],cl
    ac35:	a2 34 00 00 00 00 00 	movabs ds:0x9500000000000034,al
    ac3c:	00 95 
    ac3e:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    ac41:	e7 57                	out    0x57,eax
    ac43:	00 00                	add    BYTE PTR [rax],al
    ac45:	03 01                	add    eax,DWORD PTR [rcx]
    ac47:	55                   	push   rbp
    ac48:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ac4b:	03 01                	add    eax,DWORD PTR [rcx]
    ac4d:	58                   	pop    rax
    ac4e:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ac51:	03 01                	add    eax,DWORD PTR [rcx]
    ac53:	59                   	pop    rcx
    ac54:	05 91 9c 7f 94       	add    eax,0x947f9c91
    ac59:	04 00                	add    al,0x0
    ac5b:	07                   	(bad)
    ac5c:	aa                   	stos   BYTE PTR es:[rdi],al
    ac5d:	34 00                	xor    al,0x0
    ac5f:	00 00                	add    BYTE PTR [rax],al
    ac61:	00 00                	add    BYTE PTR [rax],al
    ac63:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    ac66:	00 00                	add    BYTE PTR [rax],al
    ac68:	03 01                	add    eax,DWORD PTR [rcx]
    ac6a:	55                   	push   rbp
    ac6b:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ac6e:	00 00                	add    BYTE PTR [rax],al
    ac70:	19 a6 73 00 00 aa    	sbb    DWORD PTR [rsi-0x55ffff8d],esp
    ac76:	34 00                	xor    al,0x0
    ac78:	00 00                	add    BYTE PTR [rax],al
    ac7a:	00 00                	add    BYTE PTR [rax],al
    ac7c:	00 02                	add    BYTE PTR [rdx],al
    ac7e:	00 aa 34 00 00 00    	add    BYTE PTR [rdx+0x34],ch
    ac84:	00 00                	add    BYTE PTR [rax],al
    ac86:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ac89:	00 00                	add    BYTE PTR [rax],al
    ac8b:	00 00                	add    BYTE PTR [rax],al
    ac8d:	00 00                	add    BYTE PTR [rax],al
    ac8f:	01 1e                	add    DWORD PTR [rsi],ebx
    ac91:	34 05                	xor    al,0x5
    ac93:	b4 73                	mov    ah,0x73
    ac95:	00 00                	add    BYTE PTR [rax],al
    ac97:	06                   	(bad)
    ac98:	23 00                	and    eax,DWORD PTR [rax]
    ac9a:	00 04 23             	add    BYTE PTR [rbx+riz*1],al
    ac9d:	00 00                	add    BYTE PTR [rax],al
    ac9f:	07                   	(bad)
    aca0:	b6 34                	mov    dh,0x34
    aca2:	00 00                	add    BYTE PTR [rax],al
    aca4:	00 00                	add    BYTE PTR [rax],al
    aca6:	00 00                	add    BYTE PTR [rax],al
    aca8:	7a 77                	jp     ad21 <_end+0x4d09>
    acaa:	00 00                	add    BYTE PTR [rax],al
    acac:	03 01                	add    eax,DWORD PTR [rcx]
    acae:	55                   	push   rbp
    acaf:	09 03                	or     DWORD PTR [rbx],eax
    acb1:	58                   	pop    rax
    acb2:	45 00 00             	add    BYTE PTR [r8],r8b
    acb5:	00 00                	add    BYTE PTR [rax],al
    acb7:	00 00                	add    BYTE PTR [rax],al
    acb9:	00 00                	add    BYTE PTR [rax],al
    acbb:	00 16                	add    BYTE PTR [rsi],dl
    acbd:	d0 33                	shl    BYTE PTR [rbx],1
    acbf:	00 00                	add    BYTE PTR [rax],al
    acc1:	00 00                	add    BYTE PTR [rax],al
    acc3:	00 00                	add    BYTE PTR [rax],al
    acc5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    acc6:	00 00                	add    BYTE PTR [rax],al
    acc8:	00 00                	add    BYTE PTR [rax],al
    acca:	00 00                	add    BYTE PTR [rax],al
    accc:	00 61 5a             	add    BYTE PTR [rcx+0x5a],ah
    accf:	00 00                	add    BYTE PTR [rax],al
    acd1:	17                   	(bad)
    acd2:	76 1e                	jbe    acf2 <_end+0x4cda>
    acd4:	00 00                	add    BYTE PTR [rax],al
    acd6:	1f                   	(bad)
    acd7:	34 23                	xor    al,0x23
    acd9:	42 00 00             	rex.X add BYTE PTR [rax],al
    acdc:	09 a6 73 00 00 d0    	or     DWORD PTR [rsi-0x2fffff8d],esp
    ace2:	33 00                	xor    eax,DWORD PTR [rax]
    ace4:	00 00                	add    BYTE PTR [rax],al
    ace6:	00 00                	add    BYTE PTR [rax],al
    ace8:	00 02                	add    BYTE PTR [rdx],al
    acea:	00 d0                	add    al,dl
    acec:	33 00                	xor    eax,DWORD PTR [rax]
    acee:	00 00                	add    BYTE PTR [rax],al
    acf0:	00 00                	add    BYTE PTR [rax],al
    acf2:	00 0f                	add    BYTE PTR [rdi],cl
    acf4:	00 00                	add    BYTE PTR [rax],al
    acf6:	00 00                	add    BYTE PTR [rax],al
    acf8:	00 00                	add    BYTE PTR [rax],al
    acfa:	00 1f                	add    BYTE PTR [rdi],bl
    acfc:	34 b6                	xor    al,0xb6
    acfe:	58                   	pop    rax
    acff:	00 00                	add    BYTE PTR [rax],al
    ad01:	05 b4 73 00 00       	add    eax,0x73b4
    ad06:	15 23 00 00 13       	adc    eax,0x13000023
    ad0b:	23 00                	and    eax,DWORD PTR [rax]
    ad0d:	00 07                	add    BYTE PTR [rdi],al
    ad0f:	df 33                	fbstp  TBYTE PTR [rbx]
    ad11:	00 00                	add    BYTE PTR [rax],al
    ad13:	00 00                	add    BYTE PTR [rax],al
    ad15:	00 00                	add    BYTE PTR [rax],al
    ad17:	7a 77                	jp     ad90 <_end+0x4d78>
    ad19:	00 00                	add    BYTE PTR [rax],al
    ad1b:	03 01                	add    eax,DWORD PTR [rcx]
    ad1d:	55                   	push   rbp
    ad1e:	09 03                	or     DWORD PTR [rbx],eax
    ad20:	f0 44 00 00          	lock add BYTE PTR [rax],r8b
    ad24:	00 00                	add    BYTE PTR [rax],al
    ad26:	00 00                	add    BYTE PTR [rax],al
    ad28:	00 00                	add    BYTE PTR [rax],al
    ad2a:	09 a6 73 00 00 df    	or     DWORD PTR [rsi-0x20ffff8d],esp
    ad30:	33 00                	xor    eax,DWORD PTR [rax]
    ad32:	00 00                	add    BYTE PTR [rax],al
    ad34:	00 00                	add    BYTE PTR [rax],al
    ad36:	00 02                	add    BYTE PTR [rdx],al
    ad38:	00 df                	add    bh,bl
    ad3a:	33 00                	xor    eax,DWORD PTR [rax]
    ad3c:	00 00                	add    BYTE PTR [rax],al
    ad3e:	00 00                	add    BYTE PTR [rax],al
    ad40:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ad43:	00 00                	add    BYTE PTR [rax],al
    ad45:	00 00                	add    BYTE PTR [rax],al
    ad47:	00 00                	add    BYTE PTR [rax],al
    ad49:	1f                   	(bad)
    ad4a:	34 04                	xor    al,0x4
    ad4c:	59                   	pop    rcx
    ad4d:	00 00                	add    BYTE PTR [rax],al
    ad4f:	05 b4 73 00 00       	add    eax,0x73b4
    ad54:	24 23                	and    al,0x23
    ad56:	00 00                	add    BYTE PTR [rax],al
    ad58:	22 23                	and    ah,BYTE PTR [rbx]
    ad5a:	00 00                	add    BYTE PTR [rax],al
    ad5c:	07                   	(bad)
    ad5d:	eb 33                	jmp    ad92 <_end+0x4d7a>
    ad5f:	00 00                	add    BYTE PTR [rax],al
    ad61:	00 00                	add    BYTE PTR [rax],al
    ad63:	00 00                	add    BYTE PTR [rax],al
    ad65:	7a 77                	jp     adde <_end+0x4dc6>
    ad67:	00 00                	add    BYTE PTR [rax],al
    ad69:	03 01                	add    eax,DWORD PTR [rcx]
    ad6b:	55                   	push   rbp
    ad6c:	09 03                	or     DWORD PTR [rbx],eax
    ad6e:	d0 41 00             	rol    BYTE PTR [rcx+0x0],1
    ad71:	00 00                	add    BYTE PTR [rax],al
    ad73:	00 00                	add    BYTE PTR [rax],al
    ad75:	00 00                	add    BYTE PTR [rax],al
    ad77:	00 09                	add    BYTE PTR [rcx],cl
    ad79:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    ad7a:	73 00                	jae    ad7c <_end+0x4d64>
    ad7c:	00 eb                	add    bl,ch
    ad7e:	33 00                	xor    eax,DWORD PTR [rax]
    ad80:	00 00                	add    BYTE PTR [rax],al
    ad82:	00 00                	add    BYTE PTR [rax],al
    ad84:	00 02                	add    BYTE PTR [rdx],al
    ad86:	00 eb                	add    bl,ch
    ad88:	33 00                	xor    eax,DWORD PTR [rax]
    ad8a:	00 00                	add    BYTE PTR [rax],al
    ad8c:	00 00                	add    BYTE PTR [rax],al
    ad8e:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ad91:	00 00                	add    BYTE PTR [rax],al
    ad93:	00 00                	add    BYTE PTR [rax],al
    ad95:	00 00                	add    BYTE PTR [rax],al
    ad97:	1f                   	(bad)
    ad98:	34 52                	xor    al,0x52
    ad9a:	59                   	pop    rcx
    ad9b:	00 00                	add    BYTE PTR [rax],al
    ad9d:	05 b4 73 00 00       	add    eax,0x73b4
    ada2:	33 23                	xor    esp,DWORD PTR [rbx]
    ada4:	00 00                	add    BYTE PTR [rax],al
    ada6:	31 23                	xor    DWORD PTR [rbx],esp
    ada8:	00 00                	add    BYTE PTR [rax],al
    adaa:	07                   	(bad)
    adab:	f7 33                	div    DWORD PTR [rbx]
    adad:	00 00                	add    BYTE PTR [rax],al
    adaf:	00 00                	add    BYTE PTR [rax],al
    adb1:	00 00                	add    BYTE PTR [rax],al
    adb3:	7a 77                	jp     ae2c <_end+0x4e14>
    adb5:	00 00                	add    BYTE PTR [rax],al
    adb7:	03 01                	add    eax,DWORD PTR [rcx]
    adb9:	55                   	push   rbp
    adba:	09 03                	or     DWORD PTR [rbx],eax
    adbc:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    adbf:	00 00                	add    BYTE PTR [rax],al
    adc1:	00 00                	add    BYTE PTR [rax],al
    adc3:	00 00                	add    BYTE PTR [rax],al
    adc5:	00 09                	add    BYTE PTR [rcx],cl
    adc7:	f5                   	cmc
    adc8:	52                   	push   rdx
    adc9:	00 00                	add    BYTE PTR [rax],al
    adcb:	f7 33                	div    DWORD PTR [rbx]
    adcd:	00 00                	add    BYTE PTR [rax],al
    adcf:	00 00                	add    BYTE PTR [rax],al
    add1:	00 00                	add    BYTE PTR [rax],al
    add3:	03 00                	add    eax,DWORD PTR [rax]
    add5:	f7 33                	div    DWORD PTR [rbx]
    add7:	00 00                	add    BYTE PTR [rax],al
    add9:	00 00                	add    BYTE PTR [rax],al
    addb:	00 00                	add    BYTE PTR [rax],al
    addd:	3b 00                	cmp    eax,DWORD PTR [rax]
    addf:	00 00                	add    BYTE PTR [rax],al
    ade1:	00 00                	add    BYTE PTR [rax],al
    ade3:	00 00                	add    BYTE PTR [rax],al
    ade5:	1f                   	(bad)
    ade6:	34 15                	xor    al,0x15
    ade8:	5a                   	pop    rdx
    ade9:	00 00                	add    BYTE PTR [rax],al
    adeb:	05 37 53 00 00       	add    eax,0x5337
    adf0:	42 23 00             	rex.X and eax,DWORD PTR [rax]
    adf3:	00 40 23             	add    BYTE PTR [rax+0x23],al
    adf6:	00 00                	add    BYTE PTR [rax],al
    adf8:	05 2b 53 00 00       	add    eax,0x532b
    adfd:	4e 23 00             	rex.WRX and r8,QWORD PTR [rax]
    ae00:	00 4c 23 00          	add    BYTE PTR [rbx+riz*1+0x0],cl
    ae04:	00 0b                	add    BYTE PTR [rbx],cl
    ae06:	1f                   	(bad)
    ae07:	53                   	push   rbx
    ae08:	00 00                	add    BYTE PTR [rax],al
    ae0a:	0b 13                	or     edx,DWORD PTR [rbx]
    ae0c:	53                   	push   rbx
    ae0d:	00 00                	add    BYTE PTR [rax],al
    ae0f:	0b 07                	or     eax,DWORD PTR [rdi]
    ae11:	53                   	push   rbx
    ae12:	00 00                	add    BYTE PTR [rax],al
    ae14:	15 43 53 00 00       	adc    eax,0x5343
    ae19:	5a                   	pop    rdx
    ae1a:	23 00                	and    eax,DWORD PTR [rax]
    ae1c:	00 56 23             	add    BYTE PTR [rsi+0x23],dl
    ae1f:	00 00                	add    BYTE PTR [rax],al
    ae21:	0a 0a                	or     cl,BYTE PTR [rdx]
    ae23:	34 00                	xor    al,0x0
    ae25:	00 00                	add    BYTE PTR [rax],al
    ae27:	00 00                	add    BYTE PTR [rax],al
    ae29:	00 ff                	add    bh,bh
    ae2b:	3c 00                	cmp    al,0x0
    ae2d:	00 d9                	add    cl,bl
    ae2f:	59                   	pop    rcx
    ae30:	00 00                	add    BYTE PTR [rax],al
    ae32:	03 01                	add    eax,DWORD PTR [rcx]
    ae34:	55                   	push   rbp
    ae35:	09 03                	or     DWORD PTR [rbx],eax
    ae37:	a8 45                	test   al,0x45
    ae39:	00 00                	add    BYTE PTR [rax],al
    ae3b:	00 00                	add    BYTE PTR [rax],al
    ae3d:	00 00                	add    BYTE PTR [rax],al
    ae3f:	03 01                	add    eax,DWORD PTR [rcx]
    ae41:	54                   	push   rsp
    ae42:	09 03                	or     DWORD PTR [rbx],eax
    ae44:	b2 41                	mov    dl,0x41
    ae46:	00 00                	add    BYTE PTR [rax],al
    ae48:	00 00                	add    BYTE PTR [rax],al
    ae4a:	00 00                	add    BYTE PTR [rax],al
    ae4c:	00 0a                	add    BYTE PTR [rdx],cl
    ae4e:	2a 34 00             	sub    dh,BYTE PTR [rax+rax*1]
    ae51:	00 00                	add    BYTE PTR [rax],al
    ae53:	00 00                	add    BYTE PTR [rax],al
    ae55:	00 95 46 00 00 00    	add    BYTE PTR [rbp+0x46],dl
    ae5b:	5a                   	pop    rdx
    ae5c:	00 00                	add    BYTE PTR [rax],al
    ae5e:	03 01                	add    eax,DWORD PTR [rcx]
    ae60:	55                   	push   rbp
    ae61:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ae64:	03 01                	add    eax,DWORD PTR [rcx]
    ae66:	58                   	pop    rax
    ae67:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ae6a:	03 01                	add    eax,DWORD PTR [rcx]
    ae6c:	59                   	pop    rcx
    ae6d:	05 91 9c 7f 94       	add    eax,0x947f9c91
    ae72:	04 00                	add    al,0x0
    ae74:	07                   	(bad)
    ae75:	32 34 00             	xor    dh,BYTE PTR [rax+rax*1]
    ae78:	00 00                	add    BYTE PTR [rax],al
    ae7a:	00 00                	add    BYTE PTR [rax],al
    ae7c:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    ae7f:	00 00                	add    BYTE PTR [rax],al
    ae81:	03 01                	add    eax,DWORD PTR [rcx]
    ae83:	55                   	push   rbp
    ae84:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ae87:	00 00                	add    BYTE PTR [rax],al
    ae89:	19 a6 73 00 00 32    	sbb    DWORD PTR [rsi+0x32000073],esp
    ae8f:	34 00                	xor    al,0x0
    ae91:	00 00                	add    BYTE PTR [rax],al
    ae93:	00 00                	add    BYTE PTR [rax],al
    ae95:	00 02                	add    BYTE PTR [rdx],al
    ae97:	00 32                	add    BYTE PTR [rdx],dh
    ae99:	34 00                	xor    al,0x0
    ae9b:	00 00                	add    BYTE PTR [rax],al
    ae9d:	00 00                	add    BYTE PTR [rax],al
    ae9f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    aea2:	00 00                	add    BYTE PTR [rax],al
    aea4:	00 00                	add    BYTE PTR [rax],al
    aea6:	00 00                	add    BYTE PTR [rax],al
    aea8:	01 1f                	add    DWORD PTR [rdi],ebx
    aeaa:	34 05                	xor    al,0x5
    aeac:	b4 73                	mov    ah,0x73
    aeae:	00 00                	add    BYTE PTR [rax],al
    aeb0:	6b 23 00             	imul   esp,DWORD PTR [rbx],0x0
    aeb3:	00 69 23             	add    BYTE PTR [rcx+0x23],ch
    aeb6:	00 00                	add    BYTE PTR [rax],al
    aeb8:	07                   	(bad)
    aeb9:	3e 34 00             	ds xor al,0x0
    aebc:	00 00                	add    BYTE PTR [rax],al
    aebe:	00 00                	add    BYTE PTR [rax],al
    aec0:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    aec3:	00 00                	add    BYTE PTR [rax],al
    aec5:	03 01                	add    eax,DWORD PTR [rcx]
    aec7:	55                   	push   rbp
    aec8:	09 03                	or     DWORD PTR [rbx],eax
    aeca:	58                   	pop    rax
    aecb:	45 00 00             	add    BYTE PTR [r8],r8b
    aece:	00 00                	add    BYTE PTR [rax],al
    aed0:	00 00                	add    BYTE PTR [rax],al
    aed2:	00 00                	add    BYTE PTR [rax],al
    aed4:	00 16                	add    BYTE PTR [rsi],dl
    aed6:	58                   	pop    rax
    aed7:	33 00                	xor    eax,DWORD PTR [rax]
    aed9:	00 00                	add    BYTE PTR [rax],al
    aedb:	00 00                	add    BYTE PTR [rax],al
    aedd:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    aee0:	00 00                	add    BYTE PTR [rax],al
    aee2:	00 00                	add    BYTE PTR [rax],al
    aee4:	00 00                	add    BYTE PTR [rax],al
    aee6:	7a 5c                	jp     af44 <_end+0x4f2c>
    aee8:	00 00                	add    BYTE PTR [rax],al
    aeea:	17                   	(bad)
    aeeb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    aeec:	0d 00 00 20 34       	or     eax,0x34200000
    aef1:	23 42 00             	and    eax,DWORD PTR [rdx+0x0]
    aef4:	00 09                	add    BYTE PTR [rcx],cl
    aef6:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    aef7:	73 00                	jae    aef9 <_end+0x4ee1>
    aef9:	00 58 33             	add    BYTE PTR [rax+0x33],bl
    aefc:	00 00                	add    BYTE PTR [rax],al
    aefe:	00 00                	add    BYTE PTR [rax],al
    af00:	00 00                	add    BYTE PTR [rax],al
    af02:	02 00                	add    al,BYTE PTR [rax]
    af04:	58                   	pop    rax
    af05:	33 00                	xor    eax,DWORD PTR [rax]
    af07:	00 00                	add    BYTE PTR [rax],al
    af09:	00 00                	add    BYTE PTR [rax],al
    af0b:	00 0f                	add    BYTE PTR [rdi],cl
    af0d:	00 00                	add    BYTE PTR [rax],al
    af0f:	00 00                	add    BYTE PTR [rax],al
    af11:	00 00                	add    BYTE PTR [rax],al
    af13:	00 20                	add    BYTE PTR [rax],ah
    af15:	34 cf                	xor    al,0xcf
    af17:	5a                   	pop    rdx
    af18:	00 00                	add    BYTE PTR [rax],al
    af1a:	05 b4 73 00 00       	add    eax,0x73b4
    af1f:	7a 23                	jp     af44 <_end+0x4f2c>
    af21:	00 00                	add    BYTE PTR [rax],al
    af23:	78 23                	js     af48 <_end+0x4f30>
    af25:	00 00                	add    BYTE PTR [rax],al
    af27:	07                   	(bad)
    af28:	67 33 00             	xor    eax,DWORD PTR [eax]
    af2b:	00 00                	add    BYTE PTR [rax],al
    af2d:	00 00                	add    BYTE PTR [rax],al
    af2f:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    af32:	00 00                	add    BYTE PTR [rax],al
    af34:	03 01                	add    eax,DWORD PTR [rcx]
    af36:	55                   	push   rbp
    af37:	09 03                	or     DWORD PTR [rbx],eax
    af39:	f0 44 00 00          	lock add BYTE PTR [rax],r8b
    af3d:	00 00                	add    BYTE PTR [rax],al
    af3f:	00 00                	add    BYTE PTR [rax],al
    af41:	00 00                	add    BYTE PTR [rax],al
    af43:	09 a6 73 00 00 67    	or     DWORD PTR [rsi+0x67000073],esp
    af49:	33 00                	xor    eax,DWORD PTR [rax]
    af4b:	00 00                	add    BYTE PTR [rax],al
    af4d:	00 00                	add    BYTE PTR [rax],al
    af4f:	00 02                	add    BYTE PTR [rdx],al
    af51:	00 67 33             	add    BYTE PTR [rdi+0x33],ah
    af54:	00 00                	add    BYTE PTR [rax],al
    af56:	00 00                	add    BYTE PTR [rax],al
    af58:	00 00                	add    BYTE PTR [rax],al
    af5a:	0c 00                	or     al,0x0
    af5c:	00 00                	add    BYTE PTR [rax],al
    af5e:	00 00                	add    BYTE PTR [rax],al
    af60:	00 00                	add    BYTE PTR [rax],al
    af62:	20 34 1d 5b 00 00 05 	and    BYTE PTR [rbx*1+0x500005b],dh
    af69:	b4 73                	mov    ah,0x73
    af6b:	00 00                	add    BYTE PTR [rax],al
    af6d:	89 23                	mov    DWORD PTR [rbx],esp
    af6f:	00 00                	add    BYTE PTR [rax],al
    af71:	87 23                	xchg   DWORD PTR [rbx],esp
    af73:	00 00                	add    BYTE PTR [rax],al
    af75:	07                   	(bad)
    af76:	73 33                	jae    afab <_end+0x4f93>
    af78:	00 00                	add    BYTE PTR [rax],al
    af7a:	00 00                	add    BYTE PTR [rax],al
    af7c:	00 00                	add    BYTE PTR [rax],al
    af7e:	7a 77                	jp     aff7 <_end+0x4fdf>
    af80:	00 00                	add    BYTE PTR [rax],al
    af82:	03 01                	add    eax,DWORD PTR [rcx]
    af84:	55                   	push   rbp
    af85:	09 03                	or     DWORD PTR [rbx],eax
    af87:	d8 41 00             	fadd   DWORD PTR [rcx+0x0]
    af8a:	00 00                	add    BYTE PTR [rax],al
    af8c:	00 00                	add    BYTE PTR [rax],al
    af8e:	00 00                	add    BYTE PTR [rax],al
    af90:	00 09                	add    BYTE PTR [rcx],cl
    af92:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    af93:	73 00                	jae    af95 <_end+0x4f7d>
    af95:	00 73 33             	add    BYTE PTR [rbx+0x33],dh
    af98:	00 00                	add    BYTE PTR [rax],al
    af9a:	00 00                	add    BYTE PTR [rax],al
    af9c:	00 00                	add    BYTE PTR [rax],al
    af9e:	02 00                	add    al,BYTE PTR [rax]
    afa0:	73 33                	jae    afd5 <_end+0x4fbd>
    afa2:	00 00                	add    BYTE PTR [rax],al
    afa4:	00 00                	add    BYTE PTR [rax],al
    afa6:	00 00                	add    BYTE PTR [rax],al
    afa8:	0c 00                	or     al,0x0
    afaa:	00 00                	add    BYTE PTR [rax],al
    afac:	00 00                	add    BYTE PTR [rax],al
    afae:	00 00                	add    BYTE PTR [rax],al
    afb0:	20 34 6b             	and    BYTE PTR [rbx+rbp*2],dh
    afb3:	5b                   	pop    rbx
    afb4:	00 00                	add    BYTE PTR [rax],al
    afb6:	05 b4 73 00 00       	add    eax,0x73b4
    afbb:	98                   	cwde
    afbc:	23 00                	and    eax,DWORD PTR [rax]
    afbe:	00 96 23 00 00 07    	add    BYTE PTR [rsi+0x7000023],dl
    afc4:	7f 33                	jg     aff9 <_end+0x4fe1>
    afc6:	00 00                	add    BYTE PTR [rax],al
    afc8:	00 00                	add    BYTE PTR [rax],al
    afca:	00 00                	add    BYTE PTR [rax],al
    afcc:	7a 77                	jp     b045 <_end+0x502d>
    afce:	00 00                	add    BYTE PTR [rax],al
    afd0:	03 01                	add    eax,DWORD PTR [rcx]
    afd2:	55                   	push   rbp
    afd3:	09 03                	or     DWORD PTR [rbx],eax
    afd5:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    afd8:	00 00                	add    BYTE PTR [rax],al
    afda:	00 00                	add    BYTE PTR [rax],al
    afdc:	00 00                	add    BYTE PTR [rax],al
    afde:	00 09                	add    BYTE PTR [rcx],cl
    afe0:	f5                   	cmc
    afe1:	52                   	push   rdx
    afe2:	00 00                	add    BYTE PTR [rax],al
    afe4:	7f 33                	jg     b019 <_end+0x5001>
    afe6:	00 00                	add    BYTE PTR [rax],al
    afe8:	00 00                	add    BYTE PTR [rax],al
    afea:	00 00                	add    BYTE PTR [rax],al
    afec:	03 00                	add    eax,DWORD PTR [rax]
    afee:	7f 33                	jg     b023 <_end+0x500b>
    aff0:	00 00                	add    BYTE PTR [rax],al
    aff2:	00 00                	add    BYTE PTR [rax],al
    aff4:	00 00                	add    BYTE PTR [rax],al
    aff6:	3b 00                	cmp    eax,DWORD PTR [rax]
    aff8:	00 00                	add    BYTE PTR [rax],al
    affa:	00 00                	add    BYTE PTR [rax],al
    affc:	00 00                	add    BYTE PTR [rax],al
    affe:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    b001:	5c                   	pop    rsp
    b002:	00 00                	add    BYTE PTR [rax],al
    b004:	05 37 53 00 00       	add    eax,0x5337
    b009:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    b00a:	23 00                	and    eax,DWORD PTR [rax]
    b00c:	00 a5 23 00 00 05    	add    BYTE PTR [rbp+0x5000023],ah
    b012:	2b 53 00             	sub    edx,DWORD PTR [rbx+0x0]
    b015:	00 b3 23 00 00 b1    	add    BYTE PTR [rbx-0x4effffdd],dh
    b01b:	23 00                	and    eax,DWORD PTR [rax]
    b01d:	00 0b                	add    BYTE PTR [rbx],cl
    b01f:	1f                   	(bad)
    b020:	53                   	push   rbx
    b021:	00 00                	add    BYTE PTR [rax],al
    b023:	0b 13                	or     edx,DWORD PTR [rbx]
    b025:	53                   	push   rbx
    b026:	00 00                	add    BYTE PTR [rax],al
    b028:	0b 07                	or     eax,DWORD PTR [rdi]
    b02a:	53                   	push   rbx
    b02b:	00 00                	add    BYTE PTR [rax],al
    b02d:	15 43 53 00 00       	adc    eax,0x5343
    b032:	bf 23 00 00 bb       	mov    edi,0xbb000023
    b037:	23 00                	and    eax,DWORD PTR [rax]
    b039:	00 0a                	add    BYTE PTR [rdx],cl
    b03b:	92                   	xchg   edx,eax
    b03c:	33 00                	xor    eax,DWORD PTR [rax]
    b03e:	00 00                	add    BYTE PTR [rax],al
    b040:	00 00                	add    BYTE PTR [rax],al
    b042:	00 ff                	add    bh,bh
    b044:	3c 00                	cmp    al,0x0
    b046:	00 f2                	add    dl,dh
    b048:	5b                   	pop    rbx
    b049:	00 00                	add    BYTE PTR [rax],al
    b04b:	03 01                	add    eax,DWORD PTR [rcx]
    b04d:	55                   	push   rbp
    b04e:	09 03                	or     DWORD PTR [rbx],eax
    b050:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    b053:	00 00                	add    BYTE PTR [rax],al
    b055:	00 00                	add    BYTE PTR [rax],al
    b057:	00 03                	add    BYTE PTR [rbx],al
    b059:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b05d:	b2 41                	mov    dl,0x41
    b05f:	00 00                	add    BYTE PTR [rax],al
    b061:	00 00                	add    BYTE PTR [rax],al
    b063:	00 00                	add    BYTE PTR [rax],al
    b065:	00 0a                	add    BYTE PTR [rdx],cl
    b067:	b2 33                	mov    dl,0x33
    b069:	00 00                	add    BYTE PTR [rax],al
    b06b:	00 00                	add    BYTE PTR [rax],al
    b06d:	00 00                	add    BYTE PTR [rax],al
    b06f:	95                   	xchg   ebp,eax
    b070:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b073:	19 5c 00 00          	sbb    DWORD PTR [rax+rax*1+0x0],ebx
    b077:	03 01                	add    eax,DWORD PTR [rcx]
    b079:	55                   	push   rbp
    b07a:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b07d:	03 01                	add    eax,DWORD PTR [rcx]
    b07f:	58                   	pop    rax
    b080:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b083:	03 01                	add    eax,DWORD PTR [rcx]
    b085:	59                   	pop    rcx
    b086:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b08b:	04 00                	add    al,0x0
    b08d:	07                   	(bad)
    b08e:	ba 33 00 00 00       	mov    edx,0x33
    b093:	00 00                	add    BYTE PTR [rax],al
    b095:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    b098:	00 00                	add    BYTE PTR [rax],al
    b09a:	03 01                	add    eax,DWORD PTR [rcx]
    b09c:	55                   	push   rbp
    b09d:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b0a0:	00 00                	add    BYTE PTR [rax],al
    b0a2:	19 a6 73 00 00 ba    	sbb    DWORD PTR [rsi-0x45ffff8d],esp
    b0a8:	33 00                	xor    eax,DWORD PTR [rax]
    b0aa:	00 00                	add    BYTE PTR [rax],al
    b0ac:	00 00                	add    BYTE PTR [rax],al
    b0ae:	00 02                	add    BYTE PTR [rdx],al
    b0b0:	00 ba 33 00 00 00    	add    BYTE PTR [rdx+0x33],bh
    b0b6:	00 00                	add    BYTE PTR [rax],al
    b0b8:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b0bb:	00 00                	add    BYTE PTR [rax],al
    b0bd:	00 00                	add    BYTE PTR [rax],al
    b0bf:	00 00                	add    BYTE PTR [rax],al
    b0c1:	01 20                	add    DWORD PTR [rax],esp
    b0c3:	34 05                	xor    al,0x5
    b0c5:	b4 73                	mov    ah,0x73
    b0c7:	00 00                	add    BYTE PTR [rax],al
    b0c9:	d0 23                	shl    BYTE PTR [rbx],1
    b0cb:	00 00                	add    BYTE PTR [rax],al
    b0cd:	ce                   	(bad)
    b0ce:	23 00                	and    eax,DWORD PTR [rax]
    b0d0:	00 07                	add    BYTE PTR [rdi],al
    b0d2:	c6                   	(bad)
    b0d3:	33 00                	xor    eax,DWORD PTR [rax]
    b0d5:	00 00                	add    BYTE PTR [rax],al
    b0d7:	00 00                	add    BYTE PTR [rax],al
    b0d9:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b0dc:	00 00                	add    BYTE PTR [rax],al
    b0de:	03 01                	add    eax,DWORD PTR [rcx]
    b0e0:	55                   	push   rbp
    b0e1:	09 03                	or     DWORD PTR [rbx],eax
    b0e3:	58                   	pop    rax
    b0e4:	45 00 00             	add    BYTE PTR [r8],r8b
    b0e7:	00 00                	add    BYTE PTR [rax],al
    b0e9:	00 00                	add    BYTE PTR [rax],al
    b0eb:	00 00                	add    BYTE PTR [rax],al
    b0ed:	00 16                	add    BYTE PTR [rsi],dl
    b0ef:	e0 32                	loopne b123 <_end+0x510b>
    b0f1:	00 00                	add    BYTE PTR [rax],al
    b0f3:	00 00                	add    BYTE PTR [rax],al
    b0f5:	00 00                	add    BYTE PTR [rax],al
    b0f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    b0f8:	00 00                	add    BYTE PTR [rax],al
    b0fa:	00 00                	add    BYTE PTR [rax],al
    b0fc:	00 00                	add    BYTE PTR [rax],al
    b0fe:	00 93 5e 00 00 17    	add    BYTE PTR [rbx+0x1700005e],dl
    b104:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    b105:	34 00                	xor    al,0x0
    b107:	00 21                	add    BYTE PTR [rcx],ah
    b109:	34 23                	xor    al,0x23
    b10b:	42 00 00             	rex.X add BYTE PTR [rax],al
    b10e:	09 a6 73 00 00 e0    	or     DWORD PTR [rsi-0x1fffff8d],esp
    b114:	32 00                	xor    al,BYTE PTR [rax]
    b116:	00 00                	add    BYTE PTR [rax],al
    b118:	00 00                	add    BYTE PTR [rax],al
    b11a:	00 02                	add    BYTE PTR [rdx],al
    b11c:	00 e0                	add    al,ah
    b11e:	32 00                	xor    al,BYTE PTR [rax]
    b120:	00 00                	add    BYTE PTR [rax],al
    b122:	00 00                	add    BYTE PTR [rax],al
    b124:	00 0f                	add    BYTE PTR [rdi],cl
    b126:	00 00                	add    BYTE PTR [rax],al
    b128:	00 00                	add    BYTE PTR [rax],al
    b12a:	00 00                	add    BYTE PTR [rax],al
    b12c:	00 21                	add    BYTE PTR [rcx],ah
    b12e:	34 e8                	xor    al,0xe8
    b130:	5c                   	pop    rsp
    b131:	00 00                	add    BYTE PTR [rax],al
    b133:	05 b4 73 00 00       	add    eax,0x73b4
    b138:	df 23                	fbld   TBYTE PTR [rbx]
    b13a:	00 00                	add    BYTE PTR [rax],al
    b13c:	dd 23                	frstor [rbx]
    b13e:	00 00                	add    BYTE PTR [rax],al
    b140:	07                   	(bad)
    b141:	ef                   	out    dx,eax
    b142:	32 00                	xor    al,BYTE PTR [rax]
    b144:	00 00                	add    BYTE PTR [rax],al
    b146:	00 00                	add    BYTE PTR [rax],al
    b148:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b14b:	00 00                	add    BYTE PTR [rax],al
    b14d:	03 01                	add    eax,DWORD PTR [rcx]
    b14f:	55                   	push   rbp
    b150:	09 03                	or     DWORD PTR [rbx],eax
    b152:	f0 44 00 00          	lock add BYTE PTR [rax],r8b
    b156:	00 00                	add    BYTE PTR [rax],al
    b158:	00 00                	add    BYTE PTR [rax],al
    b15a:	00 00                	add    BYTE PTR [rax],al
    b15c:	09 a6 73 00 00 ef    	or     DWORD PTR [rsi-0x10ffff8d],esp
    b162:	32 00                	xor    al,BYTE PTR [rax]
    b164:	00 00                	add    BYTE PTR [rax],al
    b166:	00 00                	add    BYTE PTR [rax],al
    b168:	00 02                	add    BYTE PTR [rdx],al
    b16a:	00 ef                	add    bh,ch
    b16c:	32 00                	xor    al,BYTE PTR [rax]
    b16e:	00 00                	add    BYTE PTR [rax],al
    b170:	00 00                	add    BYTE PTR [rax],al
    b172:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b175:	00 00                	add    BYTE PTR [rax],al
    b177:	00 00                	add    BYTE PTR [rax],al
    b179:	00 00                	add    BYTE PTR [rax],al
    b17b:	21 34 36             	and    DWORD PTR [rsi+rsi*1],esi
    b17e:	5d                   	pop    rbp
    b17f:	00 00                	add    BYTE PTR [rax],al
    b181:	05 b4 73 00 00       	add    eax,0x73b4
    b186:	ee                   	out    dx,al
    b187:	23 00                	and    eax,DWORD PTR [rax]
    b189:	00 ec                	add    ah,ch
    b18b:	23 00                	and    eax,DWORD PTR [rax]
    b18d:	00 07                	add    BYTE PTR [rdi],al
    b18f:	fb                   	sti
    b190:	32 00                	xor    al,BYTE PTR [rax]
    b192:	00 00                	add    BYTE PTR [rax],al
    b194:	00 00                	add    BYTE PTR [rax],al
    b196:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b199:	00 00                	add    BYTE PTR [rax],al
    b19b:	03 01                	add    eax,DWORD PTR [rcx]
    b19d:	55                   	push   rbp
    b19e:	09 03                	or     DWORD PTR [rbx],eax
    b1a0:	f9                   	stc
    b1a1:	41 00 00             	add    BYTE PTR [r8],al
    b1a4:	00 00                	add    BYTE PTR [rax],al
    b1a6:	00 00                	add    BYTE PTR [rax],al
    b1a8:	00 00                	add    BYTE PTR [rax],al
    b1aa:	09 a6 73 00 00 fb    	or     DWORD PTR [rsi-0x4ffff8d],esp
    b1b0:	32 00                	xor    al,BYTE PTR [rax]
    b1b2:	00 00                	add    BYTE PTR [rax],al
    b1b4:	00 00                	add    BYTE PTR [rax],al
    b1b6:	00 02                	add    BYTE PTR [rdx],al
    b1b8:	00 fb                	add    bl,bh
    b1ba:	32 00                	xor    al,BYTE PTR [rax]
    b1bc:	00 00                	add    BYTE PTR [rax],al
    b1be:	00 00                	add    BYTE PTR [rax],al
    b1c0:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b1c3:	00 00                	add    BYTE PTR [rax],al
    b1c5:	00 00                	add    BYTE PTR [rax],al
    b1c7:	00 00                	add    BYTE PTR [rax],al
    b1c9:	21 34 84             	and    DWORD PTR [rsp+rax*4],esi
    b1cc:	5d                   	pop    rbp
    b1cd:	00 00                	add    BYTE PTR [rax],al
    b1cf:	05 b4 73 00 00       	add    eax,0x73b4
    b1d4:	fd                   	std
    b1d5:	23 00                	and    eax,DWORD PTR [rax]
    b1d7:	00 fb                	add    bl,bh
    b1d9:	23 00                	and    eax,DWORD PTR [rax]
    b1db:	00 07                	add    BYTE PTR [rdi],al
    b1dd:	07                   	(bad)
    b1de:	33 00                	xor    eax,DWORD PTR [rax]
    b1e0:	00 00                	add    BYTE PTR [rax],al
    b1e2:	00 00                	add    BYTE PTR [rax],al
    b1e4:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b1e7:	00 00                	add    BYTE PTR [rax],al
    b1e9:	03 01                	add    eax,DWORD PTR [rcx]
    b1eb:	55                   	push   rbp
    b1ec:	09 03                	or     DWORD PTR [rbx],eax
    b1ee:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    b1f1:	00 00                	add    BYTE PTR [rax],al
    b1f3:	00 00                	add    BYTE PTR [rax],al
    b1f5:	00 00                	add    BYTE PTR [rax],al
    b1f7:	00 09                	add    BYTE PTR [rcx],cl
    b1f9:	f5                   	cmc
    b1fa:	52                   	push   rdx
    b1fb:	00 00                	add    BYTE PTR [rax],al
    b1fd:	07                   	(bad)
    b1fe:	33 00                	xor    eax,DWORD PTR [rax]
    b200:	00 00                	add    BYTE PTR [rax],al
    b202:	00 00                	add    BYTE PTR [rax],al
    b204:	00 03                	add    BYTE PTR [rbx],al
    b206:	00 07                	add    BYTE PTR [rdi],al
    b208:	33 00                	xor    eax,DWORD PTR [rax]
    b20a:	00 00                	add    BYTE PTR [rax],al
    b20c:	00 00                	add    BYTE PTR [rax],al
    b20e:	00 3b                	add    BYTE PTR [rbx],bh
    b210:	00 00                	add    BYTE PTR [rax],al
    b212:	00 00                	add    BYTE PTR [rax],al
    b214:	00 00                	add    BYTE PTR [rax],al
    b216:	00 21                	add    BYTE PTR [rcx],ah
    b218:	34 47                	xor    al,0x47
    b21a:	5e                   	pop    rsi
    b21b:	00 00                	add    BYTE PTR [rax],al
    b21d:	05 37 53 00 00       	add    eax,0x5337
    b222:	0c 24                	or     al,0x24
    b224:	00 00                	add    BYTE PTR [rax],al
    b226:	0a 24 00             	or     ah,BYTE PTR [rax+rax*1]
    b229:	00 05 2b 53 00 00    	add    BYTE PTR [rip+0x532b],al        # 1055a <_end+0xa542>
    b22f:	18 24 00             	sbb    BYTE PTR [rax+rax*1],ah
    b232:	00 16                	add    BYTE PTR [rsi],dl
    b234:	24 00                	and    al,0x0
    b236:	00 0b                	add    BYTE PTR [rbx],cl
    b238:	1f                   	(bad)
    b239:	53                   	push   rbx
    b23a:	00 00                	add    BYTE PTR [rax],al
    b23c:	0b 13                	or     edx,DWORD PTR [rbx]
    b23e:	53                   	push   rbx
    b23f:	00 00                	add    BYTE PTR [rax],al
    b241:	0b 07                	or     eax,DWORD PTR [rdi]
    b243:	53                   	push   rbx
    b244:	00 00                	add    BYTE PTR [rax],al
    b246:	15 43 53 00 00       	adc    eax,0x5343
    b24b:	24 24                	and    al,0x24
    b24d:	00 00                	add    BYTE PTR [rax],al
    b24f:	20 24 00             	and    BYTE PTR [rax+rax*1],ah
    b252:	00 0a                	add    BYTE PTR [rdx],cl
    b254:	1a 33                	sbb    dh,BYTE PTR [rbx]
    b256:	00 00                	add    BYTE PTR [rax],al
    b258:	00 00                	add    BYTE PTR [rax],al
    b25a:	00 00                	add    BYTE PTR [rax],al
    b25c:	ff                   	(bad)
    b25d:	3c 00                	cmp    al,0x0
    b25f:	00 0b                	add    BYTE PTR [rbx],cl
    b261:	5e                   	pop    rsi
    b262:	00 00                	add    BYTE PTR [rax],al
    b264:	03 01                	add    eax,DWORD PTR [rcx]
    b266:	55                   	push   rbp
    b267:	09 03                	or     DWORD PTR [rbx],eax
    b269:	d0 45 00             	rol    BYTE PTR [rbp+0x0],1
    b26c:	00 00                	add    BYTE PTR [rax],al
    b26e:	00 00                	add    BYTE PTR [rax],al
    b270:	00 03                	add    BYTE PTR [rbx],al
    b272:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b276:	b2 41                	mov    dl,0x41
    b278:	00 00                	add    BYTE PTR [rax],al
    b27a:	00 00                	add    BYTE PTR [rax],al
    b27c:	00 00                	add    BYTE PTR [rax],al
    b27e:	00 0a                	add    BYTE PTR [rdx],cl
    b280:	3a 33                	cmp    dh,BYTE PTR [rbx]
    b282:	00 00                	add    BYTE PTR [rax],al
    b284:	00 00                	add    BYTE PTR [rax],al
    b286:	00 00                	add    BYTE PTR [rax],al
    b288:	95                   	xchg   ebp,eax
    b289:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b28c:	32 5e 00             	xor    bl,BYTE PTR [rsi+0x0]
    b28f:	00 03                	add    BYTE PTR [rbx],al
    b291:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b294:	7f 00                	jg     b296 <_end+0x527e>
    b296:	03 01                	add    eax,DWORD PTR [rcx]
    b298:	58                   	pop    rax
    b299:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b29c:	03 01                	add    eax,DWORD PTR [rcx]
    b29e:	59                   	pop    rcx
    b29f:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b2a4:	04 00                	add    al,0x0
    b2a6:	07                   	(bad)
    b2a7:	42 33 00             	rex.X xor eax,DWORD PTR [rax]
    b2aa:	00 00                	add    BYTE PTR [rax],al
    b2ac:	00 00                	add    BYTE PTR [rax],al
    b2ae:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    b2b1:	00 00                	add    BYTE PTR [rax],al
    b2b3:	03 01                	add    eax,DWORD PTR [rcx]
    b2b5:	55                   	push   rbp
    b2b6:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b2b9:	00 00                	add    BYTE PTR [rax],al
    b2bb:	19 a6 73 00 00 42    	sbb    DWORD PTR [rsi+0x42000073],esp
    b2c1:	33 00                	xor    eax,DWORD PTR [rax]
    b2c3:	00 00                	add    BYTE PTR [rax],al
    b2c5:	00 00                	add    BYTE PTR [rax],al
    b2c7:	00 02                	add    BYTE PTR [rdx],al
    b2c9:	00 42 33             	add    BYTE PTR [rdx+0x33],al
    b2cc:	00 00                	add    BYTE PTR [rax],al
    b2ce:	00 00                	add    BYTE PTR [rax],al
    b2d0:	00 00                	add    BYTE PTR [rax],al
    b2d2:	0c 00                	or     al,0x0
    b2d4:	00 00                	add    BYTE PTR [rax],al
    b2d6:	00 00                	add    BYTE PTR [rax],al
    b2d8:	00 00                	add    BYTE PTR [rax],al
    b2da:	01 21                	add    DWORD PTR [rcx],esp
    b2dc:	34 05                	xor    al,0x5
    b2de:	b4 73                	mov    ah,0x73
    b2e0:	00 00                	add    BYTE PTR [rax],al
    b2e2:	35 24 00 00 33       	xor    eax,0x33000024
    b2e7:	24 00                	and    al,0x0
    b2e9:	00 07                	add    BYTE PTR [rdi],al
    b2eb:	4e 33 00             	rex.WRX xor r8,QWORD PTR [rax]
    b2ee:	00 00                	add    BYTE PTR [rax],al
    b2f0:	00 00                	add    BYTE PTR [rax],al
    b2f2:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b2f5:	00 00                	add    BYTE PTR [rax],al
    b2f7:	03 01                	add    eax,DWORD PTR [rcx]
    b2f9:	55                   	push   rbp
    b2fa:	09 03                	or     DWORD PTR [rbx],eax
    b2fc:	58                   	pop    rax
    b2fd:	45 00 00             	add    BYTE PTR [r8],r8b
    b300:	00 00                	add    BYTE PTR [rax],al
    b302:	00 00                	add    BYTE PTR [rax],al
    b304:	00 00                	add    BYTE PTR [rax],al
    b306:	00 16                	add    BYTE PTR [rsi],dl
    b308:	68 32 00 00 00       	push   0x32
    b30d:	00 00                	add    BYTE PTR [rax],al
    b30f:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    b312:	00 00                	add    BYTE PTR [rax],al
    b314:	00 00                	add    BYTE PTR [rax],al
    b316:	00 00                	add    BYTE PTR [rax],al
    b318:	ac                   	lods   al,BYTE PTR ds:[rsi]
    b319:	60                   	(bad)
    b31a:	00 00                	add    BYTE PTR [rax],al
    b31c:	17                   	(bad)
    b31d:	cd 12                	int    0x12
    b31f:	00 00                	add    BYTE PTR [rax],al
    b321:	22 34 23             	and    dh,BYTE PTR [rbx+riz*1]
    b324:	42 00 00             	rex.X add BYTE PTR [rax],al
    b327:	09 a6 73 00 00 68    	or     DWORD PTR [rsi+0x68000073],esp
    b32d:	32 00                	xor    al,BYTE PTR [rax]
    b32f:	00 00                	add    BYTE PTR [rax],al
    b331:	00 00                	add    BYTE PTR [rax],al
    b333:	00 02                	add    BYTE PTR [rdx],al
    b335:	00 68 32             	add    BYTE PTR [rax+0x32],ch
    b338:	00 00                	add    BYTE PTR [rax],al
    b33a:	00 00                	add    BYTE PTR [rax],al
    b33c:	00 00                	add    BYTE PTR [rax],al
    b33e:	0f 00 00             	sldt   WORD PTR [rax]
    b341:	00 00                	add    BYTE PTR [rax],al
    b343:	00 00                	add    BYTE PTR [rax],al
    b345:	00 22                	add    BYTE PTR [rdx],ah
    b347:	34 01                	xor    al,0x1
    b349:	5f                   	pop    rdi
    b34a:	00 00                	add    BYTE PTR [rax],al
    b34c:	05 b4 73 00 00       	add    eax,0x73b4
    b351:	44 24 00             	rex.R and al,0x0
    b354:	00 42 24             	add    BYTE PTR [rdx+0x24],al
    b357:	00 00                	add    BYTE PTR [rax],al
    b359:	07                   	(bad)
    b35a:	77 32                	ja     b38e <_end+0x5376>
    b35c:	00 00                	add    BYTE PTR [rax],al
    b35e:	00 00                	add    BYTE PTR [rax],al
    b360:	00 00                	add    BYTE PTR [rax],al
    b362:	7a 77                	jp     b3db <_end+0x53c3>
    b364:	00 00                	add    BYTE PTR [rax],al
    b366:	03 01                	add    eax,DWORD PTR [rcx]
    b368:	55                   	push   rbp
    b369:	09 03                	or     DWORD PTR [rbx],eax
    b36b:	f0 44 00 00          	lock add BYTE PTR [rax],r8b
    b36f:	00 00                	add    BYTE PTR [rax],al
    b371:	00 00                	add    BYTE PTR [rax],al
    b373:	00 00                	add    BYTE PTR [rax],al
    b375:	09 a6 73 00 00 77    	or     DWORD PTR [rsi+0x77000073],esp
    b37b:	32 00                	xor    al,BYTE PTR [rax]
    b37d:	00 00                	add    BYTE PTR [rax],al
    b37f:	00 00                	add    BYTE PTR [rax],al
    b381:	00 02                	add    BYTE PTR [rdx],al
    b383:	00 77 32             	add    BYTE PTR [rdi+0x32],dh
    b386:	00 00                	add    BYTE PTR [rax],al
    b388:	00 00                	add    BYTE PTR [rax],al
    b38a:	00 00                	add    BYTE PTR [rax],al
    b38c:	0c 00                	or     al,0x0
    b38e:	00 00                	add    BYTE PTR [rax],al
    b390:	00 00                	add    BYTE PTR [rax],al
    b392:	00 00                	add    BYTE PTR [rax],al
    b394:	22 34 4f             	and    dh,BYTE PTR [rdi+rcx*2]
    b397:	5f                   	pop    rdi
    b398:	00 00                	add    BYTE PTR [rax],al
    b39a:	05 b4 73 00 00       	add    eax,0x73b4
    b39f:	53                   	push   rbx
    b3a0:	24 00                	and    al,0x0
    b3a2:	00 51 24             	add    BYTE PTR [rcx+0x24],dl
    b3a5:	00 00                	add    BYTE PTR [rax],al
    b3a7:	07                   	(bad)
    b3a8:	83 32 00             	xor    DWORD PTR [rdx],0x0
    b3ab:	00 00                	add    BYTE PTR [rax],al
    b3ad:	00 00                	add    BYTE PTR [rax],al
    b3af:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b3b2:	00 00                	add    BYTE PTR [rax],al
    b3b4:	03 01                	add    eax,DWORD PTR [rcx]
    b3b6:	55                   	push   rbp
    b3b7:	09 03                	or     DWORD PTR [rbx],eax
    b3b9:	01 42 00             	add    DWORD PTR [rdx+0x0],eax
    b3bc:	00 00                	add    BYTE PTR [rax],al
    b3be:	00 00                	add    BYTE PTR [rax],al
    b3c0:	00 00                	add    BYTE PTR [rax],al
    b3c2:	00 09                	add    BYTE PTR [rcx],cl
    b3c4:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    b3c5:	73 00                	jae    b3c7 <_end+0x53af>
    b3c7:	00 83 32 00 00 00    	add    BYTE PTR [rbx+0x32],al
    b3cd:	00 00                	add    BYTE PTR [rax],al
    b3cf:	00 02                	add    BYTE PTR [rdx],al
    b3d1:	00 83 32 00 00 00    	add    BYTE PTR [rbx+0x32],al
    b3d7:	00 00                	add    BYTE PTR [rax],al
    b3d9:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b3dc:	00 00                	add    BYTE PTR [rax],al
    b3de:	00 00                	add    BYTE PTR [rax],al
    b3e0:	00 00                	add    BYTE PTR [rax],al
    b3e2:	22 34 9d 5f 00 00 05 	and    dh,BYTE PTR [rbx*4+0x500005f]
    b3e9:	b4 73                	mov    ah,0x73
    b3eb:	00 00                	add    BYTE PTR [rax],al
    b3ed:	62 24 00             	(bad)
    b3f0:	00 60 24             	add    BYTE PTR [rax+0x24],ah
    b3f3:	00 00                	add    BYTE PTR [rax],al
    b3f5:	07                   	(bad)
    b3f6:	8f                   	(bad)
    b3f7:	32 00                	xor    al,BYTE PTR [rax]
    b3f9:	00 00                	add    BYTE PTR [rax],al
    b3fb:	00 00                	add    BYTE PTR [rax],al
    b3fd:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b400:	00 00                	add    BYTE PTR [rax],al
    b402:	03 01                	add    eax,DWORD PTR [rcx]
    b404:	55                   	push   rbp
    b405:	09 03                	or     DWORD PTR [rbx],eax
    b407:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    b40a:	00 00                	add    BYTE PTR [rax],al
    b40c:	00 00                	add    BYTE PTR [rax],al
    b40e:	00 00                	add    BYTE PTR [rax],al
    b410:	00 09                	add    BYTE PTR [rcx],cl
    b412:	f5                   	cmc
    b413:	52                   	push   rdx
    b414:	00 00                	add    BYTE PTR [rax],al
    b416:	8f                   	(bad)
    b417:	32 00                	xor    al,BYTE PTR [rax]
    b419:	00 00                	add    BYTE PTR [rax],al
    b41b:	00 00                	add    BYTE PTR [rax],al
    b41d:	00 03                	add    BYTE PTR [rbx],al
    b41f:	00 8f 32 00 00 00    	add    BYTE PTR [rdi+0x32],cl
    b425:	00 00                	add    BYTE PTR [rax],al
    b427:	00 3b                	add    BYTE PTR [rbx],bh
    b429:	00 00                	add    BYTE PTR [rax],al
    b42b:	00 00                	add    BYTE PTR [rax],al
    b42d:	00 00                	add    BYTE PTR [rax],al
    b42f:	00 22                	add    BYTE PTR [rdx],ah
    b431:	34 60                	xor    al,0x60
    b433:	60                   	(bad)
    b434:	00 00                	add    BYTE PTR [rax],al
    b436:	05 37 53 00 00       	add    eax,0x5337
    b43b:	71 24                	jno    b461 <_end+0x5449>
    b43d:	00 00                	add    BYTE PTR [rax],al
    b43f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    b440:	24 00                	and    al,0x0
    b442:	00 05 2b 53 00 00    	add    BYTE PTR [rip+0x532b],al        # 10773 <_end+0xa75b>
    b448:	7d 24                	jge    b46e <_end+0x5456>
    b44a:	00 00                	add    BYTE PTR [rax],al
    b44c:	7b 24                	jnp    b472 <_end+0x545a>
    b44e:	00 00                	add    BYTE PTR [rax],al
    b450:	0b 1f                	or     ebx,DWORD PTR [rdi]
    b452:	53                   	push   rbx
    b453:	00 00                	add    BYTE PTR [rax],al
    b455:	0b 13                	or     edx,DWORD PTR [rbx]
    b457:	53                   	push   rbx
    b458:	00 00                	add    BYTE PTR [rax],al
    b45a:	0b 07                	or     eax,DWORD PTR [rdi]
    b45c:	53                   	push   rbx
    b45d:	00 00                	add    BYTE PTR [rax],al
    b45f:	15 43 53 00 00       	adc    eax,0x5343
    b464:	89 24 00             	mov    DWORD PTR [rax+rax*1],esp
    b467:	00 85 24 00 00 0a    	add    BYTE PTR [rbp+0xa000024],al
    b46d:	a2 32 00 00 00 00 00 	movabs ds:0xff00000000000032,al
    b474:	00 ff 
    b476:	3c 00                	cmp    al,0x0
    b478:	00 24 60             	add    BYTE PTR [rax+riz*2],ah
    b47b:	00 00                	add    BYTE PTR [rax],al
    b47d:	03 01                	add    eax,DWORD PTR [rcx]
    b47f:	55                   	push   rbp
    b480:	09 03                	or     DWORD PTR [rbx],eax
    b482:	05 42 00 00 00       	add    eax,0x42
    b487:	00 00                	add    BYTE PTR [rax],al
    b489:	00 03                	add    BYTE PTR [rbx],al
    b48b:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b48f:	b2 41                	mov    dl,0x41
    b491:	00 00                	add    BYTE PTR [rax],al
    b493:	00 00                	add    BYTE PTR [rax],al
    b495:	00 00                	add    BYTE PTR [rax],al
    b497:	00 0a                	add    BYTE PTR [rdx],cl
    b499:	c2 32 00             	ret    0x32
    b49c:	00 00                	add    BYTE PTR [rax],al
    b49e:	00 00                	add    BYTE PTR [rax],al
    b4a0:	00 95 46 00 00 4b    	add    BYTE PTR [rbp+0x4b000046],dl
    b4a6:	60                   	(bad)
    b4a7:	00 00                	add    BYTE PTR [rax],al
    b4a9:	03 01                	add    eax,DWORD PTR [rcx]
    b4ab:	55                   	push   rbp
    b4ac:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b4af:	03 01                	add    eax,DWORD PTR [rcx]
    b4b1:	58                   	pop    rax
    b4b2:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b4b5:	03 01                	add    eax,DWORD PTR [rcx]
    b4b7:	59                   	pop    rcx
    b4b8:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b4bd:	04 00                	add    al,0x0
    b4bf:	07                   	(bad)
    b4c0:	ca 32 00             	retf   0x32
    b4c3:	00 00                	add    BYTE PTR [rax],al
    b4c5:	00 00                	add    BYTE PTR [rax],al
    b4c7:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    b4ca:	00 00                	add    BYTE PTR [rax],al
    b4cc:	03 01                	add    eax,DWORD PTR [rcx]
    b4ce:	55                   	push   rbp
    b4cf:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b4d2:	00 00                	add    BYTE PTR [rax],al
    b4d4:	19 a6 73 00 00 ca    	sbb    DWORD PTR [rsi-0x35ffff8d],esp
    b4da:	32 00                	xor    al,BYTE PTR [rax]
    b4dc:	00 00                	add    BYTE PTR [rax],al
    b4de:	00 00                	add    BYTE PTR [rax],al
    b4e0:	00 02                	add    BYTE PTR [rdx],al
    b4e2:	00 ca                	add    dl,cl
    b4e4:	32 00                	xor    al,BYTE PTR [rax]
    b4e6:	00 00                	add    BYTE PTR [rax],al
    b4e8:	00 00                	add    BYTE PTR [rax],al
    b4ea:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b4ed:	00 00                	add    BYTE PTR [rax],al
    b4ef:	00 00                	add    BYTE PTR [rax],al
    b4f1:	00 00                	add    BYTE PTR [rax],al
    b4f3:	01 22                	add    DWORD PTR [rdx],esp
    b4f5:	34 05                	xor    al,0x5
    b4f7:	b4 73                	mov    ah,0x73
    b4f9:	00 00                	add    BYTE PTR [rax],al
    b4fb:	9a                   	(bad)
    b4fc:	24 00                	and    al,0x0
    b4fe:	00 98 24 00 00 07    	add    BYTE PTR [rax+0x7000024],bl
    b504:	d6                   	(bad)
    b505:	32 00                	xor    al,BYTE PTR [rax]
    b507:	00 00                	add    BYTE PTR [rax],al
    b509:	00 00                	add    BYTE PTR [rax],al
    b50b:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b50e:	00 00                	add    BYTE PTR [rax],al
    b510:	03 01                	add    eax,DWORD PTR [rcx]
    b512:	55                   	push   rbp
    b513:	09 03                	or     DWORD PTR [rbx],eax
    b515:	58                   	pop    rax
    b516:	45 00 00             	add    BYTE PTR [r8],r8b
    b519:	00 00                	add    BYTE PTR [rax],al
    b51b:	00 00                	add    BYTE PTR [rax],al
    b51d:	00 00                	add    BYTE PTR [rax],al
    b51f:	00 16                	add    BYTE PTR [rsi],dl
    b521:	f0 31 00             	lock xor DWORD PTR [rax],eax
    b524:	00 00                	add    BYTE PTR [rax],al
    b526:	00 00                	add    BYTE PTR [rax],al
    b528:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    b52b:	00 00                	add    BYTE PTR [rax],al
    b52d:	00 00                	add    BYTE PTR [rax],al
    b52f:	00 00                	add    BYTE PTR [rax],al
    b531:	c2 62 00             	ret    0x62
    b534:	00 17                	add    BYTE PTR [rdi],dl
    b536:	53                   	push   rbx
    b537:	18 00                	sbb    BYTE PTR [rax],al
    b539:	00 23                	add    BYTE PTR [rbx],ah
    b53b:	34 23                	xor    al,0x23
    b53d:	42 00 00             	rex.X add BYTE PTR [rax],al
    b540:	09 a6 73 00 00 f0    	or     DWORD PTR [rsi-0xfffff8d],esp
    b546:	31 00                	xor    DWORD PTR [rax],eax
    b548:	00 00                	add    BYTE PTR [rax],al
    b54a:	00 00                	add    BYTE PTR [rax],al
    b54c:	00 02                	add    BYTE PTR [rdx],al
    b54e:	00 f0                	add    al,dh
    b550:	31 00                	xor    DWORD PTR [rax],eax
    b552:	00 00                	add    BYTE PTR [rax],al
    b554:	00 00                	add    BYTE PTR [rax],al
    b556:	00 0f                	add    BYTE PTR [rdi],cl
    b558:	00 00                	add    BYTE PTR [rax],al
    b55a:	00 00                	add    BYTE PTR [rax],al
    b55c:	00 00                	add    BYTE PTR [rax],al
    b55e:	00 23                	add    BYTE PTR [rbx],ah
    b560:	34 1a                	xor    al,0x1a
    b562:	61                   	(bad)
    b563:	00 00                	add    BYTE PTR [rax],al
    b565:	05 b4 73 00 00       	add    eax,0x73b4
    b56a:	a9 24 00 00 a7       	test   eax,0xa7000024
    b56f:	24 00                	and    al,0x0
    b571:	00 07                	add    BYTE PTR [rdi],al
    b573:	ff 31                	push   QWORD PTR [rcx]
    b575:	00 00                	add    BYTE PTR [rax],al
    b577:	00 00                	add    BYTE PTR [rax],al
    b579:	00 00                	add    BYTE PTR [rax],al
    b57b:	7a 77                	jp     b5f4 <_end+0x55dc>
    b57d:	00 00                	add    BYTE PTR [rax],al
    b57f:	03 01                	add    eax,DWORD PTR [rcx]
    b581:	55                   	push   rbp
    b582:	09 03                	or     DWORD PTR [rbx],eax
    b584:	f0 44 00 00          	lock add BYTE PTR [rax],r8b
    b588:	00 00                	add    BYTE PTR [rax],al
    b58a:	00 00                	add    BYTE PTR [rax],al
    b58c:	00 00                	add    BYTE PTR [rax],al
    b58e:	09 a6 73 00 00 ff    	or     DWORD PTR [rsi-0xffff8d],esp
    b594:	31 00                	xor    DWORD PTR [rax],eax
    b596:	00 00                	add    BYTE PTR [rax],al
    b598:	00 00                	add    BYTE PTR [rax],al
    b59a:	00 02                	add    BYTE PTR [rdx],al
    b59c:	00 ff                	add    bh,bh
    b59e:	31 00                	xor    DWORD PTR [rax],eax
    b5a0:	00 00                	add    BYTE PTR [rax],al
    b5a2:	00 00                	add    BYTE PTR [rax],al
    b5a4:	00 08                	add    BYTE PTR [rax],cl
    b5a6:	00 00                	add    BYTE PTR [rax],al
    b5a8:	00 00                	add    BYTE PTR [rax],al
    b5aa:	00 00                	add    BYTE PTR [rax],al
    b5ac:	00 23                	add    BYTE PTR [rbx],ah
    b5ae:	34 61                	xor    al,0x61
    b5b0:	61                   	(bad)
    b5b1:	00 00                	add    BYTE PTR [rax],al
    b5b3:	05 b4 73 00 00       	add    eax,0x73b4
    b5b8:	b8 24 00 00 b6       	mov    eax,0xb6000024
    b5bd:	24 00                	and    al,0x0
    b5bf:	00 07                	add    BYTE PTR [rdi],al
    b5c1:	07                   	(bad)
    b5c2:	32 00                	xor    al,BYTE PTR [rax]
    b5c4:	00 00                	add    BYTE PTR [rax],al
    b5c6:	00 00                	add    BYTE PTR [rax],al
    b5c8:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b5cb:	00 00                	add    BYTE PTR [rax],al
    b5cd:	03 01                	add    eax,DWORD PTR [rcx]
    b5cf:	55                   	push   rbp
    b5d0:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    b5d3:	00 00                	add    BYTE PTR [rax],al
    b5d5:	09 a6 73 00 00 07    	or     DWORD PTR [rsi+0x7000073],esp
    b5db:	32 00                	xor    al,BYTE PTR [rax]
    b5dd:	00 00                	add    BYTE PTR [rax],al
    b5df:	00 00                	add    BYTE PTR [rax],al
    b5e1:	00 02                	add    BYTE PTR [rdx],al
    b5e3:	00 07                	add    BYTE PTR [rdi],al
    b5e5:	32 00                	xor    al,BYTE PTR [rax]
    b5e7:	00 00                	add    BYTE PTR [rax],al
    b5e9:	00 00                	add    BYTE PTR [rax],al
    b5eb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b5ee:	00 00                	add    BYTE PTR [rax],al
    b5f0:	00 00                	add    BYTE PTR [rax],al
    b5f2:	00 00                	add    BYTE PTR [rax],al
    b5f4:	23 34 af             	and    esi,DWORD PTR [rdi+rbp*4]
    b5f7:	61                   	(bad)
    b5f8:	00 00                	add    BYTE PTR [rax],al
    b5fa:	05 b4 73 00 00       	add    eax,0x73b4
    b5ff:	c7                   	(bad)
    b600:	24 00                	and    al,0x0
    b602:	00 c5                	add    ch,al
    b604:	24 00                	and    al,0x0
    b606:	00 07                	add    BYTE PTR [rdi],al
    b608:	13 32                	adc    esi,DWORD PTR [rdx]
    b60a:	00 00                	add    BYTE PTR [rax],al
    b60c:	00 00                	add    BYTE PTR [rax],al
    b60e:	00 00                	add    BYTE PTR [rax],al
    b610:	7a 77                	jp     b689 <_end+0x5671>
    b612:	00 00                	add    BYTE PTR [rax],al
    b614:	03 01                	add    eax,DWORD PTR [rcx]
    b616:	55                   	push   rbp
    b617:	09 03                	or     DWORD PTR [rbx],eax
    b619:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    b61c:	00 00                	add    BYTE PTR [rax],al
    b61e:	00 00                	add    BYTE PTR [rax],al
    b620:	00 00                	add    BYTE PTR [rax],al
    b622:	00 09                	add    BYTE PTR [rcx],cl
    b624:	f5                   	cmc
    b625:	52                   	push   rdx
    b626:	00 00                	add    BYTE PTR [rax],al
    b628:	13 32                	adc    esi,DWORD PTR [rdx]
    b62a:	00 00                	add    BYTE PTR [rax],al
    b62c:	00 00                	add    BYTE PTR [rax],al
    b62e:	00 00                	add    BYTE PTR [rax],al
    b630:	03 00                	add    eax,DWORD PTR [rax]
    b632:	13 32                	adc    esi,DWORD PTR [rdx]
    b634:	00 00                	add    BYTE PTR [rax],al
    b636:	00 00                	add    BYTE PTR [rax],al
    b638:	00 00                	add    BYTE PTR [rax],al
    b63a:	3f                   	(bad)
    b63b:	00 00                	add    BYTE PTR [rax],al
    b63d:	00 00                	add    BYTE PTR [rax],al
    b63f:	00 00                	add    BYTE PTR [rax],al
    b641:	00 23                	add    BYTE PTR [rbx],ah
    b643:	34 76                	xor    al,0x76
    b645:	62                   	(bad)
    b646:	00 00                	add    BYTE PTR [rax],al
    b648:	05 37 53 00 00       	add    eax,0x5337
    b64d:	d6                   	(bad)
    b64e:	24 00                	and    al,0x0
    b650:	00 d4                	add    ah,dl
    b652:	24 00                	and    al,0x0
    b654:	00 05 2b 53 00 00    	add    BYTE PTR [rip+0x532b],al        # 10985 <_end+0xa96d>
    b65a:	e2 24                	loop   b680 <_end+0x5668>
    b65c:	00 00                	add    BYTE PTR [rax],al
    b65e:	e0 24                	loopne b684 <_end+0x566c>
    b660:	00 00                	add    BYTE PTR [rax],al
    b662:	0b 1f                	or     ebx,DWORD PTR [rdi]
    b664:	53                   	push   rbx
    b665:	00 00                	add    BYTE PTR [rax],al
    b667:	0b 13                	or     edx,DWORD PTR [rbx]
    b669:	53                   	push   rbx
    b66a:	00 00                	add    BYTE PTR [rax],al
    b66c:	0b 07                	or     eax,DWORD PTR [rdi]
    b66e:	53                   	push   rbx
    b66f:	00 00                	add    BYTE PTR [rax],al
    b671:	15 43 53 00 00       	adc    eax,0x5343
    b676:	ee                   	out    dx,al
    b677:	24 00                	and    al,0x0
    b679:	00 ea                	add    dl,ch
    b67b:	24 00                	and    al,0x0
    b67d:	00 0a                	add    BYTE PTR [rdx],cl
    b67f:	26 32 00             	es xor al,BYTE PTR [rax]
    b682:	00 00                	add    BYTE PTR [rax],al
    b684:	00 00                	add    BYTE PTR [rax],al
    b686:	00 ff                	add    bh,bh
    b688:	3c 00                	cmp    al,0x0
    b68a:	00 36                	add    BYTE PTR [rsi],dh
    b68c:	62                   	(bad)
    b68d:	00 00                	add    BYTE PTR [rax],al
    b68f:	03 01                	add    eax,DWORD PTR [rcx]
    b691:	55                   	push   rbp
    b692:	09 03                	or     DWORD PTR [rbx],eax
    b694:	f8                   	clc
    b695:	45 00 00             	add    BYTE PTR [r8],r8b
    b698:	00 00                	add    BYTE PTR [rax],al
    b69a:	00 00                	add    BYTE PTR [rax],al
    b69c:	03 01                	add    eax,DWORD PTR [rcx]
    b69e:	54                   	push   rsp
    b69f:	09 03                	or     DWORD PTR [rbx],eax
    b6a1:	b2 41                	mov    dl,0x41
    b6a3:	00 00                	add    BYTE PTR [rax],al
    b6a5:	00 00                	add    BYTE PTR [rax],al
    b6a7:	00 00                	add    BYTE PTR [rax],al
    b6a9:	00 0a                	add    BYTE PTR [rdx],cl
    b6ab:	48 32 00             	rex.W xor al,BYTE PTR [rax]
    b6ae:	00 00                	add    BYTE PTR [rax],al
    b6b0:	00 00                	add    BYTE PTR [rax],al
    b6b2:	00 95 46 00 00 5f    	add    BYTE PTR [rbp+0x5f000046],dl
    b6b8:	62                   	(bad)
    b6b9:	00 00                	add    BYTE PTR [rax],al
    b6bb:	03 01                	add    eax,DWORD PTR [rcx]
    b6bd:	55                   	push   rbp
    b6be:	04 91                	add    al,0x91
    b6c0:	a8 7f                	test   al,0x7f
    b6c2:	06                   	(bad)
    b6c3:	03 01                	add    eax,DWORD PTR [rcx]
    b6c5:	58                   	pop    rax
    b6c6:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b6c9:	03 01                	add    eax,DWORD PTR [rcx]
    b6cb:	59                   	pop    rcx
    b6cc:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b6d1:	04 00                	add    al,0x0
    b6d3:	07                   	(bad)
    b6d4:	52                   	push   rdx
    b6d5:	32 00                	xor    al,BYTE PTR [rax]
    b6d7:	00 00                	add    BYTE PTR [rax],al
    b6d9:	00 00                	add    BYTE PTR [rax],al
    b6db:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    b6de:	00 00                	add    BYTE PTR [rax],al
    b6e0:	03 01                	add    eax,DWORD PTR [rcx]
    b6e2:	55                   	push   rbp
    b6e3:	04 91                	add    al,0x91
    b6e5:	a8 7f                	test   al,0x7f
    b6e7:	06                   	(bad)
    b6e8:	00 00                	add    BYTE PTR [rax],al
    b6ea:	19 a6 73 00 00 52    	sbb    DWORD PTR [rsi+0x52000073],esp
    b6f0:	32 00                	xor    al,BYTE PTR [rax]
    b6f2:	00 00                	add    BYTE PTR [rax],al
    b6f4:	00 00                	add    BYTE PTR [rax],al
    b6f6:	00 02                	add    BYTE PTR [rdx],al
    b6f8:	00 52 32             	add    BYTE PTR [rdx+0x32],dl
    b6fb:	00 00                	add    BYTE PTR [rax],al
    b6fd:	00 00                	add    BYTE PTR [rax],al
    b6ff:	00 00                	add    BYTE PTR [rax],al
    b701:	0c 00                	or     al,0x0
    b703:	00 00                	add    BYTE PTR [rax],al
    b705:	00 00                	add    BYTE PTR [rax],al
    b707:	00 00                	add    BYTE PTR [rax],al
    b709:	01 23                	add    DWORD PTR [rbx],esp
    b70b:	34 05                	xor    al,0x5
    b70d:	b4 73                	mov    ah,0x73
    b70f:	00 00                	add    BYTE PTR [rax],al
    b711:	01 25 00 00 ff 24    	add    DWORD PTR [rip+0x24ff0000],esp        # 24ffb717 <_end+0x24ff56ff>
    b717:	00 00                	add    BYTE PTR [rax],al
    b719:	07                   	(bad)
    b71a:	5e                   	pop    rsi
    b71b:	32 00                	xor    al,BYTE PTR [rax]
    b71d:	00 00                	add    BYTE PTR [rax],al
    b71f:	00 00                	add    BYTE PTR [rax],al
    b721:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    b724:	00 00                	add    BYTE PTR [rax],al
    b726:	03 01                	add    eax,DWORD PTR [rcx]
    b728:	55                   	push   rbp
    b729:	09 03                	or     DWORD PTR [rbx],eax
    b72b:	58                   	pop    rax
    b72c:	45 00 00             	add    BYTE PTR [r8],r8b
    b72f:	00 00                	add    BYTE PTR [rax],al
    b731:	00 00                	add    BYTE PTR [rax],al
    b733:	00 00                	add    BYTE PTR [rax],al
    b735:	00 16                	add    BYTE PTR [rsi],dl
    b737:	18 2f                	sbb    BYTE PTR [rdi],ch
    b739:	00 00                	add    BYTE PTR [rax],al
    b73b:	00 00                	add    BYTE PTR [rax],al
    b73d:	00 00                	add    BYTE PTR [rax],al
    b73f:	79 00                	jns    b741 <_end+0x5729>
    b741:	00 00                	add    BYTE PTR [rax],al
    b743:	00 00                	add    BYTE PTR [rax],al
    b745:	00 00                	add    BYTE PTR [rax],al
    b747:	b3 64                	mov    bl,0x64
    b749:	00 00                	add    BYTE PTR [rax],al
    b74b:	17                   	(bad)
    b74c:	24 16                	and    al,0x16
    b74e:	00 00                	add    BYTE PTR [rax],al
    b750:	25 09 23 42 00       	and    eax,0x422309
    b755:	00 09                	add    BYTE PTR [rcx],cl
    b757:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    b758:	73 00                	jae    b75a <_end+0x5742>
    b75a:	00 18                	add    BYTE PTR [rax],bl
    b75c:	2f                   	(bad)
    b75d:	00 00                	add    BYTE PTR [rax],al
    b75f:	00 00                	add    BYTE PTR [rax],al
    b761:	00 00                	add    BYTE PTR [rax],al
    b763:	03 00                	add    eax,DWORD PTR [rax]
    b765:	18 2f                	sbb    BYTE PTR [rdi],ch
    b767:	00 00                	add    BYTE PTR [rax],al
    b769:	00 00                	add    BYTE PTR [rax],al
    b76b:	00 00                	add    BYTE PTR [rax],al
    b76d:	0f 00 00             	sldt   WORD PTR [rax]
    b770:	00 00                	add    BYTE PTR [rax],al
    b772:	00 00                	add    BYTE PTR [rax],al
    b774:	00 25 09 29 63 00    	add    BYTE PTR [rip+0x632909],ah        # 63e083 <_end+0x63806b>
    b77a:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 12b34 <_end+0xcb1c>
    b780:	10 25 00 00 0e 25    	adc    BYTE PTR [rip+0x250e0000],ah        # 250eb786 <_end+0x250e576e>
    b786:	00 00                	add    BYTE PTR [rax],al
    b788:	07                   	(bad)
    b789:	27                   	(bad)
    b78a:	2f                   	(bad)
    b78b:	00 00                	add    BYTE PTR [rax],al
    b78d:	00 00                	add    BYTE PTR [rax],al
    b78f:	00 00                	add    BYTE PTR [rax],al
    b791:	7a 77                	jp     b80a <_end+0x57f2>
    b793:	00 00                	add    BYTE PTR [rax],al
    b795:	03 01                	add    eax,DWORD PTR [rcx]
    b797:	55                   	push   rbp
    b798:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b79b:	00 00                	add    BYTE PTR [rax],al
    b79d:	09 a6 73 00 00 27    	or     DWORD PTR [rsi+0x27000073],esp
    b7a3:	2f                   	(bad)
    b7a4:	00 00                	add    BYTE PTR [rax],al
    b7a6:	00 00                	add    BYTE PTR [rax],al
    b7a8:	00 00                	add    BYTE PTR [rax],al
    b7aa:	02 00                	add    al,BYTE PTR [rax]
    b7ac:	27                   	(bad)
    b7ad:	2f                   	(bad)
    b7ae:	00 00                	add    BYTE PTR [rax],al
    b7b0:	00 00                	add    BYTE PTR [rax],al
    b7b2:	00 00                	add    BYTE PTR [rax],al
    b7b4:	0c 00                	or     al,0x0
    b7b6:	00 00                	add    BYTE PTR [rax],al
    b7b8:	00 00                	add    BYTE PTR [rax],al
    b7ba:	00 00                	add    BYTE PTR [rax],al
    b7bc:	25 09 77 63 00       	and    eax,0x637709
    b7c1:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 12b7b <_end+0xcb63>
    b7c7:	1f                   	(bad)
    b7c8:	25 00 00 1d 25       	and    eax,0x251d0000
    b7cd:	00 00                	add    BYTE PTR [rax],al
    b7cf:	07                   	(bad)
    b7d0:	33 2f                	xor    ebp,DWORD PTR [rdi]
    b7d2:	00 00                	add    BYTE PTR [rax],al
    b7d4:	00 00                	add    BYTE PTR [rax],al
    b7d6:	00 00                	add    BYTE PTR [rax],al
    b7d8:	7a 77                	jp     b851 <_end+0x5839>
    b7da:	00 00                	add    BYTE PTR [rax],al
    b7dc:	03 01                	add    eax,DWORD PTR [rcx]
    b7de:	55                   	push   rbp
    b7df:	09 03                	or     DWORD PTR [rbx],eax
    b7e1:	c2 41 00             	ret    0x41
    b7e4:	00 00                	add    BYTE PTR [rax],al
    b7e6:	00 00                	add    BYTE PTR [rax],al
    b7e8:	00 00                	add    BYTE PTR [rax],al
    b7ea:	00 09                	add    BYTE PTR [rcx],cl
    b7ec:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    b7ed:	73 00                	jae    b7ef <_end+0x57d7>
    b7ef:	00 33                	add    BYTE PTR [rbx],dh
    b7f1:	2f                   	(bad)
    b7f2:	00 00                	add    BYTE PTR [rax],al
    b7f4:	00 00                	add    BYTE PTR [rax],al
    b7f6:	00 00                	add    BYTE PTR [rax],al
    b7f8:	02 00                	add    al,BYTE PTR [rax]
    b7fa:	33 2f                	xor    ebp,DWORD PTR [rdi]
    b7fc:	00 00                	add    BYTE PTR [rax],al
    b7fe:	00 00                	add    BYTE PTR [rax],al
    b800:	00 00                	add    BYTE PTR [rax],al
    b802:	0c 00                	or     al,0x0
    b804:	00 00                	add    BYTE PTR [rax],al
    b806:	00 00                	add    BYTE PTR [rax],al
    b808:	00 00                	add    BYTE PTR [rax],al
    b80a:	25 09 c5 63 00       	and    eax,0x63c509
    b80f:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 12bc9 <_end+0xcbb1>
    b815:	2e 25 00 00 2c 25    	cs and eax,0x252c0000
    b81b:	00 00                	add    BYTE PTR [rax],al
    b81d:	07                   	(bad)
    b81e:	3f                   	(bad)
    b81f:	2f                   	(bad)
    b820:	00 00                	add    BYTE PTR [rax],al
    b822:	00 00                	add    BYTE PTR [rax],al
    b824:	00 00                	add    BYTE PTR [rax],al
    b826:	7a 77                	jp     b89f <_end+0x5887>
    b828:	00 00                	add    BYTE PTR [rax],al
    b82a:	03 01                	add    eax,DWORD PTR [rcx]
    b82c:	55                   	push   rbp
    b82d:	09 03                	or     DWORD PTR [rbx],eax
    b82f:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    b832:	00 00                	add    BYTE PTR [rax],al
    b834:	00 00                	add    BYTE PTR [rax],al
    b836:	00 00                	add    BYTE PTR [rax],al
    b838:	00 1e                	add    BYTE PTR [rsi],bl
    b83a:	f5                   	cmc
    b83b:	52                   	push   rdx
    b83c:	00 00                	add    BYTE PTR [rax],al
    b83e:	3f                   	(bad)
    b83f:	2f                   	(bad)
    b840:	00 00                	add    BYTE PTR [rax],al
    b842:	00 00                	add    BYTE PTR [rax],al
    b844:	00 00                	add    BYTE PTR [rax],al
    b846:	03 00                	add    eax,DWORD PTR [rax]
    b848:	9f                   	lahf
    b849:	03 00                	add    eax,DWORD PTR [rax]
    b84b:	00 25 09 7b 64 00    	add    BYTE PTR [rip+0x647b09],ah        # 65335a <_end+0x64d342>
    b851:	00 05 37 53 00 00    	add    BYTE PTR [rip+0x5337],al        # 10b8e <_end+0xab76>
    b857:	3d 25 00 00 3b       	cmp    eax,0x3b000025
    b85c:	25 00 00 05 2b       	and    eax,0x2b050000
    b861:	53                   	push   rbx
    b862:	00 00                	add    BYTE PTR [rax],al
    b864:	49 25 00 00 47 25    	rex.WB and rax,0x25470000
    b86a:	00 00                	add    BYTE PTR [rax],al
    b86c:	0b 1f                	or     ebx,DWORD PTR [rdi]
    b86e:	53                   	push   rbx
    b86f:	00 00                	add    BYTE PTR [rax],al
    b871:	0b 13                	or     edx,DWORD PTR [rbx]
    b873:	53                   	push   rbx
    b874:	00 00                	add    BYTE PTR [rax],al
    b876:	0b 07                	or     eax,DWORD PTR [rdi]
    b878:	53                   	push   rbx
    b879:	00 00                	add    BYTE PTR [rax],al
    b87b:	2e 9f                	cs lahf
    b87d:	03 00                	add    eax,DWORD PTR [rax]
    b87f:	00 15 43 53 00 00    	add    BYTE PTR [rip+0x5343],dl        # 10bc8 <_end+0xabb0>
    b885:	57                   	push   rdi
    b886:	25 00 00 51 25       	and    eax,0x25510000
    b88b:	00 00                	add    BYTE PTR [rax],al
    b88d:	0a 5a 2f             	or     bl,BYTE PTR [rdx+0x2f]
    b890:	00 00                	add    BYTE PTR [rax],al
    b892:	00 00                	add    BYTE PTR [rax],al
    b894:	00 00                	add    BYTE PTR [rax],al
    b896:	ff                   	(bad)
    b897:	3c 00                	cmp    al,0x0
    b899:	00 45 64             	add    BYTE PTR [rbp+0x64],al
    b89c:	00 00                	add    BYTE PTR [rax],al
    b89e:	03 01                	add    eax,DWORD PTR [rcx]
    b8a0:	55                   	push   rbp
    b8a1:	09 03                	or     DWORD PTR [rbx],eax
    b8a3:	30 45 00             	xor    BYTE PTR [rbp+0x0],al
    b8a6:	00 00                	add    BYTE PTR [rax],al
    b8a8:	00 00                	add    BYTE PTR [rax],al
    b8aa:	00 03                	add    BYTE PTR [rbx],al
    b8ac:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b8b0:	b2 41                	mov    dl,0x41
    b8b2:	00 00                	add    BYTE PTR [rax],al
    b8b4:	00 00                	add    BYTE PTR [rax],al
    b8b6:	00 00                	add    BYTE PTR [rax],al
    b8b8:	00 0a                	add    BYTE PTR [rdx],cl
    b8ba:	7a 2f                	jp     b8eb <_end+0x58d3>
    b8bc:	00 00                	add    BYTE PTR [rax],al
    b8be:	00 00                	add    BYTE PTR [rax],al
    b8c0:	00 00                	add    BYTE PTR [rax],al
    b8c2:	95                   	xchg   ebp,eax
    b8c3:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b8c6:	6c                   	ins    BYTE PTR es:[rdi],dx
    b8c7:	64 00 00             	add    BYTE PTR fs:[rax],al
    b8ca:	03 01                	add    eax,DWORD PTR [rcx]
    b8cc:	55                   	push   rbp
    b8cd:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    b8d0:	03 01                	add    eax,DWORD PTR [rcx]
    b8d2:	58                   	pop    rax
    b8d3:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b8d6:	03 01                	add    eax,DWORD PTR [rcx]
    b8d8:	59                   	pop    rcx
    b8d9:	05 91 9c 7f 94       	add    eax,0x947f9c91
    b8de:	04 00                	add    al,0x0
    b8e0:	26 89 2f             	es mov DWORD PTR [rdi],ebp
    b8e3:	00 00                	add    BYTE PTR [rax],al
    b8e5:	00 00                	add    BYTE PTR [rax],al
    b8e7:	00 00                	add    BYTE PTR [rax],al
    b8e9:	4d 3c 00             	rex.WRB cmp al,0x0
    b8ec:	00 00                	add    BYTE PTR [rax],al
    b8ee:	00 38                	add    BYTE PTR [rax],bh
    b8f0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    b8f1:	73 00                	jae    b8f3 <_end+0x58db>
    b8f3:	00 89 2f 00 00 00    	add    BYTE PTR [rcx+0x2f],cl
    b8f9:	00 00                	add    BYTE PTR [rax],al
    b8fb:	00 02                	add    BYTE PTR [rdx],al
    b8fd:	00 aa 03 00 00 25    	add    BYTE PTR [rdx+0x25000003],ch
    b903:	09 05 b4 73 00 00    	or     DWORD PTR [rip+0x73b4],eax        # 12cbd <_end+0xcca5>
    b909:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    b90a:	25 00 00 6d 25       	and    eax,0x256d0000
    b90f:	00 00                	add    BYTE PTR [rax],al
    b911:	07                   	(bad)
    b912:	91                   	xchg   ecx,eax
    b913:	2f                   	(bad)
    b914:	00 00                	add    BYTE PTR [rax],al
    b916:	00 00                	add    BYTE PTR [rax],al
    b918:	00 00                	add    BYTE PTR [rax],al
    b91a:	7a 77                	jp     b993 <_end+0x597b>
    b91c:	00 00                	add    BYTE PTR [rax],al
    b91e:	03 01                	add    eax,DWORD PTR [rcx]
    b920:	55                   	push   rbp
    b921:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    b924:	00 00                	add    BYTE PTR [rax],al
    b926:	00 16                	add    BYTE PTR [rsi],dl
    b928:	91                   	xchg   ecx,eax
    b929:	2f                   	(bad)
    b92a:	00 00                	add    BYTE PTR [rax],al
    b92c:	00 00                	add    BYTE PTR [rax],al
    b92e:	00 00                	add    BYTE PTR [rax],al
    b930:	6c                   	ins    BYTE PTR es:[rdi],dx
    b931:	00 00                	add    BYTE PTR [rax],al
    b933:	00 00                	add    BYTE PTR [rax],al
    b935:	00 00                	add    BYTE PTR [rax],al
    b937:	00 c2                	add    dl,al
    b939:	66 00 00             	data16 add BYTE PTR [rax],al
    b93c:	17                   	(bad)
    b93d:	20 16                	and    BYTE PTR [rsi],dl
    b93f:	00 00                	add    BYTE PTR [rax],al
    b941:	26 09 23             	es or  DWORD PTR [rbx],esp
    b944:	42 00 00             	rex.X add BYTE PTR [rax],al
    b947:	09 a6 73 00 00 91    	or     DWORD PTR [rsi-0x6effff8d],esp
    b94d:	2f                   	(bad)
    b94e:	00 00                	add    BYTE PTR [rax],al
    b950:	00 00                	add    BYTE PTR [rax],al
    b952:	00 00                	add    BYTE PTR [rax],al
    b954:	04 00                	add    al,0x0
    b956:	91                   	xchg   ecx,eax
    b957:	2f                   	(bad)
    b958:	00 00                	add    BYTE PTR [rax],al
    b95a:	00 00                	add    BYTE PTR [rax],al
    b95c:	00 00                	add    BYTE PTR [rax],al
    b95e:	08 00                	or     BYTE PTR [rax],al
    b960:	00 00                	add    BYTE PTR [rax],al
    b962:	00 00                	add    BYTE PTR [rax],al
    b964:	00 00                	add    BYTE PTR [rax],al
    b966:	26 09 1a             	es or  DWORD PTR [rdx],ebx
    b969:	65 00 00             	add    BYTE PTR gs:[rax],al
    b96c:	05 b4 73 00 00       	add    eax,0x73b4
    b971:	7e 25                	jle    b998 <_end+0x5980>
    b973:	00 00                	add    BYTE PTR [rax],al
    b975:	7c 25                	jl     b99c <_end+0x5984>
    b977:	00 00                	add    BYTE PTR [rax],al
    b979:	07                   	(bad)
    b97a:	99                   	cdq
    b97b:	2f                   	(bad)
    b97c:	00 00                	add    BYTE PTR [rax],al
    b97e:	00 00                	add    BYTE PTR [rax],al
    b980:	00 00                	add    BYTE PTR [rax],al
    b982:	7a 77                	jp     b9fb <_end+0x59e3>
    b984:	00 00                	add    BYTE PTR [rax],al
    b986:	03 01                	add    eax,DWORD PTR [rcx]
    b988:	55                   	push   rbp
    b989:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    b98c:	00 00                	add    BYTE PTR [rax],al
    b98e:	09 a6 73 00 00 99    	or     DWORD PTR [rsi-0x66ffff8d],esp
    b994:	2f                   	(bad)
    b995:	00 00                	add    BYTE PTR [rax],al
    b997:	00 00                	add    BYTE PTR [rax],al
    b999:	00 00                	add    BYTE PTR [rax],al
    b99b:	02 00                	add    al,BYTE PTR [rax]
    b99d:	99                   	cdq
    b99e:	2f                   	(bad)
    b99f:	00 00                	add    BYTE PTR [rax],al
    b9a1:	00 00                	add    BYTE PTR [rax],al
    b9a3:	00 00                	add    BYTE PTR [rax],al
    b9a5:	0c 00                	or     al,0x0
    b9a7:	00 00                	add    BYTE PTR [rax],al
    b9a9:	00 00                	add    BYTE PTR [rax],al
    b9ab:	00 00                	add    BYTE PTR [rax],al
    b9ad:	26 09 68 65          	es or  DWORD PTR [rax+0x65],ebp
    b9b1:	00 00                	add    BYTE PTR [rax],al
    b9b3:	05 b4 73 00 00       	add    eax,0x73b4
    b9b8:	8d 25 00 00 8b 25    	lea    esp,[rip+0x258b0000]        # 258bb9be <_end+0x258b59a6>
    b9be:	00 00                	add    BYTE PTR [rax],al
    b9c0:	07                   	(bad)
    b9c1:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    b9c2:	2f                   	(bad)
    b9c3:	00 00                	add    BYTE PTR [rax],al
    b9c5:	00 00                	add    BYTE PTR [rax],al
    b9c7:	00 00                	add    BYTE PTR [rax],al
    b9c9:	7a 77                	jp     ba42 <_end+0x5a2a>
    b9cb:	00 00                	add    BYTE PTR [rax],al
    b9cd:	03 01                	add    eax,DWORD PTR [rcx]
    b9cf:	55                   	push   rbp
    b9d0:	09 03                	or     DWORD PTR [rbx],eax
    b9d2:	be 41 00 00 00       	mov    esi,0x41
    b9d7:	00 00                	add    BYTE PTR [rax],al
    b9d9:	00 00                	add    BYTE PTR [rax],al
    b9db:	00 09                	add    BYTE PTR [rcx],cl
    b9dd:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    b9de:	73 00                	jae    b9e0 <_end+0x59c8>
    b9e0:	00 a5 2f 00 00 00    	add    BYTE PTR [rbp+0x2f],ah
    b9e6:	00 00                	add    BYTE PTR [rax],al
    b9e8:	00 02                	add    BYTE PTR [rdx],al
    b9ea:	00 a5 2f 00 00 00    	add    BYTE PTR [rbp+0x2f],ah
    b9f0:	00 00                	add    BYTE PTR [rax],al
    b9f2:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b9f5:	00 00                	add    BYTE PTR [rax],al
    b9f7:	00 00                	add    BYTE PTR [rax],al
    b9f9:	00 00                	add    BYTE PTR [rax],al
    b9fb:	26 09 b6 65 00 00 05 	es or  DWORD PTR [rsi+0x5000065],esi
    ba02:	b4 73                	mov    ah,0x73
    ba04:	00 00                	add    BYTE PTR [rax],al
    ba06:	9c                   	pushf
    ba07:	25 00 00 9a 25       	and    eax,0x259a0000
    ba0c:	00 00                	add    BYTE PTR [rax],al
    ba0e:	07                   	(bad)
    ba0f:	b1 2f                	mov    cl,0x2f
    ba11:	00 00                	add    BYTE PTR [rax],al
    ba13:	00 00                	add    BYTE PTR [rax],al
    ba15:	00 00                	add    BYTE PTR [rax],al
    ba17:	7a 77                	jp     ba90 <_end+0x5a78>
    ba19:	00 00                	add    BYTE PTR [rax],al
    ba1b:	03 01                	add    eax,DWORD PTR [rcx]
    ba1d:	55                   	push   rbp
    ba1e:	09 03                	or     DWORD PTR [rbx],eax
    ba20:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    ba23:	00 00                	add    BYTE PTR [rax],al
    ba25:	00 00                	add    BYTE PTR [rax],al
    ba27:	00 00                	add    BYTE PTR [rax],al
    ba29:	00 09                	add    BYTE PTR [rcx],cl
    ba2b:	f5                   	cmc
    ba2c:	52                   	push   rdx
    ba2d:	00 00                	add    BYTE PTR [rax],al
    ba2f:	b6 2f                	mov    dh,0x2f
	...
    ba39:	b6 2f                	mov    dh,0x2f
    ba3b:	00 00                	add    BYTE PTR [rax],al
    ba3d:	00 00                	add    BYTE PTR [rax],al
    ba3f:	00 00                	add    BYTE PTR [rax],al
    ba41:	3f                   	(bad)
    ba42:	00 00                	add    BYTE PTR [rax],al
    ba44:	00 00                	add    BYTE PTR [rax],al
    ba46:	00 00                	add    BYTE PTR [rax],al
    ba48:	00 26                	add    BYTE PTR [rsi],ah
    ba4a:	09 7d 66             	or     DWORD PTR [rbp+0x66],edi
    ba4d:	00 00                	add    BYTE PTR [rax],al
    ba4f:	05 37 53 00 00       	add    eax,0x5337
    ba54:	ab                   	stos   DWORD PTR es:[rdi],eax
    ba55:	25 00 00 a9 25       	and    eax,0x25a90000
    ba5a:	00 00                	add    BYTE PTR [rax],al
    ba5c:	05 2b 53 00 00       	add    eax,0x532b
    ba61:	b7 25                	mov    bh,0x25
    ba63:	00 00                	add    BYTE PTR [rax],al
    ba65:	b5 25                	mov    ch,0x25
    ba67:	00 00                	add    BYTE PTR [rax],al
    ba69:	0b 1f                	or     ebx,DWORD PTR [rdi]
    ba6b:	53                   	push   rbx
    ba6c:	00 00                	add    BYTE PTR [rax],al
    ba6e:	0b 13                	or     edx,DWORD PTR [rbx]
    ba70:	53                   	push   rbx
    ba71:	00 00                	add    BYTE PTR [rax],al
    ba73:	0b 07                	or     eax,DWORD PTR [rdi]
    ba75:	53                   	push   rbx
    ba76:	00 00                	add    BYTE PTR [rax],al
    ba78:	15 43 53 00 00       	adc    eax,0x5343
    ba7d:	c3                   	ret
    ba7e:	25 00 00 bf 25       	and    eax,0x25bf0000
    ba83:	00 00                	add    BYTE PTR [rax],al
    ba85:	0a c9                	or     cl,cl
    ba87:	2f                   	(bad)
    ba88:	00 00                	add    BYTE PTR [rax],al
    ba8a:	00 00                	add    BYTE PTR [rax],al
    ba8c:	00 00                	add    BYTE PTR [rax],al
    ba8e:	ff                   	(bad)
    ba8f:	3c 00                	cmp    al,0x0
    ba91:	00 3d 66 00 00 03    	add    BYTE PTR [rip+0x3000066],bh        # 300bafd <_end+0x3005ae5>
    ba97:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ba9a:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
    ba9d:	00 00                	add    BYTE PTR [rax],al
    ba9f:	00 00                	add    BYTE PTR [rax],al
    baa1:	00 00                	add    BYTE PTR [rax],al
    baa3:	03 01                	add    eax,DWORD PTR [rcx]
    baa5:	54                   	push   rsp
    baa6:	09 03                	or     DWORD PTR [rbx],eax
    baa8:	b2 41                	mov    dl,0x41
    baaa:	00 00                	add    BYTE PTR [rax],al
    baac:	00 00                	add    BYTE PTR [rax],al
    baae:	00 00                	add    BYTE PTR [rax],al
    bab0:	00 0a                	add    BYTE PTR [rdx],cl
    bab2:	eb 2f                	jmp    bae3 <_end+0x5acb>
    bab4:	00 00                	add    BYTE PTR [rax],al
    bab6:	00 00                	add    BYTE PTR [rax],al
    bab8:	00 00                	add    BYTE PTR [rax],al
    baba:	95                   	xchg   ebp,eax
    babb:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    babe:	66 66 00 00          	data16 data16 add BYTE PTR [rax],al
    bac2:	03 01                	add    eax,DWORD PTR [rcx]
    bac4:	55                   	push   rbp
    bac5:	04 91                	add    al,0x91
    bac7:	a8 7f                	test   al,0x7f
    bac9:	06                   	(bad)
    baca:	03 01                	add    eax,DWORD PTR [rcx]
    bacc:	58                   	pop    rax
    bacd:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    bad0:	03 01                	add    eax,DWORD PTR [rcx]
    bad2:	59                   	pop    rcx
    bad3:	05 91 9c 7f 94       	add    eax,0x947f9c91
    bad8:	04 00                	add    al,0x0
    bada:	07                   	(bad)
    badb:	f5                   	cmc
    badc:	2f                   	(bad)
    badd:	00 00                	add    BYTE PTR [rax],al
    badf:	00 00                	add    BYTE PTR [rax],al
    bae1:	00 00                	add    BYTE PTR [rax],al
    bae3:	4d 3c 00             	rex.WRB cmp al,0x0
    bae6:	00 03                	add    BYTE PTR [rbx],al
    bae8:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    baeb:	91                   	xchg   ecx,eax
    baec:	a8 7f                	test   al,0x7f
    baee:	06                   	(bad)
    baef:	00 00                	add    BYTE PTR [rax],al
    baf1:	19 a6 73 00 00 f5    	sbb    DWORD PTR [rsi-0xaffff8d],esp
    baf7:	2f                   	(bad)
    baf8:	00 00                	add    BYTE PTR [rax],al
    bafa:	00 00                	add    BYTE PTR [rax],al
    bafc:	00 00                	add    BYTE PTR [rax],al
    bafe:	02 00                	add    al,BYTE PTR [rax]
    bb00:	f5                   	cmc
    bb01:	2f                   	(bad)
    bb02:	00 00                	add    BYTE PTR [rax],al
    bb04:	00 00                	add    BYTE PTR [rax],al
    bb06:	00 00                	add    BYTE PTR [rax],al
    bb08:	08 00                	or     BYTE PTR [rax],al
    bb0a:	00 00                	add    BYTE PTR [rax],al
    bb0c:	00 00                	add    BYTE PTR [rax],al
    bb0e:	00 00                	add    BYTE PTR [rax],al
    bb10:	01 26                	add    DWORD PTR [rsi],esp
    bb12:	09 05 b4 73 00 00    	or     DWORD PTR [rip+0x73b4],eax        # 12ecc <_end+0xceb4>
    bb18:	d6                   	(bad)
    bb19:	25 00 00 d4 25       	and    eax,0x25d40000
    bb1e:	00 00                	add    BYTE PTR [rax],al
    bb20:	07                   	(bad)
    bb21:	fd                   	std
    bb22:	2f                   	(bad)
    bb23:	00 00                	add    BYTE PTR [rax],al
    bb25:	00 00                	add    BYTE PTR [rax],al
    bb27:	00 00                	add    BYTE PTR [rax],al
    bb29:	7a 77                	jp     bba2 <_end+0x5b8a>
    bb2b:	00 00                	add    BYTE PTR [rax],al
    bb2d:	03 01                	add    eax,DWORD PTR [rcx]
    bb2f:	55                   	push   rbp
    bb30:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    bb33:	00 00                	add    BYTE PTR [rax],al
    bb35:	00 16                	add    BYTE PTR [rsi],dl
    bb37:	fd                   	std
    bb38:	2f                   	(bad)
    bb39:	00 00                	add    BYTE PTR [rax],al
    bb3b:	00 00                	add    BYTE PTR [rax],al
    bb3d:	00 00                	add    BYTE PTR [rax],al
    bb3f:	5f                   	pop    rdi
    bb40:	00 00                	add    BYTE PTR [rax],al
    bb42:	00 00                	add    BYTE PTR [rax],al
    bb44:	00 00                	add    BYTE PTR [rax],al
    bb46:	00 c6                	add    dh,al
    bb48:	68 00 00 17 53       	push   0x53170000
    bb4d:	18 00                	sbb    BYTE PTR [rax],al
    bb4f:	00 27                	add    BYTE PTR [rdi],ah
    bb51:	09 23                	or     DWORD PTR [rbx],esp
    bb53:	42 00 00             	rex.X add BYTE PTR [rax],al
    bb56:	09 a6 73 00 00 fd    	or     DWORD PTR [rsi-0x2ffff8d],esp
    bb5c:	2f                   	(bad)
    bb5d:	00 00                	add    BYTE PTR [rax],al
    bb5f:	00 00                	add    BYTE PTR [rax],al
    bb61:	00 00                	add    BYTE PTR [rax],al
    bb63:	04 00                	add    al,0x0
    bb65:	fd                   	std
    bb66:	2f                   	(bad)
    bb67:	00 00                	add    BYTE PTR [rax],al
    bb69:	00 00                	add    BYTE PTR [rax],al
    bb6b:	00 00                	add    BYTE PTR [rax],al
    bb6d:	08 00                	or     BYTE PTR [rax],al
    bb6f:	00 00                	add    BYTE PTR [rax],al
    bb71:	00 00                	add    BYTE PTR [rax],al
    bb73:	00 00                	add    BYTE PTR [rax],al
    bb75:	27                   	(bad)
    bb76:	09 29                	or     DWORD PTR [rcx],ebp
    bb78:	67 00 00             	add    BYTE PTR [eax],al
    bb7b:	05 b4 73 00 00       	add    eax,0x73b4
    bb80:	e5 25                	in     eax,0x25
    bb82:	00 00                	add    BYTE PTR [rax],al
    bb84:	e3 25                	jrcxz  bbab <_end+0x5b93>
    bb86:	00 00                	add    BYTE PTR [rax],al
    bb88:	07                   	(bad)
    bb89:	05 30 00 00 00       	add    eax,0x30
    bb8e:	00 00                	add    BYTE PTR [rax],al
    bb90:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    bb93:	00 00                	add    BYTE PTR [rax],al
    bb95:	03 01                	add    eax,DWORD PTR [rcx]
    bb97:	55                   	push   rbp
    bb98:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    bb9b:	00 00                	add    BYTE PTR [rax],al
    bb9d:	09 a6 73 00 00 05    	or     DWORD PTR [rsi+0x5000073],esp
    bba3:	30 00                	xor    BYTE PTR [rax],al
    bba5:	00 00                	add    BYTE PTR [rax],al
    bba7:	00 00                	add    BYTE PTR [rax],al
    bba9:	00 02                	add    BYTE PTR [rdx],al
    bbab:	00 05 30 00 00 00    	add    BYTE PTR [rip+0x30],al        # bbe1 <_end+0x5bc9>
    bbb1:	00 00                	add    BYTE PTR [rax],al
    bbb3:	00 08                	add    BYTE PTR [rax],cl
    bbb5:	00 00                	add    BYTE PTR [rax],al
    bbb7:	00 00                	add    BYTE PTR [rax],al
    bbb9:	00 00                	add    BYTE PTR [rax],al
    bbbb:	00 27                	add    BYTE PTR [rdi],ah
    bbbd:	09 70 67             	or     DWORD PTR [rax+0x67],esi
    bbc0:	00 00                	add    BYTE PTR [rax],al
    bbc2:	05 b4 73 00 00       	add    eax,0x73b4
    bbc7:	f4                   	hlt
    bbc8:	25 00 00 f2 25       	and    eax,0x25f20000
    bbcd:	00 00                	add    BYTE PTR [rax],al
    bbcf:	07                   	(bad)
    bbd0:	0d 30 00 00 00       	or     eax,0x30
    bbd5:	00 00                	add    BYTE PTR [rax],al
    bbd7:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    bbda:	00 00                	add    BYTE PTR [rax],al
    bbdc:	03 01                	add    eax,DWORD PTR [rcx]
    bbde:	55                   	push   rbp
    bbdf:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    bbe2:	00 00                	add    BYTE PTR [rax],al
    bbe4:	09 a6 73 00 00 0d    	or     DWORD PTR [rsi+0xd000073],esp
    bbea:	30 00                	xor    BYTE PTR [rax],al
    bbec:	00 00                	add    BYTE PTR [rax],al
    bbee:	00 00                	add    BYTE PTR [rax],al
    bbf0:	00 02                	add    BYTE PTR [rdx],al
    bbf2:	00 0d 30 00 00 00    	add    BYTE PTR [rip+0x30],cl        # bc28 <_end+0x5c10>
    bbf8:	00 00                	add    BYTE PTR [rax],al
    bbfa:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bbfd:	00 00                	add    BYTE PTR [rax],al
    bbff:	00 00                	add    BYTE PTR [rax],al
    bc01:	00 00                	add    BYTE PTR [rax],al
    bc03:	27                   	(bad)
    bc04:	09 be 67 00 00 05    	or     DWORD PTR [rsi+0x5000067],edi
    bc0a:	b4 73                	mov    ah,0x73
    bc0c:	00 00                	add    BYTE PTR [rax],al
    bc0e:	03 26                	add    esp,DWORD PTR [rsi]
    bc10:	00 00                	add    BYTE PTR [rax],al
    bc12:	01 26                	add    DWORD PTR [rsi],esp
    bc14:	00 00                	add    BYTE PTR [rax],al
    bc16:	07                   	(bad)
    bc17:	19 30                	sbb    DWORD PTR [rax],esi
    bc19:	00 00                	add    BYTE PTR [rax],al
    bc1b:	00 00                	add    BYTE PTR [rax],al
    bc1d:	00 00                	add    BYTE PTR [rax],al
    bc1f:	7a 77                	jp     bc98 <_end+0x5c80>
    bc21:	00 00                	add    BYTE PTR [rax],al
    bc23:	03 01                	add    eax,DWORD PTR [rcx]
    bc25:	55                   	push   rbp
    bc26:	09 03                	or     DWORD PTR [rbx],eax
    bc28:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    bc2b:	00 00                	add    BYTE PTR [rax],al
    bc2d:	00 00                	add    BYTE PTR [rax],al
    bc2f:	00 00                	add    BYTE PTR [rax],al
    bc31:	00 09                	add    BYTE PTR [rcx],cl
    bc33:	f5                   	cmc
    bc34:	52                   	push   rdx
    bc35:	00 00                	add    BYTE PTR [rax],al
    bc37:	19 30                	sbb    DWORD PTR [rax],esi
    bc39:	00 00                	add    BYTE PTR [rax],al
    bc3b:	00 00                	add    BYTE PTR [rax],al
    bc3d:	00 00                	add    BYTE PTR [rax],al
    bc3f:	03 00                	add    eax,DWORD PTR [rax]
    bc41:	19 30                	sbb    DWORD PTR [rax],esi
    bc43:	00 00                	add    BYTE PTR [rax],al
    bc45:	00 00                	add    BYTE PTR [rax],al
    bc47:	00 00                	add    BYTE PTR [rax],al
    bc49:	3b 00                	cmp    eax,DWORD PTR [rax]
    bc4b:	00 00                	add    BYTE PTR [rax],al
    bc4d:	00 00                	add    BYTE PTR [rax],al
    bc4f:	00 00                	add    BYTE PTR [rax],al
    bc51:	27                   	(bad)
    bc52:	09 81 68 00 00 05    	or     DWORD PTR [rcx+0x5000068],eax
    bc58:	37                   	(bad)
    bc59:	53                   	push   rbx
    bc5a:	00 00                	add    BYTE PTR [rax],al
    bc5c:	12 26                	adc    ah,BYTE PTR [rsi]
    bc5e:	00 00                	add    BYTE PTR [rax],al
    bc60:	10 26                	adc    BYTE PTR [rsi],ah
    bc62:	00 00                	add    BYTE PTR [rax],al
    bc64:	05 2b 53 00 00       	add    eax,0x532b
    bc69:	1e                   	(bad)
    bc6a:	26 00 00             	es add BYTE PTR [rax],al
    bc6d:	1c 26                	sbb    al,0x26
    bc6f:	00 00                	add    BYTE PTR [rax],al
    bc71:	0b 1f                	or     ebx,DWORD PTR [rdi]
    bc73:	53                   	push   rbx
    bc74:	00 00                	add    BYTE PTR [rax],al
    bc76:	0b 13                	or     edx,DWORD PTR [rbx]
    bc78:	53                   	push   rbx
    bc79:	00 00                	add    BYTE PTR [rax],al
    bc7b:	0b 07                	or     eax,DWORD PTR [rdi]
    bc7d:	53                   	push   rbx
    bc7e:	00 00                	add    BYTE PTR [rax],al
    bc80:	15 43 53 00 00       	adc    eax,0x5343
    bc85:	2a 26                	sub    ah,BYTE PTR [rsi]
    bc87:	00 00                	add    BYTE PTR [rax],al
    bc89:	26 26 00 00          	es es add BYTE PTR [rax],al
    bc8d:	0a 2c 30             	or     ch,BYTE PTR [rax+rsi*1]
    bc90:	00 00                	add    BYTE PTR [rax],al
    bc92:	00 00                	add    BYTE PTR [rax],al
    bc94:	00 00                	add    BYTE PTR [rax],al
    bc96:	ff                   	(bad)
    bc97:	3c 00                	cmp    al,0x0
    bc99:	00 45 68             	add    BYTE PTR [rbp+0x68],al
    bc9c:	00 00                	add    BYTE PTR [rax],al
    bc9e:	03 01                	add    eax,DWORD PTR [rcx]
    bca0:	55                   	push   rbp
    bca1:	09 03                	or     DWORD PTR [rbx],eax
    bca3:	f8                   	clc
    bca4:	45 00 00             	add    BYTE PTR [r8],r8b
    bca7:	00 00                	add    BYTE PTR [rax],al
    bca9:	00 00                	add    BYTE PTR [rax],al
    bcab:	03 01                	add    eax,DWORD PTR [rcx]
    bcad:	54                   	push   rsp
    bcae:	09 03                	or     DWORD PTR [rbx],eax
    bcb0:	b2 41                	mov    dl,0x41
    bcb2:	00 00                	add    BYTE PTR [rax],al
    bcb4:	00 00                	add    BYTE PTR [rax],al
    bcb6:	00 00                	add    BYTE PTR [rax],al
    bcb8:	00 0a                	add    BYTE PTR [rdx],cl
    bcba:	4c 30 00             	rex.WR xor BYTE PTR [rax],r8b
    bcbd:	00 00                	add    BYTE PTR [rax],al
    bcbf:	00 00                	add    BYTE PTR [rax],al
    bcc1:	00 95 46 00 00 6c    	add    BYTE PTR [rbp+0x6c000046],dl
    bcc7:	68 00 00 03 01       	push   0x1030000
    bccc:	55                   	push   rbp
    bccd:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    bcd0:	03 01                	add    eax,DWORD PTR [rcx]
    bcd2:	58                   	pop    rax
    bcd3:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    bcd6:	03 01                	add    eax,DWORD PTR [rcx]
    bcd8:	59                   	pop    rcx
    bcd9:	05 91 9c 7f 94       	add    eax,0x947f9c91
    bcde:	04 00                	add    al,0x0
    bce0:	07                   	(bad)
    bce1:	54                   	push   rsp
    bce2:	30 00                	xor    BYTE PTR [rax],al
    bce4:	00 00                	add    BYTE PTR [rax],al
    bce6:	00 00                	add    BYTE PTR [rax],al
    bce8:	00 4d 3c             	add    BYTE PTR [rbp+0x3c],cl
    bceb:	00 00                	add    BYTE PTR [rax],al
    bced:	03 01                	add    eax,DWORD PTR [rcx]
    bcef:	55                   	push   rbp
    bcf0:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    bcf3:	00 00                	add    BYTE PTR [rax],al
    bcf5:	19 a6 73 00 00 54    	sbb    DWORD PTR [rsi+0x54000073],esp
    bcfb:	30 00                	xor    BYTE PTR [rax],al
    bcfd:	00 00                	add    BYTE PTR [rax],al
    bcff:	00 00                	add    BYTE PTR [rax],al
    bd01:	00 02                	add    BYTE PTR [rdx],al
    bd03:	00 54 30 00          	add    BYTE PTR [rax+rsi*1+0x0],dl
    bd07:	00 00                	add    BYTE PTR [rax],al
    bd09:	00 00                	add    BYTE PTR [rax],al
    bd0b:	00 08                	add    BYTE PTR [rax],cl
    bd0d:	00 00                	add    BYTE PTR [rax],al
    bd0f:	00 00                	add    BYTE PTR [rax],al
    bd11:	00 00                	add    BYTE PTR [rax],al
    bd13:	00 01                	add    BYTE PTR [rcx],al
    bd15:	27                   	(bad)
    bd16:	09 05 b4 73 00 00    	or     DWORD PTR [rip+0x73b4],eax        # 130d0 <_end+0xd0b8>
    bd1c:	3b 26                	cmp    esp,DWORD PTR [rsi]
    bd1e:	00 00                	add    BYTE PTR [rax],al
    bd20:	39 26                	cmp    DWORD PTR [rsi],esp
    bd22:	00 00                	add    BYTE PTR [rax],al
    bd24:	07                   	(bad)
    bd25:	5c                   	pop    rsp
    bd26:	30 00                	xor    BYTE PTR [rax],al
    bd28:	00 00                	add    BYTE PTR [rax],al
    bd2a:	00 00                	add    BYTE PTR [rax],al
    bd2c:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    bd2f:	00 00                	add    BYTE PTR [rax],al
    bd31:	03 01                	add    eax,DWORD PTR [rcx]
    bd33:	55                   	push   rbp
    bd34:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    bd37:	00 00                	add    BYTE PTR [rax],al
    bd39:	00 16                	add    BYTE PTR [rsi],dl
    bd3b:	5c                   	pop    rsp
    bd3c:	30 00                	xor    BYTE PTR [rax],al
    bd3e:	00 00                	add    BYTE PTR [rax],al
    bd40:	00 00                	add    BYTE PTR [rax],al
    bd42:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
    bd45:	00 00                	add    BYTE PTR [rax],al
    bd47:	00 00                	add    BYTE PTR [rax],al
    bd49:	00 00                	add    BYTE PTR [rax],al
    bd4b:	d1 6a 00             	shr    DWORD PTR [rdx+0x0],1
    bd4e:	00 17                	add    BYTE PTR [rdi],dl
    bd50:	76 1e                	jbe    bd70 <_end+0x5d58>
    bd52:	00 00                	add    BYTE PTR [rax],al
    bd54:	28 09                	sub    BYTE PTR [rcx],cl
    bd56:	23 42 00             	and    eax,DWORD PTR [rdx+0x0]
    bd59:	00 09                	add    BYTE PTR [rcx],cl
    bd5b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    bd5c:	73 00                	jae    bd5e <_end+0x5d46>
    bd5e:	00 5c 30 00          	add    BYTE PTR [rax+rsi*1+0x0],bl
    bd62:	00 00                	add    BYTE PTR [rax],al
    bd64:	00 00                	add    BYTE PTR [rax],al
    bd66:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    bd69:	5c                   	pop    rsp
    bd6a:	30 00                	xor    BYTE PTR [rax],al
    bd6c:	00 00                	add    BYTE PTR [rax],al
    bd6e:	00 00                	add    BYTE PTR [rax],al
    bd70:	00 08                	add    BYTE PTR [rax],cl
    bd72:	00 00                	add    BYTE PTR [rax],al
    bd74:	00 00                	add    BYTE PTR [rax],al
    bd76:	00 00                	add    BYTE PTR [rax],al
    bd78:	00 28                	add    BYTE PTR [rax],ch
    bd7a:	09 2d 69 00 00 05    	or     DWORD PTR [rip+0x5000069],ebp        # 500bde9 <_end+0x5005dd1>
    bd80:	b4 73                	mov    ah,0x73
    bd82:	00 00                	add    BYTE PTR [rax],al
    bd84:	4a                   	rex.WX
    bd85:	26 00 00             	es add BYTE PTR [rax],al
    bd88:	48                   	rex.W
    bd89:	26 00 00             	es add BYTE PTR [rax],al
    bd8c:	07                   	(bad)
    bd8d:	64 30 00             	xor    BYTE PTR fs:[rax],al
    bd90:	00 00                	add    BYTE PTR [rax],al
    bd92:	00 00                	add    BYTE PTR [rax],al
    bd94:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    bd97:	00 00                	add    BYTE PTR [rax],al
    bd99:	03 01                	add    eax,DWORD PTR [rcx]
    bd9b:	55                   	push   rbp
    bd9c:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    bd9f:	00 00                	add    BYTE PTR [rax],al
    bda1:	09 a6 73 00 00 64    	or     DWORD PTR [rsi+0x64000073],esp
    bda7:	30 00                	xor    BYTE PTR [rax],al
    bda9:	00 00                	add    BYTE PTR [rax],al
    bdab:	00 00                	add    BYTE PTR [rax],al
    bdad:	00 02                	add    BYTE PTR [rdx],al
    bdaf:	00 64 30 00          	add    BYTE PTR [rax+rsi*1+0x0],ah
    bdb3:	00 00                	add    BYTE PTR [rax],al
    bdb5:	00 00                	add    BYTE PTR [rax],al
    bdb7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bdba:	00 00                	add    BYTE PTR [rax],al
    bdbc:	00 00                	add    BYTE PTR [rax],al
    bdbe:	00 00                	add    BYTE PTR [rax],al
    bdc0:	28 09                	sub    BYTE PTR [rcx],cl
    bdc2:	7b 69                	jnp    be2d <_end+0x5e15>
    bdc4:	00 00                	add    BYTE PTR [rax],al
    bdc6:	05 b4 73 00 00       	add    eax,0x73b4
    bdcb:	59                   	pop    rcx
    bdcc:	26 00 00             	es add BYTE PTR [rax],al
    bdcf:	57                   	push   rdi
    bdd0:	26 00 00             	es add BYTE PTR [rax],al
    bdd3:	07                   	(bad)
    bdd4:	70 30                	jo     be06 <_end+0x5dee>
    bdd6:	00 00                	add    BYTE PTR [rax],al
    bdd8:	00 00                	add    BYTE PTR [rax],al
    bdda:	00 00                	add    BYTE PTR [rax],al
    bddc:	7a 77                	jp     be55 <_end+0x5e3d>
    bdde:	00 00                	add    BYTE PTR [rax],al
    bde0:	03 01                	add    eax,DWORD PTR [rcx]
    bde2:	55                   	push   rbp
    bde3:	09 03                	or     DWORD PTR [rbx],eax
    bde5:	d0 41 00             	rol    BYTE PTR [rcx+0x0],1
    bde8:	00 00                	add    BYTE PTR [rax],al
    bdea:	00 00                	add    BYTE PTR [rax],al
    bdec:	00 00                	add    BYTE PTR [rax],al
    bdee:	00 09                	add    BYTE PTR [rcx],cl
    bdf0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    bdf1:	73 00                	jae    bdf3 <_end+0x5ddb>
    bdf3:	00 70 30             	add    BYTE PTR [rax+0x30],dh
    bdf6:	00 00                	add    BYTE PTR [rax],al
    bdf8:	00 00                	add    BYTE PTR [rax],al
    bdfa:	00 00                	add    BYTE PTR [rax],al
    bdfc:	02 00                	add    al,BYTE PTR [rax]
    bdfe:	70 30                	jo     be30 <_end+0x5e18>
    be00:	00 00                	add    BYTE PTR [rax],al
    be02:	00 00                	add    BYTE PTR [rax],al
    be04:	00 00                	add    BYTE PTR [rax],al
    be06:	0c 00                	or     al,0x0
    be08:	00 00                	add    BYTE PTR [rax],al
    be0a:	00 00                	add    BYTE PTR [rax],al
    be0c:	00 00                	add    BYTE PTR [rax],al
    be0e:	28 09                	sub    BYTE PTR [rcx],cl
    be10:	c9                   	leave
    be11:	69 00 00 05 b4 73    	imul   eax,DWORD PTR [rax],0x73b40500
    be17:	00 00                	add    BYTE PTR [rax],al
    be19:	68 26 00 00 66       	push   0x66000026
    be1e:	26 00 00             	es add BYTE PTR [rax],al
    be21:	07                   	(bad)
    be22:	7c 30                	jl     be54 <_end+0x5e3c>
    be24:	00 00                	add    BYTE PTR [rax],al
    be26:	00 00                	add    BYTE PTR [rax],al
    be28:	00 00                	add    BYTE PTR [rax],al
    be2a:	7a 77                	jp     bea3 <_end+0x5e8b>
    be2c:	00 00                	add    BYTE PTR [rax],al
    be2e:	03 01                	add    eax,DWORD PTR [rcx]
    be30:	55                   	push   rbp
    be31:	09 03                	or     DWORD PTR [rbx],eax
    be33:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    be36:	00 00                	add    BYTE PTR [rax],al
    be38:	00 00                	add    BYTE PTR [rax],al
    be3a:	00 00                	add    BYTE PTR [rax],al
    be3c:	00 09                	add    BYTE PTR [rcx],cl
    be3e:	f5                   	cmc
    be3f:	52                   	push   rdx
    be40:	00 00                	add    BYTE PTR [rax],al
    be42:	7c 30                	jl     be74 <_end+0x5e5c>
    be44:	00 00                	add    BYTE PTR [rax],al
    be46:	00 00                	add    BYTE PTR [rax],al
    be48:	00 00                	add    BYTE PTR [rax],al
    be4a:	03 00                	add    eax,DWORD PTR [rax]
    be4c:	7c 30                	jl     be7e <_end+0x5e66>
    be4e:	00 00                	add    BYTE PTR [rax],al
    be50:	00 00                	add    BYTE PTR [rax],al
    be52:	00 00                	add    BYTE PTR [rax],al
    be54:	3b 00                	cmp    eax,DWORD PTR [rax]
    be56:	00 00                	add    BYTE PTR [rax],al
    be58:	00 00                	add    BYTE PTR [rax],al
    be5a:	00 00                	add    BYTE PTR [rax],al
    be5c:	28 09                	sub    BYTE PTR [rcx],cl
    be5e:	8c 6a 00             	mov    WORD PTR [rdx+0x0],gs
    be61:	00 05 37 53 00 00    	add    BYTE PTR [rip+0x5337],al        # 1119e <_end+0xb186>
    be67:	77 26                	ja     be8f <_end+0x5e77>
    be69:	00 00                	add    BYTE PTR [rax],al
    be6b:	75 26                	jne    be93 <_end+0x5e7b>
    be6d:	00 00                	add    BYTE PTR [rax],al
    be6f:	05 2b 53 00 00       	add    eax,0x532b
    be74:	83 26 00             	and    DWORD PTR [rsi],0x0
    be77:	00 81 26 00 00 0b    	add    BYTE PTR [rcx+0xb000026],al
    be7d:	1f                   	(bad)
    be7e:	53                   	push   rbx
    be7f:	00 00                	add    BYTE PTR [rax],al
    be81:	0b 13                	or     edx,DWORD PTR [rbx]
    be83:	53                   	push   rbx
    be84:	00 00                	add    BYTE PTR [rax],al
    be86:	0b 07                	or     eax,DWORD PTR [rdi]
    be88:	53                   	push   rbx
    be89:	00 00                	add    BYTE PTR [rax],al
    be8b:	15 43 53 00 00       	adc    eax,0x5343
    be90:	8f                   	(bad)
    be91:	26 00 00             	es add BYTE PTR [rax],al
    be94:	8b 26                	mov    esp,DWORD PTR [rsi]
    be96:	00 00                	add    BYTE PTR [rax],al
    be98:	0a 8f 30 00 00 00    	or     cl,BYTE PTR [rdi+0x30]
    be9e:	00 00                	add    BYTE PTR [rax],al
    bea0:	00 ff                	add    bh,bh
    bea2:	3c 00                	cmp    al,0x0
    bea4:	00 50 6a             	add    BYTE PTR [rax+0x6a],dl
    bea7:	00 00                	add    BYTE PTR [rax],al
    bea9:	03 01                	add    eax,DWORD PTR [rcx]
    beab:	55                   	push   rbp
    beac:	09 03                	or     DWORD PTR [rbx],eax
    beae:	a8 45                	test   al,0x45
    beb0:	00 00                	add    BYTE PTR [rax],al
    beb2:	00 00                	add    BYTE PTR [rax],al
    beb4:	00 00                	add    BYTE PTR [rax],al
    beb6:	03 01                	add    eax,DWORD PTR [rcx]
    beb8:	54                   	push   rsp
    beb9:	09 03                	or     DWORD PTR [rbx],eax
    bebb:	b2 41                	mov    dl,0x41
    bebd:	00 00                	add    BYTE PTR [rax],al
    bebf:	00 00                	add    BYTE PTR [rax],al
    bec1:	00 00                	add    BYTE PTR [rax],al
    bec3:	00 0a                	add    BYTE PTR [rdx],cl
    bec5:	af                   	scas   eax,DWORD PTR es:[rdi]
    bec6:	30 00                	xor    BYTE PTR [rax],al
    bec8:	00 00                	add    BYTE PTR [rax],al
    beca:	00 00                	add    BYTE PTR [rax],al
    becc:	00 95 46 00 00 77    	add    BYTE PTR [rbp+0x77000046],dl
    bed2:	6a 00                	push   0x0
    bed4:	00 03                	add    BYTE PTR [rbx],al
    bed6:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bed9:	7d 00                	jge    bedb <_end+0x5ec3>
    bedb:	03 01                	add    eax,DWORD PTR [rcx]
    bedd:	58                   	pop    rax
    bede:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    bee1:	03 01                	add    eax,DWORD PTR [rcx]
    bee3:	59                   	pop    rcx
    bee4:	05 91 9c 7f 94       	add    eax,0x947f9c91
    bee9:	04 00                	add    al,0x0
    beeb:	07                   	(bad)
    beec:	b7 30                	mov    bh,0x30
    beee:	00 00                	add    BYTE PTR [rax],al
    bef0:	00 00                	add    BYTE PTR [rax],al
    bef2:	00 00                	add    BYTE PTR [rax],al
    bef4:	4d 3c 00             	rex.WRB cmp al,0x0
    bef7:	00 03                	add    BYTE PTR [rbx],al
    bef9:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    befc:	7d 00                	jge    befe <_end+0x5ee6>
    befe:	00 00                	add    BYTE PTR [rax],al
    bf00:	19 a6 73 00 00 b7    	sbb    DWORD PTR [rsi-0x48ffff8d],esp
    bf06:	30 00                	xor    BYTE PTR [rax],al
    bf08:	00 00                	add    BYTE PTR [rax],al
    bf0a:	00 00                	add    BYTE PTR [rax],al
    bf0c:	00 02                	add    BYTE PTR [rdx],al
    bf0e:	00 b7 30 00 00 00    	add    BYTE PTR [rdi+0x30],dh
    bf14:	00 00                	add    BYTE PTR [rax],al
    bf16:	00 08                	add    BYTE PTR [rax],cl
    bf18:	00 00                	add    BYTE PTR [rax],al
    bf1a:	00 00                	add    BYTE PTR [rax],al
    bf1c:	00 00                	add    BYTE PTR [rax],al
    bf1e:	00 01                	add    BYTE PTR [rcx],al
    bf20:	28 09                	sub    BYTE PTR [rcx],cl
    bf22:	05 b4 73 00 00       	add    eax,0x73b4
    bf27:	a0 26 00 00 9e 26 00 	movabs al,ds:0x70000269e000026
    bf2e:	00 07 
    bf30:	bf 30 00 00 00       	mov    edi,0x30
    bf35:	00 00                	add    BYTE PTR [rax],al
    bf37:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    bf3a:	00 00                	add    BYTE PTR [rax],al
    bf3c:	03 01                	add    eax,DWORD PTR [rcx]
    bf3e:	55                   	push   rbp
    bf3f:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    bf42:	00 00                	add    BYTE PTR [rax],al
    bf44:	00 16                	add    BYTE PTR [rsi],dl
    bf46:	bf 30 00 00 00       	mov    edi,0x30
    bf4b:	00 00                	add    BYTE PTR [rax],al
    bf4d:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
    bf50:	00 00                	add    BYTE PTR [rax],al
    bf52:	00 00                	add    BYTE PTR [rax],al
    bf54:	00 00                	add    BYTE PTR [rax],al
    bf56:	dc 6c 00 00          	fsubr  QWORD PTR [rax+rax*1+0x0]
    bf5a:	17                   	(bad)
    bf5b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    bf5c:	0d 00 00 29 09       	or     eax,0x9290000
    bf61:	23 42 00             	and    eax,DWORD PTR [rdx+0x0]
    bf64:	00 09                	add    BYTE PTR [rcx],cl
    bf66:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    bf67:	73 00                	jae    bf69 <_end+0x5f51>
    bf69:	00 bf 30 00 00 00    	add    BYTE PTR [rdi+0x30],bh
    bf6f:	00 00                	add    BYTE PTR [rax],al
    bf71:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    bf74:	bf 30 00 00 00       	mov    edi,0x30
    bf79:	00 00                	add    BYTE PTR [rax],al
    bf7b:	00 08                	add    BYTE PTR [rax],cl
    bf7d:	00 00                	add    BYTE PTR [rax],al
    bf7f:	00 00                	add    BYTE PTR [rax],al
    bf81:	00 00                	add    BYTE PTR [rax],al
    bf83:	00 29                	add    BYTE PTR [rcx],ch
    bf85:	09 38                	or     DWORD PTR [rax],edi
    bf87:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    bf8a:	05 b4 73 00 00       	add    eax,0x73b4
    bf8f:	af                   	scas   eax,DWORD PTR es:[rdi]
    bf90:	26 00 00             	es add BYTE PTR [rax],al
    bf93:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    bf94:	26 00 00             	es add BYTE PTR [rax],al
    bf97:	07                   	(bad)
    bf98:	c7                   	(bad)
    bf99:	30 00                	xor    BYTE PTR [rax],al
    bf9b:	00 00                	add    BYTE PTR [rax],al
    bf9d:	00 00                	add    BYTE PTR [rax],al
    bf9f:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    bfa2:	00 00                	add    BYTE PTR [rax],al
    bfa4:	03 01                	add    eax,DWORD PTR [rcx]
    bfa6:	55                   	push   rbp
    bfa7:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    bfaa:	00 00                	add    BYTE PTR [rax],al
    bfac:	09 a6 73 00 00 c7    	or     DWORD PTR [rsi-0x38ffff8d],esp
    bfb2:	30 00                	xor    BYTE PTR [rax],al
    bfb4:	00 00                	add    BYTE PTR [rax],al
    bfb6:	00 00                	add    BYTE PTR [rax],al
    bfb8:	00 02                	add    BYTE PTR [rdx],al
    bfba:	00 c7                	add    bh,al
    bfbc:	30 00                	xor    BYTE PTR [rax],al
    bfbe:	00 00                	add    BYTE PTR [rax],al
    bfc0:	00 00                	add    BYTE PTR [rax],al
    bfc2:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bfc5:	00 00                	add    BYTE PTR [rax],al
    bfc7:	00 00                	add    BYTE PTR [rax],al
    bfc9:	00 00                	add    BYTE PTR [rax],al
    bfcb:	29 09                	sub    DWORD PTR [rcx],ecx
    bfcd:	86 6b 00             	xchg   BYTE PTR [rbx+0x0],ch
    bfd0:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 1338a <_end+0xd372>
    bfd6:	be 26 00 00 bc       	mov    esi,0xbc000026
    bfdb:	26 00 00             	es add BYTE PTR [rax],al
    bfde:	07                   	(bad)
    bfdf:	d3 30                	shl    DWORD PTR [rax],cl
    bfe1:	00 00                	add    BYTE PTR [rax],al
    bfe3:	00 00                	add    BYTE PTR [rax],al
    bfe5:	00 00                	add    BYTE PTR [rax],al
    bfe7:	7a 77                	jp     c060 <_end+0x6048>
    bfe9:	00 00                	add    BYTE PTR [rax],al
    bfeb:	03 01                	add    eax,DWORD PTR [rcx]
    bfed:	55                   	push   rbp
    bfee:	09 03                	or     DWORD PTR [rbx],eax
    bff0:	d8 41 00             	fadd   DWORD PTR [rcx+0x0]
    bff3:	00 00                	add    BYTE PTR [rax],al
    bff5:	00 00                	add    BYTE PTR [rax],al
    bff7:	00 00                	add    BYTE PTR [rax],al
    bff9:	00 09                	add    BYTE PTR [rcx],cl
    bffb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    bffc:	73 00                	jae    bffe <_end+0x5fe6>
    bffe:	00 d3                	add    bl,dl
    c000:	30 00                	xor    BYTE PTR [rax],al
    c002:	00 00                	add    BYTE PTR [rax],al
    c004:	00 00                	add    BYTE PTR [rax],al
    c006:	00 02                	add    BYTE PTR [rdx],al
    c008:	00 d3                	add    bl,dl
    c00a:	30 00                	xor    BYTE PTR [rax],al
    c00c:	00 00                	add    BYTE PTR [rax],al
    c00e:	00 00                	add    BYTE PTR [rax],al
    c010:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c013:	00 00                	add    BYTE PTR [rax],al
    c015:	00 00                	add    BYTE PTR [rax],al
    c017:	00 00                	add    BYTE PTR [rax],al
    c019:	29 09                	sub    DWORD PTR [rcx],ecx
    c01b:	d4                   	(bad)
    c01c:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    c01f:	05 b4 73 00 00       	add    eax,0x73b4
    c024:	cd 26                	int    0x26
    c026:	00 00                	add    BYTE PTR [rax],al
    c028:	cb                   	retf
    c029:	26 00 00             	es add BYTE PTR [rax],al
    c02c:	07                   	(bad)
    c02d:	df 30                	fbstp  TBYTE PTR [rax]
    c02f:	00 00                	add    BYTE PTR [rax],al
    c031:	00 00                	add    BYTE PTR [rax],al
    c033:	00 00                	add    BYTE PTR [rax],al
    c035:	7a 77                	jp     c0ae <_end+0x6096>
    c037:	00 00                	add    BYTE PTR [rax],al
    c039:	03 01                	add    eax,DWORD PTR [rcx]
    c03b:	55                   	push   rbp
    c03c:	09 03                	or     DWORD PTR [rbx],eax
    c03e:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    c041:	00 00                	add    BYTE PTR [rax],al
    c043:	00 00                	add    BYTE PTR [rax],al
    c045:	00 00                	add    BYTE PTR [rax],al
    c047:	00 09                	add    BYTE PTR [rcx],cl
    c049:	f5                   	cmc
    c04a:	52                   	push   rdx
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	df 30                	fbstp  TBYTE PTR [rax]
    c04f:	00 00                	add    BYTE PTR [rax],al
    c051:	00 00                	add    BYTE PTR [rax],al
    c053:	00 00                	add    BYTE PTR [rax],al
    c055:	03 00                	add    eax,DWORD PTR [rax]
    c057:	df 30                	fbstp  TBYTE PTR [rax]
    c059:	00 00                	add    BYTE PTR [rax],al
    c05b:	00 00                	add    BYTE PTR [rax],al
    c05d:	00 00                	add    BYTE PTR [rax],al
    c05f:	3b 00                	cmp    eax,DWORD PTR [rax]
    c061:	00 00                	add    BYTE PTR [rax],al
    c063:	00 00                	add    BYTE PTR [rax],al
    c065:	00 00                	add    BYTE PTR [rax],al
    c067:	29 09                	sub    DWORD PTR [rcx],ecx
    c069:	97                   	xchg   edi,eax
    c06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c06b:	00 00                	add    BYTE PTR [rax],al
    c06d:	05 37 53 00 00       	add    eax,0x5337
    c072:	dc 26                	fsub   QWORD PTR [rsi]
    c074:	00 00                	add    BYTE PTR [rax],al
    c076:	da 26                	fisub  DWORD PTR [rsi]
    c078:	00 00                	add    BYTE PTR [rax],al
    c07a:	05 2b 53 00 00       	add    eax,0x532b
    c07f:	e8 26 00 00 e6       	call   ffffffffe600c0aa <_end+0xffffffffe6006092>
    c084:	26 00 00             	es add BYTE PTR [rax],al
    c087:	0b 1f                	or     ebx,DWORD PTR [rdi]
    c089:	53                   	push   rbx
    c08a:	00 00                	add    BYTE PTR [rax],al
    c08c:	0b 13                	or     edx,DWORD PTR [rbx]
    c08e:	53                   	push   rbx
    c08f:	00 00                	add    BYTE PTR [rax],al
    c091:	0b 07                	or     eax,DWORD PTR [rdi]
    c093:	53                   	push   rbx
    c094:	00 00                	add    BYTE PTR [rax],al
    c096:	15 43 53 00 00       	adc    eax,0x5343
    c09b:	f4                   	hlt
    c09c:	26 00 00             	es add BYTE PTR [rax],al
    c09f:	f0 26 00 00          	lock es add BYTE PTR [rax],al
    c0a3:	0a f2                	or     dh,dl
    c0a5:	30 00                	xor    BYTE PTR [rax],al
    c0a7:	00 00                	add    BYTE PTR [rax],al
    c0a9:	00 00                	add    BYTE PTR [rax],al
    c0ab:	00 ff                	add    bh,bh
    c0ad:	3c 00                	cmp    al,0x0
    c0af:	00 5b 6c             	add    BYTE PTR [rbx+0x6c],bl
    c0b2:	00 00                	add    BYTE PTR [rax],al
    c0b4:	03 01                	add    eax,DWORD PTR [rcx]
    c0b6:	55                   	push   rbp
    c0b7:	09 03                	or     DWORD PTR [rbx],eax
    c0b9:	dc 41 00             	fadd   QWORD PTR [rcx+0x0]
    c0bc:	00 00                	add    BYTE PTR [rax],al
    c0be:	00 00                	add    BYTE PTR [rax],al
    c0c0:	00 03                	add    BYTE PTR [rbx],al
    c0c2:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c0c6:	b2 41                	mov    dl,0x41
    c0c8:	00 00                	add    BYTE PTR [rax],al
    c0ca:	00 00                	add    BYTE PTR [rax],al
    c0cc:	00 00                	add    BYTE PTR [rax],al
    c0ce:	00 0a                	add    BYTE PTR [rdx],cl
    c0d0:	12 31                	adc    dh,BYTE PTR [rcx]
    c0d2:	00 00                	add    BYTE PTR [rax],al
    c0d4:	00 00                	add    BYTE PTR [rax],al
    c0d6:	00 00                	add    BYTE PTR [rax],al
    c0d8:	95                   	xchg   ebp,eax
    c0d9:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c0dc:	82                   	(bad)
    c0dd:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0de:	00 00                	add    BYTE PTR [rax],al
    c0e0:	03 01                	add    eax,DWORD PTR [rcx]
    c0e2:	55                   	push   rbp
    c0e3:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c0e6:	03 01                	add    eax,DWORD PTR [rcx]
    c0e8:	58                   	pop    rax
    c0e9:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c0ec:	03 01                	add    eax,DWORD PTR [rcx]
    c0ee:	59                   	pop    rcx
    c0ef:	05 91 9c 7f 94       	add    eax,0x947f9c91
    c0f4:	04 00                	add    al,0x0
    c0f6:	07                   	(bad)
    c0f7:	1a 31                	sbb    dh,BYTE PTR [rcx]
    c0f9:	00 00                	add    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	4d 3c 00             	rex.WRB cmp al,0x0
    c102:	00 03                	add    BYTE PTR [rbx],al
    c104:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c107:	7d 00                	jge    c109 <_end+0x60f1>
    c109:	00 00                	add    BYTE PTR [rax],al
    c10b:	19 a6 73 00 00 1a    	sbb    DWORD PTR [rsi+0x1a000073],esp
    c111:	31 00                	xor    DWORD PTR [rax],eax
    c113:	00 00                	add    BYTE PTR [rax],al
    c115:	00 00                	add    BYTE PTR [rax],al
    c117:	00 02                	add    BYTE PTR [rdx],al
    c119:	00 1a                	add    BYTE PTR [rdx],bl
    c11b:	31 00                	xor    DWORD PTR [rax],eax
    c11d:	00 00                	add    BYTE PTR [rax],al
    c11f:	00 00                	add    BYTE PTR [rax],al
    c121:	00 08                	add    BYTE PTR [rax],cl
    c123:	00 00                	add    BYTE PTR [rax],al
    c125:	00 00                	add    BYTE PTR [rax],al
    c127:	00 00                	add    BYTE PTR [rax],al
    c129:	00 01                	add    BYTE PTR [rcx],al
    c12b:	29 09                	sub    DWORD PTR [rcx],ecx
    c12d:	05 b4 73 00 00       	add    eax,0x73b4
    c132:	05 27 00 00 03       	add    eax,0x3000027
    c137:	27                   	(bad)
    c138:	00 00                	add    BYTE PTR [rax],al
    c13a:	07                   	(bad)
    c13b:	22 31                	and    dh,BYTE PTR [rcx]
    c13d:	00 00                	add    BYTE PTR [rax],al
    c13f:	00 00                	add    BYTE PTR [rax],al
    c141:	00 00                	add    BYTE PTR [rax],al
    c143:	7a 77                	jp     c1bc <_end+0x61a4>
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	03 01                	add    eax,DWORD PTR [rcx]
    c149:	55                   	push   rbp
    c14a:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c14d:	00 00                	add    BYTE PTR [rax],al
    c14f:	00 16                	add    BYTE PTR [rsi],dl
    c151:	22 31                	and    dh,BYTE PTR [rcx]
    c153:	00 00                	add    BYTE PTR [rax],al
    c155:	00 00                	add    BYTE PTR [rax],al
    c157:	00 00                	add    BYTE PTR [rax],al
    c159:	63 00                	movsxd eax,DWORD PTR [rax]
    c15b:	00 00                	add    BYTE PTR [rax],al
    c15d:	00 00                	add    BYTE PTR [rax],al
    c15f:	00 00                	add    BYTE PTR [rax],al
    c161:	e7 6e                	out    0x6e,eax
    c163:	00 00                	add    BYTE PTR [rax],al
    c165:	17                   	(bad)
    c166:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c167:	34 00                	xor    al,0x0
    c169:	00 2a                	add    BYTE PTR [rdx],ch
    c16b:	09 23                	or     DWORD PTR [rbx],esp
    c16d:	42 00 00             	rex.X add BYTE PTR [rax],al
    c170:	09 a6 73 00 00 22    	or     DWORD PTR [rsi+0x22000073],esp
    c176:	31 00                	xor    DWORD PTR [rax],eax
    c178:	00 00                	add    BYTE PTR [rax],al
    c17a:	00 00                	add    BYTE PTR [rax],al
    c17c:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c17f:	22 31                	and    dh,BYTE PTR [rcx]
    c181:	00 00                	add    BYTE PTR [rax],al
    c183:	00 00                	add    BYTE PTR [rax],al
    c185:	00 00                	add    BYTE PTR [rax],al
    c187:	08 00                	or     BYTE PTR [rax],al
    c189:	00 00                	add    BYTE PTR [rax],al
    c18b:	00 00                	add    BYTE PTR [rax],al
    c18d:	00 00                	add    BYTE PTR [rax],al
    c18f:	2a 09                	sub    cl,BYTE PTR [rcx]
    c191:	43 6d                	rex.XB ins DWORD PTR es:[rdi],dx
    c193:	00 00                	add    BYTE PTR [rax],al
    c195:	05 b4 73 00 00       	add    eax,0x73b4
    c19a:	14 27                	adc    al,0x27
    c19c:	00 00                	add    BYTE PTR [rax],al
    c19e:	12 27                	adc    ah,BYTE PTR [rdi]
    c1a0:	00 00                	add    BYTE PTR [rax],al
    c1a2:	07                   	(bad)
    c1a3:	2a 31                	sub    dh,BYTE PTR [rcx]
    c1a5:	00 00                	add    BYTE PTR [rax],al
    c1a7:	00 00                	add    BYTE PTR [rax],al
    c1a9:	00 00                	add    BYTE PTR [rax],al
    c1ab:	7a 77                	jp     c224 <_end+0x620c>
    c1ad:	00 00                	add    BYTE PTR [rax],al
    c1af:	03 01                	add    eax,DWORD PTR [rcx]
    c1b1:	55                   	push   rbp
    c1b2:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c1b5:	00 00                	add    BYTE PTR [rax],al
    c1b7:	09 a6 73 00 00 2a    	or     DWORD PTR [rsi+0x2a000073],esp
    c1bd:	31 00                	xor    DWORD PTR [rax],eax
    c1bf:	00 00                	add    BYTE PTR [rax],al
    c1c1:	00 00                	add    BYTE PTR [rax],al
    c1c3:	00 02                	add    BYTE PTR [rdx],al
    c1c5:	00 2a                	add    BYTE PTR [rdx],ch
    c1c7:	31 00                	xor    DWORD PTR [rax],eax
    c1c9:	00 00                	add    BYTE PTR [rax],al
    c1cb:	00 00                	add    BYTE PTR [rax],al
    c1cd:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c1d0:	00 00                	add    BYTE PTR [rax],al
    c1d2:	00 00                	add    BYTE PTR [rax],al
    c1d4:	00 00                	add    BYTE PTR [rax],al
    c1d6:	2a 09                	sub    cl,BYTE PTR [rcx]
    c1d8:	91                   	xchg   ecx,eax
    c1d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    c1da:	00 00                	add    BYTE PTR [rax],al
    c1dc:	05 b4 73 00 00       	add    eax,0x73b4
    c1e1:	23 27                	and    esp,DWORD PTR [rdi]
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	21 27                	and    DWORD PTR [rdi],esp
    c1e7:	00 00                	add    BYTE PTR [rax],al
    c1e9:	07                   	(bad)
    c1ea:	36 31 00             	ss xor DWORD PTR [rax],eax
    c1ed:	00 00                	add    BYTE PTR [rax],al
    c1ef:	00 00                	add    BYTE PTR [rax],al
    c1f1:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    c1f4:	00 00                	add    BYTE PTR [rax],al
    c1f6:	03 01                	add    eax,DWORD PTR [rcx]
    c1f8:	55                   	push   rbp
    c1f9:	09 03                	or     DWORD PTR [rbx],eax
    c1fb:	f9                   	stc
    c1fc:	41 00 00             	add    BYTE PTR [r8],al
    c1ff:	00 00                	add    BYTE PTR [rax],al
    c201:	00 00                	add    BYTE PTR [rax],al
    c203:	00 00                	add    BYTE PTR [rax],al
    c205:	09 a6 73 00 00 36    	or     DWORD PTR [rsi+0x36000073],esp
    c20b:	31 00                	xor    DWORD PTR [rax],eax
    c20d:	00 00                	add    BYTE PTR [rax],al
    c20f:	00 00                	add    BYTE PTR [rax],al
    c211:	00 02                	add    BYTE PTR [rdx],al
    c213:	00 36                	add    BYTE PTR [rsi],dh
    c215:	31 00                	xor    DWORD PTR [rax],eax
    c217:	00 00                	add    BYTE PTR [rax],al
    c219:	00 00                	add    BYTE PTR [rax],al
    c21b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c21e:	00 00                	add    BYTE PTR [rax],al
    c220:	00 00                	add    BYTE PTR [rax],al
    c222:	00 00                	add    BYTE PTR [rax],al
    c224:	2a 09                	sub    cl,BYTE PTR [rcx]
    c226:	df 6d 00             	fild   QWORD PTR [rbp+0x0]
    c229:	00 05 b4 73 00 00    	add    BYTE PTR [rip+0x73b4],al        # 135e3 <_end+0xd5cb>
    c22f:	32 27                	xor    ah,BYTE PTR [rdi]
    c231:	00 00                	add    BYTE PTR [rax],al
    c233:	30 27                	xor    BYTE PTR [rdi],ah
    c235:	00 00                	add    BYTE PTR [rax],al
    c237:	07                   	(bad)
    c238:	42 31 00             	rex.X xor DWORD PTR [rax],eax
    c23b:	00 00                	add    BYTE PTR [rax],al
    c23d:	00 00                	add    BYTE PTR [rax],al
    c23f:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    c242:	00 00                	add    BYTE PTR [rax],al
    c244:	03 01                	add    eax,DWORD PTR [rcx]
    c246:	55                   	push   rbp
    c247:	09 03                	or     DWORD PTR [rbx],eax
    c249:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    c24c:	00 00                	add    BYTE PTR [rax],al
    c24e:	00 00                	add    BYTE PTR [rax],al
    c250:	00 00                	add    BYTE PTR [rax],al
    c252:	00 09                	add    BYTE PTR [rcx],cl
    c254:	f5                   	cmc
    c255:	52                   	push   rdx
    c256:	00 00                	add    BYTE PTR [rax],al
    c258:	42 31 00             	rex.X xor DWORD PTR [rax],eax
    c25b:	00 00                	add    BYTE PTR [rax],al
    c25d:	00 00                	add    BYTE PTR [rax],al
    c25f:	00 03                	add    BYTE PTR [rbx],al
    c261:	00 42 31             	add    BYTE PTR [rdx+0x31],al
    c264:	00 00                	add    BYTE PTR [rax],al
    c266:	00 00                	add    BYTE PTR [rax],al
    c268:	00 00                	add    BYTE PTR [rax],al
    c26a:	3b 00                	cmp    eax,DWORD PTR [rax]
    c26c:	00 00                	add    BYTE PTR [rax],al
    c26e:	00 00                	add    BYTE PTR [rax],al
    c270:	00 00                	add    BYTE PTR [rax],al
    c272:	2a 09                	sub    cl,BYTE PTR [rcx]
    c274:	a2 6e 00 00 05 37 53 	movabs ds:0x53370500006e,al
    c27b:	00 00 
    c27d:	41 27                	rex.B (bad)
    c27f:	00 00                	add    BYTE PTR [rax],al
    c281:	3f                   	(bad)
    c282:	27                   	(bad)
    c283:	00 00                	add    BYTE PTR [rax],al
    c285:	05 2b 53 00 00       	add    eax,0x532b
    c28a:	4d 27                	rex.WRB (bad)
    c28c:	00 00                	add    BYTE PTR [rax],al
    c28e:	4b 27                	rex.WXB (bad)
    c290:	00 00                	add    BYTE PTR [rax],al
    c292:	0b 1f                	or     ebx,DWORD PTR [rdi]
    c294:	53                   	push   rbx
    c295:	00 00                	add    BYTE PTR [rax],al
    c297:	0b 13                	or     edx,DWORD PTR [rbx]
    c299:	53                   	push   rbx
    c29a:	00 00                	add    BYTE PTR [rax],al
    c29c:	0b 07                	or     eax,DWORD PTR [rdi]
    c29e:	53                   	push   rbx
    c29f:	00 00                	add    BYTE PTR [rax],al
    c2a1:	15 43 53 00 00       	adc    eax,0x5343
    c2a6:	59                   	pop    rcx
    c2a7:	27                   	(bad)
    c2a8:	00 00                	add    BYTE PTR [rax],al
    c2aa:	55                   	push   rbp
    c2ab:	27                   	(bad)
    c2ac:	00 00                	add    BYTE PTR [rax],al
    c2ae:	0a 55 31             	or     dl,BYTE PTR [rbp+0x31]
    c2b1:	00 00                	add    BYTE PTR [rax],al
    c2b3:	00 00                	add    BYTE PTR [rax],al
    c2b5:	00 00                	add    BYTE PTR [rax],al
    c2b7:	ff                   	(bad)
    c2b8:	3c 00                	cmp    al,0x0
    c2ba:	00 66 6e             	add    BYTE PTR [rsi+0x6e],ah
    c2bd:	00 00                	add    BYTE PTR [rax],al
    c2bf:	03 01                	add    eax,DWORD PTR [rcx]
    c2c1:	55                   	push   rbp
    c2c2:	09 03                	or     DWORD PTR [rbx],eax
    c2c4:	d0 45 00             	rol    BYTE PTR [rbp+0x0],1
    c2c7:	00 00                	add    BYTE PTR [rax],al
    c2c9:	00 00                	add    BYTE PTR [rax],al
    c2cb:	00 03                	add    BYTE PTR [rbx],al
    c2cd:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c2d1:	b2 41                	mov    dl,0x41
    c2d3:	00 00                	add    BYTE PTR [rax],al
    c2d5:	00 00                	add    BYTE PTR [rax],al
    c2d7:	00 00                	add    BYTE PTR [rax],al
    c2d9:	00 0a                	add    BYTE PTR [rdx],cl
    c2db:	75 31                	jne    c30e <_end+0x62f6>
    c2dd:	00 00                	add    BYTE PTR [rax],al
    c2df:	00 00                	add    BYTE PTR [rax],al
    c2e1:	00 00                	add    BYTE PTR [rax],al
    c2e3:	95                   	xchg   ebp,eax
    c2e4:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c2e7:	8d 6e 00             	lea    ebp,[rsi+0x0]
    c2ea:	00 03                	add    BYTE PTR [rbx],al
    c2ec:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c2ef:	7d 00                	jge    c2f1 <_end+0x62d9>
    c2f1:	03 01                	add    eax,DWORD PTR [rcx]
    c2f3:	58                   	pop    rax
    c2f4:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c2f7:	03 01                	add    eax,DWORD PTR [rcx]
    c2f9:	59                   	pop    rcx
    c2fa:	05 91 9c 7f 94       	add    eax,0x947f9c91
    c2ff:	04 00                	add    al,0x0
    c301:	07                   	(bad)
    c302:	7d 31                	jge    c335 <_end+0x631d>
    c304:	00 00                	add    BYTE PTR [rax],al
    c306:	00 00                	add    BYTE PTR [rax],al
    c308:	00 00                	add    BYTE PTR [rax],al
    c30a:	4d 3c 00             	rex.WRB cmp al,0x0
    c30d:	00 03                	add    BYTE PTR [rbx],al
    c30f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c312:	7d 00                	jge    c314 <_end+0x62fc>
    c314:	00 00                	add    BYTE PTR [rax],al
    c316:	19 a6 73 00 00 7d    	sbb    DWORD PTR [rsi+0x7d000073],esp
    c31c:	31 00                	xor    DWORD PTR [rax],eax
    c31e:	00 00                	add    BYTE PTR [rax],al
    c320:	00 00                	add    BYTE PTR [rax],al
    c322:	00 02                	add    BYTE PTR [rdx],al
    c324:	00 7d 31             	add    BYTE PTR [rbp+0x31],bh
    c327:	00 00                	add    BYTE PTR [rax],al
    c329:	00 00                	add    BYTE PTR [rax],al
    c32b:	00 00                	add    BYTE PTR [rax],al
    c32d:	08 00                	or     BYTE PTR [rax],al
    c32f:	00 00                	add    BYTE PTR [rax],al
    c331:	00 00                	add    BYTE PTR [rax],al
    c333:	00 00                	add    BYTE PTR [rax],al
    c335:	01 2a                	add    DWORD PTR [rdx],ebp
    c337:	09 05 b4 73 00 00    	or     DWORD PTR [rip+0x73b4],eax        # 136f1 <_end+0xd6d9>
    c33d:	6a 27                	push   0x27
    c33f:	00 00                	add    BYTE PTR [rax],al
    c341:	68 27 00 00 07       	push   0x7000027
    c346:	85 31                	test   DWORD PTR [rcx],esi
    c348:	00 00                	add    BYTE PTR [rax],al
    c34a:	00 00                	add    BYTE PTR [rax],al
    c34c:	00 00                	add    BYTE PTR [rax],al
    c34e:	7a 77                	jp     c3c7 <_end+0x63af>
    c350:	00 00                	add    BYTE PTR [rax],al
    c352:	03 01                	add    eax,DWORD PTR [rcx]
    c354:	55                   	push   rbp
    c355:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c358:	00 00                	add    BYTE PTR [rax],al
    c35a:	00 16                	add    BYTE PTR [rsi],dl
    c35c:	85 31                	test   DWORD PTR [rcx],esi
    c35e:	00 00                	add    BYTE PTR [rax],al
    c360:	00 00                	add    BYTE PTR [rax],al
    c362:	00 00                	add    BYTE PTR [rax],al
    c364:	63 00                	movsxd eax,DWORD PTR [rax]
    c366:	00 00                	add    BYTE PTR [rax],al
    c368:	00 00                	add    BYTE PTR [rax],al
    c36a:	00 00                	add    BYTE PTR [rax],al
    c36c:	f2 70 00             	bnd jo c36f <_end+0x6357>
    c36f:	00 17                	add    BYTE PTR [rdi],dl
    c371:	cd 12                	int    0x12
    c373:	00 00                	add    BYTE PTR [rax],al
    c375:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c377:	23 42 00             	and    eax,DWORD PTR [rdx+0x0]
    c37a:	00 09                	add    BYTE PTR [rcx],cl
    c37c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c37d:	73 00                	jae    c37f <_end+0x6367>
    c37f:	00 85 31 00 00 00    	add    BYTE PTR [rbp+0x31],al
    c385:	00 00                	add    BYTE PTR [rax],al
    c387:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c38a:	85 31                	test   DWORD PTR [rcx],esi
    c38c:	00 00                	add    BYTE PTR [rax],al
    c38e:	00 00                	add    BYTE PTR [rax],al
    c390:	00 00                	add    BYTE PTR [rax],al
    c392:	08 00                	or     BYTE PTR [rax],al
    c394:	00 00                	add    BYTE PTR [rax],al
    c396:	00 00                	add    BYTE PTR [rax],al
    c398:	00 00                	add    BYTE PTR [rax],al
    c39a:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c39c:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	05 b4 73 00 00       	add    eax,0x73b4
    c3a5:	79 27                	jns    c3ce <_end+0x63b6>
    c3a7:	00 00                	add    BYTE PTR [rax],al
    c3a9:	77 27                	ja     c3d2 <_end+0x63ba>
    c3ab:	00 00                	add    BYTE PTR [rax],al
    c3ad:	07                   	(bad)
    c3ae:	8d 31                	lea    esi,[rcx]
    c3b0:	00 00                	add    BYTE PTR [rax],al
    c3b2:	00 00                	add    BYTE PTR [rax],al
    c3b4:	00 00                	add    BYTE PTR [rax],al
    c3b6:	7a 77                	jp     c42f <_end+0x6417>
    c3b8:	00 00                	add    BYTE PTR [rax],al
    c3ba:	03 01                	add    eax,DWORD PTR [rcx]
    c3bc:	55                   	push   rbp
    c3bd:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c3c0:	00 00                	add    BYTE PTR [rax],al
    c3c2:	09 a6 73 00 00 8d    	or     DWORD PTR [rsi-0x72ffff8d],esp
    c3c8:	31 00                	xor    DWORD PTR [rax],eax
    c3ca:	00 00                	add    BYTE PTR [rax],al
    c3cc:	00 00                	add    BYTE PTR [rax],al
    c3ce:	00 02                	add    BYTE PTR [rdx],al
    c3d0:	00 8d 31 00 00 00    	add    BYTE PTR [rbp+0x31],cl
    c3d6:	00 00                	add    BYTE PTR [rax],al
    c3d8:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c3db:	00 00                	add    BYTE PTR [rax],al
    c3dd:	00 00                	add    BYTE PTR [rax],al
    c3df:	00 00                	add    BYTE PTR [rax],al
    c3e1:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c3e3:	9c                   	pushf
    c3e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3e5:	00 00                	add    BYTE PTR [rax],al
    c3e7:	05 b4 73 00 00       	add    eax,0x73b4
    c3ec:	88 27                	mov    BYTE PTR [rdi],ah
    c3ee:	00 00                	add    BYTE PTR [rax],al
    c3f0:	86 27                	xchg   BYTE PTR [rdi],ah
    c3f2:	00 00                	add    BYTE PTR [rax],al
    c3f4:	07                   	(bad)
    c3f5:	99                   	cdq
    c3f6:	31 00                	xor    DWORD PTR [rax],eax
    c3f8:	00 00                	add    BYTE PTR [rax],al
    c3fa:	00 00                	add    BYTE PTR [rax],al
    c3fc:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    c3ff:	00 00                	add    BYTE PTR [rax],al
    c401:	03 01                	add    eax,DWORD PTR [rcx]
    c403:	55                   	push   rbp
    c404:	09 03                	or     DWORD PTR [rbx],eax
    c406:	01 42 00             	add    DWORD PTR [rdx+0x0],eax
    c409:	00 00                	add    BYTE PTR [rax],al
    c40b:	00 00                	add    BYTE PTR [rax],al
    c40d:	00 00                	add    BYTE PTR [rax],al
    c40f:	00 09                	add    BYTE PTR [rcx],cl
    c411:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c412:	73 00                	jae    c414 <_end+0x63fc>
    c414:	00 99 31 00 00 00    	add    BYTE PTR [rcx+0x31],bl
    c41a:	00 00                	add    BYTE PTR [rax],al
    c41c:	00 02                	add    BYTE PTR [rdx],al
    c41e:	00 99 31 00 00 00    	add    BYTE PTR [rcx+0x31],bl
    c424:	00 00                	add    BYTE PTR [rax],al
    c426:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c429:	00 00                	add    BYTE PTR [rax],al
    c42b:	00 00                	add    BYTE PTR [rax],al
    c42d:	00 00                	add    BYTE PTR [rax],al
    c42f:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c431:	ea                   	(bad)
    c432:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c433:	00 00                	add    BYTE PTR [rax],al
    c435:	05 b4 73 00 00       	add    eax,0x73b4
    c43a:	97                   	xchg   edi,eax
    c43b:	27                   	(bad)
    c43c:	00 00                	add    BYTE PTR [rax],al
    c43e:	95                   	xchg   ebp,eax
    c43f:	27                   	(bad)
    c440:	00 00                	add    BYTE PTR [rax],al
    c442:	07                   	(bad)
    c443:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    c444:	31 00                	xor    DWORD PTR [rax],eax
    c446:	00 00                	add    BYTE PTR [rax],al
    c448:	00 00                	add    BYTE PTR [rax],al
    c44a:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    c44d:	00 00                	add    BYTE PTR [rax],al
    c44f:	03 01                	add    eax,DWORD PTR [rcx]
    c451:	55                   	push   rbp
    c452:	09 03                	or     DWORD PTR [rbx],eax
    c454:	10 45 00             	adc    BYTE PTR [rbp+0x0],al
    c457:	00 00                	add    BYTE PTR [rax],al
    c459:	00 00                	add    BYTE PTR [rax],al
    c45b:	00 00                	add    BYTE PTR [rax],al
    c45d:	00 09                	add    BYTE PTR [rcx],cl
    c45f:	f5                   	cmc
    c460:	52                   	push   rdx
    c461:	00 00                	add    BYTE PTR [rax],al
    c463:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    c464:	31 00                	xor    DWORD PTR [rax],eax
    c466:	00 00                	add    BYTE PTR [rax],al
    c468:	00 00                	add    BYTE PTR [rax],al
    c46a:	00 03                	add    BYTE PTR [rbx],al
    c46c:	00 a5 31 00 00 00    	add    BYTE PTR [rbp+0x31],ah
    c472:	00 00                	add    BYTE PTR [rax],al
    c474:	00 3b                	add    BYTE PTR [rbx],bh
    c476:	00 00                	add    BYTE PTR [rax],al
    c478:	00 00                	add    BYTE PTR [rax],al
    c47a:	00 00                	add    BYTE PTR [rax],al
    c47c:	00 2b                	add    BYTE PTR [rbx],ch
    c47e:	09 ad 70 00 00 05    	or     DWORD PTR [rbp+0x5000070],ebp
    c484:	37                   	(bad)
    c485:	53                   	push   rbx
    c486:	00 00                	add    BYTE PTR [rax],al
    c488:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c489:	27                   	(bad)
    c48a:	00 00                	add    BYTE PTR [rax],al
    c48c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    c48d:	27                   	(bad)
    c48e:	00 00                	add    BYTE PTR [rax],al
    c490:	05 2b 53 00 00       	add    eax,0x532b
    c495:	b2 27                	mov    dl,0x27
    c497:	00 00                	add    BYTE PTR [rax],al
    c499:	b0 27                	mov    al,0x27
    c49b:	00 00                	add    BYTE PTR [rax],al
    c49d:	0b 1f                	or     ebx,DWORD PTR [rdi]
    c49f:	53                   	push   rbx
    c4a0:	00 00                	add    BYTE PTR [rax],al
    c4a2:	0b 13                	or     edx,DWORD PTR [rbx]
    c4a4:	53                   	push   rbx
    c4a5:	00 00                	add    BYTE PTR [rax],al
    c4a7:	0b 07                	or     eax,DWORD PTR [rdi]
    c4a9:	53                   	push   rbx
    c4aa:	00 00                	add    BYTE PTR [rax],al
    c4ac:	15 43 53 00 00       	adc    eax,0x5343
    c4b1:	be 27 00 00 ba       	mov    esi,0xba000027
    c4b6:	27                   	(bad)
    c4b7:	00 00                	add    BYTE PTR [rax],al
    c4b9:	0a b8 31 00 00 00    	or     bh,BYTE PTR [rax+0x31]
    c4bf:	00 00                	add    BYTE PTR [rax],al
    c4c1:	00 ff                	add    bh,bh
    c4c3:	3c 00                	cmp    al,0x0
    c4c5:	00 71 70             	add    BYTE PTR [rcx+0x70],dh
    c4c8:	00 00                	add    BYTE PTR [rax],al
    c4ca:	03 01                	add    eax,DWORD PTR [rcx]
    c4cc:	55                   	push   rbp
    c4cd:	09 03                	or     DWORD PTR [rbx],eax
    c4cf:	05 42 00 00 00       	add    eax,0x42
    c4d4:	00 00                	add    BYTE PTR [rax],al
    c4d6:	00 03                	add    BYTE PTR [rbx],al
    c4d8:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c4dc:	b2 41                	mov    dl,0x41
    c4de:	00 00                	add    BYTE PTR [rax],al
    c4e0:	00 00                	add    BYTE PTR [rax],al
    c4e2:	00 00                	add    BYTE PTR [rax],al
    c4e4:	00 0a                	add    BYTE PTR [rdx],cl
    c4e6:	d8 31                	fdiv   DWORD PTR [rcx]
    c4e8:	00 00                	add    BYTE PTR [rax],al
    c4ea:	00 00                	add    BYTE PTR [rax],al
    c4ec:	00 00                	add    BYTE PTR [rax],al
    c4ee:	95                   	xchg   ebp,eax
    c4ef:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c4f2:	98                   	cwde
    c4f3:	70 00                	jo     c4f5 <_end+0x64dd>
    c4f5:	00 03                	add    BYTE PTR [rbx],al
    c4f7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c4fa:	7d 00                	jge    c4fc <_end+0x64e4>
    c4fc:	03 01                	add    eax,DWORD PTR [rcx]
    c4fe:	58                   	pop    rax
    c4ff:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c502:	03 01                	add    eax,DWORD PTR [rcx]
    c504:	59                   	pop    rcx
    c505:	05 91 9c 7f 94       	add    eax,0x947f9c91
    c50a:	04 00                	add    al,0x0
    c50c:	07                   	(bad)
    c50d:	e0 31                	loopne c540 <_end+0x6528>
    c50f:	00 00                	add    BYTE PTR [rax],al
    c511:	00 00                	add    BYTE PTR [rax],al
    c513:	00 00                	add    BYTE PTR [rax],al
    c515:	4d 3c 00             	rex.WRB cmp al,0x0
    c518:	00 03                	add    BYTE PTR [rbx],al
    c51a:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c51d:	7d 00                	jge    c51f <_end+0x6507>
    c51f:	00 00                	add    BYTE PTR [rax],al
    c521:	19 a6 73 00 00 e0    	sbb    DWORD PTR [rsi-0x1fffff8d],esp
    c527:	31 00                	xor    DWORD PTR [rax],eax
    c529:	00 00                	add    BYTE PTR [rax],al
    c52b:	00 00                	add    BYTE PTR [rax],al
    c52d:	00 02                	add    BYTE PTR [rdx],al
    c52f:	00 e0                	add    al,ah
    c531:	31 00                	xor    DWORD PTR [rax],eax
    c533:	00 00                	add    BYTE PTR [rax],al
    c535:	00 00                	add    BYTE PTR [rax],al
    c537:	00 08                	add    BYTE PTR [rax],cl
    c539:	00 00                	add    BYTE PTR [rax],al
    c53b:	00 00                	add    BYTE PTR [rax],al
    c53d:	00 00                	add    BYTE PTR [rax],al
    c53f:	00 01                	add    BYTE PTR [rcx],al
    c541:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c543:	05 b4 73 00 00       	add    eax,0x73b4
    c548:	cf                   	iret
    c549:	27                   	(bad)
    c54a:	00 00                	add    BYTE PTR [rax],al
    c54c:	cd 27                	int    0x27
    c54e:	00 00                	add    BYTE PTR [rax],al
    c550:	07                   	(bad)
    c551:	e8 31 00 00 00       	call   c587 <_end+0x656f>
    c556:	00 00                	add    BYTE PTR [rax],al
    c558:	00 7a 77             	add    BYTE PTR [rdx+0x77],bh
    c55b:	00 00                	add    BYTE PTR [rax],al
    c55d:	03 01                	add    eax,DWORD PTR [rcx]
    c55f:	55                   	push   rbp
    c560:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c563:	00 00                	add    BYTE PTR [rax],al
    c565:	00 0a                	add    BYTE PTR [rdx],cl
    c567:	88 2d 00 00 00 00    	mov    BYTE PTR [rip+0x0],ch        # c56d <_end+0x6555>
    c56d:	00 00                	add    BYTE PTR [rax],al
    c56f:	63 44 00 00          	movsxd eax,DWORD PTR [rax+rax*1+0x0]
    c573:	18 71 00             	sbb    BYTE PTR [rcx+0x0],dh
    c576:	00 03                	add    BYTE PTR [rbx],al
    c578:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c57b:	03 0c 40             	add    ecx,DWORD PTR [rax+rax*2]
    c57e:	00 00                	add    BYTE PTR [rax],al
    c580:	00 00                	add    BYTE PTR [rax],al
    c582:	00 00                	add    BYTE PTR [rax],al
    c584:	03 01                	add    eax,DWORD PTR [rcx]
    c586:	54                   	push   rsp
    c587:	03 91 b0 7f 00 0a    	add    edx,DWORD PTR [rcx+0xa007fb0]
    c58d:	9d                   	popf
    c58e:	2d 00 00 00 00       	sub    eax,0x0
    c593:	00 00                	add    BYTE PTR [rax],al
    c595:	44                   	rex.R
    c596:	44 00 00             	add    BYTE PTR [rax],r8b
    c599:	30 71 00             	xor    BYTE PTR [rcx+0x0],dh
    c59c:	00 03                	add    BYTE PTR [rbx],al
    c59e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5a1:	7f 00                	jg     c5a3 <_end+0x658b>
    c5a3:	00 0a                	add    BYTE PTR [rdx],cl
    c5a5:	ab                   	stos   DWORD PTR es:[rdi],eax
    c5a6:	2d 00 00 00 00       	sub    eax,0x0
    c5ab:	00 00                	add    BYTE PTR [rax],al
    c5ad:	20 44 00 00          	and    BYTE PTR [rax+rax*1+0x0],al
    c5b1:	4e 71 00             	rex.WRX jno c5b4 <_end+0x659c>
    c5b4:	00 03                	add    BYTE PTR [rbx],al
    c5b6:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5b9:	7f 00                	jg     c5bb <_end+0x65a3>
    c5bb:	03 01                	add    eax,DWORD PTR [rcx]
    c5bd:	54                   	push   rsp
    c5be:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    c5c2:	0a bd 2d 00 00 00    	or     bh,BYTE PTR [rbp+0x2d]
    c5c8:	00 00                	add    BYTE PTR [rax],al
    c5ca:	00 05 44 00 00 73    	add    BYTE PTR [rip+0x73000044],al        # 7300c614 <_end+0x730065fc>
    c5d0:	71 00                	jno    c5d2 <_end+0x65ba>
    c5d2:	00 03                	add    BYTE PTR [rbx],al
    c5d4:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5d7:	73 00                	jae    c5d9 <_end+0x65c1>
    c5d9:	03 01                	add    eax,DWORD PTR [rcx]
    c5db:	54                   	push   rsp
    c5dc:	09 03                	or     DWORD PTR [rbx],eax
    c5de:	c2 41 00             	ret    0x41
    c5e1:	00 00                	add    BYTE PTR [rax],al
    c5e3:	00 00                	add    BYTE PTR [rax],al
    c5e5:	00 00                	add    BYTE PTR [rax],al
    c5e7:	0a d4                	or     dl,ah
    c5e9:	2d 00 00 00 00       	sub    eax,0x0
    c5ee:	00 00                	add    BYTE PTR [rax],al
    c5f0:	05 44 00 00 98       	add    eax,0x98000044
    c5f5:	71 00                	jno    c5f7 <_end+0x65df>
    c5f7:	00 03                	add    BYTE PTR [rbx],al
    c5f9:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5fc:	73 00                	jae    c5fe <_end+0x65e6>
    c5fe:	03 01                	add    eax,DWORD PTR [rcx]
    c600:	54                   	push   rsp
    c601:	09 03                	or     DWORD PTR [rbx],eax
    c603:	be 41 00 00 00       	mov    esi,0x41
    c608:	00 00                	add    BYTE PTR [rax],al
    c60a:	00 00                	add    BYTE PTR [rax],al
    c60c:	0a eb                	or     ch,bl
    c60e:	2d 00 00 00 00       	sub    eax,0x0
    c613:	00 00                	add    BYTE PTR [rax],al
    c615:	05 44 00 00 bd       	add    eax,0xbd000044
    c61a:	71 00                	jno    c61c <_end+0x6604>
    c61c:	00 03                	add    BYTE PTR [rbx],al
    c61e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c621:	73 00                	jae    c623 <_end+0x660b>
    c623:	03 01                	add    eax,DWORD PTR [rcx]
    c625:	54                   	push   rsp
    c626:	09 03                	or     DWORD PTR [rbx],eax
    c628:	c8 41 00 00          	enter  0x41,0x0
    c62c:	00 00                	add    BYTE PTR [rax],al
    c62e:	00 00                	add    BYTE PTR [rax],al
    c630:	00 0a                	add    BYTE PTR [rdx],cl
    c632:	02 2e                	add    ch,BYTE PTR [rsi]
    c634:	00 00                	add    BYTE PTR [rax],al
    c636:	00 00                	add    BYTE PTR [rax],al
    c638:	00 00                	add    BYTE PTR [rax],al
    c63a:	05 44 00 00 e2       	add    eax,0xe2000044
    c63f:	71 00                	jno    c641 <_end+0x6629>
    c641:	00 03                	add    BYTE PTR [rbx],al
    c643:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c646:	73 00                	jae    c648 <_end+0x6630>
    c648:	03 01                	add    eax,DWORD PTR [rcx]
    c64a:	54                   	push   rsp
    c64b:	09 03                	or     DWORD PTR [rbx],eax
    c64d:	d8 41 00             	fadd   DWORD PTR [rcx+0x0]
    c650:	00 00                	add    BYTE PTR [rax],al
    c652:	00 00                	add    BYTE PTR [rax],al
    c654:	00 00                	add    BYTE PTR [rax],al
    c656:	0a 19                	or     bl,BYTE PTR [rcx]
    c658:	2e 00 00             	cs add BYTE PTR [rax],al
    c65b:	00 00                	add    BYTE PTR [rax],al
    c65d:	00 00                	add    BYTE PTR [rax],al
    c65f:	05 44 00 00 07       	add    eax,0x7000044
    c664:	72 00                	jb     c666 <_end+0x664e>
    c666:	00 03                	add    BYTE PTR [rbx],al
    c668:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c66b:	73 00                	jae    c66d <_end+0x6655>
    c66d:	03 01                	add    eax,DWORD PTR [rcx]
    c66f:	54                   	push   rsp
    c670:	09 03                	or     DWORD PTR [rbx],eax
    c672:	f9                   	stc
    c673:	41 00 00             	add    BYTE PTR [r8],al
    c676:	00 00                	add    BYTE PTR [rax],al
    c678:	00 00                	add    BYTE PTR [rax],al
    c67a:	00 0a                	add    BYTE PTR [rdx],cl
    c67c:	30 2e                	xor    BYTE PTR [rsi],ch
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	00 00                	add    BYTE PTR [rax],al
    c682:	00 00                	add    BYTE PTR [rax],al
    c684:	05 44 00 00 2c       	add    eax,0x2c000044
    c689:	72 00                	jb     c68b <_end+0x6673>
    c68b:	00 03                	add    BYTE PTR [rbx],al
    c68d:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c690:	73 00                	jae    c692 <_end+0x667a>
    c692:	03 01                	add    eax,DWORD PTR [rcx]
    c694:	54                   	push   rsp
    c695:	09 03                	or     DWORD PTR [rbx],eax
    c697:	01 42 00             	add    DWORD PTR [rdx+0x0],eax
    c69a:	00 00                	add    BYTE PTR [rax],al
    c69c:	00 00                	add    BYTE PTR [rax],al
    c69e:	00 00                	add    BYTE PTR [rax],al
    c6a0:	0a 4a 2e             	or     cl,BYTE PTR [rdx+0x2e]
    c6a3:	00 00                	add    BYTE PTR [rax],al
    c6a5:	00 00                	add    BYTE PTR [rax],al
    c6a7:	00 00                	add    BYTE PTR [rax],al
    c6a9:	05 44 00 00 4a       	add    eax,0x4a000044
    c6ae:	72 00                	jb     c6b0 <_end+0x6698>
    c6b0:	00 03                	add    BYTE PTR [rbx],al
    c6b2:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c6b5:	73 00                	jae    c6b7 <_end+0x669f>
    c6b7:	03 01                	add    eax,DWORD PTR [rcx]
    c6b9:	54                   	push   rsp
    c6ba:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c6bd:	00 0a                	add    BYTE PTR [rdx],cl
    c6bf:	61                   	(bad)
    c6c0:	2e 00 00             	cs add BYTE PTR [rax],al
    c6c3:	00 00                	add    BYTE PTR [rax],al
    c6c5:	00 00                	add    BYTE PTR [rax],al
    c6c7:	05 44 00 00 6f       	add    eax,0x6f000044
    c6cc:	72 00                	jb     c6ce <_end+0x66b6>
    c6ce:	00 03                	add    BYTE PTR [rbx],al
    c6d0:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c6d3:	73 00                	jae    c6d5 <_end+0x66bd>
    c6d5:	03 01                	add    eax,DWORD PTR [rcx]
    c6d7:	54                   	push   rsp
    c6d8:	09 03                	or     DWORD PTR [rbx],eax
    c6da:	32 42 00             	xor    al,BYTE PTR [rdx+0x0]
    c6dd:	00 00                	add    BYTE PTR [rax],al
    c6df:	00 00                	add    BYTE PTR [rax],al
    c6e1:	00 00                	add    BYTE PTR [rax],al
    c6e3:	0a 73 2e             	or     dh,BYTE PTR [rbx+0x2e]
    c6e6:	00 00                	add    BYTE PTR [rax],al
    c6e8:	00 00                	add    BYTE PTR [rax],al
    c6ea:	00 00                	add    BYTE PTR [rax],al
    c6ec:	3d 43 00 00 89       	cmp    eax,0x89000043
    c6f1:	72 00                	jb     c6f3 <_end+0x66db>
    c6f3:	00 03                	add    BYTE PTR [rbx],al
    c6f5:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    c6f8:	91                   	xchg   ecx,eax
    c6f9:	a0 7f 06 00 0a 7b 2e 	movabs al,ds:0x2e7b0a00067f
    c700:	00 00 
    c702:	00 00                	add    BYTE PTR [rax],al
    c704:	00 00                	add    BYTE PTR [rax],al
    c706:	3d 43 00 00 a1       	cmp    eax,0xa1000043
    c70b:	72 00                	jb     c70d <_end+0x66f5>
    c70d:	00 03                	add    BYTE PTR [rbx],al
    c70f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c712:	76 00                	jbe    c714 <_end+0x66fc>
    c714:	00 26                	add    BYTE PTR [rsi],ah
    c716:	c0 34 00 00          	shl    BYTE PTR [rax+rax*1],0x0
    c71a:	00 00                	add    BYTE PTR [rax],al
    c71c:	00 00                	add    BYTE PTR [rax],al
    c71e:	4c 77 00             	rex.WR ja c721 <_end+0x6709>
    c721:	00 0a                	add    BYTE PTR [rdx],cl
    c723:	df 34 00             	fbstp  TBYTE PTR [rax+rax*1]
    c726:	00 00                	add    BYTE PTR [rax],al
    c728:	00 00                	add    BYTE PTR [rax],al
    c72a:	00 87 44 00 00 ec    	add    BYTE PTR [rdi-0x13ffffbc],al
    c730:	72 00                	jb     c732 <_end+0x671a>
    c732:	00 03                	add    BYTE PTR [rbx],al
    c734:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c737:	03 b4 41 00 00 00 00 	add    esi,DWORD PTR [rcx+rax*2+0x0]
    c73e:	00 00                	add    BYTE PTR [rax],al
    c740:	03 01                	add    eax,DWORD PTR [rcx]
    c742:	54                   	push   rsp
    c743:	09 03                	or     DWORD PTR [rbx],eax
    c745:	bd 40 00 00 00       	mov    ebp,0x40
    c74a:	00 00                	add    BYTE PTR [rax],al
    c74c:	00 03                	add    BYTE PTR [rbx],al
    c74e:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    c751:	43 03 01             	rex.XB add eax,DWORD PTR [r9]
    c754:	52                   	push   rdx
    c755:	09 03                	or     DWORD PTR [rbx],eax
    c757:	b0 44                	mov    al,0x44
    c759:	00 00                	add    BYTE PTR [rax],al
    c75b:	00 00                	add    BYTE PTR [rax],al
    c75d:	00 00                	add    BYTE PTR [rax],al
    c75f:	00 07                	add    BYTE PTR [rdi],al
    c761:	fe                   	(bad)
    c762:	34 00                	xor    al,0x0
    c764:	00 00                	add    BYTE PTR [rax],al
    c766:	00 00                	add    BYTE PTR [rax],al
    c768:	00 87 44 00 00 03    	add    BYTE PTR [rdi+0x3000044],al
    c76e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c771:	03 b4 40 00 00 00 00 	add    esi,DWORD PTR [rax+rax*2+0x0]
    c778:	00 00                	add    BYTE PTR [rax],al
    c77a:	03 01                	add    eax,DWORD PTR [rcx]
    c77c:	54                   	push   rsp
    c77d:	09 03                	or     DWORD PTR [rbx],eax
    c77f:	bd 40 00 00 00       	mov    ebp,0x40
    c784:	00 00                	add    BYTE PTR [rax],al
    c786:	00 03                	add    BYTE PTR [rbx],al
    c788:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    c78b:	42 03 01             	rex.X add eax,DWORD PTR [rcx]
    c78e:	52                   	push   rdx
    c78f:	09 03                	or     DWORD PTR [rbx],eax
    c791:	b0 44                	mov    al,0x44
	...
    c79b:	22 ee                	and    ch,dh
    c79d:	22 00                	and    al,BYTE PTR [rax]
    c79f:	00 37                	add    BYTE PTR [rdi],dh
    c7a1:	73 00                	jae    c7a3 <_end+0x678b>
    c7a3:	00 23                	add    BYTE PTR [rbx],ah
    c7a5:	8a 21                	mov    ah,BYTE PTR [rcx]
    c7a7:	00 00                	add    BYTE PTR [rax],al
    c7a9:	3a 00                	cmp    al,BYTE PTR [rax]
    c7ab:	13 27                	adc    esp,DWORD PTR [rdi]
    c7ad:	73 00                	jae    c7af <_end+0x6797>
    c7af:	00 30                	add    BYTE PTR [rax],dh
    c7b1:	c5 18 00             	(bad)
    c7b4:	00 4a 73             	add    BYTE PTR [rdx+0x73],cl
    c7b7:	00 00                	add    BYTE PTR [rax],al
    c7b9:	03 54 73 00          	add    edx,DWORD PTR [rbx+rsi*2+0x0]
    c7bd:	00 31                	add    BYTE PTR [rcx],dh
    c7bf:	c6                   	(bad)
    c7c0:	1e                   	(bad)
    c7c1:	00 00                	add    BYTE PTR [rax],al
    c7c3:	c5 3f 00             	(bad)
    c7c6:	00 00                	add    BYTE PTR [rax],al
    c7c8:	30 59 1a             	xor    BYTE PTR [rcx+0x1a],bl
    c7cb:	00 00                	add    BYTE PTR [rax],al
    c7cd:	6b 73 00 00          	imul   esi,DWORD PTR [rbx+0x0],0x0
    c7d1:	02 81 73 00 00 11    	add    al,BYTE PTR [rcx+0x11000073]
    c7d7:	7c 19                	jl     c7f2 <_end+0x67da>
    c7d9:	00 00                	add    BYTE PTR [rax],al
    c7db:	b2 21                	mov    dl,0x21
    c7dd:	00 00                	add    BYTE PTR [rax],al
    c7df:	31 c6                	xor    esi,eax
    c7e1:	1e                   	(bad)
    c7e2:	00 00                	add    BYTE PTR [rax],al
    c7e4:	b1 3f                	mov    cl,0x3f
    c7e6:	00 00                	add    BYTE PTR [rax],al
    c7e8:	2d c3 16 00 00       	sub    eax,0x16c3
    c7ed:	3d 02 2d a9 44       	cmp    eax,0x44a92d02
    c7f2:	00 00                	add    BYTE PTR [rax],al
    c7f4:	00 5c 54 73          	add    BYTE PTR [rsp+rdx*2+0x73],bl
    c7f8:	00 00                	add    BYTE PTR [rax],al
    c7fa:	34 0f                	xor    al,0xf
    c7fc:	00 00                	add    BYTE PTR [rax],al
    c7fe:	9b                   	fwait
    c7ff:	73 00                	jae    c801 <_end+0x67e9>
    c801:	00 a6 73 00 00 11    	add    BYTE PTR [rsi+0x11000073],ah
    c807:	7c 19                	jl     c822 <_end+0x680a>
    c809:	00 00                	add    BYTE PTR [rax],al
    c80b:	b2 21                	mov    dl,0x21
    c80d:	00 00                	add    BYTE PTR [rax],al
    c80f:	0b 6b 73             	or     ebp,DWORD PTR [rbx+0x73]
    c812:	00 00                	add    BYTE PTR [rax],al
    c814:	0b 74 73 00          	or     esi,DWORD PTR [rbx+rsi*2+0x0]
    c818:	00 00                	add    BYTE PTR [rax],al
    c81a:	63 60 2e             	movsxd esp,DWORD PTR [rax+0x2e]
    c81d:	00 00                	add    BYTE PTR [rax],al
    c81f:	54                   	push   rsp
    c820:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c821:	21 00                	and    DWORD PTR [rax],eax
    c823:	00 c2                	add    dl,al
    c825:	73 00                	jae    c827 <_end+0x680f>
    c827:	00 1c b0             	add    BYTE PTR [rax+rsi*4],bl
    c82a:	0d 00 00 02 54       	or     eax,0x54020000
    c82f:	20 d8                	and    al,bl
    c831:	23 00                	and    eax,DWORD PTR [rax]
    c833:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    c836:	63 5f 2e             	movsxd ebx,DWORD PTR [rdi+0x2e]
    c839:	00 00                	add    BYTE PTR [rax],al
    c83b:	4d a6                	rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c83d:	21 00                	and    DWORD PTR [rax],eax
    c83f:	00 ea                	add    dl,ch
    c841:	73 00                	jae    c843 <_end+0x682b>
    c843:	00 1c 6d 2f 00 00 02 	add    BYTE PTR [rbp*2+0x200002f],bl
    c84a:	4d 1b 93 2c 00 00 1c 	sbb    r10,QWORD PTR [r11+0x1c00002c]
    c851:	b0 0d                	mov    al,0xd
    c853:	00 00                	add    BYTE PTR [rax],al
    c855:	02 4d 3c             	add    cl,BYTE PTR [rbp+0x3c]
    c858:	d8 23                	fsub   DWORD PTR [rbx]
    c85a:	00 00                	add    BYTE PTR [rax],al
    c85c:	24 00                	and    al,0x0
    c85e:	32 e1                	xor    ah,cl
    c860:	04 00                	add    al,0x0
    c862:	00 01                	add    BYTE PTR [rcx],al
    c864:	74 00                	je     c866 <_end+0x684e>
    c866:	00 5d 5f             	add    BYTE PTR [rbp+0x5f],bl
    c869:	5f                   	pop    rdi
    c86a:	78 00                	js     c86c <_end+0x6854>
    c86c:	03 b6 01 0e 35 00    	add    esi,DWORD PTR [rsi+0x350e01]
    c872:	00 00                	add    BYTE PTR [rax],al
    c874:	00 4e f5             	add    BYTE PTR [rsi-0xb],cl
    c877:	52                   	push   rdx
    c878:	00 00                	add    BYTE PTR [rax],al
    c87a:	30 23                	xor    BYTE PTR [rbx],ah
    c87c:	00 00                	add    BYTE PTR [rax],al
    c87e:	c0 2c 00 00          	shr    BYTE PTR [rax+rax*1],0x0
    c882:	00 00                	add    BYTE PTR [rax],al
    c884:	00 00                	add    BYTE PTR [rax],al
    c886:	62                   	(bad)
    c887:	00 00                	add    BYTE PTR [rax],al
    c889:	00 00                	add    BYTE PTR [rax],al
    c88b:	00 00                	add    BYTE PTR [rax],al
    c88d:	00 01                	add    BYTE PTR [rcx],al
    c88f:	9c                   	pushf
    c890:	c1 74 00 00 05       	shl    DWORD PTR [rax+rax*1+0x0],0x5
    c895:	07                   	(bad)
    c896:	53                   	push   rbx
    c897:	00 00                	add    BYTE PTR [rax],al
    c899:	e2 27                	loop   c8c2 <_end+0x68aa>
    c89b:	00 00                	add    BYTE PTR [rax],al
    c89d:	dc 27                	fsub   QWORD PTR [rdi]
    c89f:	00 00                	add    BYTE PTR [rax],al
    c8a1:	05 13 53 00 00       	add    eax,0x5313
    c8a6:	fd                   	std
    c8a7:	27                   	(bad)
    c8a8:	00 00                	add    BYTE PTR [rax],al
    c8aa:	fb                   	sti
    c8ab:	27                   	(bad)
    c8ac:	00 00                	add    BYTE PTR [rax],al
    c8ae:	05 1f 53 00 00       	add    eax,0x531f
    c8b3:	10 28                	adc    BYTE PTR [rax],ch
    c8b5:	00 00                	add    BYTE PTR [rax],al
    c8b7:	0a 28                	or     ch,BYTE PTR [rax]
    c8b9:	00 00                	add    BYTE PTR [rax],al
    c8bb:	05 2b 53 00 00       	add    eax,0x532b
    c8c0:	3b 28                	cmp    ebp,DWORD PTR [rax]
    c8c2:	00 00                	add    BYTE PTR [rax],al
    c8c4:	35 28 00 00 8f       	xor    eax,0x8f000028
    c8c9:	01 37                	add    DWORD PTR [rdi],esi
    c8cb:	53                   	push   rbx
    c8cc:	00 00                	add    BYTE PTR [rax],al
    c8ce:	02 91 00 15 43 53    	add    dl,BYTE PTR [rcx+0x53431500]
    c8d4:	00 00                	add    BYTE PTR [rax],al
    c8d6:	5a                   	pop    rdx
    c8d7:	28 00                	sub    BYTE PTR [rax],al
    c8d9:	00 54 28 00          	add    BYTE PTR [rax+rbp*1+0x0],dl
    c8dd:	00 0a                	add    BYTE PTR [rdx],cl
    c8df:	f2 2c 00             	repnz sub al,0x0
    c8e2:	00 00                	add    BYTE PTR [rax],al
    c8e4:	00 00                	add    BYTE PTR [rax],al
    c8e6:	00 ff                	add    bh,bh
    c8e8:	3c 00                	cmp    al,0x0
    c8ea:	00 89 74 00 00 03    	add    BYTE PTR [rcx+0x3000074],cl
    c8f0:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c8f4:	b2 41                	mov    dl,0x41
    c8f6:	00 00                	add    BYTE PTR [rax],al
    c8f8:	00 00                	add    BYTE PTR [rax],al
    c8fa:	00 00                	add    BYTE PTR [rax],al
    c8fc:	00 0a                	add    BYTE PTR [rdx],cl
    c8fe:	0c 2d                	or     al,0x2d
    c900:	00 00                	add    BYTE PTR [rax],al
    c902:	00 00                	add    BYTE PTR [rax],al
    c904:	00 00                	add    BYTE PTR [rax],al
    c906:	95                   	xchg   ebp,eax
    c907:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c90a:	b3 74                	mov    bl,0x74
    c90c:	00 00                	add    BYTE PTR [rax],al
    c90e:	03 01                	add    eax,DWORD PTR [rcx]
    c910:	55                   	push   rbp
    c911:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c914:	03 01                	add    eax,DWORD PTR [rcx]
    c916:	54                   	push   rsp
    c917:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    c91a:	03 01                	add    eax,DWORD PTR [rcx]
    c91c:	58                   	pop    rax
    c91d:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c920:	03 01                	add    eax,DWORD PTR [rcx]
    c922:	59                   	pop    rcx
    c923:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c926:	00 64 22 2d          	add    BYTE PTR [rdx+riz*1+0x2d],ah
    c92a:	00 00                	add    BYTE PTR [rax],al
    c92c:	00 00                	add    BYTE PTR [rax],al
    c92e:	00 00                	add    BYTE PTR [rax],al
    c930:	4d 3c 00             	rex.WRB cmp al,0x0
    c933:	00 00                	add    BYTE PTR [rax],al
    c935:	4e 29 46 00          	rex.WRX sub QWORD PTR [rsi+0x0],r8
    c939:	00 00                	add    BYTE PTR [rax],al
    c93b:	35 00 00 00 35       	xor    eax,0x35000000
    c940:	00 00                	add    BYTE PTR [rax],al
    c942:	00 00                	add    BYTE PTR [rax],al
    c944:	00 00                	add    BYTE PTR [rax],al
    c946:	5b                   	pop    rbx
    c947:	01 00                	add    DWORD PTR [rax],eax
    c949:	00 00                	add    BYTE PTR [rax],al
    c94b:	00 00                	add    BYTE PTR [rax],al
    c94d:	00 01                	add    BYTE PTR [rcx],al
    c94f:	9c                   	pushf
    c950:	ff 75 00             	push   QWORD PTR [rbp+0x0]
    c953:	00 05 3c 46 00 00    	add    BYTE PTR [rip+0x463c],al        # 10f95 <_end+0xaf7d>
    c959:	82                   	(bad)
    c95a:	28 00                	sub    BYTE PTR [rax],al
    c95c:	00 70 28             	add    BYTE PTR [rax+0x28],dh
    c95f:	00 00                	add    BYTE PTR [rax],al
    c961:	05 48 46 00 00       	add    eax,0x4648
    c966:	db 28                	fld    TBYTE PTR [rax]
    c968:	00 00                	add    BYTE PTR [rax],al
    c96a:	cb                   	retf
    c96b:	28 00                	sub    BYTE PTR [rax],al
    c96d:	00 05 54 46 00 00    	add    BYTE PTR [rip+0x4654],al        # 10fc7 <_end+0xafaf>
    c973:	33 29                	xor    ebp,DWORD PTR [rcx]
    c975:	00 00                	add    BYTE PTR [rax],al
    c977:	1d 29 00 00 15       	sbb    eax,0x15000029
    c97c:	69 46 00 00 a5 29 00 	imul   eax,DWORD PTR [rsi+0x0],0x29a500
    c983:	00 95 29 00 00 39    	add    BYTE PTR [rbp+0x39000029],dl
    c989:	74 46                	je     c9d1 <_end+0x69b9>
    c98b:	00 00                	add    BYTE PTR [rax],al
    c98d:	b5 03                	mov    ch,0x3
    c98f:	00 00                	add    BYTE PTR [rax],al
    c991:	2f                   	(bad)
    c992:	75 00                	jne    c994 <_end+0x697c>
    c994:	00 15 75 46 00 00    	add    BYTE PTR [rip+0x4675],dl        # 1100f <_end+0xaff7>
    c99a:	f9                   	stc
    c99b:	29 00                	sub    DWORD PTR [rax],eax
    c99d:	00 f5                	add    ch,dh
    c99f:	29 00                	sub    DWORD PTR [rax],eax
    c9a1:	00 00                	add    BYTE PTR [rax],al
    c9a3:	1e                   	(bad)
    c9a4:	ea                   	(bad)
    c9a5:	73 00                	jae    c9a7 <_end+0x698f>
    c9a7:	00 f5                	add    ch,dh
    c9a9:	35 00 00 00 00       	xor    eax,0x0
    c9ae:	00 00                	add    BYTE PTR [rax],al
    c9b0:	00 00                	add    BYTE PTR [rax],al
    c9b2:	c5 03 00             	(bad)
    c9b5:	00 b3 1e 63 75 00    	add    BYTE PTR [rbx+0x75631e],dh
    c9bb:	00 05 f3 73 00 00    	add    BYTE PTR [rip+0x73f3],al        # 13db4 <_end+0xdd9c>
    c9c1:	10 2a                	adc    BYTE PTR [rdx],ch
    c9c3:	00 00                	add    BYTE PTR [rax],al
    c9c5:	0a 2a                	or     ch,BYTE PTR [rdx]
    c9c7:	00 00                	add    BYTE PTR [rax],al
    c9c9:	26 3a 36             	es cmp dh,BYTE PTR [rsi]
    c9cc:	00 00                	add    BYTE PTR [rax],al
    c9ce:	00 00                	add    BYTE PTR [rax],al
    c9d0:	00 00                	add    BYTE PTR [rax],al
    c9d2:	43 77 00             	rex.XB ja c9d5 <_end+0x69bd>
    c9d5:	00 00                	add    BYTE PTR [rax],al
    c9d7:	09 29                	or     DWORD PTR [rcx],ebp
    c9d9:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c9dc:	3c 36                	cmp    al,0x36
    c9de:	00 00                	add    BYTE PTR [rax],al
    c9e0:	00 00                	add    BYTE PTR [rax],al
    c9e2:	00 00                	add    BYTE PTR [rax],al
    c9e4:	01 00                	add    DWORD PTR [rax],eax
    c9e6:	3c 36                	cmp    al,0x36
    c9e8:	00 00                	add    BYTE PTR [rax],al
    c9ea:	00 00                	add    BYTE PTR [rax],al
    c9ec:	00 00                	add    BYTE PTR [rax],al
    c9ee:	1f                   	(bad)
    c9ef:	00 00                	add    BYTE PTR [rax],al
    c9f1:	00 00                	add    BYTE PTR [rax],al
    c9f3:	00 00                	add    BYTE PTR [rax],al
    c9f5:	00 ac 08 e8 75 00 00 	add    BYTE PTR [rax+rcx*1+0x75e8],ch
    c9fc:	65 3c 46             	gs cmp al,0x46
    c9ff:	00 00                	add    BYTE PTR [rax],al
    ca01:	05 48 46 00 00       	add    eax,0x4648
    ca06:	2a 2a                	sub    ch,BYTE PTR [rdx]
    ca08:	00 00                	add    BYTE PTR [rax],al
    ca0a:	26 2a 00             	es sub al,BYTE PTR [rax]
    ca0d:	00 05 54 46 00 00    	add    BYTE PTR [rip+0x4654],al        # 11067 <_end+0xb04f>
    ca13:	40 2a 00             	rex sub al,BYTE PTR [rax]
    ca16:	00 3c 2a             	add    BYTE PTR [rdx+rbp*1],bh
    ca19:	00 00                	add    BYTE PTR [rax],al
    ca1b:	3a 69 46             	cmp    ch,BYTE PTR [rcx+0x46]
    ca1e:	00 00                	add    BYTE PTR [rax],al
    ca20:	07                   	(bad)
    ca21:	5b                   	pop    rbx
    ca22:	36 00 00             	ss add BYTE PTR [rax],al
    ca25:	00 00                	add    BYTE PTR [rax],al
    ca27:	00 00                	add    BYTE PTR [rax],al
    ca29:	87 44 00 00          	xchg   DWORD PTR [rax+rax*1+0x0],eax
    ca2d:	03 01                	add    eax,DWORD PTR [rcx]
    ca2f:	55                   	push   rbp
    ca30:	09 03                	or     DWORD PTR [rbx],eax
    ca32:	47                   	rex.RXB
    ca33:	41 00 00             	add    BYTE PTR [r8],al
    ca36:	00 00                	add    BYTE PTR [rax],al
    ca38:	00 00                	add    BYTE PTR [rax],al
    ca3a:	03 01                	add    eax,DWORD PTR [rcx]
    ca3c:	54                   	push   rsp
    ca3d:	09 03                	or     DWORD PTR [rbx],eax
    ca3f:	bd 40 00 00 00       	mov    ebp,0x40
    ca44:	00 00                	add    BYTE PTR [rax],al
    ca46:	00 03                	add    BYTE PTR [rbx],al
    ca48:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    ca4b:	08 ad 03 01 52 09    	or     BYTE PTR [rbp+0x9520103],ch
    ca51:	03 78 44             	add    edi,DWORD PTR [rax+0x44]
	...
    ca5c:	21 a0 35 00 00 00    	and    DWORD PTR [rax+0x35],esp
    ca62:	00 00                	add    BYTE PTR [rax],al
    ca64:	00 01                	add    BYTE PTR [rcx],al
    ca66:	30 21                	xor    BYTE PTR [rcx],ah
    ca68:	1b 36                	sbb    esi,DWORD PTR [rsi]
    ca6a:	00 00                	add    BYTE PTR [rax],al
    ca6c:	00 00                	add    BYTE PTR [rax],al
    ca6e:	00 00                	add    BYTE PTR [rax],al
    ca70:	01 30                	add    DWORD PTR [rax],esi
    ca72:	00 4e bc             	add    BYTE PTR [rsi-0x44],cl
    ca75:	45 00 00             	add    BYTE PTR [r8],r8b
    ca78:	b0 2f                	mov    al,0x2f
    ca7a:	00 00                	add    BYTE PTR [rax],al
    ca7c:	60                   	(bad)
    ca7d:	36 00 00             	ss add BYTE PTR [rax],al
    ca80:	00 00                	add    BYTE PTR [rax],al
    ca82:	00 00                	add    BYTE PTR [rax],al
    ca84:	1c 03                	sbb    al,0x3
    ca86:	00 00                	add    BYTE PTR [rax],al
    ca88:	00 00                	add    BYTE PTR [rax],al
    ca8a:	00 00                	add    BYTE PTR [rax],al
    ca8c:	01 9c 3a 77 00 00 05 	add    DWORD PTR [rdx+rdi*1+0x5000077],ebx
    ca93:	cf                   	iret
    ca94:	45 00 00             	add    BYTE PTR [r8],r8b
    ca97:	60                   	(bad)
    ca98:	2a 00                	sub    al,BYTE PTR [rax]
    ca9a:	00 54 2a 00          	add    BYTE PTR [rdx+rbp*1+0x0],dl
    ca9e:	00 05 db 45 00 00    	add    BYTE PTR [rip+0x45db],al        # 1107f <_end+0xb067>
    caa4:	a8 2a                	test   al,0x2a
    caa6:	00 00                	add    BYTE PTR [rax],al
    caa8:	94                   	xchg   esp,eax
    caa9:	2a 00                	sub    al,BYTE PTR [rax]
    caab:	00 15 f0 45 00 00    	add    BYTE PTR [rip+0x45f0],dl        # 110a1 <_end+0xb089>
    cab1:	0c 2b                	or     al,0x2b
    cab3:	00 00                	add    BYTE PTR [rax],al
    cab5:	fe                   	(bad)
    cab6:	2a 00                	sub    al,BYTE PTR [rax]
    cab8:	00 39                	add    BYTE PTR [rcx],bh
    caba:	fb                   	sti
    cabb:	45 00 00             	add    BYTE PTR [r8],r8b
    cabe:	d5 03 00 00          	{rex2 0x3} add BYTE PTR [r8],al
    cac2:	77 76                	ja     cb3a <_end+0x6b22>
    cac4:	00 00                	add    BYTE PTR [rax],al
    cac6:	15 fc 45 00 00       	adc    eax,0x45fc
    cacb:	59                   	pop    rcx
    cacc:	2b 00                	sub    eax,DWORD PTR [rax]
    cace:	00 4d 2b             	add    BYTE PTR [rbp+0x2b],cl
    cad1:	00 00                	add    BYTE PTR [rax],al
    cad3:	4d 05 46 00 00 e5    	rex.WRB add rax,0xffffffffe5000046
    cad9:	03 00                	add    eax,DWORD PTR [rax]
    cadb:	00 15 06 46 00 00    	add    BYTE PTR [rip+0x4606],dl        # 110e7 <_end+0xb0cf>
    cae1:	8f                   	(bad)
    cae2:	2b 00                	sub    eax,DWORD PTR [rax]
    cae4:	00 89 2b 00 00 00    	add    BYTE PTR [rcx+0x2b],cl
    caea:	00 1e                	add    BYTE PTR [rsi],bl
    caec:	ea                   	(bad)
    caed:	73 00                	jae    caef <_end+0x6ad7>
    caef:	00 f9                	add    cl,bh
    caf1:	38 00                	cmp    BYTE PTR [rax],al
    caf3:	00 00                	add    BYTE PTR [rax],al
    caf5:	00 00                	add    BYTE PTR [rax],al
    caf7:	00 00                	add    BYTE PTR [rax],al
    caf9:	00 0e                	add    BYTE PTR [rsi],cl
    cafb:	04 00                	add    al,0x0
    cafd:	00 c0                	add    al,al
    caff:	1e                   	(bad)
    cb00:	ab                   	stos   DWORD PTR es:[rdi],eax
    cb01:	76 00                	jbe    cb03 <_end+0x6aeb>
    cb03:	00 05 f3 73 00 00    	add    BYTE PTR [rip+0x73f3],al        # 13efc <_end+0xdee4>
    cb09:	d5 2b 00 00          	{rex2 0x2b} add BYTE PTR [r8],al
    cb0d:	cf                   	iret
    cb0e:	2b 00                	sub    eax,DWORD PTR [rax]
    cb10:	00 64 5d 39          	add    BYTE PTR [rbp+rbx*2+0x39],ah
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	00 00                	add    BYTE PTR [rax],al
    cb1a:	43 77 00             	rex.XB ja cb1d <_end+0x6b05>
    cb1d:	00 00                	add    BYTE PTR [rax],al
    cb1f:	09 bc 45 00 00 5d 39 	or     DWORD PTR [rbp+rax*2+0x395d0000],edi
    cb26:	00 00                	add    BYTE PTR [rax],al
    cb28:	00 00                	add    BYTE PTR [rax],al
    cb2a:	00 00                	add    BYTE PTR [rax],al
    cb2c:	01 00                	add    DWORD PTR [rax],eax
    cb2e:	5d                   	pop    rbp
    cb2f:	39 00                	cmp    DWORD PTR [rax],eax
    cb31:	00 00                	add    BYTE PTR [rax],al
    cb33:	00 00                	add    BYTE PTR [rax],al
    cb35:	00 1f                	add    BYTE PTR [rdi],bl
    cb37:	00 00                	add    BYTE PTR [rax],al
    cb39:	00 00                	add    BYTE PTR [rax],al
    cb3b:	00 00                	add    BYTE PTR [rax],al
    cb3d:	00 b8 07 23 77 00    	add    BYTE PTR [rax+0x772307],bh
    cb43:	00 65 cf             	add    BYTE PTR [rbp-0x31],ah
    cb46:	45 00 00             	add    BYTE PTR [r8],r8b
    cb49:	05 db 45 00 00       	add    eax,0x45db
    cb4e:	ef                   	out    dx,eax
    cb4f:	2b 00                	sub    eax,DWORD PTR [rax]
    cb51:	00 eb                	add    bl,ch
    cb53:	2b 00                	sub    eax,DWORD PTR [rax]
    cb55:	00 3a                	add    BYTE PTR [rdx],bh
    cb57:	f0 45 00 00          	lock add BYTE PTR [r8],r8b
    cb5b:	07                   	(bad)
    cb5c:	7c 39                	jl     cb97 <_end+0x6b7f>
    cb5e:	00 00                	add    BYTE PTR [rax],al
    cb60:	00 00                	add    BYTE PTR [rax],al
    cb62:	00 00                	add    BYTE PTR [rax],al
    cb64:	87 44 00 00          	xchg   DWORD PTR [rax+rax*1+0x0],eax
    cb68:	03 01                	add    eax,DWORD PTR [rcx]
    cb6a:	55                   	push   rbp
    cb6b:	09 03                	or     DWORD PTR [rbx],eax
    cb6d:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    cb70:	00 00                	add    BYTE PTR [rax],al
    cb72:	00 00                	add    BYTE PTR [rax],al
    cb74:	00 03                	add    BYTE PTR [rbx],al
    cb76:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    cb7a:	bd 40 00 00 00       	mov    ebp,0x40
    cb7f:	00 00                	add    BYTE PTR [rax],al
    cb81:	00 03                	add    BYTE PTR [rbx],al
    cb83:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    cb86:	08 b9 03 01 52 09    	or     BYTE PTR [rcx+0x9520103],bh
    cb8c:	03 30                	add    esi,DWORD PTR [rax]
    cb8e:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    cb91:	00 00                	add    BYTE PTR [rax],al
    cb93:	00 00                	add    BYTE PTR [rax],al
    cb95:	00 00                	add    BYTE PTR [rax],al
    cb97:	21 f6                	and    esi,esi
    cb99:	37                   	(bad)
    cb9a:	00 00                	add    BYTE PTR [rax],al
    cb9c:	00 00                	add    BYTE PTR [rax],al
    cb9e:	00 00                	add    BYTE PTR [rax],al
    cba0:	01 30                	add    DWORD PTR [rax],esi
    cba2:	21 3b                	and    DWORD PTR [rbx],edi
    cba4:	39 00                	cmp    DWORD PTR [rax],eax
    cba6:	00 00                	add    BYTE PTR [rax],al
    cba8:	00 00                	add    BYTE PTR [rax],al
    cbaa:	00 01                	add    BYTE PTR [rcx],al
    cbac:	30 00                	xor    BYTE PTR [rax],al
    cbae:	3b 5a 1d             	cmp    ebx,DWORD PTR [rdx+0x1d]
    cbb1:	00 00                	add    BYTE PTR [rax],al
    cbb3:	50                   	push   rax
    cbb4:	1d 00 00 3b 2a       	sbb    eax,0x2a3b0000
    cbb9:	23 00                	and    eax,DWORD PTR [rax]
    cbbb:	00 09                	add    BYTE PTR [rcx],cl
    cbbd:	1d 00 00 3b 2e       	sbb    eax,0x2e3b0000
    cbc2:	07                   	(bad)
    cbc3:	00 00                	add    BYTE PTR [rax],al
    cbc5:	2e 07                	cs (bad)
    cbc7:	00 00                	add    BYTE PTR [rax],al
    cbc9:	27                   	(bad)
    cbca:	23 9e 21 0a 3d 3d    	and    ebx,DWORD PTR [rsi+0x3d3d0a21]
    cbd0:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cbd5:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cbda:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cbdf:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cbe4:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cbe9:	3d 3d 3d 0a 00       	cmp    eax,0xa3d3d
    cbee:	3b 6a 23             	cmp    ebp,DWORD PTR [rdx+0x23]
    cbf1:	00 00                	add    BYTE PTR [rax],al
    cbf3:	60                   	(bad)
    cbf4:	23 00                	and    eax,DWORD PTR [rax]
    cbf6:	00 27                	add    BYTE PTR [rdi],ah
    cbf8:	09 9e 07 63 72 63    	or     DWORD PTR [rsi+0x63726307],ebx
    cbfe:	33 32                	xor    esi,DWORD PTR [rdx]
    cc00:	0a 00                	or     al,BYTE PTR [rax]
    cc02:	27                   	(bad)
    cc03:	22 9e 20 2d 2d 2d    	and    bl,BYTE PTR [rsi+0x2d2d2d20]
    cc09:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cc0e:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cc13:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cc18:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cc1d:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cc22:	2d 2d 0a 00 27       	sub    eax,0x27000a2d
    cc27:	22 9e 20 3d 3d 3d    	and    bl,BYTE PTR [rsi+0x3d3d3d20]
    cc2d:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cc32:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cc37:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cc3c:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cc41:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cc46:	3d 3d 0a 00 27       	cmp    eax,0x27000a3d
    cc4b:	0d 9e 0b 5f 6d       	or     eax,0x6d5f0b9e
    cc50:	6d                   	ins    DWORD PTR es:[rdi],dx
    cc51:	5f                   	pop    rdi
    cc52:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cc55:	33 32                	xor    esi,DWORD PTR [rdx]
    cc57:	0a 00                	or     al,BYTE PTR [rax]
    cc59:	27                   	(bad)
    cc5a:	0b 9e 09 6d 75 72    	or     ebx,DWORD PTR [rsi+0x72756d09]
    cc60:	6d                   	ins    DWORD PTR es:[rdi],dx
    cc61:	75 72                	jne    ccd5 <_end+0x6cbd>
    cc63:	32 0a                	xor    cl,BYTE PTR [rdx]
    cc65:	00 27                	add    BYTE PTR [rdi],ah
    cc67:	07                   	(bad)
    cc68:	9e                   	sahf
    cc69:	05 73 75 6d 0a       	add    eax,0xa6d7573
    cc6e:	00 27                	add    BYTE PTR [rdi],ah
    cc70:	0b 9e 09 61 64 6c    	or     ebx,DWORD PTR [rsi+0x6c646109]
    cc76:	65 72 33             	gs jb  ccac <_end+0x6c94>
    cc79:	32 0a                	xor    cl,BYTE PTR [rdx]
    cc7b:	00 27                	add    BYTE PTR [rdi],ah
    cc7d:	07                   	(bad)
    cc7e:	9e                   	sahf
    cc7f:	05 65 6c 66 0a       	add    eax,0xa666c65
    cc84:	00 27                	add    BYTE PTR [rdi],ah
    cc86:	13 9e 11 5f 6d 6d    	adc    ebx,DWORD PTR [rsi+0x6d6d5f11]
    cc8c:	5f                   	pop    rdi
    cc8d:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cc90:	33 32                	xor    esi,DWORD PTR [rdx]
    cc92:	55                   	push   rbp
    cc93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc94:	72 6f                	jb     cd05 <_end+0x6ced>
    cc96:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc97:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc98:	0a 00                	or     al,BYTE PTR [rax]
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 134906 <_end+0x12e8ee>
       6:	00 02                	add    BYTE PTR [rdx],al
       8:	08 00                	or     BYTE PTR [rax],al
       a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
       c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
       e:	39 0b                	cmp    DWORD PTR [rbx],ecx
      10:	18 13                	sbb    BYTE PTR [rbx],dl
      12:	00 00                	add    BYTE PTR [rax],al
      14:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
      17:	0b 0b                	or     ecx,DWORD PTR [rbx]
      19:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
      1c:	0e                   	(bad)
      1d:	00 00                	add    BYTE PTR [rax],al
      1f:	04 2e                	add    al,0x2e
      21:	01 3f                	add    DWORD PTR [rdi],edi
      23:	19 03                	sbb    DWORD PTR [rbx],eax
      25:	0e                   	(bad)
      26:	3a 21                	cmp    ah,BYTE PTR [rcx]
      28:	02 3b                	add    bh,BYTE PTR [rbx]
      2a:	05 39 0b 49 13       	add    eax,0x13490b39
      2f:	3c 19                	cmp    al,0x19
      31:	01 13                	add    DWORD PTR [rbx],edx
      33:	00 00                	add    BYTE PTR [rax],al
      35:	05 0f 00 0b 21       	add    eax,0x210b000f
      3a:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
      3d:	00 00                	add    BYTE PTR [rax],al
      3f:	06                   	(bad)
      40:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      43:	19 03                	sbb    DWORD PTR [rbx],eax
      45:	0e                   	(bad)
      46:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      48:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      4a:	39 0b                	cmp    DWORD PTR [rbx],ecx
      4c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      50:	01 13                	add    DWORD PTR [rbx],edx
      52:	00 00                	add    BYTE PTR [rax],al
      54:	07                   	(bad)
      55:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      58:	19 03                	sbb    DWORD PTR [rbx],eax
      5a:	08 3a                	or     BYTE PTR [rdx],bh
      5c:	21 06                	and    DWORD PTR [rsi],eax
      5e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      60:	39 21                	cmp    DWORD PTR [rcx],esp
      62:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      65:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      69:	01 13                	add    DWORD PTR [rbx],edx
      6b:	00 00                	add    BYTE PTR [rax],al
      6d:	08 16                	or     BYTE PTR [rsi],dl
      6f:	00 03                	add    BYTE PTR [rbx],al
      71:	0e                   	(bad)
      72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      74:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      76:	39 0b                	cmp    DWORD PTR [rbx],ecx
      78:	49 13 00             	adc    rax,QWORD PTR [r8]
      7b:	00 09                	add    BYTE PTR [rcx],cl
      7d:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
      81:	00 00                	add    BYTE PTR [rax],al
      83:	0a 2e                	or     ch,BYTE PTR [rsi]
      85:	01 3f                	add    DWORD PTR [rdi],edi
      87:	19 03                	sbb    DWORD PTR [rbx],eax
      89:	0e                   	(bad)
      8a:	3a 21                	cmp    ah,BYTE PTR [rcx]
      8c:	02 3b                	add    bh,BYTE PTR [rbx]
      8e:	0b 39                	or     edi,DWORD PTR [rcx]
      90:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
      93:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      97:	01 13                	add    DWORD PTR [rbx],edx
      99:	00 00                	add    BYTE PTR [rax],al
      9b:	0b 49 00             	or     ecx,DWORD PTR [rcx+0x0]
      9e:	02 18                	add    bl,BYTE PTR [rax]
      a0:	7e 18                	jle    ba <__abi_tag-0x2c2>
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	0c 13                	or     al,0x13
      a6:	01 0b                	add    DWORD PTR [rbx],ecx
      a8:	0b 3a                	or     edi,DWORD PTR [rdx]
      aa:	21 02                	and    DWORD PTR [rdx],eax
      ac:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      ae:	39 21                	cmp    DWORD PTR [rcx],esp
      b0:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      b3:	01 13                	add    DWORD PTR [rbx],edx
      b5:	00 00                	add    BYTE PTR [rax],al
      b7:	0d 0d 00 03 0e       	or     eax,0xe03000d
      bc:	3a 21                	cmp    ah,BYTE PTR [rcx]
      be:	02 3b                	add    bh,BYTE PTR [rbx]
      c0:	0b 39                	or     edi,DWORD PTR [rcx]
      c2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      c5:	38 21                	cmp    BYTE PTR [rcx],ah
      c7:	00 00                	add    BYTE PTR [rax],al
      c9:	00 0e                	add    BYTE PTR [rsi],cl
      cb:	0d 00 03 08 3a       	or     eax,0x3a080300
      d0:	21 02                	and    DWORD PTR [rdx],eax
      d2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      d4:	39 0b                	cmp    DWORD PTR [rbx],ecx
      d6:	49 13 38             	adc    rdi,QWORD PTR [r8]
      d9:	0b 00                	or     eax,DWORD PTR [rax]
      db:	00 0f                	add    BYTE PTR [rdi],cl
      dd:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      e0:	19 03                	sbb    DWORD PTR [rbx],eax
      e2:	08 3a                	or     BYTE PTR [rdx],bh
      e4:	21 05 3b 0b 39 21    	and    DWORD PTR [rip+0x21390b3b],eax        # 21390c25 <_end+0x2138ac0d>
      ea:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      ed:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      f1:	00 00                	add    BYTE PTR [rax],al
      f3:	10 2e                	adc    BYTE PTR [rsi],ch
      f5:	01 3f                	add    DWORD PTR [rdi],edi
      f7:	19 03                	sbb    DWORD PTR [rbx],eax
      f9:	0e                   	(bad)
      fa:	3a 21                	cmp    ah,BYTE PTR [rcx]
      fc:	02 3b                	add    bh,BYTE PTR [rbx]
      fe:	05 39 21 0d 3c       	add    eax,0x3c0d2139
     103:	19 01                	sbb    DWORD PTR [rcx],eax
     105:	13 00                	adc    eax,DWORD PTR [rax]
     107:	00 11                	add    BYTE PTR [rcx],dl
     109:	34 00                	xor    al,0x0
     10b:	03 0e                	add    ecx,DWORD PTR [rsi]
     10d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     10f:	0c 3b                	or     al,0x3b
     111:	0b 39                	or     edi,DWORD PTR [rcx]
     113:	21 0b                	and    DWORD PTR [rbx],ecx
     115:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
     119:	00 00                	add    BYTE PTR [rax],al
     11b:	12 05 00 03 0e 3a    	adc    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e0421 <_end+0x3a0da409>
     121:	21 01                	and    DWORD PTR [rcx],eax
     123:	3b 21                	cmp    esp,DWORD PTR [rcx]
     125:	08 39                	or     BYTE PTR [rcx],bh
     127:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     12a:	02 17                	add    dl,BYTE PTR [rdi]
     12c:	b7 42                	mov    bh,0x42
     12e:	17                   	(bad)
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	13 34 00             	adc    esi,DWORD PTR [rax+rax*1]
     134:	03 0e                	add    ecx,DWORD PTR [rsi]
     136:	3a 21                	cmp    ah,BYTE PTR [rcx]
     138:	01 3b                	add    DWORD PTR [rbx],edi
     13a:	0b 39                	or     edi,DWORD PTR [rcx]
     13c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     13f:	02 17                	add    dl,BYTE PTR [rdi]
     141:	b7 42                	mov    bh,0x42
     143:	17                   	(bad)
     144:	00 00                	add    BYTE PTR [rax],al
     146:	14 48                	adc    al,0x48
     148:	01 7d 01             	add    DWORD PTR [rbp+0x1],edi
     14b:	7f 13                	jg     160 <__abi_tag-0x21c>
     14d:	00 00                	add    BYTE PTR [rax],al
     14f:	15 11 01 25 0e       	adc    eax,0xe250111
     154:	13 0b                	adc    ecx,DWORD PTR [rbx]
     156:	03 1f                	add    ebx,DWORD PTR [rdi]
     158:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     15a:	55                   	push   rbp
     15b:	17                   	(bad)
     15c:	11 01                	adc    DWORD PTR [rcx],eax
     15e:	10 17                	adc    BYTE PTR [rdi],dl
     160:	00 00                	add    BYTE PTR [rax],al
     162:	16                   	(bad)
     163:	0f 00 0b             	str    WORD PTR [rbx]
     166:	0b 00                	or     eax,DWORD PTR [rax]
     168:	00 17                	add    BYTE PTR [rdi],dl
     16a:	24 00                	and    al,0x0
     16c:	0b 0b                	or     ecx,DWORD PTR [rbx]
     16e:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     171:	08 00                	or     BYTE PTR [rax],al
     173:	00 18                	add    BYTE PTR [rax],bl
     175:	16                   	(bad)
     176:	00 03                	add    BYTE PTR [rbx],al
     178:	0e                   	(bad)
     179:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     17b:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490cba <_end+0x1348aca2>
     181:	00 00                	add    BYTE PTR [rax],al
     183:	19 15 01 49 13 01    	sbb    DWORD PTR [rip+0x1134901],edx        # 1134a8a <_end+0x112ea72>
     189:	13 00                	adc    eax,DWORD PTR [rax]
     18b:	00 1a                	add    BYTE PTR [rdx],bl
     18d:	26 00 00             	es add BYTE PTR [rax],al
     190:	00 1b                	add    BYTE PTR [rbx],bl
     192:	39 01                	cmp    DWORD PTR [rcx],eax
     194:	03 08                	add    ecx,DWORD PTR [rax]
     196:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     198:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010cd7 <_end+0x1300acbf>
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	1c 08                	sbb    al,0x8
     1a2:	00 3a                	add    BYTE PTR [rdx],bh
     1a4:	0b 3b                	or     edi,DWORD PTR [rbx]
     1a6:	05 39 0b 18 13       	add    eax,0x13180b39
     1ab:	00 00                	add    BYTE PTR [rax],al
     1ad:	1d 15 00 00 00       	sbb    eax,0x15
     1b2:	1e                   	(bad)
     1b3:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     1b6:	19 03                	sbb    DWORD PTR [rbx],eax
     1b8:	0e                   	(bad)
     1b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1bb:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e0cfa <_end+0xe6dace2>
     1c1:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     1c5:	01 13                	add    DWORD PTR [rbx],edx
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	1f                   	(bad)
     1ca:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     1cd:	19 03                	sbb    DWORD PTR [rbx],eax
     1cf:	0e                   	(bad)
     1d0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1d2:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490d11 <_end+0x1348acf9>
     1d8:	20 0b                	and    BYTE PTR [rbx],cl
     1da:	01 13                	add    DWORD PTR [rbx],edx
     1dc:	00 00                	add    BYTE PTR [rax],al
     1de:	20 05 00 03 0e 3a    	and    BYTE PTR [rip+0x3a0e0300],al        # 3a0e04e4 <_end+0x3a0da4cc>
     1e4:	0b 3b                	or     edi,DWORD PTR [rbx]
     1e6:	05 39 0b 49 13       	add    eax,0x13490b39
     1eb:	00 00                	add    BYTE PTR [rax],al
     1ed:	21 2e                	and    DWORD PTR [rsi],ebp
     1ef:	01 3f                	add    DWORD PTR [rdi],edi
     1f1:	19 03                	sbb    DWORD PTR [rbx],eax
     1f3:	08 3a                	or     BYTE PTR [rdx],bh
     1f5:	0b 3b                	or     edi,DWORD PTR [rbx]
     1f7:	05 39 0b 49 13       	add    eax,0x13490b39
     1fc:	3c 19                	cmp    al,0x19
     1fe:	01 13                	add    DWORD PTR [rbx],edx
     200:	00 00                	add    BYTE PTR [rax],al
     202:	22 2e                	and    ch,BYTE PTR [rsi]
     204:	01 3f                	add    DWORD PTR [rdi],edi
     206:	19 03                	sbb    DWORD PTR [rbx],eax
     208:	0e                   	(bad)
     209:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     20b:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1870d4a <_end+0x186ad32>
     211:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     214:	01 13                	add    DWORD PTR [rbx],edx
     216:	00 00                	add    BYTE PTR [rax],al
     218:	23 2e                	and    ebp,DWORD PTR [rsi]
     21a:	00 3f                	add    BYTE PTR [rdi],bh
     21c:	19 03                	sbb    DWORD PTR [rbx],eax
     21e:	0e                   	(bad)
     21f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     221:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490d60 <_end+0x1348ad48>
     227:	3c 19                	cmp    al,0x19
     229:	00 00                	add    BYTE PTR [rax],al
     22b:	24 39                	and    al,0x39
     22d:	01 03                	add    DWORD PTR [rbx],eax
     22f:	0e                   	(bad)
     230:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     232:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010d71 <_end+0x1300ad59>
     238:	00 00                	add    BYTE PTR [rax],al
     23a:	25 34 00 03 0e       	and    eax,0xe030034
     23f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     241:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     243:	39 0b                	cmp    DWORD PTR [rbx],ecx
     245:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
     249:	00 00                	add    BYTE PTR [rax],al
     24b:	26 2e 01 3f          	es cs add DWORD PTR [rdi],edi
     24f:	19 03                	sbb    DWORD PTR [rbx],eax
     251:	0e                   	(bad)
     252:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     254:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     256:	39 0b                	cmp    DWORD PTR [rbx],ecx
     258:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     259:	0e                   	(bad)
     25a:	3c 19                	cmp    al,0x19
     25c:	01 13                	add    DWORD PTR [rbx],edx
     25e:	00 00                	add    BYTE PTR [rax],al
     260:	27                   	(bad)
     261:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     264:	19 03                	sbb    DWORD PTR [rbx],eax
     266:	0e                   	(bad)
     267:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     269:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     26b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     26d:	49 13 11             	adc    rdx,QWORD PTR [r9]
     270:	01 12                	add    DWORD PTR [rdx],edx
     272:	07                   	(bad)
     273:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     277:	00 00                	add    BYTE PTR [rax],al
     279:	28 34 00             	sub    BYTE PTR [rax+rax*1],dh
     27c:	03 0e                	add    ecx,DWORD PTR [rsi]
     27e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     280:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     282:	39 0b                	cmp    DWORD PTR [rbx],ecx
     284:	49 13 1c 05 00 00 29 	adc    rbx,QWORD PTR [rax*1+0x1d290000]
     28b:	1d 
     28c:	01 31                	add    DWORD PTR [rcx],esi
     28e:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     291:	b8 42 0b 55 17       	mov    eax,0x17550b42
     296:	58                   	pop    rax
     297:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     29a:	57                   	push   rdi
     29b:	0b 01                	or     eax,DWORD PTR [rcx]
     29d:	13 00                	adc    eax,DWORD PTR [rax]
     29f:	00 2a                	add    BYTE PTR [rdx],ch
     2a1:	05 00 31 13 02       	add    eax,0x2133100
     2a6:	17                   	(bad)
     2a7:	b7 42                	mov    bh,0x42
     2a9:	17                   	(bad)
     2aa:	00 00                	add    BYTE PTR [rax],al
     2ac:	00 01                	add    BYTE PTR [rcx],al
     2ae:	05 00 49 13 00       	add    eax,0x134900
     2b3:	00 02                	add    BYTE PTR [rdx],al
     2b5:	08 00                	or     BYTE PTR [rax],al
     2b7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2b9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2bb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2bd:	18 13                	sbb    BYTE PTR [rbx],dl
     2bf:	00 00                	add    BYTE PTR [rax],al
     2c1:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     2c4:	02 18                	add    bl,BYTE PTR [rax]
     2c6:	7e 18                	jle    2e0 <__abi_tag-0x9c>
     2c8:	00 00                	add    BYTE PTR [rax],al
     2ca:	04 05                	add    al,0x5
     2cc:	00 31                	add    BYTE PTR [rcx],dh
     2ce:	13 02                	adc    eax,DWORD PTR [rdx]
     2d0:	17                   	(bad)
     2d1:	b7 42                	mov    bh,0x42
     2d3:	17                   	(bad)
     2d4:	00 00                	add    BYTE PTR [rax],al
     2d6:	05 24 00 0b 0b       	add    eax,0xb0b0024
     2db:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     2de:	0e                   	(bad)
     2df:	00 00                	add    BYTE PTR [rax],al
     2e1:	06                   	(bad)
     2e2:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     2e7:	0b 3b                	or     edi,DWORD PTR [rbx]
     2e9:	0b 39                	or     edi,DWORD PTR [rcx]
     2eb:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2ee:	38 0b                	cmp    BYTE PTR [rbx],cl
     2f0:	00 00                	add    BYTE PTR [rax],al
     2f2:	07                   	(bad)
     2f3:	16                   	(bad)
     2f4:	00 03                	add    BYTE PTR [rbx],al
     2f6:	0e                   	(bad)
     2f7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2f9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2fb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2fd:	49 13 00             	adc    rax,QWORD PTR [r8]
     300:	00 08                	add    BYTE PTR [rax],cl
     302:	0f 00 0b             	str    WORD PTR [rbx]
     305:	21 08                	and    DWORD PTR [rax],ecx
     307:	49 13 00             	adc    rax,QWORD PTR [r8]
     30a:	00 09                	add    BYTE PTR [rcx],cl
     30c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     30f:	19 03                	sbb    DWORD PTR [rbx],eax
     311:	0e                   	(bad)
     312:	3a 21                	cmp    ah,BYTE PTR [rcx]
     314:	07                   	(bad)
     315:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490e54 <_end+0x1348ae3c>
     31b:	3c 19                	cmp    al,0x19
     31d:	01 13                	add    DWORD PTR [rbx],edx
     31f:	00 00                	add    BYTE PTR [rax],al
     321:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
     324:	03 0e                	add    ecx,DWORD PTR [rsi]
     326:	3a 21                	cmp    ah,BYTE PTR [rcx]
     328:	01 3b                	add    DWORD PTR [rbx],edi
     32a:	0b 39                	or     edi,DWORD PTR [rcx]
     32c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     32f:	02 17                	add    dl,BYTE PTR [rdi]
     331:	b7 42                	mov    bh,0x42
     333:	17                   	(bad)
     334:	00 00                	add    BYTE PTR [rax],al
     336:	0b 48 01             	or     ecx,DWORD PTR [rax+0x1]
     339:	7d 01                	jge    33c <__abi_tag-0x40>
     33b:	7f 13                	jg     350 <__abi_tag-0x2c>
     33d:	00 00                	add    BYTE PTR [rax],al
     33f:	0c 1d                	or     al,0x1d
     341:	01 31                	add    DWORD PTR [rcx],esi
     343:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     346:	b8 42 0b 55 17       	mov    eax,0x17550b42
     34b:	58                   	pop    rax
     34c:	21 01                	and    DWORD PTR [rcx],eax
     34e:	59                   	pop    rcx
     34f:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     352:	01 13                	add    DWORD PTR [rbx],edx
     354:	00 00                	add    BYTE PTR [rax],al
     356:	0d 05 00 03 0e       	or     eax,0xe030005
     35b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     35d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     35f:	39 0b                	cmp    DWORD PTR [rbx],ecx
     361:	49 13 00             	adc    rax,QWORD PTR [r8]
     364:	00 0e                	add    BYTE PTR [rsi],cl
     366:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
     36a:	00 00                	add    BYTE PTR [rax],al
     36c:	0f 05                	syscall
     36e:	00 03                	add    BYTE PTR [rbx],al
     370:	0e                   	(bad)
     371:	3a 21                	cmp    ah,BYTE PTR [rcx]
     373:	01 3b                	add    DWORD PTR [rbx],edi
     375:	0b 39                	or     edi,DWORD PTR [rcx]
     377:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     37a:	02 17                	add    dl,BYTE PTR [rdi]
     37c:	b7 42                	mov    bh,0x42
     37e:	17                   	(bad)
     37f:	00 00                	add    BYTE PTR [rax],al
     381:	10 48 00             	adc    BYTE PTR [rax+0x0],cl
     384:	7d 01                	jge    387 <__abi_tag+0xb>
     386:	83 01 18             	add    DWORD PTR [rcx],0x18
     389:	00 00                	add    BYTE PTR [rax],al
     38b:	11 48 00             	adc    DWORD PTR [rax+0x0],ecx
     38e:	7d 01                	jge    391 <__abi_tag+0x15>
     390:	7f 13                	jg     3a5 <__abi_tag+0x29>
     392:	00 00                	add    BYTE PTR [rax],al
     394:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
     397:	31 13                	xor    DWORD PTR [rbx],edx
     399:	02 17                	add    dl,BYTE PTR [rdi]
     39b:	b7 42                	mov    bh,0x42
     39d:	17                   	(bad)
     39e:	00 00                	add    BYTE PTR [rax],al
     3a0:	13 05 00 03 08 3a    	adc    eax,DWORD PTR [rip+0x3a080300]        # 3a0806a6 <_end+0x3a07a68e>
     3a6:	0b 3b                	or     edi,DWORD PTR [rbx]
     3a8:	05 39 0b 49 13       	add    eax,0x13490b39
     3ad:	00 00                	add    BYTE PTR [rax],al
     3af:	14 2e                	adc    al,0x2e
     3b1:	01 3f                	add    DWORD PTR [rdi],edi
     3b3:	19 03                	sbb    DWORD PTR [rbx],eax
     3b5:	0e                   	(bad)
     3b6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3b8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3ba:	39 0b                	cmp    DWORD PTR [rbx],ecx
     3bc:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     3c0:	01 13                	add    DWORD PTR [rbx],edx
     3c2:	00 00                	add    BYTE PTR [rax],al
     3c4:	15 0b 01 55 17       	adc    eax,0x1755010b
     3c9:	00 00                	add    BYTE PTR [rax],al
     3cb:	16                   	(bad)
     3cc:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     3cf:	19 03                	sbb    DWORD PTR [rbx],eax
     3d1:	08 3a                	or     BYTE PTR [rdx],bh
     3d3:	21 0a                	and    DWORD PTR [rdx],ecx
     3d5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3d7:	39 21                	cmp    DWORD PTR [rcx],esp
     3d9:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     3dc:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     3e0:	01 13                	add    DWORD PTR [rbx],edx
     3e2:	00 00                	add    BYTE PTR [rax],al
     3e4:	17                   	(bad)
     3e5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     3e8:	19 03                	sbb    DWORD PTR [rbx],eax
     3ea:	0e                   	(bad)
     3eb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3ed:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3ef:	39 0b                	cmp    DWORD PTR [rbx],ecx
     3f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3f2:	0e                   	(bad)
     3f3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     3f7:	01 13                	add    DWORD PTR [rbx],edx
     3f9:	00 00                	add    BYTE PTR [rax],al
     3fb:	18 01                	sbb    BYTE PTR [rcx],al
     3fd:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     400:	01 13                	add    DWORD PTR [rbx],edx
     402:	00 00                	add    BYTE PTR [rax],al
     404:	19 21                	sbb    DWORD PTR [rcx],esp
     406:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     409:	2f                   	(bad)
     40a:	0b 00                	or     eax,DWORD PTR [rax]
     40c:	00 1a                	add    BYTE PTR [rdx],bl
     40e:	34 00                	xor    al,0x0
     410:	03 0e                	add    ecx,DWORD PTR [rsi]
     412:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     416:	6c                   	ins    BYTE PTR es:[rdi],dx
     417:	19 02                	sbb    DWORD PTR [rdx],eax
     419:	18 00                	sbb    BYTE PTR [rax],al
     41b:	00 1b                	add    BYTE PTR [rbx],bl
     41d:	34 00                	xor    al,0x0
     41f:	03 08                	add    ecx,DWORD PTR [rax]
     421:	3a 21                	cmp    ah,BYTE PTR [rcx]
     423:	01 3b                	add    DWORD PTR [rbx],edi
     425:	0b 39                	or     edi,DWORD PTR [rcx]
     427:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     42a:	02 17                	add    dl,BYTE PTR [rdi]
     42c:	b7 42                	mov    bh,0x42
     42e:	17                   	(bad)
     42f:	00 00                	add    BYTE PTR [rax],al
     431:	1c 48                	sbb    al,0x48
     433:	01 7d 01             	add    DWORD PTR [rbp+0x1],edi
     436:	7f 13                	jg     44b <__abi_tag+0xcf>
     438:	01 13                	add    DWORD PTR [rbx],edx
     43a:	00 00                	add    BYTE PTR [rax],al
     43c:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
     441:	03 0e                	add    ecx,DWORD PTR [rsi]
     443:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     445:	3b 05 39 21 01 6e    	cmp    eax,DWORD PTR [rip+0x6e012139]        # 6e012584 <_end+0x6e00c56c>
     44b:	0e                   	(bad)
     44c:	49 13 20             	adc    rsp,QWORD PTR [r8]
     44f:	21 03                	and    DWORD PTR [rbx],eax
     451:	34 19                	xor    al,0x19
     453:	01 13                	add    DWORD PTR [rbx],edx
     455:	00 00                	add    BYTE PTR [rax],al
     457:	1e                   	(bad)
     458:	01 01                	add    DWORD PTR [rcx],eax
     45a:	87 42 19             	xchg   DWORD PTR [rdx+0x19],eax
     45d:	49 13 01             	adc    rax,QWORD PTR [r9]
     460:	13 00                	adc    eax,DWORD PTR [rax]
     462:	00 1f                	add    BYTE PTR [rdi],bl
     464:	21 00                	and    DWORD PTR [rax],eax
     466:	2f                   	(bad)
     467:	0b 00                	or     eax,DWORD PTR [rax]
     469:	00 20                	add    BYTE PTR [rax],ah
     46b:	13 01                	adc    eax,DWORD PTR [rcx]
     46d:	03 0e                	add    ecx,DWORD PTR [rsi]
     46f:	0b 0b                	or     ecx,DWORD PTR [rbx]
     471:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     473:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     475:	39 21                	cmp    DWORD PTR [rcx],esp
     477:	10 01                	adc    BYTE PTR [rcx],al
     479:	13 00                	adc    eax,DWORD PTR [rax]
     47b:	00 21                	add    BYTE PTR [rcx],ah
     47d:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     480:	19 03                	sbb    DWORD PTR [rbx],eax
     482:	0e                   	(bad)
     483:	3a 21                	cmp    ah,BYTE PTR [rcx]
     485:	01 3b                	add    DWORD PTR [rbx],edi
     487:	0b 39                	or     edi,DWORD PTR [rcx]
     489:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     48c:	49 13 11             	adc    rdx,QWORD PTR [r9]
     48f:	01 12                	add    DWORD PTR [rdx],edx
     491:	07                   	(bad)
     492:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     496:	01 13                	add    DWORD PTR [rbx],edx
     498:	00 00                	add    BYTE PTR [rax],al
     49a:	22 2e                	and    ch,BYTE PTR [rsi]
     49c:	00 3f                	add    BYTE PTR [rdi],bh
     49e:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     4a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4a2:	0e                   	(bad)
     4a3:	03 0e                	add    ecx,DWORD PTR [rsi]
     4a5:	00 00                	add    BYTE PTR [rax],al
     4a7:	23 13                	and    edx,DWORD PTR [rbx]
     4a9:	01 0b                	add    DWORD PTR [rbx],ecx
     4ab:	0b 3a                	or     edi,DWORD PTR [rdx]
     4ad:	21 07                	and    DWORD PTR [rdi],eax
     4af:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4b1:	39 21                	cmp    DWORD PTR [rcx],esp
     4b3:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     4b6:	01 13                	add    DWORD PTR [rbx],edx
     4b8:	00 00                	add    BYTE PTR [rax],al
     4ba:	24 0d                	and    al,0xd
     4bc:	00 03                	add    BYTE PTR [rbx],al
     4be:	08 3a                	or     BYTE PTR [rdx],bh
     4c0:	21 07                	and    DWORD PTR [rdi],eax
     4c2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4c4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     4c6:	49 13 38             	adc    rdi,QWORD PTR [r8]
     4c9:	0b 00                	or     eax,DWORD PTR [rax]
     4cb:	00 25 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],ah        # 193f05ff <_end+0x193ea5e7>
     4d1:	03 0e                	add    ecx,DWORD PTR [rsi]
     4d3:	3a 21                	cmp    ah,BYTE PTR [rcx]
     4d5:	07                   	(bad)
     4d6:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d2615 <_end+0x3c0cc5fd>
     4dc:	19 01                	sbb    DWORD PTR [rcx],eax
     4de:	13 00                	adc    eax,DWORD PTR [rax]
     4e0:	00 26                	add    BYTE PTR [rsi],ah
     4e2:	34 00                	xor    al,0x0
     4e4:	03 0e                	add    ecx,DWORD PTR [rsi]
     4e6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4e8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4ea:	39 21                	cmp    DWORD PTR [rcx],esp
     4ec:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     4ef:	1c 0b                	sbb    al,0xb
     4f1:	00 00                	add    BYTE PTR [rax],al
     4f3:	27                   	(bad)
     4f4:	05 00 31 13 00       	add    eax,0x133100
     4f9:	00 28                	add    BYTE PTR [rax],ch
     4fb:	34 00                	xor    al,0x0
     4fd:	31 13                	xor    DWORD PTR [rbx],edx
     4ff:	00 00                	add    BYTE PTR [rax],al
     501:	29 34 00             	sub    DWORD PTR [rax+rax*1],esi
     504:	03 08                	add    ecx,DWORD PTR [rax]
     506:	3a 21                	cmp    ah,BYTE PTR [rcx]
     508:	01 3b                	add    DWORD PTR [rbx],edi
     50a:	0b 39                	or     edi,DWORD PTR [rcx]
     50c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     50f:	00 00                	add    BYTE PTR [rax],al
     511:	2a 34 00             	sub    dh,BYTE PTR [rax+rax*1]
     514:	03 0e                	add    ecx,DWORD PTR [rsi]
     516:	3a 21                	cmp    ah,BYTE PTR [rcx]
     518:	01 3b                	add    DWORD PTR [rbx],edi
     51a:	0b 39                	or     edi,DWORD PTR [rcx]
     51c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     51f:	00 00                	add    BYTE PTR [rax],al
     521:	2b 1d 01 31 13 52    	sub    ebx,DWORD PTR [rip+0x52133101]        # 52133628 <_end+0x5212d610>
     527:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     52d:	58                   	pop    rax
     52e:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
     531:	21 b1 04 57 21 1c    	and    DWORD PTR [rcx+0x1c215704],esi
     537:	00 00                	add    BYTE PTR [rax],al
     539:	2c 37                	sub    al,0x37
     53b:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     53e:	00 00                	add    BYTE PTR [rax],al
     540:	2d 15 01 49 13       	sub    eax,0x13490115
     545:	01 13                	add    DWORD PTR [rbx],edx
     547:	00 00                	add    BYTE PTR [rax],al
     549:	2e 2e 01 3f          	cs cs add DWORD PTR [rdi],edi
     54d:	19 03                	sbb    DWORD PTR [rbx],eax
     54f:	08 3a                	or     BYTE PTR [rdx],bh
     551:	21 09                	and    DWORD PTR [rcx],ecx
     553:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     555:	39 21                	cmp    DWORD PTR [rcx],esp
     557:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     55a:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     55e:	00 00                	add    BYTE PTR [rax],al
     560:	2f                   	(bad)
     561:	0b 01                	or     eax,DWORD PTR [rcx]
     563:	31 13                	xor    DWORD PTR [rbx],edx
     565:	55                   	push   rbp
     566:	17                   	(bad)
     567:	01 13                	add    DWORD PTR [rbx],edx
     569:	00 00                	add    BYTE PTR [rax],al
     56b:	30 34 00             	xor    BYTE PTR [rax+rax*1],dh
     56e:	03 0e                	add    ecx,DWORD PTR [rsi]
     570:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     574:	6c                   	ins    BYTE PTR es:[rdi],dx
     575:	19 00                	sbb    DWORD PTR [rax],eax
     577:	00 31                	add    BYTE PTR [rcx],dh
     579:	0b 01                	or     eax,DWORD PTR [rcx]
     57b:	00 00                	add    BYTE PTR [rax],al
     57d:	32 1d 01 31 13 52    	xor    bl,BYTE PTR [rip+0x52133101]        # 52133684 <_end+0x5212d66c>
     583:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     589:	12 07                	adc    al,BYTE PTR [rdi]
     58b:	58                   	pop    rax
     58c:	21 01                	and    DWORD PTR [rcx],eax
     58e:	59                   	pop    rcx
     58f:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     592:	01 13                	add    DWORD PTR [rbx],edx
     594:	00 00                	add    BYTE PTR [rax],al
     596:	33 2e                	xor    ebp,DWORD PTR [rsi]
     598:	01 3f                	add    DWORD PTR [rdi],edi
     59a:	19 03                	sbb    DWORD PTR [rbx],eax
     59c:	0e                   	(bad)
     59d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     59f:	01 3b                	add    DWORD PTR [rbx],edi
     5a1:	0b 39                	or     edi,DWORD PTR [rcx]
     5a3:	21 0a                	and    DWORD PTR [rdx],ecx
     5a5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5a6:	0e                   	(bad)
     5a7:	49 13 11             	adc    rdx,QWORD PTR [r9]
     5aa:	01 12                	add    DWORD PTR [rdx],edx
     5ac:	07                   	(bad)
     5ad:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
     5b2:	13 00                	adc    eax,DWORD PTR [rax]
     5b4:	00 34 05 00 03 0e 3a 	add    BYTE PTR [rax*1+0x3a0e0300],dh
     5bb:	21 01                	and    DWORD PTR [rcx],eax
     5bd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5bf:	39 21                	cmp    DWORD PTR [rcx],esp
     5c1:	35 49 13 02 18       	xor    eax,0x18021349
     5c6:	00 00                	add    BYTE PTR [rax],al
     5c8:	35 2e 01 3f 19       	xor    eax,0x193f012e
     5cd:	03 0e                	add    ecx,DWORD PTR [rsi]
     5cf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     5d1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5d3:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5d5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5d6:	0e                   	(bad)
     5d7:	49 13 20             	adc    rsp,QWORD PTR [r8]
     5da:	0b 01                	or     eax,DWORD PTR [rcx]
     5dc:	13 00                	adc    eax,DWORD PTR [rax]
     5de:	00 36                	add    BYTE PTR [rsi],dh
     5e0:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     5e3:	19 03                	sbb    DWORD PTR [rbx],eax
     5e5:	0e                   	(bad)
     5e6:	3a 21                	cmp    ah,BYTE PTR [rcx]
     5e8:	03 3b                	add    edi,DWORD PTR [rbx]
     5ea:	0b 39                	or     edi,DWORD PTR [rcx]
     5ec:	21 01                	and    DWORD PTR [rcx],eax
     5ee:	49 13 20             	adc    rsp,QWORD PTR [r8]
     5f1:	21 03                	and    DWORD PTR [rbx],eax
     5f3:	34 19                	xor    al,0x19
     5f5:	01 13                	add    DWORD PTR [rbx],edx
     5f7:	00 00                	add    BYTE PTR [rax],al
     5f9:	37                   	(bad)
     5fa:	05 00 03 08 3a       	add    eax,0x3a080300
     5ff:	21 02                	and    DWORD PTR [rdx],eax
     601:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     603:	39 0b                	cmp    DWORD PTR [rbx],ecx
     605:	49 13 00             	adc    rax,QWORD PTR [r8]
     608:	00 38                	add    BYTE PTR [rax],bh
     60a:	2e 01 31             	cs add DWORD PTR [rcx],esi
     60d:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     610:	11 01                	adc    DWORD PTR [rcx],eax
     612:	12 07                	adc    al,BYTE PTR [rdi]
     614:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     618:	01 13                	add    DWORD PTR [rbx],edx
     61a:	00 00                	add    BYTE PTR [rax],al
     61c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     61e:	01 31                	add    DWORD PTR [rcx],esi
     620:	13 11                	adc    edx,DWORD PTR [rcx]
     622:	01 12                	add    DWORD PTR [rdx],edx
     624:	07                   	(bad)
     625:	01 13                	add    DWORD PTR [rbx],edx
     627:	00 00                	add    BYTE PTR [rax],al
     629:	3a 11                	cmp    dl,BYTE PTR [rcx]
     62b:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b193f <_end+0x30ab927>
     631:	1f                   	(bad)
     632:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     634:	11 01                	adc    DWORD PTR [rcx],eax
     636:	12 07                	adc    al,BYTE PTR [rdi]
     638:	10 17                	adc    BYTE PTR [rdi],dl
     63a:	00 00                	add    BYTE PTR [rax],al
     63c:	3b 24 00             	cmp    esp,DWORD PTR [rax+rax*1]
     63f:	0b 0b                	or     ecx,DWORD PTR [rbx]
     641:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     644:	08 00                	or     BYTE PTR [rax],al
     646:	00 3c 0f             	add    BYTE PTR [rdi+rcx*1],bh
     649:	00 0b                	add    BYTE PTR [rbx],cl
     64b:	0b 00                	or     eax,DWORD PTR [rax]
     64d:	00 3d 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],bh        # e030669 <_end+0xe02a651>
     653:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     655:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491194 <_end+0x1348b17c>
     65b:	00 00                	add    BYTE PTR [rax],al
     65d:	3e 26 00 00          	ds es add BYTE PTR [rax],al
     661:	00 3f                	add    BYTE PTR [rdi],bh
     663:	39 01                	cmp    DWORD PTR [rcx],eax
     665:	03 08                	add    ecx,DWORD PTR [rax]
     667:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     669:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130111a8 <_end+0x1300b190>
     66f:	00 00                	add    BYTE PTR [rax],al
     671:	40 08 00             	rex or BYTE PTR [rax],al
     674:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     676:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 131811b5 <_end+0x1317b19d>
     67c:	00 00                	add    BYTE PTR [rax],al
     67e:	41 15 00 00 00 42    	rex.B adc eax,0x42000000
     684:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     687:	19 03                	sbb    DWORD PTR [rbx],eax
     689:	0e                   	(bad)
     68a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     68c:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e11cb <_end+0xe6db1b3>
     692:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     696:	01 13                	add    DWORD PTR [rbx],edx
     698:	00 00                	add    BYTE PTR [rax],al
     69a:	43                   	rex.XB
     69b:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     69e:	19 03                	sbb    DWORD PTR [rbx],eax
     6a0:	08 3a                	or     BYTE PTR [rdx],bh
     6a2:	0b 3b                	or     edi,DWORD PTR [rbx]
     6a4:	05 39 0b 49 13       	add    eax,0x13490b39
     6a9:	3c 19                	cmp    al,0x19
     6ab:	01 13                	add    DWORD PTR [rbx],edx
     6ad:	00 00                	add    BYTE PTR [rax],al
     6af:	44                   	rex.R
     6b0:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6b3:	19 03                	sbb    DWORD PTR [rbx],eax
     6b5:	0e                   	(bad)
     6b6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6b8:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18711f7 <_end+0x186b1df>
     6be:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     6c1:	01 13                	add    DWORD PTR [rbx],edx
     6c3:	00 00                	add    BYTE PTR [rax],al
     6c5:	45                   	rex.RB
     6c6:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     6c9:	19 03                	sbb    DWORD PTR [rbx],eax
     6cb:	0e                   	(bad)
     6cc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6ce:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349120d <_end+0x1348b1f5>
     6d4:	3c 19                	cmp    al,0x19
     6d6:	00 00                	add    BYTE PTR [rax],al
     6d8:	46 39 01             	rex.RX cmp DWORD PTR [rcx],r8d
     6db:	03 0e                	add    ecx,DWORD PTR [rsi]
     6dd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6df:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 1301121e <_end+0x1300b206>
     6e5:	00 00                	add    BYTE PTR [rax],al
     6e7:	47                   	rex.RXB
     6e8:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6eb:	19 03                	sbb    DWORD PTR [rbx],eax
     6ed:	0e                   	(bad)
     6ee:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6f0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6f2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6f5:	0e                   	(bad)
     6f6:	3c 19                	cmp    al,0x19
     6f8:	01 13                	add    DWORD PTR [rbx],edx
     6fa:	00 00                	add    BYTE PTR [rax],al
     6fc:	48                   	rex.W
     6fd:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     700:	19 03                	sbb    DWORD PTR [rbx],eax
     702:	0e                   	(bad)
     703:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     705:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     707:	39 0b                	cmp    DWORD PTR [rbx],ecx
     709:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     70a:	0e                   	(bad)
     70b:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     70f:	00 00                	add    BYTE PTR [rax],al
     711:	49                   	rex.WB
     712:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     715:	19 03                	sbb    DWORD PTR [rbx],eax
     717:	0e                   	(bad)
     718:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     71a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     71c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     71e:	87 01                	xchg   DWORD PTR [rcx],eax
     720:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     723:	01 13                	add    DWORD PTR [rbx],edx
     725:	00 00                	add    BYTE PTR [rax],al
     727:	4a 0b 01             	rex.WX or rax,QWORD PTR [rcx]
     72a:	55                   	push   rbp
     72b:	17                   	(bad)
     72c:	01 13                	add    DWORD PTR [rbx],edx
     72e:	00 00                	add    BYTE PTR [rax],al
     730:	4b 0b 01             	rex.WXB or rax,QWORD PTR [r9]
     733:	11 01                	adc    DWORD PTR [rcx],eax
     735:	12 07                	adc    al,BYTE PTR [rdi]
     737:	00 00                	add    BYTE PTR [rax],al
     739:	4c 34 00             	rex.WR xor al,0x0
     73c:	03 0e                	add    ecx,DWORD PTR [rsi]
     73e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     740:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     742:	39 0b                	cmp    DWORD PTR [rbx],ecx
     744:	49 13 02             	adc    rax,QWORD PTR [r10]
     747:	18 00                	sbb    BYTE PTR [rax],al
     749:	00 4d 1d             	add    BYTE PTR [rbp+0x1d],cl
     74c:	01 31                	add    DWORD PTR [rcx],esi
     74e:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     751:	b8 42 0b 55 17       	mov    eax,0x17550b42
     756:	58                   	pop    rax
     757:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     75a:	57                   	push   rdi
     75b:	0b 00                	or     eax,DWORD PTR [rax]
     75d:	00 4e 05             	add    BYTE PTR [rsi+0x5],cl
     760:	00 31                	add    BYTE PTR [rcx],dh
     762:	13 02                	adc    eax,DWORD PTR [rdx]
     764:	18 00                	sbb    BYTE PTR [rax],al
     766:	00 4f 1d             	add    BYTE PTR [rdi+0x1d],cl
     769:	01 31                	add    DWORD PTR [rcx],esi
     76b:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
     76e:	58                   	pop    rax
     76f:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     772:	57                   	push   rdi
     773:	0b 01                	or     eax,DWORD PTR [rcx]
     775:	13 00                	adc    eax,DWORD PTR [rax]
     777:	00 50 2e             	add    BYTE PTR [rax+0x2e],dl
     77a:	01 03                	add    DWORD PTR [rbx],eax
     77c:	0e                   	(bad)
     77d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     77f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     781:	39 0b                	cmp    DWORD PTR [rbx],ecx
     783:	49 13 20             	adc    rsp,QWORD PTR [r8]
     786:	0b 01                	or     eax,DWORD PTR [rcx]
     788:	13 00                	adc    eax,DWORD PTR [rax]
     78a:	00 51 2e             	add    BYTE PTR [rcx+0x2e],dl
     78d:	01 3f                	add    DWORD PTR [rdi],edi
     78f:	19 03                	sbb    DWORD PTR [rbx],eax
     791:	0e                   	(bad)
     792:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     794:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     796:	39 0b                	cmp    DWORD PTR [rbx],ecx
     798:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     799:	0e                   	(bad)
     79a:	20 0b                	and    BYTE PTR [rbx],cl
     79c:	01 13                	add    DWORD PTR [rbx],edx
     79e:	00 00                	add    BYTE PTR [rax],al
     7a0:	52                   	push   rdx
     7a1:	1d 01 31 13 52       	sbb    eax,0x52133101
     7a6:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     7ac:	58                   	pop    rax
     7ad:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     7b0:	57                   	push   rdi
     7b1:	0b 01                	or     eax,DWORD PTR [rcx]
     7b3:	13 00                	adc    eax,DWORD PTR [rax]
     7b5:	00 53 1d             	add    BYTE PTR [rbx+0x1d],dl
     7b8:	01 31                	add    DWORD PTR [rcx],esi
     7ba:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     7bd:	b8 42 0b 11 01       	mov    eax,0x1110b42
     7c2:	12 07                	adc    al,BYTE PTR [rdi]
     7c4:	58                   	pop    rax
     7c5:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     7c8:	57                   	push   rdi
     7c9:	0b 00                	or     eax,DWORD PTR [rax]
     7cb:	00 54 1d 01          	add    BYTE PTR [rbp+rbx*1+0x1],dl
     7cf:	31 13                	xor    DWORD PTR [rbx],edx
     7d1:	52                   	push   rdx
     7d2:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     7d8:	12 07                	adc    al,BYTE PTR [rdi]
     7da:	58                   	pop    rax
     7db:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     7de:	57                   	push   rdi
     7df:	0b 01                	or     eax,DWORD PTR [rcx]
     7e1:	13 00                	adc    eax,DWORD PTR [rax]
     7e3:	00 55 0b             	add    BYTE PTR [rbp+0xb],dl
     7e6:	01 11                	add    DWORD PTR [rcx],edx
     7e8:	01 12                	add    DWORD PTR [rdx],edx
     7ea:	07                   	(bad)
     7eb:	01 13                	add    DWORD PTR [rbx],edx
     7ed:	00 00                	add    BYTE PTR [rax],al
     7ef:	56                   	push   rsi
     7f0:	1d 01 31 13 52       	sbb    eax,0x52133101
     7f5:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     7fb:	12 07                	adc    al,BYTE PTR [rdi]
     7fd:	58                   	pop    rax
     7fe:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     801:	57                   	push   rdi
     802:	0b 00                	or     eax,DWORD PTR [rax]
     804:	00 57 34             	add    BYTE PTR [rdi+0x34],dl
     807:	00 03                	add    BYTE PTR [rbx],al
     809:	08 3a                	or     BYTE PTR [rdx],bh
     80b:	0b 3b                	or     edi,DWORD PTR [rbx]
     80d:	05 39 0b 49 13       	add    eax,0x13490b39
     812:	00 00                	add    BYTE PTR [rax],al
     814:	58                   	pop    rax
     815:	05 00 31 13 1c       	add    eax,0x1c133100
     81a:	0b 00                	or     eax,DWORD PTR [rax]
     81c:	00 59 48             	add    BYTE PTR [rcx+0x48],bl
     81f:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
     822:	82                   	(bad)
     823:	01 19                	add    DWORD PTR [rcx],ebx
     825:	7f 13                	jg     83a <__abi_tag+0x4be>
     827:	00 00                	add    BYTE PTR [rax],al
     829:	00 01                	add    BYTE PTR [rcx],al
     82b:	08 00                	or     BYTE PTR [rax],al
     82d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     82f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     831:	39 0b                	cmp    DWORD PTR [rbx],ecx
     833:	18 13                	sbb    BYTE PTR [rbx],dl
     835:	00 00                	add    BYTE PTR [rax],al
     837:	02 05 00 49 13 00    	add    al,BYTE PTR [rip+0x134900]        # 13513d <_end+0x12f125>
     83d:	00 03                	add    BYTE PTR [rbx],al
     83f:	05 00 31 13 02       	add    eax,0x2133100
     844:	17                   	(bad)
     845:	b7 42                	mov    bh,0x42
     847:	17                   	(bad)
     848:	00 00                	add    BYTE PTR [rax],al
     84a:	04 24                	add    al,0x24
     84c:	00 0b                	add    BYTE PTR [rbx],cl
     84e:	0b 3e                	or     edi,DWORD PTR [rsi]
     850:	0b 03                	or     eax,DWORD PTR [rbx]
     852:	0e                   	(bad)
     853:	00 00                	add    BYTE PTR [rax],al
     855:	05 16 00 03 0e       	add    eax,0xe030016
     85a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     85c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     85e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     860:	49 13 00             	adc    rax,QWORD PTR [r8]
     863:	00 06                	add    BYTE PTR [rsi],al
     865:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     868:	19 03                	sbb    DWORD PTR [rbx],eax
     86a:	0e                   	(bad)
     86b:	3a 21                	cmp    ah,BYTE PTR [rcx]
     86d:	07                   	(bad)
     86e:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134913ad <_end+0x1348b395>
     874:	3c 19                	cmp    al,0x19
     876:	01 13                	add    DWORD PTR [rbx],edx
     878:	00 00                	add    BYTE PTR [rax],al
     87a:	07                   	(bad)
     87b:	0f 00 0b             	str    WORD PTR [rbx]
     87e:	21 08                	and    DWORD PTR [rax],ecx
     880:	49 13 00             	adc    rax,QWORD PTR [r8]
     883:	00 08                	add    BYTE PTR [rax],cl
     885:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     888:	19 03                	sbb    DWORD PTR [rbx],eax
     88a:	0e                   	(bad)
     88b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     88d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     88f:	39 0b                	cmp    DWORD PTR [rbx],ecx
     891:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     895:	01 13                	add    DWORD PTR [rbx],edx
     897:	00 00                	add    BYTE PTR [rax],al
     899:	09 05 00 03 08 3a    	or     DWORD PTR [rip+0x3a080300],eax        # 3a080b9f <_end+0x3a07ab87>
     89f:	0b 3b                	or     edi,DWORD PTR [rbx]
     8a1:	05 39 0b 49 13       	add    eax,0x13490b39
     8a6:	00 00                	add    BYTE PTR [rax],al
     8a8:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e0bae <_end+0x3a0dab96>
     8ae:	0b 3b                	or     edi,DWORD PTR [rbx]
     8b0:	0b 39                	or     edi,DWORD PTR [rcx]
     8b2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     8b5:	38 0b                	cmp    BYTE PTR [rbx],cl
     8b7:	00 00                	add    BYTE PTR [rax],al
     8b9:	0b 2e                	or     ebp,DWORD PTR [rsi]
     8bb:	01 3f                	add    DWORD PTR [rdi],edi
     8bd:	19 03                	sbb    DWORD PTR [rbx],eax
     8bf:	08 3a                	or     BYTE PTR [rdx],bh
     8c1:	21 09                	and    DWORD PTR [rcx],ecx
     8c3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     8c5:	39 21                	cmp    DWORD PTR [rcx],esp
     8c7:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     8ca:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     8ce:	01 13                	add    DWORD PTR [rbx],edx
     8d0:	00 00                	add    BYTE PTR [rax],al
     8d2:	0c 34                	or     al,0x34
     8d4:	00 03                	add    BYTE PTR [rbx],al
     8d6:	0e                   	(bad)
     8d7:	3a 21                	cmp    ah,BYTE PTR [rcx]
     8d9:	01 3b                	add    DWORD PTR [rbx],edi
     8db:	0b 39                	or     edi,DWORD PTR [rcx]
     8dd:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     8e0:	02 17                	add    dl,BYTE PTR [rdi]
     8e2:	b7 42                	mov    bh,0x42
     8e4:	17                   	(bad)
     8e5:	00 00                	add    BYTE PTR [rax],al
     8e7:	0d 1d 01 31 13       	or     eax,0x1331011d
     8ec:	52                   	push   rdx
     8ed:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     8f3:	58                   	pop    rax
     8f4:	21 01                	and    DWORD PTR [rcx],eax
     8f6:	59                   	pop    rcx
     8f7:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     8fa:	01 13                	add    DWORD PTR [rbx],edx
     8fc:	00 00                	add    BYTE PTR [rax],al
     8fe:	0e                   	(bad)
     8ff:	0b 01                	or     eax,DWORD PTR [rcx]
     901:	55                   	push   rbp
     902:	17                   	(bad)
     903:	00 00                	add    BYTE PTR [rax],al
     905:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     908:	3f                   	(bad)
     909:	19 03                	sbb    DWORD PTR [rbx],eax
     90b:	0e                   	(bad)
     90c:	3a 21                	cmp    ah,BYTE PTR [rcx]
     90e:	07                   	(bad)
     90f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     911:	39 0b                	cmp    DWORD PTR [rbx],ecx
     913:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     914:	0e                   	(bad)
     915:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     919:	01 13                	add    DWORD PTR [rbx],edx
     91b:	00 00                	add    BYTE PTR [rax],al
     91d:	10 01                	adc    BYTE PTR [rcx],al
     91f:	01 87 42 19 49 13    	add    DWORD PTR [rdi+0x13491942],eax
     925:	01 13                	add    DWORD PTR [rbx],edx
     927:	00 00                	add    BYTE PTR [rax],al
     929:	11 21                	adc    DWORD PTR [rcx],esp
     92b:	00 2f                	add    BYTE PTR [rdi],ch
     92d:	0b 00                	or     eax,DWORD PTR [rax]
     92f:	00 12                	add    BYTE PTR [rdx],dl
     931:	34 00                	xor    al,0x0
     933:	03 08                	add    ecx,DWORD PTR [rax]
     935:	3a 21                	cmp    ah,BYTE PTR [rcx]
     937:	01 3b                	add    DWORD PTR [rbx],edi
     939:	0b 39                	or     edi,DWORD PTR [rcx]
     93b:	21 0e                	and    DWORD PTR [rsi],ecx
     93d:	49 13 02             	adc    rax,QWORD PTR [r10]
     940:	17                   	(bad)
     941:	b7 42                	mov    bh,0x42
     943:	17                   	(bad)
     944:	00 00                	add    BYTE PTR [rax],al
     946:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e0c4c <_end+0x3a0dac34>
     94c:	21 01                	and    DWORD PTR [rcx],eax
     94e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     950:	39 0b                	cmp    DWORD PTR [rbx],ecx
     952:	49 13 00             	adc    rax,QWORD PTR [r8]
     955:	00 14 34             	add    BYTE PTR [rsp+rsi*1],dl
     958:	00 03                	add    BYTE PTR [rbx],al
     95a:	0e                   	(bad)
     95b:	3a 21                	cmp    ah,BYTE PTR [rcx]
     95d:	01 3b                	add    DWORD PTR [rbx],edi
     95f:	0b 39                	or     edi,DWORD PTR [rcx]
     961:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     964:	00 00                	add    BYTE PTR [rax],al
     966:	15 34 00 31 13       	adc    eax,0x13310034
     96b:	02 17                	add    dl,BYTE PTR [rdi]
     96d:	b7 42                	mov    bh,0x42
     96f:	17                   	(bad)
     970:	00 00                	add    BYTE PTR [rax],al
     972:	16                   	(bad)
     973:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     976:	19 03                	sbb    DWORD PTR [rbx],eax
     978:	0e                   	(bad)
     979:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     97b:	3b 05 39 21 01 6e    	cmp    eax,DWORD PTR [rip+0x6e012139]        # 6e012aba <_end+0x6e00caa2>
     981:	0e                   	(bad)
     982:	49 13 20             	adc    rsp,QWORD PTR [r8]
     985:	21 03                	and    DWORD PTR [rbx],eax
     987:	34 19                	xor    al,0x19
     989:	01 13                	add    DWORD PTR [rbx],edx
     98b:	00 00                	add    BYTE PTR [rax],al
     98d:	17                   	(bad)
     98e:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
     992:	00 00                	add    BYTE PTR [rax],al
     994:	18 13                	sbb    BYTE PTR [rbx],dl
     996:	01 0b                	add    DWORD PTR [rbx],ecx
     998:	0b 3a                	or     edi,DWORD PTR [rdx]
     99a:	21 07                	and    DWORD PTR [rdi],eax
     99c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     99e:	39 21                	cmp    DWORD PTR [rcx],esp
     9a0:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     9a3:	01 13                	add    DWORD PTR [rbx],edx
     9a5:	00 00                	add    BYTE PTR [rax],al
     9a7:	19 0d 00 03 08 3a    	sbb    DWORD PTR [rip+0x3a080300],ecx        # 3a080cad <_end+0x3a07ac95>
     9ad:	21 07                	and    DWORD PTR [rdi],eax
     9af:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     9b1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     9b3:	49 13 38             	adc    rdi,QWORD PTR [r8]
     9b6:	0b 00                	or     eax,DWORD PTR [rax]
     9b8:	00 1a                	add    BYTE PTR [rdx],bl
     9ba:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     9bd:	19 03                	sbb    DWORD PTR [rbx],eax
     9bf:	0e                   	(bad)
     9c0:	3a 21                	cmp    ah,BYTE PTR [rcx]
     9c2:	01 3b                	add    DWORD PTR [rbx],edi
     9c4:	0b 39                	or     edi,DWORD PTR [rcx]
     9c6:	21 0a                	and    DWORD PTR [rdx],ecx
     9c8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9c9:	0e                   	(bad)
     9ca:	49 13 11             	adc    rdx,QWORD PTR [r9]
     9cd:	01 12                	add    DWORD PTR [rdx],edx
     9cf:	07                   	(bad)
     9d0:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     9d4:	01 13                	add    DWORD PTR [rbx],edx
     9d6:	00 00                	add    BYTE PTR [rax],al
     9d8:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
     9da:	01 3f                	add    DWORD PTR [rdi],edi
     9dc:	19 03                	sbb    DWORD PTR [rbx],eax
     9de:	0e                   	(bad)
     9df:	3a 21                	cmp    ah,BYTE PTR [rcx]
     9e1:	01 3b                	add    DWORD PTR [rbx],edi
     9e3:	0b 39                	or     edi,DWORD PTR [rcx]
     9e5:	21 0a                	and    DWORD PTR [rdx],ecx
     9e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9e8:	0e                   	(bad)
     9e9:	49 13 01             	adc    rax,QWORD PTR [r9]
     9ec:	13 00                	adc    eax,DWORD PTR [rax]
     9ee:	00 1c 1d 01 31 13 52 	add    BYTE PTR [rbx*1+0x52133101],bl
     9f5:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     9fb:	58                   	pop    rax
     9fc:	21 02                	and    DWORD PTR [rdx],eax
     9fe:	59                   	pop    rcx
     9ff:	21 b1 04 57 21 1c    	and    DWORD PTR [rcx+0x1c215704],esi
     a05:	00 00                	add    BYTE PTR [rax],al
     a07:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
     a0c:	03 08                	add    ecx,DWORD PTR [rax]
     a0e:	3a 21                	cmp    ah,BYTE PTR [rcx]
     a10:	08 3b                	or     BYTE PTR [rbx],bh
     a12:	0b 39                	or     edi,DWORD PTR [rcx]
     a14:	21 03                	and    DWORD PTR [rbx],eax
     a16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a17:	0e                   	(bad)
     a18:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     a1c:	00 00                	add    BYTE PTR [rax],al
     a1e:	1e                   	(bad)
     a1f:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     a22:	19 03                	sbb    DWORD PTR [rbx],eax
     a24:	0e                   	(bad)
     a25:	3a 21                	cmp    ah,BYTE PTR [rcx]
     a27:	07                   	(bad)
     a28:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d2b67 <_end+0x3c0ccb4f>
     a2e:	19 01                	sbb    DWORD PTR [rcx],eax
     a30:	13 00                	adc    eax,DWORD PTR [rax]
     a32:	00 1f                	add    BYTE PTR [rdi],bl
     a34:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     a39:	21 01                	and    DWORD PTR [rcx],eax
     a3b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a3d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a3f:	49 13 02             	adc    rax,QWORD PTR [r10]
     a42:	18 00                	sbb    BYTE PTR [rax],al
     a44:	00 20                	add    BYTE PTR [rax],ah
     a46:	05 00 31 13 00       	add    eax,0x133100
     a4b:	00 21                	add    BYTE PTR [rcx],ah
     a4d:	1d 01 31 13 52       	sbb    eax,0x52133101
     a52:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     a58:	12 07                	adc    al,BYTE PTR [rdi]
     a5a:	58                   	pop    rax
     a5b:	21 01                	and    DWORD PTR [rcx],eax
     a5d:	59                   	pop    rcx
     a5e:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     a61:	01 13                	add    DWORD PTR [rbx],edx
     a63:	00 00                	add    BYTE PTR [rax],al
     a65:	22 11                	and    dl,BYTE PTR [rcx]
     a67:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1d7b <_end+0x30abd63>
     a6d:	1f                   	(bad)
     a6e:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     a70:	11 01                	adc    DWORD PTR [rcx],eax
     a72:	12 07                	adc    al,BYTE PTR [rdi]
     a74:	10 17                	adc    BYTE PTR [rdi],dl
     a76:	00 00                	add    BYTE PTR [rax],al
     a78:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
     a7b:	0b 0b                	or     ecx,DWORD PTR [rbx]
     a7d:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     a80:	08 00                	or     BYTE PTR [rax],al
     a82:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
     a85:	00 0b                	add    BYTE PTR [rbx],cl
     a87:	0b 00                	or     eax,DWORD PTR [rax]
     a89:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e030aa5 <_end+0xe02aa8d>
     a8f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a91:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134915d0 <_end+0x1348b5b8>
     a97:	00 00                	add    BYTE PTR [rax],al
     a99:	26 15 01 49 13 01    	es adc eax,0x1134901
     a9f:	13 00                	adc    eax,DWORD PTR [rax]
     aa1:	00 27                	add    BYTE PTR [rdi],ah
     aa3:	26 00 00             	es add BYTE PTR [rax],al
     aa6:	00 28                	add    BYTE PTR [rax],ch
     aa8:	39 01                	cmp    DWORD PTR [rcx],eax
     aaa:	03 08                	add    ecx,DWORD PTR [rax]
     aac:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     aae:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130115ed <_end+0x1300b5d5>
     ab4:	00 00                	add    BYTE PTR [rax],al
     ab6:	29 08                	sub    DWORD PTR [rax],ecx
     ab8:	00 3a                	add    BYTE PTR [rdx],bh
     aba:	0b 3b                	or     edi,DWORD PTR [rbx]
     abc:	05 39 0b 18 13       	add    eax,0x13180b39
     ac1:	00 00                	add    BYTE PTR [rax],al
     ac3:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b000ac9 <_end+0x2affaab1>
     ac9:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     acc:	19 03                	sbb    DWORD PTR [rbx],eax
     ace:	0e                   	(bad)
     acf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ad1:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1610 <_end+0xe6db5f8>
     ad7:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     adb:	01 13                	add    DWORD PTR [rbx],edx
     add:	00 00                	add    BYTE PTR [rax],al
     adf:	2c 2e                	sub    al,0x2e
     ae1:	01 3f                	add    DWORD PTR [rdi],edi
     ae3:	19 03                	sbb    DWORD PTR [rbx],eax
     ae5:	08 3a                	or     BYTE PTR [rdx],bh
     ae7:	0b 3b                	or     edi,DWORD PTR [rbx]
     ae9:	05 39 0b 49 13       	add    eax,0x13490b39
     aee:	3c 19                	cmp    al,0x19
     af0:	01 13                	add    DWORD PTR [rbx],edx
     af2:	00 00                	add    BYTE PTR [rax],al
     af4:	2d 2e 01 3f 19       	sub    eax,0x193f012e
     af9:	03 0e                	add    ecx,DWORD PTR [rsi]
     afb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     afd:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 187163c <_end+0x186b624>
     b03:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     b06:	01 13                	add    DWORD PTR [rbx],edx
     b08:	00 00                	add    BYTE PTR [rax],al
     b0a:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
     b0e:	19 03                	sbb    DWORD PTR [rbx],eax
     b10:	0e                   	(bad)
     b11:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b13:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491652 <_end+0x1348b63a>
     b19:	3c 19                	cmp    al,0x19
     b1b:	00 00                	add    BYTE PTR [rax],al
     b1d:	2f                   	(bad)
     b1e:	39 01                	cmp    DWORD PTR [rcx],eax
     b20:	03 0e                	add    ecx,DWORD PTR [rsi]
     b22:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b24:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011663 <_end+0x1300b64b>
     b2a:	00 00                	add    BYTE PTR [rax],al
     b2c:	30 13                	xor    BYTE PTR [rbx],dl
     b2e:	01 03                	add    DWORD PTR [rbx],eax
     b30:	0e                   	(bad)
     b31:	0b 0b                	or     ecx,DWORD PTR [rbx]
     b33:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b35:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b37:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b39:	01 13                	add    DWORD PTR [rbx],edx
     b3b:	00 00                	add    BYTE PTR [rax],al
     b3d:	31 01                	xor    DWORD PTR [rcx],eax
     b3f:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     b42:	01 13                	add    DWORD PTR [rbx],edx
     b44:	00 00                	add    BYTE PTR [rax],al
     b46:	32 21                	xor    ah,BYTE PTR [rcx]
     b48:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     b4b:	2f                   	(bad)
     b4c:	0b 00                	or     eax,DWORD PTR [rax]
     b4e:	00 33                	add    BYTE PTR [rbx],dh
     b50:	34 00                	xor    al,0x0
     b52:	03 0e                	add    ecx,DWORD PTR [rsi]
     b54:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b56:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b58:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b5a:	49 13 1c 05 00 00 34 	adc    rbx,QWORD PTR [rax*1+0x5340000]
     b61:	05 
     b62:	00 03                	add    BYTE PTR [rbx],al
     b64:	0e                   	(bad)
     b65:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b67:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b69:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b6b:	49 13 02             	adc    rax,QWORD PTR [r10]
     b6e:	17                   	(bad)
     b6f:	b7 42                	mov    bh,0x42
     b71:	17                   	(bad)
     b72:	00 00                	add    BYTE PTR [rax],al
     b74:	35 34 00 03 08       	xor    eax,0x8030034
     b79:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b7b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b7d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b7f:	49 13 1c 07          	adc    rbx,QWORD PTR [r15+rax*1]
     b83:	00 00                	add    BYTE PTR [rax],al
     b85:	36 1d 01 31 13 52    	ss sbb eax,0x52133101
     b8b:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     b91:	12 07                	adc    al,BYTE PTR [rdi]
     b93:	58                   	pop    rax
     b94:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     b97:	57                   	push   rdi
     b98:	0b 01                	or     eax,DWORD PTR [rcx]
     b9a:	13 00                	adc    eax,DWORD PTR [rax]
     b9c:	00 37                	add    BYTE PTR [rdi],dh
     b9e:	1d 01 31 13 52       	sbb    eax,0x52133101
     ba3:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     ba9:	58                   	pop    rax
     baa:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     bad:	57                   	push   rdi
     bae:	0b 01                	or     eax,DWORD PTR [rcx]
     bb0:	13 00                	adc    eax,DWORD PTR [rax]
     bb2:	00 38                	add    BYTE PTR [rax],bh
     bb4:	1d 01 31 13 52       	sbb    eax,0x52133101
     bb9:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     bbf:	12 07                	adc    al,BYTE PTR [rdi]
     bc1:	58                   	pop    rax
     bc2:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     bc5:	57                   	push   rdi
     bc6:	0b 00                	or     eax,DWORD PTR [rax]
     bc8:	00 39                	add    BYTE PTR [rcx],bh
     bca:	48 00 7d 01          	rex.W add BYTE PTR [rbp+0x1],dil
     bce:	83 01 18             	add    DWORD PTR [rcx],0x18
     bd1:	00 00                	add    BYTE PTR [rax],al
     bd3:	3a 2e                	cmp    ch,BYTE PTR [rsi]
     bd5:	01 3f                	add    DWORD PTR [rdi],edi
     bd7:	19 03                	sbb    DWORD PTR [rbx],eax
     bd9:	0e                   	(bad)
     bda:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bdc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bde:	39 0b                	cmp    DWORD PTR [rbx],ecx
     be0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     be1:	0e                   	(bad)
     be2:	49 13 20             	adc    rsp,QWORD PTR [r8]
     be5:	0b 01                	or     eax,DWORD PTR [rcx]
     be7:	13 00                	adc    eax,DWORD PTR [rax]
     be9:	00 3b                	add    BYTE PTR [rbx],bh
     beb:	34 00                	xor    al,0x0
     bed:	03 08                	add    ecx,DWORD PTR [rax]
     bef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bf1:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491730 <_end+0x1348b718>
     bf7:	00 00                	add    BYTE PTR [rax],al
     bf9:	3c 2e                	cmp    al,0x2e
     bfb:	01 31                	add    DWORD PTR [rcx],esi
     bfd:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     c00:	11 01                	adc    DWORD PTR [rcx],eax
     c02:	12 07                	adc    al,BYTE PTR [rdi]
     c04:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     c08:	00 00                	add    BYTE PTR [rax],al
     c0a:	3d 05 00 31 13       	cmp    eax,0x13310005
     c0f:	02 18                	add    bl,BYTE PTR [rax]
     c11:	00 00                	add    BYTE PTR [rax],al
     c13:	3e 34 00             	ds xor al,0x0
     c16:	31 13                	xor    DWORD PTR [rbx],edx
     c18:	1c 0b                	sbb    al,0xb
     c1a:	00 00                	add    BYTE PTR [rax],al
     c1c:	00 01                	add    BYTE PTR [rcx],al
     c1e:	05 00 49 13 00       	add    eax,0x134900
     c23:	00 02                	add    BYTE PTR [rdx],al
     c25:	08 00                	or     BYTE PTR [rax],al
     c27:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c29:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c2b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c2d:	18 13                	sbb    BYTE PTR [rbx],dl
     c2f:	00 00                	add    BYTE PTR [rax],al
     c31:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     c34:	02 18                	add    bl,BYTE PTR [rax]
     c36:	7e 18                	jle    c50 <__abi_tag+0x8d4>
     c38:	00 00                	add    BYTE PTR [rax],al
     c3a:	04 05                	add    al,0x5
     c3c:	00 31                	add    BYTE PTR [rcx],dh
     c3e:	13 02                	adc    eax,DWORD PTR [rdx]
     c40:	17                   	(bad)
     c41:	b7 42                	mov    bh,0x42
     c43:	17                   	(bad)
     c44:	00 00                	add    BYTE PTR [rax],al
     c46:	05 24 00 0b 0b       	add    eax,0xb0b0024
     c4b:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     c4e:	0e                   	(bad)
     c4f:	00 00                	add    BYTE PTR [rax],al
     c51:	06                   	(bad)
     c52:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     c57:	0b 3b                	or     edi,DWORD PTR [rbx]
     c59:	0b 39                	or     edi,DWORD PTR [rcx]
     c5b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     c5e:	38 0b                	cmp    BYTE PTR [rbx],cl
     c60:	00 00                	add    BYTE PTR [rax],al
     c62:	07                   	(bad)
     c63:	16                   	(bad)
     c64:	00 03                	add    BYTE PTR [rbx],al
     c66:	0e                   	(bad)
     c67:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c69:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c6b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c6d:	49 13 00             	adc    rax,QWORD PTR [r8]
     c70:	00 08                	add    BYTE PTR [rax],cl
     c72:	0f 00 0b             	str    WORD PTR [rbx]
     c75:	21 08                	and    DWORD PTR [rax],ecx
     c77:	49 13 00             	adc    rax,QWORD PTR [r8]
     c7a:	00 09                	add    BYTE PTR [rcx],cl
     c7c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     c7f:	19 03                	sbb    DWORD PTR [rbx],eax
     c81:	0e                   	(bad)
     c82:	3a 21                	cmp    ah,BYTE PTR [rcx]
     c84:	04 3b                	add    al,0x3b
     c86:	05 39 0b 49 13       	add    eax,0x13490b39
     c8b:	3c 19                	cmp    al,0x19
     c8d:	01 13                	add    DWORD PTR [rbx],edx
     c8f:	00 00                	add    BYTE PTR [rax],al
     c91:	0a 05 00 03 0e 3a    	or     al,BYTE PTR [rip+0x3a0e0300]        # 3a0e0f97 <_end+0x3a0daf7f>
     c97:	0b 3b                	or     edi,DWORD PTR [rbx]
     c99:	0b 39                	or     edi,DWORD PTR [rcx]
     c9b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     c9e:	00 00                	add    BYTE PTR [rax],al
     ca0:	0b 48 01             	or     ecx,DWORD PTR [rax+0x1]
     ca3:	7d 01                	jge    ca6 <__abi_tag+0x92a>
     ca5:	7f 13                	jg     cba <__abi_tag+0x93e>
     ca7:	00 00                	add    BYTE PTR [rax],al
     ca9:	0c 2e                	or     al,0x2e
     cab:	01 3f                	add    DWORD PTR [rdi],edi
     cad:	19 03                	sbb    DWORD PTR [rbx],eax
     caf:	0e                   	(bad)
     cb0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     cb2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cb4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     cb6:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     cba:	01 13                	add    DWORD PTR [rbx],edx
     cbc:	00 00                	add    BYTE PTR [rax],al
     cbe:	0d 34 00 31 13       	or     eax,0x13310034
     cc3:	02 17                	add    dl,BYTE PTR [rdi]
     cc5:	b7 42                	mov    bh,0x42
     cc7:	17                   	(bad)
     cc8:	00 00                	add    BYTE PTR [rax],al
     cca:	0e                   	(bad)
     ccb:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
     ccf:	00 00                	add    BYTE PTR [rax],al
     cd1:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     cd4:	3f                   	(bad)
     cd5:	19 03                	sbb    DWORD PTR [rbx],eax
     cd7:	08 3a                	or     BYTE PTR [rdx],bh
     cd9:	21 07                	and    DWORD PTR [rdi],eax
     cdb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cdd:	39 21                	cmp    DWORD PTR [rcx],esp
     cdf:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     ce2:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ce6:	01 13                	add    DWORD PTR [rbx],edx
     ce8:	00 00                	add    BYTE PTR [rax],al
     cea:	10 01                	adc    BYTE PTR [rcx],al
     cec:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     cef:	01 13                	add    DWORD PTR [rbx],edx
     cf1:	00 00                	add    BYTE PTR [rax],al
     cf3:	11 21                	adc    DWORD PTR [rcx],esp
     cf5:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     cf8:	2f                   	(bad)
     cf9:	0b 00                	or     eax,DWORD PTR [rax]
     cfb:	00 12                	add    BYTE PTR [rdx],dl
     cfd:	1d 01 31 13 52       	sbb    eax,0x52133101
     d02:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     d08:	58                   	pop    rax
     d09:	21 01                	and    DWORD PTR [rcx],eax
     d0b:	59                   	pop    rcx
     d0c:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     d0f:	01 13                	add    DWORD PTR [rbx],edx
     d11:	00 00                	add    BYTE PTR [rax],al
     d13:	13 48 00             	adc    ecx,DWORD PTR [rax+0x0]
     d16:	7d 01                	jge    d19 <__abi_tag+0x99d>
     d18:	83 01 18             	add    DWORD PTR [rcx],0x18
     d1b:	00 00                	add    BYTE PTR [rax],al
     d1d:	14 2e                	adc    al,0x2e
     d1f:	01 3f                	add    DWORD PTR [rdi],edi
     d21:	19 03                	sbb    DWORD PTR [rbx],eax
     d23:	0e                   	(bad)
     d24:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d26:	04 3b                	add    al,0x3b
     d28:	0b 39                	or     edi,DWORD PTR [rcx]
     d2a:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     d2d:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     d31:	01 13                	add    DWORD PTR [rbx],edx
     d33:	00 00                	add    BYTE PTR [rax],al
     d35:	15 34 00 03 0e       	adc    eax,0xe030034
     d3a:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d3c:	01 3b                	add    DWORD PTR [rbx],edi
     d3e:	0b 39                	or     edi,DWORD PTR [rcx]
     d40:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d43:	02 17                	add    dl,BYTE PTR [rdi]
     d45:	b7 42                	mov    bh,0x42
     d47:	17                   	(bad)
     d48:	00 00                	add    BYTE PTR [rax],al
     d4a:	16                   	(bad)
     d4b:	13 01                	adc    eax,DWORD PTR [rcx]
     d4d:	0b 0b                	or     ecx,DWORD PTR [rbx]
     d4f:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d51:	04 3b                	add    al,0x3b
     d53:	0b 39                	or     edi,DWORD PTR [rcx]
     d55:	21 03                	and    DWORD PTR [rbx],eax
     d57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d58:	0e                   	(bad)
     d59:	01 13                	add    DWORD PTR [rbx],edx
     d5b:	00 00                	add    BYTE PTR [rax],al
     d5d:	17                   	(bad)
     d5e:	0d 00 03 08 3a       	or     eax,0x3a080300
     d63:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
     d66:	0b 39                	or     edi,DWORD PTR [rcx]
     d68:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d6b:	38 0b                	cmp    BYTE PTR [rbx],cl
     d6d:	00 00                	add    BYTE PTR [rax],al
     d6f:	18 2e                	sbb    BYTE PTR [rsi],ch
     d71:	01 3f                	add    DWORD PTR [rdi],edi
     d73:	19 03                	sbb    DWORD PTR [rbx],eax
     d75:	0e                   	(bad)
     d76:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d78:	04 3b                	add    al,0x3b
     d7a:	05 39 21 0d 3c       	add    eax,0x3c0d2139
     d7f:	19 01                	sbb    DWORD PTR [rcx],eax
     d81:	13 00                	adc    eax,DWORD PTR [rax]
     d83:	00 19                	add    BYTE PTR [rcx],bl
     d85:	13 01                	adc    eax,DWORD PTR [rcx]
     d87:	03 0e                	add    ecx,DWORD PTR [rsi]
     d89:	0b 0b                	or     ecx,DWORD PTR [rbx]
     d8b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d8d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d8f:	39 21                	cmp    DWORD PTR [rcx],esp
     d91:	10 01                	adc    BYTE PTR [rcx],al
     d93:	13 00                	adc    eax,DWORD PTR [rax]
     d95:	00 1a                	add    BYTE PTR [rdx],bl
     d97:	34 00                	xor    al,0x0
     d99:	03 0e                	add    ecx,DWORD PTR [rsi]
     d9b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d9d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d9f:	39 21                	cmp    DWORD PTR [rcx],esp
     da1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     da4:	1c 0b                	sbb    al,0xb
     da6:	00 00                	add    BYTE PTR [rax],al
     da8:	1b 05 00 03 0e 3a    	sbb    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e10ae <_end+0x3a0db096>
     dae:	21 01                	and    DWORD PTR [rcx],eax
     db0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     db2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     db4:	49 13 02             	adc    rax,QWORD PTR [r10]
     db7:	17                   	(bad)
     db8:	b7 42                	mov    bh,0x42
     dba:	17                   	(bad)
     dbb:	00 00                	add    BYTE PTR [rax],al
     dbd:	1c 34                	sbb    al,0x34
     dbf:	00 03                	add    BYTE PTR [rbx],al
     dc1:	0e                   	(bad)
     dc2:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     dc6:	6c                   	ins    BYTE PTR es:[rdi],dx
     dc7:	19 02                	sbb    DWORD PTR [rdx],eax
     dc9:	18 00                	sbb    BYTE PTR [rax],al
     dcb:	00 1d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],bl        # 193f0eff <_end+0x193eaee7>
     dd1:	03 0e                	add    ecx,DWORD PTR [rsi]
     dd3:	3a 21                	cmp    ah,BYTE PTR [rcx]
     dd5:	01 3b                	add    DWORD PTR [rbx],edi
     dd7:	0b 39                	or     edi,DWORD PTR [rcx]
     dd9:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     ddc:	49 13 11             	adc    rdx,QWORD PTR [r9]
     ddf:	01 12                	add    DWORD PTR [rdx],edx
     de1:	07                   	(bad)
     de2:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     de6:	01 13                	add    DWORD PTR [rbx],edx
     de8:	00 00                	add    BYTE PTR [rax],al
     dea:	1e                   	(bad)
     deb:	34 00                	xor    al,0x0
     ded:	03 08                	add    ecx,DWORD PTR [rax]
     def:	3a 21                	cmp    ah,BYTE PTR [rcx]
     df1:	01 3b                	add    DWORD PTR [rbx],edi
     df3:	0b 39                	or     edi,DWORD PTR [rcx]
     df5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     df8:	02 17                	add    dl,BYTE PTR [rdi]
     dfa:	b7 42                	mov    bh,0x42
     dfc:	17                   	(bad)
     dfd:	00 00                	add    BYTE PTR [rax],al
     dff:	1f                   	(bad)
     e00:	0b 01                	or     eax,DWORD PTR [rcx]
     e02:	55                   	push   rbp
     e03:	17                   	(bad)
     e04:	00 00                	add    BYTE PTR [rax],al
     e06:	20 37                	and    BYTE PTR [rdi],dh
     e08:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     e0b:	00 00                	add    BYTE PTR [rax],al
     e0d:	21 2e                	and    DWORD PTR [rsi],ebp
     e0f:	01 3f                	add    DWORD PTR [rdi],edi
     e11:	19 03                	sbb    DWORD PTR [rbx],eax
     e13:	08 3a                	or     BYTE PTR [rdx],bh
     e15:	21 06                	and    DWORD PTR [rsi],eax
     e17:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e19:	39 21                	cmp    DWORD PTR [rcx],esp
     e1b:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     e1e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     e22:	00 00                	add    BYTE PTR [rax],al
     e24:	22 34 00             	and    dh,BYTE PTR [rax+rax*1]
     e27:	03 0e                	add    ecx,DWORD PTR [rsi]
     e29:	3a 21                	cmp    ah,BYTE PTR [rcx]
     e2b:	01 3b                	add    DWORD PTR [rbx],edi
     e2d:	0b 39                	or     edi,DWORD PTR [rcx]
     e2f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     e32:	00 00                	add    BYTE PTR [rax],al
     e34:	23 34 00             	and    esi,DWORD PTR [rax+rax*1]
     e37:	03 08                	add    ecx,DWORD PTR [rax]
     e39:	3a 21                	cmp    ah,BYTE PTR [rcx]
     e3b:	01 3b                	add    DWORD PTR [rbx],edi
     e3d:	0b 39                	or     edi,DWORD PTR [rcx]
     e3f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     e42:	00 00                	add    BYTE PTR [rax],al
     e44:	24 05                	and    al,0x5
     e46:	00 03                	add    BYTE PTR [rbx],al
     e48:	0e                   	(bad)
     e49:	3a 21                	cmp    ah,BYTE PTR [rcx]
     e4b:	01 3b                	add    DWORD PTR [rbx],edi
     e4d:	0b 39                	or     edi,DWORD PTR [rcx]
     e4f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     e52:	02 18                	add    bl,BYTE PTR [rax]
     e54:	00 00                	add    BYTE PTR [rax],al
     e56:	25 1d 01 31 13       	and    eax,0x1331011d
     e5b:	52                   	push   rdx
     e5c:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     e62:	12 07                	adc    al,BYTE PTR [rdi]
     e64:	58                   	pop    rax
     e65:	21 01                	and    DWORD PTR [rcx],eax
     e67:	59                   	pop    rcx
     e68:	0b 57 21             	or     edx,DWORD PTR [rdi+0x21]
     e6b:	19 00                	sbb    DWORD PTR [rax],eax
     e6d:	00 26                	add    BYTE PTR [rsi],ah
     e6f:	05 00 31 13 00       	add    eax,0x133100
     e74:	00 27                	add    BYTE PTR [rdi],ah
     e76:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     e79:	19 03                	sbb    DWORD PTR [rbx],eax
     e7b:	0e                   	(bad)
     e7c:	3a 21                	cmp    ah,BYTE PTR [rcx]
     e7e:	02 3b                	add    bh,BYTE PTR [rbx]
     e80:	0b 39                	or     edi,DWORD PTR [rcx]
     e82:	21 01                	and    DWORD PTR [rcx],eax
     e84:	49 13 20             	adc    rsp,QWORD PTR [r8]
     e87:	21 03                	and    DWORD PTR [rbx],eax
     e89:	34 19                	xor    al,0x19
     e8b:	01 13                	add    DWORD PTR [rbx],edx
     e8d:	00 00                	add    BYTE PTR [rax],al
     e8f:	28 2e                	sub    BYTE PTR [rsi],ch
     e91:	00 3f                	add    BYTE PTR [rdi],bh
     e93:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     e96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e97:	0e                   	(bad)
     e98:	03 0e                	add    ecx,DWORD PTR [rsi]
     e9a:	00 00                	add    BYTE PTR [rax],al
     e9c:	29 11                	sub    DWORD PTR [rcx],edx
     e9e:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b21b2 <_end+0x30ac19a>
     ea4:	1f                   	(bad)
     ea5:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     ea7:	11 01                	adc    DWORD PTR [rcx],eax
     ea9:	12 07                	adc    al,BYTE PTR [rdi]
     eab:	10 17                	adc    BYTE PTR [rdi],dl
     ead:	00 00                	add    BYTE PTR [rax],al
     eaf:	2a 24 00             	sub    ah,BYTE PTR [rax+rax*1]
     eb2:	0b 0b                	or     ecx,DWORD PTR [rbx]
     eb4:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     eb7:	08 00                	or     BYTE PTR [rax],al
     eb9:	00 2b                	add    BYTE PTR [rbx],ch
     ebb:	0f 00 0b             	str    WORD PTR [rbx]
     ebe:	0b 00                	or     eax,DWORD PTR [rax]
     ec0:	00 2c 16             	add    BYTE PTR [rsi+rdx*1],ch
     ec3:	00 03                	add    BYTE PTR [rbx],al
     ec5:	0e                   	(bad)
     ec6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ec8:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491a07 <_end+0x1348b9ef>
     ece:	00 00                	add    BYTE PTR [rax],al
     ed0:	2d 15 01 49 13       	sub    eax,0x13490115
     ed5:	01 13                	add    DWORD PTR [rbx],edx
     ed7:	00 00                	add    BYTE PTR [rax],al
     ed9:	2e 26 00 00          	cs es add BYTE PTR [rax],al
     edd:	00 2f                	add    BYTE PTR [rdi],ch
     edf:	39 01                	cmp    DWORD PTR [rcx],eax
     ee1:	03 08                	add    ecx,DWORD PTR [rax]
     ee3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ee5:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011a24 <_end+0x1300ba0c>
     eeb:	00 00                	add    BYTE PTR [rax],al
     eed:	30 08                	xor    BYTE PTR [rax],cl
     eef:	00 3a                	add    BYTE PTR [rdx],bh
     ef1:	0b 3b                	or     edi,DWORD PTR [rbx]
     ef3:	05 39 0b 18 13       	add    eax,0x13180b39
     ef8:	00 00                	add    BYTE PTR [rax],al
     efa:	31 15 00 00 00 32    	xor    DWORD PTR [rip+0x32000000],edx        # 32000f00 <_end+0x31ffaee8>
     f00:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     f03:	19 03                	sbb    DWORD PTR [rbx],eax
     f05:	0e                   	(bad)
     f06:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f08:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1a47 <_end+0xe6dba2f>
     f0e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     f12:	01 13                	add    DWORD PTR [rbx],edx
     f14:	00 00                	add    BYTE PTR [rax],al
     f16:	33 2e                	xor    ebp,DWORD PTR [rsi]
     f18:	01 3f                	add    DWORD PTR [rdi],edi
     f1a:	19 03                	sbb    DWORD PTR [rbx],eax
     f1c:	08 3a                	or     BYTE PTR [rdx],bh
     f1e:	0b 3b                	or     edi,DWORD PTR [rbx]
     f20:	05 39 0b 49 13       	add    eax,0x13490b39
     f25:	3c 19                	cmp    al,0x19
     f27:	01 13                	add    DWORD PTR [rbx],edx
     f29:	00 00                	add    BYTE PTR [rax],al
     f2b:	34 2e                	xor    al,0x2e
     f2d:	01 3f                	add    DWORD PTR [rdi],edi
     f2f:	19 03                	sbb    DWORD PTR [rbx],eax
     f31:	0e                   	(bad)
     f32:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f34:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871a73 <_end+0x186ba5b>
     f3a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     f3d:	01 13                	add    DWORD PTR [rbx],edx
     f3f:	00 00                	add    BYTE PTR [rax],al
     f41:	35 2e 00 3f 19       	xor    eax,0x193f002e
     f46:	03 0e                	add    ecx,DWORD PTR [rsi]
     f48:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f4a:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491a89 <_end+0x1348ba71>
     f50:	3c 19                	cmp    al,0x19
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	36 39 01             	ss cmp DWORD PTR [rcx],eax
     f57:	03 0e                	add    ecx,DWORD PTR [rsi]
     f59:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f5b:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011a9a <_end+0x1300ba82>
     f61:	00 00                	add    BYTE PTR [rax],al
     f63:	37                   	(bad)
     f64:	01 01                	add    DWORD PTR [rcx],eax
     f66:	87 42 19             	xchg   DWORD PTR [rdx+0x19],eax
     f69:	49 13 01             	adc    rax,QWORD PTR [r9]
     f6c:	13 00                	adc    eax,DWORD PTR [rax]
     f6e:	00 38                	add    BYTE PTR [rax],bh
     f70:	21 00                	and    DWORD PTR [rax],eax
     f72:	2f                   	(bad)
     f73:	0b 00                	or     eax,DWORD PTR [rax]
     f75:	00 39                	add    BYTE PTR [rcx],bh
     f77:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     f7a:	19 03                	sbb    DWORD PTR [rbx],eax
     f7c:	0e                   	(bad)
     f7d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f7f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f81:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f83:	87 01                	xchg   DWORD PTR [rcx],eax
     f85:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     f88:	01 13                	add    DWORD PTR [rbx],edx
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	3a 2e                	cmp    ch,BYTE PTR [rsi]
     f8e:	01 3f                	add    DWORD PTR [rdi],edi
     f90:	19 03                	sbb    DWORD PTR [rbx],eax
     f92:	0e                   	(bad)
     f93:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f95:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f97:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f99:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f9a:	0e                   	(bad)
     f9b:	11 01                	adc    DWORD PTR [rcx],eax
     f9d:	12 07                	adc    al,BYTE PTR [rdi]
     f9f:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     fa3:	01 13                	add    DWORD PTR [rbx],edx
     fa5:	00 00                	add    BYTE PTR [rax],al
     fa7:	3b 48 00             	cmp    ecx,DWORD PTR [rax+0x0]
     faa:	7d 01                	jge    fad <__abi_tag+0xc31>
     fac:	7f 13                	jg     fc1 <__abi_tag+0xc45>
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	3c 2e                	cmp    al,0x2e
     fb2:	01 03                	add    DWORD PTR [rbx],eax
     fb4:	0e                   	(bad)
     fb5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fb7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fb9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fbb:	49 13 20             	adc    rsp,QWORD PTR [r8]
     fbe:	0b 01                	or     eax,DWORD PTR [rcx]
     fc0:	13 00                	adc    eax,DWORD PTR [rax]
     fc2:	00 3d 2e 01 03 0e    	add    BYTE PTR [rip+0xe03012e],bh        # e0310f6 <_end+0xe02b0de>
     fc8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fca:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fcc:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fce:	20 0b                	and    BYTE PTR [rbx],cl
     fd0:	01 13                	add    DWORD PTR [rbx],edx
     fd2:	00 00                	add    BYTE PTR [rax],al
     fd4:	3e 0b 01             	ds or  eax,DWORD PTR [rcx]
     fd7:	00 00                	add    BYTE PTR [rax],al
     fd9:	3f                   	(bad)
     fda:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     fdd:	19 03                	sbb    DWORD PTR [rbx],eax
     fdf:	0e                   	(bad)
     fe0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fe2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fe4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fe6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fe7:	0e                   	(bad)
     fe8:	49 13 20             	adc    rsp,QWORD PTR [r8]
     feb:	0b 01                	or     eax,DWORD PTR [rcx]
     fed:	13 00                	adc    eax,DWORD PTR [rax]
     fef:	00 40 34             	add    BYTE PTR [rax+0x34],al
     ff2:	00 03                	add    BYTE PTR [rbx],al
     ff4:	0e                   	(bad)
     ff5:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     ff9:	6c                   	ins    BYTE PTR es:[rdi],dx
     ffa:	19 00                	sbb    DWORD PTR [rax],eax
     ffc:	00 41 0b             	add    BYTE PTR [rcx+0xb],al
     fff:	01 11                	add    DWORD PTR [rcx],edx
    1001:	01 12                	add    DWORD PTR [rdx],edx
    1003:	07                   	(bad)
    1004:	01 13                	add    DWORD PTR [rbx],edx
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	42 1d 01 31 13 52    	rex.X sbb eax,0x52133101
    100e:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
    1014:	12 07                	adc    al,BYTE PTR [rdi]
    1016:	58                   	pop    rax
    1017:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    101a:	57                   	push   rdi
    101b:	0b 01                	or     eax,DWORD PTR [rcx]
    101d:	13 00                	adc    eax,DWORD PTR [rax]
    101f:	00 43 0b             	add    BYTE PTR [rbx+0xb],al
    1022:	01 31                	add    DWORD PTR [rcx],esi
    1024:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
    1027:	01 13                	add    DWORD PTR [rbx],edx
    1029:	00 00                	add    BYTE PTR [rax],al
    102b:	44                   	rex.R
    102c:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
    1030:	7f 13                	jg     1045 <rand@plt+0x5>
    1032:	01 13                	add    DWORD PTR [rbx],edx
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	45 0b 01             	or     r8d,DWORD PTR [r9]
    1039:	55                   	push   rbp
    103a:	17                   	(bad)
    103b:	01 13                	add    DWORD PTR [rbx],edx
    103d:	00 00                	add    BYTE PTR [rax],al
    103f:	46                   	rex.RX
    1040:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1043:	13 11                	adc    edx,DWORD PTR [rcx]
    1045:	01 12                	add    DWORD PTR [rdx],edx
    1047:	07                   	(bad)
    1048:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    104c:	01 13                	add    DWORD PTR [rbx],edx
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	47 34 00             	rex.RXB xor al,0x0
    1053:	31 13                	xor    DWORD PTR [rbx],edx
    1055:	00 00                	add    BYTE PTR [rax],al
    1057:	48                   	rex.W
    1058:	2e 01 31             	cs add DWORD PTR [rcx],esi
    105b:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    105e:	11 01                	adc    DWORD PTR [rcx],eax
    1060:	12 07                	adc    al,BYTE PTR [rdi]
    1062:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    1066:	01 13                	add    DWORD PTR [rbx],edx
    1068:	00 00                	add    BYTE PTR [rax],al
    106a:	49 05 00 31 13 02    	rex.WB add rax,0x2133100
    1070:	18 00                	sbb    BYTE PTR [rax],al
    1072:	00 4a 49             	add    BYTE PTR [rdx+0x49],cl
    1075:	00 80 01 13 7e 18    	add    BYTE PTR [rax+0x187e1301],al
    107b:	00 00                	add    BYTE PTR [rax],al
    107d:	00 01                	add    BYTE PTR [rcx],al
    107f:	05 00 49 13 00       	add    eax,0x134900
    1084:	00 02                	add    BYTE PTR [rdx],al
    1086:	08 00                	or     BYTE PTR [rax],al
    1088:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    108a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    108c:	39 0b                	cmp    DWORD PTR [rbx],ecx
    108e:	18 13                	sbb    BYTE PTR [rbx],dl
    1090:	00 00                	add    BYTE PTR [rax],al
    1092:	03 0d 00 03 0e 3a    	add    ecx,DWORD PTR [rip+0x3a0e0300]        # 3a0e1398 <_end+0x3a0db380>
    1098:	0b 3b                	or     edi,DWORD PTR [rbx]
    109a:	0b 39                	or     edi,DWORD PTR [rcx]
    109c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    109f:	38 0b                	cmp    BYTE PTR [rbx],cl
    10a1:	00 00                	add    BYTE PTR [rax],al
    10a3:	04 16                	add    al,0x16
    10a5:	00 03                	add    BYTE PTR [rbx],al
    10a7:	0e                   	(bad)
    10a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10aa:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10ac:	39 0b                	cmp    DWORD PTR [rbx],ecx
    10ae:	49 13 00             	adc    rax,QWORD PTR [r8]
    10b1:	00 05 49 00 02 18    	add    BYTE PTR [rip+0x18020049],al        # 18021100 <_end+0x1801b0e8>
    10b7:	7e 18                	jle    10d1 <fclose@plt+0x1>
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	06                   	(bad)
    10bc:	24 00                	and    al,0x0
    10be:	0b 0b                	or     ecx,DWORD PTR [rbx]
    10c0:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    10c3:	0e                   	(bad)
    10c4:	00 00                	add    BYTE PTR [rax],al
    10c6:	07                   	(bad)
    10c7:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    10ca:	19 03                	sbb    DWORD PTR [rbx],eax
    10cc:	0e                   	(bad)
    10cd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10cf:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491c0e <_end+0x1348bbf6>
    10d5:	3c 19                	cmp    al,0x19
    10d7:	01 13                	add    DWORD PTR [rbx],edx
    10d9:	00 00                	add    BYTE PTR [rax],al
    10db:	08 2e                	or     BYTE PTR [rsi],ch
    10dd:	01 3f                	add    DWORD PTR [rdi],edi
    10df:	19 03                	sbb    DWORD PTR [rbx],eax
    10e1:	0e                   	(bad)
    10e2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10e4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10e6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    10e8:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    10ec:	01 13                	add    DWORD PTR [rbx],edx
    10ee:	00 00                	add    BYTE PTR [rax],al
    10f0:	09 0f                	or     DWORD PTR [rdi],ecx
    10f2:	00 0b                	add    BYTE PTR [rbx],cl
    10f4:	21 08                	and    DWORD PTR [rax],ecx
    10f6:	49 13 00             	adc    rax,QWORD PTR [r8]
    10f9:	00 0a                	add    BYTE PTR [rdx],cl
    10fb:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    10fe:	19 03                	sbb    DWORD PTR [rbx],eax
    1100:	08 3a                	or     BYTE PTR [rdx],bh
    1102:	21 0b                	and    DWORD PTR [rbx],ecx
    1104:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1106:	39 21                	cmp    DWORD PTR [rcx],esp
    1108:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    110b:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    110f:	01 13                	add    DWORD PTR [rbx],edx
    1111:	00 00                	add    BYTE PTR [rax],al
    1113:	0b 2e                	or     ebp,DWORD PTR [rsi]
    1115:	01 3f                	add    DWORD PTR [rdi],edi
    1117:	19 03                	sbb    DWORD PTR [rbx],eax
    1119:	0e                   	(bad)
    111a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    111c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    111e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1120:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1121:	0e                   	(bad)
    1122:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1126:	01 13                	add    DWORD PTR [rbx],edx
    1128:	00 00                	add    BYTE PTR [rax],al
    112a:	0c 05                	or     al,0x5
    112c:	00 31                	add    BYTE PTR [rcx],dh
    112e:	13 02                	adc    eax,DWORD PTR [rdx]
    1130:	17                   	(bad)
    1131:	b7 42                	mov    bh,0x42
    1133:	17                   	(bad)
    1134:	00 00                	add    BYTE PTR [rax],al
    1136:	0d 34 00 03 0e       	or     eax,0xe030034
    113b:	3a 21                	cmp    ah,BYTE PTR [rcx]
    113d:	01 3b                	add    DWORD PTR [rbx],edi
    113f:	0b 39                	or     edi,DWORD PTR [rcx]
    1141:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1144:	02 17                	add    dl,BYTE PTR [rdi]
    1146:	b7 42                	mov    bh,0x42
    1148:	17                   	(bad)
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	0e                   	(bad)
    114c:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    1151:	0b 3b                	or     edi,DWORD PTR [rbx]
    1153:	0b 39                	or     edi,DWORD PTR [rcx]
    1155:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1158:	00 00                	add    BYTE PTR [rax],al
    115a:	0f 26                	(bad)
    115c:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    115f:	00 00                	add    BYTE PTR [rax],al
    1161:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e1467 <_end+0x3a0db44f>
    1167:	21 01                	and    DWORD PTR [rcx],eax
    1169:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    116b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    116d:	49 13 02             	adc    rax,QWORD PTR [r10]
    1170:	17                   	(bad)
    1171:	b7 42                	mov    bh,0x42
    1173:	17                   	(bad)
    1174:	00 00                	add    BYTE PTR [rax],al
    1176:	11 48 01             	adc    DWORD PTR [rax+0x1],ecx
    1179:	7d 01                	jge    117c <__memcpy_chk@plt+0xc>
    117b:	7f 13                	jg     1190 <fwrite@plt>
    117d:	00 00                	add    BYTE PTR [rax],al
    117f:	12 48 01             	adc    cl,BYTE PTR [rax+0x1]
    1182:	7d 01                	jge    1185 <sqrtf@plt+0x5>
    1184:	7f 13                	jg     1199 <fwrite@plt+0x9>
    1186:	01 13                	add    DWORD PTR [rbx],edx
    1188:	00 00                	add    BYTE PTR [rax],al
    118a:	13 13                	adc    edx,DWORD PTR [rbx]
    118c:	01 0b                	add    DWORD PTR [rbx],ecx
    118e:	0b 3a                	or     edi,DWORD PTR [rdx]
    1190:	21 06                	and    DWORD PTR [rsi],eax
    1192:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1194:	39 21                	cmp    DWORD PTR [rcx],esp
    1196:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    1199:	01 13                	add    DWORD PTR [rbx],edx
    119b:	00 00                	add    BYTE PTR [rax],al
    119d:	14 0d                	adc    al,0xd
    119f:	00 03                	add    BYTE PTR [rbx],al
    11a1:	08 3a                	or     BYTE PTR [rdx],bh
    11a3:	21 06                	and    DWORD PTR [rsi],eax
    11a5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    11a7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    11a9:	49 13 38             	adc    rdi,QWORD PTR [r8]
    11ac:	0b 00                	or     eax,DWORD PTR [rax]
    11ae:	00 15 01 01 49 13    	add    BYTE PTR [rip+0x13490101],dl        # 134912b5 <_end+0x1348b29d>
    11b4:	01 13                	add    DWORD PTR [rbx],edx
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	16                   	(bad)
    11b9:	21 00                	and    DWORD PTR [rax],eax
    11bb:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    11be:	0b 00                	or     eax,DWORD PTR [rax]
    11c0:	00 17                	add    BYTE PTR [rdi],dl
    11c2:	13 01                	adc    eax,DWORD PTR [rcx]
    11c4:	03 0e                	add    ecx,DWORD PTR [rsi]
    11c6:	0b 0b                	or     ecx,DWORD PTR [rbx]
    11c8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11ca:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    11cc:	39 21                	cmp    DWORD PTR [rcx],esp
    11ce:	08 01                	or     BYTE PTR [rcx],al
    11d0:	13 00                	adc    eax,DWORD PTR [rax]
    11d2:	00 18                	add    BYTE PTR [rax],bl
    11d4:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    11d7:	19 03                	sbb    DWORD PTR [rbx],eax
    11d9:	08 3a                	or     BYTE PTR [rdx],bh
    11db:	21 0a                	and    DWORD PTR [rdx],ecx
    11dd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    11df:	39 21                	cmp    DWORD PTR [rcx],esp
    11e1:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    11e4:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    11e8:	00 00                	add    BYTE PTR [rax],al
    11ea:	19 2e                	sbb    DWORD PTR [rsi],ebp
    11ec:	01 3f                	add    DWORD PTR [rdi],edi
    11ee:	19 03                	sbb    DWORD PTR [rbx],eax
    11f0:	0e                   	(bad)
    11f1:	3a 21                	cmp    ah,BYTE PTR [rcx]
    11f3:	06                   	(bad)
    11f4:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d3333 <_end+0x3c0cd31b>
    11fa:	19 01                	sbb    DWORD PTR [rcx],eax
    11fc:	13 00                	adc    eax,DWORD PTR [rax]
    11fe:	00 1a                	add    BYTE PTR [rdx],bl
    1200:	18 00                	sbb    BYTE PTR [rax],al
    1202:	00 00                	add    BYTE PTR [rax],al
    1204:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    1206:	00 3f                	add    BYTE PTR [rdi],bh
    1208:	19 03                	sbb    DWORD PTR [rbx],eax
    120a:	0e                   	(bad)
    120b:	3a 21                	cmp    ah,BYTE PTR [rcx]
    120d:	02 3b                	add    bh,BYTE PTR [rbx]
    120f:	0b 39                	or     edi,DWORD PTR [rcx]
    1211:	21 01                	and    DWORD PTR [rcx],eax
    1213:	3c 19                	cmp    al,0x19
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	1c 2e                	sbb    al,0x2e
    1219:	01 3f                	add    DWORD PTR [rdi],edi
    121b:	19 03                	sbb    DWORD PTR [rbx],eax
    121d:	0e                   	(bad)
    121e:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1220:	01 3b                	add    DWORD PTR [rbx],edi
    1222:	0b 39                	or     edi,DWORD PTR [rcx]
    1224:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    1227:	49 13 11             	adc    rdx,QWORD PTR [r9]
    122a:	01 12                	add    DWORD PTR [rdx],edx
    122c:	07                   	(bad)
    122d:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    1231:	01 13                	add    DWORD PTR [rbx],edx
    1233:	00 00                	add    BYTE PTR [rax],al
    1235:	1d 34 00 03 0e       	sbb    eax,0xe030034
    123a:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    123e:	6c                   	ins    BYTE PTR es:[rdi],dx
    123f:	19 02                	sbb    DWORD PTR [rdx],eax
    1241:	18 00                	sbb    BYTE PTR [rax],al
    1243:	00 1e                	add    BYTE PTR [rsi],bl
    1245:	1d 01 31 13 52       	sbb    eax,0x52133101
    124a:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
    1250:	58                   	pop    rax
    1251:	21 01                	and    DWORD PTR [rcx],eax
    1253:	59                   	pop    rcx
    1254:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1257:	01 13                	add    DWORD PTR [rbx],edx
    1259:	00 00                	add    BYTE PTR [rax],al
    125b:	1f                   	(bad)
    125c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    125f:	19 03                	sbb    DWORD PTR [rbx],eax
    1261:	0e                   	(bad)
    1262:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1264:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1266:	39 21                	cmp    DWORD PTR [rcx],esp
    1268:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    126b:	20 21                	and    BYTE PTR [rcx],ah
    126d:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
    1270:	01 13                	add    DWORD PTR [rbx],edx
    1272:	00 00                	add    BYTE PTR [rax],al
    1274:	20 05 00 03 08 3a    	and    BYTE PTR [rip+0x3a080300],al        # 3a08157a <_end+0x3a07b562>
    127a:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    127d:	0b 39                	or     edi,DWORD PTR [rcx]
    127f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1282:	00 00                	add    BYTE PTR [rax],al
    1284:	21 2e                	and    DWORD PTR [rsi],ebp
    1286:	00 3f                	add    BYTE PTR [rdi],bh
    1288:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    128b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    128c:	0e                   	(bad)
    128d:	03 0e                	add    ecx,DWORD PTR [rsi]
    128f:	00 00                	add    BYTE PTR [rax],al
    1291:	22 11                	and    dl,BYTE PTR [rcx]
    1293:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b25a7 <_end+0x30ac58f>
    1299:	1f                   	(bad)
    129a:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    129c:	11 01                	adc    DWORD PTR [rcx],eax
    129e:	12 07                	adc    al,BYTE PTR [rdi]
    12a0:	10 17                	adc    BYTE PTR [rdi],dl
    12a2:	00 00                	add    BYTE PTR [rax],al
    12a4:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
    12a7:	0b 0b                	or     ecx,DWORD PTR [rbx]
    12a9:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    12ac:	08 00                	or     BYTE PTR [rax],al
    12ae:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
    12b1:	00 0b                	add    BYTE PTR [rbx],cl
    12b3:	0b 00                	or     eax,DWORD PTR [rax]
    12b5:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e0312d1 <_end+0xe02b2b9>
    12bb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12bd:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491dfc <_end+0x1348bde4>
    12c3:	00 00                	add    BYTE PTR [rax],al
    12c5:	26 15 01 49 13 01    	es adc eax,0x1134901
    12cb:	13 00                	adc    eax,DWORD PTR [rax]
    12cd:	00 27                	add    BYTE PTR [rdi],ah
    12cf:	26 00 00             	es add BYTE PTR [rax],al
    12d2:	00 28                	add    BYTE PTR [rax],ch
    12d4:	39 01                	cmp    DWORD PTR [rcx],eax
    12d6:	03 08                	add    ecx,DWORD PTR [rax]
    12d8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12da:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011e19 <_end+0x1300be01>
    12e0:	00 00                	add    BYTE PTR [rax],al
    12e2:	29 08                	sub    DWORD PTR [rax],ecx
    12e4:	00 3a                	add    BYTE PTR [rdx],bh
    12e6:	0b 3b                	or     edi,DWORD PTR [rbx]
    12e8:	05 39 0b 18 13       	add    eax,0x13180b39
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b0012f5 <_end+0x2affb2dd>
    12f5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    12f8:	19 03                	sbb    DWORD PTR [rbx],eax
    12fa:	0e                   	(bad)
    12fb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12fd:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1e3c <_end+0xe6dbe24>
    1303:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1307:	01 13                	add    DWORD PTR [rbx],edx
    1309:	00 00                	add    BYTE PTR [rax],al
    130b:	2c 2e                	sub    al,0x2e
    130d:	01 3f                	add    DWORD PTR [rdi],edi
    130f:	19 03                	sbb    DWORD PTR [rbx],eax
    1311:	08 3a                	or     BYTE PTR [rdx],bh
    1313:	0b 3b                	or     edi,DWORD PTR [rbx]
    1315:	05 39 0b 49 13       	add    eax,0x13490b39
    131a:	3c 19                	cmp    al,0x19
    131c:	01 13                	add    DWORD PTR [rbx],edx
    131e:	00 00                	add    BYTE PTR [rax],al
    1320:	2d 2e 01 3f 19       	sub    eax,0x193f012e
    1325:	03 0e                	add    ecx,DWORD PTR [rsi]
    1327:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1329:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871e68 <_end+0x186be50>
    132f:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1332:	01 13                	add    DWORD PTR [rbx],edx
    1334:	00 00                	add    BYTE PTR [rax],al
    1336:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
    133a:	19 03                	sbb    DWORD PTR [rbx],eax
    133c:	0e                   	(bad)
    133d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    133f:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491e7e <_end+0x1348be66>
    1345:	3c 19                	cmp    al,0x19
    1347:	00 00                	add    BYTE PTR [rax],al
    1349:	2f                   	(bad)
    134a:	39 01                	cmp    DWORD PTR [rcx],eax
    134c:	03 0e                	add    ecx,DWORD PTR [rsi]
    134e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1350:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011e8f <_end+0x1300be77>
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	30 2e                	xor    BYTE PTR [rsi],ch
    135a:	01 3f                	add    DWORD PTR [rdi],edi
    135c:	19 03                	sbb    DWORD PTR [rbx],eax
    135e:	0e                   	(bad)
    135f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1361:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1363:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1365:	87 01                	xchg   DWORD PTR [rcx],eax
    1367:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    136a:	01 13                	add    DWORD PTR [rbx],edx
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	31 34 00             	xor    DWORD PTR [rax+rax*1],esi
    1371:	03 0e                	add    ecx,DWORD PTR [rsi]
    1373:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1375:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1377:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1379:	49 13 02             	adc    rax,QWORD PTR [r10]
    137c:	18 00                	sbb    BYTE PTR [rax],al
    137e:	00 32                	add    BYTE PTR [rdx],dh
    1380:	34 00                	xor    al,0x0
    1382:	03 0e                	add    ecx,DWORD PTR [rsi]
    1384:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1386:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1388:	39 0b                	cmp    DWORD PTR [rbx],ecx
    138a:	49 13 00             	adc    rax,QWORD PTR [r8]
    138d:	00 33                	add    BYTE PTR [rbx],dh
    138f:	1d 01 31 13 52       	sbb    eax,0x52133101
    1394:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
    139a:	12 07                	adc    al,BYTE PTR [rdi]
    139c:	58                   	pop    rax
    139d:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    13a0:	57                   	push   rdi
    13a1:	0b 01                	or     eax,DWORD PTR [rcx]
    13a3:	13 00                	adc    eax,DWORD PTR [rax]
    13a5:	00 34 48             	add    BYTE PTR [rax+rcx*2],dh
    13a8:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
    13ab:	83 01 18             	add    DWORD PTR [rcx],0x18
    13ae:	00 00                	add    BYTE PTR [rax],al
    13b0:	35 48 00 7d 01       	xor    eax,0x17d0048
    13b5:	7f 13                	jg     13ca <_Z16buildStringArrayPcj+0xca>
    13b7:	00 00                	add    BYTE PTR [rax],al
    13b9:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
    13bd:	19 03                	sbb    DWORD PTR [rbx],eax
    13bf:	0e                   	(bad)
    13c0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13c2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13c4:	39 0b                	cmp    DWORD PTR [rbx],ecx
    13c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13c7:	0e                   	(bad)
    13c8:	49 13 20             	adc    rsp,QWORD PTR [r8]
    13cb:	0b 01                	or     eax,DWORD PTR [rcx]
    13cd:	13 00                	adc    eax,DWORD PTR [rax]
    13cf:	00 00                	add    BYTE PTR [rax],al
    13d1:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 135cd7 <_end+0x12fcbf>
    13d7:	00 02                	add    BYTE PTR [rdx],al
    13d9:	08 00                	or     BYTE PTR [rax],al
    13db:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13dd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13df:	39 0b                	cmp    DWORD PTR [rbx],ecx
    13e1:	18 13                	sbb    BYTE PTR [rbx],dl
    13e3:	00 00                	add    BYTE PTR [rax],al
    13e5:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
    13e8:	02 18                	add    bl,BYTE PTR [rax]
    13ea:	7e 18                	jle    1404 <_Z16buildStringArrayPcj+0x104>
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	04 2e                	add    al,0x2e
    13f0:	01 3f                	add    DWORD PTR [rdi],edi
    13f2:	19 03                	sbb    DWORD PTR [rbx],eax
    13f4:	0e                   	(bad)
    13f5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13f7:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1f36 <_end+0xe6dbf1e>
    13fd:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1401:	01 13                	add    DWORD PTR [rbx],edx
    1403:	00 00                	add    BYTE PTR [rax],al
    1405:	05 05 00 31 13       	add    eax,0x13310005
    140a:	02 17                	add    dl,BYTE PTR [rdi]
    140c:	b7 42                	mov    bh,0x42
    140e:	17                   	(bad)
    140f:	00 00                	add    BYTE PTR [rax],al
    1411:	06                   	(bad)
    1412:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    1417:	0b 3b                	or     edi,DWORD PTR [rbx]
    1419:	0b 39                	or     edi,DWORD PTR [rcx]
    141b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    141e:	38 0b                	cmp    BYTE PTR [rbx],cl
    1420:	00 00                	add    BYTE PTR [rax],al
    1422:	07                   	(bad)
    1423:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
    1427:	7f 13                	jg     143c <_Z16buildStringArrayPcj+0x13c>
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	08 16                	or     BYTE PTR [rsi],dl
    142d:	00 03                	add    BYTE PTR [rbx],al
    142f:	0e                   	(bad)
    1430:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1432:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1434:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1436:	49 13 00             	adc    rax,QWORD PTR [r8]
    1439:	00 09                	add    BYTE PTR [rcx],cl
    143b:	1d 01 31 13 52       	sbb    eax,0x52133101
    1440:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1446:	12 07                	adc    al,BYTE PTR [rdi]
    1448:	58                   	pop    rax
    1449:	21 01                	and    DWORD PTR [rcx],eax
    144b:	59                   	pop    rcx
    144c:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    144f:	01 13                	add    DWORD PTR [rbx],edx
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	0a 48 01             	or     cl,BYTE PTR [rax+0x1]
    1456:	7d 01                	jge    1459 <_Z16buildStringArrayPcj+0x159>
    1458:	7f 13                	jg     146d <_Z16buildStringArrayPcj+0x16d>
    145a:	01 13                	add    DWORD PTR [rbx],edx
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	0b 05 00 31 13 00    	or     eax,DWORD PTR [rip+0x133100]        # 134564 <_end+0x12e54c>
    1464:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
    1467:	01 3f                	add    DWORD PTR [rdi],edi
    1469:	19 03                	sbb    DWORD PTR [rbx],eax
    146b:	0e                   	(bad)
    146c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    146e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1470:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1472:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1476:	01 13                	add    DWORD PTR [rbx],edx
    1478:	00 00                	add    BYTE PTR [rax],al
    147a:	0d 0f 00 0b 21       	or     eax,0x210b000f
    147f:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    1482:	00 00                	add    BYTE PTR [rax],al
    1484:	0e                   	(bad)
    1485:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1488:	19 03                	sbb    DWORD PTR [rbx],eax
    148a:	0e                   	(bad)
    148b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    148d:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491fcc <_end+0x1348bfb4>
    1493:	3c 19                	cmp    al,0x19
    1495:	01 13                	add    DWORD PTR [rbx],edx
    1497:	00 00                	add    BYTE PTR [rax],al
    1499:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    149c:	3f                   	(bad)
    149d:	19 03                	sbb    DWORD PTR [rbx],eax
    149f:	0e                   	(bad)
    14a0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    14a2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    14a4:	39 0b                	cmp    DWORD PTR [rbx],ecx
    14a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14a7:	0e                   	(bad)
    14a8:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    14ac:	01 13                	add    DWORD PTR [rbx],edx
    14ae:	00 00                	add    BYTE PTR [rax],al
    14b0:	10 05 00 49 13 34    	adc    BYTE PTR [rip+0x34134900],al        # 34135db6 <_end+0x3412fd9e>
    14b6:	19 00                	sbb    DWORD PTR [rax],eax
    14b8:	00 11                	add    BYTE PTR [rcx],dl
    14ba:	2f                   	(bad)
    14bb:	00 03                	add    BYTE PTR [rbx],al
    14bd:	0e                   	(bad)
    14be:	49 13 00             	adc    rax,QWORD PTR [r8]
    14c1:	00 12                	add    BYTE PTR [rdx],dl
    14c3:	24 00                	and    al,0x0
    14c5:	0b 0b                	or     ecx,DWORD PTR [rbx]
    14c7:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    14ca:	0e                   	(bad)
    14cb:	00 00                	add    BYTE PTR [rax],al
    14cd:	13 26                	adc    esp,DWORD PTR [rsi]
    14cf:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    14d2:	00 00                	add    BYTE PTR [rax],al
    14d4:	14 2e                	adc    al,0x2e
    14d6:	01 3f                	add    DWORD PTR [rdi],edi
    14d8:	19 03                	sbb    DWORD PTR [rbx],eax
    14da:	0e                   	(bad)
    14db:	3a 21                	cmp    ah,BYTE PTR [rcx]
    14dd:	04 3b                	add    al,0x3b
    14df:	05 39 21 02 6e       	add    eax,0x6e022139
    14e4:	0e                   	(bad)
    14e5:	49 13 32             	adc    rsi,QWORD PTR [r10]
    14e8:	21 01                	and    DWORD PTR [rcx],eax
    14ea:	3c 19                	cmp    al,0x19
    14ec:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    14ef:	13 00                	adc    eax,DWORD PTR [rax]
    14f1:	00 15 34 00 31 13    	add    BYTE PTR [rip+0x13310034],dl        # 1331152b <_end+0x1330b513>
    14f7:	02 17                	add    dl,BYTE PTR [rdi]
    14f9:	b7 42                	mov    bh,0x42
    14fb:	17                   	(bad)
    14fc:	00 00                	add    BYTE PTR [rax],al
    14fe:	16                   	(bad)
    14ff:	0b 01                	or     eax,DWORD PTR [rcx]
    1501:	11 01                	adc    DWORD PTR [rcx],eax
    1503:	12 07                	adc    al,BYTE PTR [rdi]
    1505:	01 13                	add    DWORD PTR [rbx],edx
    1507:	00 00                	add    BYTE PTR [rax],al
    1509:	17                   	(bad)
    150a:	34 00                	xor    al,0x0
    150c:	03 0e                	add    ecx,DWORD PTR [rsi]
    150e:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1510:	01 3b                	add    DWORD PTR [rbx],edi
    1512:	0b 39                	or     edi,DWORD PTR [rcx]
    1514:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1517:	00 00                	add    BYTE PTR [rax],al
    1519:	18 08                	sbb    BYTE PTR [rax],cl
    151b:	00 3a                	add    BYTE PTR [rdx],bh
    151d:	0b 3b                	or     edi,DWORD PTR [rbx]
    151f:	05 39 0b 18 13       	add    eax,0x13180b39
    1524:	00 00                	add    BYTE PTR [rax],al
    1526:	19 1d 01 31 13 52    	sbb    DWORD PTR [rip+0x52133101],ebx        # 5213462d <_end+0x5212e615>
    152c:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1532:	12 07                	adc    al,BYTE PTR [rdi]
    1534:	58                   	pop    rax
    1535:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    1538:	57                   	push   rdi
    1539:	0b 00                	or     eax,DWORD PTR [rax]
    153b:	00 1a                	add    BYTE PTR [rdx],bl
    153d:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1540:	19 03                	sbb    DWORD PTR [rbx],eax
    1542:	08 3a                	or     BYTE PTR [rdx],bh
    1544:	0b 3b                	or     edi,DWORD PTR [rbx]
    1546:	0b 39                	or     edi,DWORD PTR [rcx]
    1548:	21 03                	and    DWORD PTR [rbx],eax
    154a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    154b:	0e                   	(bad)
    154c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1550:	01 13                	add    DWORD PTR [rbx],edx
    1552:	00 00                	add    BYTE PTR [rax],al
    1554:	1b 13                	sbb    edx,DWORD PTR [rbx]
    1556:	01 03                	add    DWORD PTR [rbx],eax
    1558:	0e                   	(bad)
    1559:	0b 0b                	or     ecx,DWORD PTR [rbx]
    155b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    155d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    155f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1561:	01 13                	add    DWORD PTR [rbx],edx
    1563:	00 00                	add    BYTE PTR [rax],al
    1565:	1c 05                	sbb    al,0x5
    1567:	00 03                	add    BYTE PTR [rbx],al
    1569:	0e                   	(bad)
    156a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    156c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    156e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1570:	49 13 00             	adc    rax,QWORD PTR [r8]
    1573:	00 1d 05 00 03 0e    	add    BYTE PTR [rip+0xe030005],bl        # e03157e <_end+0xe02b566>
    1579:	3a 21                	cmp    ah,BYTE PTR [rcx]
    157b:	01 3b                	add    DWORD PTR [rbx],edi
    157d:	0b 39                	or     edi,DWORD PTR [rcx]
    157f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1582:	02 17                	add    dl,BYTE PTR [rdi]
    1584:	b7 42                	mov    bh,0x42
    1586:	17                   	(bad)
    1587:	00 00                	add    BYTE PTR [rax],al
    1589:	1e                   	(bad)
    158a:	1d 01 31 13 52       	sbb    eax,0x52133101
    158f:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    1595:	58                   	pop    rax
    1596:	21 01                	and    DWORD PTR [rcx],eax
    1598:	59                   	pop    rcx
    1599:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    159c:	01 13                	add    DWORD PTR [rbx],edx
    159e:	00 00                	add    BYTE PTR [rax],al
    15a0:	1f                   	(bad)
    15a1:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    15a4:	19 03                	sbb    DWORD PTR [rbx],eax
    15a6:	08 3a                	or     BYTE PTR [rdx],bh
    15a8:	21 03                	and    DWORD PTR [rbx],eax
    15aa:	3b 05 39 21 03 6e    	cmp    eax,DWORD PTR [rip+0x6e032139]        # 6e0336e9 <_end+0x6e02d6d1>
    15b0:	0e                   	(bad)
    15b1:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    15b5:	01 13                	add    DWORD PTR [rbx],edx
    15b7:	00 00                	add    BYTE PTR [rax],al
    15b9:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    15bc:	03 0e                	add    ecx,DWORD PTR [rsi]
    15be:	3a 21                	cmp    ah,BYTE PTR [rcx]
    15c0:	01 3b                	add    DWORD PTR [rbx],edi
    15c2:	0b 39                	or     edi,DWORD PTR [rcx]
    15c4:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    15c7:	02 17                	add    dl,BYTE PTR [rdi]
    15c9:	b7 42                	mov    bh,0x42
    15cb:	17                   	(bad)
    15cc:	00 00                	add    BYTE PTR [rax],al
    15ce:	21 48 00             	and    DWORD PTR [rax+0x0],ecx
    15d1:	7d 01                	jge    15d4 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    15d3:	83 01 18             	add    DWORD PTR [rcx],0x18
    15d6:	00 00                	add    BYTE PTR [rax],al
    15d8:	22 01                	and    al,BYTE PTR [rcx]
    15da:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    15dd:	01 13                	add    DWORD PTR [rbx],edx
    15df:	00 00                	add    BYTE PTR [rax],al
    15e1:	23 21                	and    esp,DWORD PTR [rcx]
    15e3:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    15e6:	2f                   	(bad)
    15e7:	0b 00                	or     eax,DWORD PTR [rax]
    15e9:	00 24 18             	add    BYTE PTR [rax+rbx*1],ah
    15ec:	00 00                	add    BYTE PTR [rax],al
    15ee:	00 25 10 00 0b 21    	add    BYTE PTR [rip+0x210b0010],ah        # 210b1604 <_end+0x210ab5ec>
    15f4:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    15f7:	00 00                	add    BYTE PTR [rax],al
    15f9:	26 48 00 7d 01       	es rex.W add BYTE PTR [rbp+0x1],dil
    15fe:	7f 13                	jg     1613 <_Z17hashMapPopElementP7HashMap8string_t+0x3>
    1600:	00 00                	add    BYTE PTR [rax],al
    1602:	27                   	(bad)
    1603:	36 00 02             	ss add BYTE PTR [rdx],al
    1606:	18 00                	sbb    BYTE PTR [rax],al
    1608:	00 28                	add    BYTE PTR [rax],ch
    160a:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    160d:	19 03                	sbb    DWORD PTR [rbx],eax
    160f:	0e                   	(bad)
    1610:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1612:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d3751 <_end+0x3c0cd739>
    1618:	19 01                	sbb    DWORD PTR [rcx],eax
    161a:	13 00                	adc    eax,DWORD PTR [rax]
    161c:	00 29                	add    BYTE PTR [rcx],ch
    161e:	34 00                	xor    al,0x0
    1620:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
    1623:	00 2a                	add    BYTE PTR [rdx],ch
    1625:	34 00                	xor    al,0x0
    1627:	03 08                	add    ecx,DWORD PTR [rax]
    1629:	3a 21                	cmp    ah,BYTE PTR [rcx]
    162b:	01 3b                	add    DWORD PTR [rbx],edi
    162d:	0b 39                	or     edi,DWORD PTR [rcx]
    162f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1632:	02 17                	add    dl,BYTE PTR [rdi]
    1634:	b7 42                	mov    bh,0x42
    1636:	17                   	(bad)
    1637:	00 00                	add    BYTE PTR [rax],al
    1639:	2b 2e                	sub    ebp,DWORD PTR [rsi]
    163b:	01 3f                	add    DWORD PTR [rdi],edi
    163d:	19 03                	sbb    DWORD PTR [rbx],eax
    163f:	0e                   	(bad)
    1640:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1642:	04 3b                	add    al,0x3b
    1644:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1649:	32 21                	xor    ah,BYTE PTR [rcx]
    164b:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    164e:	8b 01                	mov    eax,DWORD PTR [rcx]
    1650:	21 01                	and    DWORD PTR [rcx],eax
    1652:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1655:	13 00                	adc    eax,DWORD PTR [rax]
    1657:	00 2c 2e             	add    BYTE PTR [rsi+rbp*1],ch
    165a:	00 3f                	add    BYTE PTR [rdi],bh
    165c:	19 03                	sbb    DWORD PTR [rbx],eax
    165e:	08 3a                	or     BYTE PTR [rdx],bh
    1660:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1663:	05 39 21 02 6e       	add    eax,0x6e022139
    1668:	0e                   	(bad)
    1669:	49 13 32             	adc    rsi,QWORD PTR [r10]
    166c:	21 01                	and    DWORD PTR [rcx],eax
    166e:	3c 19                	cmp    al,0x19
    1670:	00 00                	add    BYTE PTR [rax],al
    1672:	2d 05 00 03 0e       	sub    eax,0xe030005
    1677:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1679:	04 3b                	add    al,0x3b
    167b:	05 39 0b 49 13       	add    eax,0x13490b39
    1680:	00 00                	add    BYTE PTR [rax],al
    1682:	2e 0b 01             	cs or  eax,DWORD PTR [rcx]
    1685:	55                   	push   rbp
    1686:	17                   	(bad)
    1687:	00 00                	add    BYTE PTR [rax],al
    1689:	2f                   	(bad)
    168a:	30 00                	xor    BYTE PTR [rax],al
    168c:	03 0e                	add    ecx,DWORD PTR [rsi]
    168e:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
    1692:	00 00                	add    BYTE PTR [rax],al
    1694:	30 2e                	xor    BYTE PTR [rsi],ch
    1696:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1699:	64 13 20             	adc    esp,DWORD PTR fs:[rax]
    169c:	0b 01                	or     eax,DWORD PTR [rcx]
    169e:	13 00                	adc    eax,DWORD PTR [rax]
    16a0:	00 31                	add    BYTE PTR [rcx],dh
    16a2:	05 00 03 0e 49       	add    eax,0x490e0300
    16a7:	13 34 19             	adc    esi,DWORD PTR [rcx+rbx*1]
    16aa:	00 00                	add    BYTE PTR [rax],al
    16ac:	32 2e                	xor    ch,BYTE PTR [rsi]
    16ae:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    16b1:	20 21                	and    BYTE PTR [rcx],ah
    16b3:	03 01                	add    eax,DWORD PTR [rcx]
    16b5:	13 00                	adc    eax,DWORD PTR [rax]
    16b7:	00 33                	add    BYTE PTR [rbx],dh
    16b9:	39 01                	cmp    DWORD PTR [rcx],eax
    16bb:	03 0e                	add    ecx,DWORD PTR [rsi]
    16bd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    16bf:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16c1:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16c3:	01 13                	add    DWORD PTR [rbx],edx
    16c5:	00 00                	add    BYTE PTR [rax],al
    16c7:	34 34                	xor    al,0x34
    16c9:	00 03                	add    BYTE PTR [rbx],al
    16cb:	0e                   	(bad)
    16cc:	3a 21                	cmp    ah,BYTE PTR [rcx]
    16ce:	10 3b                	adc    BYTE PTR [rbx],bh
    16d0:	21 b2 02 39 21 14    	and    DWORD PTR [rdx+0x14213902],esi
    16d6:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    16da:	1c 21                	sbb    al,0x21
    16dc:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    16e0:	00 35 13 01 0b 0b    	add    BYTE PTR [rip+0xb0b0113],dh        # b0b17f9 <_end+0xb0ab7e1>
    16e6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    16e8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16ea:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16ed:	0e                   	(bad)
    16ee:	01 13                	add    DWORD PTR [rbx],edx
    16f0:	00 00                	add    BYTE PTR [rax],al
    16f2:	36 0d 00 03 0e 3a    	ss or  eax,0x3a0e0300
    16f8:	21 1c 3b             	and    DWORD PTR [rbx+rdi*1],ebx
    16fb:	21 00                	and    DWORD PTR [rax],eax
    16fd:	49 13 38             	adc    rdi,QWORD PTR [r8]
    1700:	0b 00                	or     eax,DWORD PTR [rax]
    1702:	00 37                	add    BYTE PTR [rdi],dh
    1704:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    1707:	19 03                	sbb    DWORD PTR [rbx],eax
    1709:	0e                   	(bad)
    170a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    170c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    170e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1710:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1714:	00 00                	add    BYTE PTR [rax],al
    1716:	38 1d 01 31 13 52    	cmp    BYTE PTR [rip+0x52133101],bl        # 5213481d <_end+0x5212e805>
    171c:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    1722:	58                   	pop    rax
    1723:	21 01                	and    DWORD PTR [rcx],eax
    1725:	59                   	pop    rcx
    1726:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1729:	00 00                	add    BYTE PTR [rax],al
    172b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    172d:	01 31                	add    DWORD PTR [rcx],esi
    172f:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
    1732:	01 13                	add    DWORD PTR [rbx],edx
    1734:	00 00                	add    BYTE PTR [rax],al
    1736:	3a 34 00             	cmp    dh,BYTE PTR [rax+rax*1]
    1739:	31 13                	xor    DWORD PTR [rbx],edx
    173b:	00 00                	add    BYTE PTR [rax],al
    173d:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
    173f:	00 3f                	add    BYTE PTR [rdi],bh
    1741:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1744:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1745:	0e                   	(bad)
    1746:	03 0e                	add    ecx,DWORD PTR [rsi]
    1748:	00 00                	add    BYTE PTR [rax],al
    174a:	3c 39                	cmp    al,0x39
    174c:	00 03                	add    BYTE PTR [rbx],al
    174e:	0e                   	(bad)
    174f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1751:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1753:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1755:	00 00                	add    BYTE PTR [rax],al
    1757:	3d 34 00 03 0e       	cmp    eax,0xe030034
    175c:	3a 21                	cmp    ah,BYTE PTR [rcx]
    175e:	0e                   	(bad)
    175f:	3b 21                	cmp    esp,DWORD PTR [rcx]
    1761:	30 39                	xor    BYTE PTR [rcx],bh
    1763:	21 14 49             	and    DWORD PTR [rcx+rcx*2],edx
    1766:	13 3c 19             	adc    edi,DWORD PTR [rcx+rbx*1]
    1769:	1c 21                	sbb    al,0x21
    176b:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    176f:	00 3e                	add    BYTE PTR [rsi],bh
    1771:	02 01                	add    al,BYTE PTR [rcx]
    1773:	03 0e                	add    ecx,DWORD PTR [rsi]
    1775:	0b 21                	or     esp,DWORD PTR [rcx]
    1777:	08 3a                	or     BYTE PTR [rdx],bh
    1779:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    177c:	05 39 21 0d 01       	add    eax,0x10d2139
    1781:	13 00                	adc    eax,DWORD PTR [rax]
    1783:	00 3f                	add    BYTE PTR [rdi],bh
    1785:	0d 00 03 08 3a       	or     eax,0x3a080300
    178a:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    178d:	05 39 0b 49 13       	add    eax,0x13490b39
    1792:	38 21                	cmp    BYTE PTR [rcx],ah
    1794:	00 00                	add    BYTE PTR [rax],al
    1796:	00 40 2e             	add    BYTE PTR [rax+0x2e],al
    1799:	01 3f                	add    DWORD PTR [rdi],edi
    179b:	19 03                	sbb    DWORD PTR [rbx],eax
    179d:	0e                   	(bad)
    179e:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17a0:	04 3b                	add    al,0x3b
    17a2:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    17a7:	32 21                	xor    ah,BYTE PTR [rcx]
    17a9:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    17ac:	63 19                	movsxd ebx,DWORD PTR [rcx]
    17ae:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    17b1:	13 00                	adc    eax,DWORD PTR [rax]
    17b3:	00 41 16             	add    BYTE PTR [rcx+0x16],al
    17b6:	00 03                	add    BYTE PTR [rbx],al
    17b8:	0e                   	(bad)
    17b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    17bb:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134922fa <_end+0x1348c2e2>
    17c1:	00 00                	add    BYTE PTR [rax],al
    17c3:	42 2f                	rex.X (bad)
    17c5:	00 03                	add    BYTE PTR [rbx],al
    17c7:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    17ca:	00 00                	add    BYTE PTR [rax],al
    17cc:	43 13 01             	rex.XB adc eax,DWORD PTR [r9]
    17cf:	03 0e                	add    ecx,DWORD PTR [rsi]
    17d1:	0b 21                	or     esp,DWORD PTR [rcx]
    17d3:	01 3a                	add    DWORD PTR [rdx],edi
    17d5:	21 10                	and    DWORD PTR [rax],edx
    17d7:	3b 21                	cmp    esp,DWORD PTR [rcx]
    17d9:	8a 02                	mov    al,BYTE PTR [rdx]
    17db:	39 21                	cmp    DWORD PTR [rcx],esp
    17dd:	0c 01                	or     al,0x1
    17df:	13 00                	adc    eax,DWORD PTR [rax]
    17e1:	00 44 34 00          	add    BYTE PTR [rsp+rsi*1+0x0],al
    17e5:	03 08                	add    ecx,DWORD PTR [rax]
    17e7:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17e9:	10 3b                	adc    BYTE PTR [rbx],bh
    17eb:	21 91 02 39 21 21    	and    DWORD PTR [rcx+0x21213902],edx
    17f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17f2:	0e                   	(bad)
    17f3:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    17f6:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    17f9:	1c 21                	sbb    al,0x21
    17fb:	01 6c 19 20          	add    DWORD PTR [rcx+rbx*1+0x20],ebp
    17ff:	21 01                	and    DWORD PTR [rcx],eax
    1801:	00 00                	add    BYTE PTR [rax],al
    1803:	45 0d 00 03 08 3a    	rex.RB or eax,0x3a080300
    1809:	21 16                	and    DWORD PTR [rsi],edx
    180b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    180d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    180f:	49 13 38             	adc    rdi,QWORD PTR [r8]
    1812:	0b 00                	or     eax,DWORD PTR [rax]
    1814:	00 46 13             	add    BYTE PTR [rsi+0x13],al
    1817:	00 03                	add    BYTE PTR [rbx],al
    1819:	0e                   	(bad)
    181a:	3c 19                	cmp    al,0x19
    181c:	00 00                	add    BYTE PTR [rax],al
    181e:	47 34 00             	rex.RXB xor al,0x0
    1821:	03 0e                	add    ecx,DWORD PTR [rsi]
    1823:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1825:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1827:	39 21                	cmp    DWORD PTR [rcx],esp
    1829:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    182c:	1c 0b                	sbb    al,0xb
    182e:	00 00                	add    BYTE PTR [rax],al
    1830:	48 0b 01             	or     rax,QWORD PTR [rcx]
    1833:	00 00                	add    BYTE PTR [rax],al
    1835:	49 34 00             	rex.WB xor al,0x0
    1838:	03 08                	add    ecx,DWORD PTR [rax]
    183a:	3a 21                	cmp    ah,BYTE PTR [rcx]
    183c:	01 3b                	add    DWORD PTR [rbx],edi
    183e:	0b 39                	or     edi,DWORD PTR [rcx]
    1840:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1843:	00 00                	add    BYTE PTR [rax],al
    1845:	4a                   	rex.WX
    1846:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1849:	19 03                	sbb    DWORD PTR [rbx],eax
    184b:	0e                   	(bad)
    184c:	3a 21                	cmp    ah,BYTE PTR [rcx]
    184e:	01 3b                	add    DWORD PTR [rbx],edi
    1850:	0b 39                	or     edi,DWORD PTR [rcx]
    1852:	21 06                	and    DWORD PTR [rsi],eax
    1854:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1855:	0e                   	(bad)
    1856:	11 01                	adc    DWORD PTR [rcx],eax
    1858:	12 07                	adc    al,BYTE PTR [rdi]
    185a:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    185e:	01 13                	add    DWORD PTR [rbx],edx
    1860:	00 00                	add    BYTE PTR [rax],al
    1862:	4b 34 00             	rex.WXB xor al,0x0
    1865:	03 0e                	add    ecx,DWORD PTR [rsi]
    1867:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    186b:	6c                   	ins    BYTE PTR es:[rdi],dx
    186c:	19 02                	sbb    DWORD PTR [rdx],eax
    186e:	18 00                	sbb    BYTE PTR [rax],al
    1870:	00 4c 34 00          	add    BYTE PTR [rsp+rsi*1+0x0],cl
    1874:	03 0e                	add    ecx,DWORD PTR [rsi]
    1876:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1878:	01 3b                	add    DWORD PTR [rbx],edi
    187a:	0b 39                	or     edi,DWORD PTR [rcx]
    187c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    187f:	02 18                	add    bl,BYTE PTR [rax]
    1881:	00 00                	add    BYTE PTR [rax],al
    1883:	4d 0b 01             	or     r8,QWORD PTR [r9]
    1886:	31 13                	xor    DWORD PTR [rbx],edx
    1888:	55                   	push   rbp
    1889:	17                   	(bad)
    188a:	00 00                	add    BYTE PTR [rax],al
    188c:	4e                   	rex.WRX
    188d:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1890:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1893:	11 01                	adc    DWORD PTR [rcx],eax
    1895:	12 07                	adc    al,BYTE PTR [rdi]
    1897:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    189b:	01 13                	add    DWORD PTR [rbx],edx
    189d:	00 00                	add    BYTE PTR [rax],al
    189f:	4f 39 00             	rex.WRXB cmp QWORD PTR [r8],r8
    18a2:	03 0e                	add    ecx,DWORD PTR [rsi]
    18a4:	3a 21                	cmp    ah,BYTE PTR [rcx]
    18a6:	05 3b 05 39 21       	add    eax,0x2139053b
    18ab:	0d 00 00 50 39       	or     eax,0x39500000
    18b0:	00 03                	add    BYTE PTR [rbx],al
    18b2:	0e                   	(bad)
    18b3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    18b5:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 18923f4 <_end+0x188c3dc>
    18bb:	19 00                	sbb    DWORD PTR [rax],eax
    18bd:	00 51 2e             	add    BYTE PTR [rcx+0x2e],dl
    18c0:	01 3f                	add    DWORD PTR [rdi],edi
    18c2:	19 03                	sbb    DWORD PTR [rbx],eax
    18c4:	0e                   	(bad)
    18c5:	3a 21                	cmp    ah,BYTE PTR [rcx]
    18c7:	04 3b                	add    al,0x3b
    18c9:	21 c9                	and    ecx,ecx
    18cb:	04 39                	add    al,0x39
    18cd:	21 0c 6e             	and    DWORD PTR [rsi+rbp*2],ecx
    18d0:	0e                   	(bad)
    18d1:	49 13 32             	adc    rsi,QWORD PTR [r10]
    18d4:	21 01                	and    DWORD PTR [rcx],eax
    18d6:	3c 19                	cmp    al,0x19
    18d8:	8b 01                	mov    eax,DWORD PTR [rcx]
    18da:	21 01                	and    DWORD PTR [rcx],eax
    18dc:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    18df:	13 00                	adc    eax,DWORD PTR [rax]
    18e1:	00 52 16             	add    BYTE PTR [rdx+0x16],dl
    18e4:	00 03                	add    BYTE PTR [rbx],al
    18e6:	08 3a                	or     BYTE PTR [rdx],bh
    18e8:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    18eb:	21 b0 04 39 21 08    	and    DWORD PTR [rax+0x8213904],esi
    18f1:	49 13 32             	adc    rsi,QWORD PTR [r10]
    18f4:	21 01                	and    DWORD PTR [rcx],eax
    18f6:	00 00                	add    BYTE PTR [rax],al
    18f8:	53                   	push   rbx
    18f9:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    18fc:	19 03                	sbb    DWORD PTR [rbx],eax
    18fe:	0e                   	(bad)
    18ff:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1901:	04 3b                	add    al,0x3b
    1903:	21 a1 05 39 21 02    	and    DWORD PTR [rcx+0x2213905],esp
    1909:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    190a:	0e                   	(bad)
    190b:	49 13 32             	adc    rsi,QWORD PTR [r10]
    190e:	21 01                	and    DWORD PTR [rcx],eax
    1910:	3c 19                	cmp    al,0x19
    1912:	00 00                	add    BYTE PTR [rax],al
    1914:	54                   	push   rsp
    1915:	34 00                	xor    al,0x0
    1917:	03 08                	add    ecx,DWORD PTR [rax]
    1919:	3a 21                	cmp    ah,BYTE PTR [rcx]
    191b:	10 3b                	adc    BYTE PTR [rbx],bh
    191d:	21 94 02 39 21 21 6e 	and    DWORD PTR [rdx+rax*1+0x6e212139],edx
    1924:	0e                   	(bad)
    1925:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1928:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    192b:	1c 06                	sbb    al,0x6
    192d:	6c                   	ins    BYTE PTR es:[rdi],dx
    192e:	19 20                	sbb    DWORD PTR [rax],esp
    1930:	21 01                	and    DWORD PTR [rcx],eax
    1932:	00 00                	add    BYTE PTR [rax],al
    1934:	55                   	push   rbp
    1935:	30 00                	xor    BYTE PTR [rax],al
    1937:	03 0e                	add    ecx,DWORD PTR [rsi]
    1939:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    193d:	00 00                	add    BYTE PTR [rax],al
    193f:	56                   	push   rsi
    1940:	2f                   	(bad)
    1941:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1944:	00 00                	add    BYTE PTR [rax],al
    1946:	57                   	push   rdi
    1947:	37                   	(bad)
    1948:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    194b:	00 00                	add    BYTE PTR [rax],al
    194d:	58                   	pop    rax
    194e:	15 01 49 13 01       	adc    eax,0x1134901
    1953:	13 00                	adc    eax,DWORD PTR [rax]
    1955:	00 59 0d             	add    BYTE PTR [rcx+0xd],bl
    1958:	00 03                	add    BYTE PTR [rbx],al
    195a:	0e                   	(bad)
    195b:	3a 21                	cmp    ah,BYTE PTR [rcx]
    195d:	1d 3b 0b 39 0b       	sbb    eax,0xb390b3b
    1962:	49 13 00             	adc    rax,QWORD PTR [r8]
    1965:	00 5a 2e             	add    BYTE PTR [rdx+0x2e],bl
    1968:	00 3f                	add    BYTE PTR [rdi],bh
    196a:	19 03                	sbb    DWORD PTR [rbx],eax
    196c:	0e                   	(bad)
    196d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    196f:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134924ae <_end+0x1348c496>
    1975:	3c 19                	cmp    al,0x19
    1977:	00 00                	add    BYTE PTR [rax],al
    1979:	5b                   	pop    rbx
    197a:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    197f:	21 15 3b 05 39 0b    	and    DWORD PTR [rip+0xb39053b],edx        # b391ec0 <_end+0xb38bea8>
    1985:	49 13 88 01 0b 38 0b 	adc    rcx,QWORD PTR [r8+0xb380b01]
    198c:	00 00                	add    BYTE PTR [rax],al
    198e:	5c                   	pop    rsp
    198f:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1992:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1995:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1998:	13 00                	adc    eax,DWORD PTR [rax]
    199a:	00 5d 05             	add    BYTE PTR [rbp+0x5],bl
    199d:	00 03                	add    BYTE PTR [rbx],al
    199f:	08 3a                	or     BYTE PTR [rdx],bh
    19a1:	0b 3b                	or     edi,DWORD PTR [rbx]
    19a3:	05 39 0b 49 13       	add    eax,0x13490b39
    19a8:	00 00                	add    BYTE PTR [rax],al
    19aa:	5e                   	pop    rsi
    19ab:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    19ae:	19 03                	sbb    DWORD PTR [rbx],eax
    19b0:	0e                   	(bad)
    19b1:	3a 21                	cmp    ah,BYTE PTR [rcx]
    19b3:	01 3b                	add    DWORD PTR [rbx],edi
    19b5:	0b 39                	or     edi,DWORD PTR [rcx]
    19b7:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    19ba:	49 13 20             	adc    rsp,QWORD PTR [r8]
    19bd:	21 01                	and    DWORD PTR [rcx],eax
    19bf:	01 13                	add    DWORD PTR [rbx],edx
    19c1:	00 00                	add    BYTE PTR [rax],al
    19c3:	5f                   	pop    rdi
    19c4:	34 00                	xor    al,0x0
    19c6:	03 0e                	add    ecx,DWORD PTR [rsi]
    19c8:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    19cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    19cd:	19 00                	sbb    DWORD PTR [rax],eax
    19cf:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
    19d2:	01 31                	add    DWORD PTR [rcx],esi
    19d4:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
    19d7:	b8 42 05 11 01       	mov    eax,0x1110542
    19dc:	12 07                	adc    al,BYTE PTR [rdi]
    19de:	58                   	pop    rax
    19df:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    19e2:	21 f7                	and    edi,esi
    19e4:	08 57 0b             	or     BYTE PTR [rdi+0xb],dl
    19e7:	01 13                	add    DWORD PTR [rbx],edx
    19e9:	00 00                	add    BYTE PTR [rax],al
    19eb:	61                   	(bad)
    19ec:	1d 01 31 13 52       	sbb    eax,0x52133101
    19f1:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    19f7:	58                   	pop    rax
    19f8:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    19fb:	05 57 0b 00 00       	add    eax,0xb57
    1a00:	62 0b 01 55 17       	(bad)
    1a05:	01 13                	add    DWORD PTR [rbx],edx
    1a07:	00 00                	add    BYTE PTR [rax],al
    1a09:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    1a0b:	01 3f                	add    DWORD PTR [rdi],edi
    1a0d:	19 03                	sbb    DWORD PTR [rbx],eax
    1a0f:	0e                   	(bad)
    1a10:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1a12:	02 3b                	add    bh,BYTE PTR [rbx]
    1a14:	0b 39                	or     edi,DWORD PTR [rcx]
    1a16:	21 01                	and    DWORD PTR [rcx],eax
    1a18:	49 13 20             	adc    rsp,QWORD PTR [r8]
    1a1b:	21 03                	and    DWORD PTR [rbx],eax
    1a1d:	34 19                	xor    al,0x19
    1a1f:	01 13                	add    DWORD PTR [rbx],edx
    1a21:	00 00                	add    BYTE PTR [rax],al
    1a23:	64 48 00 7d 01       	rex.W add BYTE PTR fs:[rbp+0x1],dil
    1a28:	82                   	(bad)
    1a29:	01 19                	add    DWORD PTR [rcx],ebx
    1a2b:	7f 13                	jg     1a40 <_Z6resizeP7HashMapj+0x1e0>
    1a2d:	00 00                	add    BYTE PTR [rax],al
    1a2f:	65 05 00 31 13 1c    	gs add eax,0x1c133100
    1a35:	21 00                	and    DWORD PTR [rax],eax
    1a37:	00 00                	add    BYTE PTR [rax],al
    1a39:	66 11 01             	adc    WORD PTR [rcx],ax
    1a3c:	25 0e 13 0b 03       	and    eax,0x30b130e
    1a41:	1f                   	(bad)
    1a42:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    1a44:	11 01                	adc    DWORD PTR [rcx],eax
    1a46:	12 07                	adc    al,BYTE PTR [rdi]
    1a48:	10 17                	adc    BYTE PTR [rdi],dl
    1a4a:	00 00                	add    BYTE PTR [rax],al
    1a4c:	67 39 01             	cmp    DWORD PTR [ecx],eax
    1a4f:	03 08                	add    ecx,DWORD PTR [rax]
    1a51:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a53:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13012592 <_end+0x1300c57a>
    1a59:	00 00                	add    BYTE PTR [rax],al
    1a5b:	68 39 00 03 08       	push   0x8030039
    1a60:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a62:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a64:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a66:	00 00                	add    BYTE PTR [rax],al
    1a68:	69 39 01 03 08 3a    	imul   edi,DWORD PTR [rcx],0x3a080301
    1a6e:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a70:	05 39 0b 89 01       	add    eax,0x1890b39
    1a75:	19 01                	sbb    DWORD PTR [rcx],eax
    1a77:	13 00                	adc    eax,DWORD PTR [rax]
    1a79:	00 6a 13             	add    BYTE PTR [rdx+0x13],ch
    1a7c:	01 03                	add    DWORD PTR [rbx],eax
    1a7e:	0e                   	(bad)
    1a7f:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1a81:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a83:	3b 05 39 0b 00 00    	cmp    eax,DWORD PTR [rip+0xb39]        # 25c2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x232>
    1a89:	6b 34 00 03          	imul   esi,DWORD PTR [rax+rax*1],0x3
    1a8d:	0e                   	(bad)
    1a8e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a90:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e25cf <_end+0xe6dc5b7>
    1a96:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1a99:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1a9c:	1c 0b                	sbb    al,0xb
    1a9e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a9f:	19 20                	sbb    DWORD PTR [rax],esp
    1aa1:	0b 00                	or     eax,DWORD PTR [rax]
    1aa3:	00 6c 2e 00          	add    BYTE PTR [rsi+rbp*1+0x0],ch
    1aa7:	3f                   	(bad)
    1aa8:	19 03                	sbb    DWORD PTR [rbx],eax
    1aaa:	08 3a                	or     BYTE PTR [rdx],bh
    1aac:	0b 3b                	or     edi,DWORD PTR [rbx]
    1aae:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1ab3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1ab7:	00 00                	add    BYTE PTR [rax],al
    1ab9:	6d                   	ins    DWORD PTR es:[rdi],dx
    1aba:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1abd:	19 03                	sbb    DWORD PTR [rbx],eax
    1abf:	0e                   	(bad)
    1ac0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ac2:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e2601 <_end+0xe6dc5e9>
    1ac8:	32 0b                	xor    cl,BYTE PTR [rbx]
    1aca:	3c 19                	cmp    al,0x19
    1acc:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1acf:	13 00                	adc    eax,DWORD PTR [rax]
    1ad1:	00 6e 16             	add    BYTE PTR [rsi+0x16],ch
    1ad4:	00 03                	add    BYTE PTR [rbx],al
    1ad6:	0e                   	(bad)
    1ad7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ad9:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492618 <_end+0x1348c600>
    1adf:	32 0b                	xor    cl,BYTE PTR [rbx]
    1ae1:	00 00                	add    BYTE PTR [rax],al
    1ae3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ae4:	3a 00                	cmp    al,BYTE PTR [rax]
    1ae6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ae8:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 13182627 <_end+0x1317c60f>
    1aee:	00 00                	add    BYTE PTR [rax],al
    1af0:	70 2e                	jo     1b20 <_Z25_mm_crc32UnrollHashString8string_t+0x50>
    1af2:	01 3f                	add    DWORD PTR [rdi],edi
    1af4:	19 03                	sbb    DWORD PTR [rbx],eax
    1af6:	0e                   	(bad)
    1af7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1af9:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e2638 <_end+0xe6dc620>
    1aff:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1b03:	00 00                	add    BYTE PTR [rax],al
    1b05:	71 87                	jno    1a8e <_Z6resizeP7HashMapj+0x22e>
    1b07:	82                   	(bad)
    1b08:	01 01                	add    DWORD PTR [rcx],eax
    1b0a:	03 08                	add    ecx,DWORD PTR [rax]
    1b0c:	00 00                	add    BYTE PTR [rax],al
    1b0e:	72 34                	jb     1b44 <_Z13sumHashString8string_t+0x4>
    1b10:	00 03                	add    BYTE PTR [rbx],al
    1b12:	08 3a                	or     BYTE PTR [rdx],bh
    1b14:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b16:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1b1b:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1b1e:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1b21:	1c 05                	sbb    al,0x5
    1b23:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b24:	19 20                	sbb    DWORD PTR [rax],esp
    1b26:	0b 00                	or     eax,DWORD PTR [rax]
    1b28:	00 73 30             	add    BYTE PTR [rbx+0x30],dh
    1b2b:	00 03                	add    BYTE PTR [rbx],al
    1b2d:	0e                   	(bad)
    1b2e:	49 13 1c 05 00 00 74 	adc    rbx,QWORD PTR [rax*1+0x39740000]
    1b35:	39 
    1b36:	01 03                	add    DWORD PTR [rbx],eax
    1b38:	0e                   	(bad)
    1b39:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b3b:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 189267a <_end+0x188c662>
    1b41:	19 01                	sbb    DWORD PTR [rcx],eax
    1b43:	13 00                	adc    eax,DWORD PTR [rax]
    1b45:	00 75 39             	add    BYTE PTR [rbp+0x39],dh
    1b48:	01 03                	add    DWORD PTR [rbx],eax
    1b4a:	0e                   	(bad)
    1b4b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b4d:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 1301268c <_end+0x1300c674>
    1b53:	00 00                	add    BYTE PTR [rax],al
    1b55:	76 24                	jbe    1b7b <_Z17adler32HashString8string_t+0x2b>
    1b57:	00 0b                	add    BYTE PTR [rbx],cl
    1b59:	0b 3e                	or     edi,DWORD PTR [rsi]
    1b5b:	0b 03                	or     eax,DWORD PTR [rbx]
    1b5d:	08 00                	or     BYTE PTR [rax],al
    1b5f:	00 77 0f             	add    BYTE PTR [rdi+0xf],dh
    1b62:	00 0b                	add    BYTE PTR [rbx],cl
    1b64:	0b 00                	or     eax,DWORD PTR [rax]
    1b66:	00 78 26             	add    BYTE PTR [rax+0x26],bh
    1b69:	00 00                	add    BYTE PTR [rax],al
    1b6b:	00 79 3a             	add    BYTE PTR [rcx+0x3a],bh
    1b6e:	00 3a                	add    BYTE PTR [rdx],bh
    1b70:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b72:	0b 39                	or     edi,DWORD PTR [rcx]
    1b74:	0b 18                	or     ebx,DWORD PTR [rax]
    1b76:	13 00                	adc    eax,DWORD PTR [rax]
    1b78:	00 7a 13             	add    BYTE PTR [rdx+0x13],bh
    1b7b:	01 03                	add    DWORD PTR [rbx],eax
    1b7d:	0e                   	(bad)
    1b7e:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1b80:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b82:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b84:	01 13                	add    DWORD PTR [rbx],edx
    1b86:	00 00                	add    BYTE PTR [rax],al
    1b88:	7b 17                	jnp    1ba1 <_Z17adler32HashString8string_t+0x51>
    1b8a:	01 0b                	add    DWORD PTR [rbx],ecx
    1b8c:	0b 3a                	or     edi,DWORD PTR [rdx]
    1b8e:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b90:	0b 39                	or     edi,DWORD PTR [rcx]
    1b92:	0b 01                	or     eax,DWORD PTR [rcx]
    1b94:	13 00                	adc    eax,DWORD PTR [rax]
    1b96:	00 7c 16 00          	add    BYTE PTR [rsi+rdx*1+0x0],bh
    1b9a:	03 0e                	add    ecx,DWORD PTR [rsi]
    1b9c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b9e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1ba0:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1ba2:	00 00                	add    BYTE PTR [rax],al
    1ba4:	7d 15                	jge    1bbb <_Z17adler32HashString8string_t+0x6b>
    1ba6:	00 00                	add    BYTE PTR [rax],al
    1ba8:	00 7e 2e             	add    BYTE PTR [rsi+0x2e],bh
    1bab:	01 3f                	add    DWORD PTR [rdi],edi
    1bad:	19 03                	sbb    DWORD PTR [rbx],eax
    1baf:	08 3a                	or     BYTE PTR [rdx],bh
    1bb1:	0b 3b                	or     edi,DWORD PTR [rbx]
    1bb3:	05 39 0b 49 13       	add    eax,0x13490b39
    1bb8:	3c 19                	cmp    al,0x19
    1bba:	01 13                	add    DWORD PTR [rbx],edx
    1bbc:	00 00                	add    BYTE PTR [rax],al
    1bbe:	7f 2e                	jg     1bee <_Z17adler32HashString8string_t+0x9e>
    1bc0:	01 3f                	add    DWORD PTR [rdi],edi
    1bc2:	19 03                	sbb    DWORD PTR [rbx],eax
    1bc4:	0e                   	(bad)
    1bc5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1bc7:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1872706 <_end+0x186c6ee>
    1bcd:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1bd0:	01 13                	add    DWORD PTR [rbx],edx
    1bd2:	00 00                	add    BYTE PTR [rax],al
    1bd4:	80 01 13             	add    BYTE PTR [rcx],0x13
    1bd7:	01 0b                	add    DWORD PTR [rbx],ecx
    1bd9:	0b 88 01 0b 3a 0b    	or     ecx,DWORD PTR [rax+0xb3a0b01]
    1bdf:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e271e <_end+0xe6dc706>
    1be5:	01 13                	add    DWORD PTR [rbx],edx
    1be7:	00 00                	add    BYTE PTR [rax],al
    1be9:	81 01 16 00 03 0e    	add    DWORD PTR [rcx],0xe030016
    1bef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1bf1:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492730 <_end+0x1348c718>
    1bf7:	88 01                	mov    BYTE PTR [rcx],al
    1bf9:	0b 00                	or     eax,DWORD PTR [rax]
    1bfb:	00 82 01 01 01 87    	add    BYTE PTR [rdx-0x78fefeff],al
    1c01:	42 19 49 13          	rex.X sbb DWORD PTR [rcx+0x13],ecx
    1c05:	01 13                	add    DWORD PTR [rbx],edx
    1c07:	00 00                	add    BYTE PTR [rax],al
    1c09:	83 01 21             	add    DWORD PTR [rcx],0x21
    1c0c:	00 2f                	add    BYTE PTR [rdi],ch
    1c0e:	0b 00                	or     eax,DWORD PTR [rax]
    1c10:	00 84 01 13 01 03 08 	add    BYTE PTR [rcx+rax*1+0x8030113],al
    1c17:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1c19:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c1b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c1d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c1f:	01 13                	add    DWORD PTR [rbx],edx
    1c21:	00 00                	add    BYTE PTR [rax],al
    1c23:	85 01                	test   DWORD PTR [rcx],eax
    1c25:	39 01                	cmp    DWORD PTR [rcx],eax
    1c27:	03 0e                	add    ecx,DWORD PTR [rsi]
    1c29:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c2b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c2d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c2f:	00 00                	add    BYTE PTR [rax],al
    1c31:	86 01                	xchg   BYTE PTR [rcx],al
    1c33:	39 00                	cmp    DWORD PTR [rax],eax
    1c35:	03 08                	add    ecx,DWORD PTR [rax]
    1c37:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c39:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c3b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c3d:	89 01                	mov    DWORD PTR [rcx],eax
    1c3f:	19 00                	sbb    DWORD PTR [rax],eax
    1c41:	00 87 01 34 00 03    	add    BYTE PTR [rdi+0x3003401],al
    1c47:	0e                   	(bad)
    1c48:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c4a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c4c:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c4e:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    1c52:	00 00                	add    BYTE PTR [rax],al
    1c54:	88 01                	mov    BYTE PTR [rcx],al
    1c56:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1c59:	19 03                	sbb    DWORD PTR [rbx],eax
    1c5b:	0e                   	(bad)
    1c5c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c5e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c60:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c62:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c63:	0e                   	(bad)
    1c64:	3c 19                	cmp    al,0x19
    1c66:	01 13                	add    DWORD PTR [rbx],edx
    1c68:	00 00                	add    BYTE PTR [rax],al
    1c6a:	89 01                	mov    DWORD PTR [rcx],eax
    1c6c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1c6f:	19 03                	sbb    DWORD PTR [rbx],eax
    1c71:	0e                   	(bad)
    1c72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c74:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c76:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c78:	87 01                	xchg   DWORD PTR [rcx],eax
    1c7a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1c7d:	01 13                	add    DWORD PTR [rbx],edx
    1c7f:	00 00                	add    BYTE PTR [rax],al
    1c81:	8a 01                	mov    al,BYTE PTR [rcx]
    1c83:	05 00 03 08 3a       	add    eax,0x3a080300
    1c88:	0b 3b                	or     edi,DWORD PTR [rbx]
    1c8a:	0b 39                	or     edi,DWORD PTR [rcx]
    1c8c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1c8f:	00 00                	add    BYTE PTR [rax],al
    1c91:	8b 01                	mov    eax,DWORD PTR [rcx]
    1c93:	0b 00                	or     eax,DWORD PTR [rax]
    1c95:	00 00                	add    BYTE PTR [rax],al
    1c97:	8c 01                	mov    WORD PTR [rcx],es
    1c99:	1d 01 31 13 52       	sbb    eax,0x52133101
    1c9e:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1ca4:	12 07                	adc    al,BYTE PTR [rdi]
    1ca6:	58                   	pop    rax
    1ca7:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
    1caa:	57                   	push   rdi
    1cab:	0b 00                	or     eax,DWORD PTR [rax]
    1cad:	00 8d 01 48 01 7d    	add    BYTE PTR [rbp+0x7d014801],cl
    1cb3:	01 82 01 19 7f 13    	add    DWORD PTR [rdx+0x137f1901],eax
    1cb9:	01 13                	add    DWORD PTR [rbx],edx
    1cbb:	00 00                	add    BYTE PTR [rax],al
    1cbd:	8e 01                	mov    es,WORD PTR [rcx]
    1cbf:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1cc2:	19 03                	sbb    DWORD PTR [rbx],eax
    1cc4:	0e                   	(bad)
    1cc5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1cc7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1cc9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1ccb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ccc:	0e                   	(bad)
    1ccd:	20 0b                	and    BYTE PTR [rbx],cl
    1ccf:	01 13                	add    DWORD PTR [rbx],edx
    1cd1:	00 00                	add    BYTE PTR [rax],al
    1cd3:	8f 01                	pop    QWORD PTR [rcx]
    1cd5:	05 00 31 13 02       	add    eax,0x2133100
    1cda:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	ef                   	out    dx,eax
       1:	00 00                	add    BYTE PTR [rax],al
       3:	00 05 00 08 00 8b    	add    BYTE PTR [rip+0xffffffff8b000800],al        # ffffffff8b000809 <_end+0xffffffff8affa7f1>
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 01                	add    BYTE PTR [rcx],al
       d:	01 01                	add    DWORD PTR [rcx],eax
       f:	fb                   	sti
      10:	0e                   	(bad)
      11:	0d 00 01 01 01       	or     eax,0x1010100
      16:	01 00                	add    DWORD PTR [rax],eax
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	01 00                	add    DWORD PTR [rax],eax
      1c:	00 01                	add    BYTE PTR [rcx],al
      1e:	01 01                	add    DWORD PTR [rcx],eax
      20:	1f                   	(bad)
      21:	09 00                	or     DWORD PTR [rax],eax
      23:	00 00                	add    BYTE PTR [rax],al
      25:	00 2f                	add    BYTE PTR [rdi],ch
      27:	00 00                	add    BYTE PTR [rax],al
      29:	00 41 00             	add    BYTE PTR [rcx+0x0],al
      2c:	00 00                	add    BYTE PTR [rax],al
      2e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
      31:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
      34:	00 00                	add    BYTE PTR [rax],al
      36:	9a                   	(bad)
      37:	00 00                	add    BYTE PTR [rax],al
      39:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
      3f:	00 00                	add    BYTE PTR [rax],al
      41:	00 dd                	add    ch,bl
      43:	00 00                	add    BYTE PTR [rax],al
      45:	00 02                	add    BYTE PTR [rdx],al
      47:	01 1f                	add    DWORD PTR [rdi],ebx
      49:	02 0f                	add    cl,BYTE PTR [rdi]
      4b:	0f 26                	(bad)
      4d:	00 00                	add    BYTE PTR [rax],al
      4f:	00 01                	add    BYTE PTR [rcx],al
      51:	26 00 00             	es add BYTE PTR [rax],al
      54:	00 01                	add    BYTE PTR [rcx],al
      56:	07                   	(bad)
      57:	01 00                	add    DWORD PTR [rax],eax
      59:	00 02                	add    BYTE PTR [rdx],al
      5b:	10 01                	adc    BYTE PTR [rcx],al
      5d:	00 00                	add    BYTE PTR [rax],al
      5f:	03 19                	add    ebx,DWORD PTR [rcx]
      61:	01 00                	add    DWORD PTR [rax],eax
      63:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
      66:	01 00                	add    DWORD PTR [rax],eax
      68:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 197 <__abi_tag-0x1e5>
      6e:	06                   	(bad)
      6f:	33 01                	xor    eax,DWORD PTR [rcx]
      71:	00 00                	add    BYTE PTR [rax],al
      73:	04 42                	add    al,0x42
      75:	01 00                	add    DWORD PTR [rax],eax
      77:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7a:	01 00                	add    DWORD PTR [rax],eax
      7c:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7f:	01 00                	add    DWORD PTR [rax],eax
      81:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 1da <__abi_tag-0x1a2>
      87:	04 62                	add    al,0x62
      89:	01 00                	add    DWORD PTR [rax],eax
      8b:	00 07                	add    BYTE PTR [rdi],al
      8d:	6d                   	ins    DWORD PTR es:[rdi],dx
      8e:	01 00                	add    DWORD PTR [rax],eax
      90:	00 07                	add    BYTE PTR [rdi],al
      92:	75 01                	jne    95 <__abi_tag-0x2e7>
      94:	00 00                	add    BYTE PTR [rax],al
      96:	08 05 21 00 09 02    	or     BYTE PTR [rip+0x2090021],al        # 20900bd <_end+0x208a0a5>
      9c:	d0 11                	rcl    BYTE PTR [rcx],1
      9e:	00 00                	add    BYTE PTR [rax],al
      a0:	00 00                	add    BYTE PTR [rax],al
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	19 06                	sbb    DWORD PTR [rsi],eax
      a6:	01 05 05 06 4c 04    	add    DWORD PTR [rip+0x44c0605],eax        # 44c06b1 <_end+0x44ba699>
      ac:	02 05 01 03 d7 03    	add    al,BYTE PTR [rip+0x3d70301]        # 3d703b3 <_end+0x3d6a39b>
      b2:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 10414bb <_end+0x103b4a3>
      b8:	05 21 06 03 a5       	add    eax,0xa5030621
      bd:	7c 01                	jl     c0 <__abi_tag-0x2bc>
      bf:	04 02                	add    al,0x2
      c1:	05 17 03 db 03       	add    eax,0x3db0317
      c6:	20 4a 04             	and    BYTE PTR [rdx+0x4],cl
      c9:	01 05 21 03 a5 7c    	add    DWORD PTR [rip+0x7ca50321],eax        # 7ca503f0 <_end+0x7ca4a3d8>
      cf:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
      d2:	05 17 03 db 03       	add    eax,0x3db0317
      d7:	3c 74                	cmp    al,0x74
      d9:	58                   	pop    rax
      da:	04 01                	add    al,0x1
      dc:	05 05 06 03 a8       	add    eax,0xa8030605
      e1:	7c 01                	jl     e4 <__abi_tag-0x298>
      e3:	15 14 05 0c 06       	adc    eax,0x60c0514
      e8:	01 05 01 08 67 3c    	add    DWORD PTR [rip+0x3c670801],eax        # 3c6708ef <_end+0x3c66a8d7>
      ee:	02 01                	add    al,BYTE PTR [rcx]
      f0:	00 01                	add    BYTE PTR [rcx],al
      f2:	01 21                	add    DWORD PTR [rcx],esp
      f4:	08 00                	or     BYTE PTR [rax],al
      f6:	00 05 00 08 00 b3    	add    BYTE PTR [rip+0xffffffffb3000800],al        # ffffffffb30008fc <_end+0xffffffffb2ffa8e4>
      fc:	00 00                	add    BYTE PTR [rax],al
      fe:	00 01                	add    BYTE PTR [rcx],al
     100:	01 01                	add    DWORD PTR [rcx],eax
     102:	fb                   	sti
     103:	0e                   	(bad)
     104:	0d 00 01 01 01       	or     eax,0x1010100
     109:	01 00                	add    DWORD PTR [rax],eax
     10b:	00 00                	add    BYTE PTR [rax],al
     10d:	01 00                	add    DWORD PTR [rax],eax
     10f:	00 01                	add    BYTE PTR [rcx],al
     111:	01 01                	add    DWORD PTR [rcx],eax
     113:	1f                   	(bad)
     114:	09 00                	or     DWORD PTR [rax],eax
     116:	00 00                	add    BYTE PTR [rax],al
     118:	00 2f                	add    BYTE PTR [rdi],ch
     11a:	00 00                	add    BYTE PTR [rax],al
     11c:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     11f:	00 00                	add    BYTE PTR [rax],al
     121:	77 00                	ja     123 <__abi_tag-0x259>
     123:	00 00                	add    BYTE PTR [rax],al
     125:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     128:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     12e:	00 00                	add    BYTE PTR [rax],al
     130:	00 c7                	add    bh,al
     132:	00 00                	add    BYTE PTR [rax],al
     134:	00 dd                	add    ch,bl
     136:	00 00                	add    BYTE PTR [rax],al
     138:	00 02                	add    BYTE PTR [rdx],al
     13a:	01 1f                	add    DWORD PTR [rdi],ebx
     13c:	02 0f                	add    cl,BYTE PTR [rdi]
     13e:	17                   	(bad)
     13f:	93                   	xchg   ebx,eax
     140:	01 00                	add    DWORD PTR [rax],eax
     142:	00 01                	add    BYTE PTR [rcx],al
     144:	93                   	xchg   ebx,eax
     145:	01 00                	add    DWORD PTR [rax],eax
     147:	00 01                	add    BYTE PTR [rcx],al
     149:	a0 01 00 00 02 a9 01 	movabs al,ds:0x1a902000001
     150:	00 00 
     152:	03 bc 01 00 00 04 c8 	add    edi,DWORD PTR [rcx+rax*1-0x37fc0000]
     159:	01 00                	add    DWORD PTR [rax],eax
     15b:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
     15e:	01 00                	add    DWORD PTR [rax],eax
     160:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     163:	01 00                	add    DWORD PTR [rax],eax
     165:	00 02                	add    BYTE PTR [rdx],al
     167:	19 01                	sbb    DWORD PTR [rcx],eax
     169:	00 00                	add    BYTE PTR [rax],al
     16b:	03 21                	add    esp,DWORD PTR [rcx]
     16d:	01 00                	add    DWORD PTR [rax],eax
     16f:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 29e <__abi_tag-0xde>
     175:	06                   	(bad)
     176:	33 01                	xor    eax,DWORD PTR [rcx]
     178:	00 00                	add    BYTE PTR [rax],al
     17a:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     17d:	00 00                	add    BYTE PTR [rax],al
     17f:	03 07                	add    eax,DWORD PTR [rdi]
     181:	01 00                	add    DWORD PTR [rax],eax
     183:	00 03                	add    BYTE PTR [rbx],al
     185:	07                   	(bad)
     186:	01 00                	add    DWORD PTR [rax],eax
     188:	00 05 d4 01 00 00    	add    BYTE PTR [rip+0x1d4],al        # 362 <__abi_tag-0x1a>
     18e:	04 53                	add    al,0x53
     190:	01 00                	add    DWORD PTR [rax],eax
     192:	00 03                	add    BYTE PTR [rbx],al
     194:	e0 01                	loopne 197 <__abi_tag-0x1e5>
     196:	00 00                	add    BYTE PTR [rax],al
     198:	02 e9                	add    ch,cl
     19a:	01 00                	add    DWORD PTR [rax],eax
     19c:	00 07                	add    BYTE PTR [rdi],al
     19e:	62 01 00 00 07       	(bad)
     1a3:	f4                   	hlt
     1a4:	01 00                	add    DWORD PTR [rax],eax
     1a6:	00 07                	add    BYTE PTR [rdi],al
     1a8:	fb                   	sti
     1a9:	01 00                	add    DWORD PTR [rax],eax
     1ab:	00 02                	add    BYTE PTR [rdx],al
     1ad:	75 01                	jne    1b0 <__abi_tag-0x1cc>
     1af:	00 00                	add    BYTE PTR [rax],al
     1b1:	08 05 37 00 09 02    	or     BYTE PTR [rip+0x2090037],al        # 20901ee <_end+0x208a1d6>
     1b7:	00 13                	add    BYTE PTR [rbx],dl
     1b9:	00 00                	add    BYTE PTR [rax],al
     1bb:	00 00                	add    BYTE PTR [rax],al
     1bd:	00 00                	add    BYTE PTR [rax],al
     1bf:	03 13                	add    edx,DWORD PTR [rbx]
     1c1:	01 06                	add    DWORD PTR [rsi],eax
     1c3:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b07ce <_end+0x54aa7b6>
     1c9:	37                   	(bad)
     1ca:	06                   	(bad)
     1cb:	11 05 05 08 4b 06    	adc    DWORD PTR [rip+0x64b0805],eax        # 64b09d6 <_end+0x64aa9be>
     1d1:	bd 05 49 06 01       	mov    ebp,0x1064905
     1d6:	05 36 66 58 05       	add    eax,0x5586636
     1db:	52                   	push   rdx
     1dc:	4b 05 36 3b 05 52    	rex.WXB add rax,0x52053b36
     1e2:	3d 05 36 3b 05       	cmp    eax,0x53b3605
     1e7:	05 06 59 05 32       	add    eax,0x32055906
     1ec:	06                   	(bad)
     1ed:	01 05 36 81 05 32    	add    DWORD PTR [rip+0x32058136],eax        # 32058329 <_end+0x32052311>
     1f3:	59                   	pop    rcx
     1f4:	05 05 06 83 13       	add    eax,0x13830605
     1f9:	14 05                	adc    al,0x5
     1fb:	1c 00                	sbb    al,0x0
     1fd:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     200:	93                   	xchg   ebx,eax
     201:	00 02                	add    BYTE PTR [rdx],al
     203:	04 01                	add    al,0x1
     205:	06                   	(bad)
     206:	58                   	pop    rax
     207:	00 02                	add    BYTE PTR [rdx],al
     209:	04 01                	add    al,0x1
     20b:	08 9e 04 02 05 1b    	or     BYTE PTR [rsi+0x1b050204],bl
     211:	03 cb                	add    ecx,ebx
     213:	01 3c c8             	add    DWORD PTR [rax+rcx*8],edi
     216:	04 01                	add    al,0x1
     218:	05 09 06 03 b6       	add    eax,0xb6030609
     21d:	7e 01                	jle    220 <__abi_tag-0x15c>
     21f:	14 04                	adc    al,0x4
     221:	02 05 01 03 c6 01    	add    al,BYTE PTR [rip+0x1c60301]        # 1c60528 <_end+0x1c5a510>
     227:	01 05 03 14 05 1b    	add    DWORD PTR [rip+0x1b051403],eax        # 1b051630 <_end+0x1b04b618>
     22d:	06                   	(bad)
     22e:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
     231:	01 05 09 06 03 b9    	add    DWORD PTR [rip+0xffffffffb9030609],eax        # ffffffffb9030840 <_end+0xffffffffb902a828>
     237:	7e 01                	jle    23a <__abi_tag-0x142>
     239:	05 23 06 40 05       	add    eax,0x5400623
     23e:	0d 38 05 09 06       	or     eax,0x6090538
     243:	4c 04 03             	rex.WR add al,0x3
     246:	05 22 00 02 04       	add    eax,0x4020022
     24b:	01 06                	add    DWORD PTR [rsi],eax
     24d:	03 39                	add    edi,DWORD PTR [rcx]
     24f:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     252:	05 10 03 49 3c       	add    eax,0x3c490310
     257:	04 03                	add    al,0x3
     259:	05 22 00 02 04       	add    eax,0x4020022
     25e:	01 03                	add    DWORD PTR [rbx],eax
     260:	37                   	(bad)
     261:	4a 04 01             	rex.WX add al,0x1
     264:	05 17 03 47 58       	add    eax,0x58470317
     269:	04 03                	add    al,0x3
     26b:	05 22 00 02 04       	add    eax,0x4020022
     270:	01 03                	add    DWORD PTR [rbx],eax
     272:	39 3c 04             	cmp    DWORD PTR [rsp+rax*1],edi
     275:	01 05 17 03 47 82    	add    DWORD PTR [rip+0xffffffff82470317],eax        # ffffffff82470592 <_end+0xffffffff8246a57a>
     27b:	05 09 06 3e 04       	add    eax,0x43e0609
     280:	03 05 22 00 02 04    	add    eax,DWORD PTR [rip+0x4020022]        # 40202a8 <_end+0x401a290>
     286:	01 06                	add    DWORD PTR [rsi],eax
     288:	03 37                	add    esi,DWORD PTR [rdi]
     28a:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     28d:	05 10 03 49 74       	add    eax,0x74490310
     292:	04 03                	add    al,0x3
     294:	05 01 06 03 34       	add    eax,0x34030601
     299:	3c 05                	cmp    al,0x5
     29b:	03 15 05 22 00 02    	add    edx,DWORD PTR [rip+0x2002205]        # 20024a6 <_end+0x1ffc48e>
     2a1:	04 01                	add    al,0x1
     2a3:	06                   	(bad)
     2a4:	01 00                	add    DWORD PTR [rax],eax
     2a6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2a9:	c8 04 01 05          	enter  0x104,0x5
     2ad:	09 06                	or     DWORD PTR [rsi],eax
     2af:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
     2b2:	05 26 06 01 04       	add    eax,0x4010626
     2b7:	03 05 01 06 03 10    	add    eax,DWORD PTR [rip+0x10030601]        # 100308be <_end+0x1002a8a6>
     2bd:	d6                   	(bad)
     2be:	05 03 14 04 01       	add    eax,0x1041403
     2c3:	05 0f 06 03 6e       	add    eax,0x6e03060f
     2c8:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
     2cb:	05 21 00 02 04       	add    eax,0x4020021
     2d0:	01 03                	add    DWORD PTR [rbx],eax
     2d2:	12 58 04             	adc    bl,BYTE PTR [rax+0x4]
     2d5:	01 05 0f 03 6e 9e    	add    DWORD PTR [rip+0xffffffff9e6e030f],eax        # ffffffff9e6e05ea <_end+0xffffffff9e6da5d2>
     2db:	04 03                	add    al,0x3
     2dd:	05 21 00 02 04       	add    eax,0x4020021
     2e2:	01 03                	add    DWORD PTR [rbx],eax
     2e4:	12 3c 04             	adc    bh,BYTE PTR [rsp+rax*1]
     2e7:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4020309 <_end+0x401a2f1>
     2ed:	01 03                	add    DWORD PTR [rbx],eax
     2ef:	65 2e 04 03          	gs cs add al,0x3
     2f3:	05 21 00 02 04       	add    eax,0x4020021
     2f8:	01 03                	add    DWORD PTR [rbx],eax
     2fa:	1b 4a 04             	sbb    ecx,DWORD PTR [rdx+0x4]
     2fd:	01 05 26 03 6e 3c    	add    DWORD PTR [rip+0x3c6e0326],eax        # 3c6e0629 <_end+0x3c6da611>
     303:	04 03                	add    al,0x3
     305:	05 21 00 02 04       	add    eax,0x4020021
     30a:	01 03                	add    DWORD PTR [rbx],eax
     30c:	12 3c 00             	adc    bh,BYTE PTR [rax+rax*1]
     30f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     312:	58                   	pop    rax
     313:	04 01                	add    al,0x1
     315:	05 0d 06 03 75       	add    eax,0x7503060d
     31a:	01 04 04             	add    DWORD PTR [rsp+rax*1],eax
     31d:	05 01 03 e3 06       	add    eax,0x6e30301
     322:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 106172b <_end+0x105b713>
     328:	04 01                	add    al,0x1
     32a:	05 09 06 03 9e       	add    eax,0x9e030609
     32f:	79 01                	jns    332 <__abi_tag-0x4a>
     331:	05 24 00 02 04       	add    eax,0x4020024
     336:	01 06                	add    DWORD PTR [rsi],eax
     338:	0f 05                	syscall
     33a:	20 e7                	and    bh,ah
     33c:	05 05 00 02 04       	add    eax,0x4020005
     341:	03 06                	add    eax,DWORD PTR [rsi]
     343:	03 6d 4a             	add    ebp,DWORD PTR [rbp+0x4a]
     346:	05 1c 00 02 04       	add    eax,0x402001c
     34b:	01 01                	add    DWORD PTR [rcx],eax
     34d:	05 24 00 02 04       	add    eax,0x4020024
     352:	01 06                	add    DWORD PTR [rsi],eax
     354:	03 10                	add    edx,DWORD PTR [rax]
     356:	4a 05 1c 00 02 04    	rex.WX add rax,0x402001c
     35c:	01 03                	add    DWORD PTR [rbx],eax
     35e:	70 66                	jo     3c6 <__abi_tag+0x4a>
     360:	00 02                	add    BYTE PTR [rdx],al
     362:	04 01                	add    al,0x1
     364:	d6                   	(bad)
     365:	05 09 06 03 18       	add    eax,0x18030609
     36a:	01 05 0d 06 01 05    	add    DWORD PTR [rip+0x501060d],eax        # 501097d <_end+0x500a965>
     370:	05 06 86 05 01       	add    eax,0x1058606
     375:	06                   	(bad)
     376:	13 ba 66 05 05 00    	adc    edi,DWORD PTR [rdx+0x50566]
     37c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     37f:	03 58 2e             	add    ebx,DWORD PTR [rax+0x2e]
     382:	00 02                	add    BYTE PTR [rdx],al
     384:	04 01                	add    al,0x1
     386:	08 2e                	or     BYTE PTR [rsi],ch
     388:	00 02                	add    BYTE PTR [rdx],al
     38a:	04 01                	add    al,0x1
     38c:	74 00                	je     38e <__abi_tag+0x12>
     38e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     391:	60                   	(bad)
     392:	00 02                	add    BYTE PTR [rdx],al
     394:	04 01                	add    al,0x1
     396:	08 d6                	or     dh,dl
     398:	05 39 06 00 09       	add    eax,0x9000639
     39d:	02 90 14 00 00 00    	add    dl,BYTE PTR [rax+0x14]
     3a3:	00 00                	add    BYTE PTR [rax],al
     3a5:	00 03                	add    BYTE PTR [rbx],al
     3a7:	22 01                	and    al,BYTE PTR [rcx]
     3a9:	06                   	(bad)
     3aa:	01 08                	add    DWORD PTR [rax],ecx
     3ac:	ba 05 05 06 f3       	mov    edx,0xf3060505
     3b1:	05 2e 06 15 05       	add    eax,0x515062e
     3b6:	05 06 4c 05 22       	add    eax,0x22054c06
     3bb:	06                   	(bad)
     3bc:	01 05 0d 53 05 2e    	add    DWORD PTR [rip+0x2e05530d],eax        # 2e0556cf <_end+0x2e04f6b7>
     3c2:	77 05                	ja     3c9 <__abi_tag+0x4d>
     3c4:	22 4c 3c 05          	and    cl,BYTE PTR [rsp+rdi*1+0x5]
     3c8:	13 00                	adc    eax,DWORD PTR [rax]
     3ca:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     3cd:	58                   	pop    rax
     3ce:	05 05 06 4c 05       	add    eax,0x54c0605
     3d3:	1c 00                	sbb    al,0x0
     3d5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     3d8:	01 05 09 08 2f 05    	add    DWORD PTR [rip+0x52f0809],eax        # 52f0be7 <_end+0x52eabcf>
     3de:	24 06                	and    al,0x6
     3e0:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4020402 <_end+0x401a3ea>
     3e6:	01 3b                	add    DWORD PTR [rbx],edi
     3e8:	05 24 4b 05 05       	add    eax,0x5054b24
     3ed:	00 02                	add    BYTE PTR [rdx],al
     3ef:	04 03                	add    al,0x3
     3f1:	06                   	(bad)
     3f2:	08 73 05             	or     BYTE PTR [rbx+0x5],dh
     3f5:	1c 00                	sbb    al,0x0
     3f7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     3fa:	01 05 01 06 5d 08    	add    DWORD PTR [rip+0x85d0601],eax        # 85d0a01 <_end+0x85ca9e9>
     400:	90                   	nop
     401:	66 05 3a 06          	add    ax,0x63a
     405:	bc 06 01 05 05       	mov    esp,0x5050106
     40a:	06                   	(bad)
     40b:	9f                   	lahf
     40c:	05 23 06 92 05       	add    eax,0x5920623
     411:	05 06 74 05 23       	add    eax,0x23057406
     416:	06                   	(bad)
     417:	01 05 0e 08 e5 05    	add    DWORD PTR [rip+0x5e5080e],eax        # 5e50c2b <_end+0x5e4ac13>
     41d:	24 30                	and    al,0x30
     41f:	05 23 63 05 05       	add    eax,0x5056323
     424:	06                   	(bad)
     425:	2f                   	(bad)
     426:	05 0e 06 01 05       	add    eax,0x501060e
     42b:	24 3e                	and    al,0x3e
     42d:	05 0e f0 05 34       	add    eax,0x3405f00e
     432:	30 05 0e 48 05 05    	xor    BYTE PTR [rip+0x505480e],al        # 5054c46 <_end+0x504ec2e>
     438:	06                   	(bad)
     439:	3e 05 24 06 01 3c    	ds add eax,0x3c010624
     43f:	05 05 06 08 68       	add    eax,0x68080605
     444:	05 09 91 05 36       	add    eax,0x36059109
     449:	06                   	(bad)
     44a:	01 3c 05 4a d6 05 4f 	add    DWORD PTR [rax*1+0x4f05d64a],edi
     451:	82                   	(bad)
     452:	05 1e 4a 05 05       	add    eax,0x5054a1e
     457:	06                   	(bad)
     458:	5a                   	pop    rdx
     459:	05 01 06 13 74       	add    eax,0x74130601
     45e:	20 05 05 00 02 04    	and    BYTE PTR [rip+0x4020005],al        # 4020469 <_end+0x401a451>
     464:	01 03                	add    DWORD PTR [rbx],eax
     466:	75 20                	jne    488 <__abi_tag+0x10c>
     468:	00 02                	add    BYTE PTR [rdx],al
     46a:	04 01                	add    al,0x1
     46c:	08 90 05 3a 06 03    	or     BYTE PTR [rax+0x3063a05],dl
     472:	0d 82 06 01 05       	or     eax,0x5010682
     477:	05 06 9f 05 23       	add    eax,0x23059f06
     47c:	06                   	(bad)
     47d:	92                   	xchg   edx,eax
     47e:	05 05 06 74 05       	add    eax,0x5740605
     483:	23 06                	and    eax,DWORD PTR [rsi]
     485:	01 05 0e 08 e5 05    	add    DWORD PTR [rip+0x5e5080e],eax        # 5e50c99 <_end+0x5e4ac81>
     48b:	14 30                	adc    al,0x30
     48d:	05 23 63 05 05       	add    eax,0x5056323
     492:	06                   	(bad)
     493:	2f                   	(bad)
     494:	05 0e 06 01 05       	add    eax,0x501060e
     499:	14 3e                	adc    al,0x3e
     49b:	05 0e f0 05 24       	add    eax,0x2405f00e
     4a0:	30 05 0e 48 05 05    	xor    BYTE PTR [rip+0x505480e],al        # 5054cb4 <_end+0x504ec9c>
     4a6:	06                   	(bad)
     4a7:	3e 05 14 06 01 3c    	ds add eax,0x3c010614
     4ad:	05 05 00 02 04       	add    eax,0x4020005
     4b2:	01 08                	add    DWORD PTR [rax],ecx
     4b4:	66 06                	data16 (bad)
     4b6:	84 05 32 06 01 05    	test   BYTE PTR [rip+0x5010632],al        # 5010aee <_end+0x500aad6>
     4bc:	01 08                	add    DWORD PTR [rax],ecx
     4be:	15 05 46 2b 05       	adc    eax,0x52b4605
     4c3:	4b 82                	rex.WXB (bad)
     4c5:	05 1a 4a 05 05       	add    eax,0x5054a1a
     4ca:	06                   	(bad)
     4cb:	5a                   	pop    rdx
     4cc:	05 01 06 13 58       	add    eax,0x58130601
     4d1:	20 05 37 00 02 04    	and    BYTE PTR [rip+0x4020037],al        # 402050e <_end+0x401a4f6>
     4d7:	01 06                	add    DWORD PTR [rsi],eax
     4d9:	45 05 47 00 02 04    	rex.RB add eax,0x4020047
     4df:	01 06                	add    DWORD PTR [rsi],eax
     4e1:	01 05 01 41 58 05    	add    DWORD PTR [rip+0x5584101],eax        # 55845e8 <_end+0x557e5d0>
     4e7:	05 00 02 04 01       	add    eax,0x1040200
     4ec:	03 76 4a             	add    esi,DWORD PTR [rsi+0x4a]
     4ef:	00 02                	add    BYTE PTR [rdx],al
     4f1:	04 01                	add    al,0x1
     4f3:	08 90 05 39 06 03    	or     BYTE PTR [rax+0x3063905],dl
     4f9:	0c 9e                	or     al,0x9e
     4fb:	06                   	(bad)
     4fc:	01 05 05 06 d7 04    	add    DWORD PTR [rip+0x4d70605],eax        # 4d70b07 <_end+0x4d6aaef>
     502:	05 05 21 06 03       	add    eax,0x3062105
     507:	e1 05                	loope  50e <__abi_tag+0x192>
     509:	90                   	nop
     50a:	05 26 03 fe 7c       	add    eax,0x7cfe0326
     50f:	58                   	pop    rax
     510:	04 01                	add    al,0x1
     512:	05 09 06 03 b1       	add    eax,0xb1030609
     517:	7d 82                	jge    49b <__abi_tag+0x11f>
     519:	13 05 0d 03 0b 01    	adc    eax,DWORD PTR [rip+0x10b030d]        # 10b082c <_end+0x10aa814>
     51f:	04 04                	add    al,0x4
     521:	05 01 03 a8 03       	add    eax,0x3a80301
     526:	01 05 03 14 05 01    	add    DWORD PTR [rip+0x1051403],eax        # 105192f <_end+0x104b917>
     52c:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
     52f:	05 03 14 06 01       	add    eax,0x1061403
     534:	06                   	(bad)
     535:	03 1d 01 04 05 05    	add    ebx,DWORD PTR [rip+0x5050401]        # 505093c <_end+0x504a924>
     53b:	01 03                	add    DWORD PTR [rbx],eax
     53d:	96                   	xchg   esi,eax
     53e:	7f 01                	jg     541 <__abi_tag+0x1c5>
     540:	05 03 14 06 01       	add    eax,0x1061403
     545:	04 01                	add    al,0x1
     547:	05 0d 06 03 be       	add    eax,0xbe03060d
     54c:	7d 01                	jge    54f <__abi_tag+0x1d3>
     54e:	04 04                	add    al,0x4
     550:	05 01 03 a7 03       	add    eax,0x3a70301
     555:	01 05 03 14 13 04    	add    DWORD PTR [rip+0x4131403],eax        # 413195e <_end+0x412b946>
     55b:	05 05 01 03 96       	add    eax,0x96030105
     560:	7f 01                	jg     563 <__abi_tag+0x1e7>
     562:	05 03 14 04 01       	add    eax,0x1041403
     567:	05 21 06 03 d7       	add    eax,0xd7030621
     56c:	7d 01                	jge    56f <__abi_tag+0x1f3>
     56e:	04 05                	add    al,0x5
     570:	03 ab 05 4a 05 26    	add    ebp,DWORD PTR [rbx+0x26054a05]
     576:	03 fe                	add    edi,esi
     578:	7c 2e                	jl     5a8 <__abi_tag+0x22c>
     57a:	66 04 01             	data16 add al,0x1
     57d:	05 0d 06 03 bf       	add    eax,0xbf03060d
     582:	7d 01                	jge    585 <__abi_tag+0x209>
     584:	04 04                	add    al,0x4
     586:	05 01 03 a6 03       	add    eax,0x3a60301
     58b:	01 05 03 14 05 01    	add    DWORD PTR [rip+0x1051403],eax        # 1051994 <_end+0x104b97c>
     591:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
     594:	05 03 14 05 36       	add    eax,0x36051403
     599:	06                   	(bad)
     59a:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
     59d:	03 06                	add    eax,DWORD PTR [rsi]
     59f:	03 1d 01 04 05 05    	add    ebx,DWORD PTR [rip+0x5050401]        # 50509a6 <_end+0x504a98e>
     5a5:	01 03                	add    DWORD PTR [rbx],eax
     5a7:	96                   	xchg   esi,eax
     5a8:	7f 01                	jg     5ab <__abi_tag+0x22f>
     5aa:	05 03 14 04 01       	add    eax,0x1041403
     5af:	05 21 06 03 d7       	add    eax,0xd7030621
     5b4:	7d 01                	jge    5b7 <__abi_tag+0x23b>
     5b6:	04 05                	add    al,0x5
     5b8:	03 ab 05 66 90 05    	add    ebp,DWORD PTR [rbx+0x5906605]
     5be:	26 03 fe             	es add edi,esi
     5c1:	7c 01                	jl     5c4 <__abi_tag+0x248>
     5c3:	04 01                	add    al,0x1
     5c5:	05 21 03 d7 7d       	add    eax,0x7dd70321
     5ca:	66 04 05             	data16 add al,0x5
     5cd:	05 26 03 a9 02       	add    eax,0x2a90326
     5d2:	90                   	nop
     5d3:	58                   	pop    rax
     5d4:	04 01                	add    al,0x1
     5d6:	05 0d 06 03 c0       	add    eax,0xc003060d
     5db:	7d 01                	jge    5de <__abi_tag+0x262>
     5dd:	04 04                	add    al,0x4
     5df:	05 01 03 a5 03       	add    eax,0x3a50301
     5e4:	01 05 03 14 13 04    	add    DWORD PTR [rip+0x4131403],eax        # 41319ed <_end+0x412b9d5>
     5ea:	05 05 01 03 96       	add    eax,0x96030105
     5ef:	7f 01                	jg     5f2 <__abi_tag+0x276>
     5f1:	05 03 14 06 01       	add    eax,0x1061403
     5f6:	04 01                	add    al,0x1
     5f8:	05 09 06 03 c4       	add    eax,0xc4030609
     5fd:	7d 01                	jge    600 <__abi_tag+0x284>
     5ff:	04 05                	add    al,0x5
     601:	05 01 03 bc 05       	add    eax,0x5bc0301
     606:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 1061a0f <_end+0x105b9f7>
     60c:	04 01                	add    al,0x1
     60e:	05 09 06 03 c3       	add    eax,0xc3030609
     613:	7a 01                	jp     616 <__abi_tag+0x29a>
     615:	04 05                	add    al,0x5
     617:	05 01 03 bb 05       	add    eax,0x5bb0301
     61c:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a25 <_end+0x2104ba0d>
     622:	06                   	(bad)
     623:	01 66 04             	add    DWORD PTR [rsi+0x4],esp
     626:	01 05 09 06 03 c4    	add    DWORD PTR [rip+0xffffffffc4030609],eax        # ffffffffc4030c35 <_end+0xffffffffc402ac1d>
     62c:	7a 01                	jp     62f <__abi_tag+0x2b3>
     62e:	04 05                	add    al,0x5
     630:	05 01 03 ba 05       	add    eax,0x5ba0301
     635:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a3e <_end+0x2104ba26>
     63b:	06                   	(bad)
     63c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     63f:	05 17 03 c7 7a       	add    eax,0x7ac70317
     644:	2e 04 05             	cs add al,0x5
     647:	05 21 03 b9 05       	add    eax,0x5b90321
     64c:	3c 66                	cmp    al,0x66
     64e:	04 01                	add    al,0x1
     650:	05 09 06 03 c5       	add    eax,0xc5030609
     655:	7a 01                	jp     658 <__abi_tag+0x2dc>
     657:	04 05                	add    al,0x5
     659:	05 01 03 b9 05       	add    eax,0x5b90301
     65e:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a67 <_end+0x2104ba4f>
     664:	06                   	(bad)
     665:	01 66 04             	add    DWORD PTR [rsi+0x4],esp
     668:	01 05 09 06 03 c7    	add    DWORD PTR [rip+0xffffffffc7030609],eax        # ffffffffc7030c77 <_end+0xffffffffc702ac5f>
     66e:	7a 01                	jp     671 <__abi_tag+0x2f5>
     670:	05 0d 1a 05 05       	add    eax,0x5051a0d
     675:	18 05 41 06 03 7a    	sbb    BYTE PTR [rip+0x7a030641],al        # 7a030cbc <_end+0x7a02aca4>
     67b:	01 05 1f 03 78 3c    	add    DWORD PTR [rip+0x3c78031f],eax        # 3c7809a0 <_end+0x3c77a988>
     681:	05 0f 2e 05 41       	add    eax,0x41052e0f
     686:	36 05 32 42 05 40    	ss add eax,0x40054232
     68c:	2e 05 21 4a 08 20    	cs add eax,0x20084a21
     692:	05 05 06 84 05       	add    eax,0x5840605
     697:	01 06                	add    DWORD PTR [rsi],eax
     699:	5b                   	pop    rbx
     69a:	05 05 00 02 04       	add    eax,0x4020005
     69f:	01 03                	add    DWORD PTR [rbx],eax
     6a1:	45 58                	rex.RB pop r8
     6a3:	00 02                	add    BYTE PTR [rdx],al
     6a5:	04 01                	add    al,0x1
     6a7:	08 90 00 02 04 01    	or     BYTE PTR [rax+0x1040200],dl
     6ad:	82                   	(bad)
     6ae:	05 26 06 00 09       	add    eax,0x9000626
     6b3:	02 c0                	add    al,al
     6b5:	17                   	(bad)
     6b6:	00 00                	add    BYTE PTR [rax],al
     6b8:	00 00                	add    BYTE PTR [rax],al
     6ba:	00 00                	add    BYTE PTR [rax],al
     6bc:	03 3d 01 06 01 05    	add    edi,DWORD PTR [rip+0x5010601]        # 5010cc3 <_end+0x500acab>
     6c2:	05 06 4b 5a 05       	add    eax,0x55a4b06
     6c7:	15 00 02 04 01       	adc    eax,0x1040200
     6cc:	06                   	(bad)
     6cd:	01 05 01 59 05 26    	add    DWORD PTR [rip+0x26055901],eax        # 26055fd4 <_end+0x2604ffbc>
     6d3:	1c 05                	sbb    al,0x5
     6d5:	05 00 02 04 01       	add    eax,0x1040200
     6da:	21 00                	and    DWORD PTR [rax],eax
     6dc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     6df:	08 90 05 23 06 6b    	or     BYTE PTR [rax+0x6b062305],dl
     6e5:	06                   	(bad)
     6e6:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0cf1 <_end+0x54aacd9>
     6ec:	23 06                	and    eax,DWORD PTR [rsi]
     6ee:	11 05 05 67 05 1c    	adc    DWORD PTR [rip+0x1c056705],eax        # 1c056df9 <_end+0x1c050de1>
     6f4:	00 02                	add    BYTE PTR [rdx],al
     6f6:	04 01                	add    al,0x1
     6f8:	5a                   	pop    rdx
     6f9:	00 02                	add    BYTE PTR [rdx],al
     6fb:	04 01                	add    al,0x1
     6fd:	06                   	(bad)
     6fe:	66 05 09 ad          	add    ax,0xad09
     702:	05 11 06 01 05       	add    eax,0x5010611
     707:	1c 00                	sbb    al,0x0
     709:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     70c:	81 05 11 4b 05 05 00 	add    DWORD PTR [rip+0x5054b11],0x3040200        # 5055227 <_end+0x504f20f>
     713:	02 04 03 
     716:	06                   	(bad)
     717:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 4020739 <_end+0x401a721>
     71d:	01 01                	add    DWORD PTR [rcx],eax
     71f:	00 02                	add    BYTE PTR [rdx],al
     721:	04 01                	add    al,0x1
     723:	06                   	(bad)
     724:	58                   	pop    rax
     725:	05 05 06 16 05       	add    eax,0x5160605
     72a:	09 06                	or     DWORD PTR [rsi],eax
     72c:	01 05 01 4b 05 09    	add    DWORD PTR [rip+0x9054b01],eax        # 9055233 <_end+0x904f21b>
     732:	65 05 06 06 03 79    	gs add eax,0x79030606
     738:	58                   	pop    rax
     739:	05 05 00 02 04       	add    eax,0x4020005
     73e:	01 06                	add    DWORD PTR [rsi],eax
     740:	13 00                	adc    eax,DWORD PTR [rax]
     742:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     745:	08 90 05 38 06 03    	or     BYTE PTR [rax+0x3063805],dl
     74b:	13 c8                	adc    ecx,eax
     74d:	06                   	(bad)
     74e:	01 02                	add    DWORD PTR [rdx],eax
     750:	27                   	(bad)
     751:	12 05 05 06 08 59    	adc    al,BYTE PTR [rip+0x59080605]        # 59080d5c <_end+0x5907ad44>
     757:	05 26 06 92 05       	add    eax,0x5920626
     75c:	2e 03 ff             	cs add edi,edi
     75f:	7e 4a                	jle    7ab <__abi_tag+0x42f>
     761:	05 05 06 03 81       	add    eax,0x81030605
     766:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
     769:	09 03                	or     DWORD PTR [rbx],eax
     76b:	fb                   	sti
     76c:	7e 01                	jle    76f <__abi_tag+0x3f3>
     76e:	05 05 13 05 22       	add    eax,0x22051305
     773:	06                   	(bad)
     774:	41 58                	pop    r8
     776:	05 2e 2c 05 05       	add    eax,0x5052c2e
     77b:	06                   	(bad)
     77c:	4c 05 22 06 01 2e    	rex.WR add rax,0x2e010622
     782:	3c 05                	cmp    al,0x5
     784:	13 00                	adc    eax,DWORD PTR [rax]
     786:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     789:	ba 05 05 06 3e       	mov    edx,0x3e060505
     78e:	05 1c 00 02 04       	add    eax,0x402001c
     793:	01 01                	add    DWORD PTR [rcx],eax
     795:	05 22 06 10 05       	add    eax,0x5100622
     79a:	1c 00                	sbb    al,0x0
     79c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     79f:	3e 05 09 06 02 2b    	ds add eax,0x2b020609
     7a5:	13 05 24 06 01 05    	adc    eax,DWORD PTR [rip+0x5010624]        # 5010dcf <_end+0x500adb7>
     7ab:	1c 00                	sbb    al,0x0
     7ad:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7b0:	73 05                	jae    7b7 <__abi_tag+0x43b>
     7b2:	24 4b                	and    al,0x4b
     7b4:	05 05 00 02 04       	add    eax,0x4020005
     7b9:	03 06                	add    eax,DWORD PTR [rsi]
     7bb:	08 c7                	or     bh,al
     7bd:	05 1c 00 02 04       	add    eax,0x402001c
     7c2:	01 01                	add    DWORD PTR [rcx],eax
     7c4:	00 02                	add    BYTE PTR [rdx],al
     7c6:	04 01                	add    al,0x1
     7c8:	06                   	(bad)
     7c9:	58                   	pop    rax
     7ca:	05 05 06 16 06       	add    eax,0x6160605
     7cf:	01 06                	add    DWORD PTR [rsi],eax
     7d1:	03 fa                	add    edi,edx
     7d3:	00 01                	add    BYTE PTR [rcx],al
     7d5:	05 34 06 4a 05       	add    eax,0x54a0634
     7da:	55                   	push   rbp
     7db:	74 05                	je     7e2 <__abi_tag+0x466>
     7dd:	1c 00                	sbb    al,0x0
     7df:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7e2:	5a                   	pop    rdx
     7e3:	05 36 aa 05 13       	add    eax,0x1305aa36
     7e8:	03 6f 90             	add    ebp,DWORD PTR [rdi-0x70]
     7eb:	05 4a 03 11 4a       	add    eax,0x4a11034a
     7f0:	05 55 58 05 1d       	add    eax,0x1d055855
     7f5:	3c 05                	cmp    al,0x5
     7f7:	13 03                	adc    eax,DWORD PTR [rbx]
     7f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7fa:	74 05                	je     801 <__abi_tag+0x485>
     7fc:	34 03                	xor    al,0x3
     7fe:	11 3c 05 4a 4a 05 1d 	adc    DWORD PTR [rax*1+0x1d054a4a],edi
     805:	4a 05 05 06 5a 05    	rex.WX add rax,0x55a0605
     80b:	1c 00                	sbb    al,0x0
     80d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     810:	01 05 09 ad 05 33    	add    DWORD PTR [rip+0x3305ad09],eax        # 3305b51f <_end+0x33055507>
     816:	06                   	(bad)
     817:	08 2e                	or     BYTE PTR [rsi],ch
     819:	05 12 4a 05 09       	add    eax,0x9054a12
     81e:	06                   	(bad)
     81f:	30 05 19 01 05 0d    	xor    BYTE PTR [rip+0xd050119],al        # d05093e <_end+0xd04a926>
     825:	75 05                	jne    82c <__abi_tag+0x4b0>
     827:	3c 06                	cmp    al,0x6
     829:	01 05 36 03 71 2e    	add    DWORD PTR [rip+0x2e710336],eax        # 2e710b65 <_end+0x2e70ab4d>
     82f:	05 24 2e 05 44       	add    eax,0x44052e24
     834:	03 0f                	add    ecx,DWORD PTR [rdi]
     836:	4a                   	rex.WX
     837:	4a 05 14 66 05 0d    	rex.WX add rax,0xd056614
     83d:	06                   	(bad)
     83e:	c9                   	leave
     83f:	05 14 06 11 05       	add    eax,0x5110614
     844:	36 03 71 82          	ss add esi,DWORD PTR [rcx-0x7e]
     848:	05 14 03 0f 2e       	add    eax,0x2e0f0314
     84d:	05 11 06 03 6c       	add    eax,0x6c030611
     852:	08 4a 05             	or     BYTE PTR [rdx+0x5],cl
     855:	05 13 14 14 05       	add    eax,0x5141413
     85a:	24 06                	and    al,0x6
     85c:	01 05 34 ac 05 24    	add    DWORD PTR [rip+0x2405ac34],eax        # 2405b496 <_end+0x2405547e>
     862:	4a 05 05 06 bc 05    	rex.WX add rax,0x5bc0605
     868:	0d 03 10 01 05       	or     eax,0x5011003
     86d:	22 06                	and    al,BYTE PTR [rsi]
     86f:	01 05 19 46 05 2e    	add    DWORD PTR [rip+0x2e054619],eax        # 2e054e8e <_end+0x2e04ee76>
     875:	4e 05 22 4a 05 16    	rex.WRX add rax,0x16054a22
     87b:	3c 4a                	cmp    al,0x4a
     87d:	05 19 06 0e 05       	add    eax,0x50e0619
     882:	27                   	(bad)
     883:	00 02                	add    BYTE PTR [rdx],al
     885:	04 01                	add    al,0x1
     887:	06                   	(bad)
     888:	47 05 05 00 02 04    	rex.RXB add eax,0x4020005
     88e:	02 06                	add    al,BYTE PTR [rsi]
     890:	58                   	pop    rax
     891:	05 1c 00 02 04       	add    eax,0x402001c
     896:	01 01                	add    DWORD PTR [rcx],eax
     898:	00 02                	add    BYTE PTR [rdx],al
     89a:	04 01                	add    al,0x1
     89c:	06                   	(bad)
     89d:	82                   	(bad)
     89e:	00 02                	add    BYTE PTR [rdx],al
     8a0:	04 01                	add    al,0x1
     8a2:	e4 00                	in     al,0x0
     8a4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     8a7:	06                   	(bad)
     8a8:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
     8ab:	00 02                	add    BYTE PTR [rdx],al
     8ad:	04 01                	add    al,0x1
     8af:	06                   	(bad)
     8b0:	66 00 02             	data16 add BYTE PTR [rdx],al
     8b3:	04 01                	add    al,0x1
     8b5:	66 05 13 16          	add    ax,0x1613
     8b9:	05 09 06 47 05       	add    eax,0x5470609
     8be:	11 06                	adc    DWORD PTR [rsi],eax
     8c0:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 40208e2 <_end+0x401a8ca>
     8c6:	01 49 05             	add    DWORD PTR [rcx+0x5],ecx
     8c9:	11 4b 05             	adc    DWORD PTR [rbx+0x5],ecx
     8cc:	05 00 02 04 03       	add    eax,0x3040200
     8d1:	06                   	(bad)
     8d2:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 40208f4 <_end+0x401a8dc>
     8d8:	01 01                	add    DWORD PTR [rcx],eax
     8da:	00 02                	add    BYTE PTR [rdx],al
     8dc:	04 01                	add    al,0x1
     8de:	06                   	(bad)
     8df:	ac                   	lods   al,BYTE PTR ds:[rsi]
     8e0:	05 05 06 16 05       	add    eax,0x5160605
     8e5:	09 06                	or     DWORD PTR [rsi],eax
     8e7:	01 05 05 06 03 20    	add    DWORD PTR [rip+0x20030605],eax        # 20030ef2 <_end+0x2002aeda>
     8ed:	58                   	pop    rax
     8ee:	05 01 06 13 08       	add    eax,0x8130601
     8f3:	d6                   	(bad)
     8f4:	74 4a                	je     940 <__abi_tag+0x5c4>
     8f6:	05 05 00 02 04       	add    eax,0x4020005
     8fb:	01 03                	add    DWORD PTR [rbx],eax
     8fd:	6d                   	ins    DWORD PTR es:[rdi],dx
     8fe:	20 00                	and    BYTE PTR [rax],al
     900:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     903:	ba 00 02 04 01       	mov    edx,0x1040200
     908:	74 00                	je     90a <__abi_tag+0x58e>
     90a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     90d:	74 05                	je     914 <__abi_tag+0x598>
     90f:	01 03                	add    DWORD PTR [rbx],eax
     911:	13 58 02             	adc    ebx,DWORD PTR [rax+0x2]
     914:	05 00 01 01 43       	add    eax,0x43010100
     919:	05 00 00 05 00       	add    eax,0x50000
     91e:	08 00                	or     BYTE PTR [rax],al
     920:	95                   	xchg   ebp,eax
     921:	00 00                	add    BYTE PTR [rax],al
     923:	00 01                	add    BYTE PTR [rcx],al
     925:	01 01                	add    DWORD PTR [rcx],eax
     927:	fb                   	sti
     928:	0e                   	(bad)
     929:	0d 00 01 01 01       	or     eax,0x1010100
     92e:	01 00                	add    DWORD PTR [rax],eax
     930:	00 00                	add    BYTE PTR [rax],al
     932:	01 00                	add    DWORD PTR [rax],eax
     934:	00 01                	add    BYTE PTR [rcx],al
     936:	01 01                	add    DWORD PTR [rcx],eax
     938:	1f                   	(bad)
     939:	09 00                	or     DWORD PTR [rax],eax
     93b:	00 00                	add    BYTE PTR [rax],al
     93d:	00 2f                	add    BYTE PTR [rdi],ch
     93f:	00 00                	add    BYTE PTR [rax],al
     941:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
     944:	00 00                	add    BYTE PTR [rax],al
     946:	77 00                	ja     948 <__abi_tag+0x5cc>
     948:	00 00                	add    BYTE PTR [rax],al
     94a:	41 00 00             	add    BYTE PTR [r8],al
     94d:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     953:	00 00                	add    BYTE PTR [rax],al
     955:	00 c7                	add    bh,al
     957:	00 00                	add    BYTE PTR [rax],al
     959:	00 dd                	add    ch,bl
     95b:	00 00                	add    BYTE PTR [rax],al
     95d:	00 02                	add    BYTE PTR [rdx],al
     95f:	01 1f                	add    DWORD PTR [rdi],ebx
     961:	02 0f                	add    cl,BYTE PTR [rdi]
     963:	11 16                	adc    DWORD PTR [rsi],edx
     965:	02 00                	add    al,BYTE PTR [rax]
     967:	00 01                	add    BYTE PTR [rcx],al
     969:	16                   	(bad)
     96a:	02 00                	add    al,BYTE PTR [rax]
     96c:	00 01                	add    BYTE PTR [rcx],al
     96e:	bc 01 00 00 02       	mov    esp,0x2000001
     973:	c8 01 00 00          	enter  0x1,0x0
     977:	02 19                	add    bl,BYTE PTR [rcx]
     979:	01 00                	add    DWORD PTR [rax],eax
     97b:	00 03                	add    BYTE PTR [rbx],al
     97d:	53                   	push   rbx
     97e:	01 00                	add    DWORD PTR [rax],eax
     980:	00 03                	add    BYTE PTR [rbx],al
     982:	10 01                	adc    BYTE PTR [rcx],al
     984:	00 00                	add    BYTE PTR [rax],al
     986:	02 07                	add    al,BYTE PTR [rdi]
     988:	01 00                	add    DWORD PTR [rax],eax
     98a:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
     98d:	01 00                	add    DWORD PTR [rax],eax
     98f:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # abe <__abi_tag+0x742>
     995:	06                   	(bad)
     996:	33 01                	xor    eax,DWORD PTR [rcx]
     998:	00 00                	add    BYTE PTR [rax],al
     99a:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     99d:	00 00                	add    BYTE PTR [rax],al
     99f:	03 07                	add    eax,DWORD PTR [rdi]
     9a1:	01 00                	add    DWORD PTR [rax],eax
     9a3:	00 03                	add    BYTE PTR [rbx],al
     9a5:	07                   	(bad)
     9a6:	01 00                	add    DWORD PTR [rax],eax
     9a8:	00 05 d4 01 00 00    	add    BYTE PTR [rip+0x1d4],al        # b82 <__abi_tag+0x806>
     9ae:	02 e9                	add    ch,cl
     9b0:	01 00                	add    DWORD PTR [rax],eax
     9b2:	00 07                	add    BYTE PTR [rdi],al
     9b4:	75 01                	jne    9b7 <__abi_tag+0x63b>
     9b6:	00 00                	add    BYTE PTR [rax],al
     9b8:	08 05 2a 00 09 02    	or     BYTE PTR [rip+0x209002a],al        # 20909e8 <_end+0x208a9d0>
     9be:	b0 1a                	mov    al,0x1a
     9c0:	00 00                	add    BYTE PTR [rax],al
     9c2:	00 00                	add    BYTE PTR [rax],al
     9c4:	00 00                	add    BYTE PTR [rax],al
     9c6:	03 0a                	add    ecx,DWORD PTR [rdx]
     9c8:	01 05 05 4b 03 10    	add    DWORD PTR [rip+0x10034b05],eax        # 100354d3 <_end+0x1002f4bb>
     9ce:	01 05 01 06 13 05    	add    DWORD PTR [rip+0x5130601],eax        # 5130fd5 <_end+0x512afbd>
     9d4:	0a 06                	or     al,BYTE PTR [rsi]
     9d6:	bc 05 34 03 13       	mov    esp,0x13033405
     9db:	f2 05 05 4b 13 05    	repnz add eax,0x5134b05
     9e1:	09 03                	or     DWORD PTR [rbx],eax
     9e3:	0b 01                	or     eax,DWORD PTR [rcx]
     9e5:	04 02                	add    al,0x2
     9e7:	05 01 03 ef 03       	add    eax,0x3ef0301
     9ec:	01 05 03 14 05 01    	add    DWORD PTR [rip+0x1051403],eax        # 1051df5 <_end+0x104bddd>
     9f2:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
     9f5:	05 03 14 05 36       	add    eax,0x36051403
     9fa:	06                   	(bad)
     9fb:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
     9fe:	03 06                	add    eax,DWORD PTR [rsi]
     a00:	03 1d 01 04 03 05    	add    ebx,DWORD PTR [rip+0x5030401]        # 5030e07 <_end+0x502adef>
     a06:	01 03                	add    DWORD PTR [rbx],eax
     a08:	96                   	xchg   esi,eax
     a09:	7f 01                	jg     a0c <__abi_tag+0x690>
     a0b:	05 03 14 05 21       	add    eax,0x21051403
     a10:	06                   	(bad)
     a11:	03 82 03 01 04 02    	add    eax,DWORD PTR [rdx+0x2040103]
     a17:	05 36 03 c9 7d       	add    eax,0x7dc90336
     a1c:	58                   	pop    rax
     a1d:	04 03                	add    al,0x3
     a1f:	05 21 03 b7 02       	add    eax,0x2b70321
     a24:	66 05 26 03          	add    ax,0x326
     a28:	fe                   	(bad)
     a29:	7c 2e                	jl     a59 <__abi_tag+0x6dd>
     a2b:	58                   	pop    rax
     a2c:	04 01                	add    al,0x1
     a2e:	05 09 06 03 f7       	add    eax,0xf7030609
     a33:	7c 01                	jl     a36 <__abi_tag+0x6ba>
     a35:	04 02                	add    al,0x2
     a37:	05 01 03 ee 03       	add    eax,0x3ee0301
     a3c:	01 05 03 14 13 04    	add    DWORD PTR [rip+0x4131403],eax        # 4131e45 <_end+0x412be2d>
     a42:	03 05 01 03 96 7f    	add    eax,DWORD PTR [rip+0x7f960301]        # 7f960d49 <_end+0x7f95ad31>
     a48:	01 05 03 14 05 26    	add    DWORD PTR [rip+0x26051403],eax        # 26051e51 <_end+0x2604be39>
     a4e:	06                   	(bad)
     a4f:	01 66 04             	add    DWORD PTR [rsi+0x4],esp
     a52:	01 05 09 06 03 f8    	add    DWORD PTR [rip+0xfffffffff8030609],eax        # fffffffff8031061 <_end+0xfffffffff802b049>
     a58:	7c 01                	jl     a5b <__abi_tag+0x6df>
     a5a:	04 02                	add    al,0x2
     a5c:	05 01 03 ed 03       	add    eax,0x3ed0301
     a61:	01 05 03 14 05 01    	add    DWORD PTR [rip+0x1051403],eax        # 1051e6a <_end+0x104be52>
     a67:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
     a6a:	05 03 14 05 36       	add    eax,0x36051403
     a6f:	06                   	(bad)
     a70:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
     a73:	03 06                	add    eax,DWORD PTR [rsi]
     a75:	03 1d 01 04 03 05    	add    ebx,DWORD PTR [rip+0x5030401]        # 5030e7c <_end+0x502ae64>
     a7b:	01 03                	add    DWORD PTR [rbx],eax
     a7d:	96                   	xchg   esi,eax
     a7e:	7f 01                	jg     a81 <__abi_tag+0x705>
     a80:	05 03 14 05 21       	add    eax,0x21051403
     a85:	06                   	(bad)
     a86:	03 82 03 01 82 05    	add    eax,DWORD PTR [rdx+0x5820103]
     a8c:	26 03 fe             	es add edi,esi
     a8f:	7c 01                	jl     a92 <__abi_tag+0x716>
     a91:	58                   	pop    rax
     a92:	04 01                	add    al,0x1
     a94:	05 09 06 03 f9       	add    eax,0xf9030609
     a99:	7c 01                	jl     a9c <__abi_tag+0x720>
     a9b:	04 02                	add    al,0x2
     a9d:	05 01 03 ec 03       	add    eax,0x3ec0301
     aa2:	01 05 03 14 13 04    	add    DWORD PTR [rip+0x4131403],eax        # 4131eab <_end+0x412be93>
     aa8:	03 05 01 03 96 7f    	add    eax,DWORD PTR [rip+0x7f960301]        # 7f960daf <_end+0x7f95ad97>
     aae:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051eb7 <_end+0x2104be9f>
     ab4:	06                   	(bad)
     ab5:	03 82 03 01 82 05    	add    eax,DWORD PTR [rdx+0x5820103]
     abb:	26 03 fe             	es add edi,esi
     abe:	7c 01                	jl     ac1 <__abi_tag+0x745>
     ac0:	66 04 01             	data16 add al,0x1
     ac3:	05 05 06 03 fd       	add    eax,0xfd030605
     ac8:	7c 01                	jl     acb <__abi_tag+0x74f>
     aca:	04 03                	add    al,0x3
     acc:	05 01 03 83 06       	add    eax,0x6830301
     ad1:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 1061eda <_end+0x105bec2>
     ad7:	04 01                	add    al,0x1
     ad9:	05 05 06 03 fc       	add    eax,0xfc030605
     ade:	79 01                	jns    ae1 <__abi_tag+0x765>
     ae0:	04 03                	add    al,0x3
     ae2:	05 01 03 82 06       	add    eax,0x6820301
     ae7:	01 05 03 14 06 01    	add    DWORD PTR [rip+0x1061403],eax        # 1061ef0 <_end+0x105bed8>
     aed:	04 01                	add    al,0x1
     aef:	05 05 06 03 fd       	add    eax,0xfd030605
     af4:	79 01                	jns    af7 <__abi_tag+0x77b>
     af6:	04 03                	add    al,0x3
     af8:	05 01 03 81 06       	add    eax,0x6810301
     afd:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041f06 <_end+0x103beee>
     b03:	05 13 06 03 80       	add    eax,0x80030613
     b08:	7a 01                	jp     b0b <__abi_tag+0x78f>
     b0a:	04 03                	add    al,0x3
     b0c:	05 21 03 80 06       	add    eax,0x6800321
     b11:	2e 66 04 01          	cs data16 add al,0x1
     b15:	05 05 06 03 fe       	add    eax,0xfe030605
     b1a:	79 01                	jns    b1d <__abi_tag+0x7a1>
     b1c:	04 03                	add    al,0x3
     b1e:	05 01 03 80 06       	add    eax,0x6800301
     b23:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051f2c <_end+0x2104bf14>
     b29:	06                   	(bad)
     b2a:	01 66 04             	add    DWORD PTR [rsi+0x4],esp
     b2d:	01 05 05 06 03 80    	add    DWORD PTR [rip+0xffffffff80030605],eax        # ffffffff80031138 <_end+0xffffffff8002b120>
     b33:	7a 01                	jp     b36 <__abi_tag+0x7ba>
     b35:	14 05                	adc    al,0x5
     b37:	1b 06                	sbb    eax,DWORD PTR [rsi]
     b39:	10 05 0b 2e 05 01    	adc    BYTE PTR [rip+0x1052e0b],al        # 105394a <_end+0x104d932>
     b3f:	5b                   	pop    rbx
     b40:	05 0a 06 84 03       	add    eax,0x384060a
     b45:	34 f2                	xor    al,0xf2
     b47:	05 2c 03 1b f2       	add    eax,0xf21b032c
     b4c:	05 05 4b 13 13       	add    eax,0x13134b05
     b51:	14 05                	adc    al,0x5
     b53:	17                   	(bad)
     b54:	00 02                	add    BYTE PTR [rdx],al
     b56:	04 01                	add    al,0x1
     b58:	01 05 20 00 02 04    	add    DWORD PTR [rip+0x4020020],eax        # 4020b7e <_end+0x401ab66>
     b5e:	01 06                	add    DWORD PTR [rsi],eax
     b60:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020b7d <_end+0x401ab65>
     b66:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     b69:	09 06                	or     DWORD PTR [rsi],eax
     b6b:	84 05 10 06 01 05    	test   BYTE PTR [rip+0x5010610],al        # 5011181 <_end+0x500b169>
     b71:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
     b74:	24 65                	and    al,0x65
     b76:	05 10 9e 05 24       	add    eax,0x24059e10
     b7b:	4a 05 0b 08 f3 05    	rex.WX add rax,0x5f3080b
     b81:	24 2d                	and    al,0x2d
     b83:	05 0b 3c 05 09       	add    eax,0x9053c0b
     b88:	06                   	(bad)
     b89:	3d 05 0b 06 01       	cmp    eax,0x1060b05
     b8e:	3c 05                	cmp    al,0x5
     b90:	05 00 02 04 03       	add    eax,0x3040200
     b95:	06                   	(bad)
     b96:	08 1d 05 17 00 02    	or     BYTE PTR [rip+0x2001705],bl        # 20022a1 <_end+0x1ffc289>
     b9c:	04 01                	add    al,0x1
     b9e:	01 05 09 92 05 10    	add    DWORD PTR [rip+0x10059209],eax        # 10059dad <_end+0x10053d95>
     ba4:	06                   	(bad)
     ba5:	01 05 24 58 05 10    	add    DWORD PTR [rip+0x10055824],eax        # 100563cf <_end+0x100503b7>
     bab:	08 f3                	or     bl,dh
     bad:	05 24 2d 05 0b       	add    eax,0xb052d24
     bb2:	3c 05                	cmp    al,0x5
     bb4:	09 06                	or     DWORD PTR [rsi],eax
     bb6:	3d 05 10 06 01       	cmp    eax,0x1061005
     bbb:	05 0b 58 d6 05       	add    eax,0x5d6580b
     bc0:	05 00 02 04 03       	add    eax,0x3040200
     bc5:	06                   	(bad)
     bc6:	47 05 17 00 02 04    	rex.RXB add eax,0x4020017
     bcc:	01 01                	add    DWORD PTR [rcx],eax
     bce:	05 09 92 05 10       	add    eax,0x10059209
     bd3:	06                   	(bad)
     bd4:	01 05 24 74 3c 05    	add    DWORD PTR [rip+0x53c7424],eax        # 53c7ffe <_end+0x53c1fe6>
     bda:	10 08                	adc    BYTE PTR [rax],cl
     bdc:	c9                   	leave
     bdd:	05 24 2d 05 0b       	add    eax,0xb052d24
     be2:	3c 05                	cmp    al,0x5
     be4:	09 06                	or     DWORD PTR [rsi],eax
     be6:	3d 05 10 06 01       	cmp    eax,0x1061005
     beb:	05 0b 58 d6 05       	add    eax,0x5d6580b
     bf0:	05 00 02 04 03       	add    eax,0x3040200
     bf5:	06                   	(bad)
     bf6:	47 05 17 00 02 04    	rex.RXB add eax,0x4020017
     bfc:	01 01                	add    DWORD PTR [rcx],eax
     bfe:	05 09 92 05 10       	add    eax,0x10059209
     c03:	06                   	(bad)
     c04:	01 05 24 74 3c 05    	add    DWORD PTR [rip+0x53c7424],eax        # 53c802e <_end+0x53c2016>
     c0a:	10 08                	adc    BYTE PTR [rax],cl
     c0c:	c9                   	leave
     c0d:	05 24 2d 05 0b       	add    eax,0xb052d24
     c12:	3c 05                	cmp    al,0x5
     c14:	09 06                	or     DWORD PTR [rsi],eax
     c16:	3d 05 10 06 01       	cmp    eax,0x1061005
     c1b:	05 0b 58 d6 05       	add    eax,0x5d6580b
     c20:	05 00 02 04 03       	add    eax,0x3040200
     c25:	06                   	(bad)
     c26:	47 05 17 00 02 04    	rex.RXB add eax,0x4020017
     c2c:	01 01                	add    DWORD PTR [rcx],eax
     c2e:	05 09 92 05 10       	add    eax,0x10059209
     c33:	06                   	(bad)
     c34:	01 05 24 74 3c 05    	add    DWORD PTR [rip+0x53c7424],eax        # 53c805e <_end+0x53c2046>
     c3a:	10 08                	adc    BYTE PTR [rax],cl
     c3c:	d7                   	xlat   BYTE PTR ds:[rbx]
     c3d:	05 0b 2d 05 09       	add    eax,0x9052d0b
     c42:	06                   	(bad)
     c43:	3d 05 10 06 01       	cmp    eax,0x1061005
     c48:	05 0b 3c 05 05       	add    eax,0x5053c0b
     c4d:	00 02                	add    BYTE PTR [rdx],al
     c4f:	04 03                	add    al,0x3
     c51:	06                   	(bad)
     c52:	08 1d 05 17 00 02    	or     BYTE PTR [rip+0x2001705],bl        # 200235d <_end+0x1ffc345>
     c58:	04 01                	add    al,0x1
     c5a:	01 05 09 a0 05 10    	add    DWORD PTR [rip+0x1005a009],eax        # 1005ac69 <_end+0x10054c51>
     c60:	06                   	(bad)
     c61:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020c7e <_end+0x401ac66>
     c67:	01 56 05             	add    DWORD PTR [rsi+0x5],edx
     c6a:	24 4c                	and    al,0x4c
     c6c:	05 10 02 24 13       	add    eax,0x13240210
     c71:	05 0b 2d 05 09       	add    eax,0x9052d0b
     c76:	06                   	(bad)
     c77:	3d 05 10 06 01       	cmp    eax,0x1061005
     c7c:	05 0b 3c 05 05       	add    eax,0x5053c0b
     c81:	00 02                	add    BYTE PTR [rdx],al
     c83:	04 03                	add    al,0x3
     c85:	06                   	(bad)
     c86:	08 1d 05 17 00 02    	or     BYTE PTR [rip+0x2001705],bl        # 2002391 <_end+0x1ffc379>
     c8c:	04 01                	add    al,0x1
     c8e:	01 00                	add    DWORD PTR [rax],eax
     c90:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     c93:	06                   	(bad)
     c94:	4a 05 0f 18 05 18    	rex.WX add rax,0x1805180f
     c9a:	58                   	pop    rax
     c9b:	05 17 00 02 04       	add    eax,0x4020017
     ca0:	01 03                	add    DWORD PTR [rbx],eax
     ca2:	7a 58                	jp     cfc <__abi_tag+0x980>
     ca4:	05 05 06 5e 05       	add    eax,0x55e0605
     ca9:	01 06                	add    DWORD PTR [rsi],eax
     cab:	13 05 28 06 ae 05    	adc    eax,DWORD PTR [rip+0x5ae0628]        # 5ae12d9 <_end+0x5adb2c1>
     cb1:	05 4b 13 13 05       	add    eax,0x513134b
     cb6:	17                   	(bad)
     cb7:	00 02                	add    BYTE PTR [rdx],al
     cb9:	04 01                	add    al,0x1
     cbb:	01 05 20 00 02 04    	add    DWORD PTR [rip+0x4020020],eax        # 4020ce1 <_end+0x401acc9>
     cc1:	01 06                	add    DWORD PTR [rsi],eax
     cc3:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020ce0 <_end+0x401acc8>
     cc9:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     ccc:	09 06                	or     DWORD PTR [rsi],eax
     cce:	83 05 1c 06 01 05 09 	add    DWORD PTR [rip+0x501061c],0x9        # 50112f1 <_end+0x500b2d9>
     cd5:	06                   	(bad)
     cd6:	5a                   	pop    rdx
     cd7:	05 12 06 01 05       	add    eax,0x5010612
     cdc:	2c 00                	sub    al,0x0
     cde:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     ce1:	82                   	(bad)
     ce2:	05 11 92 05 2c       	add    eax,0x2c059211
     ce7:	00 02                	add    BYTE PTR [rdx],al
     ce9:	04 01                	add    al,0x1
     ceb:	2c 05                	sub    al,0x5
     ced:	09 06                	or     DWORD PTR [rsi],eax
     cef:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     cf5:	05 00 02 04 02       	add    eax,0x2040200
     cfa:	06                   	(bad)
     cfb:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020d18 <_end+0x401ad00>
     d01:	01 01                	add    DWORD PTR [rcx],eax
     d03:	05 09 91 05 0e       	add    eax,0xe059109
     d08:	06                   	(bad)
     d09:	01 05 16 4a 05 0e    	add    DWORD PTR [rip+0xe054a16],eax        # e055725 <_end+0xe04f70d>
     d0f:	3c 05                	cmp    al,0x5
     d11:	09 06                	or     DWORD PTR [rsi],eax
     d13:	30 05 12 06 01 05    	xor    BYTE PTR [rip+0x5010612],al        # 501132b <_end+0x500b313>
     d19:	2c 00                	sub    al,0x0
     d1b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     d1e:	82                   	(bad)
     d1f:	05 11 92 05 2c       	add    eax,0x2c059211
     d24:	00 02                	add    BYTE PTR [rdx],al
     d26:	04 01                	add    al,0x1
     d28:	2c 05                	sub    al,0x5
     d2a:	09 06                	or     DWORD PTR [rsi],eax
     d2c:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     d32:	05 00 02 04 02       	add    eax,0x2040200
     d37:	06                   	(bad)
     d38:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020d55 <_end+0x401ad3d>
     d3e:	01 01                	add    DWORD PTR [rcx],eax
     d40:	05 09 91 05 0e       	add    eax,0xe059109
     d45:	06                   	(bad)
     d46:	01 05 16 4a 05 0e    	add    DWORD PTR [rip+0xe054a16],eax        # e055762 <_end+0xe04f74a>
     d4c:	3c 05                	cmp    al,0x5
     d4e:	09 06                	or     DWORD PTR [rsi],eax
     d50:	30 05 12 06 01 05    	xor    BYTE PTR [rip+0x5010612],al        # 5011368 <_end+0x500b350>
     d56:	2c 00                	sub    al,0x0
     d58:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     d5b:	82                   	(bad)
     d5c:	05 11 92 05 2c       	add    eax,0x2c059211
     d61:	00 02                	add    BYTE PTR [rdx],al
     d63:	04 01                	add    al,0x1
     d65:	2c 05                	sub    al,0x5
     d67:	09 06                	or     DWORD PTR [rsi],eax
     d69:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     d6f:	05 00 02 04 02       	add    eax,0x2040200
     d74:	06                   	(bad)
     d75:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020d92 <_end+0x401ad7a>
     d7b:	01 01                	add    DWORD PTR [rcx],eax
     d7d:	05 09 59 05 0e       	add    eax,0xe055909
     d82:	06                   	(bad)
     d83:	01 05 16 4a 05 0e    	add    DWORD PTR [rip+0xe054a16],eax        # e05579f <_end+0xe04f787>
     d89:	3c 05                	cmp    al,0x5
     d8b:	09 06                	or     DWORD PTR [rsi],eax
     d8d:	30 05 12 06 01 05    	xor    BYTE PTR [rip+0x5010612],al        # 50113a5 <_end+0x500b38d>
     d93:	2c 00                	sub    al,0x0
     d95:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     d98:	82                   	(bad)
     d99:	05 11 92 05 2c       	add    eax,0x2c059211
     d9e:	00 02                	add    BYTE PTR [rdx],al
     da0:	04 01                	add    al,0x1
     da2:	2c 05                	sub    al,0x5
     da4:	09 06                	or     DWORD PTR [rsi],eax
     da6:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     dac:	05 00 02 04 02       	add    eax,0x2040200
     db1:	06                   	(bad)
     db2:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020dcf <_end+0x401adb7>
     db8:	01 01                	add    DWORD PTR [rcx],eax
     dba:	05 09 59 05 0e       	add    eax,0xe055909
     dbf:	06                   	(bad)
     dc0:	01 05 16 4a 05 0e    	add    DWORD PTR [rip+0xe054a16],eax        # e0557dc <_end+0xe04f7c4>
     dc6:	3c 05                	cmp    al,0x5
     dc8:	09 06                	or     DWORD PTR [rsi],eax
     dca:	30 05 12 06 01 05    	xor    BYTE PTR [rip+0x5010612],al        # 50113e2 <_end+0x500b3ca>
     dd0:	2c 00                	sub    al,0x0
     dd2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     dd5:	82                   	(bad)
     dd6:	05 11 92 05 2c       	add    eax,0x2c059211
     ddb:	00 02                	add    BYTE PTR [rdx],al
     ddd:	04 01                	add    al,0x1
     ddf:	2c 05                	sub    al,0x5
     de1:	09 06                	or     DWORD PTR [rsi],eax
     de3:	3e 05 0e 06 01 05    	ds add eax,0x501060e
     de9:	05 00 02 04 02       	add    eax,0x2040200
     dee:	06                   	(bad)
     def:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020e0c <_end+0x401adf4>
     df5:	01 01                	add    DWORD PTR [rcx],eax
     df7:	00 02                	add    BYTE PTR [rdx],al
     df9:	04 01                	add    al,0x1
     dfb:	06                   	(bad)
     dfc:	58                   	pop    rax
     dfd:	05 09 06 59 05       	add    eax,0x5590609
     e02:	16                   	(bad)
     e03:	06                   	(bad)
     e04:	01 05 0e 3c 05 09    	add    DWORD PTR [rip+0x9053c0e],eax        # 9054a18 <_end+0x904ea00>
     e0a:	06                   	(bad)
     e0b:	4c 06                	rex.WR (bad)
     e0d:	01 82 05 27 00 02    	add    DWORD PTR [rdx+0x2002705],eax
     e13:	04 01                	add    al,0x1
     e15:	06                   	(bad)
     e16:	2e 05 34 00 02 04    	cs add eax,0x4020034
     e1c:	01 06                	add    DWORD PTR [rsi],eax
     e1e:	01 05 11 30 05 34    	add    DWORD PTR [rip+0x34053011],eax        # 34053e35 <_end+0x3404de1d>
     e24:	00 02                	add    BYTE PTR [rdx],al
     e26:	04 01                	add    al,0x1
     e28:	2c 05                	sub    al,0x5
     e2a:	2c 00                	sub    al,0x0
     e2c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e2f:	3c 05                	cmp    al,0x5
     e31:	09 06                	or     DWORD PTR [rsi],eax
     e33:	30 05 0e 06 01 05    	xor    BYTE PTR [rip+0x501060e],al        # 5011447 <_end+0x500b42f>
     e39:	05 00 02 04 02       	add    eax,0x2040200
     e3e:	06                   	(bad)
     e3f:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020e5c <_end+0x401ae44>
     e45:	01 01                	add    DWORD PTR [rcx],eax
     e47:	00 02                	add    BYTE PTR [rdx],al
     e49:	04 01                	add    al,0x1
     e4b:	06                   	(bad)
     e4c:	4a 05 0e 4f 2e 05    	rex.WX add rax,0x52e4f0e
     e52:	01 15 05 0e 39 05    	add    DWORD PTR [rip+0x5390e05],edx        # 5391c5d <_end+0x538bc45>
     e58:	01 31                	add    DWORD PTR [rcx],esi
     e5a:	02 03                	add    al,BYTE PTR [rbx]
     e5c:	00 01                	add    BYTE PTR [rcx],al
     e5e:	01 0f                	add    DWORD PTR [rdi],ecx
     e60:	05 00 00 05 00       	add    eax,0x50000
     e65:	08 00                	or     BYTE PTR [rax],al
     e67:	9f                   	lahf
     e68:	00 00                	add    BYTE PTR [rax],al
     e6a:	00 01                	add    BYTE PTR [rcx],al
     e6c:	01 01                	add    DWORD PTR [rcx],eax
     e6e:	fb                   	sti
     e6f:	0e                   	(bad)
     e70:	0d 00 01 01 01       	or     eax,0x1010100
     e75:	01 00                	add    DWORD PTR [rax],eax
     e77:	00 00                	add    BYTE PTR [rax],al
     e79:	01 00                	add    DWORD PTR [rax],eax
     e7b:	00 01                	add    BYTE PTR [rcx],al
     e7d:	01 01                	add    DWORD PTR [rcx],eax
     e7f:	1f                   	(bad)
     e80:	09 00                	or     DWORD PTR [rax],eax
     e82:	00 00                	add    BYTE PTR [rax],al
     e84:	00 2f                	add    BYTE PTR [rdi],ch
     e86:	00 00                	add    BYTE PTR [rax],al
     e88:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
     e8b:	00 00                	add    BYTE PTR [rax],al
     e8d:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     e90:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     e93:	00 00                	add    BYTE PTR [rax],al
     e95:	9a                   	(bad)
     e96:	00 00                	add    BYTE PTR [rax],al
     e98:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
     e9e:	00 00                	add    BYTE PTR [rax],al
     ea0:	00 dd                	add    ch,bl
     ea2:	00 00                	add    BYTE PTR [rax],al
     ea4:	00 02                	add    BYTE PTR [rdx],al
     ea6:	01 1f                	add    DWORD PTR [rdi],ebx
     ea8:	02 0f                	add    cl,BYTE PTR [rdi]
     eaa:	13 37                	adc    esi,DWORD PTR [rdi]
     eac:	02 00                	add    al,BYTE PTR [rax]
     eae:	00 01                	add    BYTE PTR [rcx],al
     eb0:	37                   	(bad)
     eb1:	02 00                	add    al,BYTE PTR [rax]
     eb3:	00 01                	add    BYTE PTR [rcx],al
     eb5:	a9 01 00 00 02       	test   eax,0x2000001
     eba:	10 01                	adc    BYTE PTR [rcx],al
     ebc:	00 00                	add    BYTE PTR [rax],al
     ebe:	03 07                	add    eax,DWORD PTR [rdi]
     ec0:	01 00                	add    DWORD PTR [rax],eax
     ec2:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
     ec5:	01 00                	add    DWORD PTR [rax],eax
     ec7:	00 02                	add    BYTE PTR [rdx],al
     ec9:	21 01                	and    DWORD PTR [rcx],eax
     ecb:	00 00                	add    BYTE PTR [rax],al
     ecd:	05 29 01 00 00       	add    eax,0x129
     ed2:	06                   	(bad)
     ed3:	33 01                	xor    eax,DWORD PTR [rcx]
     ed5:	00 00                	add    BYTE PTR [rax],al
     ed7:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
     eda:	00 00                	add    BYTE PTR [rax],al
     edc:	02 07                	add    al,BYTE PTR [rdi]
     ede:	01 00                	add    DWORD PTR [rax],eax
     ee0:	00 02                	add    BYTE PTR [rdx],al
     ee2:	07                   	(bad)
     ee3:	01 00                	add    DWORD PTR [rax],eax
     ee5:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 103e <__printf_chk@plt+0xe>
     eeb:	02 bc 01 00 00 03 e9 	add    bh,BYTE PTR [rcx+rax*1-0x16fd0000]
     ef2:	01 00                	add    DWORD PTR [rax],eax
     ef4:	00 07                	add    BYTE PTR [rdi],al
     ef6:	62 01 00 00 07       	(bad)
     efb:	f4                   	hlt
     efc:	01 00                	add    DWORD PTR [rax],eax
     efe:	00 07                	add    BYTE PTR [rdi],al
     f00:	fb                   	sti
     f01:	01 00                	add    DWORD PTR [rax],eax
     f03:	00 04 75 01 00 00 08 	add    BYTE PTR [rsi*2+0x8000001],al
     f0a:	05 05 00 09 02       	add    eax,0x2090005
     f0f:	70 1e                	jo     f2f <__abi_tag+0xbb3>
     f11:	00 00                	add    BYTE PTR [rax],al
     f13:	00 00                	add    BYTE PTR [rax],al
     f15:	00 00                	add    BYTE PTR [rax],al
     f17:	03 d6                	add    edx,esi
     f19:	00 01                	add    BYTE PTR [rcx],al
     f1b:	00 02                	add    BYTE PTR [rdx],al
     f1d:	04 01                	add    al,0x1
     f1f:	06                   	(bad)
     f20:	2f                   	(bad)
     f21:	08 8f 00 02 04 01    	or     BYTE PTR [rdi+0x1040200],cl
     f27:	4b 05 10 06 03 b5    	rex.WXB add rax,0xffffffffb5030610
     f2d:	7f f2                	jg     f21 <__abi_tag+0xba5>
     f2f:	06                   	(bad)
     f30:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b153b <_end+0x134ab523>
     f36:	05 10 06 10 05       	add    eax,0x5100610
     f3b:	2f                   	(bad)
     f3c:	22 05 10 56 05 2f    	and    al,BYTE PTR [rip+0x2f055610]        # 2f056552 <_end+0x2f05053a>
     f42:	3e 58                	ds pop rax
     f44:	04 02                	add    al,0x2
     f46:	05 21 00 02 04       	add    eax,0x4020021
     f4b:	01 03                	add    DWORD PTR [rbx],eax
     f4d:	2c 58                	sub    al,0x58
     f4f:	04 01                	add    al,0x1
     f51:	05 0a 03 53 58       	add    eax,0x5853030a
     f56:	05 2f 83 05 15       	add    eax,0x1505832f
     f5b:	00 02                	add    BYTE PTR [rdx],al
     f5d:	04 01                	add    al,0x1
     f5f:	3c 05                	cmp    al,0x5
     f61:	05 06 3d 04 02       	add    eax,0x2043d06
     f66:	05 01 03 29 01       	add    eax,0x1290301
     f6b:	05 03 14 05 21       	add    eax,0x21051403
     f70:	00 02                	add    BYTE PTR [rdx],al
     f72:	04 01                	add    al,0x1
     f74:	06                   	(bad)
     f75:	01 00                	add    DWORD PTR [rax],eax
     f77:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     f7a:	2e 00 02             	cs add BYTE PTR [rdx],al
     f7d:	04 01                	add    al,0x1
     f7f:	66 04 01             	data16 add al,0x1
     f82:	05 05 06 03 56       	add    eax,0x56030605
     f87:	01 13                	add    DWORD PTR [rbx],edx
     f89:	13 14 13             	adc    edx,DWORD PTR [rbx+rdx*1]
     f8c:	05 1c 00 02 04       	add    eax,0x402001c
     f91:	01 01                	add    DWORD PTR [rcx],eax
     f93:	05 09 13 13 05       	add    eax,0x5131309
     f98:	13 06                	adc    eax,DWORD PTR [rsi]
     f9a:	0f 05                	syscall
     f9c:	25 d8 05 05 00       	and    eax,0x505d8
     fa1:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
     fa4:	06                   	(bad)
     fa5:	d5 05 1c 00          	{rex2 0x5} sbb al,0x0
     fa9:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     fac:	01 05 09 13 13 05    	add    DWORD PTR [rip+0x5131309],eax        # 51322bb <_end+0x512c2a3>
     fb2:	25 06 11 05 05       	and    eax,0x5051106
     fb7:	00 02                	add    BYTE PTR [rdx],al
     fb9:	04 03                	add    al,0x3
     fbb:	06                   	(bad)
     fbc:	d5 05 1c 00          	{rex2 0x5} sbb al,0x0
     fc0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     fc3:	01 05 09 13 13 05    	add    DWORD PTR [rip+0x5131309],eax        # 51322d2 <_end+0x512c2ba>
     fc9:	25 06 11 05 05       	and    eax,0x5051106
     fce:	00 02                	add    BYTE PTR [rdx],al
     fd0:	04 03                	add    al,0x3
     fd2:	06                   	(bad)
     fd3:	d5 05 1c 00          	{rex2 0x5} sbb al,0x0
     fd7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     fda:	01 05 05 17 05 01    	add    DWORD PTR [rip+0x1051705],eax        # 10526e5 <_end+0x104c6cd>
     fe0:	06                   	(bad)
     fe1:	13 4a 05             	adc    ecx,DWORD PTR [rdx+0x5]
     fe4:	2a 06                	sub    al,BYTE PTR [rsi]
     fe6:	30 06                	xor    BYTE PTR [rsi],al
     fe8:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b15f3 <_end+0x54ab5db>
     fee:	2a 06                	sub    al,BYTE PTR [rsi]
     ff0:	11 05 05 d7 05 1a    	adc    DWORD PTR [rip+0x1a05d705],eax        # 1a05e6fb <_end+0x1a0586e3>
     ff6:	03 3b                	add    edi,DWORD PTR [rbx]
     ff8:	90                   	nop
     ff9:	05 05 06 03 47       	add    eax,0x47030605
     ffe:	ba 03 36 01 13       	mov    edx,0x13013603
    1003:	14 05                	adc    al,0x5
    1005:	0e                   	(bad)
    1006:	06                   	(bad)
    1007:	01 05 05 06 3e 05    	add    DWORD PTR [rip+0x53e0605],eax        # 53e1612 <_end+0x53db5fa>
    100d:	10 01                	adc    BYTE PTR [rcx],al
    100f:	05 09 69 05 0d       	add    eax,0xd056909
    1014:	06                   	(bad)
    1015:	01 05 10 06 2b 05    	add    DWORD PTR [rip+0x52b0610],eax        # 52b162b <_end+0x52ab613>
    101b:	09 4b 05             	or     DWORD PTR [rbx+0x5],ecx
    101e:	33 06                	xor    eax,DWORD PTR [rsi]
    1020:	01 05 36 2e 05 0c    	add    DWORD PTR [rip+0xc052e36],eax        # c053e5c <_end+0xc04de44>
    1026:	06                   	(bad)
    1027:	03 22                	add    esp,DWORD PTR [rdx]
    1029:	90                   	nop
    102a:	05 05 14 14 03       	add    eax,0x3141405
    102f:	0b 08                	or     ecx,DWORD PTR [rax]
    1031:	66 06                	data16 (bad)
    1033:	01 05 09 00 02 04    	add    DWORD PTR [rip+0x4020009],eax        # 4021042 <_end+0x401b02a>
    1039:	01 03                	add    DWORD PTR [rbx],eax
    103b:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
    103e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1041:	4a 05 05 06 03 57    	rex.WX add rax,0x57030605
    1047:	01 05 22 06 01 05    	add    DWORD PTR [rip+0x5010622],eax        # 501166f <_end+0x500b657>
    104d:	05 06 92 05 21       	add    eax,0x21059206
    1052:	06                   	(bad)
    1053:	01 05 05 58 06 a0    	add    DWORD PTR [rip+0xffffffffa0065805],eax        # ffffffffa006685e <_end+0xffffffffa0060846>
    1059:	05 01 06 13 9e       	add    eax,0x9e130601
    105e:	05 05 06 03 6a       	add    eax,0x6a030605
    1063:	9e                   	sahf
    1064:	05 09 13 05 18       	add    eax,0x18051309
    1069:	06                   	(bad)
    106a:	01 05 27 5b 05 18    	add    DWORD PTR [rip+0x18055b27],eax        # 18056b97 <_end+0x18050b7f>
    1070:	b7 05                	mov    bh,0x5
    1072:	09 06                	or     DWORD PTR [rsi],eax
    1074:	3d 05 2e 06 01       	cmp    eax,0x1062e05
    1079:	4a 05 30 3c 05 18    	rex.WX add rax,0x18053c30
    107f:	3c 05                	cmp    al,0x5
    1081:	09 06                	or     DWORD PTR [rsi],eax
    1083:	5a                   	pop    rdx
    1084:	05 27 06 01 05       	add    eax,0x5010627
    1089:	09 06                	or     DWORD PTR [rsi],eax
    108b:	9f                   	lahf
    108c:	05 0f 06 01 05       	add    eax,0x501060f
    1091:	1d 4a 05 27 58       	sbb    eax,0x5827054a
    1096:	05 09 06 75 05       	add    eax,0x5750609
    109b:	12 06                	adc    al,BYTE PTR [rsi]
    109d:	01 05 09 06 3e 05    	add    DWORD PTR [rip+0x53e0609],eax        # 53e16ac <_end+0x53db694>
    10a3:	28 06                	sub    BYTE PTR [rsi],al
    10a5:	01 05 09 06 67 05    	add    DWORD PTR [rip+0x5670609],eax        # 56716b4 <_end+0x566b69c>
    10ab:	28 06                	sub    BYTE PTR [rsi],al
    10ad:	01 05 09 06 3e 05    	add    DWORD PTR [rip+0x53e0609],eax        # 53e16bc <_end+0x53db6a4>
    10b3:	31 06                	xor    DWORD PTR [rsi],eax
    10b5:	13 49 05             	adc    ecx,DWORD PTR [rcx+0x5]
    10b8:	09 06                	or     DWORD PTR [rsi],eax
    10ba:	3d 05 31 06 01       	cmp    eax,0x1063105
    10bf:	05 09 06 4c 05       	add    eax,0x54c0609
    10c4:	1e                   	(bad)
    10c5:	06                   	(bad)
    10c6:	01 08                	add    DWORD PTR [rax],ecx
    10c8:	3c 05                	cmp    al,0x5
    10ca:	2b 00                	sub    eax,DWORD PTR [rax]
    10cc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    10cf:	06                   	(bad)
    10d0:	17                   	(bad)
    10d1:	05 0d 03 2f 01       	add    eax,0x12f030d
    10d6:	05 05 13 05 15       	add    eax,0x15051305
    10db:	06                   	(bad)
    10dc:	01 05 35 60 05 15    	add    DWORD PTR [rip+0x15056035],eax        # 15057117 <_end+0x150510ff>
    10e2:	03 78 58             	add    edi,DWORD PTR [rax+0x58]
    10e5:	05 09 06 60 05       	add    eax,0x5600609
    10ea:	35 06 01 04 02       	xor    eax,0x2040106
    10ef:	05 21 00 02 04       	add    eax,0x4020021
    10f4:	01 03                	add    DWORD PTR [rbx],eax
    10f6:	4d e4 04             	rex.WRB in al,0x4
    10f9:	01 05 35 03 33 ac    	add    DWORD PTR [rip+0xffffffffac330335],eax        # ffffffffac331434 <_end+0xffffffffac32b41c>
    10ff:	05 09 06 3d 04       	add    eax,0x43d0609
    1104:	02 05 01 03 4a 01    	add    al,BYTE PTR [rip+0x14a0301]        # 14a140b <_end+0x149b3f3>
    110a:	05 03 14 05 21       	add    eax,0x21051403
    110f:	00 02                	add    BYTE PTR [rdx],al
    1111:	04 01                	add    al,0x1
    1113:	06                   	(bad)
    1114:	01 00                	add    DWORD PTR [rax],eax
    1116:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1119:	58                   	pop    rax
    111a:	04 01                	add    al,0x1
    111c:	05 09 06 03 35       	add    eax,0x35030609
    1121:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    1124:	05 01 03 aa 7f       	add    eax,0x7faa0301
    1129:	01 05 03 15 04 01    	add    DWORD PTR [rip+0x1041503],eax        # 1042632 <_end+0x103c61a>
    112f:	05 3a 06 03 d3       	add    eax,0xd303063a
    1134:	00 01                	add    BYTE PTR [rcx],al
    1136:	04 02                	add    al,0x2
    1138:	05 21 00 02 04       	add    eax,0x4020021
    113d:	01 03                	add    DWORD PTR [rbx],eax
    113f:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1140:	7f 3c                	jg     117e <__memcpy_chk@plt+0xe>
    1142:	04 01                	add    al,0x1
    1144:	05 3a 03 d3 00       	add    eax,0xd3033a
    1149:	66 04 02             	data16 add al,0x2
    114c:	05 21 00 02 04       	add    eax,0x4020021
    1151:	01 03                	add    DWORD PTR [rbx],eax
    1153:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1154:	7f 66                	jg     11bc <__isoc23_strtol@plt+0xc>
    1156:	04 01                	add    al,0x1
    1158:	05 0f 03 d3 00       	add    eax,0xd3030f
    115d:	3c 04                	cmp    al,0x4
    115f:	02 05 21 00 02 04    	add    al,BYTE PTR [rip+0x4020021]        # 4021186 <_end+0x401b16e>
    1165:	01 03                	add    DWORD PTR [rbx],eax
    1167:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1168:	7f 4a                	jg     11b4 <__isoc23_strtol@plt+0x4>
    116a:	00 02                	add    BYTE PTR [rdx],al
    116c:	04 01                	add    al,0x1
    116e:	58                   	pop    rax
    116f:	04 01                	add    al,0x1
    1171:	05 09 06 03 d5       	add    eax,0xd5030609
    1176:	00 01                	add    BYTE PTR [rcx],al
    1178:	05 0d 06 01 05       	add    eax,0x501060d
    117d:	09 06                	or     DWORD PTR [rsi],eax
    117f:	83 05 13 06 14 05 31 	add    DWORD PTR [rip+0x5140613],0x31        # 5141799 <_end+0x513b781>
    1186:	00 02                	add    BYTE PTR [rdx],al
    1188:	04 01                	add    al,0x1
    118a:	58                   	pop    rax
    118b:	05 1a 56 05 05       	add    eax,0x505561a
    1190:	06                   	(bad)
    1191:	4c 05 13 06 01 05    	rex.WR add rax,0x5010613
    1197:	29 00                	sub    DWORD PTR [rax],eax
    1199:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    119c:	06                   	(bad)
    119d:	3c 00                	cmp    al,0x0
    119f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    11a2:	06                   	(bad)
    11a3:	4a 05 09 06 75 05    	rex.WX add rax,0x5750609
    11a9:	2a 06                	sub    al,BYTE PTR [rsi]
    11ab:	2e 05 29 00 02 04    	cs add eax,0x4020029
    11b1:	01 3b                	add    DWORD PTR [rbx],edi
    11b3:	05 26 4b 05 09       	add    eax,0x9054b26
    11b8:	06                   	(bad)
    11b9:	3d 05 26 06 01       	cmp    eax,0x1062605
    11be:	05 05 00 02 04       	add    eax,0x4020005
    11c3:	03 06                	add    eax,DWORD PTR [rsi]
    11c5:	3a 05 29 00 02 04    	cmp    al,BYTE PTR [rip+0x4020029]        # 40211f4 <_end+0x401b1dc>
    11cb:	01 01                	add    DWORD PTR [rcx],eax
    11cd:	00 02                	add    BYTE PTR [rdx],al
    11cf:	04 01                	add    al,0x1
    11d1:	06                   	(bad)
    11d2:	4a 05 22 03 43 01    	rex.WX add rax,0x1430322
    11d8:	05 05 00 02 04       	add    eax,0x4020005
    11dd:	01 03                	add    DWORD PTR [rbx],eax
    11df:	67 9e                	addr32 sahf
    11e1:	00 02                	add    BYTE PTR [rdx],al
    11e3:	04 01                	add    al,0x1
    11e5:	08 90 05 29 06 03    	or     BYTE PTR [rax+0x3062905],dl
    11eb:	1c 90                	sbb    al,0x90
    11ed:	06                   	(bad)
    11ee:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b17f9 <_end+0x54ab7e1>
    11f4:	29 06                	sub    DWORD PTR [rsi],eax
    11f6:	11 05 05 4b 06 92    	adc    DWORD PTR [rip+0xffffffff92064b05],eax        # ffffffff92065d01 <_end+0xffffffff9205fce9>
    11fc:	05 1a 06 03 1c       	add    eax,0x1c03061a
    1201:	01 90 05 05 06 0f    	add    DWORD PTR [rax+0xf060505],edx
    1207:	13 14 05 0e 06 01 05 	adc    edx,DWORD PTR [rax*1+0x501060e]
    120e:	09 06                	or     DWORD PTR [rsi],eax
    1210:	69 05 33 06 01 05 36 	imul   eax,DWORD PTR [rip+0x5010633],0xc052e36        # 501184d <_end+0x500b835>
    1217:	2e 05 0c 
    121a:	06                   	(bad)
    121b:	03 22                	add    esp,DWORD PTR [rdx]
    121d:	74 05                	je     1224 <_start+0x14>
    121f:	05 14 14 03 0b       	add    eax,0xb031414
    1224:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    1227:	01 05 0e 03 bb 7f    	add    DWORD PTR [rip+0x7fbb030e],eax        # 7fbb153b <_end+0x7fbab523>
    122d:	2e 05 09 00 02 04    	cs add eax,0x4020009
    1233:	01 03                	add    DWORD PTR [rbx],eax
    1235:	14 2e                	adc    al,0x2e
    1237:	05 05 06 49 05       	add    eax,0x5490605
    123c:	10 01                	adc    BYTE PTR [rcx],al
    123e:	06                   	(bad)
    123f:	4a 05 05 06 03 64    	rex.WX add rax,0x64030605
    1245:	01 05 1a 00 02 04    	add    DWORD PTR [rip+0x402001a],eax        # 4021265 <_end+0x401b24d>
    124b:	01 06                	add    DWORD PTR [rsi],eax
    124d:	01 05 01 03 15 58    	add    DWORD PTR [rip+0x58150301],eax        # 58151554 <_end+0x5814b53c>
    1253:	05 44 00 02 04       	add    eax,0x4020044
    1258:	01 06                	add    DWORD PTR [rsi],eax
    125a:	ec                   	in     al,dx
    125b:	00 02                	add    BYTE PTR [rdx],al
    125d:	04 01                	add    al,0x1
    125f:	06                   	(bad)
    1260:	01 05 05 06 03 63    	add    DWORD PTR [rip+0x63030605],eax        # 6303186b <_end+0x6302b853>
    1266:	01 14 05 0e 06 18 05 	add    DWORD PTR [rax*1+0x518060e],edx
    126d:	25 03 7a 3c 05       	and    eax,0x53c7a03
    1272:	05 06 7a 05 0e       	add    eax,0xe057a06
    1277:	06                   	(bad)
    1278:	01 05 05 06 3d 14    	add    DWORD PTR [rip+0x143d0605],eax        # 143d1883 <_end+0x143cb86b>
    127e:	05 29 06 01 4a       	add    eax,0x4a010629
    1283:	05 05 06 4b 05       	add    eax,0x54b0605
    1288:	29 06                	sub    DWORD PTR [rsi],eax
    128a:	01 05 05 06 92 05    	add    DWORD PTR [rip+0x5920605],eax        # 5921895 <_end+0x591b87d>
    1290:	24 06                	and    al,0x6
    1292:	01 05 05 06 3d 05    	add    DWORD PTR [rip+0x53d0605],eax        # 53d189d <_end+0x53cb885>
    1298:	2c 06                	sub    al,0x6
    129a:	01 05 24 3c 05 05    	add    DWORD PTR [rip+0x5053c24],eax        # 5054ec4 <_end+0x504eeac>
    12a0:	06                   	(bad)
    12a1:	2f                   	(bad)
    12a2:	05 1a 06 14 05       	add    eax,0x514061a
    12a7:	14 48                	adc    al,0x48
    12a9:	05 05 06 3e 14       	add    eax,0x143e0605
    12ae:	05 01 06 3d 05       	add    eax,0x53d0601
    12b3:	05 00 02 04 01       	add    eax,0x1040200
    12b8:	03 67 58             	add    esp,DWORD PTR [rdi+0x58]
    12bb:	00 02                	add    BYTE PTR [rdx],al
    12bd:	04 01                	add    al,0x1
    12bf:	08 90 05 2b 06 03    	or     BYTE PTR [rax+0x3062b05],dl
    12c5:	1b 08                	sbb    ecx,DWORD PTR [rax]
    12c7:	12 06                	adc    al,BYTE PTR [rsi]
    12c9:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b18d4 <_end+0x54ab8bc>
    12cf:	2b 06                	sub    eax,DWORD PTR [rsi]
    12d1:	11 05 05 4b 06 5a    	adc    DWORD PTR [rip+0x5a064b05],eax        # 5a065ddc <_end+0x5a05fdc4>
    12d7:	05 1a 06 01 05       	add    eax,0x501061a
    12dc:	0e                   	(bad)
    12dd:	3c 05                	cmp    al,0x5
    12df:	05 06 30 05 10       	add    eax,0x10053006
    12e4:	01 05 16 06 03 2e    	add    DWORD PTR [rip+0x2e030616],eax        # 2e031900 <_end+0x2e02b8e8>
    12ea:	4a 9e                	rex.WX sahf
    12ec:	05 09 06 03 55       	add    eax,0x55030609
    12f1:	01 05 0d 06 01 05    	add    DWORD PTR [rip+0x501060d],eax        # 5011904 <_end+0x500b8ec>
    12f7:	10 06                	adc    BYTE PTR [rsi],al
    12f9:	2b 05 09 4b 05 33    	sub    eax,DWORD PTR [rip+0x33054b09]        # 33055e08 <_end+0x3304fdf0>
    12ff:	06                   	(bad)
    1300:	01 05 36 2e 05 0c    	add    DWORD PTR [rip+0xc052e36],eax        # c05413c <_end+0xc04e124>
    1306:	06                   	(bad)
    1307:	03 22                	add    esp,DWORD PTR [rdx]
    1309:	74 05                	je     1310 <_Z16buildStringArrayPcj+0x10>
    130b:	05 14 14 03 0b       	add    eax,0xb031414
    1310:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    1313:	01 05 09 00 02 04    	add    DWORD PTR [rip+0x4020009],eax        # 4021322 <_end+0x401b30a>
    1319:	01 03                	add    DWORD PTR [rbx],eax
    131b:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
    131e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1321:	4a 05 01 42 05 0c    	rex.WX add rax,0xc054201
    1327:	57                   	push   rdi
    1328:	2e 2e 58             	cs cs pop rax
    132b:	05 1a 06 00 09       	add    eax,0x900061a
    1330:	02 d0                	add    dl,al
    1332:	21 00                	and    DWORD PTR [rax],eax
    1334:	00 00                	add    BYTE PTR [rax],al
    1336:	00 00                	add    BYTE PTR [rax],al
    1338:	00 03                	add    BYTE PTR [rbx],al
    133a:	d8 00                	fadd   DWORD PTR [rax]
    133c:	01 06                	add    DWORD PTR [rsi],eax
    133e:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1949 <_end+0x54ab931>
    1344:	1a 06                	sbb    al,BYTE PTR [rsi]
    1346:	11 05 05 21 06 84    	adc    DWORD PTR [rip+0xffffffff84062105],eax        # ffffffff84063451 <_end+0xffffffff8405d439>
    134c:	05 09 06 01 3c       	add    eax,0x3c010609
    1351:	05 05 06 5a 13       	add    eax,0x135a0605
    1356:	05 14 06 01 05       	add    eax,0x5010614
    135b:	01 83 20 05 05 00    	add    DWORD PTR [rbx+0x50520],eax
    1361:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1364:	03 7a 20             	add    edi,DWORD PTR [rdx+0x20]
    1367:	00 02                	add    BYTE PTR [rdx],al
    1369:	04 01                	add    al,0x1
    136b:	08 90 02 05 00 01    	or     BYTE PTR [rax+0x1000502],dl
    1371:	01 ff                	add    edi,edi
    1373:	01 00                	add    DWORD PTR [rax],eax
    1375:	00 05 00 08 00 b7    	add    BYTE PTR [rip+0xffffffffb7000800],al        # ffffffffb7001b7b <_end+0xffffffffb6ffbb63>
    137b:	00 00                	add    BYTE PTR [rax],al
    137d:	00 01                	add    BYTE PTR [rcx],al
    137f:	01 01                	add    DWORD PTR [rcx],eax
    1381:	fb                   	sti
    1382:	0e                   	(bad)
    1383:	0d 00 01 01 01       	or     eax,0x1010100
    1388:	01 00                	add    DWORD PTR [rax],eax
    138a:	00 00                	add    BYTE PTR [rax],al
    138c:	01 00                	add    DWORD PTR [rax],eax
    138e:	00 01                	add    BYTE PTR [rcx],al
    1390:	01 01                	add    DWORD PTR [rcx],eax
    1392:	1f                   	(bad)
    1393:	0a 00                	or     al,BYTE PTR [rax]
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 2f                	add    BYTE PTR [rdi],ch
    1399:	00 00                	add    BYTE PTR [rax],al
    139b:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	41 00 00             	add    BYTE PTR [r8],al
    13a3:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
    13a6:	00 00                	add    BYTE PTR [rax],al
    13a8:	5c                   	pop    rsp
    13a9:	02 00                	add    al,BYTE PTR [rax]
    13ab:	00 7e 02             	add    BYTE PTR [rsi+0x2],bh
    13ae:	00 00                	add    BYTE PTR [rax],al
    13b0:	9a                   	(bad)
    13b1:	00 00                	add    BYTE PTR [rax],al
    13b3:	00 ae 00 00 00 dd    	add    BYTE PTR [rsi-0x23000000],ch
    13b9:	00 00                	add    BYTE PTR [rax],al
    13bb:	00 02                	add    BYTE PTR [rdx],al
    13bd:	01 1f                	add    DWORD PTR [rdi],ebx
    13bf:	02 0f                	add    cl,BYTE PTR [rdi]
    13c1:	17                   	(bad)
    13c2:	52                   	push   rdx
    13c3:	02 00                	add    al,BYTE PTR [rax]
    13c5:	00 01                	add    BYTE PTR [rcx],al
    13c7:	52                   	push   rdx
    13c8:	02 00                	add    al,BYTE PTR [rax]
    13ca:	00 01                	add    BYTE PTR [rcx],al
    13cc:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    13cd:	02 00                	add    al,BYTE PTR [rax]
    13cf:	00 02                	add    BYTE PTR [rdx],al
    13d1:	b0 02                	mov    al,0x2
    13d3:	00 00                	add    BYTE PTR [rax],al
    13d5:	02 a0 01 00 00 03    	add    ah,BYTE PTR [rax+0x3000001]
    13db:	10 01                	adc    BYTE PTR [rcx],al
    13dd:	00 00                	add    BYTE PTR [rax],al
    13df:	04 07                	add    al,0x7
    13e1:	01 00                	add    DWORD PTR [rax],eax
    13e3:	00 03                	add    BYTE PTR [rbx],al
    13e5:	19 01                	sbb    DWORD PTR [rcx],eax
    13e7:	00 00                	add    BYTE PTR [rax],al
    13e9:	02 19                	add    bl,BYTE PTR [rcx]
    13eb:	01 00                	add    DWORD PTR [rax],eax
    13ed:	00 05 b9 02 00 00    	add    BYTE PTR [rip+0x2b9],al        # 16ac <_Z17hashMapPopElementP7HashMap8string_t+0x9c>
    13f3:	06                   	(bad)
    13f4:	21 01                	and    DWORD PTR [rcx],eax
    13f6:	00 00                	add    BYTE PTR [rax],al
    13f8:	07                   	(bad)
    13f9:	29 01                	sub    DWORD PTR [rcx],eax
    13fb:	00 00                	add    BYTE PTR [rax],al
    13fd:	08 33                	or     BYTE PTR [rbx],dh
    13ff:	01 00                	add    DWORD PTR [rax],eax
    1401:	00 02                	add    BYTE PTR [rdx],al
    1403:	42 01 00             	rex.X add DWORD PTR [rax],eax
    1406:	00 02                	add    BYTE PTR [rdx],al
    1408:	07                   	(bad)
    1409:	01 00                	add    DWORD PTR [rax],eax
    140b:	00 02                	add    BYTE PTR [rdx],al
    140d:	07                   	(bad)
    140e:	01 00                	add    DWORD PTR [rax],eax
    1410:	00 07                	add    BYTE PTR [rdi],al
    1412:	cb                   	retf
    1413:	02 00                	add    al,BYTE PTR [rax]
    1415:	00 02                	add    BYTE PTR [rdx],al
    1417:	53                   	push   rbx
    1418:	01 00                	add    DWORD PTR [rax],eax
    141a:	00 02                	add    BYTE PTR [rdx],al
    141c:	d9 02                	fld    DWORD PTR [rdx]
    141e:	00 00                	add    BYTE PTR [rax],al
    1420:	02 b0 02 00 00 03    	add    dh,BYTE PTR [rax+0x3000002]
    1426:	d2 02                	rol    BYTE PTR [rdx],cl
    1428:	00 00                	add    BYTE PTR [rax],al
    142a:	05 fb 01 00 00       	add    eax,0x1fb
    142f:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
    1432:	00 00                	add    BYTE PTR [rax],al
    1434:	09 05 33 00 09 02    	or     DWORD PTR [rip+0x2090033],eax        # 209146d <_end+0x208b455>
    143a:	10 22                	adc    BYTE PTR [rdx],ah
    143c:	00 00                	add    BYTE PTR [rax],al
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	00 00                	add    BYTE PTR [rax],al
    1442:	03 0a                	add    ecx,DWORD PTR [rdx]
    1444:	01 06                	add    DWORD PTR [rsi],eax
    1446:	01 08                	add    DWORD PTR [rax],ecx
    1448:	3c 05                	cmp    al,0x5
    144a:	05 06 08 2f 05       	add    eax,0x52f0806
    144f:	11 06                	adc    DWORD PTR [rsi],eax
    1451:	92                   	xchg   edx,eax
    1452:	05 05 06 74 05       	add    eax,0x5740605
    1457:	0e                   	(bad)
    1458:	06                   	(bad)
    1459:	13 3c 05 11 3b 05 05 	adc    edi,DWORD PTR [rax*1+0x5053b11]
    1460:	06                   	(bad)
    1461:	08 e5                	or     ch,ah
    1463:	05 0e 06 01 05       	add    eax,0x501060e
    1468:	05 00 02 04 01       	add    eax,0x1040200
    146d:	82                   	(bad)
    146e:	06                   	(bad)
    146f:	5a                   	pop    rdx
    1470:	05 0c 06 01 05       	add    eax,0x501060c
    1475:	05 06 59 04 02       	add    eax,0x2045906
    147a:	05 1b 06 03 23       	add    eax,0x2303061b
    147f:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1482:	05 0b 03 5d 74       	add    eax,0x745d030b
    1487:	05 05 06 4c 04       	add    eax,0x44c0605
    148c:	02 05 01 03 15 01    	add    al,BYTE PTR [rip+0x1150301]        # 1151793 <_end+0x114b77b>
    1492:	05 03 14 15 05       	add    eax,0x5151403
    1497:	07                   	(bad)
    1498:	14 17                	adc    al,0x17
    149a:	05 1b 06 01 82       	add    eax,0x8201061b
    149f:	04 01                	add    al,0x1
    14a1:	05 05 06 03 60       	add    eax,0x60030605
    14a6:	01 5a 05             	add    DWORD PTR [rdx+0x5],ebx
    14a9:	1f                   	(bad)
    14aa:	06                   	(bad)
    14ab:	01 c8                	add    eax,ecx
    14ad:	05 05 06 3d 5a       	add    eax,0x5a3d0605
    14b2:	04 03                	add    al,0x3
    14b4:	05 01 01 05 03       	add    eax,0x3050101
    14b9:	14 05                	adc    al,0x5
    14bb:	0a 00                	or     al,BYTE PTR [rax]
    14bd:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    14c0:	06                   	(bad)
    14c1:	01 00                	add    DWORD PTR [rax],eax
    14c3:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    14c6:	d6                   	(bad)
    14c7:	04 01                	add    al,0x1
    14c9:	05 05 06 01 05       	add    eax,0x5010605
    14ce:	0a 06                	or     al,BYTE PTR [rsi]
    14d0:	01 05 01 85 05 34    	add    DWORD PTR [rip+0x34058501],eax        # 340599d7 <_end+0x340539bf>
    14d6:	00 02                	add    BYTE PTR [rdx],al
    14d8:	04 01                	add    al,0x1
    14da:	03 70 02             	add    esi,DWORD PTR [rax+0x2]
    14dd:	2e 01 00             	cs add DWORD PTR [rax],eax
    14e0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    14e3:	2e 05 05 00 02 04    	cs add eax,0x4020005
    14e9:	01 2b                	add    DWORD PTR [rbx],ebp
    14eb:	00 02                	add    BYTE PTR [rdx],al
    14ed:	04 01                	add    al,0x1
    14ef:	08 2e                	or     BYTE PTR [rsi],ch
    14f1:	00 02                	add    BYTE PTR [rdx],al
    14f3:	04 01                	add    al,0x1
    14f5:	74 05                	je     14fc <_Z11hashMapCtorPFj8string_tEj+0x6c>
    14f7:	01 03                	add    DWORD PTR [rbx],eax
    14f9:	13 58 05             	adc    ebx,DWORD PTR [rax+0x5]
    14fc:	32 06                	xor    al,BYTE PTR [rsi]
    14fe:	ca 06 01             	retf   0x106
    1501:	05 05 06 4b 05       	add    eax,0x54b0605
    1506:	32 06                	xor    al,BYTE PTR [rsi]
    1508:	11 05 05 4b 05 1b    	adc    DWORD PTR [rip+0x1b054b05],eax        # 1b056013 <_end+0x1b04fffb>
    150e:	06                   	(bad)
    150f:	b1 05                	mov    cl,0x5
    1511:	0e                   	(bad)
    1512:	06                   	(bad)
    1513:	10 05 1b 30 05 09    	adc    BYTE PTR [rip+0x905301b],al        # 9054534 <_end+0x904e51c>
    1519:	06                   	(bad)
    151a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    151b:	04 04                	add    al,0x4
    151d:	05 1b 06 03 c3       	add    eax,0xc303061b
    1522:	01 01                	add    DWORD PTR [rcx],eax
    1524:	04 01                	add    al,0x1
    1526:	05 0e 03 bd 7e       	add    eax,0x7ebd030e
    152b:	58                   	pop    rax
    152c:	05 09 06 3d 04       	add    eax,0x43d0609
    1531:	04 05                	add    al,0x5
    1533:	01 03                	add    DWORD PTR [rbx],eax
    1535:	c0 01 01             	rol    BYTE PTR [rcx],0x1
    1538:	05 03 14 05 1b       	add    eax,0x1b051403
    153d:	06                   	(bad)
    153e:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    1541:	01 05 13 00 02 04    	add    DWORD PTR [rip+0x4020013],eax        # 402155a <_end+0x401b542>
    1547:	01 03                	add    DWORD PTR [rbx],eax
    1549:	be 7e 01 05 1b       	mov    esi,0x1b05017e
    154e:	06                   	(bad)
    154f:	48 05 14 06 01 05    	add    rax,0x5010614
    1555:	1b 66 05             	sbb    esp,DWORD PTR [rsi+0x5]
    1558:	01 5e 4a             	add    DWORD PTR [rsi+0x4a],ebx
    155b:	2e 05 05 00 02 04    	cs add eax,0x4020005
    1561:	01 03                	add    DWORD PTR [rbx],eax
    1563:	75 20                	jne    1585 <_Z17hashMapAddElementP7HashMap8string_t+0x45>
    1565:	00 02                	add    BYTE PTR [rdx],al
    1567:	04 01                	add    al,0x1
    1569:	08 2e                	or     BYTE PTR [rsi],ch
    156b:	00 02                	add    BYTE PTR [rdx],al
    156d:	04 01                	add    al,0x1
    156f:	74 02                	je     1573 <_Z17hashMapAddElementP7HashMap8string_t+0x33>
    1571:	05 00 01 01 32       	add    eax,0x32010100
    1576:	16                   	(bad)
    1577:	00 00                	add    BYTE PTR [rax],al
    1579:	05 00 08 00 87       	add    eax,0x87000800
    157e:	01 00                	add    DWORD PTR [rax],eax
    1580:	00 01                	add    BYTE PTR [rcx],al
    1582:	01 01                	add    DWORD PTR [rcx],eax
    1584:	fb                   	sti
    1585:	0e                   	(bad)
    1586:	0d 00 01 01 01       	or     eax,0x1010100
    158b:	01 00                	add    DWORD PTR [rax],eax
    158d:	00 00                	add    BYTE PTR [rax],al
    158f:	01 00                	add    DWORD PTR [rax],eax
    1591:	00 01                	add    BYTE PTR [rcx],al
    1593:	01 01                	add    DWORD PTR [rcx],eax
    1595:	1f                   	(bad)
    1596:	0c 00                	or     al,0x0
    1598:	00 00                	add    BYTE PTR [rax],al
    159a:	00 2f                	add    BYTE PTR [rdi],ch
    159c:	00 00                	add    BYTE PTR [rax],al
    159e:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	9a                   	(bad)
    15a4:	00 00                	add    BYTE PTR [rax],al
    15a6:	00 ae 00 00 00 03    	add    BYTE PTR [rsi+0x3000000],ch
    15ac:	03 00                	add    eax,DWORD PTR [rax]
    15ae:	00 dd                	add    ch,bl
    15b0:	00 00                	add    BYTE PTR [rax],al
    15b2:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    15b5:	00 00                	add    BYTE PTR [rax],al
    15b7:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    15ba:	00 7e 02             	add    BYTE PTR [rsi+0x2],bh
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	1d 03 00 00 c7       	sbb    eax,0xc7000003
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	00 02                	add    BYTE PTR [rdx],al
    15c8:	01 1f                	add    DWORD PTR [rdi],ebx
    15ca:	02 0f                	add    cl,BYTE PTR [rdi]
    15cc:	3f                   	(bad)
    15cd:	f9                   	stc
    15ce:	02 00                	add    al,BYTE PTR [rax]
    15d0:	00 01                	add    BYTE PTR [rcx],al
    15d2:	f9                   	stc
    15d3:	02 00                	add    al,BYTE PTR [rax]
    15d5:	00 01                	add    BYTE PTR [rcx],al
    15d7:	36 03 00             	ss add eax,DWORD PTR [rax]
    15da:	00 02                	add    BYTE PTR [rdx],al
    15dc:	3f                   	(bad)
    15dd:	03 00                	add    eax,DWORD PTR [rax]
    15df:	00 03                	add    BYTE PTR [rbx],al
    15e1:	45 03 00             	add    r8d,DWORD PTR [r8]
    15e4:	00 04 4e             	add    BYTE PTR [rsi+rcx*2],al
    15e7:	03 00                	add    eax,DWORD PTR [rax]
    15e9:	00 03                	add    BYTE PTR [rbx],al
    15eb:	5a                   	pop    rdx
    15ec:	03 00                	add    eax,DWORD PTR [rax]
    15ee:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 171d <_Z20hashMapSearchElementP7HashMap8string_t+0x2d>
    15f4:	04 21                	add    al,0x21
    15f6:	01 00                	add    DWORD PTR [rax],eax
    15f8:	00 03                	add    BYTE PTR [rbx],al
    15fa:	62 03 00 00 03       	(bad)
    15ff:	69 03 00 00 03 71    	imul   eax,DWORD PTR [rbx],0x71030000
    1605:	03 00                	add    eax,DWORD PTR [rax]
    1607:	00 03                	add    BYTE PTR [rbx],al
    1609:	78 03                	js     160e <_Z17hashMapAddElementP7HashMap8string_t+0xce>
    160b:	00 00                	add    BYTE PTR [rax],al
    160d:	03 80 03 00 00 03    	add    eax,DWORD PTR [rax+0x3000003]
    1613:	88 03                	mov    BYTE PTR [rbx],al
    1615:	00 00                	add    BYTE PTR [rax],al
    1617:	04 93                	add    al,0x93
    1619:	03 00                	add    eax,DWORD PTR [rax]
    161b:	00 03                	add    BYTE PTR [rbx],al
    161d:	99                   	cdq
    161e:	03 00                	add    eax,DWORD PTR [rax]
    1620:	00 03                	add    BYTE PTR [rbx],al
    1622:	75 01                	jne    1625 <_Z17hashMapPopElementP7HashMap8string_t+0x15>
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	06                   	(bad)
    1627:	9f                   	lahf
    1628:	03 00                	add    eax,DWORD PTR [rax]
    162a:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    162d:	01 00                	add    DWORD PTR [rax],eax
    162f:	00 02                	add    BYTE PTR [rdx],al
    1631:	b0 03                	mov    al,0x3
    1633:	00 00                	add    BYTE PTR [rax],al
    1635:	07                   	(bad)
    1636:	10 01                	adc    BYTE PTR [rcx],al
    1638:	00 00                	add    BYTE PTR [rax],al
    163a:	08 07                	or     BYTE PTR [rdi],al
    163c:	01 00                	add    DWORD PTR [rax],eax
    163e:	00 07                	add    BYTE PTR [rdi],al
    1640:	b7 03                	mov    bh,0x3
    1642:	00 00                	add    BYTE PTR [rax],al
    1644:	09 c1                	or     ecx,eax
    1646:	03 00                	add    eax,DWORD PTR [rax]
    1648:	00 09                	add    BYTE PTR [rcx],cl
    164a:	ca 03 00             	retf   0x3
    164d:	00 02                	add    BYTE PTR [rdx],al
    164f:	b9 02 00 00 09       	mov    ecx,0x9000002
    1654:	b0 03                	mov    al,0x3
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	03 d8                	add    ebx,eax
    165a:	03 00                	add    eax,DWORD PTR [rax]
    165c:	00 00                	add    BYTE PTR [rax],al
    165e:	e3 03                	jrcxz  1663 <_Z17hashMapPopElementP7HashMap8string_t+0x53>
    1660:	00 00                	add    BYTE PTR [rax],al
    1662:	09 f1                	or     ecx,esi
    1664:	03 00                	add    eax,DWORD PTR [rax]
    1666:	00 09                	add    BYTE PTR [rcx],cl
    1668:	fc                   	cld
    1669:	03 00                	add    eax,DWORD PTR [rax]
    166b:	00 09                	add    BYTE PTR [rcx],cl
    166d:	05 04 00 00 09       	add    eax,0x9000004
    1672:	fe 03                	inc    BYTE PTR [rbx]
    1674:	00 00                	add    BYTE PTR [rax],al
    1676:	09 13                	or     DWORD PTR [rbx],edx
    1678:	04 00                	add    al,0x0
    167a:	00 07                	add    BYTE PTR [rdi],al
    167c:	53                   	push   rbx
    167d:	01 00                	add    DWORD PTR [rax],eax
    167f:	00 02                	add    BYTE PTR [rdx],al
    1681:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    1684:	00 02                	add    BYTE PTR [rdx],al
    1686:	e0 01                	loopne 1689 <_Z17hashMapPopElementP7HashMap8string_t+0x79>
    1688:	00 00                	add    BYTE PTR [rax],al
    168a:	07                   	(bad)
    168b:	33 01                	xor    eax,DWORD PTR [rcx]
    168d:	00 00                	add    BYTE PTR [rax],al
    168f:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
    1692:	00 00                	add    BYTE PTR [rax],al
    1694:	02 07                	add    al,BYTE PTR [rdi]
    1696:	01 00                	add    DWORD PTR [rax],eax
    1698:	00 02                	add    BYTE PTR [rdx],al
    169a:	07                   	(bad)
    169b:	01 00                	add    DWORD PTR [rax],eax
    169d:	00 03                	add    BYTE PTR [rbx],al
    169f:	bc 01 00 00 08       	mov    esp,0x8000001
    16a4:	2a 04 00             	sub    al,BYTE PTR [rax+rax*1]
    16a7:	00 09                	add    BYTE PTR [rcx],cl
    16a9:	e5 03                	in     eax,0x3
    16ab:	00 00                	add    BYTE PTR [rax],al
    16ad:	09 33                	or     DWORD PTR [rbx],esi
    16af:	04 00                	add    al,0x0
    16b1:	00 07                	add    BYTE PTR [rdi],al
    16b3:	3b 04 00             	cmp    eax,DWORD PTR [rax+rax*1]
    16b6:	00 02                	add    BYTE PTR [rdx],al
    16b8:	44 04 00             	rex.R add al,0x0
    16bb:	00 09                	add    BYTE PTR [rcx],cl
    16bd:	50                   	push   rax
    16be:	04 00                	add    al,0x0
    16c0:	00 07                	add    BYTE PTR [rdi],al
    16c2:	13 04 00             	adc    eax,DWORD PTR [rax+rax*1]
    16c5:	00 02                	add    BYTE PTR [rdx],al
    16c7:	59                   	pop    rcx
    16c8:	04 00                	add    al,0x0
    16ca:	00 0a                	add    BYTE PTR [rdx],cl
    16cc:	6a 04                	push   0x4
    16ce:	00 00                	add    BYTE PTR [rax],al
    16d0:	07                   	(bad)
    16d1:	e9 01 00 00 0b       	jmp    b0016d7 <_end+0xaffb6bf>
    16d6:	62 01 00 00 0b       	(bad)
    16db:	f4                   	hlt
    16dc:	01 00                	add    DWORD PTR [rax],eax
    16de:	00 0b                	add    BYTE PTR [rbx],cl
    16e0:	6d                   	ins    DWORD PTR es:[rdi],dx
    16e1:	01 00                	add    DWORD PTR [rax],eax
    16e3:	00 0b                	add    BYTE PTR [rbx],cl
    16e5:	71 04                	jno    16eb <_Z17hashMapPopElementP7HashMap8string_t+0xdb>
    16e7:	00 00                	add    BYTE PTR [rax],al
    16e9:	02 7f 04             	add    bh,BYTE PTR [rdi+0x4]
    16ec:	00 00                	add    BYTE PTR [rax],al
    16ee:	0b a0 01 00 00 07    	or     esp,DWORD PTR [rax+0x7000001]
    16f4:	8c 04 00             	mov    WORD PTR [rax+rax*1],es
    16f7:	00 0b                	add    BYTE PTR [rbx],cl
    16f9:	fb                   	sti
    16fa:	01 00                	add    DWORD PTR [rax],eax
    16fc:	00 07                	add    BYTE PTR [rdi],al
    16fe:	94                   	xchg   esp,eax
    16ff:	04 00                	add    al,0x0
    1701:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    1704:	04 00                	add    al,0x0
    1706:	00 03                	add    BYTE PTR [rbx],al
    1708:	05 59 00 09 02       	add    eax,0x2090059
    170d:	90                   	nop
    170e:	23 00                	and    eax,DWORD PTR [rax]
    1710:	00 00                	add    BYTE PTR [rax],al
    1712:	00 00                	add    BYTE PTR [rax],al
    1714:	00 03                	add    BYTE PTR [rbx],al
    1716:	c6 00 01             	mov    BYTE PTR [rax],0x1
    1719:	06                   	(bad)
    171a:	01 02                	add    DWORD PTR [rdx],eax
    171c:	24 12                	and    al,0x12
    171e:	05 05 06 e5 05       	add    eax,0x5e50605
    1723:	22 06                	and    al,BYTE PTR [rsi]
    1725:	92                   	xchg   edx,eax
    1726:	9e                   	sahf
    1727:	3c 05                	cmp    al,0x5
    1729:	05 06 3c 05 22       	add    eax,0x22053c06
    172e:	06                   	(bad)
    172f:	01 3c 05 17 00 02 04 	add    DWORD PTR [rax*1+0x4020017],edi
    1736:	01 06                	add    DWORD PTR [rsi],eax
    1738:	5a                   	pop    rdx
    1739:	00 02                	add    BYTE PTR [rdx],al
    173b:	04 01                	add    al,0x1
    173d:	06                   	(bad)
    173e:	82                   	(bad)
    173f:	05 09 06 bb 05       	add    eax,0x5bb0609
    1744:	1a 06                	sbb    al,BYTE PTR [rsi]
    1746:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021751 <_end+0x401b739>
    174c:	02 06                	add    al,BYTE PTR [rsi]
    174e:	02 23                	add    ah,BYTE PTR [rbx]
    1750:	11 05 17 00 02 04    	adc    DWORD PTR [rip+0x4020017],eax        # 402176d <_end+0x401b755>
    1756:	01 01                	add    DWORD PTR [rcx],eax
    1758:	00 02                	add    BYTE PTR [rdx],al
    175a:	04 01                	add    al,0x1
    175c:	06                   	(bad)
    175d:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1760:	04 01                	add    al,0x1
    1762:	90                   	nop
    1763:	05 05 06 16 14       	add    eax,0x14160605
    1768:	04 02                	add    al,0x2
    176a:	05 01 0d 05 03       	add    eax,0x3050d01
    176f:	14 05                	adc    al,0x5
    1771:	18 06                	sbb    BYTE PTR [rsi],al
    1773:	01 08                	add    DWORD PTR [rax],ecx
    1775:	82                   	(bad)
    1776:	04 01                	add    al,0x1
    1778:	05 1c 00 02 04       	add    eax,0x402001c
    177d:	01 06                	add    DWORD PTR [rsi],eax
    177f:	17                   	(bad)
    1780:	05 0b 06 70 05       	add    eax,0x570060b
    1785:	1c 00                	sbb    al,0x0
    1787:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    178a:	4e 05 2d 4b 66 05    	rex.WRX add rax,0x5664b2d
    1790:	0b 0d 08 20 04 02    	or     ecx,DWORD PTR [rip+0x2042008]        # 204379e <_end+0x203d786>
    1796:	05 18 49 08 58       	add    eax,0x58084918
    179b:	04 01                	add    al,0x1
    179d:	05 09 06 18 04       	add    eax,0x4180609
    17a2:	02 05 01 03 78 01    	add    al,BYTE PTR [rip+0x1780301]        # 1781aa9 <_end+0x177ba91>
    17a8:	05 03 14 04 01       	add    eax,0x1041403
    17ad:	05 1c 00 02 04       	add    eax,0x402001c
    17b2:	01 06                	add    DWORD PTR [rsi],eax
    17b4:	17                   	(bad)
    17b5:	04 02                	add    al,0x2
    17b7:	05 18 45 ba 04       	add    eax,0x4ba4518
    17bc:	01 05 09 06 19 05    	add    DWORD PTR [rip+0x5190609],eax        # 5191dcb <_end+0x518bdb3>
    17c2:	26 06                	es (bad)
    17c4:	01 05 1b 4a 05 26    	add    DWORD PTR [rip+0x26054a1b],eax        # 260561e5 <_end+0x260501cd>
    17ca:	00 02                	add    BYTE PTR [rdx],al
    17cc:	04 01                	add    al,0x1
    17ce:	08 2c 05 1b 3e 05 05 	or     BYTE PTR [rax*1+0x5053e1b],ch
    17d5:	00 02                	add    BYTE PTR [rdx],al
    17d7:	04 02                	add    al,0x2
    17d9:	06                   	(bad)
    17da:	48 05 1c 00 02 04    	add    rax,0x402001c
    17e0:	01 01                	add    DWORD PTR [rcx],eax
    17e2:	05 17 06 4f 05       	add    eax,0x54f0617
    17e7:	05 06 58 05 17       	add    eax,0x17055806
    17ec:	06                   	(bad)
    17ed:	01 05 05 06 4c 04    	add    DWORD PTR [rip+0x44c0605],eax        # 44c1df8 <_end+0x44bbde0>
    17f3:	02 05 01 03 79 01    	add    al,BYTE PTR [rip+0x1790301]        # 1791afa <_end+0x178bae2>
    17f9:	05 03 14 05 17       	add    eax,0x17051403
    17fe:	06                   	(bad)
    17ff:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1802:	05 0b 08 17 04       	add    eax,0x417080b
    1807:	02 05 17 8b 58 04    	add    al,BYTE PTR [rip+0x4588b17]        # 458a324 <_end+0x458430c>
    180d:	01 05 05 06 18 05    	add    DWORD PTR [rip+0x5180605],eax        # 5181e18 <_end+0x517be00>
    1813:	07                   	(bad)
    1814:	03 dc                	add    ebx,esp
    1816:	00 01                	add    BYTE PTR [rcx],al
    1818:	05 05 13 05 1c       	add    eax,0x1c051305
    181d:	00 02                	add    BYTE PTR [rdx],al
    181f:	04 01                	add    al,0x1
    1821:	15 05 27 00 02       	adc    eax,0x2002705
    1826:	04 01                	add    al,0x1
    1828:	06                   	(bad)
    1829:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 402184b <_end+0x401b833>
    182f:	01 3c 05 23 ad 05 0b 	add    DWORD PTR [rax*1+0xb05ad23],edi
    1836:	08 9c 05 12 08 22 05 	or     BYTE PTR [rbp+rax*1+0x5220812],bl
    183d:	26 d7                	xlat   BYTE PTR ds:[rbx]
    183f:	05 09 06 08 9d       	add    eax,0x9d080609
    1844:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 5111e5c <_end+0x510be44>
    184a:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    1851:	02 23                	add    ah,BYTE PTR [rbx]
    1853:	12 c8                	adc    cl,al
    1855:	05 1c 02 2c 12       	add    eax,0x122c021c
    185a:	c8 05 05 00          	enter  0x505,0x0
    185e:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    1861:	06                   	(bad)
    1862:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021884 <_end+0x401b86c>
    1868:	01 01                	add    DWORD PTR [rcx],eax
    186a:	00 02                	add    BYTE PTR [rdx],al
    186c:	04 01                	add    al,0x1
    186e:	06                   	(bad)
    186f:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    1875:	13 05 26 06 01 f2    	adc    eax,DWORD PTR [rip+0xfffffffff2010626]        # fffffffff2011ea1 <_end+0xfffffffff200be89>
    187b:	05 12 81 05 26       	add    eax,0x26058112
    1880:	d7                   	xlat   BYTE PTR ds:[rbx]
    1881:	05 12 57 05 26       	add    eax,0x26055712
    1886:	08 4b 05             	or     BYTE PTR [rbx+0x5],cl
    1889:	31 02                	xor    DWORD PTR [rdx],eax
    188b:	27                   	(bad)
    188c:	12 05 1c 08 4a c8    	adc    al,BYTE PTR [rip+0xffffffffc84a081c]        # ffffffffc84a20ae <_end+0xffffffffc849c096>
    1892:	05 05 00 02 04       	add    eax,0x4020005
    1897:	03 06                	add    eax,DWORD PTR [rsi]
    1899:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 40218bb <_end+0x401b8a3>
    189f:	01 01                	add    DWORD PTR [rcx],eax
    18a1:	05 09 2f 13 05       	add    eax,0x5132f09
    18a6:	29 06                	sub    DWORD PTR [rsi],eax
    18a8:	11 05 26 2f 05 12    	adc    DWORD PTR [rip+0x12052f26],eax        # 120547d4 <_end+0x1204e7bc>
    18ae:	49 05 26 4b 05 05    	rex.WB add rax,0x5054b26
    18b4:	00 02                	add    BYTE PTR [rdx],al
    18b6:	04 03                	add    al,0x3
    18b8:	8e 05 26 3e 05 31    	mov    es,WORD PTR [rip+0x31053e26]        # 310556e4 <_end+0x3104f6cc>
    18be:	4a 05 1c 4a 4a 05    	rex.WX add rax,0x54a4a1c
    18c4:	05 00 02 04 03       	add    eax,0x3040200
    18c9:	06                   	(bad)
    18ca:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 40218ec <_end+0x401b8d4>
    18d0:	01 01                	add    DWORD PTR [rcx],eax
    18d2:	05 09 4b 13 05       	add    eax,0x5134b09
    18d7:	12 06                	adc    al,BYTE PTR [rsi]
    18d9:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    18dc:	05 00 02 04 03       	add    eax,0x3040200
    18e1:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 3105570d <_end+0x3104f6f5>
    18e7:	c8 05 1c 4a          	enter  0x1c05,0x4a
    18eb:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    18f1:	03 06                	add    eax,DWORD PTR [rsi]
    18f3:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021915 <_end+0x401b8fd>
    18f9:	01 01                	add    DWORD PTR [rcx],eax
    18fb:	05 09 4b 13 05       	add    eax,0x5134b09
    1900:	12 06                	adc    al,BYTE PTR [rsi]
    1902:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 3105642e <_end+0x31050416>
    1908:	c8 05 1c 4a          	enter  0x1c05,0x4a
    190c:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    1912:	03 06                	add    eax,DWORD PTR [rsi]
    1914:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021936 <_end+0x401b91e>
    191a:	01 01                	add    DWORD PTR [rcx],eax
    191c:	00 02                	add    BYTE PTR [rdx],al
    191e:	04 01                	add    al,0x1
    1920:	06                   	(bad)
    1921:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 5161f2c <_end+0x515bf14>
    1927:	1e                   	(bad)
    1928:	06                   	(bad)
    1929:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    192c:	05 03 06 03 f6       	add    eax,0xf6030603
    1931:	01 c8                	add    eax,ecx
    1933:	05 05 13 05 1b       	add    eax,0x1b051305
    1938:	06                   	(bad)
    1939:	9e                   	sahf
    193a:	4a 04 01             	rex.WX add al,0x1
    193d:	05 05 06 03 8b       	add    eax,0x8b030605
    1942:	7e 01                	jle    1945 <_Z6resizeP7HashMapj+0xe5>
    1944:	06                   	(bad)
    1945:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    1948:	05 01 06 03 92       	add    eax,0x92030601
    194d:	7f 01                	jg     1950 <_Z6resizeP7HashMapj+0xf0>
    194f:	05 03 14 05 17       	add    eax,0x17051403
    1954:	06                   	(bad)
    1955:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1958:	05 0b 00 02 04       	add    eax,0x402000b
    195d:	01 08                	add    DWORD PTR [rax],ecx
    195f:	18 04 02             	sbb    BYTE PTR [rdx+rax*1],al
    1962:	05 17 03 7a 4a       	add    eax,0x4a7a0317
    1967:	58                   	pop    rax
    1968:	04 01                	add    al,0x1
    196a:	05 05 06 1a 05       	add    eax,0x51a0605
    196f:	10 06                	adc    BYTE PTR [rsi],al
    1971:	01 05 01 83 08 3c    	add    DWORD PTR [rip+0x3c088301],eax        # 3c089c78 <_end+0x3c083c60>
    1977:	66 2e 05 05 06       	cs add ax,0x605
    197c:	03 e1                	add    esp,ecx
    197e:	00 90 05 1e 06 01    	add    BYTE PTR [rax+0x1061e05],dl
    1984:	04 03                	add    al,0x3
    1986:	05 03 06 03 f6       	add    eax,0xf6030603
    198b:	01 82 05 05 13 06    	add    DWORD PTR [rdx+0x6130505],eax
    1991:	82                   	(bad)
    1992:	3c 2e                	cmp    al,0x2e
    1994:	04 01                	add    al,0x1
    1996:	05 0b 03 84 7e       	add    eax,0x7e84030b
    199b:	01 05 13 4b 74 04    	add    DWORD PTR [rip+0x4744b13],eax        # 47464b4 <_end+0x474049c>
    19a1:	03 05 1b 03 fb 01    	add    eax,DWORD PTR [rip+0x1fb031b]        # 1fb1cc2 <_end+0x1fabcaa>
    19a7:	01 90 66 04 01 05    	add    DWORD PTR [rax+0x5010466],edx
    19ad:	05 00 02 04 01       	add    eax,0x1040200
    19b2:	03 91 7d 01 00 02    	add    edx,DWORD PTR [rcx+0x200017d]
    19b8:	04 01                	add    al,0x1
    19ba:	ba 00 02 04 01       	mov    edx,0x1040200
    19bf:	74 00                	je     19c1 <_Z6resizeP7HashMapj+0x161>
    19c1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19c4:	74 05                	je     19cb <_Z6resizeP7HashMapj+0x16b>
    19c6:	01 03                	add    DWORD PTR [rbx],eax
    19c8:	17                   	(bad)
    19c9:	58                   	pop    rax
    19ca:	05 6f 06 08 22       	add    eax,0x2208066f
    19cf:	06                   	(bad)
    19d0:	01 08                	add    DWORD PTR [rax],ecx
    19d2:	e4 9e                	in     al,0x9e
    19d4:	05 05 06 08 91       	add    eax,0x91080605
    19d9:	05 0a 06 91 58       	add    eax,0x5891060a
    19de:	05 05 06 4a 06       	add    eax,0x64a0605
    19e3:	3c 05                	cmp    al,0x5
    19e5:	22 68 05             	and    ch,BYTE PTR [rax+0x5]
    19e8:	0a 48 05             	or     cl,BYTE PTR [rax+0x5]
    19eb:	05 06 5a 05 22       	add    eax,0x22055a06
    19f0:	06                   	(bad)
    19f1:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021a0e <_end+0x401b9f6>
    19f7:	01 06                	add    DWORD PTR [rsi],eax
    19f9:	e5 00                	in     eax,0x0
    19fb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19fe:	06                   	(bad)
    19ff:	66 00 02             	data16 add BYTE PTR [rdx],al
    1a02:	04 01                	add    al,0x1
    1a04:	3c 05                	cmp    al,0x5
    1a06:	09 06                	or     DWORD PTR [rsi],eax
    1a08:	75 05                	jne    1a0f <_Z6resizeP7HashMapj+0x1af>
    1a0a:	1a 06                	sbb    al,BYTE PTR [rsi]
    1a0c:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021a17 <_end+0x401b9ff>
    1a12:	02 06                	add    al,BYTE PTR [rsi]
    1a14:	02 25 11 05 17 00    	add    ah,BYTE PTR [rip+0x170511]        # 171f2b <_end+0x16bf13>
    1a1a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1a1d:	01 00                	add    DWORD PTR [rax],eax
    1a1f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1a22:	06                   	(bad)
    1a23:	c8 05 05 06          	enter  0x505,0x6
    1a27:	16                   	(bad)
    1a28:	05 2e 06 01 05       	add    eax,0x501062e
    1a2d:	30 e5                	xor    ch,ah
    1a2f:	05 2e 57 05 05       	add    eax,0x505572e
    1a34:	06                   	(bad)
    1a35:	9f                   	lahf
    1a36:	05 30 06 01 66       	add    eax,0x66010630
    1a3b:	3c 05                	cmp    al,0x5
    1a3d:	05 06 08 67 14       	add    eax,0x14670806
    1a42:	05 17 00 02 04       	add    eax,0x4020017
    1a47:	01 01                	add    DWORD PTR [rcx],eax
    1a49:	05 09 03 17 90       	add    eax,0x90170309
    1a4e:	05 1e 06 01 05       	add    eax,0x501061e
    1a53:	21 00                	and    DWORD PTR [rax],eax
    1a55:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1a58:	58                   	pop    rax
    1a59:	05 17 00 02 04       	add    eax,0x4020017
    1a5e:	01 03                	add    DWORD PTR [rbx],eax
    1a60:	69 2e 05 21 00 02    	imul   ebp,DWORD PTR [rsi],0x2002105
    1a66:	04 01                	add    al,0x1
    1a68:	03 17                	add    edx,DWORD PTR [rdi]
    1a6a:	4a 05 18 00 02 04    	rex.WX add rax,0x4020018
    1a70:	01 3c 05 05 00 02 04 	add    DWORD PTR [rax*1+0x4020005],edi
    1a77:	03 06                	add    eax,DWORD PTR [rsi]
    1a79:	03 69 4a             	add    ebp,DWORD PTR [rcx+0x4a]
    1a7c:	05 17 00 02 04       	add    eax,0x4020017
    1a81:	01 01                	add    DWORD PTR [rcx],eax
    1a83:	00 02                	add    BYTE PTR [rdx],al
    1a85:	04 01                	add    al,0x1
    1a87:	06                   	(bad)
    1a88:	58                   	pop    rax
    1a89:	00 02                	add    BYTE PTR [rdx],al
    1a8b:	04 01                	add    al,0x1
    1a8d:	06                   	(bad)
    1a8e:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    1a91:	05 09 02 25 13       	add    eax,0x13250209
    1a96:	05 34 06 01 05       	add    eax,0x5010634
    1a9b:	09 06                	or     DWORD PTR [rsi],eax
    1a9d:	08 30                	or     BYTE PTR [rax],dh
    1a9f:	05 1b 00 02 04       	add    eax,0x402001b
    1aa4:	01 01                	add    DWORD PTR [rcx],eax
    1aa6:	05 0d 21 05 4e       	add    eax,0x4e05210d
    1aab:	06                   	(bad)
    1aac:	01 05 21 3c 05 09    	add    DWORD PTR [rip+0x9053c21],eax        # 90556d3 <_end+0x904f6bb>
    1ab2:	00 02                	add    BYTE PTR [rdx],al
    1ab4:	04 02                	add    al,0x2
    1ab6:	06                   	(bad)
    1ab7:	02 2a                	add    ch,BYTE PTR [rdx]
    1ab9:	11 05 1b 00 02 04    	adc    DWORD PTR [rip+0x402001b],eax        # 4021ada <_end+0x401bac2>
    1abf:	01 01                	add    DWORD PTR [rcx],eax
    1ac1:	05 09 cc 05 32       	add    eax,0x3205cc09
    1ac6:	06                   	(bad)
    1ac7:	01 05 09 06 59 04    	add    DWORD PTR [rip+0x4590609],eax        # 45920d6 <_end+0x458c0be>
    1acd:	04 05                	add    al,0x5
    1acf:	07                   	(bad)
    1ad0:	03 e3                	add    esp,ebx
    1ad2:	07                   	(bad)
    1ad3:	01 05 02 03 c0 7e    	add    DWORD PTR [rip+0x7ec00302],eax        # 7ec01ddb <_end+0x7ebfbdc3>
    1ad9:	01 06                	add    DWORD PTR [rsi],eax
    1adb:	01 06                	add    DWORD PTR [rsi],eax
    1add:	01 06                	add    DWORD PTR [rsi],eax
    1adf:	01 05 07 06 03 91    	add    DWORD PTR [rip+0xffffffff91030607],eax        # ffffffff910320ec <_end+0xffffffff9102c0d4>
    1ae5:	7e 01                	jle    1ae8 <_Z25_mm_crc32UnrollHashString8string_t+0x18>
    1ae7:	05 17 03 f7 7e       	add    eax,0x7ef70317
    1aec:	01 06                	add    DWORD PTR [rsi],eax
    1aee:	01 05 07 06 03 d4    	add    DWORD PTR [rip+0xffffffffd4030607],eax        # ffffffffd40320fb <_end+0xffffffffd402c0e3>
    1af4:	7d 01                	jge    1af7 <_Z25_mm_crc32UnrollHashString8string_t+0x27>
    1af6:	05 04 03 bf 7f       	add    eax,0x7fbf0304
    1afb:	01 05 17 03 ed 02    	add    DWORD PTR [rip+0x2ed0317],eax        # 2ed1e18 <_end+0x2ecbe00>
    1b01:	01 06                	add    DWORD PTR [rsi],eax
    1b03:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1b06:	05 09 06 03 d7       	add    eax,0xd7030609
    1b0b:	7c 01                	jl     1b0e <_Z25_mm_crc32UnrollHashString8string_t+0x3e>
    1b0d:	04 04                	add    al,0x4
    1b0f:	05 22 00 02 04       	add    eax,0x4020022
    1b14:	02 06                	add    al,BYTE PTR [rsi]
    1b16:	03 b8 04 01 00 02    	add    edi,DWORD PTR [rax+0x2000104]
    1b1c:	04 02                	add    al,0x2
    1b1e:	74 04                	je     1b24 <_Z25_mm_crc32UnrollHashString8string_t+0x54>
    1b20:	01 05 1e 00 02 04    	add    DWORD PTR [rip+0x402001e],eax        # 4021b44 <_end+0x401bb2c>
    1b26:	01 03                	add    DWORD PTR [rbx],eax
    1b28:	c8 7b 01 05          	enter  0x17b,0x5
    1b2c:	17                   	(bad)
    1b2d:	00 02                	add    BYTE PTR [rdx],al
    1b2f:	04 01                	add    al,0x1
    1b31:	03 76 4a             	add    esi,DWORD PTR [rsi+0x4a]
    1b34:	04 04                	add    al,0x4
    1b36:	05 22 00 02 04       	add    eax,0x4020022
    1b3b:	02 03                	add    al,BYTE PTR [rbx]
    1b3d:	c2 04 4a             	ret    0x4a04
    1b40:	00 02                	add    BYTE PTR [rdx],al
    1b42:	04 02                	add    al,0x2
    1b44:	3c 00                	cmp    al,0x0
    1b46:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1b49:	3c 05                	cmp    al,0x5
    1b4b:	26 00 02             	es add BYTE PTR [rdx],al
    1b4e:	04 01                	add    al,0x1
    1b50:	03 88 7c 01 04 01    	add    ecx,DWORD PTR [rax+0x104017c]
    1b56:	05 17 00 02 04       	add    eax,0x4020017
    1b5b:	01 03                	add    DWORD PTR [rbx],eax
    1b5d:	b6 7f                	mov    dh,0x7f
    1b5f:	08 12                	or     BYTE PTR [rdx],dl
    1b61:	04 04                	add    al,0x4
    1b63:	05 26 00 02 04       	add    eax,0x4020026
    1b68:	01 03                	add    DWORD PTR [rbx],eax
    1b6a:	ca 00 4a             	retf   0x4a00
    1b6d:	04 01                	add    al,0x1
    1b6f:	05 1e 00 02 04       	add    eax,0x402001e
    1b74:	01 03                	add    DWORD PTR [rbx],eax
    1b76:	40 74 00             	rex je 1b79 <_Z17adler32HashString8string_t+0x29>
    1b79:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1b7c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1b7d:	05 05 00 02 04       	add    eax,0x4020005
    1b82:	02 06                	add    al,BYTE PTR [rsi]
    1b84:	03 76 01             	add    esi,DWORD PTR [rsi+0x1]
    1b87:	05 17 00 02 04       	add    eax,0x4020017
    1b8c:	01 01                	add    DWORD PTR [rcx],eax
    1b8e:	05 05 03 0d 90       	add    eax,0x900d0305
    1b93:	05 10 06 01 04       	add    eax,0x4010610
    1b98:	02 05 18 03 b8 7f    	add    al,BYTE PTR [rip+0x7fb80318]        # 7fb81eb6 <_end+0x7fb7be9e>
    1b9e:	9e                   	sahf
    1b9f:	04 01                	add    al,0x1
    1ba1:	05 10 03 c8 00       	add    eax,0xc80310
    1ba6:	3c 05                	cmp    al,0x5
    1ba8:	05 06 5a 14 04       	add    eax,0x4145a06
    1bad:	02 05 01 03 b2 7f    	add    al,BYTE PTR [rip+0x7fb20301]        # 7fb21eb4 <_end+0x7fb1be9c>
    1bb3:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 18052fbc <_end+0x1804cfa4>
    1bb9:	06                   	(bad)
    1bba:	01 08                	add    DWORD PTR [rax],ecx
    1bbc:	90                   	nop
    1bbd:	04 01                	add    al,0x1
    1bbf:	05 1c 00 02 04       	add    eax,0x402001c
    1bc4:	01 06                	add    DWORD PTR [rsi],eax
    1bc6:	03 cd                	add    ecx,ebp
    1bc8:	00 01                	add    BYTE PTR [rcx],al
    1bca:	05 0c 06 0f 05       	add    eax,0x50f060c
    1bcf:	10 4e 04             	adc    BYTE PTR [rsi+0x4],cl
    1bd2:	02 05 18 03 b2 7f    	add    al,BYTE PTR [rip+0x7fb20318]        # 7fb21ef0 <_end+0x7fb1bed8>
    1bd8:	4a 08 3c 04          	rex.WX or BYTE PTR [rsp+r8*1],dil
    1bdc:	01 05 09 06 03 ce    	add    DWORD PTR [rip+0xffffffffce030609],eax        # ffffffffce0321eb <_end+0xffffffffce02c1d3>
    1be2:	00 01                	add    BYTE PTR [rcx],al
    1be4:	05 10 06 01 04       	add    eax,0x4010610
    1be9:	02 05 01 06 03 b0    	add    al,BYTE PTR [rip+0xffffffffb0030601]        # ffffffffb00321f0 <_end+0xffffffffb002c1d8>
    1bef:	7f 66                	jg     1c57 <_Z17adler32HashString8string_t+0x107>
    1bf1:	05 03 14 05 18       	add    eax,0x18051403
    1bf6:	06                   	(bad)
    1bf7:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1bfa:	05 1c 00 02 04       	add    eax,0x402001c
    1bff:	01 03                	add    DWORD PTR [rbx],eax
    1c01:	cd 00                	int    0x0
    1c03:	58                   	pop    rax
    1c04:	04 02                	add    al,0x2
    1c06:	05 18 03 b3 7f       	add    eax,0x7fb30318
    1c0b:	4a c8 04 01 05       	rex.WX enter 0x104,0x5
    1c10:	09 06                	or     DWORD PTR [rsi],eax
    1c12:	03 cf                	add    ecx,edi
    1c14:	00 01                	add    BYTE PTR [rcx],al
    1c16:	05 16 06 01 05       	add    eax,0x5010616
    1c1b:	05 00 02 04 02       	add    eax,0x2040200
    1c20:	06                   	(bad)
    1c21:	fe 05 1c 00 02 04    	inc    BYTE PTR [rip+0x402001c]        # 4021c43 <_end+0x401bc2b>
    1c27:	01 01                	add    DWORD PTR [rcx],eax
    1c29:	05 05 6b 05 12       	add    eax,0x12056b05
    1c2e:	06                   	(bad)
    1c2f:	01 05 05 06 08 67    	add    DWORD PTR [rip+0x67080605],eax        # 6708223a <_end+0x6707c222>
    1c35:	05 08 03 0a 01       	add    eax,0x10a0308
    1c3a:	05 05 13 05 0c       	add    eax,0xc051305
    1c3f:	06                   	(bad)
    1c40:	08 3e                	or     BYTE PTR [rsi],bh
    1c42:	05 09 06 d8 05       	add    eax,0x5d80609
    1c47:	2c 06                	sub    al,0x6
    1c49:	01 05 2e 08 58 05    	add    DWORD PTR [rip+0x558082e],eax        # 558247d <_end+0x557c465>
    1c4f:	2c 4a                	sub    al,0x4a
    1c51:	05 39 82 82 05       	add    eax,0x5828239
    1c56:	1c d6                	sbb    al,0xd6
    1c58:	05 05 00 02 04       	add    eax,0x4020005
    1c5d:	03 06                	add    eax,DWORD PTR [rsi]
    1c5f:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    1c64:	04 01                	add    al,0x1
    1c66:	01 00                	add    DWORD PTR [rax],eax
    1c68:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1c6b:	06                   	(bad)
    1c6c:	08 82 05 09 06 c9    	or     BYTE PTR [rdx-0x36f9f6fb],al
    1c72:	05 2c 06 01 05       	add    eax,0x501062c
    1c77:	2e 66 05 2c 4a       	cs add ax,0x4a2c
    1c7c:	05 2e 58 05 39       	add    eax,0x3905582e
    1c81:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    1c87:	00 02                	add    BYTE PTR [rdx],al
    1c89:	04 03                	add    al,0x3
    1c8b:	06                   	(bad)
    1c8c:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 4021cb2 <_end+0x401bc9a>
    1c93:	01 05 09 
    1c96:	9f                   	lahf
    1c97:	05 2e 06 01 05       	add    eax,0x501062e
    1c9c:	39 c8                	cmp    eax,ecx
    1c9e:	05 1c 4a 05 05       	add    eax,0x5054a1c
    1ca3:	00 02                	add    BYTE PTR [rdx],al
    1ca5:	04 03                	add    al,0x3
    1ca7:	06                   	(bad)
    1ca8:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    1cae:	01 01                	add    DWORD PTR [rcx],eax
    1cb0:	00 02                	add    BYTE PTR [rdx],al
    1cb2:	04 01                	add    al,0x1
    1cb4:	06                   	(bad)
    1cb5:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 51522c0 <_end+0x514c2a8>
    1cbb:	1e                   	(bad)
    1cbc:	06                   	(bad)
    1cbd:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e0566e2 <_end+0x1e0506ca>
    1cc3:	4a 04 03             	rex.WX add al,0x3
    1cc6:	05 03 06 03 83       	add    eax,0x83030603
    1ccb:	02 ba 05 05 13 05    	add    bh,BYTE PTR [rdx+0x5130505]
    1cd1:	1b 06                	sbb    eax,DWORD PTR [rsi]
    1cd3:	d6                   	(bad)
    1cd4:	4a 04 01             	rex.WX add al,0x1
    1cd7:	05 18 00 02 04       	add    eax,0x4020018
    1cdc:	01 03                	add    DWORD PTR [rbx],eax
    1cde:	fc                   	cld
    1cdf:	7d 01                	jge    1ce2 <_Z17adler32HashString8string_t+0x192>
    1ce1:	04 02                	add    al,0x2
    1ce3:	05 17 03 a3 7f       	add    eax,0x7fa30317
    1ce8:	4a 04 01             	rex.WX add al,0x1
    1ceb:	05 18 00 02 04       	add    eax,0x4020018
    1cf0:	01 03                	add    DWORD PTR [rbx],eax
    1cf2:	dd 00                	fld    QWORD PTR [rax]
    1cf4:	74 05                	je     1cfb <_Z17adler32HashString8string_t+0x1ab>
    1cf6:	05 06 5a 06 01       	add    eax,0x1065a06
    1cfb:	06                   	(bad)
    1cfc:	03 6f 01             	add    ebp,DWORD PTR [rdi+0x1]
    1cff:	04 02                	add    al,0x2
    1d01:	05 01 03 b0 7f       	add    eax,0x7fb00301
    1d06:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 1705310f <_end+0x1704d0f7>
    1d0c:	06                   	(bad)
    1d0d:	01 08                	add    DWORD PTR [rax],ecx
    1d0f:	9e                   	sahf
    1d10:	04 01                	add    al,0x1
    1d12:	05 05 06 03 cf       	add    eax,0xcf030605
    1d17:	00 01                	add    BYTE PTR [rcx],al
    1d19:	04 02                	add    al,0x2
    1d1b:	05 01 03 af 7f       	add    eax,0x7faf0301
    1d20:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17053129 <_end+0x1704d111>
    1d26:	06                   	(bad)
    1d27:	01 08                	add    DWORD PTR [rax],ecx
    1d29:	9e                   	sahf
    1d2a:	04 01                	add    al,0x1
    1d2c:	05 05 06 03 d0       	add    eax,0xd0030605
    1d31:	00 01                	add    BYTE PTR [rcx],al
    1d33:	04 02                	add    al,0x2
    1d35:	05 01 03 ae 7f       	add    eax,0x7fae0301
    1d3a:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1043143 <_end+0x103d12b>
    1d40:	05 39 06 03 d0       	add    eax,0xd0030639
    1d45:	00 01                	add    BYTE PTR [rcx],al
    1d47:	04 02                	add    al,0x2
    1d49:	05 17 03 b0 7f       	add    eax,0x7fb00317
    1d4e:	c8 04 01 05          	enter  0x104,0x5
    1d52:	39 03                	cmp    DWORD PTR [rbx],eax
    1d54:	d0 00                	rol    BYTE PTR [rax],1
    1d56:	08 12                	or     BYTE PTR [rdx],dl
    1d58:	05 0b 4a 04 02       	add    eax,0x2044a0b
    1d5d:	05 17 03 b0 7f       	add    eax,0x7fb00317
    1d62:	82                   	(bad)
    1d63:	58                   	pop    rax
    1d64:	04 01                	add    al,0x1
    1d66:	05 05 06 03 d2       	add    eax,0xd2030605
    1d6b:	00 01                	add    BYTE PTR [rcx],al
    1d6d:	05 09 06 01 05       	add    eax,0x5010609
    1d72:	05 06 91 05 09       	add    eax,0x9059106
    1d77:	06                   	(bad)
    1d78:	01 05 01 08 91 58    	add    DWORD PTR [rip+0x58910801],eax        # 5891257f <_end+0x5890c567>
    1d7e:	4a 58                	rex.WX pop rax
    1d80:	4a 05 09 2d 58 05    	rex.WX add rax,0x5582d09
    1d86:	05 06 03 6e 82       	add    eax,0x826e0306
    1d8b:	05 10 06 01 05       	add    eax,0x5010610
    1d90:	05 06 84 14 04       	add    eax,0x4148406
    1d95:	02 05 01 03 b2 7f    	add    al,BYTE PTR [rip+0x7fb20301]        # 7fb2209c <_end+0x7fb1c084>
    1d9b:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 180531a4 <_end+0x1804d18c>
    1da1:	06                   	(bad)
    1da2:	01 08                	add    DWORD PTR [rax],ecx
    1da4:	90                   	nop
    1da5:	04 01                	add    al,0x1
    1da7:	05 1c 00 02 04       	add    eax,0x402001c
    1dac:	01 06                	add    DWORD PTR [rsi],eax
    1dae:	03 cd                	add    ecx,ebp
    1db0:	00 01                	add    BYTE PTR [rcx],al
    1db2:	05 05 17 05 12       	add    eax,0x12051705
    1db7:	06                   	(bad)
    1db8:	01 05 05 03 0c 4a    	add    DWORD PTR [rip+0x4a0c0305],eax        # 4a0c20c3 <_end+0x4a0bc0ab>
    1dbe:	05 12 03 74 58       	add    eax,0x58740312
    1dc3:	05 05 06 4b 05       	add    eax,0x54b0605
    1dc8:	08 03                	or     BYTE PTR [rbx],al
    1dca:	0a 01                	or     al,BYTE PTR [rcx]
    1dcc:	05 05 13 34 05       	add    eax,0x5341305
    1dd1:	1e                   	(bad)
    1dd2:	06                   	(bad)
    1dd3:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    1dd6:	05 03 06 03 83       	add    eax,0x83030603
    1ddb:	02 82 05 05 13 06    	add    al,BYTE PTR [rdx+0x6130505]
    1de1:	58                   	pop    rax
    1de2:	04 01                	add    al,0x1
    1de4:	05 0c 03 f8 7d       	add    eax,0x7df8030c
    1de9:	01 05 13 4b 74 05    	add    DWORD PTR [rip+0x5744b13],eax        # 5746902 <_end+0x57408ea>
    1def:	08 06                	or     BYTE PTR [rsi],al
    1df1:	0e                   	(bad)
    1df2:	05 05 00 02 04       	add    eax,0x4020005
    1df7:	01 06                	add    DWORD PTR [rsi],eax
    1df9:	13 00                	adc    eax,DWORD PTR [rax]
    1dfb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1dfe:	08 d6                	or     dh,dl
    1e00:	00 02                	add    BYTE PTR [rdx],al
    1e02:	04 01                	add    al,0x1
    1e04:	03 b5 7f 01 00 02    	add    esi,DWORD PTR [rbp+0x200017f]
    1e0a:	04 01                	add    al,0x1
    1e0c:	08 2e                	or     BYTE PTR [rsi],ch
    1e0e:	00 02                	add    BYTE PTR [rdx],al
    1e10:	04 01                	add    al,0x1
    1e12:	74 05                	je     1e19 <_Z13elfHashString8string_t+0xb9>
    1e14:	09 03                	or     DWORD PTR [rbx],eax
    1e16:	c7 00 58 58 04 03    	mov    DWORD PTR [rax],0x3045858
    1e1c:	05 1b 03 8e 02       	add    eax,0x28e031b
    1e21:	82                   	(bad)
    1e22:	58                   	pop    rax
    1e23:	04 01                	add    al,0x1
    1e25:	05 6e 06 03 80       	add    eax,0x8003066e
    1e2a:	7d 08                	jge    1e34 <_Z13elfHashString8string_t+0xd4>
    1e2c:	3c 06                	cmp    al,0x6
    1e2e:	01 05 05 06 03 0b    	add    DWORD PTR [rip+0xb030605],eax        # b032439 <_end+0xb02c421>
    1e34:	4a 05 6e 06 03 75    	rex.WX add rax,0x7503066e
    1e3a:	01 05 1e 03 0b 2e    	add    DWORD PTR [rip+0x2e0b031e],eax        # 2e0b215e <_end+0x2e0ac146>
    1e40:	05 6e 03 75 74       	add    eax,0x7475036e
    1e45:	9e                   	sahf
    1e46:	58                   	pop    rax
    1e47:	74 58                	je     1ea1 <_Z8listCtorv+0x1>
    1e49:	05 1e 03 0b 58       	add    eax,0x580b031e
    1e4e:	05 13 59 05 1e       	add    eax,0x1e055913
    1e53:	08 1f                	or     BYTE PTR [rdi],bl
    1e55:	05 05 06 3d 05       	add    eax,0x53d0605
    1e5a:	13 06                	adc    eax,DWORD PTR [rsi]
    1e5c:	01 05 05 06 59 05    	add    DWORD PTR [rip+0x5590605],eax        # 5592467 <_end+0x558c44f>
    1e62:	01 06                	add    DWORD PTR [rsi],eax
    1e64:	13 05 0b 49 05 01    	adc    eax,DWORD PTR [rip+0x105490b]        # 1056775 <_end+0x105075d>
    1e6a:	3d 20 20 2e 2e       	cmp    eax,0x2e2e2020
    1e6f:	2e 05 0b 2d 58 05    	cs add eax,0x5582d0b
    1e75:	63 06                	movsxd eax,DWORD PTR [rsi]
    1e77:	00 09                	add    BYTE PTR [rcx],cl
    1e79:	02 30                	add    dh,BYTE PTR [rax]
    1e7b:	2d 00 00 00 00       	sub    eax,0x0
    1e80:	00 00                	add    BYTE PTR [rax],al
    1e82:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    1e85:	06                   	(bad)
    1e86:	01 08                	add    DWORD PTR [rax],ecx
    1e88:	20 05 05 06 08 3d    	and    BYTE PTR [rip+0x3d080605],al        # 3d082493 <_end+0x3d07c47b>
    1e8e:	bb 05 1a 06 93       	mov    ebx,0x93061a05
    1e93:	74 05                	je     1e9a <_Z13searchElementP4List8string_t.part.0+0x2a>
    1e95:	05 06 3b 05 1a       	add    eax,0x1a053b06
    1e9a:	06                   	(bad)
    1e9b:	13 05 0c 57 05 05    	adc    eax,DWORD PTR [rip+0x505570c]        # 50575ad <_end+0x5051595>
    1ea1:	06                   	(bad)
    1ea2:	91                   	xchg   ecx,eax
    1ea3:	05 1a 06 01 05       	add    eax,0x501061a
    1ea8:	20 5a 05             	and    BYTE PTR [rdx+0x5],bl
    1eab:	1a 80 05 05 06 84    	sbb    al,BYTE PTR [rax-0x7bf9fafb]
    1eb1:	05 20 06 01 05       	add    eax,0x5010620
    1eb6:	39 5a 05             	cmp    DWORD PTR [rdx+0x5],ebx
    1eb9:	20 3a                	and    BYTE PTR [rdx],bh
    1ebb:	05 05 06 3e 05       	add    eax,0x53e0605
    1ec0:	39 06                	cmp    DWORD PTR [rsi],eax
    1ec2:	01 05 0f 85 05 39    	add    DWORD PTR [rip+0x3905850f],eax        # 3905a3d7 <_end+0x390543bf>
    1ec8:	9b                   	fwait
    1ec9:	05 05 06 3f 05       	add    eax,0x53f0605
    1ece:	0f 06                	clts
    1ed0:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021edb <_end+0x401bec3>
    1ed6:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    1ed9:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1edc:	82                   	(bad)
    1edd:	05 3f 00 02 04       	add    eax,0x402003f
    1ee2:	02 06                	add    al,BYTE PTR [rsi]
    1ee4:	01 05 05 13 05 0f    	add    DWORD PTR [rip+0xf051305],eax        # f0531ef <_end+0xf04d1d7>
    1eea:	06                   	(bad)
    1eeb:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021ef6 <_end+0x401bede>
    1ef1:	01 e4                	add    esp,esp
    1ef3:	05 43 00 02 04       	add    eax,0x4020043
    1ef8:	02 06                	add    al,BYTE PTR [rsi]
    1efa:	82                   	(bad)
    1efb:	05 05 13 05 0f       	add    eax,0xf051305
    1f00:	06                   	(bad)
    1f01:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f0c <_end+0x401bef4>
    1f07:	01 e4                	add    esp,esp
    1f09:	05 41 00 02 04       	add    eax,0x4020041
    1f0e:	02 06                	add    al,BYTE PTR [rsi]
    1f10:	82                   	(bad)
    1f11:	05 05 13 05 0f       	add    eax,0xf051305
    1f16:	06                   	(bad)
    1f17:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f22 <_end+0x401bf0a>
    1f1d:	01 e4                	add    esp,esp
    1f1f:	05 3d 00 02 04       	add    eax,0x402003d
    1f24:	02 06                	add    al,BYTE PTR [rsi]
    1f26:	82                   	(bad)
    1f27:	05 05 13 05 0f       	add    eax,0xf051305
    1f2c:	06                   	(bad)
    1f2d:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f38 <_end+0x401bf20>
    1f33:	01 e4                	add    esp,esp
    1f35:	05 41 00 02 04       	add    eax,0x4020041
    1f3a:	02 06                	add    al,BYTE PTR [rsi]
    1f3c:	82                   	(bad)
    1f3d:	05 05 13 05 0f       	add    eax,0xf051305
    1f42:	06                   	(bad)
    1f43:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f4e <_end+0x401bf36>
    1f49:	01 e4                	add    esp,esp
    1f4b:	05 3d 00 02 04       	add    eax,0x402003d
    1f50:	02 06                	add    al,BYTE PTR [rsi]
    1f52:	82                   	(bad)
    1f53:	05 05 13 05 0f       	add    eax,0xf051305
    1f58:	06                   	(bad)
    1f59:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f64 <_end+0x401bf4c>
    1f5f:	01 08                	add    DWORD PTR [rax],ecx
    1f61:	20 05 49 00 02 04    	and    BYTE PTR [rip+0x4020049],al        # 4021fb0 <_end+0x401bf98>
    1f67:	02 06                	add    al,BYTE PTR [rsi]
    1f69:	82                   	(bad)
    1f6a:	05 05 13 05 0f       	add    eax,0xf051305
    1f6f:	06                   	(bad)
    1f70:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4021f7b <_end+0x401bf63>
    1f76:	01 e4                	add    esp,esp
    1f78:	00 02                	add    BYTE PTR [rdx],al
    1f7a:	04 01                	add    al,0x1
    1f7c:	82                   	(bad)
    1f7d:	06                   	(bad)
    1f7e:	03 0a                	add    ecx,DWORD PTR [rdx]
    1f80:	01 05 09 06 01 05    	add    DWORD PTR [rip+0x5010609],eax        # 501258f <_end+0x500c577>
    1f86:	05 06 a4 05 09       	add    eax,0x905a406
    1f8b:	06                   	(bad)
    1f8c:	01 05 01 83 08 e4    	add    DWORD PTR [rip+0xffffffffe4088301],eax        # ffffffffe408a293 <_end+0xffffffffe408427b>
    1f92:	05 34 00 02 04       	add    eax,0x4020034
    1f97:	01 06                	add    DWORD PTR [rsi],eax
    1f99:	03 68 58             	add    ebp,DWORD PTR [rax+0x58]
    1f9c:	04 02                	add    al,0x2
    1f9e:	05 01 03 37 01       	add    eax,0x1370301
    1fa3:	05 03 14 05 17       	add    eax,0x17051403
    1fa8:	06                   	(bad)
    1fa9:	01 e4                	add    esp,esp
    1fab:	04 01                	add    al,0x1
    1fad:	05 34 00 02 04       	add    eax,0x4020034
    1fb2:	03 06                	add    eax,DWORD PTR [rsi]
    1fb4:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    1fb7:	04 02                	add    al,0x2
    1fb9:	05 01 03 37 01       	add    eax,0x1370301
    1fbe:	05 03 14 05 17       	add    eax,0x17051403
    1fc3:	06                   	(bad)
    1fc4:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    1fca:	00 02                	add    BYTE PTR [rdx],al
    1fcc:	04 04                	add    al,0x4
    1fce:	06                   	(bad)
    1fcf:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    1fd2:	04 02                	add    al,0x2
    1fd4:	05 01 03 37 01       	add    eax,0x1370301
    1fd9:	05 03 14 05 17       	add    eax,0x17051403
    1fde:	06                   	(bad)
    1fdf:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    1fe5:	00 02                	add    BYTE PTR [rdx],al
    1fe7:	04 05                	add    al,0x5
    1fe9:	06                   	(bad)
    1fea:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    1fed:	00 02                	add    BYTE PTR [rdx],al
    1fef:	04 05                	add    al,0x5
    1ff1:	01 05 06 03 1a 01    	add    DWORD PTR [rip+0x11a0306],eax        # 11a22fd <_end+0x119c2e5>
    1ff7:	05 05 03 0b 01       	add    eax,0x10b0305
    1ffc:	05 1e 06 01 05       	add    eax,0x501061e
    2001:	13 08                	adc    ecx,DWORD PTR [rax]
    2003:	2f                   	(bad)
    2004:	05 1e 08 1f 05       	add    eax,0x51f081e
    2009:	05 06 3d 05 13       	add    eax,0x13053d06
    200e:	06                   	(bad)
    200f:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad261a <_end+0x5acc602>
    2015:	0b 06                	or     eax,DWORD PTR [rsi]
    2017:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    201d:	04 06                	add    al,0x6
    201f:	06                   	(bad)
    2020:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    2023:	04 02                	add    al,0x2
    2025:	05 01 03 37 01       	add    eax,0x1370301
    202a:	05 03 14 05 17       	add    eax,0x17051403
    202f:	06                   	(bad)
    2030:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    2036:	09 06                	or     DWORD PTR [rsi],eax
    2038:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    203b:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    203e:	05 01 03 2f 01       	add    eax,0x12f0301
    2043:	05 03 14 05 17       	add    eax,0x17051403
    2048:	06                   	(bad)
    2049:	01 e4                	add    esp,esp
    204b:	04 01                	add    al,0x1
    204d:	05 09 00 02 04       	add    eax,0x4020009
    2052:	01 06                	add    DWORD PTR [rsi],eax
    2054:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2057:	04 02                	add    al,0x2
    2059:	05 01 03 2f 01       	add    eax,0x12f0301
    205e:	05 03 14 05 17       	add    eax,0x17051403
    2063:	06                   	(bad)
    2064:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    206a:	00 02                	add    BYTE PTR [rdx],al
    206c:	04 02                	add    al,0x2
    206e:	06                   	(bad)
    206f:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2072:	04 02                	add    al,0x2
    2074:	05 01 03 2f 01       	add    eax,0x12f0301
    2079:	05 03 14 05 17       	add    eax,0x17051403
    207e:	06                   	(bad)
    207f:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2085:	00 02                	add    BYTE PTR [rdx],al
    2087:	04 03                	add    al,0x3
    2089:	06                   	(bad)
    208a:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    208d:	00 02                	add    BYTE PTR [rdx],al
    208f:	04 03                	add    al,0x3
    2091:	01 05 06 03 12 01    	add    DWORD PTR [rip+0x1120306],eax        # 112239d <_end+0x111c385>
    2097:	05 05 03 0b 01       	add    eax,0x10b0305
    209c:	05 1e 06 3c 05       	add    eax,0x53c061e
    20a1:	13 08                	adc    ecx,DWORD PTR [rax]
    20a3:	75 05                	jne    20aa <_Z12pushListElemP4List8string_t+0x19a>
    20a5:	1e                   	(bad)
    20a6:	08 49 05             	or     BYTE PTR [rcx+0x5],cl
    20a9:	05 06 3d 05 13       	add    eax,0x13053d06
    20ae:	06                   	(bad)
    20af:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 58326ba <_end+0x582c6a2>
    20b5:	0b 06                	or     eax,DWORD PTR [rsi]
    20b7:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    20ba:	05 17 03 12 3c       	add    eax,0x3c120317
    20bf:	74 04                	je     20c5 <_Z11popListElemP4List8string_t+0x15>
    20c1:	01 05 0b 03 6e 01    	add    DWORD PTR [rip+0x16e030b],eax        # 16e23d2 <_end+0x16dc3ba>
    20c7:	58                   	pop    rax
    20c8:	05 09 00 02 04       	add    eax,0x4020009
    20cd:	04 06                	add    al,0x6
    20cf:	03 61 01             	add    esp,DWORD PTR [rcx+0x1]
    20d2:	04 02                	add    al,0x2
    20d4:	05 01 03 2f 01       	add    eax,0x12f0301
    20d9:	05 03 14 05 17       	add    eax,0x17051403
    20de:	06                   	(bad)
    20df:	01 82 04 01 05 14    	add    DWORD PTR [rdx+0x14050104],eax
    20e5:	06                   	(bad)
    20e6:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    20e9:	05 09 13 01 04       	add    eax,0x4011309
    20ee:	02 05 01 03 2e 01    	add    al,BYTE PTR [rip+0x12e0301]        # 12e23f5 <_end+0x12dc3dd>
    20f4:	05 03 14 05 17       	add    eax,0x17051403
    20f9:	06                   	(bad)
    20fa:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2100:	00 02                	add    BYTE PTR [rdx],al
    2102:	04 01                	add    al,0x1
    2104:	06                   	(bad)
    2105:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2108:	04 02                	add    al,0x2
    210a:	05 01 03 2e 01       	add    eax,0x12e0301
    210f:	05 03 14 05 17       	add    eax,0x17051403
    2114:	06                   	(bad)
    2115:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    211b:	00 02                	add    BYTE PTR [rdx],al
    211d:	04 02                	add    al,0x2
    211f:	06                   	(bad)
    2120:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2123:	04 02                	add    al,0x2
    2125:	05 01 03 2e 01       	add    eax,0x12e0301
    212a:	05 03 14 05 17       	add    eax,0x17051403
    212f:	06                   	(bad)
    2130:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2136:	00 02                	add    BYTE PTR [rdx],al
    2138:	04 03                	add    al,0x3
    213a:	06                   	(bad)
    213b:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    213e:	00 02                	add    BYTE PTR [rdx],al
    2140:	04 03                	add    al,0x3
    2142:	01 00                	add    DWORD PTR [rax],eax
    2144:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2147:	06                   	(bad)
    2148:	01 05 06 06 03 11    	add    DWORD PTR [rip+0x11030606],eax        # 11032754 <_end+0x1102c73c>
    214e:	58                   	pop    rax
    214f:	05 05 03 0b 01       	add    eax,0x10b0305
    2154:	05 1e 06 01 05       	add    eax,0x501061e
    2159:	13 08                	adc    ecx,DWORD PTR [rax]
    215b:	2f                   	(bad)
    215c:	05 1e 08 49 05       	add    eax,0x549081e
    2161:	05 06 3d 05 13       	add    eax,0x13053d06
    2166:	06                   	(bad)
    2167:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
    216a:	05 06 59 05 0b       	add    eax,0xb055906
    216f:	06                   	(bad)
    2170:	01 9e 05 09 00 02    	add    DWORD PTR [rsi+0x2000905],ebx
    2176:	04 04                	add    al,0x4
    2178:	06                   	(bad)
    2179:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
    217c:	04 02                	add    al,0x2
    217e:	05 01 03 2e 01       	add    eax,0x12e0301
    2183:	05 03 14 05 17       	add    eax,0x17051403
    2188:	06                   	(bad)
    2189:	01 82 04 01 05 18    	add    DWORD PTR [rdx+0x18050104],eax
    218f:	06                   	(bad)
    2190:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2193:	05 09 13 01 04       	add    eax,0x4011309
    2198:	02 05 01 03 2d 01    	add    al,BYTE PTR [rip+0x12d0301]        # 12d249f <_end+0x12cc487>
    219e:	05 03 14 05 17       	add    eax,0x17051403
    21a3:	06                   	(bad)
    21a4:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    21aa:	00 02                	add    BYTE PTR [rdx],al
    21ac:	04 01                	add    al,0x1
    21ae:	06                   	(bad)
    21af:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    21b2:	04 02                	add    al,0x2
    21b4:	05 01 03 2d 01       	add    eax,0x12d0301
    21b9:	05 03 14 05 17       	add    eax,0x17051403
    21be:	06                   	(bad)
    21bf:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    21c5:	00 02                	add    BYTE PTR [rdx],al
    21c7:	04 02                	add    al,0x2
    21c9:	06                   	(bad)
    21ca:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    21cd:	04 02                	add    al,0x2
    21cf:	05 01 03 2d 01       	add    eax,0x12d0301
    21d4:	05 03 14 05 17       	add    eax,0x17051403
    21d9:	06                   	(bad)
    21da:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    21e0:	00 02                	add    BYTE PTR [rdx],al
    21e2:	04 03                	add    al,0x3
    21e4:	06                   	(bad)
    21e5:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    21e8:	00 02                	add    BYTE PTR [rdx],al
    21ea:	04 03                	add    al,0x3
    21ec:	01 05 06 03 10 01    	add    DWORD PTR [rip+0x1100306],eax        # 11024f8 <_end+0x10fc4e0>
    21f2:	05 05 03 0b 01       	add    eax,0x10b0305
    21f7:	05 1e 06 01 05       	add    eax,0x501061e
    21fc:	13 08                	adc    ecx,DWORD PTR [rax]
    21fe:	2f                   	(bad)
    21ff:	05 1e 08 49 05       	add    eax,0x549081e
    2204:	05 06 3d 05 13       	add    eax,0x13053d06
    2209:	06                   	(bad)
    220a:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 5832815 <_end+0x582c7fd>
    2210:	0b 06                	or     eax,DWORD PTR [rsi]
    2212:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2218:	04 04                	add    al,0x4
    221a:	06                   	(bad)
    221b:	03 63 01             	add    esp,DWORD PTR [rbx+0x1]
    221e:	04 02                	add    al,0x2
    2220:	05 01 03 2d 01       	add    eax,0x12d0301
    2225:	05 03 14 05 17       	add    eax,0x17051403
    222a:	06                   	(bad)
    222b:	01 82 04 01 05 1e    	add    DWORD PTR [rdx+0x1e050104],eax
    2231:	06                   	(bad)
    2232:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    2235:	05 09 13 01 04       	add    eax,0x4011309
    223a:	02 05 01 03 2c 01    	add    al,BYTE PTR [rip+0x12c0301]        # 12c2541 <_end+0x12bc529>
    2240:	05 03 14 05 17       	add    eax,0x17051403
    2245:	06                   	(bad)
    2246:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    224c:	00 02                	add    BYTE PTR [rdx],al
    224e:	04 01                	add    al,0x1
    2250:	06                   	(bad)
    2251:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    2254:	04 02                	add    al,0x2
    2256:	05 01 03 2c 01       	add    eax,0x12c0301
    225b:	05 03 14 05 17       	add    eax,0x17051403
    2260:	06                   	(bad)
    2261:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2267:	00 02                	add    BYTE PTR [rdx],al
    2269:	04 02                	add    al,0x2
    226b:	06                   	(bad)
    226c:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    226f:	04 02                	add    al,0x2
    2271:	05 01 03 2c 01       	add    eax,0x12c0301
    2276:	05 03 14 05 17       	add    eax,0x17051403
    227b:	06                   	(bad)
    227c:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2282:	00 02                	add    BYTE PTR [rdx],al
    2284:	04 03                	add    al,0x3
    2286:	06                   	(bad)
    2287:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    228a:	00 02                	add    BYTE PTR [rdx],al
    228c:	04 03                	add    al,0x3
    228e:	01 05 06 03 0f 01    	add    DWORD PTR [rip+0x10f0306],eax        # 10f259a <_end+0x10ec582>
    2294:	05 05 03 0b 01       	add    eax,0x10b0305
    2299:	05 1e 06 01 05       	add    eax,0x501061e
    229e:	13 08                	adc    ecx,DWORD PTR [rax]
    22a0:	2f                   	(bad)
    22a1:	05 1e 08 49 05       	add    eax,0x549081e
    22a6:	05 06 3d 05 13       	add    eax,0x13053d06
    22ab:	06                   	(bad)
    22ac:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 58328b7 <_end+0x582c89f>
    22b2:	0b 06                	or     eax,DWORD PTR [rsi]
    22b4:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    22ba:	04 04                	add    al,0x4
    22bc:	06                   	(bad)
    22bd:	03 64 01 04          	add    esp,DWORD PTR [rcx+rax*1+0x4]
    22c1:	02 05 01 03 2c 01    	add    al,BYTE PTR [rip+0x12c0301]        # 12c25c8 <_end+0x12bc5b0>
    22c7:	05 03 14 05 17       	add    eax,0x17051403
    22cc:	06                   	(bad)
    22cd:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    22d3:	06                   	(bad)
    22d4:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    22d7:	05 09 13 01 04       	add    eax,0x4011309
    22dc:	02 05 01 03 2b 01    	add    al,BYTE PTR [rip+0x12b0301]        # 12b25e3 <_end+0x12ac5cb>
    22e2:	05 03 14 05 17       	add    eax,0x17051403
    22e7:	06                   	(bad)
    22e8:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    22ee:	00 02                	add    BYTE PTR [rdx],al
    22f0:	04 01                	add    al,0x1
    22f2:	06                   	(bad)
    22f3:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    22f6:	04 02                	add    al,0x2
    22f8:	05 01 03 2b 01       	add    eax,0x12b0301
    22fd:	05 03 14 05 17       	add    eax,0x17051403
    2302:	06                   	(bad)
    2303:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2309:	00 02                	add    BYTE PTR [rdx],al
    230b:	04 02                	add    al,0x2
    230d:	06                   	(bad)
    230e:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2311:	04 02                	add    al,0x2
    2313:	05 01 03 2b 01       	add    eax,0x12b0301
    2318:	05 03 14 05 17       	add    eax,0x17051403
    231d:	06                   	(bad)
    231e:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2324:	00 02                	add    BYTE PTR [rdx],al
    2326:	04 03                	add    al,0x3
    2328:	06                   	(bad)
    2329:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    232c:	00 02                	add    BYTE PTR [rdx],al
    232e:	04 03                	add    al,0x3
    2330:	01 05 06 03 0e 01    	add    DWORD PTR [rip+0x10e0306],eax        # 10e263c <_end+0x10dc624>
    2336:	05 05 03 0b 01       	add    eax,0x10b0305
    233b:	05 1e 06 01 05       	add    eax,0x501061e
    2340:	13 08                	adc    ecx,DWORD PTR [rax]
    2342:	2f                   	(bad)
    2343:	05 1e 08 49 05       	add    eax,0x549081e
    2348:	05 06 3d 05 13       	add    eax,0x13053d06
    234d:	06                   	(bad)
    234e:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 5832959 <_end+0x582c941>
    2354:	0b 06                	or     eax,DWORD PTR [rsi]
    2356:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    235c:	04 04                	add    al,0x4
    235e:	06                   	(bad)
    235f:	03 65 01             	add    esp,DWORD PTR [rbp+0x1]
    2362:	04 02                	add    al,0x2
    2364:	05 01 03 2b 01       	add    eax,0x12b0301
    2369:	05 03 14 05 17       	add    eax,0x17051403
    236e:	06                   	(bad)
    236f:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    2375:	06                   	(bad)
    2376:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2379:	05 09 13 01 04       	add    eax,0x4011309
    237e:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2685 <_end+0x129c66d>
    2384:	05 03 14 05 17       	add    eax,0x17051403
    2389:	06                   	(bad)
    238a:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2390:	00 02                	add    BYTE PTR [rdx],al
    2392:	04 01                	add    al,0x1
    2394:	06                   	(bad)
    2395:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    2399:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a26a0 <_end+0x129c688>
    239f:	05 03 14 05 17       	add    eax,0x17051403
    23a4:	06                   	(bad)
    23a5:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    23ab:	00 02                	add    BYTE PTR [rdx],al
    23ad:	04 02                	add    al,0x2
    23af:	06                   	(bad)
    23b0:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    23b4:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a26bb <_end+0x129c6a3>
    23ba:	05 03 14 05 17       	add    eax,0x17051403
    23bf:	06                   	(bad)
    23c0:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    23c6:	00 02                	add    BYTE PTR [rdx],al
    23c8:	04 03                	add    al,0x3
    23ca:	06                   	(bad)
    23cb:	03 54 01 00          	add    edx,DWORD PTR [rcx+rax*1+0x0]
    23cf:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    23d2:	01 05 06 03 0d 01    	add    DWORD PTR [rip+0x10d0306],eax        # 10d26de <_end+0x10cc6c6>
    23d8:	05 05 03 0b 01       	add    eax,0x10b0305
    23dd:	05 1e 06 01 05       	add    eax,0x501061e
    23e2:	13 08                	adc    ecx,DWORD PTR [rax]
    23e4:	2f                   	(bad)
    23e5:	05 1e 08 49 05       	add    eax,0x549081e
    23ea:	05 06 3d 05 13       	add    eax,0x13053d06
    23ef:	06                   	(bad)
    23f0:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 58329fb <_end+0x582c9e3>
    23f6:	0b 06                	or     eax,DWORD PTR [rsi]
    23f8:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    23fe:	04 04                	add    al,0x4
    2400:	06                   	(bad)
    2401:	03 66 01             	add    esp,DWORD PTR [rsi+0x1]
    2404:	04 02                	add    al,0x2
    2406:	05 01 03 2a 01       	add    eax,0x12a0301
    240b:	05 03 14 05 17       	add    eax,0x17051403
    2410:	06                   	(bad)
    2411:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    2417:	06                   	(bad)
    2418:	03 54 01 05          	add    edx,DWORD PTR [rcx+rax*1+0x5]
    241c:	09 13                	or     DWORD PTR [rbx],edx
    241e:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    2421:	05 01 03 29 01       	add    eax,0x1290301
    2426:	05 03 14 05 17       	add    eax,0x17051403
    242b:	06                   	(bad)
    242c:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2432:	00 02                	add    BYTE PTR [rdx],al
    2434:	04 01                	add    al,0x1
    2436:	06                   	(bad)
    2437:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    243a:	04 02                	add    al,0x2
    243c:	05 01 03 29 01       	add    eax,0x1290301
    2441:	05 03 14 05 17       	add    eax,0x17051403
    2446:	06                   	(bad)
    2447:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    244d:	00 02                	add    BYTE PTR [rdx],al
    244f:	04 02                	add    al,0x2
    2451:	06                   	(bad)
    2452:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2455:	04 02                	add    al,0x2
    2457:	05 01 03 29 01       	add    eax,0x1290301
    245c:	05 03 14 05 17       	add    eax,0x17051403
    2461:	06                   	(bad)
    2462:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2468:	00 02                	add    BYTE PTR [rdx],al
    246a:	04 03                	add    al,0x3
    246c:	06                   	(bad)
    246d:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2470:	00 02                	add    BYTE PTR [rdx],al
    2472:	04 03                	add    al,0x3
    2474:	01 05 06 03 0c 01    	add    DWORD PTR [rip+0x10c0306],eax        # 10c2780 <_end+0x10bc768>
    247a:	05 05 03 0b 01       	add    eax,0x10b0305
    247f:	05 1e 06 01 05       	add    eax,0x501061e
    2484:	13 08                	adc    ecx,DWORD PTR [rax]
    2486:	2f                   	(bad)
    2487:	05 1e 08 1f 05       	add    eax,0x51f081e
    248c:	05 06 3d 05 13       	add    eax,0x13053d06
    2491:	06                   	(bad)
    2492:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2a9d <_end+0x5acca85>
    2498:	0b 06                	or     eax,DWORD PTR [rsi]
    249a:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    24a0:	04 04                	add    al,0x4
    24a2:	06                   	(bad)
    24a3:	03 67 01             	add    esp,DWORD PTR [rdi+0x1]
    24a6:	04 02                	add    al,0x2
    24a8:	05 01 03 29 01       	add    eax,0x1290301
    24ad:	05 03 14 05 17       	add    eax,0x17051403
    24b2:	06                   	(bad)
    24b3:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    24b9:	06                   	(bad)
    24ba:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    24bd:	06                   	(bad)
    24be:	82                   	(bad)
    24bf:	05 34 00 02 04       	add    eax,0x4020034
    24c4:	01 06                	add    DWORD PTR [rsi],eax
    24c6:	03 78 01             	add    edi,DWORD PTR [rax+0x1]
    24c9:	04 02                	add    al,0x2
    24cb:	05 01 03 31 01       	add    eax,0x1310301
    24d0:	05 03 14 05 17       	add    eax,0x17051403
    24d5:	06                   	(bad)
    24d6:	01 e4                	add    esp,esp
    24d8:	04 01                	add    al,0x1
    24da:	05 34 00 02 04       	add    eax,0x4020034
    24df:	03 06                	add    eax,DWORD PTR [rsi]
    24e1:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    24e4:	04 02                	add    al,0x2
    24e6:	05 01 03 31 01       	add    eax,0x1310301
    24eb:	05 03 14 05 17       	add    eax,0x17051403
    24f0:	06                   	(bad)
    24f1:	01 82 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],eax
    24f7:	00 02                	add    BYTE PTR [rdx],al
    24f9:	04 04                	add    al,0x4
    24fb:	06                   	(bad)
    24fc:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    24ff:	04 02                	add    al,0x2
    2501:	05 01 03 31 01       	add    eax,0x1310301
    2506:	05 03 14 05 17       	add    eax,0x17051403
    250b:	06                   	(bad)
    250c:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2512:	00 02                	add    BYTE PTR [rdx],al
    2514:	04 05                	add    al,0x5
    2516:	06                   	(bad)
    2517:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    251a:	00 02                	add    BYTE PTR [rdx],al
    251c:	04 05                	add    al,0x5
    251e:	01 05 06 03 14 01    	add    DWORD PTR [rip+0x1140306],eax        # 114282a <_end+0x113c812>
    2524:	05 05 03 0b 01       	add    eax,0x10b0305
    2529:	05 1e 06 01 05       	add    eax,0x501061e
    252e:	13 08                	adc    ecx,DWORD PTR [rax]
    2530:	2f                   	(bad)
    2531:	05 1e 08 1f 05       	add    eax,0x51f081e
    2536:	05 06 3d 05 13       	add    eax,0x13053d06
    253b:	06                   	(bad)
    253c:	01 05 05 06 c9 05    	add    DWORD PTR [rip+0x5c90605],eax        # 5c92b47 <_end+0x5c8cb2f>
    2542:	0b 06                	or     eax,DWORD PTR [rsi]
    2544:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    254a:	04 06                	add    al,0x6
    254c:	06                   	(bad)
    254d:	03 5f 01             	add    ebx,DWORD PTR [rdi+0x1]
    2550:	04 02                	add    al,0x2
    2552:	05 01 03 31 01       	add    eax,0x1310301
    2557:	05 03 14 05 17       	add    eax,0x17051403
    255c:	06                   	(bad)
    255d:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    2563:	34 00                	xor    al,0x0
    2565:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2568:	06                   	(bad)
    2569:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    256d:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322874 <_end+0x131c85c>
    2573:	05 03 14 05 17       	add    eax,0x17051403
    2578:	06                   	(bad)
    2579:	01 e4                	add    esp,esp
    257b:	04 01                	add    al,0x1
    257d:	05 34 00 02 04       	add    eax,0x4020034
    2582:	03 06                	add    eax,DWORD PTR [rsi]
    2584:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    2588:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 132288f <_end+0x131c877>
    258e:	05 03 14 05 17       	add    eax,0x17051403
    2593:	06                   	(bad)
    2594:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    259a:	00 02                	add    BYTE PTR [rdx],al
    259c:	04 04                	add    al,0x4
    259e:	06                   	(bad)
    259f:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    25a3:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 13228aa <_end+0x131c892>
    25a9:	05 03 14 05 17       	add    eax,0x17051403
    25ae:	06                   	(bad)
    25af:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    25b5:	00 02                	add    BYTE PTR [rdx],al
    25b7:	04 05                	add    al,0x5
    25b9:	06                   	(bad)
    25ba:	03 4c 01 00          	add    ecx,DWORD PTR [rcx+rax*1+0x0]
    25be:	02 04 05 01 05 06 03 	add    al,BYTE PTR [rax*1+0x3060501]
    25c5:	15 01 05 05 03       	adc    eax,0x3050501
    25ca:	0b 01                	or     eax,DWORD PTR [rcx]
    25cc:	05 1e 06 01 05       	add    eax,0x501061e
    25d1:	13 08                	adc    ecx,DWORD PTR [rax]
    25d3:	2f                   	(bad)
    25d4:	05 1e 08 1f 05       	add    eax,0x51f081e
    25d9:	05 06 3d 05 13       	add    eax,0x13053d06
    25de:	06                   	(bad)
    25df:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2bea <_end+0x5accbd2>
    25e5:	0b 06                	or     eax,DWORD PTR [rsi]
    25e7:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    25ed:	04 06                	add    al,0x6
    25ef:	06                   	(bad)
    25f0:	03 5e 01             	add    ebx,DWORD PTR [rsi+0x1]
    25f3:	04 02                	add    al,0x2
    25f5:	05 01 03 32 01       	add    eax,0x1320301
    25fa:	05 03 14 05 17       	add    eax,0x17051403
    25ff:	06                   	(bad)
    2600:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    2606:	34 00                	xor    al,0x0
    2608:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    260b:	06                   	(bad)
    260c:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    260f:	04 02                	add    al,0x2
    2611:	05 01 03 33 01       	add    eax,0x1330301
    2616:	05 03 14 05 17       	add    eax,0x17051403
    261b:	06                   	(bad)
    261c:	01 e4                	add    esp,esp
    261e:	04 01                	add    al,0x1
    2620:	05 34 00 02 04       	add    eax,0x4020034
    2625:	03 06                	add    eax,DWORD PTR [rsi]
    2627:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    262a:	04 02                	add    al,0x2
    262c:	05 01 03 33 01       	add    eax,0x1330301
    2631:	05 03 14 05 17       	add    eax,0x17051403
    2636:	06                   	(bad)
    2637:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    263d:	00 02                	add    BYTE PTR [rdx],al
    263f:	04 04                	add    al,0x4
    2641:	06                   	(bad)
    2642:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2645:	04 02                	add    al,0x2
    2647:	05 01 03 33 01       	add    eax,0x1330301
    264c:	05 03 14 05 17       	add    eax,0x17051403
    2651:	06                   	(bad)
    2652:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2658:	00 02                	add    BYTE PTR [rdx],al
    265a:	04 05                	add    al,0x5
    265c:	06                   	(bad)
    265d:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2660:	00 02                	add    BYTE PTR [rdx],al
    2662:	04 05                	add    al,0x5
    2664:	01 05 06 03 16 01    	add    DWORD PTR [rip+0x1160306],eax        # 1162970 <_end+0x115c958>
    266a:	05 05 03 0b 01       	add    eax,0x10b0305
    266f:	05 1e 06 01 05       	add    eax,0x501061e
    2674:	13 08                	adc    ecx,DWORD PTR [rax]
    2676:	2f                   	(bad)
    2677:	05 1e 08 1f 05       	add    eax,0x51f081e
    267c:	05 06 3d 05 13       	add    eax,0x13053d06
    2681:	06                   	(bad)
    2682:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2c8d <_end+0x5accc75>
    2688:	0b 06                	or     eax,DWORD PTR [rsi]
    268a:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    2690:	04 06                	add    al,0x6
    2692:	06                   	(bad)
    2693:	03 5d 01             	add    ebx,DWORD PTR [rbp+0x1]
    2696:	04 02                	add    al,0x2
    2698:	05 01 03 33 01       	add    eax,0x1330301
    269d:	05 03 14 05 17       	add    eax,0x17051403
    26a2:	06                   	(bad)
    26a3:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    26a9:	34 00                	xor    al,0x0
    26ab:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    26ae:	06                   	(bad)
    26af:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    26b2:	04 02                	add    al,0x2
    26b4:	05 01 03 34 01       	add    eax,0x1340301
    26b9:	05 03 14 05 17       	add    eax,0x17051403
    26be:	06                   	(bad)
    26bf:	01 e4                	add    esp,esp
    26c1:	04 01                	add    al,0x1
    26c3:	05 34 00 02 04       	add    eax,0x4020034
    26c8:	03 06                	add    eax,DWORD PTR [rsi]
    26ca:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    26cd:	04 02                	add    al,0x2
    26cf:	05 01 03 34 01       	add    eax,0x1340301
    26d4:	05 03 14 05 17       	add    eax,0x17051403
    26d9:	06                   	(bad)
    26da:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    26e0:	00 02                	add    BYTE PTR [rdx],al
    26e2:	04 04                	add    al,0x4
    26e4:	06                   	(bad)
    26e5:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    26e8:	04 02                	add    al,0x2
    26ea:	05 01 03 34 01       	add    eax,0x1340301
    26ef:	05 03 14 05 17       	add    eax,0x17051403
    26f4:	06                   	(bad)
    26f5:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    26fb:	00 02                	add    BYTE PTR [rdx],al
    26fd:	04 05                	add    al,0x5
    26ff:	06                   	(bad)
    2700:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2703:	00 02                	add    BYTE PTR [rdx],al
    2705:	04 05                	add    al,0x5
    2707:	01 05 06 03 17 01    	add    DWORD PTR [rip+0x1170306],eax        # 1172a13 <_end+0x116c9fb>
    270d:	05 05 03 0b 01       	add    eax,0x10b0305
    2712:	05 1e 06 01 05       	add    eax,0x501061e
    2717:	13 08                	adc    ecx,DWORD PTR [rax]
    2719:	2f                   	(bad)
    271a:	05 1e 08 1f 05       	add    eax,0x51f081e
    271f:	05 06 3d 05 13       	add    eax,0x13053d06
    2724:	06                   	(bad)
    2725:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2d30 <_end+0x5accd18>
    272b:	0b 06                	or     eax,DWORD PTR [rsi]
    272d:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    2733:	04 06                	add    al,0x6
    2735:	06                   	(bad)
    2736:	03 5c 01 04          	add    ebx,DWORD PTR [rcx+rax*1+0x4]
    273a:	02 05 01 03 34 01    	add    al,BYTE PTR [rip+0x1340301]        # 1342a41 <_end+0x133ca29>
    2740:	05 03 14 05 17       	add    eax,0x17051403
    2745:	06                   	(bad)
    2746:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    274c:	34 00                	xor    al,0x0
    274e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2751:	06                   	(bad)
    2752:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2755:	04 02                	add    al,0x2
    2757:	05 01 03 35 01       	add    eax,0x1350301
    275c:	05 03 14 05 17       	add    eax,0x17051403
    2761:	06                   	(bad)
    2762:	01 e4                	add    esp,esp
    2764:	04 01                	add    al,0x1
    2766:	05 34 00 02 04       	add    eax,0x4020034
    276b:	03 06                	add    eax,DWORD PTR [rsi]
    276d:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2770:	04 02                	add    al,0x2
    2772:	05 01 03 35 01       	add    eax,0x1350301
    2777:	05 03 14 05 17       	add    eax,0x17051403
    277c:	06                   	(bad)
    277d:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2783:	00 02                	add    BYTE PTR [rdx],al
    2785:	04 04                	add    al,0x4
    2787:	06                   	(bad)
    2788:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    278b:	04 02                	add    al,0x2
    278d:	05 01 03 35 01       	add    eax,0x1350301
    2792:	05 03 14 05 17       	add    eax,0x17051403
    2797:	06                   	(bad)
    2798:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    279e:	00 02                	add    BYTE PTR [rdx],al
    27a0:	04 05                	add    al,0x5
    27a2:	06                   	(bad)
    27a3:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    27a6:	00 02                	add    BYTE PTR [rdx],al
    27a8:	04 05                	add    al,0x5
    27aa:	01 05 06 03 18 01    	add    DWORD PTR [rip+0x1180306],eax        # 1182ab6 <_end+0x117ca9e>
    27b0:	05 05 03 0b 01       	add    eax,0x10b0305
    27b5:	05 1e 06 01 05       	add    eax,0x501061e
    27ba:	13 08                	adc    ecx,DWORD PTR [rax]
    27bc:	2f                   	(bad)
    27bd:	05 1e 08 1f 05       	add    eax,0x51f081e
    27c2:	05 06 3d 05 13       	add    eax,0x13053d06
    27c7:	06                   	(bad)
    27c8:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2dd3 <_end+0x5accdbb>
    27ce:	0b 06                	or     eax,DWORD PTR [rsi]
    27d0:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    27d6:	04 06                	add    al,0x6
    27d8:	06                   	(bad)
    27d9:	03 5b 01             	add    ebx,DWORD PTR [rbx+0x1]
    27dc:	04 02                	add    al,0x2
    27de:	05 01 03 35 01       	add    eax,0x1350301
    27e3:	05 03 14 05 17       	add    eax,0x17051403
    27e8:	06                   	(bad)
    27e9:	01 ba 9e 04 01 05    	add    DWORD PTR [rdx+0x501049e],edi
    27ef:	34 00                	xor    al,0x0
    27f1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    27f4:	06                   	(bad)
    27f5:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    27f8:	04 02                	add    al,0x2
    27fa:	05 01 03 36 01       	add    eax,0x1360301
    27ff:	05 03 14 05 17       	add    eax,0x17051403
    2804:	06                   	(bad)
    2805:	01 e4                	add    esp,esp
    2807:	04 01                	add    al,0x1
    2809:	05 34 00 02 04       	add    eax,0x4020034
    280e:	03 06                	add    eax,DWORD PTR [rsi]
    2810:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2813:	04 02                	add    al,0x2
    2815:	05 01 03 36 01       	add    eax,0x1360301
    281a:	05 03 14 05 17       	add    eax,0x17051403
    281f:	06                   	(bad)
    2820:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2826:	00 02                	add    BYTE PTR [rdx],al
    2828:	04 04                	add    al,0x4
    282a:	06                   	(bad)
    282b:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    282e:	04 02                	add    al,0x2
    2830:	05 01 03 36 01       	add    eax,0x1360301
    2835:	05 03 14 05 17       	add    eax,0x17051403
    283a:	06                   	(bad)
    283b:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2841:	00 02                	add    BYTE PTR [rdx],al
    2843:	04 05                	add    al,0x5
    2845:	06                   	(bad)
    2846:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2849:	00 02                	add    BYTE PTR [rdx],al
    284b:	04 05                	add    al,0x5
    284d:	01 05 06 03 19 01    	add    DWORD PTR [rip+0x1190306],eax        # 1192b59 <_end+0x118cb41>
    2853:	05 05 03 0b 01       	add    eax,0x10b0305
    2858:	05 1e 06 01 05       	add    eax,0x501061e
    285d:	13 08                	adc    ecx,DWORD PTR [rax]
    285f:	2f                   	(bad)
    2860:	05 1e 08 1f 05       	add    eax,0x51f081e
    2865:	05 06 3d 05 13       	add    eax,0x13053d06
    286a:	06                   	(bad)
    286b:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2e76 <_end+0x5acce5e>
    2871:	0b 06                	or     eax,DWORD PTR [rsi]
    2873:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    2879:	04 06                	add    al,0x6
    287b:	06                   	(bad)
    287c:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    287f:	04 02                	add    al,0x2
    2881:	05 01 03 36 01       	add    eax,0x1360301
    2886:	05 03 14 05 17       	add    eax,0x17051403
    288b:	06                   	(bad)
    288c:	01 ba 58 04 01 05    	add    DWORD PTR [rdx+0x5010458],edi
    2892:	01 03                	add    DWORD PTR [rbx],eax
    2894:	5f                   	pop    rdi
    2895:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40228a0 <_end+0x401c888>
    289b:	01 03                	add    DWORD PTR [rbx],eax
    289d:	5e                   	pop    rsi
    289e:	58                   	pop    rax
    289f:	00 02                	add    BYTE PTR [rdx],al
    28a1:	04 01                	add    al,0x1
    28a3:	74 00                	je     28a5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xa5>
    28a5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28a8:	58                   	pop    rax
    28a9:	00 02                	add    BYTE PTR [rdx],al
    28ab:	04 01                	add    al,0x1
    28ad:	74 00                	je     28af <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xaf>
    28af:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28b2:	74 00                	je     28b4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xb4>
    28b4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28b7:	57                   	push   rdi
    28b8:	00 02                	add    BYTE PTR [rdx],al
    28ba:	04 01                	add    al,0x1
    28bc:	74 00                	je     28be <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xbe>
    28be:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28c1:	58                   	pop    rax
    28c2:	00 02                	add    BYTE PTR [rdx],al
    28c4:	04 01                	add    al,0x1
    28c6:	74 00                	je     28c8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xc8>
    28c8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28cb:	74 05                	je     28d2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xd2>
    28cd:	52                   	push   rdx
    28ce:	06                   	(bad)
    28cf:	03 9a 01 74 06 01    	add    ebx,DWORD PTR [rdx+0x1067401]
    28d5:	05 05 06 4b 05       	add    eax,0x54b0605
    28da:	52                   	push   rdx
    28db:	06                   	(bad)
    28dc:	11 05 05 08 67 05    	adc    DWORD PTR [rip+0x5670805],eax        # 56730e7 <_end+0x566d0cf>
    28e2:	1c 00                	sbb    al,0x0
    28e4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    28e7:	06                   	(bad)
    28e8:	af                   	scas   eax,DWORD PTR es:[rdi]
    28e9:	00 02                	add    BYTE PTR [rdx],al
    28eb:	04 01                	add    al,0x1
    28ed:	06                   	(bad)
    28ee:	08 ba 05 0c 57 4a    	or     BYTE PTR [rdx+0x4a570c05],bh
    28f4:	05 09 06 08 3e       	add    eax,0x3e080609
    28f9:	05 2e 06 01 05       	add    eax,0x501062e
    28fe:	39 ba 82 05 1c d6    	cmp    DWORD PTR [rdx-0x29e3fa7e],edi
    2904:	05 05 00 02 04       	add    eax,0x4020005
    2909:	03 06                	add    eax,DWORD PTR [rsi]
    290b:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    2910:	04 01                	add    al,0x1
    2912:	01 00                	add    DWORD PTR [rax],eax
    2914:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2917:	06                   	(bad)
    2918:	08 20                	or     BYTE PTR [rax],ah
    291a:	05 09 06 91 05       	add    eax,0x5910609
    291f:	2c 06                	sub    al,0x6
    2921:	01 05 2e 2e 05 2c    	add    DWORD PTR [rip+0x2c052e2e],eax        # 2c055755 <_end+0x2c04f73d>
    2927:	4a 05 2e 58 05 39    	rex.WX add rax,0x3905582e
    292d:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    2933:	00 02                	add    BYTE PTR [rdx],al
    2935:	04 03                	add    al,0x3
    2937:	06                   	(bad)
    2938:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 402295e <_end+0x401c946>
    293f:	01 05 09 
    2942:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2943:	05 2e 06 01 05       	add    eax,0x501062e
    2948:	39 90 05 1c 4a 05    	cmp    DWORD PTR [rax+0x54a1c05],edx
    294e:	05 00 02 04 03       	add    eax,0x3040200
    2953:	06                   	(bad)
    2954:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    295a:	01 01                	add    DWORD PTR [rcx],eax
    295c:	00 02                	add    BYTE PTR [rdx],al
    295e:	04 01                	add    al,0x1
    2960:	06                   	(bad)
    2961:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 5152f6c <_end+0x514cf54>
    2967:	1e                   	(bad)
    2968:	06                   	(bad)
    2969:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e05738e <_end+0x1e051376>
    296f:	4a 04 03             	rex.WX add al,0x3
    2972:	05 03 06 03 83       	add    eax,0x83030603
    2977:	02 90 05 05 13 05    	add    dl,BYTE PTR [rax+0x5130505]
    297d:	1b 06                	sbb    eax,DWORD PTR [rsi]
    297f:	9e                   	sahf
    2980:	4a 04 01             	rex.WX add al,0x1
    2983:	05 05 06 03 fe       	add    eax,0xfe030605
    2988:	7d 01                	jge    298b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x18b>
    298a:	05 01 06 13 05       	add    eax,0x5130601
    298f:	18 00                	sbb    BYTE PTR [rax],al
    2991:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2994:	47 05 01 4d c8 05    	rex.RXB add eax,0x5c84d01
    299a:	05 06 7f 05 1e       	add    eax,0x1e057f06
    299f:	06                   	(bad)
    29a0:	01 4a 04             	add    DWORD PTR [rdx+0x4],ecx
    29a3:	03 05 03 06 03 83    	add    eax,DWORD PTR [rip+0xffffffff83030603]        # ffffffff83032fac <_end+0xffffffff8302cf94>
    29a9:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
    29ac:	05 13 06 2e 04       	add    eax,0x42e0613
    29b1:	01 05 13 03 f9 7d    	add    DWORD PTR [rip+0x7df90313],eax        # 7df92cca <_end+0x7df8ccb2>
    29b7:	01 05 0c 2d 4a 04    	add    DWORD PTR [rip+0x44a2d0c],eax        # 44a56c9 <_end+0x449f6b1>
    29bd:	03 05 1b 03 88 02    	add    eax,DWORD PTR [rip+0x288031b]        # 2882cde <_end+0x287ccc6>
    29c3:	58                   	pop    rax
    29c4:	58                   	pop    rax
    29c5:	2e 04 01             	cs add al,0x1
    29c8:	05 08 06 03 f5       	add    eax,0xf5030608
    29cd:	7d 01                	jge    29d0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1d0>
    29cf:	05 05 00 02 04       	add    eax,0x4020005
    29d4:	01 06                	add    DWORD PTR [rsi],eax
    29d6:	13 00                	adc    eax,DWORD PTR [rax]
    29d8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    29db:	08 2e                	or     BYTE PTR [rsi],ch
    29dd:	00 02                	add    BYTE PTR [rdx],al
    29df:	04 01                	add    al,0x1
    29e1:	74 00                	je     29e3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1e3>
    29e3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    29e6:	58                   	pop    rax
    29e7:	05 43 06 00 09       	add    eax,0x9000643
    29ec:	02 60 36             	add    ah,BYTE PTR [rax+0x36]
    29ef:	00 00                	add    BYTE PTR [rax],al
    29f1:	00 00                	add    BYTE PTR [rax],al
    29f3:	00 00                	add    BYTE PTR [rax],al
    29f5:	03 0b                	add    ecx,DWORD PTR [rbx]
    29f7:	01 06                	add    DWORD PTR [rsi],eax
    29f9:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b3004 <_end+0x54acfec>
    29ff:	43 06                	rex.XB (bad)
    2a01:	11 05 05 08 83 05    	adc    DWORD PTR [rip+0x5830805],eax        # 583320c <_end+0x582d1f4>
    2a07:	1c 00                	sbb    al,0x0
    2a09:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2a0c:	06                   	(bad)
    2a0d:	93                   	xchg   ebx,eax
    2a0e:	05 27 00 02 04       	add    eax,0x4020027
    2a13:	01 06                	add    DWORD PTR [rsi],eax
    2a15:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4022a37 <_end+0x401ca1f>
    2a1b:	01 3c 05 23 ad 3c 05 	add    DWORD PTR [rax*1+0x53cad23],edi
    2a22:	0b 08                	or     ecx,DWORD PTR [rax]
    2a24:	8e 05 12 08 30 05    	mov    es,WORD PTR [rip+0x5300812]        # 530323c <_end+0x52fd224>
    2a2a:	26 d7                	xlat   BYTE PTR ds:[rbx]
    2a2c:	05 09 06 08 c7       	add    eax,0xc7080609
    2a31:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 5113049 <_end+0x510d031>
    2a37:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    2a3e:	02 23                	add    ah,BYTE PTR [rbx]
    2a40:	12 c8                	adc    cl,al
    2a42:	05 1c 02 2e 12       	add    eax,0x122e021c
    2a47:	c8 05 05 00          	enter  0x505,0x0
    2a4b:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2a4e:	06                   	(bad)
    2a4f:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022a71 <_end+0x401ca59>
    2a55:	01 01                	add    DWORD PTR [rcx],eax
    2a57:	00 02                	add    BYTE PTR [rdx],al
    2a59:	04 01                	add    al,0x1
    2a5b:	06                   	(bad)
    2a5c:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    2a62:	13 05 26 06 01 05    	adc    eax,DWORD PTR [rip+0x5010626]        # 501308e <_end+0x500d076>
    2a68:	12 e3                	adc    ah,bl
    2a6a:	05 26 08 c9 05       	add    eax,0x5c90826
    2a6f:	31 02                	xor    DWORD PTR [rdx],eax
    2a71:	3a 12                	cmp    dl,BYTE PTR [rdx]
    2a73:	05 1c 08 4a c8       	add    eax,0xc84a081c
    2a78:	05 05 00 02 04       	add    eax,0x4020005
    2a7d:	03 06                	add    eax,DWORD PTR [rsi]
    2a7f:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022aa1 <_end+0x401ca89>
    2a85:	01 01                	add    DWORD PTR [rcx],eax
    2a87:	05 09 2f 13 05       	add    eax,0x5132f09
    2a8c:	29 06                	sub    DWORD PTR [rsi],eax
    2a8e:	11 05 12 2e 05 26    	adc    DWORD PTR [rip+0x26052e12],eax        # 260558a6 <_end+0x2604f88e>
    2a94:	4b 05 05 00 02 04    	rex.WXB add rax,0x4020005
    2a9a:	03 8e 05 26 3e 05    	add    ecx,DWORD PTR [rsi+0x53e2605]
    2aa0:	31 4a 05             	xor    DWORD PTR [rdx+0x5],ecx
    2aa3:	1c 4a                	sbb    al,0x4a
    2aa5:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2aab:	03 06                	add    eax,DWORD PTR [rsi]
    2aad:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022acf <_end+0x401cab7>
    2ab3:	01 01                	add    DWORD PTR [rcx],eax
    2ab5:	05 09 4b 13 05       	add    eax,0x5134b09
    2aba:	12 06                	adc    al,BYTE PTR [rsi]
    2abc:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    2abf:	05 00 02 04 03       	add    eax,0x3040200
    2ac4:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 310568f0 <_end+0x310508d8>
    2aca:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2ace:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2ad4:	03 06                	add    eax,DWORD PTR [rsi]
    2ad6:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022af8 <_end+0x401cae0>
    2adc:	01 01                	add    DWORD PTR [rcx],eax
    2ade:	05 09 4b 13 05       	add    eax,0x5134b09
    2ae3:	12 06                	adc    al,BYTE PTR [rsi]
    2ae5:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 31057611 <_end+0x310515f9>
    2aeb:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2aef:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2af5:	03 06                	add    eax,DWORD PTR [rsi]
    2af7:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022b19 <_end+0x401cb01>
    2afd:	01 01                	add    DWORD PTR [rcx],eax
    2aff:	00 02                	add    BYTE PTR [rdx],al
    2b01:	04 01                	add    al,0x1
    2b03:	06                   	(bad)
    2b04:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 516310f <_end+0x515d0f7>
    2b0a:	1e                   	(bad)
    2b0b:	06                   	(bad)
    2b0c:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    2b0f:	05 03 06 03 f6       	add    eax,0xf6030603
    2b14:	01 c8                	add    eax,ecx
    2b16:	05 05 13 04 01       	add    eax,0x1041305
    2b1b:	05 01 06 03 8c       	add    eax,0x8c030601
    2b20:	7e 74                	jle    2b96 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x396>
    2b22:	04 03                	add    al,0x3
    2b24:	05 1b 03 f4 01       	add    eax,0x1f4031b
    2b29:	4a 04 01             	rex.WX add al,0x1
    2b2c:	05 01 03 8c 7e       	add    eax,0x7e8c0301
    2b31:	58                   	pop    rax
    2b32:	05 05 06 e1 05       	add    eax,0x5e10605
    2b37:	1e                   	(bad)
    2b38:	06                   	(bad)
    2b39:	01 05 01 5b 05 1e    	add    DWORD PTR [rip+0x1e055b01],eax        # 1e058640 <_end+0x1e052628>
    2b3f:	47 04 03             	rex.RXB add al,0x3
    2b42:	05 03 06 03 f6       	add    eax,0xf6030603
    2b47:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
    2b4a:	05 13 04 01 05       	add    eax,0x5010413
    2b4f:	01 06                	add    DWORD PTR [rsi],eax
    2b51:	03 8c 7e 01 04 03 05 	add    ecx,DWORD PTR [rsi+rdi*2+0x5030401]
    2b58:	1b 03                	sbb    eax,DWORD PTR [rbx]
    2b5a:	f4                   	hlt
    2b5b:	01 74 58 04          	add    DWORD PTR [rax+rbx*2+0x4],esi
    2b5f:	01 05 01 03 8c 7e    	add    DWORD PTR [rip+0x7e8c0301],eax        # 7e8c2e66 <_end+0x7e8bce4e>
    2b65:	01 66 3c             	add    DWORD PTR [rsi+0x3c],esp
    2b68:	05 13 03 79 2e       	add    eax,0x2e790313
    2b6d:	05 0b 2d 05 01       	add    eax,0x1052d0b
    2b72:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2b73:	04 03                	add    al,0x3
    2b75:	05 1b 03 f4 01       	add    eax,0x1f4031b
    2b7a:	4a 04 01             	rex.WX add al,0x1
    2b7d:	05 01 03 8c 7e       	add    eax,0x7e8c0301
    2b82:	4a 04 03             	rex.WX add al,0x3
    2b85:	05 1b 03 f4 01       	add    eax,0x1f4031b
    2b8a:	74 58                	je     2be4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3e4>
    2b8c:	04 01                	add    al,0x1
    2b8e:	05 07 06 03 81       	add    eax,0x81030607
    2b93:	7e 01                	jle    2b96 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x396>
    2b95:	05 05 00 02 04       	add    eax,0x4020005
    2b9a:	01 06                	add    DWORD PTR [rsi],eax
    2b9c:	13 00                	adc    eax,DWORD PTR [rax]
    2b9e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2ba1:	08 90 00 02 04 01    	or     BYTE PTR [rax+0x1040200],dl
    2ba7:	58                   	pop    rax
    2ba8:	00 01                	add    BYTE PTR [rcx],al
    2baa:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
       3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
       4:	61                   	(bad)
       5:	74 31                	je     38 <__abi_tag-0x344>
       7:	36 00 36             	ss add BYTE PTR [rsi],dh
       a:	6c                   	ins    BYTE PTR es:[rdi],dx
       b:	64 69 76 5f 74 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x5a5f0074
      12:	5a 
      13:	53                   	push   rbx
      14:	74 33                	je     49 <__abi_tag-0x333>
      16:	61                   	(bad)
      17:	62 73 6c 00 5f       	(bad)
      1c:	5a                   	pop    rdx
      1d:	53                   	push   rbx
      1e:	74 33                	je     53 <__abi_tag-0x329>
      20:	61                   	(bad)
      21:	62 73 6e 00 71       	(bad)
      26:	73 6f                	jae    97 <__abi_tag-0x2e5>
      28:	72 74                	jb     9e <__abi_tag-0x2de>
      2a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
      2d:	72 74                	jb     a3 <__abi_tag-0x2d9>
      2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      30:	6c                   	ins    BYTE PTR es:[rdi],dx
      31:	64 00 47 4e          	add    BYTE PTR fs:[rdi+0x4e],al
      35:	55                   	push   rbp
      36:	20 43 2b             	and    BYTE PTR [rbx+0x2b],al
      39:	2b 31                	sub    esi,DWORD PTR [rcx]
      3b:	37                   	(bad)
      3c:	20 31                	and    BYTE PTR [rcx],dh
      3e:	33 2e                	xor    ebp,DWORD PTR [rsi]
      40:	33 2e                	xor    ebp,DWORD PTR [rsi]
      42:	30 20                	xor    BYTE PTR [rax],ah
      44:	2d 6d 73 73 65       	sub    eax,0x6573736d
      49:	34 2e                	xor    al,0x2e
      4b:	32 20                	xor    ah,BYTE PTR [rax]
      4d:	2d 6d 61 76 78       	sub    eax,0x7876616d
      52:	20 2d 6d 61 76 78    	and    BYTE PTR [rip+0x7876616d],ch        # 787661c5 <_end+0x787601ad>
      58:	32 20                	xor    ah,BYTE PTR [rax]
      5a:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
      5f:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
      65:	72 69                	jb     d0 <__abi_tag-0x2ac>
      67:	63 20                	movsxd esp,DWORD PTR [rax]
      69:	2d 6d 61 72 63       	sub    eax,0x6372616d
      6e:	68 3d 78 38 36       	push   0x3638783d
      73:	2d 36 34 20 2d       	sub    eax,0x2d203436
      78:	67 20 2d 4f 33 20 2d 	and    BYTE PTR [eip+0x2d20334f],ch        # 2d2033ce <_end+0x2d1fd3b6>
      7f:	66 61                	data16 (bad)
      81:	73 79                	jae    fc <__abi_tag-0x280>
      83:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      84:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
      87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      88:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      8a:	75 73                	jne    ff <__abi_tag-0x27d>
      8c:	2d 75 6e 77 69       	sub    eax,0x69776e75
      91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      92:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
      98:	65 73 20             	gs jae bb <__abi_tag-0x2c1>
      9b:	2d 66 73 74 61       	sub    eax,0x61747366
      a0:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
      a3:	70 72                	jo     117 <__abi_tag-0x265>
      a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      a6:	74 65                	je     10d <__abi_tag-0x26f>
      a8:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
      ac:	2d 73 74 72 6f       	sub    eax,0x6f727473
      b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      b2:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 6174741f <_end+0x61741407>
      b9:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
      bc:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
      c0:	68 2d 70 72 6f       	push   0x6f72702d
      c5:	74 65                	je     12c <__abi_tag-0x250>
      c7:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
      cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      cc:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d666438 <_end+0x2d660420>
      d2:	70 72                	jo     146 <__abi_tag-0x236>
      d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      d5:	74 65                	je     13c <__abi_tag-0x240>
      d7:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
      db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      dc:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
      df:	5f                   	pop    rdi
      e0:	71 75                	jno    157 <__abi_tag-0x225>
      e2:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
      e9:	74 00                	je     eb <__abi_tag-0x291>
      eb:	5f                   	pop    rdi
      ec:	5a                   	pop    rdx
      ed:	53                   	push   rbx
      ee:	74 33                	je     123 <__abi_tag-0x259>
      f0:	61                   	(bad)
      f1:	62 73 78 00 5f       	(bad)
      f6:	5f                   	pop    rdi
      f7:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
      fe:	73 74                	jae    174 <__abi_tag-0x208>
     100:	72 74                	jb     176 <__abi_tag-0x206>
     102:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     103:	6c                   	ins    BYTE PTR es:[rdi],dx
     104:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
     107:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     108:	72 74                	jb     17e <__abi_tag-0x1fe>
     10a:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     10d:	74 00                	je     10f <__abi_tag-0x26d>
     10f:	62 73 65 61 72       	(bad)
     114:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     117:	61                   	(bad)
     118:	74 65                	je     17f <__abi_tag-0x1fd>
     11a:	78 69                	js     185 <__abi_tag-0x1f7>
     11c:	74 00                	je     11e <__abi_tag-0x25e>
     11e:	5f                   	pop    rdi
     11f:	5a                   	pop    rdx
     120:	53                   	push   rbx
     121:	74 33                	je     156 <__abi_tag-0x226>
     123:	64 69 76 6c 6c 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x6c],0x5f5f006c
     12a:	5f 
     12b:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     132:	73 74                	jae    1a8 <__abi_tag-0x1d4>
     134:	72 74                	jb     1aa <__abi_tag-0x1d2>
     136:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     137:	6c                   	ins    BYTE PTR es:[rdi],dx
     138:	6c                   	ins    BYTE PTR es:[rdi],dx
     139:	00 53 45             	add    BYTE PTR [rbx+0x45],dl
     13c:	41 52                	push   r10
     13e:	43                   	rex.XB
     13f:	48 5f                	rex.W pop rdi
     141:	45                   	rex.RB
     142:	4c                   	rex.WR
     143:	45                   	rex.RB
     144:	4d 53                	rex.WRB push r11
     146:	5f                   	pop    rdi
     147:	41                   	rex.B
     148:	4d                   	rex.WRB
     149:	4f 55                	rex.WRXB push r13
     14b:	4e 54                	rex.WRX push rsp
     14d:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
     150:	69 6e 00 5f 5f 75 69 	imul   ebp,DWORD PTR [rsi+0x0],0x69755f5f
     157:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     158:	74 33                	je     18d <__abi_tag-0x1ef>
     15a:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
     15d:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
     161:	74 5f                	je     1c2 <__abi_tag-0x1ba>
     163:	61                   	(bad)
     164:	6d                   	ins    DWORD PTR es:[rdi],dx
     165:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     166:	75 6e                	jne    1d6 <__abi_tag-0x1a6>
     168:	74 00                	je     16a <__abi_tag-0x212>
     16a:	67 65 74 65          	addr32 gs je 1d3 <__abi_tag-0x1a9>
     16e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     16f:	76 00                	jbe    171 <__abi_tag-0x20b>
     171:	59                   	pop    rcx
     172:	4d                   	rex.WRB
     173:	4d 5f                	rex.WRB pop r15
     175:	42 59                	rex.X pop rcx
     177:	54                   	push   rsp
     178:	45 53                	rex.RB push r11
     17a:	5f                   	pop    rdi
     17b:	53                   	push   rbx
     17c:	49 5a                	rex.WB pop r10
     17e:	45 00 66 6c          	add    BYTE PTR [r14+0x6c],r12b
     182:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     183:	61                   	(bad)
     184:	74 00                	je     186 <__abi_tag-0x1f6>
     186:	6d                   	ins    DWORD PTR es:[rdi],dx
     187:	62                   	(bad)
     188:	74 6f                	je     1f9 <__abi_tag-0x183>
     18a:	77 63                	ja     1ef <__abi_tag-0x18d>
     18c:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
     190:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
     195:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     199:	74 00                	je     19b <__abi_tag-0x1e1>
     19b:	6c                   	ins    BYTE PTR es:[rdi],dx
     19c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     19d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     19e:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
     1a3:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     1a7:	73 69                	jae    212 <__abi_tag-0x16a>
     1a9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1ab:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     1b0:	74 00                	je     1b2 <__abi_tag-0x1ca>
     1b2:	5f                   	pop    rdi
     1b3:	5a                   	pop    rdx
     1b4:	37                   	(bad)
     1b5:	74 65                	je     21c <__abi_tag-0x160>
     1b7:	73 74                	jae    22d <__abi_tag-0x14f>
     1b9:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
     1bb:	6c                   	ins    BYTE PTR es:[rdi],dx
     1bc:	50                   	push   rax
     1bd:	4b 63 6a 53          	rex.WXB movsxd rbp,DWORD PTR [r10+0x53]
     1c1:	30 5f 6a             	xor    BYTE PTR [rdi+0x6a],bl
     1c4:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     1c7:	72 74                	jb     23d <__abi_tag-0x13f>
     1c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1ca:	64 00 74 65 73       	add    BYTE PTR fs:[rbp+riz*2+0x73],dh
     1cf:	74 41                	je     212 <__abi_tag-0x16a>
     1d1:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d2:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d3:	00 37                	add    BYTE PTR [rdi],dh
     1d5:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d6:	6c                   	ins    BYTE PTR es:[rdi],dx
     1d7:	64 69 76 5f 74 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x5a5f0074
     1de:	5a 
     1df:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     1e3:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1e5:	75 5f                	jne    246 <__abi_tag-0x136>
     1e7:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     1ea:	33 64 69 76          	xor    esp,DWORD PTR [rcx+rbp*2+0x76]
     1ee:	45 78 78             	rex.RB js 269 <__abi_tag-0x113>
     1f1:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     1f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1f5:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
     1f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1fa:	69 00 61 72 67 76    	imul   eax,DWORD PTR [rax],0x76677261
     200:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     203:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     204:	6c                   	ins    BYTE PTR es:[rdi],dx
     205:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
     208:	73 74                	jae    27e <__abi_tag-0xfe>
     20a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     20b:	6d                   	ins    DWORD PTR es:[rdi],dx
     20c:	62 73 00 5f 5f       	(bad)
     211:	69 6e 74 31 32 38 00 	imul   ebp,DWORD PTR [rsi+0x74],0x383231
     218:	6c                   	ins    BYTE PTR es:[rdi],dx
     219:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     21a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     21b:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
     220:	62 6c 65             	(bad)
     223:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
     226:	73 69                	jae    291 <__abi_tag-0xeb>
     228:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     22a:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     22f:	61                   	(bad)
     230:	72 00                	jb     232 <__abi_tag-0x14a>
     232:	61                   	(bad)
     233:	72 67                	jb     29c <__abi_tag-0xe0>
     235:	63 00                	movsxd eax,DWORD PTR [rax]
     237:	5f                   	pop    rdi
     238:	5f                   	pop    rdi
     239:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     23b:	75 5f                	jne    29c <__abi_tag-0xe0>
     23d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     240:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     243:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     24a:	73 74                	jae    2c0 <__abi_tag-0xbc>
     24c:	72 74                	jb     2c2 <__abi_tag-0xba>
     24e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     24f:	75 6c                	jne    2bd <__abi_tag-0xbf>
     251:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     254:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     255:	6c                   	ins    BYTE PTR es:[rdi],dx
     256:	6c                   	ins    BYTE PTR es:[rdi],dx
     257:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     25a:	6c                   	ins    BYTE PTR es:[rdi],dx
     25b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     25d:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     260:	73 74                	jae    2d6 <__abi_tag-0xa6>
     262:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     263:	77 63                	ja     2c8 <__abi_tag-0xb4>
     265:	73 00                	jae    267 <__abi_tag-0x115>
     267:	77 63                	ja     2cc <__abi_tag-0xb0>
     269:	74 6f                	je     2da <__abi_tag-0xa2>
     26b:	6d                   	ins    DWORD PTR es:[rdi],dx
     26c:	62                   	(bad)
     26d:	00 71 75             	add    BYTE PTR [rcx+0x75],dh
     270:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     271:	74 00                	je     273 <__abi_tag-0x109>
     273:	73 68                	jae    2dd <__abi_tag-0x9f>
     275:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     276:	72 74                	jb     2ec <__abi_tag-0x90>
     278:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     27b:	73 69                	jae    2e6 <__abi_tag-0x96>
     27d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     27f:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     284:	74 00                	je     286 <__abi_tag-0xf6>
     286:	77 63                	ja     2eb <__abi_tag-0x91>
     288:	68 61 72 5f 74       	push   0x745f7261
     28d:	00 4c 4f 41          	add    BYTE PTR [rdi+rcx*2+0x41],cl
     291:	44 5f                	rex.R pop rdi
     293:	46                   	rex.RX
     294:	41                   	rex.B
     295:	43 54                	rex.XB push r12
     297:	4f 52                	rex.WRXB push r10
     299:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
     29d:	74 5f                	je     2fe <__abi_tag-0x7e>
     29f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2a0:	61                   	(bad)
     2a1:	6d                   	ins    DWORD PTR es:[rdi],dx
     2a2:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
     2a6:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     2a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2a9:	61                   	(bad)
     2aa:	74 31                	je     2dd <__abi_tag-0x9f>
     2ac:	32 38                	xor    bh,BYTE PTR [rax]
     2ae:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     2b1:	72 74                	jb     327 <__abi_tag-0x55>
     2b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2b4:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     2b8:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     2bf:	73 74                	jae    335 <__abi_tag-0x47>
     2c1:	72 74                	jb     337 <__abi_tag-0x45>
     2c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2c4:	75 6c                	jne    332 <__abi_tag-0x4a>
     2c6:	6c                   	ins    BYTE PTR es:[rdi],dx
     2c7:	00 6c 6c 64          	add    BYTE PTR [rsp+rbp*2+0x64],ch
     2cb:	69 76 00 5f 5f 62 66 	imul   esi,DWORD PTR [rsi+0x0],0x66625f5f
     2d2:	31 36                	xor    DWORD PTR [rsi],esi
     2d4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2d7:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     2da:	70 61                	jo     33d <__abi_tag-0x3f>
     2dc:	72 5f                	jb     33d <__abi_tag-0x3f>
     2de:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
     2e0:	5f                   	pop    rdi
     2e1:	74 00                	je     2e3 <__abi_tag-0x99>
     2e3:	35 64 69 76 5f       	xor    eax,0x5f766964
     2e8:	74 00                	je     2ea <__abi_tag-0x92>
     2ea:	5f                   	pop    rdi
     2eb:	5f                   	pop    rdi
     2ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2ed:	70 74                	jo     363 <__abi_tag-0x19>
     2ef:	72 00                	jb     2f1 <__abi_tag-0x8b>
     2f1:	73 72                	jae    365 <__abi_tag-0x17>
     2f3:	61                   	(bad)
     2f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2f5:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     2f9:	53                   	push   rbx
     2fa:	74 33                	je     32f <__abi_tag-0x4d>
     2fc:	61                   	(bad)
     2fd:	62 73 64 00 5f       	(bad)
     302:	5a                   	pop    rdx
     303:	53                   	push   rbx
     304:	74 33                	je     339 <__abi_tag-0x43>
     306:	61                   	(bad)
     307:	62 73 65 00 5f       	(bad)
     30c:	5a                   	pop    rdx
     30d:	53                   	push   rbx
     30e:	74 33                	je     343 <__abi_tag-0x39>
     310:	61                   	(bad)
     311:	62 73 66 00 5f       	(bad)
     316:	5a                   	pop    rdx
     317:	53                   	push   rbx
     318:	74 33                	je     34d <__abi_tag-0x2f>
     31a:	61                   	(bad)
     31b:	62 73 67 00 5f       	(bad)
     320:	5a                   	pop    rdx
     321:	31 31                	xor    DWORD PTR [rcx],esi
     323:	68 61 73 68 4d       	push   0x4d687361
     328:	61                   	(bad)
     329:	70 44                	jo     36f <__abi_tag-0xd>
     32b:	74 6f                	je     39c <__abi_tag+0x20>
     32d:	72 50                	jb     37f <__abi_tag+0x3>
     32f:	37                   	(bad)
     330:	48 61                	rex.W (bad)
     332:	73 68                	jae    39c <__abi_tag+0x20>
     334:	4d 61                	rex.WRB (bad)
     336:	70 00                	jo     338 <__abi_tag-0x44>
     338:	75 69                	jne    3a3 <__abi_tag+0x27>
     33a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     33b:	74 70                	je     3ad <__abi_tag+0x31>
     33d:	74 72                	je     3b1 <__abi_tag+0x35>
     33f:	5f                   	pop    rdi
     340:	74 00                	je     342 <__abi_tag-0x3a>
     342:	5f                   	pop    rdi
     343:	5a                   	pop    rdx
     344:	31 33                	xor    DWORD PTR [rbx],esi
     346:	5f                   	pop    rdi
     347:	6d                   	ins    DWORD PTR es:[rdi],dx
     348:	6d                   	ins    DWORD PTR es:[rdi],dx
     349:	5f                   	pop    rdi
     34a:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     34d:	33 32                	xor    esi,DWORD PTR [rdx]
     34f:	5f                   	pop    rdi
     350:	75 36                	jne    388 <__abi_tag+0xc>
     352:	34 79                	xor    al,0x79
     354:	79 00                	jns    356 <__abi_tag-0x26>
     356:	64 61                	fs (bad)
     358:	74 61                	je     3bb <__abi_tag+0x3f>
     35a:	5f                   	pop    rdi
     35b:	74 00                	je     35d <__abi_tag-0x1f>
     35d:	68 61 73 68 4d       	push   0x4d687361
     362:	61                   	(bad)
     363:	70 43                	jo     3a8 <__abi_tag+0x2c>
     365:	74 6f                	je     3d6 <__abi_tag+0x5a>
     367:	72 00                	jb     369 <__abi_tag-0x13>
     369:	77 6f                	ja     3da <__abi_tag+0x5e>
     36b:	72 64                	jb     3d1 <__abi_tag+0x55>
     36d:	5f                   	pop    rdi
     36e:	62 65 67 69 6e       	(bad)
     373:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
     376:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     378:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     37a:	74 73                	je     3ef <__abi_tag+0x73>
     37c:	5f                   	pop    rdi
     37d:	61                   	(bad)
     37e:	6d                   	ins    DWORD PTR es:[rdi],dx
     37f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     380:	75 6e                	jne    3f0 <__abi_tag+0x74>
     382:	74 00                	je     384 <__abi_tag+0x8>
     384:	5f                   	pop    rdi
     385:	5f                   	pop    rdi
     386:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     389:	5f                   	pop    rdi
     38a:	5a                   	pop    rdx
     38b:	31 36                	xor    DWORD PTR [rsi],esi
     38d:	62 75 69 6c 64       	(bad)
     392:	53                   	push   rbx
     393:	74 72                	je     407 <__abi_tag+0x8b>
     395:	69 6e 67 41 72 72 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
     39c:	79 50                	jns    3ee <__abi_tag+0x72>
     39e:	63 6a 00             	movsxd ebp,DWORD PTR [rdx+0x0]
     3a1:	61                   	(bad)
     3a2:	6c                   	ins    BYTE PTR es:[rdi],dx
     3a3:	69 67 6e 65 64 5f 74 	imul   esp,DWORD PTR [rdi+0x6e],0x745f6465
     3aa:	65 78 74             	gs js  421 <__abi_tag+0xa5>
     3ad:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     3b0:	72 69                	jb     41b <__abi_tag+0x9f>
     3b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3b3:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     3b7:	73 72                	jae    42b <__abi_tag+0xaf>
     3b9:	63 00                	movsxd eax,DWORD PTR [rax]
     3bb:	66 72 65             	data16 jb 423 <__abi_tag+0xa7>
     3be:	65 00 68 61          	add    BYTE PTR gs:[rax+0x61],ch
     3c2:	73 68                	jae    42c <__abi_tag+0xb0>
     3c4:	31 00                	xor    DWORD PTR [rax],eax
     3c6:	68 61 73 68 32       	push   0x32687361
     3cb:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     3ce:	73 68                	jae    438 <__abi_tag+0xbc>
     3d0:	33 00                	xor    eax,DWORD PTR [rax]
     3d2:	68 61 73 68 34       	push   0x34687361
     3d7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     3da:	36 72 65             	ss jb  442 <__abi_tag+0xc6>
     3dd:	73 69                	jae    448 <__abi_tag+0xcc>
     3df:	7a 65                	jp     446 <__abi_tag+0xca>
     3e1:	50                   	push   rax
     3e2:	37                   	(bad)
     3e3:	48 61                	rex.W (bad)
     3e5:	73 68                	jae    44f <__abi_tag+0xd3>
     3e7:	4d 61                	rex.WRB (bad)
     3e9:	70 6a                	jo     455 <__abi_tag+0xd9>
     3eb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     3ee:	50                   	push   rax
     3ef:	52                   	push   rdx
     3f0:	45 54                	rex.RB push r12
     3f2:	54                   	push   rsp
     3f3:	59                   	pop    rcx
     3f4:	5f                   	pop    rdi
     3f5:	46 55                	rex.RX push rbp
     3f7:	4e                   	rex.WRX
     3f8:	43 54                	rex.XB push r12
     3fa:	49                   	rex.WB
     3fb:	4f                   	rex.WRXB
     3fc:	4e 5f                	rex.WRX pop rdi
     3fe:	5f                   	pop    rdi
     3ff:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
     402:	6d                   	ins    DWORD PTR es:[rdi],dx
     403:	5f                   	pop    rdi
     404:	65 78 74             	gs js  47b <__abi_tag+0xff>
     407:	72 61                	jb     46a <__abi_tag+0xee>
     409:	63 74 5f 65          	movsxd esi,DWORD PTR [rdi+rbx*2+0x65]
     40d:	70 69                	jo     478 <__abi_tag+0xfc>
     40f:	36 34 00             	ss xor al,0x0
     412:	68 61 73 68 4d       	push   0x4d687361
     417:	61                   	(bad)
     418:	70 41                	jo     45b <__abi_tag+0xdf>
     41a:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     41e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     420:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     422:	74 00                	je     424 <__abi_tag+0xa8>
     424:	5f                   	pop    rdi
     425:	6d                   	ins    DWORD PTR es:[rdi],dx
     426:	6d                   	ins    DWORD PTR es:[rdi],dx
     427:	32 35 36 5f 65 78    	xor    dh,BYTE PTR [rip+0x78655f36]        # 78656363 <_end+0x7865034b>
     42d:	74 72                	je     4a1 <__abi_tag+0x125>
     42f:	61                   	(bad)
     430:	63 74 66 31          	movsxd esi,DWORD PTR [rsi+riz*2+0x31]
     434:	32 38                	xor    bh,BYTE PTR [rax]
     436:	5f                   	pop    rdi
     437:	73 69                	jae    4a2 <__abi_tag+0x126>
     439:	32 35 36 00 70 6f    	xor    dh,BYTE PTR [rip+0x6f700036]        # 6f700475 <_end+0x6f6fa45d>
     43f:	70 4c                	jo     48d <__abi_tag+0x111>
     441:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     448:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     44b:	73 68                	jae    4b5 <__abi_tag+0x139>
     44d:	5f                   	pop    rdi
     44e:	66 75 6e             	data16 jne 4bf <__abi_tag+0x143>
     451:	63 00                	movsxd eax,DWORD PTR [rax]
     453:	64 75 6d             	fs jne 4c3 <__abi_tag+0x147>
     456:	6d                   	ins    DWORD PTR es:[rdi],dx
     457:	79 00                	jns    459 <__abi_tag+0xdd>
     459:	73 75                	jae    4d0 <__abi_tag+0x154>
     45b:	70 70                	jo     4cd <__abi_tag+0x151>
     45d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     45e:	73 65                	jae    4c5 <__abi_tag+0x149>
     460:	64 5f                	fs pop rdi
     462:	69 6e 64 65 78 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007865
     469:	5a                   	pop    rdx
     46a:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     46e:	74 44                	je     4b4 <__abi_tag+0x138>
     470:	74 6f                	je     4e1 <__abi_tag+0x165>
     472:	72 50                	jb     4c4 <__abi_tag+0x148>
     474:	34 4c                	xor    al,0x4c
     476:	69 73 74 00 5f 5f 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d5f5f00
     47d:	32 35 36 69 00 68    	xor    dh,BYTE PTR [rip+0x68006936]        # 68006db9 <_end+0x68000da1>
     483:	61                   	(bad)
     484:	73 68                	jae    4ee <__abi_tag+0x172>
     486:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
     489:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     48b:	5f                   	pop    rdi
     48c:	69 6e 78 00 5f 5f 6c 	imul   ebp,DWORD PTR [rsi+0x78],0x6c5f5f00
     493:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     495:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     498:	72 6e                	jb     508 <__abi_tag+0x18c>
     49a:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     49d:	00 70 72             	add    BYTE PTR [rax+0x72],dh
     4a0:	65 76 5f             	gs jbe 502 <__abi_tag+0x186>
     4a3:	69 6e 78 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x78],0x315a5f00
     4aa:	37                   	(bad)
     4ab:	5f                   	pop    rdi
     4ac:	6d                   	ins    DWORD PTR es:[rdi],dx
     4ad:	6d                   	ins    DWORD PTR es:[rdi],dx
     4ae:	32 35 36 5f 6c 6f    	xor    dh,BYTE PTR [rip+0x6f6c5f36]        # 6f6c63ea <_end+0x6f6c03d2>
     4b4:	61                   	(bad)
     4b5:	64 5f                	fs pop rdi
     4b7:	73 69                	jae    522 <__abi_tag+0x1a6>
     4b9:	32 35 36 50 4b 44    	xor    dh,BYTE PTR [rip+0x444b5036]        # 444b54f5 <_end+0x444af4dd>
     4bf:	76 34                	jbe    4f5 <__abi_tag+0x179>
     4c1:	5f                   	pop    rdi
     4c2:	78 00                	js     4c4 <__abi_tag+0x148>
     4c4:	6c                   	ins    BYTE PTR es:[rdi],dx
     4c5:	69 73 74 44 74 6f 72 	imul   esi,DWORD PTR [rbx+0x74],0x726f7444
     4cc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     4cf:	31 37                	xor    DWORD PTR [rdi],esi
     4d1:	5f                   	pop    rdi
     4d2:	6d                   	ins    DWORD PTR es:[rdi],dx
     4d3:	6d                   	ins    DWORD PTR es:[rdi],dx
     4d4:	5f                   	pop    rdi
     4d5:	65 78 74             	gs js  54c <__abi_tag+0x1d0>
     4d8:	72 61                	jb     53b <__abi_tag+0x1bf>
     4da:	63 74 5f 65          	movsxd esi,DWORD PTR [rdi+rbx*2+0x65]
     4de:	70 69                	jo     549 <__abi_tag+0x1cd>
     4e0:	36 34 44             	ss xor al,0x44
     4e3:	76 32                	jbe    517 <__abi_tag+0x19b>
     4e5:	5f                   	pop    rdi
     4e6:	78 69                	js     551 <__abi_tag+0x1d5>
     4e8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     4eb:	31 33                	xor    DWORD PTR [rbx],esi
     4ed:	67 65 74 4c          	addr32 gs je 53d <__abi_tag+0x1c1>
     4f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4f2:	61                   	(bad)
     4f3:	64 46 61             	fs rex.RX (bad)
     4f6:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     4fa:	50                   	push   rax
     4fb:	37                   	(bad)
     4fc:	48 61                	rex.W (bad)
     4fe:	73 68                	jae    568 <__abi_tag+0x1ec>
     500:	4d 61                	rex.WRB (bad)
     502:	70 00                	jo     504 <__abi_tag+0x188>
     504:	67 65 74 4c          	addr32 gs je 554 <__abi_tag+0x1d8>
     508:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     509:	61                   	(bad)
     50a:	64 46 61             	fs rex.RX (bad)
     50d:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     511:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     514:	62 75 69 6c 74       	(bad)
     519:	69 6e 5f 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x5f],0x656d5f5f
     520:	6d                   	ins    DWORD PTR es:[rdi],dx
     521:	73 65                	jae    588 <__abi_tag+0x20c>
     523:	74 5f                	je     584 <__abi_tag+0x208>
     525:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     528:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
     52c:	65 73 00             	gs jae 52f <__abi_tag+0x1b3>
     52f:	5f                   	pop    rdi
     530:	5f                   	pop    rdi
     531:	62 75 69 6c 74       	(bad)
     536:	69 6e 5f 5f 5f 73 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74735f5f
     53d:	72 6e                	jb     5ad <__abi_tag+0x231>
     53f:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     542:	5f                   	pop    rdi
     543:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     546:	00 62 6f             	add    BYTE PTR [rdx+0x6f],ah
     549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     54a:	6c                   	ins    BYTE PTR es:[rdi],dx
     54b:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
     54e:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
     555:	6c                   	ins    BYTE PTR es:[rdi],dx
     556:	6c                   	ins    BYTE PTR es:[rdi],dx
     557:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     558:	63 00                	movsxd eax,DWORD PTR [rax]
     55a:	6c                   	ins    BYTE PTR es:[rdi],dx
     55b:	69 73 74 73 00 6c 69 	imul   esi,DWORD PTR [rbx+0x74],0x696c0073
     562:	73 74                	jae    5d8 <__abi_tag+0x25c>
     564:	43 74 6f             	rex.XB je 5d6 <__abi_tag+0x25a>
     567:	72 00                	jb     569 <__abi_tag+0x1ed>
     569:	5f                   	pop    rdi
     56a:	5a                   	pop    rdx
     56b:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     56f:	74 43                	je     5b4 <__abi_tag+0x238>
     571:	74 6f                	je     5e2 <__abi_tag+0x266>
     573:	72 76                	jb     5eb <__abi_tag+0x26f>
     575:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     578:	31 33                	xor    DWORD PTR [rbx],esi
     57a:	73 65                	jae    5e1 <__abi_tag+0x265>
     57c:	61                   	(bad)
     57d:	72 63                	jb     5e2 <__abi_tag+0x266>
     57f:	68 45 6c 65 6d       	push   0x6d656c45
     584:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     586:	74 50                	je     5d8 <__abi_tag+0x25c>
     588:	34 4c                	xor    al,0x4c
     58a:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     591:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     598:	5f                   	pop    rdi
     599:	64 65 73 74          	fs gs jae 611 <__abi_tag+0x295>
     59d:	00 70 75             	add    BYTE PTR [rax+0x75],dh
     5a0:	73 68                	jae    60a <__abi_tag+0x28e>
     5a2:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     5a9:	6d 
     5aa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5ad:	62 75 69 6c 74       	(bad)
     5b2:	69 6e 5f 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x63727473
     5b9:	68 72 00 74 61       	push   0x61740072
     5be:	69 6c 5f 69 6e 78 00 	imul   ebp,DWORD PTR [rdi+rbx*2+0x69],0x7300786e
     5c5:	73 
     5c6:	65 61                	gs (bad)
     5c8:	72 63                	jb     62d <__abi_tag+0x2b1>
     5ca:	68 45 6c 65 6d       	push   0x6d656c45
     5cf:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5d1:	74 00                	je     5d3 <__abi_tag+0x257>
     5d3:	5f                   	pop    rdi
     5d4:	5f                   	pop    rdi
     5d5:	75 69                	jne    640 <__abi_tag+0x2c4>
     5d7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5d8:	74 36                	je     610 <__abi_tag+0x294>
     5da:	34 5f                	xor    al,0x5f
     5dc:	74 00                	je     5de <__abi_tag+0x262>
     5de:	5f                   	pop    rdi
     5df:	5a                   	pop    rdx
     5e0:	32 34 5f             	xor    dh,BYTE PTR [rdi+rbx*2]
     5e3:	6d                   	ins    DWORD PTR es:[rdi],dx
     5e4:	6d                   	ins    DWORD PTR es:[rdi],dx
     5e5:	32 35 36 5f 65 78    	xor    dh,BYTE PTR [rip+0x78655f36]        # 78656521 <_end+0x78650509>
     5eb:	74 72                	je     65f <__abi_tag+0x2e3>
     5ed:	61                   	(bad)
     5ee:	63 74 66 31          	movsxd esi,DWORD PTR [rsi+riz*2+0x31]
     5f2:	32 38                	xor    bh,BYTE PTR [rax]
     5f4:	5f                   	pop    rdi
     5f5:	73 69                	jae    660 <__abi_tag+0x2e4>
     5f7:	32 35 36 44 76 34    	xor    dh,BYTE PTR [rip+0x34764436]        # 34764a33 <_end+0x3475ea1b>
     5fd:	5f                   	pop    rdi
     5fe:	78 69                	js     669 <__abi_tag+0x2ed>
     600:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
     603:	77 5f                	ja     664 <__abi_tag+0x2e8>
     605:	68 61 73 68 4d       	push   0x4d687361
     60a:	61                   	(bad)
     60b:	70 00                	jo     60d <__abi_tag+0x291>
     60d:	72 65                	jb     674 <__abi_tag+0x2f8>
     60f:	68 61 73 68 41       	push   0x41687361
     614:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     618:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     61a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     61c:	74 00                	je     61e <__abi_tag+0x2a2>
     61e:	5f                   	pop    rdi
     61f:	5f                   	pop    rdi
     620:	61                   	(bad)
     621:	73 73                	jae    696 <__abi_tag+0x31a>
     623:	65 72 74             	gs jb  69a <__abi_tag+0x31e>
     626:	5f                   	pop    rdi
     627:	66 61                	data16 (bad)
     629:	69 6c 00 68 61 73 68 	imul   ebp,DWORD PTR [rax+rax*1+0x68],0x4d687361
     630:	4d 
     631:	61                   	(bad)
     632:	70 53                	jo     687 <__abi_tag+0x30b>
     634:	65 61                	gs (bad)
     636:	72 63                	jb     69b <__abi_tag+0x31f>
     638:	68 45 6c 65 6d       	push   0x6d656c45
     63d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     63f:	74 00                	je     641 <__abi_tag+0x2c5>
     641:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     644:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     645:	74 65                	je     6ac <__abi_tag+0x330>
     647:	72 00                	jb     649 <__abi_tag+0x2cd>
     649:	6c                   	ins    BYTE PTR es:[rdi],dx
     64a:	69 73 74 5f 65 6c 65 	imul   esi,DWORD PTR [rbx+0x74],0x656c655f
     651:	6d                   	ins    DWORD PTR es:[rdi],dx
     652:	73 00                	jae    654 <__abi_tag+0x2d8>
     654:	5f                   	pop    rdi
     655:	5f                   	pop    rdi
     656:	76 38                	jbe    690 <__abi_tag+0x314>
     658:	73 69                	jae    6c3 <__abi_tag+0x347>
     65a:	00 6c 65 6e          	add    BYTE PTR [rbp+riz*2+0x6e],ch
     65e:	67 74 68             	addr32 je 6c9 <__abi_tag+0x34d>
     661:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
     664:	6d                   	ins    DWORD PTR es:[rdi],dx
     665:	32 35 36 5f 65 78    	xor    dh,BYTE PTR [rip+0x78655f36]        # 786565a1 <_end+0x78650589>
     66b:	74 72                	je     6df <__abi_tag+0x363>
     66d:	61                   	(bad)
     66e:	63 74 5f 65          	movsxd esi,DWORD PTR [rdi+rbx*2+0x65]
     672:	70 69                	jo     6dd <__abi_tag+0x361>
     674:	36 34 00             	ss xor al,0x0
     677:	5f                   	pop    rdi
     678:	5f                   	pop    rdi
     679:	76 32                	jbe    6ad <__abi_tag+0x331>
     67b:	64 69 00 68 61 73 68 	imul   eax,DWORD PTR fs:[rax],0x68736168
     682:	4d 61                	rex.WRB (bad)
     684:	70 50                	jo     6d6 <__abi_tag+0x35a>
     686:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     687:	70 45                	jo     6ce <__abi_tag+0x352>
     689:	6c                   	ins    BYTE PTR es:[rdi],dx
     68a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     68c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     68e:	74 00                	je     690 <__abi_tag+0x314>
     690:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     691:	65 78 74             	gs js  708 <__abi_tag+0x38c>
     694:	5f                   	pop    rdi
     695:	69 6e 78 00 5f 5f 6d 	imul   ebp,DWORD PTR [rsi+0x78],0x6d5f5f00
     69c:	31 32                	xor    DWORD PTR [rdx],esi
     69e:	38 69 00             	cmp    BYTE PTR [rcx+0x0],ch
     6a1:	5f                   	pop    rdi
     6a2:	5a                   	pop    rdx
     6a3:	31 31                	xor    DWORD PTR [rcx],esi
     6a5:	68 61 73 68 4d       	push   0x4d687361
     6aa:	61                   	(bad)
     6ab:	70 43                	jo     6f0 <__abi_tag+0x374>
     6ad:	74 6f                	je     71e <__abi_tag+0x3a2>
     6af:	72 50                	jb     701 <__abi_tag+0x385>
     6b1:	46 6a 38             	rex.RX push 0x38
     6b4:	73 74                	jae    72a <__abi_tag+0x3ae>
     6b6:	72 69                	jb     721 <__abi_tag+0x3a5>
     6b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6b9:	67 5f                	addr32 pop rdi
     6bb:	74 45                	je     702 <__abi_tag+0x386>
     6bd:	6a 00                	push   0x0
     6bf:	5f                   	pop    rdi
     6c0:	5a                   	pop    rdx
     6c1:	32 30                	xor    dh,BYTE PTR [rax]
     6c3:	5f                   	pop    rdi
     6c4:	6d                   	ins    DWORD PTR es:[rdi],dx
     6c5:	6d                   	ins    DWORD PTR es:[rdi],dx
     6c6:	32 35 36 5f 65 78    	xor    dh,BYTE PTR [rip+0x78655f36]        # 78656602 <_end+0x786505ea>
     6cc:	74 72                	je     740 <__abi_tag+0x3c4>
     6ce:	61                   	(bad)
     6cf:	63 74 5f 65          	movsxd esi,DWORD PTR [rdi+rbx*2+0x65]
     6d3:	70 69                	jo     73e <__abi_tag+0x3c2>
     6d5:	36 34 44             	ss xor al,0x44
     6d8:	76 34                	jbe    70e <__abi_tag+0x392>
     6da:	5f                   	pop    rdi
     6db:	78 69                	js     746 <__abi_tag+0x3ca>
     6dd:	00 62 75             	add    BYTE PTR [rdx+0x75],ah
     6e0:	69 6c 64 53 74 72 69 	imul   ebp,DWORD PTR [rsp+riz*2+0x53],0x6e697274
     6e7:	6e 
     6e8:	67 41 72 72          	addr32 rex.B jb 75e <__abi_tag+0x3e2>
     6ec:	61                   	(bad)
     6ed:	79 00                	jns    6ef <__abi_tag+0x373>
     6ef:	5f                   	pop    rdi
     6f0:	5a                   	pop    rdx
     6f1:	31 31                	xor    DWORD PTR [rcx],esi
     6f3:	70 6f                	jo     764 <__abi_tag+0x3e8>
     6f5:	70 4c                	jo     743 <__abi_tag+0x3c7>
     6f7:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     6fe:	50                   	push   rax
     6ff:	34 4c                	xor    al,0x4c
     701:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     708:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     70f:	5a                   	pop    rdx
     710:	31 32                	xor    DWORD PTR [rdx],esi
     712:	70 75                	jo     789 <__abi_tag+0x40d>
     714:	73 68                	jae    77e <__abi_tag+0x402>
     716:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     71d:	6d 
     71e:	50                   	push   rax
     71f:	34 4c                	xor    al,0x4c
     721:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     728:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     72f:	5f                   	pop    rdi
     730:	73 74                	jae    7a6 <__abi_tag+0x42a>
     732:	61                   	(bad)
     733:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     736:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     739:	5f                   	pop    rdi
     73a:	66 61                	data16 (bad)
     73c:	69 6c 00 5f 6d 6d 32 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x35326d6d
     743:	35 
     744:	36 5f                	ss pop rdi
     746:	6c                   	ins    BYTE PTR es:[rdi],dx
     747:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     748:	61                   	(bad)
     749:	64 5f                	fs pop rdi
     74b:	73 69                	jae    7b6 <__abi_tag+0x43a>
     74d:	32 35 36 00 63 61    	xor    dh,BYTE PTR [rip+0x61630036]        # 61630789 <_end+0x6162a771>
     753:	6c                   	ins    BYTE PTR es:[rdi],dx
     754:	6c                   	ins    BYTE PTR es:[rdi],dx
     755:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     756:	63 00                	movsxd eax,DWORD PTR [rax]
     758:	5f                   	pop    rdi
     759:	5a                   	pop    rdx
     75a:	32 30                	xor    dh,BYTE PTR [rax]
     75c:	68 61 73 68 4d       	push   0x4d687361
     761:	61                   	(bad)
     762:	70 53                	jo     7b7 <__abi_tag+0x43b>
     764:	65 61                	gs (bad)
     766:	72 63                	jb     7cb <__abi_tag+0x44f>
     768:	68 45 6c 65 6d       	push   0x6d656c45
     76d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     76f:	74 50                	je     7c1 <__abi_tag+0x445>
     771:	37                   	(bad)
     772:	48 61                	rex.W (bad)
     774:	73 68                	jae    7de <__abi_tag+0x462>
     776:	4d 61                	rex.WRB (bad)
     778:	70 38                	jo     7b2 <__abi_tag+0x436>
     77a:	73 74                	jae    7f0 <__abi_tag+0x474>
     77c:	72 69                	jb     7e7 <__abi_tag+0x46b>
     77e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     77f:	67 5f                	addr32 pop rdi
     781:	74 00                	je     783 <__abi_tag+0x407>
     783:	73 74                	jae    7f9 <__abi_tag+0x47d>
     785:	72 69                	jb     7f0 <__abi_tag+0x474>
     787:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     788:	67 5f                	addr32 pop rdi
     78a:	61                   	(bad)
     78b:	72 72                	jb     7ff <__abi_tag+0x483>
     78d:	61                   	(bad)
     78e:	79 00                	jns    790 <__abi_tag+0x414>
     790:	5f                   	pop    rdi
     791:	5a                   	pop    rdx
     792:	31 37                	xor    DWORD PTR [rdi],esi
     794:	68 61 73 68 4d       	push   0x4d687361
     799:	61                   	(bad)
     79a:	70 41                	jo     7dd <__abi_tag+0x461>
     79c:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     7a0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     7a2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     7a4:	74 50                	je     7f6 <__abi_tag+0x47a>
     7a6:	37                   	(bad)
     7a7:	48 61                	rex.W (bad)
     7a9:	73 68                	jae    813 <__abi_tag+0x497>
     7ab:	4d 61                	rex.WRB (bad)
     7ad:	70 38                	jo     7e7 <__abi_tag+0x46b>
     7af:	73 74                	jae    825 <__abi_tag+0x4a9>
     7b1:	72 69                	jb     81c <__abi_tag+0x4a0>
     7b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b4:	67 5f                	addr32 pop rdi
     7b6:	74 00                	je     7b8 <__abi_tag+0x43c>
     7b8:	4c                   	rex.WR
     7b9:	49 53                	rex.WB push r11
     7bb:	54                   	push   rsp
     7bc:	5f                   	pop    rdi
     7bd:	42                   	rex.X
     7be:	41 53                	push   r11
     7c0:	45 5f                	rex.RB pop r15
     7c2:	43                   	rex.XB
     7c3:	41 50                	push   r8
     7c5:	41                   	rex.B
     7c6:	43                   	rex.XB
     7c7:	49 54                	rex.WB push r12
     7c9:	59                   	pop    rcx
     7ca:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     7cd:	31 37                	xor    DWORD PTR [rdi],esi
     7cf:	68 61 73 68 4d       	push   0x4d687361
     7d4:	61                   	(bad)
     7d5:	70 50                	jo     827 <__abi_tag+0x4ab>
     7d7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7d8:	70 45                	jo     81f <__abi_tag+0x4a3>
     7da:	6c                   	ins    BYTE PTR es:[rdi],dx
     7db:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     7dd:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     7df:	74 50                	je     831 <__abi_tag+0x4b5>
     7e1:	37                   	(bad)
     7e2:	48 61                	rex.W (bad)
     7e4:	73 68                	jae    84e <__abi_tag+0x4d2>
     7e6:	4d 61                	rex.WRB (bad)
     7e8:	70 38                	jo     822 <__abi_tag+0x4a6>
     7ea:	73 74                	jae    860 <__abi_tag+0x4e4>
     7ec:	72 69                	jb     857 <__abi_tag+0x4db>
     7ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7ef:	67 5f                	addr32 pop rdi
     7f1:	74 00                	je     7f3 <__abi_tag+0x477>
     7f3:	68 61 73 68 4d       	push   0x4d687361
     7f8:	61                   	(bad)
     7f9:	70 44                	jo     83f <__abi_tag+0x4c3>
     7fb:	74 6f                	je     86c <__abi_tag+0x4f0>
     7fd:	72 00                	jb     7ff <__abi_tag+0x483>
     7ff:	6c                   	ins    BYTE PTR es:[rdi],dx
     800:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     801:	61                   	(bad)
     802:	64 5f                	fs pop rdi
     804:	66 61                	data16 (bad)
     806:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     80a:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
     80d:	77 5f                	ja     86e <__abi_tag+0x4f2>
     80f:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
     812:	61                   	(bad)
     813:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
     816:	79 00                	jns    818 <__abi_tag+0x49c>
     818:	72 65                	jb     87f <__abi_tag+0x503>
     81a:	73 69                	jae    885 <__abi_tag+0x509>
     81c:	7a 65                	jp     883 <__abi_tag+0x507>
     81e:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
     821:	6d                   	ins    DWORD PTR es:[rdi],dx
     822:	5f                   	pop    rdi
     823:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     826:	33 32                	xor    esi,DWORD PTR [rdx]
     828:	5f                   	pop    rdi
     829:	75 36                	jne    861 <__abi_tag+0x4e5>
     82b:	34 00                	xor    al,0x0
     82d:	68 61 73 68 5f       	push   0x5f687361
     832:	74 00                	je     834 <__abi_tag+0x4b8>
     834:	5f                   	pop    rdi
     835:	5f                   	pop    rdi
     836:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
     83d:	75 6e                	jne    8ad <__abi_tag+0x531>
     83f:	73 69                	jae    8aa <__abi_tag+0x52e>
     841:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     843:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
     848:	31 39                	xor    DWORD PTR [rcx],edi
     84a:	5f                   	pop    rdi
     84b:	6d                   	ins    DWORD PTR es:[rdi],dx
     84c:	6d                   	ins    DWORD PTR es:[rdi],dx
     84d:	5f                   	pop    rdi
     84e:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     851:	33 32                	xor    esi,DWORD PTR [rdx]
     853:	48 61                	rex.W (bad)
     855:	73 68                	jae    8bf <__abi_tag+0x543>
     857:	53                   	push   rbx
     858:	74 72                	je     8cc <__abi_tag+0x550>
     85a:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     861:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     868:	5a                   	pop    rdx
     869:	31 35 63 72 63 33    	xor    DWORD PTR [rip+0x33637263],esi        # 33637ad2 <_end+0x33631aba>
     86f:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     872:	73 68                	jae    8dc <__abi_tag+0x560>
     874:	53                   	push   rbx
     875:	74 72                	je     8e9 <__abi_tag+0x56d>
     877:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     87e:	69 6e 67 5f 74 00 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d00745f
     885:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     886:	64 5f                	fs pop rdi
     888:	61                   	(bad)
     889:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     88b:	65 72 00             	gs jb  88e <__abi_tag+0x512>
     88e:	5f                   	pop    rdi
     88f:	5a                   	pop    rdx
     890:	32 35 5f 6d 6d 5f    	xor    dh,BYTE PTR [rip+0x5f6d6d5f]        # 5f6d75f5 <_end+0x5f6d15dd>
     896:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     899:	33 32                	xor    esi,DWORD PTR [rdx]
     89b:	55                   	push   rbp
     89c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     89d:	72 6f                	jb     90e <__abi_tag+0x592>
     89f:	6c                   	ins    BYTE PTR es:[rdi],dx
     8a0:	6c                   	ins    BYTE PTR es:[rdi],dx
     8a1:	48 61                	rex.W (bad)
     8a3:	73 68                	jae    90d <__abi_tag+0x591>
     8a5:	53                   	push   rbx
     8a6:	74 72                	je     91a <__abi_tag+0x59e>
     8a8:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     8af:	69 6e 67 5f 74 00 61 	imul   ebp,DWORD PTR [rsi+0x67],0x6100745f
     8b6:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     8b8:	65 72 33             	gs jb  8ee <__abi_tag+0x572>
     8bb:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     8be:	73 68                	jae    928 <__abi_tag+0x5ac>
     8c0:	53                   	push   rbx
     8c1:	74 72                	je     935 <__abi_tag+0x5b9>
     8c3:	69 6e 67 00 5f 6d 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d6d5f00
     8ca:	5f                   	pop    rdi
     8cb:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     8ce:	33 32                	xor    esi,DWORD PTR [rdx]
     8d0:	48 61                	rex.W (bad)
     8d2:	73 68                	jae    93c <__abi_tag+0x5c0>
     8d4:	53                   	push   rbx
     8d5:	74 72                	je     949 <__abi_tag+0x5cd>
     8d7:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     8de:	37                   	(bad)
     8df:	6d                   	ins    DWORD PTR es:[rdi],dx
     8e0:	75 72                	jne    954 <__abi_tag+0x5d8>
     8e2:	6d                   	ins    DWORD PTR es:[rdi],dx
     8e3:	75 72                	jne    957 <__abi_tag+0x5db>
     8e5:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     8e8:	73 68                	jae    952 <__abi_tag+0x5d6>
     8ea:	53                   	push   rbx
     8eb:	74 72                	je     95f <__abi_tag+0x5e3>
     8ed:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     8f4:	69 6e 67 5f 74 00 68 	imul   ebp,DWORD PTR [rsi+0x67],0x6800745f
     8fb:	69 67 68 00 5f 6d 6d 	imul   esp,DWORD PTR [rdi+0x68],0x6d6d5f00
     902:	5f                   	pop    rdi
     903:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     906:	33 32                	xor    esi,DWORD PTR [rdx]
     908:	55                   	push   rbp
     909:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     90a:	72 6f                	jb     97b <__abi_tag+0x5ff>
     90c:	6c                   	ins    BYTE PTR es:[rdi],dx
     90d:	6c                   	ins    BYTE PTR es:[rdi],dx
     90e:	48 61                	rex.W (bad)
     910:	73 68                	jae    97a <__abi_tag+0x5fe>
     912:	53                   	push   rbx
     913:	74 72                	je     987 <__abi_tag+0x60b>
     915:	69 6e 67 00 73 75 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d757300
     91c:	48 61                	rex.W (bad)
     91e:	73 68                	jae    988 <__abi_tag+0x60c>
     920:	53                   	push   rbx
     921:	74 72                	je     995 <__abi_tag+0x619>
     923:	69 6e 67 00 65 6c 66 	imul   ebp,DWORD PTR [rsi+0x67],0x666c6500
     92a:	48 61                	rex.W (bad)
     92c:	73 68                	jae    996 <__abi_tag+0x61a>
     92e:	53                   	push   rbx
     92f:	74 72                	je     9a3 <__abi_tag+0x627>
     931:	69 6e 67 00 6d 75 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72756d00
     938:	6d                   	ins    DWORD PTR es:[rdi],dx
     939:	75 72                	jne    9ad <__abi_tag+0x631>
     93b:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     93e:	73 68                	jae    9a8 <__abi_tag+0x62c>
     940:	53                   	push   rbx
     941:	74 72                	je     9b5 <__abi_tag+0x639>
     943:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     94a:	33 65 6c             	xor    esp,DWORD PTR [rbp+0x6c]
     94d:	66 48 61             	data16 rex.W (bad)
     950:	73 68                	jae    9ba <__abi_tag+0x63e>
     952:	53                   	push   rbx
     953:	74 72                	je     9c7 <__abi_tag+0x64b>
     955:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     95c:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     963:	5a                   	pop    rdx
     964:	31 37                	xor    DWORD PTR [rdi],esi
     966:	61                   	(bad)
     967:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     969:	65 72 33             	gs jb  99f <__abi_tag+0x623>
     96c:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     96f:	73 68                	jae    9d9 <__abi_tag+0x65d>
     971:	53                   	push   rbx
     972:	74 72                	je     9e6 <__abi_tag+0x66a>
     974:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     97b:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     982:	5a                   	pop    rdx
     983:	31 33                	xor    DWORD PTR [rbx],esi
     985:	73 75                	jae    9fc <__abi_tag+0x680>
     987:	6d                   	ins    DWORD PTR es:[rdi],dx
     988:	48 61                	rex.W (bad)
     98a:	73 68                	jae    9f4 <__abi_tag+0x678>
     98c:	53                   	push   rbx
     98d:	74 72                	je     a01 <__abi_tag+0x685>
     98f:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     996:	69 6e 67 5f 74 00 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e00745f
     99d:	65 77 5f             	gs ja  9ff <__abi_tag+0x683>
     9a0:	70 74                	jo     a16 <__abi_tag+0x69a>
     9a2:	72 00                	jb     9a4 <__abi_tag+0x628>
     9a4:	72 65                	jb     a0b <__abi_tag+0x68f>
     9a6:	73 69                	jae    a11 <__abi_tag+0x695>
     9a8:	7a 65                	jp     a0f <__abi_tag+0x693>
     9aa:	55                   	push   rbp
     9ab:	70 00                	jo     9ad <__abi_tag+0x631>
     9ad:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
     9b0:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     9b7:	6d 
     9b8:	73 00                	jae    9ba <__abi_tag+0x63e>
     9ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9bb:	6c                   	ins    BYTE PTR es:[rdi],dx
     9bc:	64 5f                	fs pop rdi
     9be:	6c                   	ins    BYTE PTR es:[rdi],dx
     9bf:	61                   	(bad)
     9c0:	73 74                	jae    a36 <__abi_tag+0x6ba>
     9c2:	5f                   	pop    rdi
     9c3:	69 6e 78 00 64 61 74 	imul   ebp,DWORD PTR [rsi+0x78],0x74616400
     9ca:	61                   	(bad)
     9cb:	31 00                	xor    DWORD PTR [rax],eax
     9cd:	5f                   	pop    rdi
     9ce:	5f                   	pop    rdi
     9cf:	62 75 69 6c 74       	(bad)
     9d4:	69 6e 5f 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x5f],0x656d5f5f
     9db:	6d                   	ins    DWORD PTR es:[rdi],dx
     9dc:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     9df:	5f                   	pop    rdi
     9e0:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     9e3:	00 64 61 74          	add    BYTE PTR [rcx+riz*2+0x74],ah
     9e7:	61                   	(bad)
     9e8:	32 00                	xor    al,BYTE PTR [rax]
     9ea:	72 65                	jb     a51 <__abi_tag+0x6d5>
     9ec:	73 75                	jae    a63 <__abi_tag+0x6e7>
     9ee:	6c                   	ins    BYTE PTR es:[rdi],dx
     9ef:	74 00                	je     9f1 <__abi_tag+0x675>
     9f1:	5f                   	pop    rdi
     9f2:	5f                   	pop    rdi
     9f3:	67 69 64 5f 74 00 73 	imul   esp,DWORD PTR [edi+ebx*2+0x74],0x5f747300
     9fa:	74 5f 
     9fc:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     a00:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a03:	72 65                	jb     a6a <__abi_tag+0x6ee>
     a05:	61                   	(bad)
     a06:	64 5f                	fs pop rdi
     a08:	61                   	(bad)
     a09:	6c                   	ins    BYTE PTR es:[rdi],dx
     a0a:	69 61 73 00 5f 5f 70 	imul   esp,DWORD PTR [rcx+0x73],0x705f5f00
     a11:	61                   	(bad)
     a12:	74 68                	je     a7c <__abi_tag+0x700>
     a14:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     a17:	31 30                	xor    DWORD PTR [rax],esi
     a19:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     a1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a1d:	74 4c                	je     a6b <__abi_tag+0x6ef>
     a1f:	69 6e 65 73 50 63 6d 	imul   ebp,DWORD PTR [rsi+0x65],0x6d635073
     a26:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     a29:	61                   	(bad)
     a2a:	64 46 69 6c 65 00 5f 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x72385a5f
     a31:	5a 38 72 
     a34:	65 61                	gs (bad)
     a36:	64 46 69 6c 65 50 4b 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x50],0x6d50634b
     a3d:	63 50 6d 
     a40:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a44:	70 65                	jo     aab <__abi_tag+0x72f>
     a46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a47:	5f                   	pop    rdi
     a48:	74 6f                	je     ab9 <__abi_tag+0x73d>
     a4a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a4b:	5f                   	pop    rdi
     a4c:	6d                   	ins    DWORD PTR es:[rdi],dx
     a4d:	61                   	(bad)
     a4e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a4f:	79 5f                	jns    ab0 <__abi_tag+0x734>
     a51:	61                   	(bad)
     a52:	72 67                	jb     abb <__abi_tag+0x73f>
     a54:	73 00                	jae    a56 <__abi_tag+0x6da>
     a56:	5f                   	pop    rdi
     a57:	5f                   	pop    rdi
     a58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a59:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     a5b:	61                   	(bad)
     a5c:	67 00 73 74          	add    BYTE PTR [ebx+0x74],dh
     a60:	5f                   	pop    rdi
     a61:	69 6e 6f 00 5f 5f 6d 	imul   ebp,DWORD PTR [rsi+0x6f],0x6d5f5f00
     a68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a69:	64 65 5f             	fs gs pop rdi
     a6c:	74 00                	je     a6e <__abi_tag+0x6f2>
     a6e:	5f                   	pop    rdi
     a6f:	5f                   	pop    rdi
     a70:	62 6c 6b             	(bad)  {k3}
     a73:	63 6e 74             	movsxd ebp,DWORD PTR [rsi+0x74]
     a76:	5f                   	pop    rdi
     a77:	74 00                	je     a79 <__abi_tag+0x6fd>
     a79:	5f                   	pop    rdi
     a7a:	5f                   	pop    rdi
     a7b:	73 73                	jae    af0 <__abi_tag+0x774>
     a7d:	69 7a 65 5f 74 00 73 	imul   edi,DWORD PTR [rdx+0x65],0x7300745f
     a84:	74 5f                	je     ae5 <__abi_tag+0x769>
     a86:	62 6c 6f             	(bad)  {k3}
     a89:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
     a8c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a8f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a90:	62 79 74 65 73       	(bad)
     a95:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     a98:	5f                   	pop    rdi
     a99:	75 69                	jne    b04 <__abi_tag+0x788>
     a9b:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     a9f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     aa0:	70 65                	jo     b07 <__abi_tag+0x78b>
     aa2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aa3:	5f                   	pop    rdi
     aa4:	6d                   	ins    DWORD PTR es:[rdi],dx
     aa5:	69 73 73 69 6e 67 5f 	imul   esi,DWORD PTR [rbx+0x73],0x5f676e69
     aac:	6d                   	ins    DWORD PTR es:[rdi],dx
     aad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     aae:	64 65 00 5f 5f       	fs add BYTE PTR gs:[rdi+0x5f],bl
     ab3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ab4:	6c                   	ins    BYTE PTR es:[rdi],dx
     ab5:	69 6e 6b 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f00745f
     abc:	5f                   	pop    rdi
     abd:	72 65                	jb     b24 <__abi_tag+0x7a8>
     abf:	61                   	(bad)
     ac0:	64 5f                	fs pop rdi
     ac2:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     ac5:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     ac8:	75 6e                	jne    b38 <__abi_tag+0x7bc>
     aca:	74 4c                	je     b18 <__abi_tag+0x79c>
     acc:	69 6e 65 73 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f0073
     ad3:	66 64 00 73 74       	data16 add BYTE PTR fs:[rbx+0x74],dh
     ad8:	5f                   	pop    rdi
     ad9:	73 69                	jae    b44 <__abi_tag+0x7c8>
     adb:	7a 65                	jp     b42 <__abi_tag+0x7c6>
     add:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ae0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ae1:	70 65                	jo     b48 <__abi_tag+0x7cc>
     ae3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ae4:	5f                   	pop    rdi
     ae5:	32 00                	xor    al,BYTE PTR [rax]
     ae7:	73 74                	jae    b5d <__abi_tag+0x7e1>
     ae9:	5f                   	pop    rdi
     aea:	6d                   	ins    DWORD PTR es:[rdi],dx
     aeb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     aec:	64 65 00 73 74       	fs add BYTE PTR gs:[rbx+0x74],dh
     af1:	5f                   	pop    rdi
     af2:	61                   	(bad)
     af3:	74 69                	je     b5e <__abi_tag+0x7e2>
     af5:	6d                   	ins    DWORD PTR es:[rdi],dx
     af6:	00 74 76 5f          	add    BYTE PTR [rsi+rsi*2+0x5f],dh
     afa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     afb:	73 65                	jae    b62 <__abi_tag+0x7e6>
     afd:	63 00                	movsxd eax,DWORD PTR [rax]
     aff:	5f                   	pop    rdi
     b00:	5f                   	pop    rdi
     b01:	64 65 76 5f          	fs gs jbe b64 <__abi_tag+0x7e8>
     b05:	74 00                	je     b07 <__abi_tag+0x78b>
     b07:	74 76                	je     b7f <__abi_tag+0x803>
     b09:	5f                   	pop    rdi
     b0a:	73 65                	jae    b71 <__abi_tag+0x7f5>
     b0c:	63 00                	movsxd eax,DWORD PTR [rax]
     b0e:	5f                   	pop    rdi
     b0f:	5f                   	pop    rdi
     b10:	73 79                	jae    b8b <__abi_tag+0x80f>
     b12:	73 63                	jae    b77 <__abi_tag+0x7fb>
     b14:	61                   	(bad)
     b15:	6c                   	ins    BYTE PTR es:[rdi],dx
     b16:	6c                   	ins    BYTE PTR es:[rdi],dx
     b17:	5f                   	pop    rdi
     b18:	73 6c                	jae    b86 <__abi_tag+0x80a>
     b1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b1c:	67 5f                	addr32 pop rdi
     b1e:	74 00                	je     b20 <__abi_tag+0x7a4>
     b20:	66 69 6c 65 5f 73 74 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7473
     b27:	61                   	(bad)
     b28:	74 00                	je     b2a <__abi_tag+0x7ae>
     b2a:	5f                   	pop    rdi
     b2b:	5f                   	pop    rdi
     b2c:	62                   	(bad)
     b2d:	6c                   	ins    BYTE PTR es:[rdi],dx
     b2e:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     b32:	65 5f                	gs pop rdi
     b34:	74 00                	je     b36 <__abi_tag+0x7ba>
     b36:	5f                   	pop    rdi
     b37:	5f                   	pop    rdi
     b38:	62 75 66 00 5f 5f 70 	vmaxsh xmm11,xmm19,WORD PTR [rdi+0xe0]
     b3f:	61                   	(bad)
     b40:	64 30 00             	xor    BYTE PTR fs:[rax],al
     b43:	5f                   	pop    rdi
     b44:	5f                   	pop    rdi
     b45:	67 6c                	ins    BYTE PTR es:[edi],dx
     b47:	69 62 63 5f 72 65 73 	imul   esp,DWORD PTR [rdx+0x63],0x7365725f
     b4e:	65 72 76             	gs jb  bc7 <__abi_tag+0x84b>
     b51:	65 64 00 73 74       	gs add BYTE PTR fs:[rbx+0x74],dh
     b56:	5f                   	pop    rdi
     b57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b58:	6c                   	ins    BYTE PTR es:[rdi],dx
     b59:	69 6e 6b 00 73 74 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f747300
     b60:	62                   	(bad)
     b61:	6c                   	ins    BYTE PTR es:[rdi],dx
     b62:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     b66:	65 00 74 69 6d       	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
     b6b:	65 73 70             	gs jae bde <__abi_tag+0x862>
     b6e:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
     b71:	5f                   	pop    rdi
     b72:	5f                   	pop    rdi
     b73:	69 6e 6f 5f 74 00 66 	imul   ebp,DWORD PTR [rsi+0x6f],0x6600745f
     b7a:	69 6c 65 5f 64 65 73 	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
     b81:	63 
     b82:	72 00                	jb     b84 <__abi_tag+0x808>
     b84:	73 74                	jae    bfa <__abi_tag+0x87e>
     b86:	5f                   	pop    rdi
     b87:	72 64                	jb     bed <__abi_tag+0x871>
     b89:	65 76 00             	gs jbe b8c <__abi_tag+0x810>
     b8c:	5f                   	pop    rdi
     b8d:	5f                   	pop    rdi
     b8e:	75 69                	jne    bf9 <__abi_tag+0x87d>
     b90:	64 5f                	fs pop rdi
     b92:	74 00                	je     b94 <__abi_tag+0x818>
     b94:	73 74                	jae    c0a <__abi_tag+0x88e>
     b96:	5f                   	pop    rdi
     b97:	67 69 64 00 5f 5f 74 	imul   esp,DWORD PTR [eax+eax*1+0x5f],0x6d69745f
     b9e:	69 6d 
     ba0:	65 5f                	gs pop rdi
     ba2:	74 00                	je     ba4 <__abi_tag+0x828>
     ba4:	5f                   	pop    rdi
     ba5:	5f                   	pop    rdi
     ba6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ba7:	66 66 5f             	data16 pop di
     baa:	74 00                	je     bac <__abi_tag+0x830>
     bac:	73 74                	jae    c22 <__abi_tag+0x8a6>
     bae:	5f                   	pop    rdi
     baf:	64 65 76 00          	fs gs jbe bb3 <__abi_tag+0x837>
     bb3:	5f                   	pop    rdi
     bb4:	5f                   	pop    rdi
     bb5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bb6:	70 65                	jo     c1d <__abi_tag+0x8a1>
     bb8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bb9:	5f                   	pop    rdi
     bba:	61                   	(bad)
     bbb:	6c                   	ins    BYTE PTR es:[rdi],dx
     bbc:	69 61 73 00 6e 65 77 	imul   esp,DWORD PTR [rcx+0x73],0x77656e00
     bc3:	5f                   	pop    rdi
     bc4:	74 65                	je     c2b <__abi_tag+0x8af>
     bc6:	78 74                	js     c3c <__abi_tag+0x8c0>
     bc8:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     bcb:	5f                   	pop    rdi
     bcc:	6d                   	ins    DWORD PTR es:[rdi],dx
     bcd:	74 69                	je     c38 <__abi_tag+0x8bc>
     bcf:	6d                   	ins    DWORD PTR es:[rdi],dx
     bd0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     bd3:	72 65                	jb     c3a <__abi_tag+0x8be>
     bd5:	61                   	(bad)
     bd6:	64 5f                	fs pop rdi
     bd8:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     bdb:	5f                   	pop    rdi
     bdc:	77 61                	ja     c3f <__abi_tag+0x8c3>
     bde:	72 6e                	jb     c4e <__abi_tag+0x8d2>
     be0:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
     be3:	6c                   	ins    BYTE PTR es:[rdi],dx
     be4:	65 5f                	gs pop rdi
     be6:	73 69                	jae    c51 <__abi_tag+0x8d5>
     be8:	7a 65                	jp     c4f <__abi_tag+0x8d3>
     bea:	00 66 64             	add    BYTE PTR [rsi+0x64],ah
     bed:	69 6d 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rbp+0x0],0x74535a5f
     bf4:	34 66                	xor    al,0x66
     bf6:	6d                   	ins    DWORD PTR es:[rdi],dx
     bf7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bf8:	64 65 65 00 5f 5a    	fs gs add BYTE PTR gs:[rdi+0x5a],bl
     bfe:	4e 53                	rex.WRX push rbx
     c00:	74 36                	je     c38 <__abi_tag+0x8bc>
     c02:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c05:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c08:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     c0c:	61                   	(bad)
     c0d:	74 69                	je     c78 <__abi_tag+0x8fc>
     c0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c10:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c11:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     c13:	53                   	push   rbx
     c14:	74 35                	je     c4b <__abi_tag+0x8cf>
     c16:	72 61                	jb     c79 <__abi_tag+0x8fd>
     c18:	74 69                	je     c83 <__abi_tag+0x907>
     c1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c1b:	49                   	rex.WB
     c1c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     c1e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     c21:	6c                   	ins    BYTE PTR es:[rdi],dx
     c22:	31 30                	xor    DWORD PTR [rax],esi
     c24:	30 30                	xor    BYTE PTR [rax],dh
     c26:	30 30                	xor    BYTE PTR [rax],dh
     c28:	30 30                	xor    BYTE PTR [rax],dh
     c2a:	30 30                	xor    BYTE PTR [rax],dh
     c2c:	45                   	rex.RB
     c2d:	45                   	rex.RB
     c2e:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     c30:	6d                   	ins    DWORD PTR es:[rdi],dx
     c31:	45 76 00             	rex.RB jbe c34 <__abi_tag+0x8b8>
     c34:	66 67 65 74 63       	data16 addr32 gs je c9c <__abi_tag+0x920>
     c39:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     c3c:	53                   	push   rbx
     c3d:	74 36                	je     c75 <__abi_tag+0x8f9>
     c3f:	73 63                	jae    ca4 <__abi_tag+0x928>
     c41:	61                   	(bad)
     c42:	6c                   	ins    BYTE PTR es:[rdi],dx
     c43:	62 6e 66 69 00       	(bad)
     c48:	5f                   	pop    rdi
     c49:	5a                   	pop    rdx
     c4a:	53                   	push   rbx
     c4b:	74 37                	je     c84 <__abi_tag+0x908>
     c4d:	73 69                	jae    cb8 <__abi_tag+0x93c>
     c4f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c51:	62 69 74 64 00       	(bad)
     c56:	5f                   	pop    rdi
     c57:	5a                   	pop    rdx
     c58:	53                   	push   rbx
     c59:	74 37                	je     c92 <__abi_tag+0x916>
     c5b:	73 69                	jae    cc6 <__abi_tag+0x94a>
     c5d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c5f:	62 69 74 66 00       	(bad)
     c64:	5f                   	pop    rdi
     c65:	5a                   	pop    rdx
     c66:	4e 53                	rex.WRX push rbx
     c68:	74 36                	je     ca0 <__abi_tag+0x924>
     c6a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c6d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c6e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c6f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c70:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     c74:	61                   	(bad)
     c75:	74 69                	je     ce0 <__abi_tag+0x964>
     c77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c79:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     c7b:	53                   	push   rbx
     c7c:	74 35                	je     cb3 <__abi_tag+0x937>
     c7e:	72 61                	jb     ce1 <__abi_tag+0x965>
     c80:	74 69                	je     ceb <__abi_tag+0x96f>
     c82:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c83:	49                   	rex.WB
     c84:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     c86:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     c89:	6c                   	ins    BYTE PTR es:[rdi],dx
     c8a:	31 30                	xor    DWORD PTR [rax],esi
     c8c:	30 30                	xor    BYTE PTR [rax],dh
     c8e:	30 30                	xor    BYTE PTR [rax],dh
     c90:	30 30                	xor    BYTE PTR [rax],dh
     c92:	30 30                	xor    BYTE PTR [rax],dh
     c94:	45                   	rex.RB
     c95:	45                   	rex.RB
     c96:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
     c9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c9b:	45 76 00             	rex.RB jbe c9e <__abi_tag+0x922>
     c9e:	66 67 65 74 73       	data16 addr32 gs je d16 <__abi_tag+0x99a>
     ca3:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
     ca7:	68 6f 75 72 00       	push   0x72756f
     cac:	5f                   	pop    rdi
     cad:	5f                   	pop    rdi
     cae:	76 61                	jbe    d11 <__abi_tag+0x995>
     cb0:	6c                   	ins    BYTE PTR es:[rdi],dx
     cb1:	75 65                	jne    d18 <__abi_tag+0x99c>
     cb3:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
     cb6:	6c                   	ins    BYTE PTR es:[rdi],dx
     cb7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cb8:	61                   	(bad)
     cb9:	74 36                	je     cf1 <__abi_tag+0x975>
     cbb:	34 78                	xor    al,0x78
     cbd:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     cc0:	53                   	push   rbx
     cc1:	74 34                	je     cf7 <__abi_tag+0x97b>
     cc3:	66 6d                	ins    WORD PTR es:[rdi],dx
     cc5:	69 6e 66 66 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x66],0x5a5f0066
     ccc:	53                   	push   rbx
     ccd:	74 35                	je     d04 <__abi_tag+0x988>
     ccf:	6c                   	ins    BYTE PTR es:[rdi],dx
     cd0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cd1:	67 31 30             	xor    DWORD PTR [eax],esi
     cd4:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     cd8:	53                   	push   rbx
     cd9:	74 35                	je     d10 <__abi_tag+0x994>
     cdb:	6c                   	ins    BYTE PTR es:[rdi],dx
     cdc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cdd:	67 31 30             	xor    DWORD PTR [eax],esi
     ce0:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     ce4:	4e 53                	rex.WRX push rbx
     ce6:	74 36                	je     d1e <__abi_tag+0x9a2>
     ce8:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     ceb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ced:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cee:	31 30                	xor    DWORD PTR [rax],esi
     cf0:	74 69                	je     d5b <__abi_tag+0x9df>
     cf2:	6d                   	ins    DWORD PTR es:[rdi],dx
     cf3:	65 5f                	gs pop rdi
     cf5:	70 6f                	jo     d66 <__abi_tag+0x9ea>
     cf7:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     cfe:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     d01:	32 31                	xor    dh,BYTE PTR [rcx]
     d03:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     d06:	65 61                	gs (bad)
     d08:	64 79 5f             	fs jns d6a <__abi_tag+0x9ee>
     d0b:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     d0f:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     d13:	5f                   	pop    rdi
     d14:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     d18:	61                   	(bad)
     d19:	74 69                	je     d84 <__abi_tag+0xa08>
     d1b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d1d:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     d1f:	53                   	push   rbx
     d20:	74 35                	je     d57 <__abi_tag+0x9db>
     d22:	72 61                	jb     d85 <__abi_tag+0xa09>
     d24:	74 69                	je     d8f <__abi_tag+0xa13>
     d26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d27:	49                   	rex.WB
     d28:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     d2a:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     d2d:	6c                   	ins    BYTE PTR es:[rdi],dx
     d2e:	31 30                	xor    DWORD PTR [rax],esi
     d30:	30 30                	xor    BYTE PTR [rax],dh
     d32:	30 30                	xor    BYTE PTR [rax],dh
     d34:	30 30                	xor    BYTE PTR [rax],dh
     d36:	30 30                	xor    BYTE PTR [rax],dh
     d38:	45                   	rex.RB
     d39:	45                   	rex.RB
     d3a:	45                   	rex.RB
     d3b:	45                   	rex.RB
     d3c:	45                   	rex.RB
     d3d:	43 34 45             	rex.XB xor al,0x45
     d40:	52                   	push   rdx
     d41:	4b 53                	rex.WXB push r11
     d43:	36 5f                	ss pop rdi
     d45:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
     d48:	72 6f                	jb     db9 <__abi_tag+0xa3d>
     d4a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d4b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d4c:	5f                   	pop    rdi
     d4d:	6c                   	ins    BYTE PTR es:[rdi],dx
     d4e:	69 74 65 72 61 6c 73 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x736c61
     d55:	00 
     d56:	69 6e 64 65 78 5f 61 	imul   ebp,DWORD PTR [rsi+0x64],0x615f7865
     d5d:	72 72                	jb     dd1 <__abi_tag+0xa55>
     d5f:	61                   	(bad)
     d60:	79 00                	jns    d62 <__abi_tag+0x9e6>
     d62:	74 65                	je     dc9 <__abi_tag+0xa4d>
     d64:	73 74                	jae    dda <__abi_tag+0xa5e>
     d66:	5f                   	pop    rdi
     d67:	64 61                	fs (bad)
     d69:	74 61                	je     dcc <__abi_tag+0xa50>
     d6b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     d6e:	4e 53                	rex.WRX push rbx
     d70:	74 36                	je     da8 <__abi_tag+0xa2c>
     d72:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     d75:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d76:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d78:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     d7c:	61                   	(bad)
     d7d:	74 69                	je     de8 <__abi_tag+0xa6c>
     d7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d81:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     d83:	53                   	push   rbx
     d84:	74 35                	je     dbb <__abi_tag+0xa3f>
     d86:	72 61                	jb     de9 <__abi_tag+0xa6d>
     d88:	74 69                	je     df3 <__abi_tag+0xa77>
     d8a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d8b:	49                   	rex.WB
     d8c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     d8e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     d91:	6c                   	ins    BYTE PTR es:[rdi],dx
     d92:	31 30                	xor    DWORD PTR [rax],esi
     d94:	30 30                	xor    BYTE PTR [rax],dh
     d96:	30 30                	xor    BYTE PTR [rax],dh
     d98:	30 30                	xor    BYTE PTR [rax],dh
     d9a:	30 30                	xor    BYTE PTR [rax],dh
     d9c:	45                   	rex.RB
     d9d:	45                   	rex.RB
     d9e:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     da0:	4c                   	rex.WR
     da1:	45 52                	rex.RB push r10
     da3:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
     da5:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
     da8:	6d                   	ins    DWORD PTR es:[rdi],dx
     da9:	5f                   	pop    rdi
     daa:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
     db1:	5f                   	pop    rdi
     db2:	66 6d                	ins    WORD PTR es:[rdi],dx
     db4:	74 00                	je     db6 <__abi_tag+0xa3a>
     db6:	5f                   	pop    rdi
     db7:	5f                   	pop    rdi
     db8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     dba:	61                   	(bad)
     dbb:	62                   	(bad)
     dbc:	6c                   	ins    BYTE PTR es:[rdi],dx
     dbd:	65 5f                	gs pop rdi
     dbf:	69 66 5f 69 73 5f 64 	imul   esp,DWORD PTR [rsi+0x5f],0x645f7369
     dc6:	75 72                	jne    e3a <__abi_tag+0xabe>
     dc8:	61                   	(bad)
     dc9:	74 69                	je     e34 <__abi_tag+0xab8>
     dcb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dcc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dcd:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
     dd1:	65 5f                	gs pop rdi
     dd3:	70 6f                	jo     e44 <__abi_tag+0xac8>
     dd5:	69 6e 74 00 7e 64 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75647e00
     ddc:	72 61                	jb     e3f <__abi_tag+0xac3>
     dde:	74 69                	je     e49 <__abi_tag+0xacd>
     de0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     de1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     de2:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
     de5:	75 74                	jne    e5b <__abi_tag+0xadf>
     de7:	77 73                	ja     e5c <__abi_tag+0xae0>
     de9:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
     dec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ded:	74 5f                	je     e4e <__abi_tag+0xad2>
     def:	66 61                	data16 (bad)
     df1:	73 74                	jae    e67 <__abi_tag+0xaeb>
     df3:	36 34 5f             	ss xor al,0x5f
     df6:	74 00                	je     df8 <__abi_tag+0xa7c>
     df8:	5f                   	pop    rdi
     df9:	5f                   	pop    rdi
     dfa:	75 69                	jne    e65 <__abi_tag+0xae9>
     dfc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dfd:	74 5f                	je     e5e <__abi_tag+0xae2>
     dff:	6c                   	ins    BYTE PTR es:[rdi],dx
     e00:	65 61                	gs (bad)
     e02:	73 74                	jae    e78 <__abi_tag+0xafc>
     e04:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
     e07:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     e0a:	4f 5f                	rex.WRXB pop r15
     e0c:	73 61                	jae    e6f <__abi_tag+0xaf3>
     e0e:	76 65                	jbe    e75 <__abi_tag+0xaf9>
     e10:	5f                   	pop    rdi
     e11:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e13:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     e17:	4e 53                	rex.WRX push rbx
     e19:	74 36                	je     e51 <__abi_tag+0xad5>
     e1b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     e1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e21:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     e25:	61                   	(bad)
     e26:	74 69                	je     e91 <__abi_tag+0xb15>
     e28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e2a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     e2c:	53                   	push   rbx
     e2d:	74 35                	je     e64 <__abi_tag+0xae8>
     e2f:	72 61                	jb     e92 <__abi_tag+0xb16>
     e31:	74 69                	je     e9c <__abi_tag+0xb20>
     e33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e34:	49                   	rex.WB
     e35:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     e37:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     e3a:	6c                   	ins    BYTE PTR es:[rdi],dx
     e3b:	31 30                	xor    DWORD PTR [rax],esi
     e3d:	30 30                	xor    BYTE PTR [rax],dh
     e3f:	30 30                	xor    BYTE PTR [rax],dh
     e41:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
     e44:	45 70 4c             	rex.RB jo e93 <__abi_tag+0xb17>
     e47:	45 52                	rex.RB push r10
     e49:	4b 53                	rex.WXB push r11
     e4b:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     e4e:	73 71                	jae    ec1 <__abi_tag+0xb45>
     e50:	72 74                	jb     ec6 <__abi_tag+0xb4a>
     e52:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     e55:	53                   	push   rbx
     e56:	74 33                	je     e8b <__abi_tag+0xb0f>
     e58:	65 78 70             	gs js  ecb <__abi_tag+0xb4f>
     e5b:	65 00 61 73          	add    BYTE PTR gs:[rcx+0x73],ah
     e5f:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     e63:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e67:	53                   	push   rbx
     e68:	74 39                	je     ea3 <__abi_tag+0xb27>
     e6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e6b:	65 78 74             	gs js  ee2 <__abi_tag+0xb66>
     e6e:	61                   	(bad)
     e6f:	66 74 65             	data16 je ed7 <__abi_tag+0xb5b>
     e72:	72 65                	jb     ed9 <__abi_tag+0xb5d>
     e74:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
     e78:	73 63                	jae    edd <__abi_tag+0xb61>
     e7a:	73 70                	jae    eec <__abi_tag+0xb70>
     e7c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e7d:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     e80:	5f                   	pop    rdi
     e81:	67 63 64 00 66       	movsxd esp,DWORD PTR [eax+eax*1+0x66]
     e86:	6d                   	ins    DWORD PTR es:[rdi],dx
     e87:	69 6e 00 6c 6f 63 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61636f6c
     e8e:	6c                   	ins    BYTE PTR es:[rdi],dx
     e8f:	65 63 6f 6e          	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
     e93:	76 00                	jbe    e95 <__abi_tag+0xb19>
     e95:	5f                   	pop    rdi
     e96:	5a                   	pop    rdx
     e97:	53                   	push   rbx
     e98:	74 36                	je     ed0 <__abi_tag+0xb54>
     e9a:	6c                   	ins    BYTE PTR es:[rdi],dx
     e9b:	67 61                	addr32 (bad)
     e9d:	6d                   	ins    DWORD PTR es:[rdi],dx
     e9e:	6d                   	ins    DWORD PTR es:[rdi],dx
     e9f:	61                   	(bad)
     ea0:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     ea4:	53                   	push   rbx
     ea5:	74 36                	je     edd <__abi_tag+0xb61>
     ea7:	6c                   	ins    BYTE PTR es:[rdi],dx
     ea8:	67 61                	addr32 (bad)
     eaa:	6d                   	ins    DWORD PTR es:[rdi],dx
     eab:	6d                   	ins    DWORD PTR es:[rdi],dx
     eac:	61                   	(bad)
     ead:	66 00 73 65          	data16 add BYTE PTR [rbx+0x65],dh
     eb1:	61                   	(bad)
     eb2:	72 63                	jb     f17 <__abi_tag+0xb9b>
     eb4:	68 5f 66 69 6c       	push   0x6c69665f
     eb9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     ebb:	61                   	(bad)
     ebc:	6d                   	ins    DWORD PTR es:[rdi],dx
     ebd:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     ec1:	4e 53                	rex.WRX push rbx
     ec3:	74 36                	je     efb <__abi_tag+0xb7f>
     ec5:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     ec8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ec9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     eca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ecb:	31 30                	xor    DWORD PTR [rax],esi
     ecd:	74 69                	je     f38 <__abi_tag+0xbbc>
     ecf:	6d                   	ins    DWORD PTR es:[rdi],dx
     ed0:	65 5f                	gs pop rdi
     ed2:	70 6f                	jo     f43 <__abi_tag+0xbc7>
     ed4:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     edb:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     ede:	32 31                	xor    dh,BYTE PTR [rcx]
     ee0:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     ee3:	65 61                	gs (bad)
     ee5:	64 79 5f             	fs jns f47 <__abi_tag+0xbcb>
     ee8:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     eec:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     ef0:	5f                   	pop    rdi
     ef1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     ef5:	61                   	(bad)
     ef6:	74 69                	je     f61 <__abi_tag+0xbe5>
     ef8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ef9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     efa:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     efc:	53                   	push   rbx
     efd:	74 35                	je     f34 <__abi_tag+0xbb8>
     eff:	72 61                	jb     f62 <__abi_tag+0xbe6>
     f01:	74 69                	je     f6c <__abi_tag+0xbf0>
     f03:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f04:	49                   	rex.WB
     f05:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     f07:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     f0a:	6c                   	ins    BYTE PTR es:[rdi],dx
     f0b:	31 30                	xor    DWORD PTR [rax],esi
     f0d:	30 30                	xor    BYTE PTR [rax],dh
     f0f:	30 30                	xor    BYTE PTR [rax],dh
     f11:	30 30                	xor    BYTE PTR [rax],dh
     f13:	30 30                	xor    BYTE PTR [rax],dh
     f15:	45                   	rex.RB
     f16:	45                   	rex.RB
     f17:	45                   	rex.RB
     f18:	45                   	rex.RB
     f19:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     f1b:	49                   	rex.WB
     f1c:	45 52                	rex.RB push r10
     f1e:	4b 53                	rex.WXB push r11
     f20:	36 5f                	ss pop rdi
     f22:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f25:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     f2c:	77 63                	ja     f91 <__abi_tag+0xc15>
     f2e:	73 74                	jae    fa4 <__abi_tag+0xc28>
     f30:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f31:	75 6c                	jne    f9f <__abi_tag+0xc23>
     f33:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f36:	4e 53                	rex.WRX push rbx
     f38:	74 36                	je     f70 <__abi_tag+0xbf4>
     f3a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     f3d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f3f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f40:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     f44:	61                   	(bad)
     f45:	74 69                	je     fb0 <__abi_tag+0xc34>
     f47:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f49:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     f4b:	53                   	push   rbx
     f4c:	74 35                	je     f83 <__abi_tag+0xc07>
     f4e:	72 61                	jb     fb1 <__abi_tag+0xc35>
     f50:	74 69                	je     fbb <__abi_tag+0xc3f>
     f52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f53:	49                   	rex.WB
     f54:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     f56:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     f59:	6c                   	ins    BYTE PTR es:[rdi],dx
     f5a:	31 30                	xor    DWORD PTR [rax],esi
     f5c:	30 30                	xor    BYTE PTR [rax],dh
     f5e:	30 30                	xor    BYTE PTR [rax],dh
     f60:	30 30                	xor    BYTE PTR [rax],dh
     f62:	30 30                	xor    BYTE PTR [rax],dh
     f64:	45                   	rex.RB
     f65:	45                   	rex.RB
     f66:	45                   	rex.RB
     f67:	43 31 49 6c          	rex.XB xor DWORD PTR [r9+0x6c],ecx
     f6b:	76 45                	jbe    fb2 <__abi_tag+0xc36>
     f6d:	45 52                	rex.RB push r10
     f6f:	4b 54                	rex.WXB push r12
     f71:	5f                   	pop    rdi
     f72:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     f75:	4f 5f                	rex.WRXB pop r15
     f77:	77 72                	ja     feb <__abi_tag+0xc6f>
     f79:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
     f80:	65 
     f81:	00 74 6d 70          	add    BYTE PTR [rbp+rbp*2+0x70],dh
     f85:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f86:	61                   	(bad)
     f87:	6d                   	ins    DWORD PTR es:[rdi],dx
     f88:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f8b:	53                   	push   rbx
     f8c:	74 31                	je     fbf <__abi_tag+0xc43>
     f8e:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
     f91:	78 74                	js     1007 <_init+0x7>
     f93:	74 6f                	je     1004 <_init+0x4>
     f95:	77 61                	ja     ff8 <__abi_tag+0xc7c>
     f97:	72 64                	jb     ffd <__abi_tag+0xc81>
     f99:	66 65 00 5f 5f       	data16 add BYTE PTR gs:[rdi+0x5f],bl
     f9e:	6c                   	ins    BYTE PTR es:[rdi],dx
     f9f:	68 73 00 5f 6c       	push   0x6c5f0073
     fa4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fa5:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     fa8:	69 73 75 6e 6f 72 64 	imul   esi,DWORD PTR [rbx+0x75],0x64726f6e
     faf:	65 72 65             	gs jb  1017 <_init+0x17>
     fb2:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
     fb6:	74 5f                	je     1017 <_init+0x17>
     fb8:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
     fbb:	72 5f                	jb     101c <_init+0x1c>
     fbd:	73 79                	jae    1038 <__printf_chk@plt+0x8>
     fbf:	6d                   	ins    DWORD PTR es:[rdi],dx
     fc0:	62 6f 6c 00 5f       	(bad)
     fc5:	5a                   	pop    rdx
     fc6:	53                   	push   rbx
     fc7:	74 33                	je     ffc <__abi_tag+0xc80>
     fc9:	66 6d                	ins    WORD PTR es:[rdi],dx
     fcb:	61                   	(bad)
     fcc:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
     fd2:	4e 53                	rex.WRX push rbx
     fd4:	74 36                	je     100c <_init+0xc>
     fd6:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     fd9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fda:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fdc:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     fe0:	61                   	(bad)
     fe1:	74 69                	je     104c <rand@plt+0xc>
     fe3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fe4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fe5:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     fe7:	53                   	push   rbx
     fe8:	74 35                	je     101f <_init+0x1f>
     fea:	72 61                	jb     104d <rand@plt+0xd>
     fec:	74 69                	je     1057 <strchr@plt+0x7>
     fee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fef:	49                   	rex.WB
     ff0:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     ff2:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     ff5:	6c                   	ins    BYTE PTR es:[rdi],dx
     ff6:	31 30                	xor    DWORD PTR [rax],esi
     ff8:	30 30                	xor    BYTE PTR [rax],dh
     ffa:	30 30                	xor    BYTE PTR [rax],dh
     ffc:	30 30                	xor    BYTE PTR [rax],dh
     ffe:	30 30                	xor    BYTE PTR [rax],dh
    1000:	45                   	rex.RB
    1001:	45                   	rex.RB
    1002:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    1004:	49                   	rex.WB
    1005:	45 52                	rex.RB push r10
    1007:	4b 53                	rex.WXB push r11
    1009:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    100c:	5f                   	pop    rdi
    100d:	5a                   	pop    rdx
    100e:	4e 53                	rex.WRX push rbx
    1010:	74 36                	je     1048 <rand@plt+0x8>
    1012:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1015:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1016:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1017:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1018:	31 30                	xor    DWORD PTR [rax],esi
    101a:	74 69                	je     1085 <calloc@plt+0x5>
    101c:	6d                   	ins    DWORD PTR es:[rdi],dx
    101d:	65 5f                	gs pop rdi
    101f:	70 6f                	jo     1090 <open@plt>
    1021:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1028:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    102b:	32 31                	xor    dh,BYTE PTR [rcx]
    102d:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1030:	65 61                	gs (bad)
    1032:	64 79 5f             	fs jns 1094 <open@plt+0x4>
    1035:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1039:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    103d:	5f                   	pop    rdi
    103e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1042:	61                   	(bad)
    1043:	74 69                	je     10ae <aligned_alloc@plt+0xe>
    1045:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1046:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1047:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1049:	53                   	push   rbx
    104a:	74 35                	je     1081 <calloc@plt+0x1>
    104c:	72 61                	jb     10af <aligned_alloc@plt+0xf>
    104e:	74 69                	je     10b9 <stat@plt+0x9>
    1050:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1051:	49                   	rex.WB
    1052:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1054:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1057:	6c                   	ins    BYTE PTR es:[rdi],dx
    1058:	31 30                	xor    DWORD PTR [rax],esi
    105a:	30 30                	xor    BYTE PTR [rax],dh
    105c:	30 30                	xor    BYTE PTR [rax],dh
    105e:	30 30                	xor    BYTE PTR [rax],dh
    1060:	30 30                	xor    BYTE PTR [rax],dh
    1062:	45                   	rex.RB
    1063:	45                   	rex.RB
    1064:	45                   	rex.RB
    1065:	45                   	rex.RB
    1066:	45                   	rex.RB
    1067:	43 34 45             	rex.XB xor al,0x45
    106a:	76 00                	jbe    106c <__strncpy_chk@plt+0xc>
    106c:	5f                   	pop    rdi
    106d:	5a                   	pop    rdx
    106e:	53                   	push   rbx
    106f:	74 36                	je     10a7 <aligned_alloc@plt+0x7>
    1071:	73 63                	jae    10d6 <fclose@plt+0x6>
    1073:	61                   	(bad)
    1074:	6c                   	ins    BYTE PTR es:[rdi],dx
    1075:	62 6e 65 69 00       	(bad)
    107a:	64 69 66 66 74 69 6d 	imul   esp,DWORD PTR fs:[rsi+0x66],0x656d6974
    1081:	65 
    1082:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
    1085:	65 72 61             	gs jb  10e9 <__stack_chk_fail@plt+0x9>
    1088:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    108d:	53                   	push   rbx
    108e:	74 34                	je     10c4 <srand@plt+0x4>
    1090:	74 61                	je     10f3 <fopen@plt+0x3>
    1092:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1093:	68 65 00 5f 5a       	push   0x5a5f0065
    1098:	53                   	push   rbx
    1099:	74 34                	je     10cf <srand@plt+0xf>
    109b:	74 61                	je     10fe <fopen@plt+0xe>
    109d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    109e:	68 66 00 5f 49       	push   0x495f0066
    10a3:	4f 5f                	rex.WRXB pop r15
    10a5:	62 75 66 5f 65       	(bad)
    10aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10ab:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
    10af:	4f 5f                	rex.WRXB pop r15
    10b1:	73 61                	jae    1114 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x4>
    10b3:	76 65                	jbe    111a <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0xa>
    10b5:	5f                   	pop    rdi
    10b6:	62 61 73 65 00       	(bad)
    10bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    10bc:	62 72 74 6f 77       	(bad)
    10c1:	63 00                	movsxd eax,DWORD PTR [rax]
    10c3:	5f                   	pop    rdi
    10c4:	5a                   	pop    rdx
    10c5:	53                   	push   rbx
    10c6:	74 35                	je     10fd <fopen@plt+0xd>
    10c8:	6c                   	ins    BYTE PTR es:[rdi],dx
    10c9:	72 69                	jb     1134 <strcmp@plt+0x4>
    10cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10cc:	74 66                	je     1134 <strcmp@plt+0x4>
    10ce:	00 31                	add    BYTE PTR [rcx],dh
    10d0:	31 6d 61             	xor    DWORD PTR [rbp+0x61],ebp
    10d3:	78 5f                	js     1134 <strcmp@plt+0x4>
    10d5:	61                   	(bad)
    10d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    10d7:	69 67 6e 5f 74 00 77 	imul   esp,DWORD PTR [rdi+0x6e],0x7700745f
    10de:	63 73 78             	movsxd esi,DWORD PTR [rbx+0x78]
    10e1:	66 72 6d             	data16 jb 1151 <puts@plt+0x1>
    10e4:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    10e7:	74 5f                	je     1148 <read@plt+0x8>
    10e9:	66 72 61             	data16 jb 114d <read@plt+0xd>
    10ec:	63 5f 64             	movsxd ebx,DWORD PTR [rdi+0x64]
    10ef:	69 67 69 74 73 00 5f 	imul   esp,DWORD PTR [rdi+0x69],0x5f007374
    10f6:	5a                   	pop    rdx
    10f7:	53                   	push   rbx
    10f8:	74 39                	je     1133 <strcmp@plt+0x3>
    10fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10fb:	65 78 74             	gs js  1172 <__memcpy_chk@plt+0x2>
    10fe:	61                   	(bad)
    10ff:	66 74 65             	data16 je 1167 <__fprintf_chk@plt+0x7>
    1102:	72 66                	jb     116a <__fprintf_chk@plt+0xa>
    1104:	66 00 66 67          	data16 add BYTE PTR [rsi+0x67],ah
    1108:	65 74 70             	gs je  117b <__memcpy_chk@plt+0xb>
    110b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    110c:	73 00                	jae    110e <free@plt+0xe>
    110e:	5f                   	pop    rdi
    110f:	5f                   	pop    rdi
    1110:	70 6f                	jo     1181 <sqrtf@plt+0x1>
    1112:	73 00                	jae    1114 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x4>
    1114:	5f                   	pop    rdi
    1115:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1118:	69 6e 00 73 74 65 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61657473
    111f:	64 79 5f             	fs jns 1181 <sqrtf@plt+0x1>
    1122:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1126:	6b 00 77             	imul   eax,DWORD PTR [rax],0x77
    1129:	63 73 63             	movsxd esi,DWORD PTR [rbx+0x63]
    112c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    112d:	6c                   	ins    BYTE PTR es:[rdi],dx
    112e:	6c                   	ins    BYTE PTR es:[rdi],dx
    112f:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    1132:	65 61                	gs (bad)
    1134:	72 65                	jb     119b <fwrite@plt+0xb>
    1136:	72 72                	jb     11aa <close@plt+0xa>
    1138:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    113b:	53                   	push   rbx
    113c:	74 31                	je     116f <__fprintf_chk@plt+0xf>
    113e:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    1141:	75 6e                	jne    11b1 <__isoc23_strtol@plt+0x1>
    1143:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1144:	72 64                	jb     11aa <close@plt+0xa>
    1146:	65 72 65             	gs jb  11ae <close@plt+0xe>
    1149:	64 64 64 00 5f 63    	fs fs add BYTE PTR fs:[rdi+0x63],bl
    114f:	75 72                	jne    11c3 <__cxa_finalize@plt+0x3>
    1151:	5f                   	pop    rdi
    1152:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    1155:	75 6d                	jne    11c4 <__cxa_finalize@plt+0x4>
    1157:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1158:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    115b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    115c:	74 5f                	je     11bd <__isoc23_strtol@plt+0xd>
    115e:	66 61                	data16 (bad)
    1160:	73 74                	jae    11d6 <main+0x6>
    1162:	33 32                	xor    esi,DWORD PTR [rdx]
    1164:	5f                   	pop    rdi
    1165:	74 00                	je     1167 <__fprintf_chk@plt+0x7>
    1167:	5f                   	pop    rdi
    1168:	5a                   	pop    rdx
    1169:	4e 53                	rex.WRX push rbx
    116b:	74 36                	je     11a3 <close@plt+0x3>
    116d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1170:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1171:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1172:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1173:	31 30                	xor    DWORD PTR [rax],esi
    1175:	74 69                	je     11e0 <main+0x10>
    1177:	6d                   	ins    DWORD PTR es:[rdi],dx
    1178:	65 5f                	gs pop rdi
    117a:	70 6f                	jo     11eb <main+0x1b>
    117c:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1183:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1186:	32 31                	xor    dh,BYTE PTR [rcx]
    1188:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    118b:	65 61                	gs (bad)
    118d:	64 79 5f             	fs jns 11ef <main+0x1f>
    1190:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1194:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    1198:	5f                   	pop    rdi
    1199:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    119d:	61                   	(bad)
    119e:	74 69                	je     1209 <main+0x39>
    11a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11a2:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    11a4:	53                   	push   rbx
    11a5:	74 35                	je     11dc <main+0xc>
    11a7:	72 61                	jb     120a <main+0x3a>
    11a9:	74 69                	je     1214 <_start+0x4>
    11ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11ac:	49                   	rex.WB
    11ad:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    11af:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    11b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    11b3:	31 30                	xor    DWORD PTR [rax],esi
    11b5:	30 30                	xor    BYTE PTR [rax],dh
    11b7:	30 30                	xor    BYTE PTR [rax],dh
    11b9:	30 30                	xor    BYTE PTR [rax],dh
    11bb:	30 30                	xor    BYTE PTR [rax],dh
    11bd:	45                   	rex.RB
    11be:	45                   	rex.RB
    11bf:	45                   	rex.RB
    11c0:	45                   	rex.RB
    11c1:	45 70 4c             	rex.RB jo 1210 <_start>
    11c4:	45 52                	rex.RB push r10
    11c6:	4b 53                	rex.WXB push r11
    11c8:	36 5f                	ss pop rdi
    11ca:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    11cd:	4e 53                	rex.WRX push rbx
    11cf:	74 36                	je     1207 <main+0x37>
    11d1:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    11d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11d5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11d6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11d7:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    11db:	61                   	(bad)
    11dc:	74 69                	je     1247 <deregister_tm_clones+0x7>
    11de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11e0:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    11e2:	53                   	push   rbx
    11e3:	74 35                	je     121a <_start+0xa>
    11e5:	72 61                	jb     1248 <deregister_tm_clones+0x8>
    11e7:	74 69                	je     1252 <deregister_tm_clones+0x12>
    11e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11ea:	49                   	rex.WB
    11eb:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    11ed:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    11f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    11f1:	31 30                	xor    DWORD PTR [rax],esi
    11f3:	30 30                	xor    BYTE PTR [rax],dh
    11f5:	30 30                	xor    BYTE PTR [rax],dh
    11f7:	30 30                	xor    BYTE PTR [rax],dh
    11f9:	30 30                	xor    BYTE PTR [rax],dh
    11fb:	45                   	rex.RB
    11fc:	45                   	rex.RB
    11fd:	45 70 70             	rex.RB jo 1270 <register_tm_clones>
    1200:	45 69 00 6c 64 65 78 	imul   r8d,DWORD PTR [r8],0x7865646c
    1207:	70 00                	jo     1209 <main+0x39>
    1209:	70 6f                	jo     127a <register_tm_clones+0xa>
    120b:	73 69                	jae    1276 <register_tm_clones+0x6>
    120d:	74 69                	je     1278 <register_tm_clones+0x8>
    120f:	76 65                	jbe    1276 <register_tm_clones+0x6>
    1211:	5f                   	pop    rdi
    1212:	73 69                	jae    127d <register_tm_clones+0xd>
    1214:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1216:	00 5f 44             	add    BYTE PTR [rdi+0x44],bl
    1219:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    121b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    121e:	70 72                	jo     1292 <register_tm_clones+0x22>
    1220:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
    1227:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    122a:	5a                   	pop    rdx
    122b:	53                   	push   rbx
    122c:	74 35                	je     1263 <deregister_tm_clones+0x23>
    122e:	6c                   	ins    BYTE PTR es:[rdi],dx
    122f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1230:	67 31 70 65          	xor    DWORD PTR [eax+0x65],esi
    1234:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1237:	75 69                	jne    12a2 <register_tm_clones+0x32>
    1239:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    123a:	74 38                	je     1274 <register_tm_clones+0x4>
    123c:	5f                   	pop    rdi
    123d:	74 00                	je     123f <_start+0x2f>
    123f:	5f                   	pop    rdi
    1240:	5a                   	pop    rdx
    1241:	4e 53                	rex.WRX push rbx
    1243:	74 36                	je     127b <register_tm_clones+0xb>
    1245:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1248:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1249:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    124a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    124b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    124f:	61                   	(bad)
    1250:	74 69                	je     12bb <__do_global_dtors_aux+0xb>
    1252:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1253:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1254:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1256:	53                   	push   rbx
    1257:	74 35                	je     128e <register_tm_clones+0x1e>
    1259:	72 61                	jb     12bc <__do_global_dtors_aux+0xc>
    125b:	74 69                	je     12c6 <__do_global_dtors_aux+0x16>
    125d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    125e:	49                   	rex.WB
    125f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1261:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1264:	6c                   	ins    BYTE PTR es:[rdi],dx
    1265:	31 30                	xor    DWORD PTR [rax],esi
    1267:	30 30                	xor    BYTE PTR [rax],dh
    1269:	30 30                	xor    BYTE PTR [rax],dh
    126b:	30 30                	xor    BYTE PTR [rax],dh
    126d:	30 30                	xor    BYTE PTR [rax],dh
    126f:	45                   	rex.RB
    1270:	45                   	rex.RB
    1271:	45 70 70             	rex.RB jo 12e4 <__do_global_dtors_aux+0x34>
    1274:	45 76 00             	rex.RB jbe 1277 <register_tm_clones+0x7>
    1277:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1278:	65 78 74             	gs js  12ef <__do_global_dtors_aux+0x3f>
    127b:	74 6f                	je     12ec <__do_global_dtors_aux+0x3c>
    127d:	77 61                	ja     12e0 <__do_global_dtors_aux+0x30>
    127f:	72 64                	jb     12e5 <__do_global_dtors_aux+0x35>
    1281:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    1284:	61                   	(bad)
    1285:	62                   	(bad)
    1286:	6c                   	ins    BYTE PTR es:[rdi],dx
    1287:	65 5f                	gs pop rdi
    1289:	69 66 3c 74 72 75 65 	imul   esp,DWORD PTR [rsi+0x3c],0x65757274
    1290:	2c 20                	sub    al,0x20
    1292:	73 74                	jae    1308 <_Z16buildStringArrayPcj+0x8>
    1294:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1297:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    129a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    129b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    129c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    129d:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    129f:	64 75 72             	fs jne 1314 <_Z16buildStringArrayPcj+0x14>
    12a2:	61                   	(bad)
    12a3:	74 69                	je     130e <_Z16buildStringArrayPcj+0xe>
    12a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12a7:	3c 6c                	cmp    al,0x6c
    12a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12ab:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    12af:	74 2c                	je     12dd <__do_global_dtors_aux+0x2d>
    12b1:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    12b4:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    12b7:	72 61                	jb     131a <_Z16buildStringArrayPcj+0x1a>
    12b9:	74 69                	je     1324 <_Z16buildStringArrayPcj+0x24>
    12bb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12bc:	3c 31                	cmp    al,0x31
    12be:	2c 20                	sub    al,0x20
    12c0:	31 30                	xor    DWORD PTR [rax],esi
    12c2:	30 30                	xor    BYTE PTR [rax],dh
    12c4:	30 30                	xor    BYTE PTR [rax],dh
    12c6:	30 3e                	xor    BYTE PTR [rsi],bh
    12c8:	20 3e                	and    BYTE PTR [rsi],bh
    12ca:	20 3e                	and    BYTE PTR [rsi],bh
    12cc:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
    12cf:	66 5f                	pop    di
    12d1:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
    12d8:	5f                   	pop    rdi
    12d9:	77 63                	ja     133e <_Z16buildStringArrayPcj+0x3e>
    12db:	68 00 77 63 73       	push   0x73637700
    12e0:	72 63                	jb     1345 <_Z16buildStringArrayPcj+0x45>
    12e2:	68 72 00 6d 6f       	push   0x6f6d0072
    12e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12e8:	5f                   	pop    rdi
    12e9:	64 65 63 69 6d       	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
    12ee:	61                   	(bad)
    12ef:	6c                   	ins    BYTE PTR es:[rdi],dx
    12f0:	5f                   	pop    rdi
    12f1:	70 6f                	jo     1362 <_Z16buildStringArrayPcj+0x62>
    12f3:	69 6e 74 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535a5f00
    12fa:	74 35                	je     1331 <_Z16buildStringArrayPcj+0x31>
    12fc:	68 79 70 6f 74       	push   0x746f7079
    1301:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    1306:	4e 53                	rex.WRX push rbx
    1308:	74 36                	je     1340 <_Z16buildStringArrayPcj+0x40>
    130a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    130d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    130e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    130f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1310:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1314:	61                   	(bad)
    1315:	74 69                	je     1380 <_Z16buildStringArrayPcj+0x80>
    1317:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1318:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1319:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    131b:	53                   	push   rbx
    131c:	74 35                	je     1353 <_Z16buildStringArrayPcj+0x53>
    131e:	72 61                	jb     1381 <_Z16buildStringArrayPcj+0x81>
    1320:	74 69                	je     138b <_Z16buildStringArrayPcj+0x8b>
    1322:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1323:	49                   	rex.WB
    1324:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1326:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1329:	6c                   	ins    BYTE PTR es:[rdi],dx
    132a:	31 30                	xor    DWORD PTR [rax],esi
    132c:	30 30                	xor    BYTE PTR [rax],dh
    132e:	30 30                	xor    BYTE PTR [rax],dh
    1330:	30 30                	xor    BYTE PTR [rax],dh
    1332:	30 30                	xor    BYTE PTR [rax],dh
    1334:	45                   	rex.RB
    1335:	45                   	rex.RB
    1336:	45                   	rex.RB
    1337:	44 34 45             	rex.R xor al,0x45
    133a:	76 00                	jbe    133c <_Z16buildStringArrayPcj+0x3c>
    133c:	5f                   	pop    rdi
    133d:	5a                   	pop    rdx
    133e:	4e 53                	rex.WRX push rbx
    1340:	74 36                	je     1378 <_Z16buildStringArrayPcj+0x78>
    1342:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1345:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1346:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1347:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1348:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    134c:	61                   	(bad)
    134d:	74 69                	je     13b8 <_Z16buildStringArrayPcj+0xb8>
    134f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1350:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1351:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1353:	53                   	push   rbx
    1354:	74 35                	je     138b <_Z16buildStringArrayPcj+0x8b>
    1356:	72 61                	jb     13b9 <_Z16buildStringArrayPcj+0xb9>
    1358:	74 69                	je     13c3 <_Z16buildStringArrayPcj+0xc3>
    135a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    135b:	49                   	rex.WB
    135c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    135e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1361:	6c                   	ins    BYTE PTR es:[rdi],dx
    1362:	31 30                	xor    DWORD PTR [rax],esi
    1364:	30 30                	xor    BYTE PTR [rax],dh
    1366:	30 30                	xor    BYTE PTR [rax],dh
    1368:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    136b:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    136d:	6d                   	ins    DWORD PTR es:[rdi],dx
    136e:	45 69 00 74 6d 5f 69 	imul   r8d,DWORD PTR [r8],0x695f6d74
    1375:	73 64                	jae    13db <_Z16buildStringArrayPcj+0xdb>
    1377:	73 74                	jae    13ed <_Z16buildStringArrayPcj+0xed>
    1379:	00 76 77             	add    BYTE PTR [rsi+0x77],dh
    137c:	70 72                	jo     13f0 <_Z16buildStringArrayPcj+0xf0>
    137e:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
    1385:	66 70 72             	data16 jo 13fa <_Z16buildStringArrayPcj+0xfa>
    1388:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
    138f:	6b 00 63             	imul   eax,DWORD PTR [rax],0x63
    1392:	68 72 6f 6e 6f       	push   0x6f6e6f72
    1397:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
    139b:	74 00                	je     139d <_Z16buildStringArrayPcj+0x9d>
    139d:	5f                   	pop    rdi
    139e:	5a                   	pop    rdx
    139f:	53                   	push   rbx
    13a0:	74 39                	je     13db <_Z16buildStringArrayPcj+0xdb>
    13a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13a3:	65 61                	gs (bad)
    13a5:	72 62                	jb     1409 <_Z16buildStringArrayPcj+0x109>
    13a7:	79 69                	jns    1412 <_Z16buildStringArrayPcj+0x112>
    13a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13aa:	74 66                	je     1412 <_Z16buildStringArrayPcj+0x112>
    13ac:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    13af:	4f 5f                	rex.WRXB pop r15
    13b1:	6d                   	ins    DWORD PTR es:[rdi],dx
    13b2:	61                   	(bad)
    13b3:	72 6b                	jb     1420 <_Z16buildStringArrayPcj+0x120>
    13b5:	65 72 00             	gs jb  13b8 <_Z16buildStringArrayPcj+0xb8>
    13b8:	69 6e 74 5f 6e 5f 63 	imul   ebp,DWORD PTR [rsi+0x74],0x635f6e5f
    13bf:	73 5f                	jae    1420 <_Z16buildStringArrayPcj+0x120>
    13c1:	70 72                	jo     1435 <_Z16buildStringArrayPcj+0x135>
    13c3:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    13c7:	65 73 00             	gs jae 13ca <_Z16buildStringArrayPcj+0xca>
    13ca:	77 63                	ja     142f <_Z16buildStringArrayPcj+0x12f>
    13cc:	73 63                	jae    1431 <_Z16buildStringArrayPcj+0x131>
    13ce:	68 72 00 74 79       	push   0x79740072
    13d3:	70 65                	jo     143a <_Z16buildStringArrayPcj+0x13a>
    13d5:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    13d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    13d9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    13db:	61                   	(bad)
    13dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    13dd:	65 73 00             	gs jae 13e0 <_Z16buildStringArrayPcj+0xe0>
    13e0:	5f                   	pop    rdi
    13e1:	5a                   	pop    rdx
    13e2:	53                   	push   rbx
    13e3:	74 34                	je     1419 <_Z16buildStringArrayPcj+0x119>
    13e5:	66 64 69 6d 65 65 00 	imul   bp,WORD PTR fs:[rbp+0x65],0x65
    13ec:	65 78 65             	gs js  1454 <_Z16buildStringArrayPcj+0x154>
    13ef:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
    13f2:	69 6f 6e 00 5f 5a 53 	imul   ebp,DWORD PTR [rdi+0x6e],0x535a5f00
    13f9:	74 35                	je     1430 <_Z16buildStringArrayPcj+0x130>
    13fb:	68 79 70 6f 74       	push   0x746f7079
    1400:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    1405:	4e 53                	rex.WRX push rbx
    1407:	74 35                	je     143e <_Z16buildStringArrayPcj+0x13e>
    1409:	72 61                	jb     146c <_Z16buildStringArrayPcj+0x16c>
    140b:	74 69                	je     1476 <_Z16buildStringArrayPcj+0x176>
    140d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    140e:	49                   	rex.WB
    140f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1411:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1414:	6c                   	ins    BYTE PTR es:[rdi],dx
    1415:	31 30                	xor    DWORD PTR [rax],esi
    1417:	30 30                	xor    BYTE PTR [rax],dh
    1419:	45                   	rex.RB
    141a:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    141f:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1423:	4e                   	rex.WRX
    1424:	4b 53                	rex.WXB push r11
    1426:	74 36                	je     145e <_Z16buildStringArrayPcj+0x15e>
    1428:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    142b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    142c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    142d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    142e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1432:	61                   	(bad)
    1433:	74 69                	je     149e <_Z11hashMapCtorPFj8string_tEj+0xe>
    1435:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1436:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1437:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1439:	53                   	push   rbx
    143a:	74 35                	je     1471 <_Z16buildStringArrayPcj+0x171>
    143c:	72 61                	jb     149f <_Z11hashMapCtorPFj8string_tEj+0xf>
    143e:	74 69                	je     14a9 <_Z11hashMapCtorPFj8string_tEj+0x19>
    1440:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1441:	49                   	rex.WB
    1442:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1444:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1447:	6c                   	ins    BYTE PTR es:[rdi],dx
    1448:	31 30                	xor    DWORD PTR [rax],esi
    144a:	30 30                	xor    BYTE PTR [rax],dh
    144c:	30 30                	xor    BYTE PTR [rax],dh
    144e:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1451:	45 70 73             	rex.RB jo 14c7 <_Z11hashMapCtorPFj8string_tEj+0x37>
    1454:	45 76 00             	rex.RB jbe 1457 <_Z16buildStringArrayPcj+0x157>
    1457:	74 65                	je     14be <_Z11hashMapCtorPFj8string_tEj+0x2e>
    1459:	73 74                	jae    14cf <_Z11hashMapCtorPFj8string_tEj+0x3f>
    145b:	53                   	push   rbx
    145c:	65 61                	gs (bad)
    145e:	72 63                	jb     14c3 <_Z11hashMapCtorPFj8string_tEj+0x33>
    1460:	68 54 69 6d 65       	push   0x656d6954
    1465:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1468:	53                   	push   rbx
    1469:	74 35                	je     14a0 <_Z11hashMapCtorPFj8string_tEj+0x10>
    146b:	68 79 70 6f 74       	push   0x746f7079
    1470:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
    1476:	53                   	push   rbx
    1477:	74 39                	je     14b2 <_Z11hashMapCtorPFj8string_tEj+0x22>
    1479:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    147a:	65 61                	gs (bad)
    147c:	72 62                	jb     14e0 <_Z11hashMapCtorPFj8string_tEj+0x50>
    147e:	79 69                	jns    14e9 <_Z11hashMapCtorPFj8string_tEj+0x59>
    1480:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1481:	74 65                	je     14e8 <_Z11hashMapCtorPFj8string_tEj+0x58>
    1483:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1486:	53                   	push   rbx
    1487:	74 31                	je     14ba <_Z11hashMapCtorPFj8string_tEj+0x2a>
    1489:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    148c:	6c                   	ins    BYTE PTR es:[rdi],dx
    148d:	65 73 73             	gs jae 1503 <_Z11hashMapCtorPFj8string_tEj+0x73>
    1490:	65 71 75             	gs jno 1508 <_Z11hashMapCtorPFj8string_tEj+0x78>
    1493:	61                   	(bad)
    1494:	6c                   	ins    BYTE PTR es:[rdi],dx
    1495:	64 64 00 5f 5a       	fs add BYTE PTR fs:[rdi+0x5a],bl
    149a:	53                   	push   rbx
    149b:	74 34                	je     14d1 <_Z11hashMapCtorPFj8string_tEj+0x41>
    149d:	66 61                	data16 (bad)
    149f:	62 73 66 00 64       	(bad)
    14a4:	75 72                	jne    1518 <_Z11hashMapCtorPFj8string_tEj+0x88>
    14a6:	61                   	(bad)
    14a7:	74 69                	je     1512 <_Z11hashMapCtorPFj8string_tEj+0x82>
    14a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14ab:	3c 6c                	cmp    al,0x6c
    14ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14af:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    14b3:	74 2c                	je     14e1 <_Z11hashMapCtorPFj8string_tEj+0x51>
    14b5:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    14b8:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    14bb:	72 61                	jb     151e <_Z11hashMapCtorPFj8string_tEj+0x8e>
    14bd:	74 69                	je     1528 <_Z11hashMapCtorPFj8string_tEj+0x98>
    14bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14c0:	3c 31                	cmp    al,0x31
    14c2:	2c 20                	sub    al,0x20
    14c4:	31 30                	xor    DWORD PTR [rax],esi
    14c6:	30 30                	xor    BYTE PTR [rax],dh
    14c8:	30 30                	xor    BYTE PTR [rax],dh
    14ca:	30 3e                	xor    BYTE PTR [rsi],bh
    14cc:	20 3e                	and    BYTE PTR [rsi],bh
    14ce:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    14d1:	61                   	(bad)
    14d2:	72 62                	jb     1536 <_Z11hashMapCtorPFj8string_tEj+0xa6>
    14d4:	79 69                	jns    153f <_Z11hashMapCtorPFj8string_tEj+0xaf>
    14d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14d7:	74 00                	je     14d9 <_Z11hashMapCtorPFj8string_tEj+0x49>
    14d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14da:	70 65                	jo     1541 <_Z17hashMapAddElementP7HashMap8string_t+0x1>
    14dc:	72 61                	jb     153f <_Z11hashMapCtorPFj8string_tEj+0xaf>
    14de:	74 6f                	je     154f <_Z17hashMapAddElementP7HashMap8string_t+0xf>
    14e0:	72 2b                	jb     150d <_Z11hashMapCtorPFj8string_tEj+0x7d>
    14e2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    14e5:	53                   	push   rbx
    14e6:	74 34                	je     151c <_Z11hashMapCtorPFj8string_tEj+0x8c>
    14e8:	61                   	(bad)
    14e9:	74 61                	je     154c <_Z17hashMapAddElementP7HashMap8string_t+0xc>
    14eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14ec:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    14f0:	53                   	push   rbx
    14f1:	74 34                	je     1527 <_Z11hashMapCtorPFj8string_tEj+0x97>
    14f3:	61                   	(bad)
    14f4:	74 61                	je     1557 <_Z17hashMapAddElementP7HashMap8string_t+0x17>
    14f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14f7:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    14fb:	4f 5f                	rex.WRXB pop r15
    14fd:	46                   	rex.RX
    14fe:	49                   	rex.WB
    14ff:	4c                   	rex.WR
    1500:	45 00 6d 6f          	add    BYTE PTR [r13+0x6f],r13b
    1504:	64 66 00 5f 5a       	data16 add BYTE PTR fs:[rdi+0x5a],bl
    1509:	53                   	push   rbx
    150a:	74 31                	je     153d <_Z11hashMapCtorPFj8string_tEj+0xad>
    150c:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    150f:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    1513:	73 69                	jae    157e <_Z17hashMapAddElementP7HashMap8string_t+0x3e>
    1515:	66 79 64             	data16 jns 157c <_Z17hashMapAddElementP7HashMap8string_t+0x3c>
    1518:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    151b:	53                   	push   rbx
    151c:	74 31                	je     154f <_Z17hashMapAddElementP7HashMap8string_t+0xf>
    151e:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    1521:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    1525:	73 69                	jae    1590 <_Z17hashMapAddElementP7HashMap8string_t+0x50>
    1527:	66 79 65             	data16 jns 158f <_Z17hashMapAddElementP7HashMap8string_t+0x4f>
    152a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    152d:	53                   	push   rbx
    152e:	74 31                	je     1561 <_Z17hashMapAddElementP7HashMap8string_t+0x21>
    1530:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    1533:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    1537:	73 69                	jae    15a2 <_Z17hashMapAddElementP7HashMap8string_t+0x62>
    1539:	66 79 66             	data16 jns 15a2 <_Z17hashMapAddElementP7HashMap8string_t+0x62>
    153c:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    153f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1540:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1541:	76 65                	jbe    15a8 <_Z17hashMapAddElementP7HashMap8string_t+0x68>
    1543:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1546:	4f 5f                	rex.WRXB pop r15
    1548:	77 69                	ja     15b3 <_Z17hashMapAddElementP7HashMap8string_t+0x73>
    154a:	64 65 5f             	fs gs pop rdi
    154d:	64 61                	fs (bad)
    154f:	74 61                	je     15b2 <_Z17hashMapAddElementP7HashMap8string_t+0x72>
    1551:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1554:	53                   	push   rbx
    1555:	74 34                	je     158b <_Z17hashMapAddElementP7HashMap8string_t+0x4b>
    1557:	66 64 69 6d 66 66 00 	imul   bp,WORD PTR fs:[rbp+0x66],0x66
    155e:	5f                   	pop    rdi
    155f:	5a                   	pop    rdx
    1560:	53                   	push   rbx
    1561:	74 34                	je     1597 <_Z17hashMapAddElementP7HashMap8string_t+0x57>
    1563:	6c                   	ins    BYTE PTR es:[rdi],dx
    1564:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1565:	67 32 65 00          	xor    ah,BYTE PTR [ebp+0x0]
    1569:	5f                   	pop    rdi
    156a:	5a                   	pop    rdx
    156b:	53                   	push   rbx
    156c:	74 34                	je     15a2 <_Z17hashMapAddElementP7HashMap8string_t+0x62>
    156e:	6c                   	ins    BYTE PTR es:[rdi],dx
    156f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1570:	67 32 66 00          	xor    ah,BYTE PTR [esi+0x0]
    1574:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1575:	70 65                	jo     15dc <_Z17hashMapAddElementP7HashMap8string_t+0x9c>
    1577:	72 61                	jb     15da <_Z17hashMapAddElementP7HashMap8string_t+0x9a>
    1579:	74 6f                	je     15ea <_Z17hashMapAddElementP7HashMap8string_t+0xaa>
    157b:	72 3d                	jb     15ba <_Z17hashMapAddElementP7HashMap8string_t+0x7a>
    157d:	00 66 67             	add    BYTE PTR [rsi+0x67],ah
    1580:	65 74 77             	gs je  15fa <_Z17hashMapAddElementP7HashMap8string_t+0xba>
    1583:	63 00                	movsxd eax,DWORD PTR [rax]
    1585:	69 73 69 6e 66 00 66 	imul   esi,DWORD PTR [rbx+0x69],0x6600666e
    158c:	70 63                	jo     15f1 <_Z17hashMapAddElementP7HashMap8string_t+0xb1>
    158e:	6c                   	ins    BYTE PTR es:[rdi],dx
    158f:	61                   	(bad)
    1590:	73 73                	jae    1605 <_Z17hashMapAddElementP7HashMap8string_t+0xc5>
    1592:	69 66 79 00 67 65 74 	imul   esp,DWORD PTR [rsi+0x79],0x74656700
    1599:	77 63                	ja     15fe <_Z17hashMapAddElementP7HashMap8string_t+0xbe>
    159b:	68 61 72 00 5f       	push   0x5f007261
    15a0:	5a                   	pop    rdx
    15a1:	53                   	push   rbx
    15a2:	74 34                	je     15d8 <_Z17hashMapAddElementP7HashMap8string_t+0x98>
    15a4:	65 72 66             	gs jb  160d <_Z17hashMapAddElementP7HashMap8string_t+0xcd>
    15a7:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    15aa:	5f                   	pop    rdi
    15ab:	5a                   	pop    rdx
    15ac:	53                   	push   rbx
    15ad:	74 34                	je     15e3 <_Z17hashMapAddElementP7HashMap8string_t+0xa3>
    15af:	65 72 66             	gs jb  1618 <_Z17hashMapPopElementP7HashMap8string_t+0x8>
    15b2:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    15b5:	66 67 65 74 77       	data16 addr32 gs je 1631 <_Z17hashMapPopElementP7HashMap8string_t+0x21>
    15ba:	73 00                	jae    15bc <_Z17hashMapAddElementP7HashMap8string_t+0x7c>
    15bc:	5f                   	pop    rdi
    15bd:	5f                   	pop    rdi
    15be:	75 69                	jne    1629 <_Z17hashMapPopElementP7HashMap8string_t+0x19>
    15c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15c1:	74 5f                	je     1622 <_Z17hashMapPopElementP7HashMap8string_t+0x12>
    15c3:	6c                   	ins    BYTE PTR es:[rdi],dx
    15c4:	65 61                	gs (bad)
    15c6:	73 74                	jae    163c <_Z17hashMapPopElementP7HashMap8string_t+0x2c>
    15c8:	31 36                	xor    DWORD PTR [rsi],esi
    15ca:	5f                   	pop    rdi
    15cb:	74 00                	je     15cd <_Z17hashMapAddElementP7HashMap8string_t+0x8d>
    15cd:	5f                   	pop    rdi
    15ce:	5a                   	pop    rdx
    15cf:	4e 53                	rex.WRX push rbx
    15d1:	74 35                	je     1608 <_Z17hashMapAddElementP7HashMap8string_t+0xc8>
    15d3:	72 61                	jb     1636 <_Z17hashMapPopElementP7HashMap8string_t+0x26>
    15d5:	74 69                	je     1640 <_Z17hashMapPopElementP7HashMap8string_t+0x30>
    15d7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15d8:	49                   	rex.WB
    15d9:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    15db:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    15de:	6c                   	ins    BYTE PTR es:[rdi],dx
    15df:	31 30                	xor    DWORD PTR [rax],esi
    15e1:	30 30                	xor    BYTE PTR [rax],dh
    15e3:	30 30                	xor    BYTE PTR [rax],dh
    15e5:	30 30                	xor    BYTE PTR [rax],dh
    15e7:	30 30                	xor    BYTE PTR [rax],dh
    15e9:	45                   	rex.RB
    15ea:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    15ef:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    15f3:	53                   	push   rbx
    15f4:	74 34                	je     162a <_Z17hashMapPopElementP7HashMap8string_t+0x1a>
    15f6:	6d                   	ins    DWORD PTR es:[rdi],dx
    15f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15f8:	64 66 65 50          	fs gs push ax
    15fc:	65 00 66 63          	add    BYTE PTR gs:[rsi+0x63],ah
    1600:	6c                   	ins    BYTE PTR es:[rdi],dx
    1601:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1602:	73 65                	jae    1669 <_Z17hashMapPopElementP7HashMap8string_t+0x59>
    1604:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    1607:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1609:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    160c:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    160f:	70 79                	jo     168a <_Z17hashMapPopElementP7HashMap8string_t+0x7a>
    1611:	73 69                	jae    167c <_Z17hashMapPopElementP7HashMap8string_t+0x6c>
    1613:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1615:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1618:	53                   	push   rbx
    1619:	74 33                	je     164e <_Z17hashMapPopElementP7HashMap8string_t+0x3e>
    161b:	74 61                	je     167e <_Z17hashMapPopElementP7HashMap8string_t+0x6e>
    161d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    161e:	66 00 5f 6d          	data16 add BYTE PTR [rdi+0x6d],bl
    1622:	6d                   	ins    DWORD PTR es:[rdi],dx
    1623:	5f                   	pop    rdi
    1624:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    1627:	33 32                	xor    esi,DWORD PTR [rdx]
    1629:	5f                   	pop    rdi
    162a:	66 69 6c 65 73 00 69 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6900
    1631:	73 6c                	jae    169f <_Z17hashMapPopElementP7HashMap8string_t+0x8f>
    1633:	65 73 73             	gs jae 16a9 <_Z17hashMapPopElementP7HashMap8string_t+0x99>
    1636:	65 71 75             	gs jno 16ae <_Z17hashMapPopElementP7HashMap8string_t+0x9e>
    1639:	61                   	(bad)
    163a:	6c                   	ins    BYTE PTR es:[rdi],dx
    163b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    163e:	53                   	push   rbx
    163f:	74 38                	je     1679 <_Z17hashMapPopElementP7HashMap8string_t+0x69>
    1641:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    1648:	6c                   	ins    BYTE PTR es:[rdi],dx
    1649:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    164d:	53                   	push   rbx
    164e:	74 38                	je     1688 <_Z17hashMapPopElementP7HashMap8string_t+0x78>
    1650:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    1657:	6c                   	ins    BYTE PTR es:[rdi],dx
    1658:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    165c:	53                   	push   rbx
    165d:	74 38                	je     1697 <_Z17hashMapPopElementP7HashMap8string_t+0x87>
    165f:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    1666:	6c                   	ins    BYTE PTR es:[rdi],dx
    1667:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    166b:	4e 53                	rex.WRX push rbx
    166d:	74 36                	je     16a5 <_Z17hashMapPopElementP7HashMap8string_t+0x95>
    166f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1672:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1673:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1674:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1675:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1679:	61                   	(bad)
    167a:	74 69                	je     16e5 <_Z17hashMapPopElementP7HashMap8string_t+0xd5>
    167c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    167d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    167e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1680:	53                   	push   rbx
    1681:	74 35                	je     16b8 <_Z17hashMapPopElementP7HashMap8string_t+0xa8>
    1683:	72 61                	jb     16e6 <_Z17hashMapPopElementP7HashMap8string_t+0xd6>
    1685:	74 69                	je     16f0 <_Z20hashMapSearchElementP7HashMap8string_t>
    1687:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1688:	49                   	rex.WB
    1689:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    168b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    168e:	6c                   	ins    BYTE PTR es:[rdi],dx
    168f:	31 30                	xor    DWORD PTR [rax],esi
    1691:	30 30                	xor    BYTE PTR [rax],dh
    1693:	30 30                	xor    BYTE PTR [rax],dh
    1695:	30 30                	xor    BYTE PTR [rax],dh
    1697:	30 30                	xor    BYTE PTR [rax],dh
    1699:	45                   	rex.RB
    169a:	45                   	rex.RB
    169b:	45 34 7a             	rex.RB xor al,0x7a
    169e:	65 72 6f             	gs jb  1710 <_Z20hashMapSearchElementP7HashMap8string_t+0x20>
    16a1:	45 76 00             	rex.RB jbe 16a4 <_Z17hashMapPopElementP7HashMap8string_t+0x94>
    16a4:	73 74                	jae    171a <_Z20hashMapSearchElementP7HashMap8string_t+0x2a>
    16a6:	61                   	(bad)
    16a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16a8:	64 61                	fs (bad)
    16aa:	72 74                	jb     1720 <_Z20hashMapSearchElementP7HashMap8string_t+0x30>
    16ac:	5f                   	pop    rdi
    16ad:	64 65 76 69          	fs gs jbe 171a <_Z20hashMapSearchElementP7HashMap8string_t+0x2a>
    16b1:	61                   	(bad)
    16b2:	74 69                	je     171d <_Z20hashMapSearchElementP7HashMap8string_t+0x2d>
    16b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16b6:	00 66 6d             	add    BYTE PTR [rsi+0x6d],ah
    16b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16ba:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    16be:	73 63                	jae    1723 <_Z20hashMapSearchElementP7HashMap8string_t+0x33>
    16c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    16c1:	70 00                	jo     16c3 <_Z17hashMapPopElementP7HashMap8string_t+0xb3>
    16c3:	5f                   	pop    rdi
    16c4:	5f                   	pop    rdi
    16c5:	72 65                	jb     172c <_Z20hashMapSearchElementP7HashMap8string_t+0x3c>
    16c7:	70 00                	jo     16c9 <_Z17hashMapPopElementP7HashMap8string_t+0xb9>
    16c9:	77 63                	ja     172e <_Z20hashMapSearchElementP7HashMap8string_t+0x3e>
    16cb:	73 70                	jae    173d <_Z20hashMapSearchElementP7HashMap8string_t+0x4d>
    16cd:	62 72 6b 00 5f       	(bad)
    16d2:	5a                   	pop    rdx
    16d3:	4e 53                	rex.WRX push rbx
    16d5:	74 36                	je     170d <_Z20hashMapSearchElementP7HashMap8string_t+0x1d>
    16d7:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    16da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16dd:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    16e1:	61                   	(bad)
    16e2:	74 69                	je     174d <_Z20hashMapSearchElementP7HashMap8string_t+0x5d>
    16e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16e6:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    16e8:	53                   	push   rbx
    16e9:	74 35                	je     1720 <_Z20hashMapSearchElementP7HashMap8string_t+0x30>
    16eb:	72 61                	jb     174e <_Z20hashMapSearchElementP7HashMap8string_t+0x5e>
    16ed:	74 69                	je     1758 <_Z20hashMapSearchElementP7HashMap8string_t+0x68>
    16ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16f0:	49                   	rex.WB
    16f1:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    16f3:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    16f6:	6c                   	ins    BYTE PTR es:[rdi],dx
    16f7:	31 30                	xor    DWORD PTR [rax],esi
    16f9:	30 30                	xor    BYTE PTR [rax],dh
    16fb:	30 30                	xor    BYTE PTR [rax],dh
    16fd:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1700:	45                   	rex.RB
    1701:	43 32 49 6c          	rex.XB xor cl,BYTE PTR [r9+0x6c]
    1705:	76 45                	jbe    174c <_Z20hashMapSearchElementP7HashMap8string_t+0x5c>
    1707:	45 52                	rex.RB push r10
    1709:	4b 54                	rex.WXB push r12
    170b:	5f                   	pop    rdi
    170c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    170f:	53                   	push   rbx
    1710:	74 36                	je     1748 <_Z20hashMapSearchElementP7HashMap8string_t+0x58>
    1712:	72 65                	jb     1779 <_Z20hashMapSearchElementP7HashMap8string_t+0x89>
    1714:	6d                   	ins    DWORD PTR es:[rdi],dx
    1715:	71 75                	jno    178c <_Z20hashMapSearchElementP7HashMap8string_t+0x9c>
    1717:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1718:	65 65 50             	gs gs push rax
    171b:	69 00 5f 5a 4e 53    	imul   eax,DWORD PTR [rax],0x534e5a5f
    1721:	74 36                	je     1759 <_Z20hashMapSearchElementP7HashMap8string_t+0x69>
    1723:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1726:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1727:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1728:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1729:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    172d:	61                   	(bad)
    172e:	74 69                	je     1799 <_Z20hashMapSearchElementP7HashMap8string_t+0xa9>
    1730:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1731:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1732:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1734:	53                   	push   rbx
    1735:	74 35                	je     176c <_Z20hashMapSearchElementP7HashMap8string_t+0x7c>
    1737:	72 61                	jb     179a <_Z20hashMapSearchElementP7HashMap8string_t+0xaa>
    1739:	74 69                	je     17a4 <_Z20hashMapSearchElementP7HashMap8string_t+0xb4>
    173b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    173c:	49                   	rex.WB
    173d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    173f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1742:	6c                   	ins    BYTE PTR es:[rdi],dx
    1743:	31 30                	xor    DWORD PTR [rax],esi
    1745:	30 30                	xor    BYTE PTR [rax],dh
    1747:	30 30                	xor    BYTE PTR [rax],dh
    1749:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    174c:	45 70 70             	rex.RB jo 17bf <_Z20hashMapSearchElementP7HashMap8string_t+0xcf>
    174f:	45 69 00 5f 5f 69 73 	imul   r8d,DWORD PTR [r8],0x73695f5f
    1756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1757:	63 32                	movsxd esi,DWORD PTR [rdx]
    1759:	33 5f 77             	xor    ebx,DWORD PTR [rdi+0x77]
    175c:	73 63                	jae    17c1 <_Z13getLoadFactorP7HashMap+0x1>
    175e:	61                   	(bad)
    175f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1760:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1764:	4e                   	rex.WRX
    1765:	4b 53                	rex.WXB push r11
    1767:	74 36                	je     179f <_Z20hashMapSearchElementP7HashMap8string_t+0xaf>
    1769:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    176c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    176d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    176e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    176f:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1773:	61                   	(bad)
    1774:	74 69                	je     17df <_Z13getLoadFactorP7HashMap+0x1f>
    1776:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1777:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1778:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    177a:	53                   	push   rbx
    177b:	74 35                	je     17b2 <_Z20hashMapSearchElementP7HashMap8string_t+0xc2>
    177d:	72 61                	jb     17e0 <_Z13getLoadFactorP7HashMap+0x20>
    177f:	74 69                	je     17ea <_Z13getLoadFactorP7HashMap+0x2a>
    1781:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1782:	49                   	rex.WB
    1783:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1785:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1788:	6c                   	ins    BYTE PTR es:[rdi],dx
    1789:	31 30                	xor    DWORD PTR [rax],esi
    178b:	30 30                	xor    BYTE PTR [rax],dh
    178d:	30 30                	xor    BYTE PTR [rax],dh
    178f:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1792:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    1798:	74 45                	je     17df <_Z13getLoadFactorP7HashMap+0x1f>
    179a:	76 00                	jbe    179c <_Z20hashMapSearchElementP7HashMap8string_t+0xac>
    179c:	67 70 5f             	addr32 jo 17fe <_Z11hashMapDtorP7HashMap+0xe>
    179f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17a0:	66 66 73 65          	data16 data16 jae 1809 <_Z11hashMapDtorP7HashMap+0x19>
    17a4:	74 00                	je     17a6 <_Z20hashMapSearchElementP7HashMap8string_t+0xb6>
    17a6:	5f                   	pop    rdi
    17a7:	5f                   	pop    rdi
    17a8:	72 68                	jb     1812 <_Z11hashMapDtorP7HashMap+0x22>
    17aa:	73 00                	jae    17ac <_Z20hashMapSearchElementP7HashMap8string_t+0xbc>
    17ac:	77 63                	ja     1811 <_Z11hashMapDtorP7HashMap+0x21>
    17ae:	73 6e                	jae    181e <_Z11hashMapDtorP7HashMap+0x2e>
    17b0:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    17b3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17b6:	53                   	push   rbx
    17b7:	74 34                	je     17ed <_Z13getLoadFactorP7HashMap+0x2d>
    17b9:	73 69                	jae    1824 <_Z11hashMapDtorP7HashMap+0x34>
    17bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17bc:	68 66 00 5f 49       	push   0x495f0066
    17c1:	4f 5f                	rex.WRXB pop r15
    17c3:	6c                   	ins    BYTE PTR es:[rdi],dx
    17c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17c5:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    17c8:	74 00                	je     17ca <_Z13getLoadFactorP7HashMap+0xa>
    17ca:	5f                   	pop    rdi
    17cb:	5f                   	pop    rdi
    17cc:	75 69                	jne    1837 <_Z11hashMapDtorP7HashMap+0x47>
    17ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17cf:	74 31                	je     1802 <_Z11hashMapDtorP7HashMap+0x12>
    17d1:	36 5f                	ss pop rdi
    17d3:	74 00                	je     17d5 <_Z13getLoadFactorP7HashMap+0x15>
    17d5:	77 6d                	ja     1844 <_Z11hashMapDtorP7HashMap+0x54>
    17d7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    17d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    17da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17db:	76 65                	jbe    1842 <_Z11hashMapDtorP7HashMap+0x52>
    17dd:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17e0:	53                   	push   rbx
    17e1:	74 36                	je     1819 <_Z11hashMapDtorP7HashMap+0x29>
    17e3:	6c                   	ins    BYTE PTR es:[rdi],dx
    17e4:	72 6f                	jb     1855 <_Z11hashMapDtorP7HashMap+0x65>
    17e6:	75 6e                	jne    1856 <_Z11hashMapDtorP7HashMap+0x66>
    17e8:	64 66 00 6c 6f 67    	data16 add BYTE PTR fs:[rdi+rbp*2+0x67],ch
    17ee:	31 30                	xor    DWORD PTR [rax],esi
    17f0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17f3:	4e 53                	rex.WRX push rbx
    17f5:	74 36                	je     182d <_Z11hashMapDtorP7HashMap+0x3d>
    17f7:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    17fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17fd:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1800:	32 31                	xor    dh,BYTE PTR [rcx]
    1802:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1805:	65 61                	gs (bad)
    1807:	64 79 5f             	fs jns 1869 <_Z6resizeP7HashMapj+0x9>
    180a:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    180e:	6b 39 69             	imul   edi,DWORD PTR [rcx],0x69
    1811:	73 5f                	jae    1872 <_Z6resizeP7HashMapj+0x12>
    1813:	73 74                	jae    1889 <_Z6resizeP7HashMapj+0x29>
    1815:	65 61                	gs (bad)
    1817:	64 79 45             	fs jns 185f <_Z11hashMapDtorP7HashMap+0x6f>
    181a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    181d:	4e 53                	rex.WRX push rbx
    181f:	74 36                	je     1857 <_Z11hashMapDtorP7HashMap+0x67>
    1821:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1824:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1825:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1827:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    182b:	61                   	(bad)
    182c:	74 69                	je     1897 <_Z6resizeP7HashMapj+0x37>
    182e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    182f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1830:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1832:	53                   	push   rbx
    1833:	74 35                	je     186a <_Z6resizeP7HashMapj+0xa>
    1835:	72 61                	jb     1898 <_Z6resizeP7HashMapj+0x38>
    1837:	74 69                	je     18a2 <_Z6resizeP7HashMapj+0x42>
    1839:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    183a:	49                   	rex.WB
    183b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    183d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1840:	6c                   	ins    BYTE PTR es:[rdi],dx
    1841:	31 30                	xor    DWORD PTR [rax],esi
    1843:	30 30                	xor    BYTE PTR [rax],dh
    1845:	30 30                	xor    BYTE PTR [rax],dh
    1847:	30 30                	xor    BYTE PTR [rax],dh
    1849:	30 30                	xor    BYTE PTR [rax],dh
    184b:	45                   	rex.RB
    184c:	45                   	rex.RB
    184d:	45                   	rex.RB
    184e:	43 34 45             	rex.XB xor al,0x45
    1851:	76 00                	jbe    1853 <_Z11hashMapDtorP7HashMap+0x63>
    1853:	5f                   	pop    rdi
    1854:	6d                   	ins    DWORD PTR es:[rdi],dx
    1855:	6d                   	ins    DWORD PTR es:[rdi],dx
    1856:	5f                   	pop    rdi
    1857:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    185a:	33 32                	xor    esi,DWORD PTR [rdx]
    185c:	55                   	push   rbp
    185d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    185e:	72 6f                	jb     18cf <_Z6resizeP7HashMapj+0x6f>
    1860:	6c                   	ins    BYTE PTR es:[rdi],dx
    1861:	6c                   	ins    BYTE PTR es:[rdi],dx
    1862:	5f                   	pop    rdi
    1863:	66 69 6c 65 73 00 77 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7700
    186a:	6d                   	ins    DWORD PTR es:[rdi],dx
    186b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    186d:	73 65                	jae    18d4 <_Z6resizeP7HashMapj+0x74>
    186f:	74 00                	je     1871 <_Z6resizeP7HashMapj+0x11>
    1871:	74 6d                	je     18e0 <_Z6resizeP7HashMapj+0x80>
    1873:	5f                   	pop    rdi
    1874:	6d                   	ins    DWORD PTR es:[rdi],dx
    1875:	69 6e 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74535a5f
    187c:	38 63 6f             	cmp    BYTE PTR [rbx+0x6f],ah
    187f:	70 79                	jo     18fa <_Z6resizeP7HashMapj+0x9a>
    1881:	73 69                	jae    18ec <_Z6resizeP7HashMapj+0x8c>
    1883:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1885:	65 65 00 5f 49       	gs add BYTE PTR gs:[rdi+0x49],bl
    188a:	4f 5f                	rex.WRXB pop r15
    188c:	72 65                	jb     18f3 <_Z6resizeP7HashMapj+0x93>
    188e:	61                   	(bad)
    188f:	64 5f                	fs pop rdi
    1891:	70 74                	jo     1907 <_Z6resizeP7HashMapj+0xa7>
    1893:	72 00                	jb     1895 <_Z6resizeP7HashMapj+0x35>
    1895:	5f                   	pop    rdi
    1896:	5a                   	pop    rdx
    1897:	53                   	push   rbx
    1898:	74 38                	je     18d2 <_Z6resizeP7HashMapj+0x72>
    189a:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    189d:	79 73                	jns    1912 <_Z6resizeP7HashMapj+0xb2>
    189f:	69 67 6e 66 66 00 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f006666
    18a6:	5a                   	pop    rdx
    18a7:	53                   	push   rbx
    18a8:	74 35                	je     18df <_Z6resizeP7HashMapj+0x7f>
    18aa:	69 73 69 6e 66 66 00 	imul   esi,DWORD PTR [rbx+0x69],0x66666e
    18b1:	6d                   	ins    DWORD PTR es:[rdi],dx
    18b2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18b4:	5f                   	pop    rdi
    18b5:	74 68                	je     191f <_Z6resizeP7HashMapj+0xbf>
    18b7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18b8:	75 73                	jne    192d <_Z6resizeP7HashMapj+0xcd>
    18ba:	61                   	(bad)
    18bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18bc:	64 73 5f             	fs jae 191e <_Z6resizeP7HashMapj+0xbe>
    18bf:	73 65                	jae    1926 <_Z6resizeP7HashMapj+0xc6>
    18c1:	70 00                	jo     18c3 <_Z6resizeP7HashMapj+0x63>
    18c3:	69 73 6c 65 73 73 67 	imul   esi,DWORD PTR [rbx+0x6c],0x67737365
    18ca:	72 65                	jb     1931 <_Z6resizeP7HashMapj+0xd1>
    18cc:	61                   	(bad)
    18cd:	74 65                	je     1934 <_Z6resizeP7HashMapj+0xd4>
    18cf:	72 00                	jb     18d1 <_Z6resizeP7HashMapj+0x71>
    18d1:	75 6e                	jne    1941 <_Z6resizeP7HashMapj+0xe1>
    18d3:	67 65 74 77          	addr32 gs je 194e <_Z6resizeP7HashMapj+0xee>
    18d7:	63 00                	movsxd eax,DWORD PTR [rax]
    18d9:	66 70 5f             	data16 jo 193b <_Z6resizeP7HashMapj+0xdb>
    18dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18dd:	66 66 73 65          	data16 data16 jae 1946 <_Z6resizeP7HashMapj+0xe6>
    18e1:	74 00                	je     18e3 <_Z6resizeP7HashMapj+0x83>
    18e3:	66 74 65             	data16 je 194b <_Z6resizeP7HashMapj+0xeb>
    18e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    18e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    18e8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    18eb:	53                   	push   rbx
    18ec:	74 34                	je     1922 <_Z6resizeP7HashMapj+0xc2>
    18ee:	61                   	(bad)
    18ef:	73 69                	jae    195a <_Z6resizeP7HashMapj+0xfa>
    18f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18f2:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    18f6:	53                   	push   rbx
    18f7:	74 34                	je     192d <_Z6resizeP7HashMapj+0xcd>
    18f9:	61                   	(bad)
    18fa:	73 69                	jae    1965 <_Z6resizeP7HashMapj+0x105>
    18fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18fd:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1901:	53                   	push   rbx
    1902:	74 33                	je     1937 <_Z6resizeP7HashMapj+0xd7>
    1904:	66 6d                	ins    WORD PTR es:[rdi],dx
    1906:	61                   	(bad)
    1907:	66 66 66 00 5f 5a    	data16 data16 data16 add BYTE PTR [rdi+0x5a],bl
    190d:	4e 53                	rex.WRX push rbx
    190f:	74 36                	je     1947 <_Z6resizeP7HashMapj+0xe7>
    1911:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1914:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1915:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1916:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1917:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    191b:	61                   	(bad)
    191c:	74 69                	je     1987 <_Z6resizeP7HashMapj+0x127>
    191e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    191f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1920:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1922:	53                   	push   rbx
    1923:	74 35                	je     195a <_Z6resizeP7HashMapj+0xfa>
    1925:	72 61                	jb     1988 <_Z6resizeP7HashMapj+0x128>
    1927:	74 69                	je     1992 <_Z6resizeP7HashMapj+0x132>
    1929:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    192a:	49                   	rex.WB
    192b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    192d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1930:	6c                   	ins    BYTE PTR es:[rdi],dx
    1931:	31 30                	xor    DWORD PTR [rax],esi
    1933:	30 30                	xor    BYTE PTR [rax],dh
    1935:	30 30                	xor    BYTE PTR [rax],dh
    1937:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    193a:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    193c:	6d                   	ins    DWORD PTR es:[rdi],dx
    193d:	45 76 00             	rex.RB jbe 1940 <_Z6resizeP7HashMapj+0xe0>
    1940:	6d                   	ins    DWORD PTR es:[rdi],dx
    1941:	62 72 6c 65 6e       	(bad)
    1946:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    1949:	72 63                	jb     19ae <_Z6resizeP7HashMapj+0x14e>
    194b:	6d                   	ins    DWORD PTR es:[rdi],dx
    194c:	70 00                	jo     194e <_Z6resizeP7HashMapj+0xee>
    194e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    194f:	70 65                	jo     19b6 <_Z6resizeP7HashMapj+0x156>
    1951:	72 61                	jb     19b4 <_Z6resizeP7HashMapj+0x154>
    1953:	74 6f                	je     19c4 <_Z6resizeP7HashMapj+0x164>
    1955:	72 2d                	jb     1984 <_Z6resizeP7HashMapj+0x124>
    1957:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    195a:	67 61                	addr32 (bad)
    195c:	74 69                	je     19c7 <_Z6resizeP7HashMapj+0x167>
    195e:	76 65                	jbe    19c5 <_Z6resizeP7HashMapj+0x165>
    1960:	5f                   	pop    rdi
    1961:	73 69                	jae    19cc <_Z6resizeP7HashMapj+0x16c>
    1963:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1965:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    1969:	31 70 00             	xor    DWORD PTR [rax+0x0],esi
    196c:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1973:	65 72 00             	gs jb  1976 <_Z6resizeP7HashMapj+0x116>
    1976:	5f                   	pop    rdi
    1977:	52                   	push   rdx
    1978:	65 70 31             	gs jo  19ac <_Z6resizeP7HashMapj+0x14c>
    197b:	00 5f 52             	add    BYTE PTR [rdi+0x52],bl
    197e:	65 70 32             	gs jo  19b3 <_Z6resizeP7HashMapj+0x153>
    1981:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    1984:	74 5f                	je     19e5 <_Z6resizeP7HashMapj+0x185>
    1986:	70 5f                	jo     19e7 <_Z6resizeP7HashMapj+0x187>
    1988:	63 73 5f             	movsxd esi,DWORD PTR [rbx+0x5f]
    198b:	70 72                	jo     19ff <_Z6resizeP7HashMapj+0x19f>
    198d:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    1991:	65 73 00             	gs jae 1994 <_Z6resizeP7HashMapj+0x134>
    1994:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1996:	61                   	(bad)
    1997:	70 73                	jo     1a0c <_Z6resizeP7HashMapj+0x1ac>
    1999:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    199e:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
    19a5:	5f                   	pop    rdi
    19a6:	74 6f                	je     1a17 <_Z6resizeP7HashMapj+0x1b7>
    19a8:	5f                   	pop    rdi
    19a9:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    19ac:	72 73                	jb     1a21 <_Z6resizeP7HashMapj+0x1c1>
    19ae:	5f                   	pop    rdi
    19af:	69 73 5f 75 6e 73 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69736e75
    19b6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    19b8:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    19bd:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    19c4:	76 73                	jbe    1a39 <_Z6resizeP7HashMapj+0x1d9>
    19c6:	77 73                	ja     1a3b <_Z6resizeP7HashMapj+0x1db>
    19c8:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    19cb:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    19cf:	53                   	push   rbx
    19d0:	74 31                	je     1a03 <_Z6resizeP7HashMapj+0x1a3>
    19d2:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    19d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    19d6:	65 73 73             	gs jae 1a4c <_Z6resizeP7HashMapj+0x1ec>
    19d9:	67 72 65             	addr32 jb 1a41 <_Z6resizeP7HashMapj+0x1e1>
    19dc:	61                   	(bad)
    19dd:	74 65                	je     1a44 <_Z6resizeP7HashMapj+0x1e4>
    19df:	72 64                	jb     1a45 <_Z6resizeP7HashMapj+0x1e5>
    19e1:	64 00 5f 6d          	add    BYTE PTR fs:[rdi+0x6d],bl
    19e5:	61                   	(bad)
    19e6:	72 6b                	jb     1a53 <_Z6resizeP7HashMapj+0x1f3>
    19e8:	65 72 73             	gs jb  1a5e <_Z6resizeP7HashMapj+0x1fe>
    19eb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19ee:	53                   	push   rbx
    19ef:	74 35                	je     1a26 <_Z6resizeP7HashMapj+0x1c6>
    19f1:	65 78 70             	gs js  1a64 <_Z6resizeP7HashMapj+0x204>
    19f4:	6d                   	ins    DWORD PTR es:[rdi],dx
    19f5:	31 65 00             	xor    DWORD PTR [rbp+0x0],esp
    19f8:	5f                   	pop    rdi
    19f9:	5a                   	pop    rdx
    19fa:	53                   	push   rbx
    19fb:	74 35                	je     1a32 <_Z6resizeP7HashMapj+0x1d2>
    19fd:	65 78 70             	gs js  1a70 <_Z6resizeP7HashMapj+0x210>
    1a00:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a01:	31 66 00             	xor    DWORD PTR [rsi+0x0],esp
    1a04:	74 6d                	je     1a73 <_Z6resizeP7HashMapj+0x213>
    1a06:	5f                   	pop    rdi
    1a07:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a08:	64 61                	fs (bad)
    1a0a:	79 00                	jns    1a0c <_Z6resizeP7HashMapj+0x1ac>
    1a0c:	5f                   	pop    rdi
    1a0d:	5a                   	pop    rdx
    1a0e:	53                   	push   rbx
    1a0f:	74 33                	je     1a44 <_Z6resizeP7HashMapj+0x1e4>
    1a11:	73 69                	jae    1a7c <_Z6resizeP7HashMapj+0x21c>
    1a13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a14:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1a18:	53                   	push   rbx
    1a19:	74 33                	je     1a4e <_Z6resizeP7HashMapj+0x1ee>
    1a1b:	73 69                	jae    1a86 <_Z6resizeP7HashMapj+0x226>
    1a1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a1e:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    1a22:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a24:	61                   	(bad)
    1a25:	74 33                	je     1a5a <_Z6resizeP7HashMapj+0x1fa>
    1a27:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    1a2a:	5f                   	pop    rdi
    1a2b:	47 5f                	rex.RXB pop r15
    1a2d:	66 70 6f             	data16 jo 1a9f <_Z6resizeP7HashMapj+0x23f>
    1a30:	73 5f                	jae    1a91 <_Z6resizeP7HashMapj+0x231>
    1a32:	74 00                	je     1a34 <_Z6resizeP7HashMapj+0x1d4>
    1a34:	5f                   	pop    rdi
    1a35:	5f                   	pop    rdi
    1a36:	75 69                	jne    1aa1 <_Z6resizeP7HashMapj+0x241>
    1a38:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a39:	74 5f                	je     1a9a <_Z6resizeP7HashMapj+0x23a>
    1a3b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a3c:	65 61                	gs (bad)
    1a3e:	73 74                	jae    1ab4 <_Z15crc32HashString8string_t+0x4>
    1a40:	36 34 5f             	ss xor al,0x5f
    1a43:	74 00                	je     1a45 <_Z6resizeP7HashMapj+0x1e5>
    1a45:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a47:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    1a4a:	74 69                	je     1ab5 <_Z15crc32HashString8string_t+0x5>
    1a4c:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a4d:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    1a51:	73 63                	jae    1ab6 <_Z15crc32HashString8string_t+0x6>
    1a53:	70 79                	jo     1ace <_Z19_mm_crc32HashString8string_t+0xe>
    1a55:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1a58:	53                   	push   rbx
    1a59:	74 37                	je     1a92 <_Z6resizeP7HashMapj+0x232>
    1a5b:	73 63                	jae    1ac0 <_Z19_mm_crc32HashString8string_t>
    1a5d:	61                   	(bad)
    1a5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a5f:	62 6c 6e             	(bad)  {k5}
    1a62:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1a64:	00 76 73             	add    BYTE PTR [rsi+0x73],dh
    1a67:	77 70                	ja     1ad9 <_Z25_mm_crc32UnrollHashString8string_t+0x9>
    1a69:	72 69                	jb     1ad4 <_Z25_mm_crc32UnrollHashString8string_t+0x4>
    1a6b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a6c:	74 66                	je     1ad4 <_Z25_mm_crc32UnrollHashString8string_t+0x4>
    1a6e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1a71:	4e 53                	rex.WRX push rbx
    1a73:	74 36                	je     1aab <_Z6resizeP7HashMapj+0x24b>
    1a75:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1a78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a7b:	31 33                	xor    DWORD PTR [rbx],esi
    1a7d:	64 75 72             	fs jne 1af2 <_Z25_mm_crc32UnrollHashString8string_t+0x22>
    1a80:	61                   	(bad)
    1a81:	74 69                	je     1aec <_Z25_mm_crc32UnrollHashString8string_t+0x1c>
    1a83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a84:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a85:	5f                   	pop    rdi
    1a86:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    1a89:	74 49                	je     1ad4 <_Z25_mm_crc32UnrollHashString8string_t+0x4>
    1a8b:	4e 53                	rex.WRX push rbx
    1a8d:	5f                   	pop    rdi
    1a8e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1a92:	61                   	(bad)
    1a93:	74 69                	je     1afe <_Z25_mm_crc32UnrollHashString8string_t+0x2e>
    1a95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a97:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1a99:	53                   	push   rbx
    1a9a:	74 35                	je     1ad1 <_Z25_mm_crc32UnrollHashString8string_t+0x1>
    1a9c:	72 61                	jb     1aff <_Z25_mm_crc32UnrollHashString8string_t+0x2f>
    1a9e:	74 69                	je     1b09 <_Z25_mm_crc32UnrollHashString8string_t+0x39>
    1aa0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1aa1:	49                   	rex.WB
    1aa2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1aa4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1aa7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1aa8:	31 30                	xor    DWORD PTR [rax],esi
    1aaa:	30 30                	xor    BYTE PTR [rax],dh
    1aac:	30 30                	xor    BYTE PTR [rax],dh
    1aae:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1ab1:	45                   	rex.RB
    1ab2:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    1ab4:	53                   	push   rbx
    1ab5:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    1ab8:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1aba:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1abd:	6c                   	ins    BYTE PTR es:[rdi],dx
    1abe:	31 30                	xor    DWORD PTR [rax],esi
    1ac0:	30 30                	xor    BYTE PTR [rax],dh
    1ac2:	30 30                	xor    BYTE PTR [rax],dh
    1ac4:	30 30                	xor    BYTE PTR [rax],dh
    1ac6:	30 30                	xor    BYTE PTR [rax],dh
    1ac8:	45                   	rex.RB
    1ac9:	45                   	rex.RB
    1aca:	45                   	rex.RB
    1acb:	45                   	rex.RB
    1acc:	4e 53                	rex.WRX push rbx
    1ace:	74 39                	je     1b09 <_Z25_mm_crc32UnrollHashString8string_t+0x39>
    1ad0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1ad2:	61                   	(bad)
    1ad3:	62                   	(bad)
    1ad4:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ad5:	65 5f                	gs pop rdi
    1ad7:	69 66 49 58 73 72 4e 	imul   esp,DWORD PTR [rsi+0x49],0x4e727358
    1ade:	53                   	push   rbx
    1adf:	5f                   	pop    rdi
    1ae0:	31 33                	xor    DWORD PTR [rbx],esi
    1ae2:	5f                   	pop    rdi
    1ae3:	5f                   	pop    rdi
    1ae4:	69 73 5f 64 75 72 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61727564
    1aeb:	74 69                	je     1b56 <_Z17adler32HashString8string_t+0x6>
    1aed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1aee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1aef:	49 54                	rex.WB push r12
    1af1:	5f                   	pop    rdi
    1af2:	45                   	rex.RB
    1af3:	45 35 76 61 6c 75    	rex.RB xor eax,0x756c6176
    1af9:	65 45 53             	gs rex.RB push r11
    1afc:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    1aff:	34 74                	xor    al,0x74
    1b01:	79 70                	jns    1b73 <_Z17adler32HashString8string_t+0x23>
    1b03:	65 45 52             	gs rex.RB push r10
    1b06:	4b                   	rex.WXB
    1b07:	4e 53                	rex.WRX push rbx
    1b09:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    1b0c:	54                   	push   rsp
    1b0d:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    1b10:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    1b13:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1b17:	53                   	push   rbx
    1b18:	74 33                	je     1b4d <_Z13sumHashString8string_t+0xd>
    1b1a:	65 78 70             	gs js  1b8d <_Z17adler32HashString8string_t+0x3d>
    1b1d:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    1b21:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1b28:	76 66                	jbe    1b90 <_Z17adler32HashString8string_t+0x40>
    1b2a:	77 73                	ja     1b9f <_Z17adler32HashString8string_t+0x4f>
    1b2c:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    1b2f:	66 00 64 61 74       	data16 add BYTE PTR [rcx+riz*2+0x74],ah
    1b34:	61                   	(bad)
    1b35:	5f                   	pop    rdi
    1b36:	61                   	(bad)
    1b37:	72 72                	jb     1bab <_Z17adler32HashString8string_t+0x5b>
    1b39:	61                   	(bad)
    1b3a:	79 00                	jns    1b3c <_Z17murmur2HashString8string_t+0xc>
    1b3c:	5f                   	pop    rdi
    1b3d:	5a                   	pop    rdx
    1b3e:	53                   	push   rbx
    1b3f:	74 34                	je     1b75 <_Z17adler32HashString8string_t+0x25>
    1b41:	66 6d                	ins    WORD PTR es:[rdi],dx
    1b43:	61                   	(bad)
    1b44:	78 65                	js     1bab <_Z17adler32HashString8string_t+0x5b>
    1b46:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1b4a:	4e 53                	rex.WRX push rbx
    1b4c:	74 36                	je     1b84 <_Z17adler32HashString8string_t+0x34>
    1b4e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1b51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b54:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1b58:	61                   	(bad)
    1b59:	74 69                	je     1bc4 <_Z17adler32HashString8string_t+0x74>
    1b5b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b5d:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1b5f:	53                   	push   rbx
    1b60:	74 35                	je     1b97 <_Z17adler32HashString8string_t+0x47>
    1b62:	72 61                	jb     1bc5 <_Z17adler32HashString8string_t+0x75>
    1b64:	74 69                	je     1bcf <_Z17adler32HashString8string_t+0x7f>
    1b66:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b67:	49                   	rex.WB
    1b68:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1b6a:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1b6d:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b6e:	31 30                	xor    DWORD PTR [rax],esi
    1b70:	30 30                	xor    BYTE PTR [rax],dh
    1b72:	30 30                	xor    BYTE PTR [rax],dh
    1b74:	30 30                	xor    BYTE PTR [rax],dh
    1b76:	30 30                	xor    BYTE PTR [rax],dh
    1b78:	45                   	rex.RB
    1b79:	45                   	rex.RB
    1b7a:	45                   	rex.RB
    1b7b:	43 34 45             	rex.XB xor al,0x45
    1b7e:	52                   	push   rdx
    1b7f:	4b 53                	rex.WXB push r11
    1b81:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    1b84:	5f                   	pop    rdi
    1b85:	5a                   	pop    rdx
    1b86:	4e                   	rex.WRX
    1b87:	4b 53                	rex.WXB push r11
    1b89:	74 36                	je     1bc1 <_Z17adler32HashString8string_t+0x71>
    1b8b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1b8e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b8f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b90:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b91:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1b95:	61                   	(bad)
    1b96:	74 69                	je     1c01 <_Z17adler32HashString8string_t+0xb1>
    1b98:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b99:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b9a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1b9c:	53                   	push   rbx
    1b9d:	74 35                	je     1bd4 <_Z17adler32HashString8string_t+0x84>
    1b9f:	72 61                	jb     1c02 <_Z17adler32HashString8string_t+0xb2>
    1ba1:	74 69                	je     1c0c <_Z17adler32HashString8string_t+0xbc>
    1ba3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ba4:	49                   	rex.WB
    1ba5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1ba7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1baa:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bab:	31 30                	xor    DWORD PTR [rax],esi
    1bad:	30 30                	xor    BYTE PTR [rax],dh
    1baf:	30 30                	xor    BYTE PTR [rax],dh
    1bb1:	30 30                	xor    BYTE PTR [rax],dh
    1bb3:	30 30                	xor    BYTE PTR [rax],dh
    1bb5:	45                   	rex.RB
    1bb6:	45                   	rex.RB
    1bb7:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    1bbd:	74 45                	je     1c04 <_Z17adler32HashString8string_t+0xb4>
    1bbf:	76 00                	jbe    1bc1 <_Z17adler32HashString8string_t+0x71>
    1bc1:	5f                   	pop    rdi
    1bc2:	5a                   	pop    rdx
    1bc3:	53                   	push   rbx
    1bc4:	74 31                	je     1bf7 <_Z17adler32HashString8string_t+0xa7>
    1bc6:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1bc9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bca:	65 73 73             	gs jae 1c40 <_Z17adler32HashString8string_t+0xf0>
    1bcd:	67 72 65             	addr32 jb 1c35 <_Z17adler32HashString8string_t+0xe5>
    1bd0:	61                   	(bad)
    1bd1:	74 65                	je     1c38 <_Z17adler32HashString8string_t+0xe8>
    1bd3:	72 65                	jb     1c3a <_Z17adler32HashString8string_t+0xea>
    1bd5:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
    1bd9:	69 64 65 00 69 73 5f 	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x735f7369
    1be0:	73 
    1be1:	74 65                	je     1c48 <_Z17adler32HashString8string_t+0xf8>
    1be3:	61                   	(bad)
    1be4:	64 79 00             	fs jns 1be7 <_Z17adler32HashString8string_t+0x97>
    1be7:	74 67                	je     1c50 <_Z17adler32HashString8string_t+0x100>
    1be9:	61                   	(bad)
    1bea:	6d                   	ins    DWORD PTR es:[rdi],dx
    1beb:	6d                   	ins    DWORD PTR es:[rdi],dx
    1bec:	61                   	(bad)
    1bed:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1bf0:	53                   	push   rbx
    1bf1:	74 37                	je     1c2a <_Z17adler32HashString8string_t+0xda>
    1bf3:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bf4:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bf5:	72 6f                	jb     1c66 <_Z17adler32HashString8string_t+0x116>
    1bf7:	75 6e                	jne    1c67 <_Z17adler32HashString8string_t+0x117>
    1bf9:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1bfe:	53                   	push   rbx
    1bff:	74 37                	je     1c38 <_Z17adler32HashString8string_t+0xe8>
    1c01:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c02:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c03:	72 6f                	jb     1c74 <_Z17adler32HashString8string_t+0x124>
    1c05:	75 6e                	jne    1c75 <_Z17adler32HashString8string_t+0x125>
    1c07:	64 66 00 74 6d 5f    	data16 add BYTE PTR fs:[rbp+rbp*2+0x5f],dh
    1c0d:	73 65                	jae    1c74 <_Z17adler32HashString8string_t+0x124>
    1c0f:	63 00                	movsxd eax,DWORD PTR [rax]
    1c11:	5f                   	pop    rdi
    1c12:	5f                   	pop    rdi
    1c13:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1c1a:	77 63                	ja     1c7f <_Z17adler32HashString8string_t+0x12f>
    1c1c:	73 74                	jae    1c92 <_Z17adler32HashString8string_t+0x142>
    1c1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c1f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c20:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1c23:	53                   	push   rbx
    1c24:	74 37                	je     1c5d <_Z17adler32HashString8string_t+0x10d>
    1c26:	73 63                	jae    1c8b <_Z17adler32HashString8string_t+0x13b>
    1c28:	61                   	(bad)
    1c29:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c2a:	62 6c 6e             	(bad)  {k6}
    1c2d:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1c2f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1c32:	53                   	push   rbx
    1c33:	74 39                	je     1c6e <_Z17adler32HashString8string_t+0x11e>
    1c35:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1c3c:	65 72 64             	gs jb  1ca3 <_Z17adler32HashString8string_t+0x153>
    1c3f:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    1c43:	70 73                	jo     1cb8 <_Z17adler32HashString8string_t+0x168>
    1c45:	74 6c                	je     1cb3 <_Z17adler32HashString8string_t+0x163>
    1c47:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    1c4a:	73 6e                	jae    1cba <_Z17adler32HashString8string_t+0x16a>
    1c4c:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    1c4f:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    1c52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c54:	72 00                	jb     1c56 <_Z17adler32HashString8string_t+0x106>
    1c56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c57:	70 65                	jo     1cbe <_Z17adler32HashString8string_t+0x16e>
    1c59:	72 61                	jb     1cbc <_Z17adler32HashString8string_t+0x16c>
    1c5b:	74 6f                	je     1ccc <_Z17adler32HashString8string_t+0x17c>
    1c5d:	72 2d                	jb     1c8c <_Z17adler32HashString8string_t+0x13c>
    1c5f:	3c 73                	cmp    al,0x73
    1c61:	74 64                	je     1cc7 <_Z17adler32HashString8string_t+0x177>
    1c63:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c65:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c69:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c6a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c6b:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c6d:	5f                   	pop    rdi
    1c6e:	56                   	push   rsi
    1c6f:	32 3a                	xor    bh,BYTE PTR [rdx]
    1c71:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    1c74:	65 61                	gs (bad)
    1c76:	64 79 5f             	fs jns 1cd8 <_Z17adler32HashString8string_t+0x188>
    1c79:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1c7d:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    1c81:	74 64                	je     1ce7 <_Z17adler32HashString8string_t+0x197>
    1c83:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c85:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c8a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c8b:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c8d:	64 75 72             	fs jne 1d02 <_Z17adler32HashString8string_t+0x1b2>
    1c90:	61                   	(bad)
    1c91:	74 69                	je     1cfc <_Z17adler32HashString8string_t+0x1ac>
    1c93:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c94:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c95:	3c 6c                	cmp    al,0x6c
    1c97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c98:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c99:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1c9d:	74 2c                	je     1ccb <_Z17adler32HashString8string_t+0x17b>
    1c9f:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1ca2:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1ca5:	72 61                	jb     1d08 <_Z17adler32HashString8string_t+0x1b8>
    1ca7:	74 69                	je     1d12 <_Z17adler32HashString8string_t+0x1c2>
    1ca9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1caa:	3c 31                	cmp    al,0x31
    1cac:	2c 20                	sub    al,0x20
    1cae:	31 30                	xor    DWORD PTR [rax],esi
    1cb0:	30 30                	xor    BYTE PTR [rax],dh
    1cb2:	30 30                	xor    BYTE PTR [rax],dh
    1cb4:	30 30                	xor    BYTE PTR [rax],dh
    1cb6:	30 30                	xor    BYTE PTR [rax],dh
    1cb8:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1cbb:	2c 20                	sub    al,0x20
    1cbd:	73 74                	jae    1d33 <_Z17adler32HashString8string_t+0x1e3>
    1cbf:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1cc2:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1cc5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cc6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cc7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cc8:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1cca:	64 75 72             	fs jne 1d3f <_Z17adler32HashString8string_t+0x1ef>
    1ccd:	61                   	(bad)
    1cce:	74 69                	je     1d39 <_Z17adler32HashString8string_t+0x1e9>
    1cd0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cd1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cd2:	3c 6c                	cmp    al,0x6c
    1cd4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cd5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cd6:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1cda:	74 2c                	je     1d08 <_Z17adler32HashString8string_t+0x1b8>
    1cdc:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1cdf:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1ce2:	72 61                	jb     1d45 <_Z17adler32HashString8string_t+0x1f5>
    1ce4:	74 69                	je     1d4f <_Z17adler32HashString8string_t+0x1ff>
    1ce6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ce7:	3c 31                	cmp    al,0x31
    1ce9:	2c 20                	sub    al,0x20
    1ceb:	31 30                	xor    DWORD PTR [rax],esi
    1ced:	30 30                	xor    BYTE PTR [rax],dh
    1cef:	30 30                	xor    BYTE PTR [rax],dh
    1cf1:	30 30                	xor    BYTE PTR [rax],dh
    1cf3:	30 30                	xor    BYTE PTR [rax],dh
    1cf5:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1cf8:	20 3e                	and    BYTE PTR [rsi],bh
    1cfa:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    1cfe:	32 00                	xor    al,BYTE PTR [rax]
    1d00:	70 75                	jo     1d77 <_Z13elfHashString8string_t+0x17>
    1d02:	74 77                	je     1d7b <_Z13elfHashString8string_t+0x1b>
    1d04:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1d07:	72 00                	jb     1d09 <_Z17adler32HashString8string_t+0x1b9>
    1d09:	5f                   	pop    rdi
    1d0a:	5f                   	pop    rdi
    1d0b:	62 75 69 6c 74       	(bad)
    1d10:	69 6e 5f 73 71 72 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74727173
    1d17:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1d1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d1c:	61                   	(bad)
    1d1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d1e:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    1d21:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1d23:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1d26:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d29:	53                   	push   rbx
    1d2a:	74 31                	je     1d5d <_Z17adler32HashString8string_t+0x20d>
    1d2c:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1d2f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d30:	65 73 73             	gs jae 1da6 <_Z13elfHashString8string_t+0x46>
    1d33:	67 72 65             	addr32 jb 1d9b <_Z13elfHashString8string_t+0x3b>
    1d36:	61                   	(bad)
    1d37:	74 65                	je     1d9e <_Z13elfHashString8string_t+0x3e>
    1d39:	72 66                	jb     1da1 <_Z13elfHashString8string_t+0x41>
    1d3b:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1d3f:	53                   	push   rbx
    1d40:	74 35                	je     1d77 <_Z13elfHashString8string_t+0x17>
    1d42:	66 72 65             	data16 jb 1daa <_Z13elfHashString8string_t+0x4a>
    1d45:	78 70                	js     1db7 <_Z13elfHashString8string_t+0x57>
    1d47:	65 50                	gs push rax
    1d49:	69 00 66 61 62 73    	imul   eax,DWORD PTR [rax],0x73626166
    1d4f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d52:	62 75 69 6c 74       	(bad)
    1d57:	69 6e 5f 66 77 72 69 	imul   ebp,DWORD PTR [rsi+0x5f],0x69727766
    1d5e:	74 65                	je     1dc5 <_Z13elfHashString8string_t+0x65>
    1d60:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d63:	53                   	push   rbx
    1d64:	74 35                	je     1d9b <_Z13elfHashString8string_t+0x3b>
    1d66:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d67:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d68:	67 31 70 66          	xor    DWORD PTR [eax+0x66],esi
    1d6c:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    1d6f:	74 69                	je     1dda <_Z13elfHashString8string_t+0x7a>
    1d71:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d72:	3c 31                	cmp    al,0x31
    1d74:	2c 20                	sub    al,0x20
    1d76:	31 30                	xor    DWORD PTR [rax],esi
    1d78:	30 30                	xor    BYTE PTR [rax],dh
    1d7a:	30 30                	xor    BYTE PTR [rax],dh
    1d7c:	30 3e                	xor    BYTE PTR [rsi],bh
    1d7e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d81:	53                   	push   rbx
    1d82:	74 39                	je     1dbd <_Z13elfHashString8string_t+0x5d>
    1d84:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1d8b:	65 72 65             	gs jb  1df3 <_Z13elfHashString8string_t+0x93>
    1d8e:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1d92:	4e                   	rex.WRX
    1d93:	4b 53                	rex.WXB push r11
    1d95:	74 36                	je     1dcd <_Z13elfHashString8string_t+0x6d>
    1d97:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1d9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d9b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d9c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d9d:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1da1:	61                   	(bad)
    1da2:	74 69                	je     1e0d <_Z13elfHashString8string_t+0xad>
    1da4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1da5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1da6:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1da8:	53                   	push   rbx
    1da9:	74 35                	je     1de0 <_Z13elfHashString8string_t+0x80>
    1dab:	72 61                	jb     1e0e <_Z13elfHashString8string_t+0xae>
    1dad:	74 69                	je     1e18 <_Z13elfHashString8string_t+0xb8>
    1daf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1db0:	49                   	rex.WB
    1db1:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1db3:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1db6:	6c                   	ins    BYTE PTR es:[rdi],dx
    1db7:	31 30                	xor    DWORD PTR [rax],esi
    1db9:	30 30                	xor    BYTE PTR [rax],dh
    1dbb:	30 30                	xor    BYTE PTR [rax],dh
    1dbd:	30 30                	xor    BYTE PTR [rax],dh
    1dbf:	30 30                	xor    BYTE PTR [rax],dh
    1dc1:	45                   	rex.RB
    1dc2:	45                   	rex.RB
    1dc3:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    1dc5:	67 45 76 00          	addr32 rex.RB jbe 1dc9 <_Z13elfHashString8string_t+0x69>
    1dc9:	5f                   	pop    rdi
    1dca:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1dcc:	61                   	(bad)
    1dcd:	67 73 32             	addr32 jae 1e02 <_Z13elfHashString8string_t+0xa2>
    1dd0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1dd3:	4e 53                	rex.WRX push rbx
    1dd5:	74 35                	je     1e0c <_Z13elfHashString8string_t+0xac>
    1dd7:	72 61                	jb     1e3a <_Z13elfHashString8string_t+0xda>
    1dd9:	74 69                	je     1e44 <_Z13elfHashString8string_t+0xe4>
    1ddb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ddc:	49                   	rex.WB
    1ddd:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1ddf:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1de2:	6c                   	ins    BYTE PTR es:[rdi],dx
    1de3:	31 30                	xor    DWORD PTR [rax],esi
    1de5:	30 30                	xor    BYTE PTR [rax],dh
    1de7:	45                   	rex.RB
    1de8:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    1dec:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ded:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1df1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1df3:	75 5f                	jne    1e54 <_Z13elfHashString8string_t+0xf4>
    1df5:	64 65 62 75 67 00 5f 	(bad)
    1dfc:	5f                   	pop    rdi
    1dfd:	75 69                	jne    1e68 <_Z13elfHashString8string_t+0x108>
    1dff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e00:	74 5f                	je     1e61 <_Z13elfHashString8string_t+0x101>
    1e02:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e03:	65 61                	gs (bad)
    1e05:	73 74                	jae    1e7b <_Z13searchElementP4List8string_t.part.0+0xb>
    1e07:	33 32                	xor    esi,DWORD PTR [rdx]
    1e09:	5f                   	pop    rdi
    1e0a:	74 00                	je     1e0c <_Z13elfHashString8string_t+0xac>
    1e0c:	5f                   	pop    rdi
    1e0d:	5a                   	pop    rdx
    1e0e:	53                   	push   rbx
    1e0f:	74 34                	je     1e45 <_Z13elfHashString8string_t+0xe5>
    1e11:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1e14:	74 65                	je     1e7b <_Z13searchElementP4List8string_t.part.0+0xb>
    1e16:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1e19:	53                   	push   rbx
    1e1a:	74 34                	je     1e50 <_Z13elfHashString8string_t+0xf0>
    1e1c:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1e1f:	74 66                	je     1e87 <_Z13searchElementP4List8string_t.part.0+0x17>
    1e21:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1e24:	4f 5f                	rex.WRXB pop r15
    1e26:	72 65                	jb     1e8d <_Z13searchElementP4List8string_t.part.0+0x1d>
    1e28:	61                   	(bad)
    1e29:	64 5f                	fs pop rdi
    1e2b:	62 61 73 65 00       	(bad)
    1e30:	5f                   	pop    rdi
    1e31:	5a                   	pop    rdx
    1e32:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    1e35:	65 73 74             	gs jae 1eac <_Z8listCtorv+0xc>
    1e38:	53                   	push   rbx
    1e39:	65 61                	gs (bad)
    1e3b:	72 63                	jb     1ea0 <_Z8listCtorv>
    1e3d:	68 54 69 6d 65       	push   0x656d6954
    1e42:	50                   	push   rax
    1e43:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    1e46:	4f 5f                	rex.WRXB pop r15
    1e48:	46                   	rex.RX
    1e49:	49                   	rex.WB
    1e4a:	4c                   	rex.WR
    1e4b:	45 50                	rex.RB push r8
    1e4d:	46 6a 38             	rex.RX push 0x38
    1e50:	73 74                	jae    1ec6 <_Z8listCtorv+0x26>
    1e52:	72 69                	jb     1ebd <_Z8listCtorv+0x1d>
    1e54:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e55:	67 5f                	addr32 pop rdi
    1e57:	74 45                	je     1e9e <_Z13searchElementP4List8string_t.part.0+0x2e>
    1e59:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    1e5d:	74 44                	je     1ea3 <_Z8listCtorv+0x3>
    1e5f:	61                   	(bad)
    1e60:	74 61                	je     1ec3 <_Z8listCtorv+0x23>
    1e62:	6a 6a                	push   0x6a
    1e64:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e67:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1e6e:	77 63                	ja     1ed3 <_Z8listCtorv+0x33>
    1e70:	73 74                	jae    1ee6 <_Z8listCtorv+0x46>
    1e72:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e73:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e74:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e75:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    1e78:	72 6d                	jb     1ee7 <_Z8listCtorv+0x47>
    1e7a:	75 72                	jne    1eee <_Z8listCtorv+0x4e>
    1e7c:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    1e7f:	69 6c 65 73 00 5f 5a 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x535a5f00
    1e86:	53 
    1e87:	74 34                	je     1ebd <_Z8listCtorv+0x1d>
    1e89:	6d                   	ins    DWORD PTR es:[rdi],dx
    1e8a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e8b:	64 66 66 50          	fs data16 push ax
    1e8f:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1e93:	67 72 65             	addr32 jb 1efb <_Z8listCtorv+0x5b>
    1e96:	61                   	(bad)
    1e97:	74 65                	je     1efe <_Z8listCtorv+0x5e>
    1e99:	72 65                	jb     1f00 <_Z8listCtorv+0x60>
    1e9b:	71 75                	jno    1f12 <_Z12pushListElemP4List8string_t+0x2>
    1e9d:	61                   	(bad)
    1e9e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e9f:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    1ea2:	67 5f                	addr32 pop rdi
    1ea4:	73 61                	jae    1f07 <_Z8listCtorv+0x67>
    1ea6:	76 65                	jbe    1f0d <_Z8listCtorv+0x6d>
    1ea8:	5f                   	pop    rdi
    1ea9:	61                   	(bad)
    1eaa:	72 65                	jb     1f11 <_Z12pushListElemP4List8string_t+0x1>
    1eac:	61                   	(bad)
    1ead:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1eb0:	53                   	push   rbx
    1eb1:	74 35                	je     1ee8 <_Z8listCtorv+0x48>
    1eb3:	72 6f                	jb     1f24 <_Z12pushListElemP4List8string_t+0x14>
    1eb5:	75 6e                	jne    1f25 <_Z12pushListElemP4List8string_t+0x15>
    1eb7:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1ebc:	53                   	push   rbx
    1ebd:	74 35                	je     1ef4 <_Z8listCtorv+0x54>
    1ebf:	72 6f                	jb     1f30 <_Z12pushListElemP4List8string_t+0x20>
    1ec1:	75 6e                	jne    1f31 <_Z12pushListElemP4List8string_t+0x21>
    1ec3:	64 66 00 74 68 69    	data16 add BYTE PTR fs:[rax+rbp*2+0x69],dh
    1ec9:	73 00                	jae    1ecb <_Z8listCtorv+0x2b>
    1ecb:	5f                   	pop    rdi
    1ecc:	5a                   	pop    rdx
    1ecd:	4e 53                	rex.WRX push rbx
    1ecf:	74 35                	je     1f06 <_Z8listCtorv+0x66>
    1ed1:	72 61                	jb     1f34 <_Z12pushListElemP4List8string_t+0x24>
    1ed3:	74 69                	je     1f3e <_Z12pushListElemP4List8string_t+0x2e>
    1ed5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ed6:	49                   	rex.WB
    1ed7:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1ed9:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1edc:	6c                   	ins    BYTE PTR es:[rdi],dx
    1edd:	31 30                	xor    DWORD PTR [rax],esi
    1edf:	30 30                	xor    BYTE PTR [rax],dh
    1ee1:	30 30                	xor    BYTE PTR [rax],dh
    1ee3:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1ee6:	33 64 65 6e          	xor    esp,DWORD PTR [rbp+riz*2+0x6e]
    1eea:	45 00 5f 75          	add    BYTE PTR [r15+0x75],r11b
    1eee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1eef:	75 73                	jne    1f64 <_Z12pushListElemP4List8string_t+0x54>
    1ef1:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    1ef5:	5f                   	pop    rdi
    1ef6:	5a                   	pop    rdx
    1ef7:	4e 53                	rex.WRX push rbx
    1ef9:	74 36                	je     1f31 <_Z12pushListElemP4List8string_t+0x21>
    1efb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1efe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1eff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f00:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f01:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f05:	61                   	(bad)
    1f06:	74 69                	je     1f71 <_Z12pushListElemP4List8string_t+0x61>
    1f08:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f09:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f0a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f0c:	53                   	push   rbx
    1f0d:	74 35                	je     1f44 <_Z12pushListElemP4List8string_t+0x34>
    1f0f:	72 61                	jb     1f72 <_Z12pushListElemP4List8string_t+0x62>
    1f11:	74 69                	je     1f7c <_Z12pushListElemP4List8string_t+0x6c>
    1f13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f14:	49                   	rex.WB
    1f15:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f17:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f1b:	31 30                	xor    DWORD PTR [rax],esi
    1f1d:	30 30                	xor    BYTE PTR [rax],dh
    1f1f:	30 30                	xor    BYTE PTR [rax],dh
    1f21:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1f24:	45 70 70             	rex.RB jo 1f97 <_Z12pushListElemP4List8string_t+0x87>
    1f27:	45 76 00             	rex.RB jbe 1f2a <_Z12pushListElemP4List8string_t+0x1a>
    1f2a:	74 6d                	je     1f99 <_Z12pushListElemP4List8string_t+0x89>
    1f2c:	5f                   	pop    rdi
    1f2d:	67 6d                	ins    DWORD PTR es:[edi],dx
    1f2f:	74 6f                	je     1fa0 <_Z12pushListElemP4List8string_t+0x90>
    1f31:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    1f36:	4e 53                	rex.WRX push rbx
    1f38:	74 36                	je     1f70 <_Z12pushListElemP4List8string_t+0x60>
    1f3a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1f3d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f3f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f40:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f44:	61                   	(bad)
    1f45:	74 69                	je     1fb0 <_Z12pushListElemP4List8string_t+0xa0>
    1f47:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f49:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f4b:	53                   	push   rbx
    1f4c:	74 35                	je     1f83 <_Z12pushListElemP4List8string_t+0x73>
    1f4e:	72 61                	jb     1fb1 <_Z12pushListElemP4List8string_t+0xa1>
    1f50:	74 69                	je     1fbb <_Z12pushListElemP4List8string_t+0xab>
    1f52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f53:	49                   	rex.WB
    1f54:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f56:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f59:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f5a:	31 30                	xor    DWORD PTR [rax],esi
    1f5c:	30 30                	xor    BYTE PTR [rax],dh
    1f5e:	30 30                	xor    BYTE PTR [rax],dh
    1f60:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1f63:	45                   	rex.RB
    1f64:	43 34 45             	rex.XB xor al,0x45
    1f67:	76 00                	jbe    1f69 <_Z12pushListElemP4List8string_t+0x59>
    1f69:	65 72 66             	gs jb  1fd2 <_Z12pushListElemP4List8string_t+0xc2>
    1f6c:	63 00                	movsxd eax,DWORD PTR [rax]
    1f6e:	74 65                	je     1fd5 <_Z12pushListElemP4List8string_t+0xc5>
    1f70:	73 74                	jae    1fe6 <_Z12pushListElemP4List8string_t+0xd6>
    1f72:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    1f74:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f75:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f76:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    1f7d:	5f                   	pop    rdi
    1f7e:	5a                   	pop    rdx
    1f7f:	53                   	push   rbx
    1f80:	74 34                	je     1fb6 <_Z12pushListElemP4List8string_t+0xa6>
    1f82:	73 69                	jae    1fed <_Z12pushListElemP4List8string_t+0xdd>
    1f84:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f85:	68 65 00 61 73       	push   0x73610065
    1f8a:	69 6e 68 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x68],0x535a5f00
    1f91:	74 36                	je     1fc9 <_Z12pushListElemP4List8string_t+0xb9>
    1f93:	74 67                	je     1ffc <_Z12pushListElemP4List8string_t+0xec>
    1f95:	61                   	(bad)
    1f96:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f97:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f98:	61                   	(bad)
    1f99:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1f9d:	53                   	push   rbx
    1f9e:	74 36                	je     1fd6 <_Z12pushListElemP4List8string_t+0xc6>
    1fa0:	74 67                	je     2009 <_Z12pushListElemP4List8string_t+0xf9>
    1fa2:	61                   	(bad)
    1fa3:	6d                   	ins    DWORD PTR es:[rdi],dx
    1fa4:	6d                   	ins    DWORD PTR es:[rdi],dx
    1fa5:	61                   	(bad)
    1fa6:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1faa:	4e 53                	rex.WRX push rbx
    1fac:	74 36                	je     1fe4 <_Z12pushListElemP4List8string_t+0xd4>
    1fae:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1fb1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fb3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fb4:	31 30                	xor    DWORD PTR [rax],esi
    1fb6:	74 69                	je     2021 <_Z12pushListElemP4List8string_t+0x111>
    1fb8:	6d                   	ins    DWORD PTR es:[rdi],dx
    1fb9:	65 5f                	gs pop rdi
    1fbb:	70 6f                	jo     202c <_Z12pushListElemP4List8string_t+0x11c>
    1fbd:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1fc4:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1fc7:	32 31                	xor    dh,BYTE PTR [rcx]
    1fc9:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1fcc:	65 61                	gs (bad)
    1fce:	64 79 5f             	fs jns 2030 <_Z12pushListElemP4List8string_t+0x120>
    1fd1:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1fd5:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    1fd9:	5f                   	pop    rdi
    1fda:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1fde:	61                   	(bad)
    1fdf:	74 69                	je     204a <_Z12pushListElemP4List8string_t+0x13a>
    1fe1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fe2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fe3:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1fe5:	53                   	push   rbx
    1fe6:	74 35                	je     201d <_Z12pushListElemP4List8string_t+0x10d>
    1fe8:	72 61                	jb     204b <_Z12pushListElemP4List8string_t+0x13b>
    1fea:	74 69                	je     2055 <_Z12pushListElemP4List8string_t+0x145>
    1fec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fed:	49                   	rex.WB
    1fee:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1ff0:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1ff3:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ff4:	31 30                	xor    DWORD PTR [rax],esi
    1ff6:	30 30                	xor    BYTE PTR [rax],dh
    1ff8:	30 30                	xor    BYTE PTR [rax],dh
    1ffa:	30 30                	xor    BYTE PTR [rax],dh
    1ffc:	30 30                	xor    BYTE PTR [rax],dh
    1ffe:	45                   	rex.RB
    1fff:	45                   	rex.RB
    2000:	45                   	rex.RB
    2001:	45                   	rex.RB
    2002:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    2006:	78 45                	js     204d <_Z12pushListElemP4List8string_t+0x13d>
    2008:	76 00                	jbe    200a <_Z12pushListElemP4List8string_t+0xfa>
    200a:	5f                   	pop    rdi
    200b:	5a                   	pop    rdx
    200c:	53                   	push   rbx
    200d:	74 35                	je     2044 <_Z12pushListElemP4List8string_t+0x134>
    200f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2010:	64 65 78 70          	fs gs js 2084 <_Z12pushListElemP4List8string_t+0x174>
    2014:	66 69 00 5f 5a       	imul   ax,WORD PTR [rax],0x5a5f
    2019:	4e 53                	rex.WRX push rbx
    201b:	74 36                	je     2053 <_Z12pushListElemP4List8string_t+0x143>
    201d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2021:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2022:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2023:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2027:	61                   	(bad)
    2028:	74 69                	je     2093 <_Z12pushListElemP4List8string_t+0x183>
    202a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    202b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    202c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    202e:	53                   	push   rbx
    202f:	74 35                	je     2066 <_Z12pushListElemP4List8string_t+0x156>
    2031:	72 61                	jb     2094 <_Z12pushListElemP4List8string_t+0x184>
    2033:	74 69                	je     209e <_Z12pushListElemP4List8string_t+0x18e>
    2035:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2036:	49                   	rex.WB
    2037:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2039:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    203c:	6c                   	ins    BYTE PTR es:[rdi],dx
    203d:	31 30                	xor    DWORD PTR [rax],esi
    203f:	30 30                	xor    BYTE PTR [rax],dh
    2041:	30 30                	xor    BYTE PTR [rax],dh
    2043:	30 30                	xor    BYTE PTR [rax],dh
    2045:	30 30                	xor    BYTE PTR [rax],dh
    2047:	45                   	rex.RB
    2048:	45                   	rex.RB
    2049:	45 70 4c             	rex.RB jo 2098 <_Z12pushListElemP4List8string_t+0x188>
    204c:	45 52                	rex.RB push r10
    204e:	4b 53                	rex.WXB push r11
    2050:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    2053:	5f                   	pop    rdi
    2054:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2055:	6c                   	ins    BYTE PTR es:[rdi],dx
    2056:	64 5f                	fs pop rdi
    2058:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2059:	66 66 73 65          	data16 data16 jae 20c2 <_Z11popListElemP4List8string_t+0x12>
    205d:	74 00                	je     205f <_Z12pushListElemP4List8string_t+0x14f>
    205f:	66 73 65             	data16 jae 20c7 <_Z11popListElemP4List8string_t+0x17>
    2062:	74 70                	je     20d4 <_Z11popListElemP4List8string_t+0x24>
    2064:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2065:	73 00                	jae    2067 <_Z12pushListElemP4List8string_t+0x157>
    2067:	72 61                	jb     20ca <_Z11popListElemP4List8string_t+0x1a>
    2069:	74 69                	je     20d4 <_Z11popListElemP4List8string_t+0x24>
    206b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    206c:	3c 31                	cmp    al,0x31
    206e:	2c 20                	sub    al,0x20
    2070:	31 30                	xor    DWORD PTR [rax],esi
    2072:	30 30                	xor    BYTE PTR [rax],dh
    2074:	30 30                	xor    BYTE PTR [rax],dh
    2076:	30 30                	xor    BYTE PTR [rax],dh
    2078:	30 30                	xor    BYTE PTR [rax],dh
    207a:	3e 00 69 6e          	ds add BYTE PTR [rcx+0x6e],ch
    207e:	74 5f                	je     20df <_Z11popListElemP4List8string_t+0x2f>
    2080:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2081:	5f                   	pop    rdi
    2082:	73 65                	jae    20e9 <_Z11popListElemP4List8string_t+0x39>
    2084:	70 5f                	jo     20e5 <_Z11popListElemP4List8string_t+0x35>
    2086:	62 79 5f 73 70       	(bad)
    208b:	61                   	(bad)
    208c:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    208f:	5f                   	pop    rdi
    2090:	5a                   	pop    rdx
    2091:	4e 53                	rex.WRX push rbx
    2093:	74 35                	je     20ca <_Z11popListElemP4List8string_t+0x1a>
    2095:	72 61                	jb     20f8 <_Z11popListElemP4List8string_t+0x48>
    2097:	74 69                	je     2102 <_Z11popListElemP4List8string_t+0x52>
    2099:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    209a:	49                   	rex.WB
    209b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    209d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    20a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    20a1:	31 30                	xor    DWORD PTR [rax],esi
    20a3:	30 30                	xor    BYTE PTR [rax],dh
    20a5:	30 30                	xor    BYTE PTR [rax],dh
    20a7:	30 30                	xor    BYTE PTR [rax],dh
    20a9:	30 30                	xor    BYTE PTR [rax],dh
    20ab:	45                   	rex.RB
    20ac:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    20b0:	6d                   	ins    DWORD PTR es:[rdi],dx
    20b1:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    20b5:	53                   	push   rbx
    20b6:	74 35                	je     20ed <_Z11popListElemP4List8string_t+0x3d>
    20b8:	69 73 6e 61 6e 64 00 	imul   esi,DWORD PTR [rbx+0x6e],0x646e61
    20bf:	5f                   	pop    rdi
    20c0:	5a                   	pop    rdx
    20c1:	53                   	push   rbx
    20c2:	74 35                	je     20f9 <_Z11popListElemP4List8string_t+0x49>
    20c4:	69 73 6e 61 6e 65 00 	imul   esi,DWORD PTR [rbx+0x6e],0x656e61
    20cb:	5f                   	pop    rdi
    20cc:	5a                   	pop    rdx
    20cd:	53                   	push   rbx
    20ce:	74 35                	je     2105 <_Z11popListElemP4List8string_t+0x55>
    20d0:	69 73 6e 61 6e 66 00 	imul   esi,DWORD PTR [rbx+0x6e],0x666e61
    20d7:	5f                   	pop    rdi
    20d8:	5f                   	pop    rdi
    20d9:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    20e0:	73 77                	jae    2159 <_Z11popListElemP4List8string_t+0xa9>
    20e2:	73 63                	jae    2147 <_Z11popListElemP4List8string_t+0x97>
    20e4:	61                   	(bad)
    20e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20e6:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    20ea:	4e 53                	rex.WRX push rbx
    20ec:	74 36                	je     2124 <_Z11popListElemP4List8string_t+0x74>
    20ee:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    20f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20f4:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    20f8:	61                   	(bad)
    20f9:	74 69                	je     2164 <_Z11popListElemP4List8string_t+0xb4>
    20fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20fd:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    20ff:	53                   	push   rbx
    2100:	74 35                	je     2137 <_Z11popListElemP4List8string_t+0x87>
    2102:	72 61                	jb     2165 <_Z11popListElemP4List8string_t+0xb5>
    2104:	74 69                	je     216f <_Z11popListElemP4List8string_t+0xbf>
    2106:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2107:	49                   	rex.WB
    2108:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    210a:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    210d:	6c                   	ins    BYTE PTR es:[rdi],dx
    210e:	31 30                	xor    DWORD PTR [rax],esi
    2110:	30 30                	xor    BYTE PTR [rax],dh
    2112:	30 30                	xor    BYTE PTR [rax],dh
    2114:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2117:	45 34 7a             	rex.RB xor al,0x7a
    211a:	65 72 6f             	gs jb  218c <_Z13searchElementP4List8string_t+0x1c>
    211d:	45 76 00             	rex.RB jbe 2120 <_Z11popListElemP4List8string_t+0x70>
    2120:	5f                   	pop    rdi
    2121:	5a                   	pop    rdx
    2122:	4e 53                	rex.WRX push rbx
    2124:	74 36                	je     215c <_Z11popListElemP4List8string_t+0xac>
    2126:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2129:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    212a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    212b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    212c:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2130:	61                   	(bad)
    2131:	74 69                	je     219c <_Z13searchElementP4List8string_t+0x2c>
    2133:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2134:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2135:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2137:	53                   	push   rbx
    2138:	74 35                	je     216f <_Z11popListElemP4List8string_t+0xbf>
    213a:	72 61                	jb     219d <_Z13searchElementP4List8string_t+0x2d>
    213c:	74 69                	je     21a7 <_Z13searchElementP4List8string_t+0x37>
    213e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    213f:	49                   	rex.WB
    2140:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2142:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2145:	6c                   	ins    BYTE PTR es:[rdi],dx
    2146:	31 30                	xor    DWORD PTR [rax],esi
    2148:	30 30                	xor    BYTE PTR [rax],dh
    214a:	30 30                	xor    BYTE PTR [rax],dh
    214c:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    214f:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    2151:	4c                   	rex.WR
    2152:	45 52                	rex.RB push r10
    2154:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    2156:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2159:	4e 53                	rex.WRX push rbx
    215b:	74 36                	je     2193 <_Z13searchElementP4List8string_t+0x23>
    215d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2160:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2161:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2162:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2163:	31 30                	xor    DWORD PTR [rax],esi
    2165:	74 69                	je     21d0 <_Z8listDtorP4List>
    2167:	6d                   	ins    DWORD PTR es:[rdi],dx
    2168:	65 5f                	gs pop rdi
    216a:	70 6f                	jo     21db <_Z8listDtorP4List+0xb>
    216c:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    2173:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    2176:	32 31                	xor    dh,BYTE PTR [rcx]
    2178:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    217b:	65 61                	gs (bad)
    217d:	64 79 5f             	fs jns 21df <_Z8listDtorP4List+0xf>
    2180:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2184:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2188:	5f                   	pop    rdi
    2189:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    218d:	61                   	(bad)
    218e:	74 69                	je     21f9 <_Z8listDtorP4List+0x29>
    2190:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2191:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2192:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2194:	53                   	push   rbx
    2195:	74 35                	je     21cc <_Z13searchElementP4List8string_t+0x5c>
    2197:	72 61                	jb     21fa <_Z8listDtorP4List+0x2a>
    2199:	74 69                	je     2204 <_Z8listDtorP4List+0x34>
    219b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    219c:	49                   	rex.WB
    219d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    219f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    21a2:	6c                   	ins    BYTE PTR es:[rdi],dx
    21a3:	31 30                	xor    DWORD PTR [rax],esi
    21a5:	30 30                	xor    BYTE PTR [rax],dh
    21a7:	30 30                	xor    BYTE PTR [rax],dh
    21a9:	30 30                	xor    BYTE PTR [rax],dh
    21ab:	30 30                	xor    BYTE PTR [rax],dh
    21ad:	45                   	rex.RB
    21ae:	45                   	rex.RB
    21af:	45                   	rex.RB
    21b0:	45                   	rex.RB
    21b1:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    21b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21b6:	45 76 00             	rex.RB jbe 21b9 <_Z13searchElementP4List8string_t+0x49>
    21b9:	5f                   	pop    rdi
    21ba:	5f                   	pop    rdi
    21bb:	63 64 00 5f          	movsxd esp,DWORD PTR [rax+rax*1+0x5f]
    21bf:	5a                   	pop    rdx
    21c0:	53                   	push   rbx
    21c1:	74 35                	je     21f8 <_Z8listDtorP4List+0x28>
    21c3:	74 72                	je     2237 <_Z8readFilePKcPm+0x27>
    21c5:	75 6e                	jne    2235 <_Z8readFilePKcPm+0x25>
    21c7:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    21ca:	5f                   	pop    rdi
    21cb:	5a                   	pop    rdx
    21cc:	53                   	push   rbx
    21cd:	74 35                	je     2204 <_Z8listDtorP4List+0x34>
    21cf:	74 72                	je     2243 <_Z8readFilePKcPm+0x33>
    21d1:	75 6e                	jne    2241 <_Z8readFilePKcPm+0x31>
    21d3:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    21d6:	5f                   	pop    rdi
    21d7:	5a                   	pop    rdx
    21d8:	53                   	push   rbx
    21d9:	74 34                	je     220f <_Z8listDtorP4List+0x3f>
    21db:	66 6d                	ins    WORD PTR es:[rdi],dx
    21dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21de:	64 66 66 00 77 6d    	data16 data16 add BYTE PTR fs:[rdi+0x6d],dh
    21e4:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    21e6:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    21e9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21ec:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    21f3:	66 77 73             	data16 ja 2269 <_Z8readFilePKcPm+0x59>
    21f6:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    21f9:	66 00 74 6d 5f       	data16 add BYTE PTR [rbp+rbp*2+0x5f],dh
    21fe:	6d                   	ins    DWORD PTR es:[rdi],dx
    21ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2200:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2201:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2204:	64 5f                	fs pop rdi
    2206:	64 65 76 69          	fs gs jbe 2273 <_Z8readFilePKcPm+0x63>
    220a:	61                   	(bad)
    220b:	74 69                	je     2276 <_Z8readFilePKcPm+0x66>
    220d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    220e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    220f:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
    2212:	72 65                	jb     2279 <_Z8readFilePKcPm+0x69>
    2214:	65 72 65             	gs jb  227c <_Z8readFilePKcPm+0x6c>
    2217:	73 5f                	jae    2278 <_Z8readFilePKcPm+0x68>
    2219:	6c                   	ins    BYTE PTR es:[rdi],dx
    221a:	69 73 74 00 5f 5a 4e 	imul   esi,DWORD PTR [rbx+0x74],0x4e5a5f00
    2221:	53                   	push   rbx
    2222:	74 36                	je     225a <_Z8readFilePKcPm+0x4a>
    2224:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2227:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2228:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2229:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    222a:	6d                   	ins    DWORD PTR es:[rdi],dx
    222b:	69 49 6c 53 74 35 72 	imul   ecx,DWORD PTR [rcx+0x6c],0x72357453
    2232:	61                   	(bad)
    2233:	74 69                	je     229e <_Z8readFilePKcPm+0x8e>
    2235:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2236:	49                   	rex.WB
    2237:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2239:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    223c:	6c                   	ins    BYTE PTR es:[rdi],dx
    223d:	31 30                	xor    DWORD PTR [rax],esi
    223f:	30 30                	xor    BYTE PTR [rax],dh
    2241:	30 30                	xor    BYTE PTR [rax],dh
    2243:	30 30                	xor    BYTE PTR [rax],dh
    2245:	30 30                	xor    BYTE PTR [rax],dh
    2247:	45                   	rex.RB
    2248:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    224a:	53                   	push   rbx
    224b:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    224e:	45                   	rex.RB
    224f:	4e 53                	rex.WRX push rbx
    2251:	74 31                	je     2284 <_Z8readFilePKcPm+0x74>
    2253:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    2256:	6d                   	ins    DWORD PTR es:[rdi],dx
    2257:	6d                   	ins    DWORD PTR es:[rdi],dx
    2258:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2259:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    225a:	5f                   	pop    rdi
    225b:	74 79                	je     22d6 <_Z8readFilePKcPm+0xc6>
    225d:	70 65                	jo     22c4 <_Z8readFilePKcPm+0xb4>
    225f:	49                   	rex.WB
    2260:	4a                   	rex.WX
    2261:	4e 53                	rex.WRX push rbx
    2263:	5f                   	pop    rdi
    2264:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2268:	61                   	(bad)
    2269:	74 69                	je     22d4 <_Z8readFilePKcPm+0xc4>
    226b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    226c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    226d:	49 54                	rex.WB push r12
    226f:	5f                   	pop    rdi
    2270:	54                   	push   rsp
    2271:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    2274:	45                   	rex.RB
    2275:	4e 53                	rex.WRX push rbx
    2277:	34 5f                	xor    al,0x5f
    2279:	49 54                	rex.WB push r12
    227b:	31 5f 54             	xor    DWORD PTR [rdi+0x54],ebx
    227e:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    2281:	45                   	rex.RB
    2282:	45                   	rex.RB
    2283:	45 34 74             	rex.RB xor al,0x74
    2286:	79 70                	jns    22f8 <_Z8readFilePKcPm+0xe8>
    2288:	65 45 52             	gs rex.RB push r10
    228b:	4b 53                	rex.WXB push r11
    228d:	37                   	(bad)
    228e:	5f                   	pop    rdi
    228f:	52                   	push   rdx
    2290:	4b 53                	rex.WXB push r11
    2292:	41 5f                	pop    r15
    2294:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2297:	4e 53                	rex.WRX push rbx
    2299:	74 36                	je     22d1 <_Z8readFilePKcPm+0xc1>
    229b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    229e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    229f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22a1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    22a5:	61                   	(bad)
    22a6:	74 69                	je     2311 <_Z8readFilePKcPm+0x101>
    22a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22aa:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    22ac:	53                   	push   rbx
    22ad:	74 35                	je     22e4 <_Z8readFilePKcPm+0xd4>
    22af:	72 61                	jb     2312 <_Z8readFilePKcPm+0x102>
    22b1:	74 69                	je     231c <_Z8readFilePKcPm+0x10c>
    22b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22b4:	49                   	rex.WB
    22b5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    22b7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    22ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    22bb:	31 30                	xor    DWORD PTR [rax],esi
    22bd:	30 30                	xor    BYTE PTR [rax],dh
    22bf:	30 30                	xor    BYTE PTR [rax],dh
    22c1:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    22c4:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    22c8:	78 45                	js     230f <_Z8readFilePKcPm+0xff>
    22ca:	76 00                	jbe    22cc <_Z8readFilePKcPm+0xbc>
    22cc:	5f                   	pop    rdi
    22cd:	49                   	rex.WB
    22ce:	4f 5f                	rex.WRXB pop r15
    22d0:	77 72                	ja     2344 <_Z10countLinesPcm+0x24>
    22d2:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
    22d9:	00 
    22da:	5f                   	pop    rdi
    22db:	54                   	push   rsp
    22dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22dd:	44 75 72             	rex.R jne 2352 <_Z10countLinesPcm+0x32>
    22e0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    22e3:	4e 53                	rex.WRX push rbx
    22e5:	74 36                	je     231d <_Z8readFilePKcPm+0x10d>
    22e7:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    22ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22ed:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    22f1:	61                   	(bad)
    22f2:	74 69                	je     235d <_Z10countLinesPcm+0x3d>
    22f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22f6:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    22f8:	53                   	push   rbx
    22f9:	74 35                	je     2330 <_Z10countLinesPcm+0x10>
    22fb:	72 61                	jb     235e <_Z10countLinesPcm+0x3e>
    22fd:	74 69                	je     2368 <_Z10countLinesPcm+0x48>
    22ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2300:	49                   	rex.WB
    2301:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2303:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2306:	6c                   	ins    BYTE PTR es:[rdi],dx
    2307:	31 30                	xor    DWORD PTR [rax],esi
    2309:	30 30                	xor    BYTE PTR [rax],dh
    230b:	30 30                	xor    BYTE PTR [rax],dh
    230d:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2310:	45 61                	rex.RB (bad)
    2312:	53                   	push   rbx
    2313:	45 52                	rex.RB push r10
    2315:	4b 53                	rex.WXB push r11
    2317:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    231a:	5f                   	pop    rdi
    231b:	5a                   	pop    rdx
    231c:	53                   	push   rbx
    231d:	74 34                	je     2353 <_Z10countLinesPcm+0x33>
    231f:	73 71                	jae    2392 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2>
    2321:	72 74                	jb     2397 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x7>
    2323:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2327:	53                   	push   rbx
    2328:	74 34                	je     235e <_Z10countLinesPcm+0x3e>
    232a:	73 71                	jae    239d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xd>
    232c:	72 74                	jb     23a2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x12>
    232e:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    2332:	34 74                	xor    al,0x74
    2334:	65 73 74             	gs jae 23ab <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1b>
    2337:	50                   	push   rax
    2338:	46 6a 38             	rex.RX push 0x38
    233b:	73 74                	jae    23b1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x21>
    233d:	72 69                	jb     23a8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x18>
    233f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2340:	67 5f                	addr32 pop rdi
    2342:	74 45                	je     2389 <_Z10countLinesPcm+0x69>
    2344:	39 46 69             	cmp    DWORD PTR [rsi+0x69],eax
    2347:	6c                   	ins    BYTE PTR es:[rdi],dx
    2348:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    234a:	61                   	(bad)
    234b:	6d                   	ins    DWORD PTR es:[rdi],dx
    234c:	65 73 38             	gs jae 2387 <_Z10countLinesPcm+0x67>
    234f:	54                   	push   rsp
    2350:	65 73 74             	gs jae 23c7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x37>
    2353:	44 61                	rex.R (bad)
    2355:	74 61                	je     23b8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x28>
    2357:	6a 6a                	push   0x6a
    2359:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    235c:	74 6f                	je     23cd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3d>
    235e:	62                   	(bad)
    235f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2362:	62 75 69 6c 74       	(bad)
    2367:	69 6e 5f 70 75 74 73 	imul   ebp,DWORD PTR [rsi+0x5f],0x73747570
    236e:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2371:	65 72 69             	gs jb  23dd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x4d>
    2374:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2375:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    2378:	61                   	(bad)
    2379:	76 65                	jbe    23e0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x50>
    237b:	72 61                	jb     23de <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x4e>
    237d:	67 65 5f             	addr32 gs pop rdi
    2380:	74 69                	je     23eb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x5b>
    2382:	6d                   	ins    DWORD PTR es:[rdi],dx
    2383:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
    2387:	61                   	(bad)
    2388:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2389:	64 61                	fs (bad)
    238b:	72 74                	jb     2401 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x71>
    238d:	44                   	rex.R
    238e:	65 76 69             	gs jbe 23fa <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x6a>
    2391:	61                   	(bad)
    2392:	74 69                	je     23fd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x6d>
    2394:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2395:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2396:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    2398:	6c                   	ins    BYTE PTR es:[rdi],dx
    2399:	6c                   	ins    BYTE PTR es:[rdi],dx
    239a:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    23a1:	5f                   	pop    rdi
    23a2:	44 75 72             	rex.R jne 2417 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x87>
    23a5:	31 00                	xor    DWORD PTR [rax],eax
    23a7:	5f                   	pop    rdi
    23a8:	44 75 72             	rex.R jne 241d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x8d>
    23ab:	32 00                	xor    al,BYTE PTR [rax]
    23ad:	73 65                	jae    2414 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x84>
    23af:	61                   	(bad)
    23b0:	72 63                	jb     2415 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x85>
    23b2:	68 5f 74 69 6d       	push   0x6d69745f
    23b7:	65 5f                	gs pop rdi
    23b9:	61                   	(bad)
    23ba:	72 72                	jb     242e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x9e>
    23bc:	61                   	(bad)
    23bd:	79 00                	jns    23bf <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2f>
    23bf:	5f                   	pop    rdi
    23c0:	5f                   	pop    rdi
    23c1:	74 6f                	je     2432 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa2>
    23c3:	5f                   	pop    rdi
    23c4:	72 65                	jb     242b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x9b>
    23c6:	70 00                	jo     23c8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x38>
    23c8:	76 66                	jbe    2430 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa0>
    23ca:	77 70                	ja     243c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xac>
    23cc:	72 69                	jb     2437 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa7>
    23ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23cf:	74 66                	je     2437 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa7>
    23d1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23d4:	69 6e 74 6d 61 78 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f78616d
    23db:	74 00                	je     23dd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x4d>
    23dd:	5f                   	pop    rdi
    23de:	49                   	rex.WB
    23df:	4f 5f                	rex.WRXB pop r15
    23e1:	62 75 66 5f 62       	(bad)
    23e6:	61                   	(bad)
    23e7:	73 65                	jae    244e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xbe>
    23e9:	00 54 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dl
    23ed:	74 44                	je     2433 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xa3>
    23ef:	61                   	(bad)
    23f0:	74 61                	je     2453 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xc3>
    23f2:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    23f6:	62                   	(bad)
    23f7:	6c                   	ins    BYTE PTR es:[rdi],dx
    23f8:	65 5f                	gs pop rdi
    23fa:	74 00                	je     23fc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x6c>
    23fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    23fd:	6c                   	ins    BYTE PTR es:[rdi],dx
    23fe:	72 6f                	jb     246f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xdf>
    2400:	75 6e                	jne    2470 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xe0>
    2402:	64 00 70 65          	add    BYTE PTR fs:[rax+0x65],dh
    2406:	72 72                	jb     247a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xea>
    2408:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2409:	72 00                	jb     240b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x7b>
    240b:	77 63                	ja     2470 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xe0>
    240d:	73 73                	jae    2482 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xf2>
    240f:	70 6e                	jo     247f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xef>
    2411:	00 66 73             	add    BYTE PTR [rsi+0x73],ah
    2414:	65 65 6b 00 5f       	gs imul eax,DWORD PTR gs:[rax],0x5f
    2419:	5f                   	pop    rdi
    241a:	70 61                	jo     247d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xed>
    241c:	64 35 00 73 65 74    	fs xor eax,0x74657300
    2422:	76 62                	jbe    2486 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xf6>
    2424:	75 66                	jne    248c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xfc>
    2426:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2429:	65 72 69             	gs jb  2495 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x105>
    242c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    242d:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
    2431:	6d                   	ins    DWORD PTR es:[rdi],dx
    2432:	71 75                	jno    24a9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x119>
    2434:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2435:	00 6d 6b             	add    BYTE PTR [rbp+0x6b],ch
    2438:	74 69                	je     24a3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x113>
    243a:	6d                   	ins    DWORD PTR es:[rdi],dx
    243b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    243f:	53                   	push   rbx
    2440:	74 35                	je     2477 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xe7>
    2442:	61                   	(bad)
    2443:	74 61                	je     24a6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x116>
    2445:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2446:	32 65 65             	xor    ah,BYTE PTR [rbp+0x65]
    2449:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    244d:	65 5f                	gs pop rdi
    244f:	73 69                	jae    24ba <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x12a>
    2451:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2452:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2455:	65 70 6f             	gs jo  24c7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x137>
    2458:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
    245b:	7a 65                	jp     24c2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x132>
    245d:	72 6f                	jb     24ce <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x13e>
    245f:	00 6f 76             	add    BYTE PTR [rdi+0x76],ch
    2462:	65 72 66             	gs jb  24cb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x13b>
    2465:	6c                   	ins    BYTE PTR es:[rdi],dx
    2466:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2467:	77 5f                	ja     24c8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x138>
    2469:	61                   	(bad)
    246a:	72 67                	jb     24d3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x143>
    246c:	5f                   	pop    rdi
    246d:	61                   	(bad)
    246e:	72 65                	jb     24d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x145>
    2470:	61                   	(bad)
    2471:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2474:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2475:	61                   	(bad)
    2476:	6d                   	ins    DWORD PTR es:[rdi],dx
    2477:	65 00 5f 66          	add    BYTE PTR gs:[rdi+0x66],bl
    247b:	6c                   	ins    BYTE PTR es:[rdi],dx
    247c:	61                   	(bad)
    247d:	67 73 00             	addr32 jae 2480 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xf0>
    2480:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2483:	6d                   	ins    DWORD PTR es:[rdi],dx
    2484:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2485:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2486:	5f                   	pop    rdi
    2487:	74 79                	je     2502 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x172>
    2489:	70 65                	jo     24f0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x160>
    248b:	3c 73                	cmp    al,0x73
    248d:	74 64                	je     24f3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x163>
    248f:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2491:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2494:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2495:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2496:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2497:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2499:	64 75 72             	fs jne 250e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x17e>
    249c:	61                   	(bad)
    249d:	74 69                	je     2508 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x178>
    249f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24a1:	3c 6c                	cmp    al,0x6c
    24a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24a5:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    24a9:	74 2c                	je     24d7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x147>
    24ab:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    24ae:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    24b1:	72 61                	jb     2514 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x184>
    24b3:	74 69                	je     251e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x18e>
    24b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24b6:	3c 31                	cmp    al,0x31
    24b8:	2c 20                	sub    al,0x20
    24ba:	31 30                	xor    DWORD PTR [rax],esi
    24bc:	30 30                	xor    BYTE PTR [rax],dh
    24be:	30 30                	xor    BYTE PTR [rax],dh
    24c0:	30 30                	xor    BYTE PTR [rax],dh
    24c2:	30 30                	xor    BYTE PTR [rax],dh
    24c4:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    24c7:	2c 20                	sub    al,0x20
    24c9:	73 74                	jae    253f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1af>
    24cb:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    24ce:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    24d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24d4:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    24d6:	64 75 72             	fs jne 254b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1bb>
    24d9:	61                   	(bad)
    24da:	74 69                	je     2545 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1b5>
    24dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24de:	3c 6c                	cmp    al,0x6c
    24e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24e2:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    24e6:	74 2c                	je     2514 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x184>
    24e8:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    24eb:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    24ee:	72 61                	jb     2551 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1c1>
    24f0:	74 69                	je     255b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1cb>
    24f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24f3:	3c 31                	cmp    al,0x31
    24f5:	2c 20                	sub    al,0x20
    24f7:	31 30                	xor    DWORD PTR [rax],esi
    24f9:	30 30                	xor    BYTE PTR [rax],dh
    24fb:	30 30                	xor    BYTE PTR [rax],dh
    24fd:	30 30                	xor    BYTE PTR [rax],dh
    24ff:	30 30                	xor    BYTE PTR [rax],dh
    2501:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2504:	20 3e                	and    BYTE PTR [rsi],bh
    2506:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2509:	53                   	push   rbx
    250a:	74 35                	je     2541 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1b1>
    250c:	66 72 65             	data16 jb 2574 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1e4>
    250f:	78 70                	js     2581 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1f1>
    2511:	66 50                	push   ax
    2513:	69 00 5f 44 65 6e    	imul   eax,DWORD PTR [rax],0x6e65445f
    2519:	49 73 4f             	rex.WB jae 256b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1db>
    251c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    251d:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2521:	53                   	push   rbx
    2522:	74 35                	je     2559 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1c9>
    2524:	61                   	(bad)
    2525:	74 61                	je     2588 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1f8>
    2527:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2528:	68 65 00 5f 5a       	push   0x5a5f0065
    252d:	53                   	push   rbx
    252e:	74 35                	je     2565 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1d5>
    2530:	61                   	(bad)
    2531:	74 61                	je     2594 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x204>
    2533:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2534:	68 66 00 5f 5a       	push   0x5a5f0066
    2539:	53                   	push   rbx
    253a:	74 34                	je     2570 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1e0>
    253c:	61                   	(bad)
    253d:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2540:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2544:	53                   	push   rbx
    2545:	74 34                	je     257b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1eb>
    2547:	61                   	(bad)
    2548:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    254b:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    254f:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2553:	6b 5f 74 00          	imul   ebx,DWORD PTR [rdi+0x74],0x0
    2557:	5f                   	pop    rdi
    2558:	5f                   	pop    rdi
    2559:	6d                   	ins    DWORD PTR es:[rdi],dx
    255a:	61                   	(bad)
    255b:	78 5f                	js     25bc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x22c>
    255d:	61                   	(bad)
    255e:	6c                   	ins    BYTE PTR es:[rdi],dx
    255f:	69 67 6e 5f 6c 6c 00 	imul   esp,DWORD PTR [rdi+0x6e],0x6c6c5f
    2566:	77 63                	ja     25cb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x23b>
    2568:	73 6c                	jae    25d6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x246>
    256a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    256c:	00 63 62             	add    BYTE PTR [rbx+0x62],ah
    256f:	72 74                	jb     25e5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x255>
    2571:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2574:	53                   	push   rbx
    2575:	74 37                	je     25ae <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x21e>
    2577:	73 69                	jae    25e2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x252>
    2579:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    257b:	62 69 74 65 00       	(bad)
    2580:	67 65 74 63          	addr32 gs je 25e7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x257>
    2584:	68 61 72 00 5f       	push   0x5f007261
    2589:	5a                   	pop    rdx
    258a:	53                   	push   rbx
    258b:	74 35                	je     25c2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x232>
    258d:	61                   	(bad)
    258e:	74 61                	je     25f1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x261>
    2590:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2591:	32 66 66             	xor    ah,BYTE PTR [rsi+0x66]
    2594:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2597:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    259a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    259b:	74 00                	je     259d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x20d>
    259d:	5f                   	pop    rdi
    259e:	5f                   	pop    rdi
    259f:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    25a6:	76 77                	jbe    261f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x28f>
    25a8:	73 63                	jae    260d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x27d>
    25aa:	61                   	(bad)
    25ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25ac:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
    25b0:	61                   	(bad)
    25b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25b2:	68 00 5f 5a 53       	push   0x535a5f00
    25b7:	74 31                	je     25ea <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x25a>
    25b9:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
    25bc:	78 74                	js     2632 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2a2>
    25be:	74 6f                	je     262f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x29f>
    25c0:	77 61                	ja     2623 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x293>
    25c2:	72 64                	jb     2628 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x298>
    25c4:	65 65 00 73 63       	gs add BYTE PTR gs:[rbx+0x63],dh
    25c9:	61                   	(bad)
    25ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    25cb:	62 6c 6e             	(bad)
    25ce:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    25d1:	74 62                	je     2635 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2a5>
    25d3:	75 66                	jne    263b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2ab>
    25d5:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
    25d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25d9:	66 00 74 69 6d       	data16 add BYTE PTR [rcx+rbp*2+0x6d],dh
    25de:	65 5f                	gs pop rdi
    25e0:	70 6f                	jo     2651 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2c1>
    25e2:	69 6e 74 3c 73 74 64 	imul   ebp,DWORD PTR [rsi+0x74],0x6474733c
    25e9:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    25eb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    25ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25f1:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    25f3:	5f                   	pop    rdi
    25f4:	56                   	push   rsi
    25f5:	32 3a                	xor    bh,BYTE PTR [rdx]
    25f7:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    25fa:	65 61                	gs (bad)
    25fc:	64 79 5f             	fs jns 265e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2ce>
    25ff:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2603:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    2607:	74 64                	je     266d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2dd>
    2609:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    260b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    260e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    260f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2610:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2611:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2613:	64 75 72             	fs jne 2688 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2f8>
    2616:	61                   	(bad)
    2617:	74 69                	je     2682 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2f2>
    2619:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    261a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    261b:	3c 6c                	cmp    al,0x6c
    261d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    261e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    261f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2623:	74 2c                	je     2651 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2c1>
    2625:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2628:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    262b:	72 61                	jb     268e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2fe>
    262d:	74 69                	je     2698 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x308>
    262f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2630:	3c 31                	cmp    al,0x31
    2632:	2c 20                	sub    al,0x20
    2634:	31 30                	xor    DWORD PTR [rax],esi
    2636:	30 30                	xor    BYTE PTR [rax],dh
    2638:	30 30                	xor    BYTE PTR [rax],dh
    263a:	30 30                	xor    BYTE PTR [rax],dh
    263c:	30 30                	xor    BYTE PTR [rax],dh
    263e:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2641:	20 3e                	and    BYTE PTR [rsi],bh
    2643:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2646:	53                   	push   rbx
    2647:	74 33                	je     267c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2ec>
    2649:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    264c:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2650:	53                   	push   rbx
    2651:	74 33                	je     2686 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2f6>
    2653:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2656:	66 00 63 6f          	data16 add BYTE PTR [rbx+0x6f],ah
    265a:	6c                   	ins    BYTE PTR es:[rdi],dx
    265b:	6c                   	ins    BYTE PTR es:[rdi],dx
    265c:	69 73 69 6f 6e 5f 66 	imul   esi,DWORD PTR [rbx+0x69],0x665f6e6f
    2663:	69 6c 65 6e 61 6d 65 	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x656d61
    266a:	00 
    266b:	66 69 6c 65 73 79 73 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7379
    2672:	74 65                	je     26d9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x349>
    2674:	6d                   	ins    DWORD PTR es:[rdi],dx
    2675:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    2678:	74 61                	je     26db <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x34b>
    267a:	62                   	(bad)
    267b:	6c                   	ins    BYTE PTR es:[rdi],dx
    267c:	65 5f                	gs pop rdi
    267e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    267f:	66 66 73 65          	data16 data16 jae 26e8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x358>
    2683:	74 00                	je     2685 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2f5>
    2685:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2687:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2688:	61                   	(bad)
    2689:	74 5f                	je     26ea <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x35a>
    268b:	74 00                	je     268d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2fd>
    268d:	5f                   	pop    rdi
    268e:	44 75 72             	rex.R jne 2703 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x373>
    2691:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2694:	65 72 61             	gs jb  26f8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x368>
    2697:	74 6f                	je     2708 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x378>
    2699:	72 2d                	jb     26c8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x338>
    269b:	3c 6c                	cmp    al,0x6c
    269d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    269e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    269f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    26a3:	74 2c                	je     26d1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x341>
    26a5:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    26a8:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    26ab:	72 61                	jb     270e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x37e>
    26ad:	74 69                	je     2718 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x388>
    26af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26b0:	3c 31                	cmp    al,0x31
    26b2:	2c 20                	sub    al,0x20
    26b4:	31 30                	xor    DWORD PTR [rax],esi
    26b6:	30 30                	xor    BYTE PTR [rax],dh
    26b8:	30 30                	xor    BYTE PTR [rax],dh
    26ba:	30 30                	xor    BYTE PTR [rax],dh
    26bc:	30 30                	xor    BYTE PTR [rax],dh
    26be:	3e 2c 20             	ds sub al,0x20
    26c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    26c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26c4:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    26c8:	74 2c                	je     26f6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x366>
    26ca:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    26cd:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    26d0:	72 61                	jb     2733 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3a3>
    26d2:	74 69                	je     273d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ad>
    26d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26d5:	3c 31                	cmp    al,0x31
    26d7:	2c 20                	sub    al,0x20
    26d9:	31 30                	xor    DWORD PTR [rax],esi
    26db:	30 30                	xor    BYTE PTR [rax],dh
    26dd:	30 30                	xor    BYTE PTR [rax],dh
    26df:	30 30                	xor    BYTE PTR [rax],dh
    26e1:	30 30                	xor    BYTE PTR [rax],dh
    26e3:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    26e6:	00 69 6c             	add    BYTE PTR [rcx+0x6c],ch
    26e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26ea:	67 62                	addr32 (bad)
    26ec:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    26ef:	61                   	(bad)
    26f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26f1:	64 61                	fs (bad)
    26f3:	72 74                	jb     2769 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3d9>
    26f5:	44                   	rex.R
    26f6:	65 76 69             	gs jbe 2762 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3d2>
    26f9:	61                   	(bad)
    26fa:	74 69                	je     2765 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3d5>
    26fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26fe:	54                   	push   rsp
    26ff:	69 6d 65 00 5f 5a 53 	imul   ebp,DWORD PTR [rbp+0x65],0x535a5f00
    2706:	74 38                	je     2740 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3b0>
    2708:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    270f:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    2714:	53                   	push   rbx
    2715:	74 34                	je     274b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3bb>
    2717:	65 78 70             	gs js  278a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3fa>
    271a:	32 65 00             	xor    ah,BYTE PTR [rbp+0x0]
    271d:	5f                   	pop    rdi
    271e:	5a                   	pop    rdx
    271f:	53                   	push   rbx
    2720:	74 34                	je     2756 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3c6>
    2722:	65 78 70             	gs js  2795 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x405>
    2725:	32 66 00             	xor    ah,BYTE PTR [rsi+0x0]
    2728:	5f                   	pop    rdi
    2729:	4e 75 6d             	rex.WRX jne 2799 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x409>
    272c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    272f:	77 63                	ja     2794 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x404>
    2731:	68 62 00 61 74       	push   0x74610062
    2736:	61                   	(bad)
    2737:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2738:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    273b:	69 6e 74 38 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x74],0x745f38
    2742:	5f                   	pop    rdi
    2743:	5a                   	pop    rdx
    2744:	4e 53                	rex.WRX push rbx
    2746:	74 35                	je     277d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3ed>
    2748:	72 61                	jb     27ab <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x41b>
    274a:	74 69                	je     27b5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x425>
    274c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    274d:	49                   	rex.WB
    274e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2750:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2753:	6c                   	ins    BYTE PTR es:[rdi],dx
    2754:	31 30                	xor    DWORD PTR [rax],esi
    2756:	30 30                	xor    BYTE PTR [rax],dh
    2758:	30 30                	xor    BYTE PTR [rax],dh
    275a:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    275d:	33 6e 75             	xor    ebp,DWORD PTR [rsi+0x75]
    2760:	6d                   	ins    DWORD PTR es:[rdi],dx
    2761:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    2765:	53                   	push   rbx
    2766:	74 31                	je     2799 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x409>
    2768:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    276b:	6c                   	ins    BYTE PTR es:[rdi],dx
    276c:	65 73 73             	gs jae 27e2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x452>
    276f:	65 71 75             	gs jno 27e7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x457>
    2772:	61                   	(bad)
    2773:	6c                   	ins    BYTE PTR es:[rdi],dx
    2774:	65 65 00 64 75 72    	gs add BYTE PTR gs:[rbp+rsi*2+0x72],ah
    277a:	61                   	(bad)
    277b:	74 69                	je     27e6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x456>
    277d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    277e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    277f:	5f                   	pop    rdi
    2780:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    2783:	74 3c                	je     27c1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x431>
    2785:	73 74                	jae    27fb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x46b>
    2787:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    278a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    278d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    278e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    278f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2790:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2792:	64 75 72             	fs jne 2807 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x7>
    2795:	61                   	(bad)
    2796:	74 69                	je     2801 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1>
    2798:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2799:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    279a:	3c 6c                	cmp    al,0x6c
    279c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    279d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    279e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    27a2:	74 2c                	je     27d0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x440>
    27a4:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    27a7:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    27aa:	72 61                	jb     280d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xd>
    27ac:	74 69                	je     2817 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x17>
    27ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27af:	3c 31                	cmp    al,0x31
    27b1:	2c 20                	sub    al,0x20
    27b3:	31 30                	xor    DWORD PTR [rax],esi
    27b5:	30 30                	xor    BYTE PTR [rax],dh
    27b7:	30 30                	xor    BYTE PTR [rax],dh
    27b9:	30 3e                	xor    BYTE PTR [rsi],bh
    27bb:	20 3e                	and    BYTE PTR [rsi],bh
    27bd:	2c 20                	sub    al,0x20
    27bf:	6c                   	ins    BYTE PTR es:[rdi],dx
    27c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27c2:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    27c6:	74 2c                	je     27f4 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x464>
    27c8:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    27cb:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    27ce:	72 61                	jb     2831 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x31>
    27d0:	74 69                	je     283b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3b>
    27d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27d3:	3c 31                	cmp    al,0x31
    27d5:	2c 20                	sub    al,0x20
    27d7:	31 30                	xor    DWORD PTR [rax],esi
    27d9:	30 30                	xor    BYTE PTR [rax],dh
    27db:	30 30                	xor    BYTE PTR [rax],dh
    27dd:	30 30                	xor    BYTE PTR [rax],dh
    27df:	30 30                	xor    BYTE PTR [rax],dh
    27e1:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    27e4:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    27e7:	73 74                	jae    285d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x5d>
    27e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    27eb:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
    27ef:	74 5f                	je     2850 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x50>
    27f1:	70 5f                	jo     2852 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x52>
    27f3:	73 65                	jae    285a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x5a>
    27f5:	70 5f                	jo     2856 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x56>
    27f7:	62 79 5f 73 70       	(bad)
    27fc:	61                   	(bad)
    27fd:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    2800:	5f                   	pop    rdi
    2801:	5a                   	pop    rdx
    2802:	53                   	push   rbx
    2803:	74 38                	je     283d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3d>
    2805:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    280c:	65 64 00 61 76       	gs add BYTE PTR fs:[rcx+0x76],ah
    2811:	65 72 61             	gs jb  2875 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x75>
    2814:	67 65 5f             	addr32 gs pop rdi
    2817:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    281a:	6c                   	ins    BYTE PTR es:[rdi],dx
    281b:	69 73 69 6f 6e 00 5f 	imul   esi,DWORD PTR [rbx+0x69],0x5f006e6f
    2822:	5a                   	pop    rdx
    2823:	53                   	push   rbx
    2824:	74 38                	je     285e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x5e>
    2826:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    282d:	65 66 00 5f 5a       	data16 add BYTE PTR gs:[rdi+0x5a],bl
    2832:	53                   	push   rbx
    2833:	74 31                	je     2866 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x66>
    2835:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    2838:	75 6e                	jne    28a8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xa8>
    283a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    283b:	72 64                	jb     28a1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xa1>
    283d:	65 72 65             	gs jb  28a5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xa5>
    2840:	64 65 65 00 66 72    	fs gs add BYTE PTR gs:[rsi+0x72],ah
    2846:	65 78 70             	gs js  28b9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xb9>
    2849:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    284c:	4e 53                	rex.WRX push rbx
    284e:	74 36                	je     2886 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x86>
    2850:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2853:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2854:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2855:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2856:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    285a:	61                   	(bad)
    285b:	74 69                	je     28c6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xc6>
    285d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    285e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    285f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2861:	53                   	push   rbx
    2862:	74 35                	je     2899 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x99>
    2864:	72 61                	jb     28c7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xc7>
    2866:	74 69                	je     28d1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xd1>
    2868:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2869:	49                   	rex.WB
    286a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    286c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    286f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2870:	31 30                	xor    DWORD PTR [rax],esi
    2872:	30 30                	xor    BYTE PTR [rax],dh
    2874:	30 30                	xor    BYTE PTR [rax],dh
    2876:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2879:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    287d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    287e:	45 76 00             	rex.RB jbe 2881 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x81>
    2881:	77 63                	ja     28e6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xe6>
    2883:	73 73                	jae    28f8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xf8>
    2885:	74 72                	je     28f9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xf9>
    2887:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    288a:	4f 5f                	rex.WRXB pop r15
    288c:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    288f:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
    2893:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    2896:	78 74                	js     290c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x10c>
    2898:	61                   	(bad)
    2899:	66 74 65             	data16 je 2901 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x101>
    289c:	72 00                	jb     289e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x9e>
    289e:	65 78 70             	gs js  2911 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x111>
    28a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    28a2:	31 00                	xor    DWORD PTR [rax],eax
    28a4:	5f                   	pop    rdi
    28a5:	5f                   	pop    rdi
    28a6:	6d                   	ins    DWORD PTR es:[rdi],dx
    28a7:	61                   	(bad)
    28a8:	78 5f                	js     2909 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x109>
    28aa:	61                   	(bad)
    28ab:	6c                   	ins    BYTE PTR es:[rdi],dx
    28ac:	69 67 6e 5f 6c 64 00 	imul   esp,DWORD PTR [rdi+0x6e],0x646c5f
    28b3:	5f                   	pop    rdi
    28b4:	5a                   	pop    rdx
    28b5:	4e 53                	rex.WRX push rbx
    28b7:	74 36                	je     28ef <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0xef>
    28b9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    28bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28bf:	32 30                	xor    dh,BYTE PTR [rax]
    28c1:	5f                   	pop    rdi
    28c2:	5f                   	pop    rdi
    28c3:	64 75 72             	fs jne 2938 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x138>
    28c6:	61                   	(bad)
    28c7:	74 69                	je     2932 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x132>
    28c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28cb:	5f                   	pop    rdi
    28cc:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    28cf:	74 5f                	je     2930 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x130>
    28d1:	69 6d 70 6c 49 4e 53 	imul   ebp,DWORD PTR [rbp+0x70],0x534e496c
    28d8:	5f                   	pop    rdi
    28d9:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    28dd:	61                   	(bad)
    28de:	74 69                	je     2949 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x149>
    28e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28e2:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    28e4:	53                   	push   rbx
    28e5:	74 35                	je     291c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x11c>
    28e7:	72 61                	jb     294a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x14a>
    28e9:	74 69                	je     2954 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x154>
    28eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28ec:	49                   	rex.WB
    28ed:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    28ef:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    28f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    28f3:	31 30                	xor    DWORD PTR [rax],esi
    28f5:	30 30                	xor    BYTE PTR [rax],dh
    28f7:	30 30                	xor    BYTE PTR [rax],dh
    28f9:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    28fc:	45                   	rex.RB
    28fd:	45 53                	rex.RB push r11
    28ff:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    2902:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2904:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2907:	6c                   	ins    BYTE PTR es:[rdi],dx
    2908:	31 30                	xor    DWORD PTR [rax],esi
    290a:	30 30                	xor    BYTE PTR [rax],dh
    290c:	45                   	rex.RB
    290d:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    290f:	4c 62 31 45 4c 62 30 	rex.WR vpunpckldq zmm14{k4},zmm7,ZMMWORD PTR [rax]
    2916:	45                   	rex.RB
    2917:	45                   	rex.RB
    2918:	36 5f                	ss pop rdi
    291a:	5f                   	pop    rdi
    291b:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    291e:	74 49                	je     2969 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x169>
    2920:	6c                   	ins    BYTE PTR es:[rdi],dx
    2921:	53                   	push   rbx
    2922:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    2925:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2927:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    292a:	6c                   	ins    BYTE PTR es:[rdi],dx
    292b:	31 30                	xor    DWORD PTR [rax],esi
    292d:	30 30                	xor    BYTE PTR [rax],dh
    292f:	30 30                	xor    BYTE PTR [rax],dh
    2931:	30 30                	xor    BYTE PTR [rax],dh
    2933:	30 30                	xor    BYTE PTR [rax],dh
    2935:	45                   	rex.RB
    2936:	45                   	rex.RB
    2937:	45                   	rex.RB
    2938:	45 53                	rex.RB push r11
    293a:	34 5f                	xor    al,0x5f
    293c:	52                   	push   rdx
    293d:	4b                   	rex.WXB
    293e:	4e 53                	rex.WRX push rbx
    2940:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    2943:	54                   	push   rsp
    2944:	5f                   	pop    rdi
    2945:	54                   	push   rsp
    2946:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    2949:	45 00 5f 43          	add    BYTE PTR [r15+0x43],r11b
    294d:	6c                   	ins    BYTE PTR es:[rdi],dx
    294e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    294f:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    2952:	77 63                	ja     29b7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1b7>
    2954:	73 72                	jae    29c8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1c8>
    2956:	74 6f                	je     29c7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1c7>
    2958:	6d                   	ins    DWORD PTR es:[rdi],dx
    2959:	62 73 00 5f 5f       	(bad)
    295e:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2965:	73 74                	jae    29db <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1db>
    2967:	31 36                	xor    DWORD PTR [rsi],esi
    2969:	5f                   	pop    rdi
    296a:	74 00                	je     296c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x16c>
    296c:	5f                   	pop    rdi
    296d:	66 72 65             	data16 jb 29d5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1d5>
    2970:	65 72 65             	gs jb  29d8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1d8>
    2973:	73 5f                	jae    29d4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1d4>
    2975:	62 75 66 00 74       	(bad)
    297a:	6d                   	ins    DWORD PTR es:[rdi],dx
    297b:	5f                   	pop    rdi
    297c:	77 64                	ja     29e2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1e2>
    297e:	61                   	(bad)
    297f:	79 00                	jns    2981 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x181>
    2981:	5f                   	pop    rdi
    2982:	5a                   	pop    rdx
    2983:	53                   	push   rbx
    2984:	74 31                	je     29b7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1b7>
    2986:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    2989:	6c                   	ins    BYTE PTR es:[rdi],dx
    298a:	65 73 73             	gs jae 2a00 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x200>
    298d:	65 71 75             	gs jno 2a05 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x205>
    2990:	61                   	(bad)
    2991:	6c                   	ins    BYTE PTR es:[rdi],dx
    2992:	66 66 00 5f 5f       	data16 data16 add BYTE PTR [rdi+0x5f],bl
    2997:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    299a:	74 3c                	je     29d8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1d8>
    299c:	6c                   	ins    BYTE PTR es:[rdi],dx
    299d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    299e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    299f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    29a3:	74 2c                	je     29d1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1d1>
    29a5:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    29a8:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    29ab:	72 61                	jb     2a0e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x20e>
    29ad:	74 69                	je     2a18 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x218>
    29af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29b0:	3c 31                	cmp    al,0x31
    29b2:	2c 20                	sub    al,0x20
    29b4:	31 30                	xor    DWORD PTR [rax],esi
    29b6:	30 30                	xor    BYTE PTR [rax],dh
    29b8:	30 30                	xor    BYTE PTR [rax],dh
    29ba:	30 30                	xor    BYTE PTR [rax],dh
    29bc:	30 30                	xor    BYTE PTR [rax],dh
    29be:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    29c1:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    29c4:	53                   	push   rbx
    29c5:	74 35                	je     29fc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1fc>
    29c7:	68 79 70 6f 74       	push   0x746f7079
    29cc:	66 66 66 00 6d 62    	data16 data16 data16 add BYTE PTR [rbp+0x62],ch
    29d2:	73 69                	jae    2a3d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x23d>
    29d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29d5:	69 74 00 61 63 6f 73 	imul   esi,DWORD PTR [rax+rax*1+0x61],0x736f63
    29dc:	00 
    29dd:	74 6d                	je     2a4c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x24c>
    29df:	5f                   	pop    rdi
    29e0:	79 64                	jns    2a46 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x246>
    29e2:	61                   	(bad)
    29e3:	79 00                	jns    29e5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x1e5>
    29e5:	5f                   	pop    rdi
    29e6:	5a                   	pop    rdx
    29e7:	53                   	push   rbx
    29e8:	74 39                	je     2a23 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x223>
    29ea:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    29f1:	65 72 66             	gs jb  2a5a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x25a>
    29f4:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    29f8:	73 74                	jae    2a6e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x26e>
    29fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29fb:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    29ff:	73 74                	jae    2a75 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x275>
    2a01:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a02:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    2a06:	4e 53                	rex.WRX push rbx
    2a08:	74 36                	je     2a40 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x240>
    2a0a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2a0d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a0e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a10:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2a14:	61                   	(bad)
    2a15:	74 69                	je     2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x280>
    2a17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a19:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2a1b:	53                   	push   rbx
    2a1c:	74 35                	je     2a53 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x253>
    2a1e:	72 61                	jb     2a81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x281>
    2a20:	74 69                	je     2a8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x28b>
    2a22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a23:	49                   	rex.WB
    2a24:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2a26:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2a29:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a2a:	31 30                	xor    DWORD PTR [rax],esi
    2a2c:	30 30                	xor    BYTE PTR [rax],dh
    2a2e:	30 30                	xor    BYTE PTR [rax],dh
    2a30:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a33:	45                   	rex.RB
    2a34:	43 34 49             	rex.XB xor al,0x49
    2a37:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a38:	76 45                	jbe    2a7f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x27f>
    2a3a:	45 52                	rex.RB push r10
    2a3c:	4b 54                	rex.WXB push r12
    2a3e:	5f                   	pop    rdi
    2a3f:	00 61 73             	add    BYTE PTR [rcx+0x73],ah
    2a42:	69 6e 00 77 63 73 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74736377
    2a49:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a4a:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    2a4d:	5f                   	pop    rdi
    2a4e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2a51:	31 31                	xor    DWORD PTR [rcx],esi
    2a53:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2a56:	66 70 6f             	data16 jo 2ac8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2c8>
    2a59:	73 5f                	jae    2aba <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2ba>
    2a5b:	74 00                	je     2a5d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x25d>
    2a5d:	5f                   	pop    rdi
    2a5e:	5a                   	pop    rdx
    2a5f:	4e 53                	rex.WRX push rbx
    2a61:	74 36                	je     2a99 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x299>
    2a63:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2a66:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a67:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a69:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2a6d:	61                   	(bad)
    2a6e:	74 69                	je     2ad9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2d9>
    2a70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a72:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2a74:	53                   	push   rbx
    2a75:	74 35                	je     2aac <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2ac>
    2a77:	72 61                	jb     2ada <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2da>
    2a79:	74 69                	je     2ae4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2e4>
    2a7b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a7c:	49                   	rex.WB
    2a7d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2a7f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2a82:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a83:	31 30                	xor    DWORD PTR [rax],esi
    2a85:	30 30                	xor    BYTE PTR [rax],dh
    2a87:	30 30                	xor    BYTE PTR [rax],dh
    2a89:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a8c:	45                   	rex.RB
    2a8d:	64 56                	fs push rsi
    2a8f:	45 52                	rex.RB push r10
    2a91:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    2a93:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2a96:	65 72 61             	gs jb  2afa <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2fa>
    2a99:	74 6f                	je     2b0a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x30a>
    2a9b:	72 2b                	jb     2ac8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x2c8>
    2a9d:	3d 00 5f 5f 46       	cmp    eax,0x465f5f00
    2aa2:	49                   	rex.WB
    2aa3:	4c                   	rex.WR
    2aa4:	45 00 61 63          	add    BYTE PTR [r9+0x63],r12b
    2aa8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2aa9:	73 68                	jae    2b13 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x313>
    2aab:	00 74 72 75          	add    BYTE PTR [rdx+rsi*2+0x75],dh
    2aaf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ab0:	63 00                	movsxd eax,DWORD PTR [rax]
    2ab2:	5f                   	pop    rdi
    2ab3:	5f                   	pop    rdi
    2ab4:	69 6e 74 31 36 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3631
    2abb:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2abe:	4f 5f                	rex.WRXB pop r15
    2ac0:	62 61 63 6b 75       	(bad)
    2ac5:	70 5f                	jo     2b26 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x326>
    2ac7:	62 61 73 65 00       	(bad)
    2acc:	73 65                	jae    2b33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x333>
    2ace:	74 6c                	je     2b3c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x33c>
    2ad0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ad1:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    2ad4:	65 00 5f 73          	add    BYTE PTR gs:[rdi+0x73],bl
    2ad8:	68 6f 72 74 62       	push   0x6274726f
    2add:	75 66                	jne    2b45 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x345>
    2adf:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    2ae2:	74 69                	je     2b4d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x34d>
    2ae4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ae5:	3c 31                	cmp    al,0x31
    2ae7:	2c 20                	sub    al,0x20
    2ae9:	31 30                	xor    DWORD PTR [rax],esi
    2aeb:	30 30                	xor    BYTE PTR [rax],dh
    2aed:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    2af1:	4e 53                	rex.WRX push rbx
    2af3:	74 36                	je     2b2b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x32b>
    2af5:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2af8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2af9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2afa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2afb:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2aff:	61                   	(bad)
    2b00:	74 69                	je     2b6b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x36b>
    2b02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b03:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b04:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b06:	53                   	push   rbx
    2b07:	74 35                	je     2b3e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x33e>
    2b09:	72 61                	jb     2b6c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x36c>
    2b0b:	74 69                	je     2b76 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x376>
    2b0d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b0e:	49                   	rex.WB
    2b0f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b11:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b14:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b15:	31 30                	xor    DWORD PTR [rax],esi
    2b17:	30 30                	xor    BYTE PTR [rax],dh
    2b19:	30 30                	xor    BYTE PTR [rax],dh
    2b1b:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2b1e:	45                   	rex.RB
    2b1f:	36 5f                	ss pop rdi
    2b21:	53                   	push   rbx
    2b22:	5f                   	pop    rdi
    2b23:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2b28:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b29:	00 77 69             	add    BYTE PTR [rdi+0x69],dh
    2b2c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b2d:	74 5f                	je     2b8e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x38e>
    2b2f:	74 00                	je     2b31 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x331>
    2b31:	5f                   	pop    rdi
    2b32:	5a                   	pop    rdx
    2b33:	4e                   	rex.WRX
    2b34:	4b 53                	rex.WXB push r11
    2b36:	74 36                	je     2b6e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x36e>
    2b38:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b3b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b3d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b3e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b42:	61                   	(bad)
    2b43:	74 69                	je     2bae <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3ae>
    2b45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b47:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b49:	53                   	push   rbx
    2b4a:	74 35                	je     2b81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x381>
    2b4c:	72 61                	jb     2baf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3af>
    2b4e:	74 69                	je     2bb9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3b9>
    2b50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b51:	49                   	rex.WB
    2b52:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b54:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b57:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b58:	31 30                	xor    DWORD PTR [rax],esi
    2b5a:	30 30                	xor    BYTE PTR [rax],dh
    2b5c:	30 30                	xor    BYTE PTR [rax],dh
    2b5e:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2b61:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    2b63:	67 45 76 00          	addr32 rex.RB jbe 2b67 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x367>
    2b67:	5f                   	pop    rdi
    2b68:	5a                   	pop    rdx
    2b69:	53                   	push   rbx
    2b6a:	74 31                	je     2b9d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x39d>
    2b6c:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    2b6f:	75 6e                	jne    2bdf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3df>
    2b71:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b72:	72 64                	jb     2bd8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3d8>
    2b74:	65 72 65             	gs jb  2bdc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3dc>
    2b77:	64 66 66 00 74 69 6d 	data16 data16 add BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    2b7e:	65 73 70             	gs jae 2bf1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3f1>
    2b81:	65 63 5f 67          	movsxd ebx,DWORD PTR gs:[rdi+0x67]
    2b85:	65 74 00             	gs je  2b88 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x388>
    2b88:	5f                   	pop    rdi
    2b89:	5f                   	pop    rdi
    2b8a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b8b:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
    2b90:	74 00                	je     2b92 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x392>
    2b92:	5f                   	pop    rdi
    2b93:	5a                   	pop    rdx
    2b94:	4e 53                	rex.WRX push rbx
    2b96:	74 36                	je     2bce <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3ce>
    2b98:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b9c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b9d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b9e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2ba2:	61                   	(bad)
    2ba3:	74 69                	je     2c0e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x40e>
    2ba5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ba6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ba7:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2ba9:	53                   	push   rbx
    2baa:	74 35                	je     2be1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3e1>
    2bac:	72 61                	jb     2c0f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x40f>
    2bae:	74 69                	je     2c19 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x419>
    2bb0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bb1:	49                   	rex.WB
    2bb2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2bb4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2bb7:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bb8:	31 30                	xor    DWORD PTR [rax],esi
    2bba:	30 30                	xor    BYTE PTR [rax],dh
    2bbc:	30 30                	xor    BYTE PTR [rax],dh
    2bbe:	30 30                	xor    BYTE PTR [rax],dh
    2bc0:	30 30                	xor    BYTE PTR [rax],dh
    2bc2:	45                   	rex.RB
    2bc3:	45                   	rex.RB
    2bc4:	45                   	rex.RB
    2bc5:	36 5f                	ss pop rdi
    2bc7:	53                   	push   rbx
    2bc8:	5f                   	pop    rdi
    2bc9:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2bce:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bcf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2bd2:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    2bd5:	65 73 74             	gs jae 2c4c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x44c>
    2bd8:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    2bda:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bdb:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bdc:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2be3:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    2be6:	4f 5f                	rex.WRXB pop r15
    2be8:	46                   	rex.RX
    2be9:	49                   	rex.WB
    2bea:	4c                   	rex.WR
    2beb:	45 50                	rex.RB push r8
    2bed:	46 6a 38             	rex.RX push 0x38
    2bf0:	73 74                	jae    2c66 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x466>
    2bf2:	72 69                	jb     2c5d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x45d>
    2bf4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bf5:	67 5f                	addr32 pop rdi
    2bf7:	74 45                	je     2c3e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x43e>
    2bf9:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    2bfd:	74 44                	je     2c43 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x443>
    2bff:	61                   	(bad)
    2c00:	74 61                	je     2c63 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x463>
    2c02:	6a 00                	push   0x0
    2c04:	5f                   	pop    rdi
    2c05:	5a                   	pop    rdx
    2c06:	4e 53                	rex.WRX push rbx
    2c08:	74 36                	je     2c40 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x440>
    2c0a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2c0d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c0e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c10:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2c14:	61                   	(bad)
    2c15:	74 69                	je     2c80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x480>
    2c17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c19:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2c1b:	53                   	push   rbx
    2c1c:	74 35                	je     2c53 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x453>
    2c1e:	72 61                	jb     2c81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x481>
    2c20:	74 69                	je     2c8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x48b>
    2c22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c23:	49                   	rex.WB
    2c24:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2c26:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2c29:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c2a:	31 30                	xor    DWORD PTR [rax],esi
    2c2c:	30 30                	xor    BYTE PTR [rax],dh
    2c2e:	30 30                	xor    BYTE PTR [rax],dh
    2c30:	30 30                	xor    BYTE PTR [rax],dh
    2c32:	30 30                	xor    BYTE PTR [rax],dh
    2c34:	45                   	rex.RB
    2c35:	45                   	rex.RB
    2c36:	45                   	rex.RB
    2c37:	43 34 49             	rex.XB xor al,0x49
    2c3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c3b:	76 45                	jbe    2c82 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x482>
    2c3d:	45 52                	rex.RB push r10
    2c3f:	4b 54                	rex.WXB push r12
    2c41:	5f                   	pop    rdi
    2c42:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2c45:	53                   	push   rbx
    2c46:	74 34                	je     2c7c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x47c>
    2c48:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2c4b:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c4c:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2c50:	53                   	push   rbx
    2c51:	74 34                	je     2c87 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x487>
    2c53:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2c56:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c57:	66 00 66 6f          	data16 add BYTE PTR [rsi+0x6f],ah
    2c5b:	70 65                	jo     2cc2 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x2>
    2c5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c5e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2c61:	53                   	push   rbx
    2c62:	74 36                	je     2c9a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x49a>
    2c64:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c65:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c66:	72 69                	jb     2cd1 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x11>
    2c68:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c69:	74 65                	je     2cd0 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x10>
    2c6b:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    2c6e:	61                   	(bad)
    2c6f:	72 63                	jb     2cd4 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x14>
    2c71:	68 5f 66 69 6c       	push   0x6c69665f
    2c76:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    2c7a:	73 77                	jae    2cf3 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x33>
    2c7c:	61                   	(bad)
    2c7d:	70 70                	jo     2cef <_Z4testPFj8string_tE9Filenames8TestDatajj+0x2f>
    2c7f:	61                   	(bad)
    2c80:	62                   	(bad)
    2c81:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c82:	65 5f                	gs pop rdi
    2c84:	64 65 74 61          	fs gs je 2ce9 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x29>
    2c88:	69 6c 73 00 5f 5a 53 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x74535a5f
    2c8f:	74 
    2c90:	33 6c 6f 67          	xor    ebp,DWORD PTR [rdi+rbp*2+0x67]
    2c94:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2c98:	53                   	push   rbx
    2c99:	74 33                	je     2cce <_Z4testPFj8string_tE9Filenames8TestDatajj+0xe>
    2c9b:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c9c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c9d:	67 66 00 63 68       	data16 add BYTE PTR [ebx+0x68],ah
    2ca2:	61                   	(bad)
    2ca3:	72 33                	jb     2cd8 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x18>
    2ca5:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    2ca8:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2cab:	77 69                	ja     2d16 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x56>
    2cad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cae:	64 00 72 61          	add    BYTE PTR fs:[rdx+0x61],dh
    2cb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cb3:	64 5f                	fs pop rdi
    2cb5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cb6:	75 6d                	jne    2d25 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x65>
    2cb8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2cbb:	53                   	push   rbx
    2cbc:	74 34                	je     2cf2 <_Z4testPFj8string_tE9Filenames8TestDatajj+0x32>
    2cbe:	6c                   	ins    BYTE PTR es:[rdi],dx
    2cbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cc0:	67 62 65 00 5f 5a    	(bad)
    2cc6:	53                   	push   rbx
    2cc7:	74 34                	je     2cfd <_Z4testPFj8string_tE9Filenames8TestDatajj+0x3d>
    2cc9:	6c                   	ins    BYTE PTR es:[rdi],dx
    2cca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ccb:	67 62 66 00 5f 5a    	(bad)
    2cd1:	4e 53                	rex.WRX push rbx
    2cd3:	74 36                	je     2d0b <_Z4testPFj8string_tE9Filenames8TestDatajj+0x4b>
    2cd5:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2cd8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cda:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cdb:	6d                   	ins    DWORD PTR es:[rdi],dx
    2cdc:	69 49 4e 53 5f 33 5f 	imul   ecx,DWORD PTR [rcx+0x4e],0x5f335f53
    2ce3:	56                   	push   rsi
    2ce4:	32 31                	xor    dh,BYTE PTR [rcx]
    2ce6:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2ce9:	65 61                	gs (bad)
    2ceb:	64 79 5f             	fs jns 2d4d <_Z7testAllPKcjS0_j+0x1d>
    2cee:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2cf2:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2cf6:	5f                   	pop    rdi
    2cf7:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2cfb:	61                   	(bad)
    2cfc:	74 69                	je     2d67 <_Z7testAllPKcjS0_j+0x37>
    2cfe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d00:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2d02:	53                   	push   rbx
    2d03:	74 35                	je     2d3a <_Z7testAllPKcjS0_j+0xa>
    2d05:	72 61                	jb     2d68 <_Z7testAllPKcjS0_j+0x38>
    2d07:	74 69                	je     2d72 <_Z7testAllPKcjS0_j+0x42>
    2d09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d0a:	49                   	rex.WB
    2d0b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2d0d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2d10:	6c                   	ins    BYTE PTR es:[rdi],dx
    2d11:	31 30                	xor    DWORD PTR [rax],esi
    2d13:	30 30                	xor    BYTE PTR [rax],dh
    2d15:	30 30                	xor    BYTE PTR [rax],dh
    2d17:	30 30                	xor    BYTE PTR [rax],dh
    2d19:	30 30                	xor    BYTE PTR [rax],dh
    2d1b:	45                   	rex.RB
    2d1c:	45                   	rex.RB
    2d1d:	45                   	rex.RB
    2d1e:	45 53                	rex.RB push r11
    2d20:	36 5f                	ss pop rdi
    2d22:	45                   	rex.RB
    2d23:	45                   	rex.RB
    2d24:	4e 53                	rex.WRX push rbx
    2d26:	74 31                	je     2d59 <_Z7testAllPKcjS0_j+0x29>
    2d28:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    2d2b:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d2c:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d2e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d2f:	5f                   	pop    rdi
    2d30:	74 79                	je     2dab <_Z7testAllPKcjS0_j+0x7b>
    2d32:	70 65                	jo     2d99 <_Z7testAllPKcjS0_j+0x69>
    2d34:	49                   	rex.WB
    2d35:	4a 54                	rex.WX push rsp
    2d37:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    2d3a:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    2d3d:	45 34 74             	rex.RB xor al,0x74
    2d40:	79 70                	jns    2db2 <_Z7testAllPKcjS0_j+0x82>
    2d42:	65 45 52             	gs rex.RB push r10
    2d45:	4b                   	rex.WXB
    2d46:	4e 53                	rex.WRX push rbx
    2d48:	5f                   	pop    rdi
    2d49:	31 30                	xor    DWORD PTR [rax],esi
    2d4b:	74 69                	je     2db6 <_Z7testAllPKcjS0_j+0x86>
    2d4d:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d4e:	65 5f                	gs pop rdi
    2d50:	70 6f                	jo     2dc1 <_Z7testAllPKcjS0_j+0x91>
    2d52:	69 6e 74 49 54 5f 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535f5449
    2d59:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    2d5c:	45 52                	rex.RB push r10
    2d5e:	4b                   	rex.WXB
    2d5f:	4e 53                	rex.WRX push rbx
    2d61:	43 5f                	rex.XB pop r15
    2d63:	49 53                	rex.WB push r11
    2d65:	44 5f                	rex.R pop rdi
    2d67:	53                   	push   rbx
    2d68:	39 5f 45             	cmp    DWORD PTR [rdi+0x45],ebx
    2d6b:	45 00 66 6d          	add    BYTE PTR [r14+0x6d],r12b
    2d6f:	61                   	(bad)
    2d70:	78 00                	js     2d72 <_Z7testAllPKcjS0_j+0x42>
    2d72:	5f                   	pop    rdi
    2d73:	5a                   	pop    rdx
    2d74:	4e                   	rex.WRX
    2d75:	4b 53                	rex.WXB push r11
    2d77:	74 36                	je     2daf <_Z7testAllPKcjS0_j+0x7f>
    2d79:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2d7c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d7e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d7f:	31 30                	xor    DWORD PTR [rax],esi
    2d81:	74 69                	je     2dec <_Z7testAllPKcjS0_j+0xbc>
    2d83:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d84:	65 5f                	gs pop rdi
    2d86:	70 6f                	jo     2df7 <_Z7testAllPKcjS0_j+0xc7>
    2d88:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    2d8f:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    2d92:	32 31                	xor    dh,BYTE PTR [rcx]
    2d94:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2d97:	65 61                	gs (bad)
    2d99:	64 79 5f             	fs jns 2dfb <_Z7testAllPKcjS0_j+0xcb>
    2d9c:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2da0:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2da4:	5f                   	pop    rdi
    2da5:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2da9:	61                   	(bad)
    2daa:	74 69                	je     2e15 <_Z7testAllPKcjS0_j+0xe5>
    2dac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dae:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2db0:	53                   	push   rbx
    2db1:	74 35                	je     2de8 <_Z7testAllPKcjS0_j+0xb8>
    2db3:	72 61                	jb     2e16 <_Z7testAllPKcjS0_j+0xe6>
    2db5:	74 69                	je     2e20 <_Z7testAllPKcjS0_j+0xf0>
    2db7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2db8:	49                   	rex.WB
    2db9:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2dbb:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2dbe:	6c                   	ins    BYTE PTR es:[rdi],dx
    2dbf:	31 30                	xor    DWORD PTR [rax],esi
    2dc1:	30 30                	xor    BYTE PTR [rax],dh
    2dc3:	30 30                	xor    BYTE PTR [rax],dh
    2dc5:	30 30                	xor    BYTE PTR [rax],dh
    2dc7:	30 30                	xor    BYTE PTR [rax],dh
    2dc9:	45                   	rex.RB
    2dca:	45                   	rex.RB
    2dcb:	45                   	rex.RB
    2dcc:	45                   	rex.RB
    2dcd:	45 31 36             	xor    DWORD PTR [r14],r14d
    2dd0:	74 69                	je     2e3b <_Z7testAllPKcjS0_j+0x10b>
    2dd2:	6d                   	ins    DWORD PTR es:[rdi],dx
    2dd3:	65 5f                	gs pop rdi
    2dd5:	73 69                	jae    2e40 <_Z7testAllPKcjS0_j+0x110>
    2dd7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dd8:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2ddb:	65 70 6f             	gs jo  2e4d <_Z7testAllPKcjS0_j+0x11d>
    2dde:	63 68 45             	movsxd ebp,DWORD PTR [rax+0x45]
    2de1:	76 00                	jbe    2de3 <_Z7testAllPKcjS0_j+0xb3>
    2de3:	5f                   	pop    rdi
    2de4:	5a                   	pop    rdx
    2de5:	53                   	push   rbx
    2de6:	74 36                	je     2e1e <_Z7testAllPKcjS0_j+0xee>
    2de8:	69 73 6c 65 73 73 66 	imul   esi,DWORD PTR [rbx+0x6c],0x66737365
    2def:	66 00 5f 4e          	data16 add BYTE PTR [rdi+0x4e],bl
    2df3:	75 6d                	jne    2e62 <_Z7testAllPKcjS0_j+0x132>
    2df5:	49 73 4f             	rex.WB jae 2e47 <_Z7testAllPKcjS0_j+0x117>
    2df8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2df9:	65 00 6c 67 61       	add    BYTE PTR gs:[rdi+riz*2+0x61],ch
    2dfe:	6d                   	ins    DWORD PTR es:[rdi],dx
    2dff:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e00:	61                   	(bad)
    2e01:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2e04:	53                   	push   rbx
    2e05:	74 36                	je     2e3d <_Z7testAllPKcjS0_j+0x10d>
    2e07:	69 73 6c 65 73 73 64 	imul   esi,DWORD PTR [rbx+0x6c],0x64737365
    2e0e:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    2e12:	53                   	push   rbx
    2e13:	74 35                	je     2e4a <_Z7testAllPKcjS0_j+0x11a>
    2e15:	69 73 69 6e 66 64 00 	imul   esi,DWORD PTR [rbx+0x69],0x64666e
    2e1c:	5f                   	pop    rdi
    2e1d:	5a                   	pop    rdx
    2e1e:	53                   	push   rbx
    2e1f:	74 35                	je     2e56 <_Z7testAllPKcjS0_j+0x126>
    2e21:	69 73 69 6e 66 65 00 	imul   esi,DWORD PTR [rbx+0x69],0x65666e
    2e28:	5f                   	pop    rdi
    2e29:	5a                   	pop    rdx
    2e2a:	53                   	push   rbx
    2e2b:	74 35                	je     2e62 <_Z7testAllPKcjS0_j+0x132>
    2e2d:	61                   	(bad)
    2e2e:	73 69                	jae    2e99 <_Z7testAllPKcjS0_j+0x169>
    2e30:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e31:	68 65 00 5f 5a       	push   0x5a5f0065
    2e36:	53                   	push   rbx
    2e37:	74 35                	je     2e6e <_Z7testAllPKcjS0_j+0x13e>
    2e39:	61                   	(bad)
    2e3a:	73 69                	jae    2ea5 <_Z7testAllPKcjS0_j+0x175>
    2e3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e3d:	68 66 00 77 63       	push   0x63770066
    2e42:	73 66                	jae    2eaa <_Z7testAllPKcjS0_j+0x17a>
    2e44:	74 69                	je     2eaf <_Z7testAllPKcjS0_j+0x17f>
    2e46:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e47:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2e4b:	53                   	push   rbx
    2e4c:	74 34                	je     2e82 <_Z7testAllPKcjS0_j+0x152>
    2e4e:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2e51:	68 65 00 5f 5a       	push   0x5a5f0065
    2e56:	53                   	push   rbx
    2e57:	74 34                	je     2e8d <_Z7testAllPKcjS0_j+0x15d>
    2e59:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2e5c:	68 66 00 66 70       	push   0x70660066
    2e61:	72 69                	jb     2ecc <_Z7testAllPKcjS0_j+0x19c>
    2e63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e64:	74 66                	je     2ecc <_Z7testAllPKcjS0_j+0x19c>
    2e66:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2e69:	65 72 61             	gs jb  2ecd <_Z7testAllPKcjS0_j+0x19d>
    2e6c:	74 6f                	je     2edd <_Z7testAllPKcjS0_j+0x1ad>
    2e6e:	72 2a                	jb     2e9a <_Z7testAllPKcjS0_j+0x16a>
    2e70:	3d 00 75 69 6e       	cmp    eax,0x6e697500
    2e75:	74 5f                	je     2ed6 <_Z7testAllPKcjS0_j+0x1a6>
    2e77:	66 61                	data16 (bad)
    2e79:	73 74                	jae    2eef <_Z7testAllPKcjS0_j+0x1bf>
    2e7b:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2e7e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2e81:	69 73 5f 72 61 74 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69746172
    2e88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e89:	5f                   	pop    rdi
    2e8a:	76 00                	jbe    2e8c <_Z7testAllPKcjS0_j+0x15c>
    2e8c:	66 72 65             	data16 jb 2ef4 <_Z7testAllPKcjS0_j+0x1c4>
    2e8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e90:	70 65                	jo     2ef7 <_Z7testAllPKcjS0_j+0x1c7>
    2e92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e93:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2e96:	64 65 62 75 67 00 66 	(bad)
    2e9d:	65 72 72             	gs jb  2f12 <_Z7testAllPKcjS0_j+0x1e2>
    2ea0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ea1:	72 00                	jb     2ea3 <_Z7testAllPKcjS0_j+0x173>
    2ea3:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    2ea6:	72 65                	jb     2f0d <_Z7testAllPKcjS0_j+0x1dd>
    2ea8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ea9:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    2eac:	73 79                	jae    2f27 <_Z7testAllPKcjS0_j+0x1f7>
    2eae:	6d                   	ins    DWORD PTR es:[rdi],dx
    2eaf:	62 6f 6c 00 5f       	(bad)
    2eb4:	5a                   	pop    rdx
    2eb5:	53                   	push   rbx
    2eb6:	74 31                	je     2ee9 <_Z7testAllPKcjS0_j+0x1b9>
    2eb8:	34 69                	xor    al,0x69
    2eba:	73 67                	jae    2f23 <_Z7testAllPKcjS0_j+0x1f3>
    2ebc:	72 65                	jb     2f23 <_Z7testAllPKcjS0_j+0x1f3>
    2ebe:	61                   	(bad)
    2ebf:	74 65                	je     2f26 <_Z7testAllPKcjS0_j+0x1f6>
    2ec1:	72 65                	jb     2f28 <_Z7testAllPKcjS0_j+0x1f8>
    2ec3:	71 75                	jno    2f3a <_Z7testAllPKcjS0_j+0x20a>
    2ec5:	61                   	(bad)
    2ec6:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ec7:	64 64 00 73 63       	fs add BYTE PTR fs:[rbx+0x63],dh
    2ecc:	61                   	(bad)
    2ecd:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ece:	62 6e 00 5f 5a       	(bad)
    2ed3:	53                   	push   rbx
    2ed4:	74 33                	je     2f09 <_Z7testAllPKcjS0_j+0x1d9>
    2ed6:	65 72 66             	gs jb  2f3f <_Z7testAllPKcjS0_j+0x20f>
    2ed9:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2edd:	53                   	push   rbx
    2ede:	74 33                	je     2f13 <_Z7testAllPKcjS0_j+0x1e3>
    2ee0:	65 72 66             	gs jb  2f49 <_Z7testAllPKcjS0_j+0x219>
    2ee3:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    2ee7:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ee8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ee9:	61                   	(bad)
    2eea:	74 33                	je     2f1f <_Z7testAllPKcjS0_j+0x1ef>
    2eec:	32 00                	xor    al,BYTE PTR [rax]
    2eee:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2ef5:	65 00 66 69          	add    BYTE PTR gs:[rsi+0x69],ah
    2ef9:	6c                   	ins    BYTE PTR es:[rdi],dx
    2efa:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2efc:	61                   	(bad)
    2efd:	6d                   	ins    DWORD PTR es:[rdi],dx
    2efe:	65 73 00             	gs jae 2f01 <_Z7testAllPKcjS0_j+0x1d1>
    2f01:	5f                   	pop    rdi
    2f02:	5f                   	pop    rdi
    2f03:	73 74                	jae    2f79 <_Z7testAllPKcjS0_j+0x249>
    2f05:	61                   	(bad)
    2f06:	74 65                	je     2f6d <_Z7testAllPKcjS0_j+0x23d>
    2f08:	00 64 75 72          	add    BYTE PTR [rbp+rsi*2+0x72],ah
    2f0c:	61                   	(bad)
    2f0d:	74 69                	je     2f78 <_Z7testAllPKcjS0_j+0x248>
    2f0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f10:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f11:	3c 6c                	cmp    al,0x6c
    2f13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f14:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f15:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2f19:	74 2c                	je     2f47 <_Z7testAllPKcjS0_j+0x217>
    2f1b:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2f1e:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2f21:	72 61                	jb     2f84 <_Z7testAllPKcjS0_j+0x254>
    2f23:	74 69                	je     2f8e <_Z7testAllPKcjS0_j+0x25e>
    2f25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f26:	3c 31                	cmp    al,0x31
    2f28:	2c 20                	sub    al,0x20
    2f2a:	31 30                	xor    DWORD PTR [rax],esi
    2f2c:	30 30                	xor    BYTE PTR [rax],dh
    2f2e:	30 30                	xor    BYTE PTR [rax],dh
    2f30:	30 30                	xor    BYTE PTR [rax],dh
    2f32:	30 30                	xor    BYTE PTR [rax],dh
    2f34:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2f37:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2f3a:	65 72 61             	gs jb  2f9e <_Z7testAllPKcjS0_j+0x26e>
    2f3d:	74 6f                	je     2fae <_Z7testAllPKcjS0_j+0x27e>
    2f3f:	72 2b                	jb     2f6c <_Z7testAllPKcjS0_j+0x23c>
    2f41:	2b 00                	sub    eax,DWORD PTR [rax]
    2f43:	5f                   	pop    rdi
    2f44:	5a                   	pop    rdx
    2f45:	53                   	push   rbx
    2f46:	74 36                	je     2f7e <_Z7testAllPKcjS0_j+0x24e>
    2f48:	69 73 6c 65 73 73 65 	imul   esi,DWORD PTR [rbx+0x6c],0x65737365
    2f4f:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2f53:	53                   	push   rbx
    2f54:	74 34                	je     2f8a <_Z7testAllPKcjS0_j+0x25a>
    2f56:	72 69                	jb     2fc1 <_Z7testAllPKcjS0_j+0x291>
    2f58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f59:	74 65                	je     2fc0 <_Z7testAllPKcjS0_j+0x290>
    2f5b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f5e:	53                   	push   rbx
    2f5f:	74 34                	je     2f95 <_Z7testAllPKcjS0_j+0x265>
    2f61:	72 69                	jb     2fcc <_Z7testAllPKcjS0_j+0x29c>
    2f63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f64:	74 66                	je     2fcc <_Z7testAllPKcjS0_j+0x29c>
    2f66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2f69:	61                   	(bad)
    2f6a:	72 74                	jb     2fe0 <_Z7testAllPKcjS0_j+0x2b0>
    2f6c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f6f:	73 74                	jae    2fe5 <_Z7testAllPKcjS0_j+0x2b5>
    2f71:	72 65                	jb     2fd8 <_Z7testAllPKcjS0_j+0x2a8>
    2f73:	61                   	(bad)
    2f74:	6d                   	ins    DWORD PTR es:[rdi],dx
    2f75:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2f78:	6d                   	ins    DWORD PTR es:[rdi],dx
    2f79:	61                   	(bad)
    2f7a:	69 6e 64 65 72 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007265
    2f81:	5f                   	pop    rdi
    2f82:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2f89:	73 74                	jae    2fff <_Z7testAllPKcjS0_j+0x2cf>
    2f8b:	36 34 5f             	ss xor al,0x5f
    2f8e:	74 00                	je     2f90 <_Z7testAllPKcjS0_j+0x260>
    2f90:	64 75 72             	fs jne 3005 <_Z7testAllPKcjS0_j+0x2d5>
    2f93:	61                   	(bad)
    2f94:	74 69                	je     2fff <_Z7testAllPKcjS0_j+0x2cf>
    2f96:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f97:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f98:	3c 6c                	cmp    al,0x6c
    2f9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f9b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f9c:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2fa0:	74 3e                	je     2fe0 <_Z7testAllPKcjS0_j+0x2b0>
    2fa2:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
    2fa5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fa6:	5f                   	pop    rdi
    2fa7:	67 72 6f             	addr32 jb 3019 <_Z7testAllPKcjS0_j+0x2e9>
    2faa:	75 70                	jne    301c <_Z7testAllPKcjS0_j+0x2ec>
    2fac:	69 6e 67 00 5f 5a 32 	imul   ebp,DWORD PTR [rsi+0x67],0x325a5f00
    2fb3:	37                   	(bad)
    2fb4:	73 74                	jae    302a <_Z7testAllPKcjS0_j+0x2fa>
    2fb6:	61                   	(bad)
    2fb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fb8:	64 61                	fs (bad)
    2fba:	72 74                	jb     3030 <_Z7testAllPKcjS0_j+0x300>
    2fbc:	44                   	rex.R
    2fbd:	65 76 69             	gs jbe 3029 <_Z7testAllPKcjS0_j+0x2f9>
    2fc0:	61                   	(bad)
    2fc1:	74 69                	je     302c <_Z7testAllPKcjS0_j+0x2fc>
    2fc3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fc4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fc5:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    2fc7:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fc8:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fc9:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2fd0:	37                   	(bad)
    2fd1:	48 61                	rex.W (bad)
    2fd3:	73 68                	jae    303d <_Z7testAllPKcjS0_j+0x30d>
    2fd5:	4d 61                	rex.WRB (bad)
    2fd7:	70 66                	jo     303f <_Z7testAllPKcjS0_j+0x30f>
    2fd9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fdc:	75 69                	jne    3047 <_Z7testAllPKcjS0_j+0x317>
    2fde:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fdf:	74 6d                	je     304e <_Z7testAllPKcjS0_j+0x31e>
    2fe1:	61                   	(bad)
    2fe2:	78 5f                	js     3043 <_Z7testAllPKcjS0_j+0x313>
    2fe4:	74 00                	je     2fe6 <_Z7testAllPKcjS0_j+0x2b6>
    2fe6:	68 79 70 6f 74       	push   0x746f7079
    2feb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2fee:	53                   	push   rbx
    2fef:	74 31                	je     3022 <_Z7testAllPKcjS0_j+0x2f2>
    2ff1:	34 69                	xor    al,0x69
    2ff3:	73 67                	jae    305c <_Z7testAllPKcjS0_j+0x32c>
    2ff5:	72 65                	jb     305c <_Z7testAllPKcjS0_j+0x32c>
    2ff7:	61                   	(bad)
    2ff8:	74 65                	je     305f <_Z7testAllPKcjS0_j+0x32f>
    2ffa:	72 65                	jb     3061 <_Z7testAllPKcjS0_j+0x331>
    2ffc:	71 75                	jno    3073 <_Z7testAllPKcjS0_j+0x343>
    2ffe:	61                   	(bad)
    2fff:	6c                   	ins    BYTE PTR es:[rdi],dx
    3000:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    3005:	53                   	push   rbx
    3006:	74 35                	je     303d <_Z7testAllPKcjS0_j+0x30d>
    3008:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    300a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    300b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    300c:	72 65                	jb     3073 <_Z7testAllPKcjS0_j+0x343>
    300e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3011:	53                   	push   rbx
    3012:	74 35                	je     3049 <_Z7testAllPKcjS0_j+0x319>
    3014:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    3016:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3017:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3018:	72 66                	jb     3080 <_Z7testAllPKcjS0_j+0x350>
    301a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    301d:	4e                   	rex.WRX
    301e:	4b 53                	rex.WXB push r11
    3020:	74 36                	je     3058 <_Z7testAllPKcjS0_j+0x328>
    3022:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3025:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3026:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3027:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3028:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    302c:	61                   	(bad)
    302d:	74 69                	je     3098 <_Z7testAllPKcjS0_j+0x368>
    302f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3030:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3031:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3033:	53                   	push   rbx
    3034:	74 35                	je     306b <_Z7testAllPKcjS0_j+0x33b>
    3036:	72 61                	jb     3099 <_Z7testAllPKcjS0_j+0x369>
    3038:	74 69                	je     30a3 <_Z7testAllPKcjS0_j+0x373>
    303a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    303b:	49                   	rex.WB
    303c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    303e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3041:	6c                   	ins    BYTE PTR es:[rdi],dx
    3042:	31 30                	xor    DWORD PTR [rax],esi
    3044:	30 30                	xor    BYTE PTR [rax],dh
    3046:	30 30                	xor    BYTE PTR [rax],dh
    3048:	30 30                	xor    BYTE PTR [rax],dh
    304a:	30 30                	xor    BYTE PTR [rax],dh
    304c:	45                   	rex.RB
    304d:	45                   	rex.RB
    304e:	45 70 73             	rex.RB jo 30c4 <_Z7testAllPKcjS0_j+0x394>
    3051:	45 76 00             	rex.RB jbe 3054 <_Z7testAllPKcjS0_j+0x324>
    3054:	77 63                	ja     30b9 <_Z7testAllPKcjS0_j+0x389>
    3056:	73 63                	jae    30bb <_Z7testAllPKcjS0_j+0x38b>
    3058:	61                   	(bad)
    3059:	74 00                	je     305b <_Z7testAllPKcjS0_j+0x32b>
    305b:	74 6d                	je     30ca <_Z7testAllPKcjS0_j+0x39a>
    305d:	70 66                	jo     30c5 <_Z7testAllPKcjS0_j+0x395>
    305f:	69 6c 65 00 31 31 5f 	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x5f5f3131
    3066:	5f 
    3067:	6d                   	ins    DWORD PTR es:[rdi],dx
    3068:	62 73 74 61 74       	(bad)
    306d:	65 5f                	gs pop rdi
    306f:	74 00                	je     3071 <_Z7testAllPKcjS0_j+0x341>
    3071:	69 6e 74 5f 70 5f 73 	imul   ebp,DWORD PTR [rsi+0x74],0x735f705f
    3078:	69 67 6e 5f 70 6f 73 	imul   esp,DWORD PTR [rdi+0x6e],0x736f705f
    307f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3080:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    3083:	65 72 69             	gs jb  30ef <_Z7testAllPKcjS0_j+0x3bf>
    3086:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3087:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    308a:	5f                   	pop    rdi
    308b:	5f                   	pop    rdi
    308c:	73 77                	jae    3105 <_Z7testAllPKcjS0_j+0x3d5>
    308e:	61                   	(bad)
    308f:	70 70                	jo     3101 <_Z7testAllPKcjS0_j+0x3d1>
    3091:	61                   	(bad)
    3092:	62                   	(bad)
    3093:	6c                   	ins    BYTE PTR es:[rdi],dx
    3094:	65 5f                	gs pop rdi
    3096:	77 69                	ja     3101 <_Z7testAllPKcjS0_j+0x3d1>
    3098:	74 68                	je     3102 <_Z7testAllPKcjS0_j+0x3d2>
    309a:	5f                   	pop    rdi
    309b:	64 65 74 61          	fs gs je 3100 <_Z7testAllPKcjS0_j+0x3d0>
    309f:	69 6c 73 00 74 6d 5f 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x7a5f6d74
    30a6:	7a 
    30a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30a9:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    30ad:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3436
    30b4:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    30b7:	67 65 74 63          	addr32 gs je 311e <_Z7testAllPKcjS0_j+0x3ee>
    30bb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    30be:	4e 53                	rex.WRX push rbx
    30c0:	74 36                	je     30f8 <_Z7testAllPKcjS0_j+0x3c8>
    30c2:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    30c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30c8:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    30cc:	61                   	(bad)
    30cd:	74 69                	je     3138 <_Z7testAllPKcjS0_j+0x408>
    30cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30d1:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    30d3:	53                   	push   rbx
    30d4:	74 35                	je     310b <_Z7testAllPKcjS0_j+0x3db>
    30d6:	72 61                	jb     3139 <_Z7testAllPKcjS0_j+0x409>
    30d8:	74 69                	je     3143 <_Z7testAllPKcjS0_j+0x413>
    30da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30db:	49                   	rex.WB
    30dc:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    30de:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    30e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    30e2:	31 30                	xor    DWORD PTR [rax],esi
    30e4:	30 30                	xor    BYTE PTR [rax],dh
    30e6:	30 30                	xor    BYTE PTR [rax],dh
    30e8:	30 30                	xor    BYTE PTR [rax],dh
    30ea:	30 30                	xor    BYTE PTR [rax],dh
    30ec:	45                   	rex.RB
    30ed:	45                   	rex.RB
    30ee:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    30f2:	78 45                	js     3139 <_Z7testAllPKcjS0_j+0x409>
    30f4:	76 00                	jbe    30f6 <_Z7testAllPKcjS0_j+0x3c6>
    30f6:	5f                   	pop    rdi
    30f7:	5a                   	pop    rdx
    30f8:	53                   	push   rbx
    30f9:	74 35                	je     3130 <_Z7testAllPKcjS0_j+0x400>
    30fb:	69 6c 6f 67 62 66 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006662
    3102:	5f 
    3103:	5a                   	pop    rdx
    3104:	53                   	push   rbx
    3105:	74 33                	je     313a <_Z7testAllPKcjS0_j+0x40a>
    3107:	70 6f                	jo     3178 <_Z7testAllPKcjS0_j+0x448>
    3109:	77 65                	ja     3170 <_Z7testAllPKcjS0_j+0x440>
    310b:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    310f:	72 74                	jb     3185 <_Z7testAllPKcjS0_j+0x455>
    3111:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3112:	6d                   	ins    DWORD PTR es:[rdi],dx
    3113:	62                   	(bad)
    3114:	00 6c 63 6f          	add    BYTE PTR [rbx+riz*2+0x6f],ch
    3118:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3119:	76 00                	jbe    311b <_Z7testAllPKcjS0_j+0x3eb>
    311b:	5f                   	pop    rdi
    311c:	5a                   	pop    rdx
    311d:	53                   	push   rbx
    311e:	74 35                	je     3155 <_Z7testAllPKcjS0_j+0x425>
    3120:	69 6c 6f 67 62 65 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006562
    3127:	5f 
    3128:	5a                   	pop    rdx
    3129:	53                   	push   rbx
    312a:	74 31                	je     315d <_Z7testAllPKcjS0_j+0x42d>
    312c:	34 69                	xor    al,0x69
    312e:	73 67                	jae    3197 <_Z7testAllPKcjS0_j+0x467>
    3130:	72 65                	jb     3197 <_Z7testAllPKcjS0_j+0x467>
    3132:	61                   	(bad)
    3133:	74 65                	je     319a <_Z7testAllPKcjS0_j+0x46a>
    3135:	72 65                	jb     319c <_Z7testAllPKcjS0_j+0x46c>
    3137:	71 75                	jno    31ae <_Z7testAllPKcjS0_j+0x47e>
    3139:	61                   	(bad)
    313a:	6c                   	ins    BYTE PTR es:[rdi],dx
    313b:	66 66 00 5f 49       	data16 data16 add BYTE PTR [rdi+0x49],bl
    3140:	4f 5f                	rex.WRXB pop r15
    3142:	72 65                	jb     31a9 <_Z7testAllPKcjS0_j+0x479>
    3144:	61                   	(bad)
    3145:	64 5f                	fs pop rdi
    3147:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3149:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    314d:	53                   	push   rbx
    314e:	74 35                	je     3185 <_Z7testAllPKcjS0_j+0x455>
    3150:	6c                   	ins    BYTE PTR es:[rdi],dx
    3151:	72 69                	jb     31bc <_Z7testAllPKcjS0_j+0x48c>
    3153:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3154:	74 65                	je     31bb <_Z7testAllPKcjS0_j+0x48b>
    3156:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    3159:	73 6e                	jae    31c9 <_Z7testAllPKcjS0_j+0x499>
    315b:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    315e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3161:	53                   	push   rbx
    3162:	74 39                	je     319d <_Z7testAllPKcjS0_j+0x46d>
    3164:	72 65                	jb     31cb <_Z7testAllPKcjS0_j+0x49b>
    3166:	6d                   	ins    DWORD PTR es:[rdi],dx
    3167:	61                   	(bad)
    3168:	69 6e 64 65 72 65 65 	imul   ebp,DWORD PTR [rsi+0x64],0x65657265
    316f:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    3172:	65 72 61             	gs jb  31d6 <_Z7testAllPKcjS0_j+0x4a6>
    3175:	74 6f                	je     31e6 <_Z7testAllPKcjS0_j+0x4b6>
    3177:	72 2d                	jb     31a6 <_Z7testAllPKcjS0_j+0x476>
    3179:	2d 00 69 6e 74       	sub    eax,0x746e6900
    317e:	5f                   	pop    rdi
    317f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3180:	5f                   	pop    rdi
    3181:	73 69                	jae    31ec <_Z7testAllPKcjS0_j+0x4bc>
    3183:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3185:	5f                   	pop    rdi
    3186:	70 6f                	jo     31f7 <_Z7testAllPKcjS0_j+0x4c7>
    3188:	73 6e                	jae    31f8 <_Z7testAllPKcjS0_j+0x4c8>
    318a:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    318d:	65 72 61             	gs jb  31f1 <_Z7testAllPKcjS0_j+0x4c1>
    3190:	74 6f                	je     3201 <_Z7testAllPKcjS0_j+0x4d1>
    3192:	72 2d                	jb     31c1 <_Z7testAllPKcjS0_j+0x491>
    3194:	3d 00 5f 66 69       	cmp    eax,0x69665f00
    3199:	6c                   	ins    BYTE PTR es:[rdi],dx
    319a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    319c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    319d:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    31a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    31a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31a2:	61                   	(bad)
    31a3:	74 31                	je     31d6 <_Z7testAllPKcjS0_j+0x4a6>
    31a5:	32 38                	xor    bh,BYTE PTR [rax]
    31a7:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    31aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31ab:	74 5f                	je     320c <_Z7testAllPKcjS0_j+0x4dc>
    31ad:	66 61                	data16 (bad)
    31af:	73 74                	jae    3225 <_Z7testAllPKcjS0_j+0x4f5>
    31b1:	31 36                	xor    DWORD PTR [rsi],esi
    31b3:	5f                   	pop    rdi
    31b4:	74 00                	je     31b6 <_Z7testAllPKcjS0_j+0x486>
    31b6:	5f                   	pop    rdi
    31b7:	5a                   	pop    rdx
    31b8:	53                   	push   rbx
    31b9:	74 33                	je     31ee <_Z7testAllPKcjS0_j+0x4be>
    31bb:	70 6f                	jo     322c <_Z7testAllPKcjS0_j+0x4fc>
    31bd:	77 66                	ja     3225 <_Z7testAllPKcjS0_j+0x4f5>
    31bf:	66 00 6d 62          	data16 add BYTE PTR [rbp+0x62],ch
    31c3:	73 72                	jae    3237 <_Z7testAllPKcjS0_j+0x507>
    31c5:	74 6f                	je     3236 <_Z7testAllPKcjS0_j+0x506>
    31c7:	77 63                	ja     322c <_Z7testAllPKcjS0_j+0x4fc>
    31c9:	73 00                	jae    31cb <_Z7testAllPKcjS0_j+0x49b>
    31cb:	69 73 6c 65 73 73 00 	imul   esi,DWORD PTR [rbx+0x6c],0x737365
    31d2:	5f                   	pop    rdi
    31d3:	5f                   	pop    rdi
    31d4:	64 75 72             	fs jne 3249 <_Z7testAllPKcjS0_j+0x519>
    31d7:	61                   	(bad)
    31d8:	74 69                	je     3243 <_Z7testAllPKcjS0_j+0x513>
    31da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31dc:	5f                   	pop    rdi
    31dd:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    31e0:	74 5f                	je     3241 <_Z7testAllPKcjS0_j+0x511>
    31e2:	69 6d 70 6c 3c 73 74 	imul   ebp,DWORD PTR [rbp+0x70],0x74733c6c
    31e9:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    31ec:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    31ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31f2:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    31f4:	64 75 72             	fs jne 3269 <_Z7testAllPKcjS0_j+0x539>
    31f7:	61                   	(bad)
    31f8:	74 69                	je     3263 <_Z7testAllPKcjS0_j+0x533>
    31fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31fc:	3c 6c                	cmp    al,0x6c
    31fe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3200:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3204:	74 2c                	je     3232 <_Z7testAllPKcjS0_j+0x502>
    3206:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    3209:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    320c:	72 61                	jb     326f <_Z7testAllPKcjS0_j+0x53f>
    320e:	74 69                	je     3279 <_Z7testAllPKcjS0_j+0x549>
    3210:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3211:	3c 31                	cmp    al,0x31
    3213:	2c 20                	sub    al,0x20
    3215:	31 30                	xor    DWORD PTR [rax],esi
    3217:	30 30                	xor    BYTE PTR [rax],dh
    3219:	30 30                	xor    BYTE PTR [rax],dh
    321b:	30 3e                	xor    BYTE PTR [rsi],bh
    321d:	20 3e                	and    BYTE PTR [rsi],bh
    321f:	2c 20                	sub    al,0x20
    3221:	73 74                	jae    3297 <_Z7testAllPKcjS0_j+0x567>
    3223:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3226:	72 61                	jb     3289 <_Z7testAllPKcjS0_j+0x559>
    3228:	74 69                	je     3293 <_Z7testAllPKcjS0_j+0x563>
    322a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    322b:	3c 31                	cmp    al,0x31
    322d:	2c 20                	sub    al,0x20
    322f:	31 30                	xor    DWORD PTR [rax],esi
    3231:	30 30                	xor    BYTE PTR [rax],dh
    3233:	3e 2c 20             	ds sub al,0x20
    3236:	6c                   	ins    BYTE PTR es:[rdi],dx
    3237:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3238:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3239:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    323d:	74 2c                	je     326b <_Z7testAllPKcjS0_j+0x53b>
    323f:	20 74 72 75          	and    BYTE PTR [rdx+rsi*2+0x75],dh
    3243:	65 2c 20             	gs sub al,0x20
    3246:	66 61                	data16 (bad)
    3248:	6c                   	ins    BYTE PTR es:[rdi],dx
    3249:	73 65                	jae    32b0 <_Z7testAllPKcjS0_j+0x580>
    324b:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    324f:	53                   	push   rbx
    3250:	74 33                	je     3285 <_Z7testAllPKcjS0_j+0x555>
    3252:	74 61                	je     32b5 <_Z7testAllPKcjS0_j+0x585>
    3254:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3255:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    3259:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    3260:	73 74                	jae    32d6 <_Z7testAllPKcjS0_j+0x5a6>
    3262:	33 32                	xor    esi,DWORD PTR [rdx]
    3264:	5f                   	pop    rdi
    3265:	74 00                	je     3267 <_Z7testAllPKcjS0_j+0x537>
    3267:	5f                   	pop    rdi
    3268:	5a                   	pop    rdx
    3269:	53                   	push   rbx
    326a:	74 35                	je     32a1 <_Z7testAllPKcjS0_j+0x571>
    326c:	6c                   	ins    BYTE PTR es:[rdi],dx
    326d:	64 65 78 70          	fs gs js 32e1 <_Z7testAllPKcjS0_j+0x5b1>
    3271:	65 69 00 63 65 69 6c 	imul   eax,DWORD PTR gs:[rax],0x6c696563
    3278:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    327b:	6c                   	ins    BYTE PTR es:[rdi],dx
    327c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    327d:	61                   	(bad)
    327e:	74 36                	je     32b6 <_Z7testAllPKcjS0_j+0x586>
    3280:	34 00                	xor    al,0x0
    3282:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3285:	72 31                	jb     32b8 <_Z7testAllPKcjS0_j+0x588>
    3287:	36 5f                	ss pop rdi
    3289:	74 00                	je     328b <_Z7testAllPKcjS0_j+0x55b>
    328b:	66 70 75             	data16 jo 3303 <_Z7testAllPKcjS0_j+0x5d3>
    328e:	74 77                	je     3307 <_Z7testAllPKcjS0_j+0x5d7>
    3290:	63 00                	movsxd eax,DWORD PTR [rax]
    3292:	74 6d                	je     3301 <_Z7testAllPKcjS0_j+0x5d1>
    3294:	5f                   	pop    rdi
    3295:	79 65                	jns    32fc <_Z7testAllPKcjS0_j+0x5cc>
    3297:	61                   	(bad)
    3298:	72 00                	jb     329a <_Z7testAllPKcjS0_j+0x56a>
    329a:	5f                   	pop    rdi
    329b:	5a                   	pop    rdx
    329c:	53                   	push   rbx
    329d:	74 39                	je     32d8 <_Z7testAllPKcjS0_j+0x5a8>
    329f:	72 65                	jb     3306 <_Z7testAllPKcjS0_j+0x5d6>
    32a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    32a2:	61                   	(bad)
    32a3:	69 6e 64 65 72 66 66 	imul   ebp,DWORD PTR [rsi+0x64],0x66667265
    32aa:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
    32ad:	61                   	(bad)
    32ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32af:	32 00                	xor    al,BYTE PTR [rax]
    32b1:	5f                   	pop    rdi
    32b2:	5f                   	pop    rdi
    32b3:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    32ba:	73 74                	jae    3330 <_Z7testAllPKcjS0_j+0x600>
    32bc:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    32bf:	00 67 6d             	add    BYTE PTR [rdi+0x6d],ah
    32c2:	74 69                	je     332d <_Z7testAllPKcjS0_j+0x5fd>
    32c4:	6d                   	ins    DWORD PTR es:[rdi],dx
    32c5:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    32c9:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    32d0:	77 63                	ja     3335 <_Z7testAllPKcjS0_j+0x605>
    32d2:	73 74                	jae    3348 <_Z7testAllPKcjS0_j+0x618>
    32d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32d5:	75 6c                	jne    3343 <_Z7testAllPKcjS0_j+0x613>
    32d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    32d8:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    32db:	65 61                	gs (bad)
    32dd:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    32e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32e2:	70 73                	jo     3357 <_Z7testAllPKcjS0_j+0x627>
    32e4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    32e7:	64 65 74 61          	fs gs je 334c <_Z7testAllPKcjS0_j+0x61c>
    32eb:	69 6c 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x775f4f49
    32f2:	77 
    32f3:	72 69                	jb     335e <_Z7testAllPKcjS0_j+0x62e>
    32f5:	74 65                	je     335c <_Z7testAllPKcjS0_j+0x62c>
    32f7:	5f                   	pop    rdi
    32f8:	70 74                	jo     336e <_Z7testAllPKcjS0_j+0x63e>
    32fa:	72 00                	jb     32fc <_Z7testAllPKcjS0_j+0x5cc>
    32fc:	5f                   	pop    rdi
    32fd:	52                   	push   rdx
    32fe:	65 70 00             	gs jo  3301 <_Z7testAllPKcjS0_j+0x5d1>
    3301:	5f                   	pop    rdi
    3302:	5a                   	pop    rdx
    3303:	4e 53                	rex.WRX push rbx
    3305:	74 36                	je     333d <_Z7testAllPKcjS0_j+0x60d>
    3307:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    330a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    330b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    330c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    330d:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3311:	61                   	(bad)
    3312:	74 69                	je     337d <_Z7testAllPKcjS0_j+0x64d>
    3314:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3315:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3316:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3318:	53                   	push   rbx
    3319:	74 35                	je     3350 <_Z7testAllPKcjS0_j+0x620>
    331b:	72 61                	jb     337e <_Z7testAllPKcjS0_j+0x64e>
    331d:	74 69                	je     3388 <_Z7testAllPKcjS0_j+0x658>
    331f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3320:	49                   	rex.WB
    3321:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3323:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3326:	6c                   	ins    BYTE PTR es:[rdi],dx
    3327:	31 30                	xor    DWORD PTR [rax],esi
    3329:	30 30                	xor    BYTE PTR [rax],dh
    332b:	30 30                	xor    BYTE PTR [rax],dh
    332d:	30 30                	xor    BYTE PTR [rax],dh
    332f:	30 30                	xor    BYTE PTR [rax],dh
    3331:	45                   	rex.RB
    3332:	45                   	rex.RB
    3333:	45 61                	rex.RB (bad)
    3335:	53                   	push   rbx
    3336:	45 52                	rex.RB push r10
    3338:	4b 53                	rex.WXB push r11
    333a:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    333d:	5f                   	pop    rdi
    333e:	5a                   	pop    rdx
    333f:	4e 53                	rex.WRX push rbx
    3341:	74 36                	je     3379 <_Z7testAllPKcjS0_j+0x649>
    3343:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3346:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3347:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3348:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3349:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    334d:	61                   	(bad)
    334e:	74 69                	je     33b9 <_Z7testAllPKcjS0_j+0x689>
    3350:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3351:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3352:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3354:	53                   	push   rbx
    3355:	74 35                	je     338c <_Z7testAllPKcjS0_j+0x65c>
    3357:	72 61                	jb     33ba <_Z7testAllPKcjS0_j+0x68a>
    3359:	74 69                	je     33c4 <_Z7testAllPKcjS0_j+0x694>
    335b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    335c:	49                   	rex.WB
    335d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    335f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3362:	6c                   	ins    BYTE PTR es:[rdi],dx
    3363:	31 30                	xor    DWORD PTR [rax],esi
    3365:	30 30                	xor    BYTE PTR [rax],dh
    3367:	30 30                	xor    BYTE PTR [rax],dh
    3369:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    336c:	45                   	rex.RB
    336d:	43 34 45             	rex.XB xor al,0x45
    3370:	52                   	push   rdx
    3371:	4b 53                	rex.WXB push r11
    3373:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    3376:	5f                   	pop    rdi
    3377:	5a                   	pop    rdx
    3378:	53                   	push   rbx
    3379:	74 36                	je     33b1 <_Z7testAllPKcjS0_j+0x681>
    337b:	6c                   	ins    BYTE PTR es:[rdi],dx
    337c:	72 6f                	jb     33ed <_Z7testAllPKcjS0_j+0x6bd>
    337e:	75 6e                	jne    33ee <_Z7testAllPKcjS0_j+0x6be>
    3380:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    3385:	53                   	push   rbx
    3386:	74 36                	je     33be <_Z7testAllPKcjS0_j+0x68e>
    3388:	6c                   	ins    BYTE PTR es:[rdi],dx
    3389:	6c                   	ins    BYTE PTR es:[rdi],dx
    338a:	72 69                	jb     33f5 <_Z7testAllPKcjS0_j+0x6c5>
    338c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    338d:	74 66                	je     33f5 <_Z7testAllPKcjS0_j+0x6c5>
    338f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3392:	4e 53                	rex.WRX push rbx
    3394:	74 36                	je     33cc <_Z7testAllPKcjS0_j+0x69c>
    3396:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3399:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    339a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    339b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    339c:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    339f:	32 31                	xor    dh,BYTE PTR [rcx]
    33a1:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    33a4:	65 61                	gs (bad)
    33a6:	64 79 5f             	fs jns 3408 <_Z7testAllPKcjS0_j+0x6d8>
    33a9:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    33ad:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
    33b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33b1:	77 45                	ja     33f8 <_Z7testAllPKcjS0_j+0x6c8>
    33b3:	76 00                	jbe    33b5 <_Z7testAllPKcjS0_j+0x685>
    33b5:	5f                   	pop    rdi
    33b6:	5f                   	pop    rdi
    33b7:	69 6e 74 33 32 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3233
    33be:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
    33c1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    33c3:	62 69 74 00 5f 5a 4e 	vmaxps xmm27,xmm17,XMMWORD PTR [r18+0x4e0]
    33ca:	53                   	push   rbx
    33cb:	74 36                	je     3403 <_Z7testAllPKcjS0_j+0x6d3>
    33cd:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    33d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33d3:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    33d7:	61                   	(bad)
    33d8:	74 69                	je     3443 <_Z7testAllPKcjS0_j+0x713>
    33da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33dc:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    33de:	53                   	push   rbx
    33df:	74 35                	je     3416 <_Z7testAllPKcjS0_j+0x6e6>
    33e1:	72 61                	jb     3444 <_Z7testAllPKcjS0_j+0x714>
    33e3:	74 69                	je     344e <_Z7testAllPKcjS0_j+0x71e>
    33e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33e6:	49                   	rex.WB
    33e7:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    33e9:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    33ec:	6c                   	ins    BYTE PTR es:[rdi],dx
    33ed:	31 30                	xor    DWORD PTR [rax],esi
    33ef:	30 30                	xor    BYTE PTR [rax],dh
    33f1:	30 30                	xor    BYTE PTR [rax],dh
    33f3:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    33f6:	45                   	rex.RB
    33f7:	44 34 45             	rex.R xor al,0x45
    33fa:	76 00                	jbe    33fc <_Z7testAllPKcjS0_j+0x6cc>
    33fc:	5f                   	pop    rdi
    33fd:	5a                   	pop    rdx
    33fe:	53                   	push   rbx
    33ff:	74 34                	je     3435 <_Z7testAllPKcjS0_j+0x705>
    3401:	66 61                	data16 (bad)
    3403:	62 73 65 00 5f       	(bad)
    3408:	5a                   	pop    rdx
    3409:	53                   	push   rbx
    340a:	74 35                	je     3441 <_Z7testAllPKcjS0_j+0x711>
    340c:	68 79 70 6f 74       	push   0x746f7079
    3411:	64 64 64 00 65 78    	fs fs add BYTE PTR fs:[rbp+0x78],ah
    3417:	70 32                	jo     344b <_Z7testAllPKcjS0_j+0x71b>
    3419:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    341c:	4e 53                	rex.WRX push rbx
    341e:	74 36                	je     3456 <_Z7testAllPKcjS0_j+0x726>
    3420:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3423:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3424:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3425:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3426:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    342a:	61                   	(bad)
    342b:	74 69                	je     3496 <_Z7testAllPKcjS0_j+0x766>
    342d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    342e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    342f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3431:	53                   	push   rbx
    3432:	74 35                	je     3469 <_Z7testAllPKcjS0_j+0x739>
    3434:	72 61                	jb     3497 <_Z7testAllPKcjS0_j+0x767>
    3436:	74 69                	je     34a1 <_Z7testAllPKcjS0_j+0x771>
    3438:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3439:	49                   	rex.WB
    343a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    343c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    343f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3440:	31 30                	xor    DWORD PTR [rax],esi
    3442:	30 30                	xor    BYTE PTR [rax],dh
    3444:	30 30                	xor    BYTE PTR [rax],dh
    3446:	30 30                	xor    BYTE PTR [rax],dh
    3448:	30 30                	xor    BYTE PTR [rax],dh
    344a:	45                   	rex.RB
    344b:	45                   	rex.RB
    344c:	45                   	rex.RB
    344d:	64 56                	fs push rsi
    344f:	45 52                	rex.RB push r10
    3451:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    3453:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    3456:	65 72 61             	gs jb  34ba <_Z7testAllPKcjS0_j+0x78a>
    3459:	74 6f                	je     34ca <_Z7testAllPKcjS0_j+0x79a>
    345b:	72 2f                	jb     348c <_Z7testAllPKcjS0_j+0x75c>
    345d:	3d 00 5f 5a 53       	cmp    eax,0x535a5f00
    3462:	74 36                	je     349a <_Z7testAllPKcjS0_j+0x76a>
    3464:	72 65                	jb     34cb <_Z7testAllPKcjS0_j+0x79b>
    3466:	6d                   	ins    DWORD PTR es:[rdi],dx
    3467:	71 75                	jno    34de <_Z7testAllPKcjS0_j+0x7ae>
    3469:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    346a:	66 66 50             	data16 push ax
    346d:	69 00 61 64 6c 65    	imul   eax,DWORD PTR [rax],0x656c6461
    3473:	72 33                	jb     34a8 <_Z7testAllPKcjS0_j+0x778>
    3475:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    3478:	69 6c 65 73 00 66 66 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x6c666600
    347f:	6c 
    3480:	75 73                	jne    34f5 <_Z7testAllPKcjS0_j+0x7c5>
    3482:	68 00 6c 6c 72       	push   0x726c6c00
    3487:	69 6e 74 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x74],0x4e5a5f00
    348e:	53                   	push   rbx
    348f:	74 36                	je     34c7 <_Z7testAllPKcjS0_j+0x797>
    3491:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3494:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3495:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3496:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3497:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    349b:	61                   	(bad)
    349c:	74 69                	je     3507 <_Z21standartDeviationTimePdjd+0x7>
    349e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    349f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34a0:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    34a2:	53                   	push   rbx
    34a3:	74 35                	je     34da <_Z7testAllPKcjS0_j+0x7aa>
    34a5:	72 61                	jb     3508 <_Z21standartDeviationTimePdjd+0x8>
    34a7:	74 69                	je     3512 <_Z21standartDeviationTimePdjd+0x12>
    34a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34aa:	49                   	rex.WB
    34ab:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    34ad:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    34b0:	6c                   	ins    BYTE PTR es:[rdi],dx
    34b1:	31 30                	xor    DWORD PTR [rax],esi
    34b3:	30 30                	xor    BYTE PTR [rax],dh
    34b5:	30 30                	xor    BYTE PTR [rax],dh
    34b7:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    34ba:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    34bc:	49                   	rex.WB
    34bd:	45 52                	rex.RB push r10
    34bf:	4b 53                	rex.WXB push r11
    34c1:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    34c4:	5f                   	pop    rdi
    34c5:	5a                   	pop    rdx
    34c6:	53                   	push   rbx
    34c7:	74 34                	je     34fd <_Z7testAllPKcjS0_j+0x7cd>
    34c9:	66 6d                	ins    WORD PTR es:[rdi],dx
    34cb:	69 6e 65 65 00 74 79 	imul   ebp,DWORD PTR [rsi+0x65],0x79740065
    34d2:	70 65                	jo     3539 <_Z21standartDeviationTimePdjd+0x39>
    34d4:	64 65 66 20 5f 5f    	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
    34da:	76 61                	jbe    353d <_Z21standartDeviationTimePdjd+0x3d>
    34dc:	5f                   	pop    rdi
    34dd:	6c                   	ins    BYTE PTR es:[rdi],dx
    34de:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    34e5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    34e8:	76 61                	jbe    354b <_Z21standartDeviationTimePdjd+0x4b>
    34ea:	5f                   	pop    rdi
    34eb:	6c                   	ins    BYTE PTR es:[rdi],dx
    34ec:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    34f3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    34f6:	53                   	push   rbx
    34f7:	74 34                	je     352d <_Z21standartDeviationTimePdjd+0x2d>
    34f9:	66 6d                	ins    WORD PTR es:[rdi],dx
    34fb:	61                   	(bad)
    34fc:	78 66                	js     3564 <_Z21standartDeviationTimePdjd+0x64>
    34fe:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    3502:	32 31                	xor    dh,BYTE PTR [rcx]
    3504:	73 74                	jae    357a <_Z21standartDeviationTimePdjd+0x7a>
    3506:	61                   	(bad)
    3507:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3508:	64 61                	fs (bad)
    350a:	72 74                	jb     3580 <_Z21standartDeviationTimePdjd+0x80>
    350c:	44                   	rex.R
    350d:	65 76 69             	gs jbe 3579 <_Z21standartDeviationTimePdjd+0x79>
    3510:	61                   	(bad)
    3511:	74 69                	je     357c <_Z21standartDeviationTimePdjd+0x7c>
    3513:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3514:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3515:	54                   	push   rsp
    3516:	69 6d 65 50 64 6a 64 	imul   ebp,DWORD PTR [rbp+0x65],0x646a6450
    351d:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
    3520:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3521:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3522:	72 6d                	jb     3591 <_Z21standartDeviationTimePdjd+0x91>
    3524:	61                   	(bad)
    3525:	6c                   	ins    BYTE PTR es:[rdi],dx
    3526:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3529:	4e 53                	rex.WRX push rbx
    352b:	74 36                	je     3563 <_Z21standartDeviationTimePdjd+0x63>
    352d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3530:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3531:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3532:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3533:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3537:	61                   	(bad)
    3538:	74 69                	je     35a3 <_Z21standartDeviationTimePdjd+0xa3>
    353a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    353b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    353c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    353e:	53                   	push   rbx
    353f:	74 35                	je     3576 <_Z21standartDeviationTimePdjd+0x76>
    3541:	72 61                	jb     35a4 <_Z21standartDeviationTimePdjd+0xa4>
    3543:	74 69                	je     35ae <_Z21standartDeviationTimePdjd+0xae>
    3545:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3546:	49                   	rex.WB
    3547:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3549:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    354c:	6c                   	ins    BYTE PTR es:[rdi],dx
    354d:	31 30                	xor    DWORD PTR [rax],esi
    354f:	30 30                	xor    BYTE PTR [rax],dh
    3551:	30 30                	xor    BYTE PTR [rax],dh
    3553:	30 30                	xor    BYTE PTR [rax],dh
    3555:	30 30                	xor    BYTE PTR [rax],dh
    3557:	45                   	rex.RB
    3558:	45                   	rex.RB
    3559:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    355b:	6d                   	ins    DWORD PTR es:[rdi],dx
    355c:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    3563:	35 61 63 6f 73       	xor    eax,0x736f6361
    3568:	68 65 00 5f 5a       	push   0x5a5f0065
    356d:	53                   	push   rbx
    356e:	74 35                	je     35a5 <_Z21standartDeviationTimePdjd+0xa5>
    3570:	61                   	(bad)
    3571:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    3574:	68                   	.byte 0x68
    3575:	66                   	data16
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	72 6f                	jb     72 <__abi_tag-0x30a>
   3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   4:	74 2f                	je     35 <__abi_tag-0x347>
   6:	68 61 73 68 4d       	push   0x4d687361
   b:	61                   	(bad)
   c:	70 2f                	jo     3d <__abi_tag-0x33f>
   e:	62 75 69 6c 64       	(bad)
  13:	00 2f                	add    BYTE PTR [rdi],ch
  15:	72 6f                	jb     86 <__abi_tag-0x2f6>
  17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  18:	74 2f                	je     49 <__abi_tag-0x333>
  1a:	68 61 73 68 4d       	push   0x4d687361
  1f:	61                   	(bad)
  20:	70 2f                	jo     51 <__abi_tag-0x32b>
  22:	73 72                	jae    96 <__abi_tag-0x2e6>
  24:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  26:	6d                   	ins    DWORD PTR es:[rdi],dx
  27:	61                   	(bad)
  28:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
  2f:	2f                   	(bad)
  30:	72 6f                	jb     a1 <__abi_tag-0x2db>
  32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  33:	74 2f                	je     64 <__abi_tag-0x318>
  35:	68 61 73 68 4d       	push   0x4d687361
  3a:	61                   	(bad)
  3b:	70 2f                	jo     6c <__abi_tag-0x310>
  3d:	73 72                	jae    b1 <__abi_tag-0x2cb>
  3f:	63 00                	movsxd eax,DWORD PTR [rax]
  41:	2f                   	(bad)
  42:	75 73                	jne    b7 <__abi_tag-0x2c5>
  44:	72 2f                	jb     75 <__abi_tag-0x307>
  46:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4d:	00 2f                	add    BYTE PTR [rdi],ch
  4f:	75 73                	jne    c4 <__abi_tag-0x2b8>
  51:	72 2f                	jb     82 <__abi_tag-0x2fa>
  53:	6c                   	ins    BYTE PTR es:[rdi],dx
  54:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  5b:	78 38                	js     95 <__abi_tag-0x2e7>
  5d:	36 5f                	ss pop rdi
  5f:	36 34 2d             	ss xor al,0x2d
  62:	6c                   	ins    BYTE PTR es:[rdi],dx
  63:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  6a:	75 2f                	jne    9b <__abi_tag-0x2e1>
  6c:	31 33                	xor    DWORD PTR [rbx],esi
  6e:	2f                   	(bad)
  6f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  76:	00 2f                	add    BYTE PTR [rdi],ch
  78:	75 73                	jne    ed <__abi_tag-0x28f>
  7a:	72 2f                	jb     ab <__abi_tag-0x2d1>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	2f                   	(bad)
  84:	78 38                	js     be <__abi_tag-0x2be>
  86:	36 5f                	ss pop rdi
  88:	36 34 2d             	ss xor al,0x2d
  8b:	6c                   	ins    BYTE PTR es:[rdi],dx
  8c:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  93:	75 2f                	jne    c4 <__abi_tag-0x2b8>
  95:	62 69 74 73 00       	(bad)
  9a:	2f                   	(bad)
  9b:	75 73                	jne    110 <__abi_tag-0x26c>
  9d:	72 2f                	jb     ce <__abi_tag-0x2ae>
  9f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a6:	2f                   	(bad)
  a7:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  a9:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ab:	31 33                	xor    DWORD PTR [rbx],esi
  ad:	00 2f                	add    BYTE PTR [rdi],ch
  af:	75 73                	jne    124 <__abi_tag-0x258>
  b1:	72 2f                	jb     e2 <__abi_tag-0x29a>
  b3:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  ba:	2f                   	(bad)
  bb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  bd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  bf:	31 33                	xor    DWORD PTR [rbx],esi
  c1:	2f                   	(bad)
  c2:	62 69 74 73 00       	(bad)
  c7:	2f                   	(bad)
  c8:	72 6f                	jb     139 <__abi_tag-0x243>
  ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  cb:	74 2f                	je     fc <__abi_tag-0x280>
  cd:	68 61 73 68 4d       	push   0x4d687361
  d2:	61                   	(bad)
  d3:	70 2f                	jo     104 <__abi_tag-0x278>
  d5:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  dc:	00 2f                	add    BYTE PTR [rdi],ch
  de:	75 73                	jne    153 <__abi_tag-0x229>
  e0:	72 2f                	jb     111 <__abi_tag-0x26b>
  e2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e9:	2f                   	(bad)
  ea:	78 38                	js     124 <__abi_tag-0x258>
  ec:	36 5f                	ss pop rdi
  ee:	36 34 2d             	ss xor al,0x2d
  f1:	6c                   	ins    BYTE PTR es:[rdi],dx
  f2:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  f9:	75 2f                	jne    12a <__abi_tag-0x252>
  fb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  fd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ff:	31 33                	xor    DWORD PTR [rbx],esi
 101:	2f                   	(bad)
 102:	62 69 74 73 00       	(bad)
 107:	73 74                	jae    17d <__abi_tag-0x1ff>
 109:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 10b:	69 62 2e 68 00 73 74 	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
 112:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x7400
 119:	74 
 11a:	79 70                	jns    18c <__abi_tag-0x1f0>
 11c:	65 73 2e             	gs jae 14d <__abi_tag-0x22f>
 11f:	68 00 63 73 74       	push   0x74736300
 124:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 126:	69 62 00 73 74 64 5f 	imul   esp,DWORD PTR [rdx+0x0],0x5f647473
 12d:	61                   	(bad)
 12e:	62 73 2e 68 00       	(bad)
 133:	73 74                	jae    1a9 <__abi_tag-0x1d3>
 135:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 137:	69 62 2d 66 6c 6f 61 	imul   esp,DWORD PTR [rdx+0x2d],0x616f6c66
 13e:	74 2e                	je     16e <__abi_tag-0x20e>
 140:	68 00 73 74 64       	push   0x64747300
 145:	6c                   	ins    BYTE PTR es:[rdi],dx
 146:	69 62 2d 62 73 65 61 	imul   esp,DWORD PTR [rdx+0x2d],0x61657362
 14d:	72 63                	jb     1b2 <__abi_tag-0x1ca>
 14f:	68 2e 68 00 73       	push   0x7300682e
 154:	74 64                	je     1ba <__abi_tag-0x1c2>
 156:	69 6e 74 2d 75 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e69752d
 15d:	74 6e                	je     1cd <__abi_tag-0x1af>
 15f:	2e 68 00 68 61 73    	cs push 0x73616800
 165:	68 5f 6d 61 70       	push   0x70616d5f
 16a:	2e 68 00 74 65 73    	cs push 0x73657400
 170:	74 73                	je     1e5 <__abi_tag-0x197>
 172:	2e 68 00 63 2b 2b    	cs push 0x2b2b6300
 178:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 17b:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 181:	2f                   	(bad)
 182:	72 6f                	jb     1f3 <__abi_tag-0x189>
 184:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 185:	74 2f                	je     1b6 <__abi_tag-0x1c6>
 187:	68 61 73 68 4d       	push   0x4d687361
 18c:	61                   	(bad)
 18d:	70 2f                	jo     1be <__abi_tag-0x1be>
 18f:	73 72                	jae    203 <__abi_tag-0x179>
 191:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 193:	68 61 73 68 5f       	push   0x5f687361
 198:	6d                   	ins    DWORD PTR es:[rdi],dx
 199:	61                   	(bad)
 19a:	70 2e                	jo     1ca <__abi_tag-0x1b2>
 19c:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 19f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 1a2:	72 69                	jb     20d <__abi_tag-0x16f>
 1a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1a5:	67 2e 68 00 73 74 72 	addr32 cs push 0x72747300
 1ac:	69 6e 67 5f 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f665f
 1b3:	74 69                	je     21e <__abi_tag-0x15e>
 1b5:	66 69 65 64 2e 68    	imul   sp,WORD PTR [rbp+0x64],0x682e
 1bb:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
 1be:	78 69                	js     229 <__abi_tag-0x153>
 1c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1c1:	74 72                	je     235 <__abi_tag-0x147>
 1c3:	69 6e 2e 68 00 73 6d 	imul   ebp,DWORD PTR [rsi+0x2e],0x6d730068
 1ca:	6d                   	ins    DWORD PTR es:[rdi],dx
 1cb:	69 6e 74 72 69 6e 2e 	imul   ebp,DWORD PTR [rsi+0x74],0x2e6e6972
 1d2:	68 00 65 6d 6d       	push   0x6d6d6500
 1d7:	69 6e 74 72 69 6e 2e 	imul   ebp,DWORD PTR [rsi+0x74],0x2e6e6972
 1de:	68 00 73 74 64       	push   0x64747300
 1e3:	69 6e 74 2e 68 00 73 	imul   ebp,DWORD PTR [rsi+0x74],0x7300682e
 1ea:	74 72                	je     25e <__abi_tag-0x11e>
 1ec:	69 6e 67 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x67],0x682e745f
 1f3:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
 1f7:	74 2e                	je     227 <__abi_tag-0x155>
 1f9:	68 00 61 73 73       	push   0x73736100
 1fe:	65 72 74             	gs jb  275 <__abi_tag-0x107>
 201:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 207:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 208:	74 2f                	je     239 <__abi_tag-0x143>
 20a:	68 61 73 68 4d       	push   0x4d687361
 20f:	61                   	(bad)
 210:	70 2f                	jo     241 <__abi_tag-0x13b>
 212:	73 72                	jae    286 <__abi_tag-0xf6>
 214:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 216:	68 61 73 68 5f       	push   0x5f687361
 21b:	66 75 6e             	data16 jne 28c <__abi_tag-0xf0>
 21e:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 221:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 224:	00 2f                	add    BYTE PTR [rdi],ch
 226:	72 6f                	jb     297 <__abi_tag-0xe5>
 228:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 229:	74 2f                	je     25a <__abi_tag-0x122>
 22b:	68 61 73 68 4d       	push   0x4d687361
 230:	61                   	(bad)
 231:	70 2f                	jo     262 <__abi_tag-0x11a>
 233:	73 72                	jae    2a7 <__abi_tag-0xd5>
 235:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 237:	6c                   	ins    BYTE PTR es:[rdi],dx
 238:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
 23f:	00 2f                	add    BYTE PTR [rdi],ch
 241:	72 6f                	jb     2b2 <__abi_tag-0xca>
 243:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 244:	74 2f                	je     275 <__abi_tag-0x107>
 246:	68 61 73 68 4d       	push   0x4d687361
 24b:	61                   	(bad)
 24c:	70 2f                	jo     27d <__abi_tag-0xff>
 24e:	73 72                	jae    2c2 <__abi_tag-0xba>
 250:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 252:	75 74                	jne    2c8 <__abi_tag-0xb4>
 254:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
 25b:	00 
 25c:	2f                   	(bad)
 25d:	75 73                	jne    2d2 <__abi_tag-0xaa>
 25f:	72 2f                	jb     290 <__abi_tag-0xec>
 261:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 268:	2f                   	(bad)
 269:	78 38                	js     2a3 <__abi_tag-0xd9>
 26b:	36 5f                	ss pop rdi
 26d:	36 34 2d             	ss xor al,0x2d
 270:	6c                   	ins    BYTE PTR es:[rdi],dx
 271:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 278:	75 2f                	jne    2a9 <__abi_tag-0xd3>
 27a:	73 79                	jae    2f5 <__abi_tag-0x87>
 27c:	73 00                	jae    27e <__abi_tag-0xfe>
 27e:	2f                   	(bad)
 27f:	75 73                	jne    2f4 <__abi_tag-0x88>
 281:	72 2f                	jb     2b2 <__abi_tag-0xca>
 283:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 28a:	2f                   	(bad)
 28b:	78 38                	js     2c5 <__abi_tag-0xb7>
 28d:	36 5f                	ss pop rdi
 28f:	36 34 2d             	ss xor al,0x2d
 292:	6c                   	ins    BYTE PTR es:[rdi],dx
 293:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 29a:	75 2f                	jne    2cb <__abi_tag-0xb1>
 29c:	62 69 74 73 2f       	(bad)
 2a1:	74 79                	je     31c <__abi_tag-0x60>
 2a3:	70 65                	jo     30a <__abi_tag-0x72>
 2a5:	73 00                	jae    2a7 <__abi_tag-0xd5>
 2a7:	66 63 6e 74          	movsxd bp,DWORD PTR [rsi+0x74]
 2ab:	6c                   	ins    BYTE PTR es:[rdi],dx
 2ac:	32 2e                	xor    ch,BYTE PTR [rsi]
 2ae:	68 00 75 6e 69       	push   0x696e7500
 2b3:	73 74                	jae    329 <__abi_tag-0x53>
 2b5:	64 2e 68 00 73 74 72 	fs cs push 0x72747300
 2bc:	75 63                	jne    321 <__abi_tag-0x5b>
 2be:	74 5f                	je     31f <__abi_tag-0x5d>
 2c0:	74 69                	je     32b <__abi_tag-0x51>
 2c2:	6d                   	ins    DWORD PTR es:[rdi],dx
 2c3:	65 73 70             	gs jae 336 <__abi_tag-0x46>
 2c6:	65 63 2e             	movsxd ebp,DWORD PTR gs:[rsi]
 2c9:	68 00 73 74 72       	push   0x72747300
 2ce:	75 63                	jne    333 <__abi_tag-0x49>
 2d0:	74 5f                	je     331 <__abi_tag-0x4b>
 2d2:	73 74                	jae    348 <__abi_tag-0x34>
 2d4:	61                   	(bad)
 2d5:	74 2e                	je     305 <__abi_tag-0x77>
 2d7:	68 00 75 6e 69       	push   0x696e7500
 2dc:	73 74                	jae    352 <__abi_tag-0x2a>
 2de:	64 2d 64 65 63 6c    	fs sub eax,0x6c636564
 2e4:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 2ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2eb:	74 2f                	je     31c <__abi_tag-0x60>
 2ed:	68 61 73 68 4d       	push   0x4d687361
 2f2:	61                   	(bad)
 2f3:	70 2f                	jo     324 <__abi_tag-0x58>
 2f5:	73 72                	jae    369 <__abi_tag-0x13>
 2f7:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 2f9:	74 65                	je     360 <__abi_tag-0x1c>
 2fb:	73 74                	jae    371 <__abi_tag-0xb>
 2fd:	73 2e                	jae    32d <__abi_tag-0x4f>
 2ff:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 302:	00 2f                	add    BYTE PTR [rdi],ch
 304:	75 73                	jne    379 <__abi_tag-0x3>
 306:	72 2f                	jb     337 <__abi_tag-0x45>
 308:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 30f:	2f                   	(bad)
 310:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 312:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 314:	31 33                	xor    DWORD PTR [rbx],esi
 316:	2f                   	(bad)
 317:	64 65 62 75 67 00 2f 	(bad)
 31e:	75 73                	jne    393 <__abi_tag+0x17>
 320:	72 2f                	jb     351 <__abi_tag-0x2b>
 322:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 329:	2f                   	(bad)
 32a:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 32c:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 32e:	31 33                	xor    DWORD PTR [rbx],esi
 330:	2f                   	(bad)
 331:	70 73                	jo     3a6 <__abi_tag+0x2a>
 333:	74 6c                	je     3a1 <__abi_tag+0x25>
 335:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 338:	64 69 6f 32 2e 68 00 	imul   ebp,DWORD PTR fs:[rdi+0x32],0x6300682e
 33f:	63 
 340:	6d                   	ins    DWORD PTR es:[rdi],dx
 341:	61                   	(bad)
 342:	74 68                	je     3ac <__abi_tag+0x30>
 344:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
 347:	72 6f                	jb     3b8 <__abi_tag+0x3c>
 349:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 34a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 34b:	2e 68 00 74 79 70    	cs push 0x70797400
 351:	65 5f                	gs pop rdi
 353:	74 72                	je     3c7 <__abi_tag+0x4b>
 355:	61                   	(bad)
 356:	69 74 73 00 64 65 62 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x75626564
 35d:	75 
 35e:	67 2e 68 00 63 77 63 	addr32 cs push 0x63776300
 365:	68 61 72 00 63       	push   0x63007261
 36a:	6c                   	ins    BYTE PTR es:[rdi],dx
 36b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 36c:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 36f:	65 00 63 73          	add    BYTE PTR gs:[rbx+0x73],ah
 373:	74 64                	je     3d9 <__abi_tag+0x5d>
 375:	69 6f 00 63 73 74 64 	imul   ebp,DWORD PTR [rdi+0x0],0x64747363
 37c:	64 65 66 00 63 73    	fs data16 add BYTE PTR gs:[rbx+0x73],ah
 382:	74 64                	je     3e8 <__abi_tag+0x6c>
 384:	69 6e 74 00 63 68 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61686300
 38b:	72 63                	jb     3f0 <__abi_tag+0x74>
 38d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 38e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 38f:	76 2e                	jbe    3bf <__abi_tag+0x43>
 391:	68 00 63 74 69       	push   0x69746300
 396:	6d                   	ins    DWORD PTR es:[rdi],dx
 397:	65 00 72 61          	add    BYTE PTR gs:[rdx+0x61],dh
 39b:	74 69                	je     406 <__abi_tag+0x8a>
 39d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 39e:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 3a1:	65 64 65 66 69 6e 65 	gs fs imul bp,WORD PTR gs:[rsi+0x65],0x5f64
 3a8:	64 5f 
 3aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3ab:	70 73                	jo     420 <__abi_tag+0xa4>
 3ad:	2e 68 00 6d 61 74    	cs push 0x74616d00
 3b3:	68 2e 68 00 63       	push   0x6300682e
 3b8:	6c                   	ins    BYTE PTR es:[rdi],dx
 3b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3ba:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 3bd:	74 2e                	je     3ed <__abi_tag+0x71>
 3bf:	68 00 74 69 6d       	push   0x6d697400
 3c4:	65 5f                	gs pop rdi
 3c6:	74 2e                	je     3f6 <__abi_tag+0x7a>
 3c8:	68 00 73 74 64       	push   0x64747300
 3cd:	69 6e 74 2d 69 6e 74 	imul   ebp,DWORD PTR [rsi+0x74],0x746e692d
 3d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3d5:	2e 68 00 3c 62 75    	cs push 0x75623c00
 3db:	69 6c 74 2d 69 6e 3e 	imul   ebp,DWORD PTR [rsp+rsi*2+0x2d],0x3e6e69
 3e2:	00 
 3e3:	5f                   	pop    rdi
 3e4:	5f                   	pop    rdi
 3e5:	6d                   	ins    DWORD PTR es:[rdi],dx
 3e6:	62 73 74 61 74       	(bad)
 3eb:	65 5f                	gs pop rdi
 3ed:	74 2e                	je     41d <__abi_tag+0xa1>
 3ef:	68 00 5f 5f 66       	push   0x665f5f00
 3f4:	70 6f                	jo     465 <__abi_tag+0xe9>
 3f6:	73 5f                	jae    457 <__abi_tag+0xdb>
 3f8:	74 2e                	je     428 <__abi_tag+0xac>
 3fa:	68 00 5f 5f 46       	push   0x465f5f00
 3ff:	49                   	rex.WB
 400:	4c                   	rex.WR
 401:	45                   	rex.RB
 402:	2e 68 00 73 74 72    	cs push 0x72747300
 408:	75 63                	jne    46d <__abi_tag+0xf1>
 40a:	74 5f                	je     46b <__abi_tag+0xef>
 40c:	46                   	rex.RX
 40d:	49                   	rex.WB
 40e:	4c                   	rex.WR
 40f:	45                   	rex.RB
 410:	2e 68 00 73 74 64    	cs push 0x64747300
 416:	69 6f 2e 68 00 73 74 	imul   ebp,DWORD PTR [rdi+0x2e],0x74730068
 41d:	64 69 6e 74 2d 6c 65 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x61656c2d
 424:	61 
 425:	73 74                	jae    49b <__abi_tag+0x11f>
 427:	2e 68 00 77 69 6e    	cs push 0x6e697700
 42d:	74 5f                	je     48e <__abi_tag+0x112>
 42f:	74 2e                	je     45f <__abi_tag+0xe3>
 431:	68 00 77 63 68       	push   0x68637700
 436:	61                   	(bad)
 437:	72 2e                	jb     467 <__abi_tag+0xeb>
 439:	68 00 77 63 68       	push   0x68637700
 43e:	61                   	(bad)
 43f:	72 32                	jb     473 <__abi_tag+0xf7>
 441:	2e 68 00 73 74 72    	cs push 0x72747300
 447:	75 63                	jne    4ac <__abi_tag+0x130>
 449:	74 5f                	je     4aa <__abi_tag+0x12e>
 44b:	74 6d                	je     4ba <__abi_tag+0x13e>
 44d:	2e 68 00 6c 6f 63    	cs push 0x636f6c00
 453:	61                   	(bad)
 454:	6c                   	ins    BYTE PTR es:[rdi],dx
 455:	65 2e 68 00 65 78 65 	gs cs push 0x65786500
 45c:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
 45f:	69 6f 6e 5f 64 65 66 	imul   ebp,DWORD PTR [rdi+0x6e],0x6665645f
 466:	73 2e                	jae    496 <__abi_tag+0x11a>
 468:	68 00 74 69 6d       	push   0x6d697400
 46d:	65 2e 68 00 73 74 64 	gs cs push 0x64747300
 474:	69 6f 32 2d 64 65 63 	imul   ebp,DWORD PTR [rdi+0x32],0x6365642d
 47b:	6c                   	ins    BYTE PTR es:[rdi],dx
 47c:	2e 68 00 68 61 73    	cs push 0x73616800
 482:	68 5f 66 75 6e       	push   0x6e75665f
 487:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 48a:	68 00 75 74 69       	push   0x69747500
 48f:	6c                   	ins    BYTE PTR es:[rdi],dx
 490:	73 2e                	jae    4c0 <__abi_tag+0x144>
 492:	68 00 6d 65 6d       	push   0x6d656d00
 497:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 498:	72 79                	jb     513 <__abi_tag+0x197>
 49a:	5f                   	pop    rdi
 49b:	72 65                	jb     502 <__abi_tag+0x186>
 49d:	73 6f                	jae    50e <__abi_tag+0x192>
 49f:	75 72                	jne    513 <__abi_tag+0x197>
 4a1:	63 65 2e             	movsxd esp,DWORD PTR [rbp+0x2e]
 4a4:	68 00 73 74 72       	push   0x72747300
 4a9:	69 6e 67 5f 76 69 65 	imul   ebp,DWORD PTR [rsi+0x67],0x6569765f
 4b0:	77 00                	ja     4b2 <__abi_tag+0x136>

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
       0:	74 00                	je     2 <__abi_tag-0x37a>
       2:	00 00                	add    BYTE PTR [rax],al
       4:	05 00 08 00 00       	add    eax,0x800
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 00                	add    BYTE PTR [rax],al
       d:	00 00                	add    BYTE PTR [rax],al
       f:	00 06                	add    BYTE PTR [rsi],al
      11:	d0 11                	rcl    BYTE PTR [rcx],1
      13:	00 00                	add    BYTE PTR [rax],al
      15:	00 00                	add    BYTE PTR [rax],al
      17:	00 00                	add    BYTE PTR [rax],al
      19:	04 00                	add    al,0x0
      1b:	09 01                	or     DWORD PTR [rcx],eax
      1d:	55                   	push   rbp
      1e:	04 09                	add    al,0x9
      20:	33 04 a3             	xor    eax,DWORD PTR [rbx+riz*4]
      23:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
      26:	00 00                	add    BYTE PTR [rax],al
      28:	00 00                	add    BYTE PTR [rax],al
      2a:	00 00                	add    BYTE PTR [rax],al
      2c:	00 06                	add    BYTE PTR [rsi],al
      2e:	d0 11                	rcl    BYTE PTR [rcx],1
      30:	00 00                	add    BYTE PTR [rax],al
      32:	00 00                	add    BYTE PTR [rax],al
      34:	00 00                	add    BYTE PTR [rax],al
      36:	04 00                	add    al,0x0
      38:	13 01                	adc    eax,DWORD PTR [rcx]
      3a:	54                   	push   rsp
      3b:	04 13                	add    al,0x13
      3d:	32 01                	xor    al,BYTE PTR [rcx]
      3f:	53                   	push   rbx
      40:	04 32                	add    al,0x32
      42:	33 04 a3             	xor    eax,DWORD PTR [rbx+riz*4]
      45:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
      49:	00 00                	add    BYTE PTR [rax],al
      4b:	08 e8                	or     al,ch
      4d:	11 00                	adc    DWORD PTR [rax],eax
      4f:	00 00                	add    BYTE PTR [rax],al
      51:	00 00                	add    BYTE PTR [rax],al
      53:	00 16                	add    BYTE PTR [rsi],dl
      55:	01 50 00             	add    DWORD PTR [rax+0x0],edx
      58:	02 00                	add    al,BYTE PTR [rax]
      5a:	08 e8                	or     al,ch
      5c:	11 00                	adc    DWORD PTR [rax],eax
      5e:	00 00                	add    BYTE PTR [rax],al
      60:	00 00                	add    BYTE PTR [rax],al
      62:	00 16                	add    BYTE PTR [rsi],dl
      64:	02 73 10             	add    dh,BYTE PTR [rbx+0x10]
      67:	00 01                	add    BYTE PTR [rcx],al
      69:	00 08                	add    BYTE PTR [rax],cl
      6b:	d4                   	(bad)
      6c:	11 00                	adc    DWORD PTR [rax],eax
      6e:	00 00                	add    BYTE PTR [rax],al
      70:	00 00                	add    BYTE PTR [rax],al
      72:	00 01                	add    BYTE PTR [rcx],al
      74:	02 74 08 00          	add    dh,BYTE PTR [rax+rcx*1+0x0]
      78:	49 07                	rex.WB (bad)
      7a:	00 00                	add    BYTE PTR [rax],al
      7c:	05 00 08 00 00       	add    eax,0x800
	...
      8d:	00 00                	add    BYTE PTR [rax],al
      8f:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
      92:	0a b8 0b 01 54 04    	or     bh,BYTE PTR [rax+0x454010b]
      98:	b8 0b fc 0e 01       	mov    eax,0x10efc0b
      9d:	5c                   	pop    rsp
      9e:	04 fc                	add    al,0xfc
      a0:	0e                   	(bad)
      a1:	88 0f                	mov    BYTE PTR [rdi],cl
      a3:	04 a3                	add    al,0xa3
      a5:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
      a9:	88 0f                	mov    BYTE PTR [rdi],cl
      ab:	9b                   	fwait
      ac:	0f 01 54 04 9b       	lgdt   [rsp+rax*1-0x65]
      b1:	0f                   	xcrypt-ecb (bad)
      b2:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
      b3:	0f 04                	(bad)
      b5:	a3 01 54 9f 04 a7 0f 	movabs ds:0xfac0fa7049f5401,eax
      bc:	ac 0f 
      be:	01 5c 00 00          	add    DWORD PTR [rax+rax*1+0x0],ebx
	...
      ce:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
      d1:	0a ce                	or     cl,dh
      d3:	0b 01                	or     eax,DWORD PTR [rcx]
      d5:	51                   	push   rcx
      d6:	04 ce                	add    al,0xce
      d8:	0b b2 0e 01 53 04    	or     esi,DWORD PTR [rdx+0x453010e]
      de:	b2 0e                	mov    dl,0xe
      e0:	83 0f 03             	or     DWORD PTR [rdi],0x3
      e3:	76 f8                	jbe    dd <__abi_tag-0x29f>
      e5:	7d 04                	jge    eb <__abi_tag-0x291>
      e7:	83 0f 87             	or     DWORD PTR [rdi],0xffffff87
      ea:	0f 03 77 f0          	lsl    esi,WORD PTR [rdi-0x10]
      ee:	7d 04                	jge    f4 <__abi_tag-0x288>
      f0:	87 0f                	xchg   DWORD PTR [rdi],ecx
      f2:	88 0f                	mov    BYTE PTR [rdi],cl
      f4:	09 91 78 09 e0 1a    	or     DWORD PTR [rcx+0x1ae00978],edx
      fa:	0a 18                	or     bl,BYTE PTR [rax]
      fc:	01 1c 04             	add    DWORD PTR [rsp+rax*1],ebx
      ff:	88 0f                	mov    BYTE PTR [rdi],cl
     101:	94                   	xchg   esp,eax
     102:	0f 01 51 04          	lgdt   [rcx+0x4]
     106:	94                   	xchg   esp,eax
     107:	0f ac 0f 04          	shrd   DWORD PTR [rdi],ecx,0x4
     10b:	a3 01 51 9f 00 00 00 	movabs ds:0x9f5101,eax
     112:	00 00 
	...
     11c:	00 00                	add    BYTE PTR [rax],al
     11e:	04 e0                	add    al,0xe0
     120:	0a c3                	or     al,bl
     122:	0b 02                	or     eax,DWORD PTR [rdx]
     124:	75 00                	jne    126 <__abi_tag-0x256>
     126:	04 c3                	add    al,0xc3
     128:	0b f9                	or     edi,ecx
     12a:	0b 02                	or     eax,DWORD PTR [rdx]
     12c:	7f 00                	jg     12e <__abi_tag-0x24e>
     12e:	04 f9                	add    al,0xf9
     130:	0b 83 0f 04 76 80    	or     eax,DWORD PTR [rbx-0x7f89fbf1]
     136:	7e 06                	jle    13e <__abi_tag-0x23e>
     138:	04 83                	add    al,0x83
     13a:	0f 87 0f 04 77 f8    	ja     fffffffff877054f <_end+0xfffffffff876a537>
     140:	7d 06                	jge    148 <__abi_tag-0x234>
     142:	04 87                	add    al,0x87
     144:	0f 88 0f 0a 91 78    	js     78910b59 <_end+0x7890ab41>
     14a:	09 e0                	or     eax,esp
     14c:	1a 0a                	sbb    cl,BYTE PTR [rdx]
     14e:	10 01                	adc    BYTE PTR [rcx],al
     150:	1c 06                	sbb    al,0x6
     152:	04 88                	add    al,0x88
     154:	0f a2                	cpuid
     156:	0f 02 75 00          	lar    esi,WORD PTR [rbp+0x0]
     15a:	04 a2                	add    al,0xa2
     15c:	0f ac 0f 04          	shrd   DWORD PTR [rdi],ecx,0x4
     160:	76 80                	jbe    e2 <__abi_tag-0x29a>
     162:	7e 06                	jle    16a <__abi_tag-0x212>
     164:	00 01                	add    BYTE PTR [rcx],al
     166:	00 00                	add    BYTE PTR [rax],al
     168:	01 01                	add    DWORD PTR [rcx],eax
     16a:	00 04 f5 0c fd 0c 02 	add    BYTE PTR [rsi*8+0x20cfd0c],al
     171:	30 9f 04 fd 0c 95    	xor    BYTE PTR [rdi-0x6af302fc],bl
     177:	0e                   	(bad)
     178:	03 76 88             	add    esi,DWORD PTR [rsi-0x78]
     17b:	7e 04                	jle    181 <__abi_tag-0x1fb>
     17d:	95                   	xchg   ebp,eax
     17e:	0e                   	(bad)
     17f:	9d                   	popf
     180:	0e                   	(bad)
     181:	08 76 88             	or     BYTE PTR [rsi-0x78],dh
     184:	7e 94                	jle    11a <__abi_tag-0x262>
     186:	04 23                	add    al,0x23
     188:	01 9f 00 00 00 00    	add    DWORD PTR [rdi+0x0],ebx
     18e:	00 00                	add    BYTE PTR [rax],al
     190:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
     193:	0d a4 0d 01 51       	or     eax,0x51010da4
     198:	04 a4                	add    al,0xa4
     19a:	0d ac 0d 01 52       	or     eax,0x52010dac
     19f:	04 8c                	add    al,0x8c
     1a1:	0e                   	(bad)
     1a2:	b4 0e                	mov    ah,0xe
     1a4:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
     1a7:	01 00                	add    DWORD PTR [rax],eax
     1a9:	00 02                	add    BYTE PTR [rdx],al
     1ab:	04 b0                	add    al,0xb0
     1ad:	0b ce                	or     ecx,esi
     1af:	0b 01                	or     eax,DWORD PTR [rcx]
     1b1:	51                   	push   rcx
     1b2:	04 ce                	add    al,0xce
     1b4:	0b ae 0c 01 53 00    	or     ebp,DWORD PTR [rsi+0x53010c]
     1ba:	01 00                	add    DWORD PTR [rax],eax
     1bc:	00 00                	add    BYTE PTR [rax],al
     1be:	04 b0                	add    al,0xb0
     1c0:	0b c0                	or     eax,eax
     1c2:	0b 01                	or     eax,DWORD PTR [rcx]
     1c4:	50                   	push   rax
     1c5:	04 c0                	add    al,0xc0
     1c7:	0b ce                	or     ecx,esi
     1c9:	0b 02                	or     eax,DWORD PTR [rdx]
     1cb:	7c 10                	jl     1dd <__abi_tag-0x19f>
     1cd:	00 01                	add    BYTE PTR [rcx],al
     1cf:	00 04 d2             	add    BYTE PTR [rdx+rdx*8],al
     1d2:	0b f9                	or     edi,ecx
     1d4:	0b 02                	or     eax,DWORD PTR [rdx]
     1d6:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     1dc:	00 00                	add    BYTE PTR [rax],al
     1de:	01 04 ac             	add    DWORD PTR [rsp+rbp*4],eax
     1e1:	0e                   	(bad)
     1e2:	b4 0e                	mov    ah,0xe
     1e4:	02 30                	add    dh,BYTE PTR [rax]
     1e6:	9f                   	lahf
     1e7:	04 bc                	add    al,0xbc
     1e9:	0e                   	(bad)
     1ea:	c4                   	(bad)
     1eb:	0e                   	(bad)
     1ec:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
     1ef:	c4                   	(bad)
     1f0:	0e                   	(bad)
     1f1:	cd 0e                	int    0xe
     1f3:	03 73 7f             	add    esi,DWORD PTR [rbx+0x7f]
     1f6:	9f                   	lahf
     1f7:	00 00                	add    BYTE PTR [rax],al
     1f9:	00 00                	add    BYTE PTR [rax],al
     1fb:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     1fe:	09 ea                	or     edx,ebp
     200:	09 01                	or     DWORD PTR [rcx],eax
     202:	55                   	push   rbp
     203:	04 ea                	add    al,0xea
     205:	09 ef                	or     edi,ebp
     207:	09 04 a3             	or     DWORD PTR [rbx+riz*4],eax
     20a:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
     215:	00 00                	add    BYTE PTR [rax],al
     217:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     21a:	07                   	(bad)
     21b:	a0 08 01 55 04 a0 08 	movabs al,ds:0x98908a004550108
     222:	89 09 
     224:	01 54 04 89          	add    DWORD PTR [rsp+rax*1-0x77],edx
     228:	09 94 09 04 a3 01 55 	or     DWORD PTR [rcx+rcx*1+0x5501a304],edx
     22f:	9f                   	lahf
     230:	04 94                	add    al,0x94
     232:	09 ae 09 01 55 04    	or     DWORD PTR [rsi+0x4550109],ebp
     238:	ae                   	scas   al,BYTE PTR es:[rdi]
     239:	09 b6 09 04 a3 01    	or     DWORD PTR [rsi+0x1a30409],esi
     23f:	55                   	push   rbp
     240:	9f                   	lahf
	...
     249:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
     24c:	07                   	(bad)
     24d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     24e:	08 05 61 93 20 93    	or     BYTE PTR [rip+0xffffffff93209361],al        # ffffffff932095b5 <_end+0xffffffff9320359d>
     254:	20 04 a6             	and    BYTE PTR [rsi+riz*4],al
     257:	08 94 09 06 91 00 93 	or     BYTE PTR [rcx+rcx*1-0x6cff6efa],dl
     25e:	20 93 20 04 94 09    	and    BYTE PTR [rbx+0x9940420],dl
     264:	b5 09                	mov    ch,0x9
     266:	05 61 93 20 93       	add    eax,0x93209361
     26b:	20 04 b5 09 b6 09 06 	and    BYTE PTR [rsi*4+0x609b609],al
     272:	91                   	xchg   ecx,eax
     273:	00 93 20 93 20 00    	add    BYTE PTR [rbx+0x209320],dl
     279:	01 02                	add    DWORD PTR [rdx],eax
     27b:	04 94                	add    al,0x94
     27d:	08 e0                	or     al,ah
     27f:	08 02                	or     BYTE PTR [rdx],al
     281:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
     287:	94                   	xchg   esp,eax
     288:	08 94 09 0a 9e 08 11 	or     BYTE PTR [rcx+rcx*1+0x11089e0a],dl
     28f:	11 11                	adc    DWORD PTR [rcx],edx
     291:	21 11                	and    DWORD PTR [rcx],edx
     293:	12 12                	adc    dl,BYTE PTR [rdx]
     295:	12 00                	adc    al,BYTE PTR [rax]
     297:	0b 00                	or     eax,DWORD PTR [rax]
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	0b 00                	or     eax,DWORD PTR [rax]
     29d:	04 94                	add    al,0x94
     29f:	08 a6 08 01 61 04    	or     BYTE PTR [rsi+0x4610108],ah
     2a5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     2a6:	08 b5 08 01 58 04    	or     BYTE PTR [rbp+0x4580108],dh
     2ac:	c9                   	leave
     2ad:	08 d4                	or     ah,dl
     2af:	08 01                	or     BYTE PTR [rcx],al
     2b1:	50                   	push   rax
     2b2:	00 00                	add    BYTE PTR [rax],al
     2b4:	00 00                	add    BYTE PTR [rax],al
     2b6:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
     2b9:	08 cf                	or     bh,cl
     2bb:	08 01                	or     BYTE PTR [rcx],al
     2bd:	55                   	push   rbp
     2be:	04 cf                	add    al,0xcf
     2c0:	08 89 09 01 58 00    	or     BYTE PTR [rcx+0x580109],cl
     2c6:	00 00                	add    BYTE PTR [rax],al
     2c8:	00 00                	add    BYTE PTR [rax],al
     2ca:	04 c9                	add    al,0xc9
     2cc:	08 da                	or     dl,bl
     2ce:	08 01                	or     BYTE PTR [rcx],al
     2d0:	61                   	(bad)
     2d1:	04 da                	add    al,0xda
     2d3:	08 82 09 01 55 00    	or     BYTE PTR [rdx+0x550109],al
     2d9:	07                   	(bad)
     2da:	00 00                	add    BYTE PTR [rax],al
     2dc:	00 04 c9             	add    BYTE PTR [rcx+rcx*8],al
     2df:	08 e0                	or     al,ah
     2e1:	08 01                	or     BYTE PTR [rcx],al
     2e3:	51                   	push   rcx
     2e4:	04 e0                	add    al,0xe0
     2e6:	08 89 09 01 52 00    	or     BYTE PTR [rcx+0x520109],cl
     2ec:	00 00                	add    BYTE PTR [rax],al
     2ee:	04 8a                	add    al,0x8a
     2f0:	09 8f 09 01 50 00    	or     DWORD PTR [rdi+0x500109],ecx
     2f6:	09 0b                	or     DWORD PTR [rbx],ecx
     2f8:	04 c9                	add    al,0xc9
     2fa:	08 c9                	or     cl,cl
     2fc:	08 0a                	or     BYTE PTR [rdx],cl
     2fe:	9e                   	sahf
     2ff:	08 11                	or     BYTE PTR [rcx],dl
     301:	11 11                	adc    DWORD PTR [rcx],edx
     303:	21 11                	and    DWORD PTR [rcx],edx
     305:	12 12                	adc    dl,BYTE PTR [rdx]
     307:	12 00                	adc    al,BYTE PTR [rax]
     309:	03 0b                	add    ecx,DWORD PTR [rbx]
     30b:	04 94                	add    al,0x94
     30d:	08 94 08 02 30 9f 00 	or     BYTE PTR [rax+rcx*1+0x9f3002],dl
     314:	03 0b                	add    ecx,DWORD PTR [rbx]
     316:	04 94                	add    al,0x94
     318:	08 94 08 01 61 00 07 	or     BYTE PTR [rax+rcx*1+0x7006101],dl
     31f:	00 04 94             	add    BYTE PTR [rsp+rdx*4],al
     322:	08 a6 08 01 61 00    	or     BYTE PTR [rsi+0x610108],ah
     328:	09 0b                	or     DWORD PTR [rbx],ecx
     32a:	04 94                	add    al,0x94
     32c:	08 94 08 02 30 9f 00 	or     BYTE PTR [rax+rcx*1+0x9f3002],dl
     333:	09 0b                	or     DWORD PTR [rbx],ecx
     335:	04 94                	add    al,0x94
     337:	08 94 08 01 61 00 05 	or     BYTE PTR [rax+rcx*1+0x5006101],dl
     33e:	07                   	(bad)
     33f:	04 94                	add    al,0x94
     341:	08 94 08 02 30 9f 00 	or     BYTE PTR [rax+rcx*1+0x9f3002],dl
     348:	05 07 04 94 08       	add    eax,0x8940407
     34d:	94                   	xchg   esp,eax
     34e:	08 01                	or     BYTE PTR [rcx],al
     350:	61                   	(bad)
     351:	00 0d 00 04 94 08    	add    BYTE PTR [rip+0x8940400],cl        # 8940757 <_end+0x893a73f>
     357:	a0 08 02 31 9f 00 0d 	movabs al,ds:0x4000d009f310208
     35e:	00 04 
     360:	94                   	xchg   esp,eax
     361:	08 a0 08 01 61 00    	or     BYTE PTR [rax+0x610108],ah
     367:	0f 00 04 94          	sldt   WORD PTR [rsp+rdx*4]
     36b:	08 a6 08 01 61 00    	or     BYTE PTR [rsi+0x610108],ah
     371:	10 00                	adc    BYTE PTR [rax],al
     373:	04 94                	add    al,0x94
     375:	08 a0 08 02 31 9f    	or     BYTE PTR [rax-0x60cefdf8],ah
     37b:	00 10                	add    BYTE PTR [rax],dl
     37d:	00 04 94             	add    BYTE PTR [rsp+rdx*4],al
     380:	08 a0 08 01 61 00    	or     BYTE PTR [rax+0x610108],ah
     386:	02 00                	add    al,BYTE PTR [rax]
     388:	04 a0                	add    al,0xa0
     38a:	08 c9                	or     cl,cl
     38c:	08 02                	or     BYTE PTR [rdx],al
     38e:	32 9f 00 02 00 00    	xor    bl,BYTE PTR [rdi+0x200]
     394:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
     397:	08 a6 08 01 61 04    	or     BYTE PTR [rsi+0x4610108],ah
     39d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     39e:	08 c9                	or     cl,cl
     3a0:	08 02                	or     BYTE PTR [rdx],al
     3a2:	91                   	xchg   ecx,eax
     3a3:	00 00                	add    BYTE PTR [rax],al
     3a5:	00 00                	add    BYTE PTR [rax],al
     3a7:	04 a6                	add    al,0xa6
     3a9:	08 89 09 01 61 00    	or     BYTE PTR [rcx+0x610109],cl
     3af:	04 00                	add    al,0x0
     3b1:	04 a0                	add    al,0xa0
     3b3:	08 a6 08 02 31 9f    	or     BYTE PTR [rsi-0x60cefdf8],ah
     3b9:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     3bc:	04 a0                	add    al,0xa0
     3be:	08 a6 08 01 61 00    	or     BYTE PTR [rsi+0x610108],ah
     3c4:	02 00                	add    al,BYTE PTR [rax]
     3c6:	04 a6                	add    al,0xa6
     3c8:	08 c9                	or     cl,cl
     3ca:	08 02                	or     BYTE PTR [rdx],al
     3cc:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
     3d2:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     3d3:	08 c9                	or     cl,cl
     3d5:	08 01                	or     BYTE PTR [rcx],al
     3d7:	61                   	(bad)
     3d8:	00 0d 00 04 c9 08    	add    BYTE PTR [rip+0x8c90400],cl        # 8c907de <_end+0x8c8a7c6>
     3de:	cf                   	iret
     3df:	08 01                	or     BYTE PTR [rcx],al
     3e1:	55                   	push   rbp
     3e2:	00 0d 00 04 c9 08    	add    BYTE PTR [rip+0x8c90400],cl        # 8c907e8 <_end+0x8c8a7d0>
     3e8:	cf                   	iret
     3e9:	08 0a                	or     BYTE PTR [rdx],cl
     3eb:	9e                   	sahf
     3ec:	08 11                	or     BYTE PTR [rcx],dl
     3ee:	11 11                	adc    DWORD PTR [rcx],edx
     3f0:	21 11                	and    DWORD PTR [rcx],edx
     3f2:	12 12                	adc    dl,BYTE PTR [rdx]
     3f4:	12 00                	adc    al,BYTE PTR [rax]
     3f6:	02 07                	add    al,BYTE PTR [rdi]
     3f8:	04 c9                	add    al,0xc9
     3fa:	08 c9                	or     cl,cl
     3fc:	08 02                	or     BYTE PTR [rdx],al
     3fe:	33 9f 00 02 07 04    	xor    ebx,DWORD PTR [rdi+0x4070200]
     404:	c9                   	leave
     405:	08 c9                	or     cl,cl
     407:	08 02                	or     BYTE PTR [rdx],al
     409:	91                   	xchg   ecx,eax
     40a:	00 00                	add    BYTE PTR [rax],al
     40c:	04 00                	add    al,0x0
     40e:	04 c9                	add    al,0xc9
     410:	08 89 09 01 61 00    	or     BYTE PTR [rcx+0x610109],cl
     416:	05 07 04 c9 08       	add    eax,0x8c90407
     41b:	c9                   	leave
     41c:	08 02                	or     BYTE PTR [rdx],al
     41e:	31 9f 00 05 07 04    	xor    DWORD PTR [rdi+0x4070500],ebx
     424:	c9                   	leave
     425:	08 c9                	or     cl,cl
     427:	08 01                	or     BYTE PTR [rcx],al
     429:	61                   	(bad)
     42a:	00 02                	add    BYTE PTR [rdx],al
     42c:	00 04 cf             	add    BYTE PTR [rdi+rcx*8],al
     42f:	08 da                	or     dl,bl
     431:	08 01                	or     BYTE PTR [rcx],al
     433:	61                   	(bad)
     434:	00 02                	add    BYTE PTR [rdx],al
     436:	00 04 cf             	add    BYTE PTR [rdi+rcx*8],al
     439:	08 da                	or     dl,bl
     43b:	08 0a                	or     BYTE PTR [rdx],cl
     43d:	9e                   	sahf
     43e:	08 11                	or     BYTE PTR [rcx],dl
     440:	11 11                	adc    DWORD PTR [rcx],edx
     442:	21 11                	and    DWORD PTR [rcx],edx
     444:	12 12                	adc    dl,BYTE PTR [rdx]
     446:	12 00                	adc    al,BYTE PTR [rax]
     448:	02 00                	add    al,BYTE PTR [rax]
     44a:	04 da                	add    al,0xda
     44c:	08 e0                	or     al,ah
     44e:	08 01                	or     BYTE PTR [rcx],al
     450:	51                   	push   rcx
     451:	00 02                	add    BYTE PTR [rdx],al
     453:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
     456:	08 e0                	or     al,ah
     458:	08 0a                	or     BYTE PTR [rdx],cl
     45a:	9e                   	sahf
     45b:	08 11                	or     BYTE PTR [rcx],dl
     45d:	11 11                	adc    DWORD PTR [rcx],edx
     45f:	21 11                	and    DWORD PTR [rcx],edx
     461:	12 12                	adc    dl,BYTE PTR [rdx]
     463:	12 00                	adc    al,BYTE PTR [rax]
	...
     471:	00 00                	add    BYTE PTR [rax],al
     473:	04 90                	add    al,0x90
     475:	06                   	(bad)
     476:	c9                   	leave
     477:	06                   	(bad)
     478:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     47b:	c9                   	leave
     47c:	06                   	(bad)
     47d:	bb 07 01 53 04       	mov    ebx,0x4530107
     482:	bb 07 bd 07 04       	mov    ebx,0x407bd07
     487:	a3 01 55 9f 04 bd 07 	movabs ds:0x7c807bd049f5501,eax
     48e:	c8 07 
     490:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
     493:	c8 07 cc 07          	enter  0xcc07,0x7
     497:	04 a3                	add    al,0xa3
     499:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     49c:	04 cc                	add    al,0xcc
     49e:	07                   	(bad)
     49f:	e6 07                	out    0x7,al
     4a1:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     4a4:	e6 07                	out    0x7,al
     4a6:	eb 07                	jmp    4af <__abi_tag+0x133>
     4a8:	04 a3                	add    al,0xa3
     4aa:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     4ad:	00 00                	add    BYTE PTR [rax],al
     4af:	00 00                	add    BYTE PTR [rax],al
     4b1:	00 00                	add    BYTE PTR [rax],al
     4b3:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     4b6:	06                   	(bad)
     4b7:	f3 06                	repz (bad)
     4b9:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     4bc:	f3 06                	repz (bad)
     4be:	bc 07 01 56 04       	mov    esp,0x4560107
     4c3:	bd 07 c3 07 01       	mov    ebp,0x107c307
     4c8:	56                   	push   rsi
	...
     4d1:	00 00                	add    BYTE PTR [rax],al
     4d3:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     4d6:	04 f9                	add    al,0xf9
     4d8:	04 01                	add    al,0x1
     4da:	55                   	push   rbp
     4db:	04 f9                	add    al,0xf9
     4dd:	04 ec                	add    al,0xec
     4df:	05 01 53 04 ec       	add    eax,0xec045301
     4e4:	05 ee 05 04 a3       	add    eax,0xa30405ee
     4e9:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     4ec:	04 ee                	add    al,0xee
     4ee:	05 88 06 01 55       	add    eax,0x55010688
     4f3:	04 88                	add    al,0x88
     4f5:	06                   	(bad)
     4f6:	8d 06                	lea    eax,[rsi]
     4f8:	04 a3                	add    al,0xa3
     4fa:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     4fd:	00 00                	add    BYTE PTR [rax],al
     4ff:	00 00                	add    BYTE PTR [rax],al
     501:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
     504:	05 a3 05 01 50       	add    eax,0x500105a3
     509:	04 a3                	add    al,0xa3
     50b:	05 ed 05 01 56       	add    eax,0x560105ed
     510:	00 00                	add    BYTE PTR [rax],al
     512:	00 04 ba             	add    BYTE PTR [rdx+rdi*4],al
     515:	05 c6 05 01 50       	add    eax,0x500105c6
	...
     52a:	00 00                	add    BYTE PTR [rax],al
     52c:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     52f:	30 01                	xor    BYTE PTR [rcx],al
     531:	55                   	push   rbp
     532:	04 30                	add    al,0x30
     534:	90                   	nop
     535:	01 01                	add    DWORD PTR [rcx],eax
     537:	5c                   	pop    rsp
     538:	04 90                	add    al,0x90
     53a:	01 94 01 01 55 04 94 	add    DWORD PTR [rcx+rax*1-0x6bfbaaff],edx
     541:	01 95 01 01 5c 04    	add    DWORD PTR [rbp+0x45c0101],edx
     547:	95                   	xchg   ebp,eax
     548:	01 9f 01 01 50 04    	add    DWORD PTR [rdi+0x4500101],ebx
     54e:	9f                   	lahf
     54f:	01 c0                	add    eax,eax
     551:	02 01                	add    al,BYTE PTR [rcx]
     553:	5c                   	pop    rsp
     554:	04 c8                	add    al,0xc8
     556:	02 e2                	add    ah,dl
     558:	02 01                	add    al,BYTE PTR [rcx]
     55a:	55                   	push   rbp
     55b:	04 e2                	add    al,0xe2
     55d:	02 e7                	add    ah,bh
     55f:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
     562:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     565:	04 e7                	add    al,0xe7
     567:	02 86 03 01 5c 00    	add    al,BYTE PTR [rsi+0x5c0103]
	...
     579:	00 00                	add    BYTE PTR [rax],al
     57b:	04 00                	add    al,0x0
     57d:	3a 01                	cmp    al,BYTE PTR [rcx]
     57f:	54                   	push   rsp
     580:	04 3a                	add    al,0x3a
     582:	3d 01 53 04 3d       	cmp    eax,0x3d045301
     587:	7d 01                	jge    58a <__abi_tag+0x20e>
     589:	5d                   	pop    rbp
     58a:	04 7d                	add    al,0x7d
     58c:	c8 02 04 a3          	enter  0x402,0xa3
     590:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
     594:	c8 02 db 02          	enter  0xdb02,0x2
     598:	01 54 04 db          	add    DWORD PTR [rsp+rax*1-0x25],edx
     59c:	02 e7                	add    ah,bh
     59e:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
     5a1:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
     5a5:	e7 02                	out    0x2,eax
     5a7:	86 03                	xchg   BYTE PTR [rbx],al
     5a9:	01 5d 00             	add    DWORD PTR [rbp+0x0],ebx
     5ac:	00 00                	add    BYTE PTR [rax],al
     5ae:	04 42                	add    al,0x42
     5b0:	4f 02 77 10          	rex.WRXB add r14b,BYTE PTR [r15+0x10]
	...
     5bc:	00 04 57             	add    BYTE PTR [rdi+rdx*2],al
     5bf:	65 01 50 04          	add    DWORD PTR gs:[rax+0x4],edx
     5c3:	65 c6 02 01          	mov    BYTE PTR gs:[rdx],0x1
     5c7:	5f                   	pop    rdi
     5c8:	04 e7                	add    al,0xe7
     5ca:	02 85 03 01 50 04    	add    al,BYTE PTR [rbp+0x4500103]
     5d0:	85 03                	test   DWORD PTR [rbx],eax
     5d2:	86 03                	xchg   BYTE PTR [rbx],al
     5d4:	01 5f 00             	add    DWORD PTR [rdi+0x0],ebx
     5d7:	01 00                	add    DWORD PTR [rax],eax
     5d9:	02 00                	add    al,BYTE PTR [rax]
     5db:	00 00                	add    BYTE PTR [rax],al
     5dd:	00 00                	add    BYTE PTR [rax],al
     5df:	00 00                	add    BYTE PTR [rax],al
     5e1:	04 57                	add    al,0x57
     5e3:	7d 02                	jge    5e7 <__abi_tag+0x26b>
     5e5:	30 9f 04 90 01 94    	xor    BYTE PTR [rdi-0x6bfe6ffc],bl
     5eb:	01 01                	add    DWORD PTR [rcx],eax
     5ed:	55                   	push   rbp
     5ee:	04 94                	add    al,0x94
     5f0:	01 9f 01 01 5c 04    	add    DWORD PTR [rdi+0x45c0101],ebx
     5f6:	9f                   	lahf
     5f7:	01 cf                	add    edi,ecx
     5f9:	01 01                	add    DWORD PTR [rcx],eax
     5fb:	54                   	push   rsp
     5fc:	04 e7                	add    al,0xe7
     5fe:	02 86 03 02 30 9f    	add    al,BYTE PTR [rsi-0x60cffdfd]
     604:	00 02                	add    BYTE PTR [rdx],al
     606:	00 00                	add    BYTE PTR [rax],al
     608:	00 00                	add    BYTE PTR [rax],al
     60a:	00 00                	add    BYTE PTR [rax],al
     60c:	00 04 57             	add    BYTE PTR [rdi+rdx*2],al
     60f:	7d 02                	jge    613 <__abi_tag+0x297>
     611:	30 9f 04 7d 83 01    	xor    BYTE PTR [rdi+0x1837d04],bl
     617:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
     61a:	b9 01 ac 02 01       	mov    ecx,0x102ac01
     61f:	5d                   	pop    rbp
     620:	04 e7                	add    al,0xe7
     622:	02 86 03 02 30 9f    	add    al,BYTE PTR [rsi-0x60cffdfd]
     628:	00 00                	add    BYTE PTR [rax],al
     62a:	00 04 60             	add    BYTE PTR [rax+riz*2],al
     62d:	7d 02                	jge    631 <__abi_tag+0x2b5>
     62f:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
     635:	90                   	nop
     636:	01 95 01 02 3a 9f    	add    DWORD PTR [rbp-0x60c5fdff],edx
     63c:	00 03                	add    BYTE PTR [rbx],al
     63e:	00 00                	add    BYTE PTR [rax],al
     640:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
     643:	01 94 01 01 55 04 94 	add    DWORD PTR [rcx+rax*1-0x6bfbaaff],edx
     64a:	01 95 01 01 5c 00    	add    DWORD PTR [rbp+0x5c0101],edx
     650:	00 00                	add    BYTE PTR [rax],al
     652:	00 00                	add    BYTE PTR [rax],al
     654:	04 c3                	add    al,0xc3
     656:	01 cf                	add    edi,ecx
     658:	01 01                	add    DWORD PTR [rcx],eax
     65a:	51                   	push   rcx
     65b:	04 cf                	add    al,0xcf
     65d:	01 d0                	add    eax,edx
     65f:	01 02                	add    DWORD PTR [rdx],eax
     661:	77 30                	ja     693 <__abi_tag+0x317>
     663:	00 01                	add    BYTE PTR [rcx],al
     665:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
     668:	01 cf                	add    edi,ecx
     66a:	01 01                	add    DWORD PTR [rcx],eax
     66c:	54                   	push   rsp
     66d:	00 01                	add    BYTE PTR [rcx],al
     66f:	00 00                	add    BYTE PTR [rax],al
     671:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
     674:	01 cf                	add    edi,ecx
     676:	01 01                	add    DWORD PTR [rcx],eax
     678:	55                   	push   rbp
     679:	04 cf                	add    al,0xcf
     67b:	01 d0                	add    eax,edx
     67d:	01 02                	add    DWORD PTR [rdx],eax
     67f:	77 38                	ja     6b9 <__abi_tag+0x33d>
     681:	00 00                	add    BYTE PTR [rax],al
     683:	00 00                	add    BYTE PTR [rax],al
     685:	00 00                	add    BYTE PTR [rax],al
     687:	00 04 de             	add    BYTE PTR [rsi+rbx*8],al
     68a:	01 f0                	add    eax,esi
     68c:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     68f:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
     692:	1c 0c                	sbb    al,0xc
     694:	ff                   	(bad)
     695:	ff                   	(bad)
     696:	ff                   	(bad)
     697:	ff 1a                	call   FWORD PTR [rdx]
     699:	9f                   	lahf
     69a:	04 f0                	add    al,0xf0
     69c:	01 80 02 01 51 04    	add    DWORD PTR [rax+0x4510102],eax
     6a2:	80 02 81             	add    BYTE PTR [rdx],0x81
     6a5:	02 0c 08             	add    cl,BYTE PTR [rax+rcx*1]
     6a8:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
     6ab:	1c 0c                	sbb    al,0xc
     6ad:	ff                   	(bad)
     6ae:	ff                   	(bad)
     6af:	ff                   	(bad)
     6b0:	ff 1a                	call   FWORD PTR [rdx]
     6b2:	9f                   	lahf
     6b3:	00 00                	add    BYTE PTR [rax],al
     6b5:	00 04 de             	add    BYTE PTR [rsi+rbx*8],al
     6b8:	01 81 02 02 30 9f    	add    DWORD PTR [rcx-0x60cffdfe],eax
     6be:	00 00                	add    BYTE PTR [rax],al
     6c0:	00 00                	add    BYTE PTR [rax],al
     6c2:	00 00                	add    BYTE PTR [rax],al
     6c4:	00 04 de             	add    BYTE PTR [rsi+rbx*8],al
     6c7:	01 fc                	add    esp,edi
     6c9:	01 06                	add    DWORD PTR [rsi],eax
     6cb:	7f 00                	jg     6cd <__abi_tag+0x351>
     6cd:	75 00                	jne    6cf <__abi_tag+0x353>
     6cf:	22 9f 04 fc 01 80    	and    bl,BYTE PTR [rdi-0x7ffe03fc]
     6d5:	02 01                	add    al,BYTE PTR [rcx]
     6d7:	55                   	push   rbp
     6d8:	04 80                	add    al,0x80
     6da:	02 81 02 0b 7f 00    	add    al,BYTE PTR [rcx+0x7f0b02]
     6e0:	77 30                	ja     712 <__abi_tag+0x396>
     6e2:	06                   	(bad)
     6e3:	22 77 28             	and    dh,BYTE PTR [rdi+0x28]
     6e6:	06                   	(bad)
     6e7:	22 9f 00 02 04 04    	and    bl,BYTE PTR [rdi+0x4040200]
     6ed:	81 02 81 02 02 77    	add    DWORD PTR [rdx],0x77020281
     6f3:	38 00                	cmp    BYTE PTR [rax],al
	...
     6fd:	04 90                	add    al,0x90
     6ff:	03 c6                	add    eax,esi
     701:	03 01                	add    eax,DWORD PTR [rcx]
     703:	54                   	push   rsp
     704:	04 c6                	add    al,0xc6
     706:	03 d4                	add    edx,esp
     708:	03 02                	add    eax,DWORD PTR [rdx]
     70a:	75 10                	jne    71c <__abi_tag+0x3a0>
     70c:	04 d4                	add    al,0xd4
     70e:	03 d8                	add    ebx,eax
     710:	03 02                	add    eax,DWORD PTR [rdx]
     712:	7c 10                	jl     724 <__abi_tag+0x3a8>
     714:	04 d8                	add    al,0xd8
     716:	03 b9 04 04 a3 01    	add    edi,DWORD PTR [rcx+0x1a30404]
     71c:	54                   	push   rsp
     71d:	9f                   	lahf
     71e:	00 00                	add    BYTE PTR [rax],al
     720:	00 00                	add    BYTE PTR [rax],al
     722:	00 00                	add    BYTE PTR [rax],al
     724:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
     727:	03 d8                	add    ebx,eax
     729:	03 01                	add    eax,DWORD PTR [rcx]
     72b:	51                   	push   rcx
     72c:	04 d8                	add    al,0xd8
     72e:	03 f0                	add    esi,eax
     730:	03 01                	add    eax,DWORD PTR [rcx]
     732:	5e                   	pop    rsi
     733:	04 f0                	add    al,0xf0
     735:	03 b9 04 04 a3 01    	add    edi,DWORD PTR [rcx+0x1a30404]
     73b:	51                   	push   rcx
     73c:	9f                   	lahf
	...
     745:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
     748:	03 d4                	add    edx,esp
     74a:	03 02                	add    eax,DWORD PTR [rdx]
     74c:	75 00                	jne    74e <__abi_tag+0x3d2>
     74e:	04 d4                	add    al,0xd4
     750:	03 ae 04 02 7c 00    	add    ebp,DWORD PTR [rsi+0x7c0204]
     756:	04 ae                	add    al,0xae
     758:	04 b4                	add    al,0xb4
     75a:	04 02                	add    al,0x2
     75c:	70 00                	jo     75e <__abi_tag+0x3e2>
     75e:	04 b4                	add    al,0xb4
     760:	04 b9                	add    al,0xb9
     762:	04 02                	add    al,0x2
     764:	7c 00                	jl     766 <__abi_tag+0x3ea>
     766:	00 01                	add    BYTE PTR [rcx],al
     768:	00 04 dd 03 f0 03 02 	add    BYTE PTR [rbx*8+0x203f003],al
     76f:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     775:	00 00                	add    BYTE PTR [rax],al
     777:	00 00                	add    BYTE PTR [rax],al
     779:	00 00                	add    BYTE PTR [rax],al
     77b:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     77e:	09 8b 0a 01 55 04    	or     DWORD PTR [rbx+0x455010a],ecx
     784:	8b 0a                	mov    ecx,DWORD PTR [rdx]
     786:	b4 0a                	mov    ah,0xa
     788:	01 56 04             	add    DWORD PTR [rsi+0x4],edx
     78b:	b4 0a                	mov    ah,0xa
     78d:	b9 0a 04 a3 01       	mov    ecx,0x1a3040a
     792:	55                   	push   rbp
     793:	9f                   	lahf
     794:	04 b9                	add    al,0xb9
     796:	0a d3                	or     dl,bl
     798:	0a 01                	or     al,BYTE PTR [rcx]
     79a:	55                   	push   rbp
     79b:	04 d3                	add    al,0xd3
     79d:	0a d8                	or     bl,al
     79f:	0a 04 a3             	or     al,BYTE PTR [rbx+riz*4]
     7a2:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     7a5:	00 00                	add    BYTE PTR [rax],al
     7a7:	00 00                	add    BYTE PTR [rax],al
     7a9:	00 00                	add    BYTE PTR [rax],al
     7ab:	01 04 85 0a 8b 0a 02 	add    DWORD PTR [rax*4+0x20a8b0a],eax
     7b2:	30 9f 04 8b 0a 9c    	xor    BYTE PTR [rdi-0x63f574fc],bl
     7b8:	0a 01                	or     al,BYTE PTR [rcx]
     7ba:	53                   	push   rbx
     7bb:	04 9c                	add    al,0x9c
     7bd:	0a a5 0a 03 73 7f    	or     ah,BYTE PTR [rbp+0x7f73030a]
     7c3:	9f                   	lahf
     7c4:	00 d5                	add    ch,dl
     7c6:	0a 00                	or     al,BYTE PTR [rax]
     7c8:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # fce <__abi_tag+0xc52>
     7ce:	00 00                	add    BYTE PTR [rax],al
     7d0:	00 01                	add    BYTE PTR [rcx],al
	...
     7ee:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
     7f1:	05 c5 05 02 30       	add    eax,0x300205c5
     7f6:	9f                   	lahf
     7f7:	04 c5                	add    al,0xc5
     7f9:	05 dd 05 01 50       	add    eax,0x500105dd
     7fe:	04 dd                	add    al,0xdd
     800:	05 ed 05 01 51       	add    eax,0x510105ed
     805:	04 ed                	add    al,0xed
     807:	05 ef 05 26 91       	add    eax,0x912605ef
     80c:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     813:	ff 0f                	dec    DWORD PTR [rdi]
     815:	21 91 00 94 04 74    	and    DWORD PTR [rcx+0x74049400],edx
     81b:	00 91 00 94 04 40    	add    BYTE PTR [rcx+0x40049400],dl
     821:	48 24 1f             	rex.W and al,0x1f
     824:	1a 08                	sbb    cl,BYTE PTR [rax]
     826:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     829:	29 28                	sub    DWORD PTR [rax],ebp
     82b:	01 00                	add    DWORD PTR [rax],eax
     82d:	16                   	(bad)
     82e:	13 1a                	adc    ebx,DWORD PTR [rdx]
     830:	9f                   	lahf
     831:	04 ef                	add    al,0xef
     833:	05 87 06 01 50       	add    eax,0x50010687
     838:	04 87                	add    al,0x87
     83a:	06                   	(bad)
     83b:	97                   	xchg   edi,eax
     83c:	06                   	(bad)
     83d:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     840:	97                   	xchg   edi,eax
     841:	06                   	(bad)
     842:	99                   	cdq
     843:	06                   	(bad)
     844:	c8 01 91 00          	enter  0x9101,0x0
     848:	94                   	xchg   esp,eax
     849:	04 20                	add    al,0x20
     84b:	0c ff                	or     al,0xff
     84d:	ff                   	(bad)
     84e:	ff 0f                	dec    DWORD PTR [rdi]
     850:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     856:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     85d:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     860:	91                   	xchg   ecx,eax
     861:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     868:	04 40                	add    al,0x40
     86a:	48 24 1f             	rex.W and al,0x1f
     86d:	1a 08                	sbb    cl,BYTE PTR [rax]
     86f:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     872:	29 28                	sub    DWORD PTR [rax],ebp
     874:	01 00                	add    DWORD PTR [rax],eax
     876:	16                   	(bad)
     877:	13 1a                	adc    ebx,DWORD PTR [rdx]
     879:	34 24                	xor    al,0x24
     87b:	91                   	xchg   ecx,eax
     87c:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     883:	ff                   	(bad)
     884:	ff 0f                	dec    DWORD PTR [rdi]
     886:	21 74 00 91          	and    DWORD PTR [rax+rax*1-0x6f],esi
     88a:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     891:	ff 0f                	dec    DWORD PTR [rdi]
     893:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     899:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     8a0:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     8a3:	91                   	xchg   ecx,eax
     8a4:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     8ab:	04 40                	add    al,0x40
     8ad:	48 24 1f             	rex.W and al,0x1f
     8b0:	1a 08                	sbb    cl,BYTE PTR [rax]
     8b2:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     8b5:	29 28                	sub    DWORD PTR [rax],ebp
     8b7:	01 00                	add    DWORD PTR [rax],eax
     8b9:	16                   	(bad)
     8ba:	13 1a                	adc    ebx,DWORD PTR [rdx]
     8bc:	34 24                	xor    al,0x24
     8be:	91                   	xchg   ecx,eax
     8bf:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     8c6:	04 20                	add    al,0x20
     8c8:	0c ff                	or     al,0xff
     8ca:	ff                   	(bad)
     8cb:	ff 0f                	dec    DWORD PTR [rdi]
     8cd:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     8d3:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     8da:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     8dd:	91                   	xchg   ecx,eax
     8de:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     8e5:	04 40                	add    al,0x40
     8e7:	48 24 1f             	rex.W and al,0x1f
     8ea:	1a 08                	sbb    cl,BYTE PTR [rax]
     8ec:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     8ef:	29 28                	sub    DWORD PTR [rax],ebp
     8f1:	01 00                	add    DWORD PTR [rax],eax
     8f3:	16                   	(bad)
     8f4:	13 1a                	adc    ebx,DWORD PTR [rdx]
     8f6:	34 24                	xor    al,0x24
     8f8:	91                   	xchg   ecx,eax
     8f9:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     900:	1f                   	(bad)
     901:	1a 08                	sbb    cl,BYTE PTR [rax]
     903:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     906:	2e 28 01             	cs sub BYTE PTR [rcx],al
     909:	00 16                	add    BYTE PTR [rsi],dl
     90b:	13 1a                	adc    ebx,DWORD PTR [rdx]
     90d:	9f                   	lahf
     90e:	04 99                	add    al,0x99
     910:	06                   	(bad)
     911:	b1 06                	mov    cl,0x6
     913:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     916:	b1 06                	mov    cl,0x6
     918:	bd 06 01 51 04       	mov    ebp,0x4510106
     91d:	bd 06 bf 06 f2       	mov    ebp,0xf206bf06
     922:	07                   	(bad)
     923:	91                   	xchg   ecx,eax
     924:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     92b:	ff 0f                	dec    DWORD PTR [rdi]
     92d:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     933:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     93a:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     93d:	91                   	xchg   ecx,eax
     93e:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     945:	04 40                	add    al,0x40
     947:	48 24 1f             	rex.W and al,0x1f
     94a:	1a 08                	sbb    cl,BYTE PTR [rax]
     94c:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     94f:	29 28                	sub    DWORD PTR [rax],ebp
     951:	01 00                	add    DWORD PTR [rax],eax
     953:	16                   	(bad)
     954:	13 1a                	adc    ebx,DWORD PTR [rdx]
     956:	34 24                	xor    al,0x24
     958:	91                   	xchg   ecx,eax
     959:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     960:	ff                   	(bad)
     961:	ff 0f                	dec    DWORD PTR [rdi]
     963:	21 91 00 94 04 20    	and    DWORD PTR [rcx+0x20049400],edx
     969:	0c ff                	or     al,0xff
     96b:	ff                   	(bad)
     96c:	ff 0f                	dec    DWORD PTR [rdi]
     96e:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     974:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     97b:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     97e:	91                   	xchg   ecx,eax
     97f:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     986:	04 40                	add    al,0x40
     988:	48 24 1f             	rex.W and al,0x1f
     98b:	1a 08                	sbb    cl,BYTE PTR [rax]
     98d:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     990:	29 28                	sub    DWORD PTR [rax],ebp
     992:	01 00                	add    DWORD PTR [rax],eax
     994:	16                   	(bad)
     995:	13 1a                	adc    ebx,DWORD PTR [rdx]
     997:	34 24                	xor    al,0x24
     999:	91                   	xchg   ecx,eax
     99a:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     9a1:	04 20                	add    al,0x20
     9a3:	0c ff                	or     al,0xff
     9a5:	ff                   	(bad)
     9a6:	ff 0f                	dec    DWORD PTR [rdi]
     9a8:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     9ae:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     9b5:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     9b8:	91                   	xchg   ecx,eax
     9b9:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     9c0:	04 40                	add    al,0x40
     9c2:	48 24 1f             	rex.W and al,0x1f
     9c5:	1a 08                	sbb    cl,BYTE PTR [rax]
     9c7:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     9ca:	29 28                	sub    DWORD PTR [rax],ebp
     9cc:	01 00                	add    DWORD PTR [rax],eax
     9ce:	16                   	(bad)
     9cf:	13 1a                	adc    ebx,DWORD PTR [rdx]
     9d1:	34 24                	xor    al,0x24
     9d3:	91                   	xchg   ecx,eax
     9d4:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     9db:	1f                   	(bad)
     9dc:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     9df:	27                   	(bad)
     9e0:	91                   	xchg   ecx,eax
     9e1:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     9e8:	ff 0f                	dec    DWORD PTR [rdi]
     9ea:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     9f0:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     9f7:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     9fa:	91                   	xchg   ecx,eax
     9fb:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     a02:	04 40                	add    al,0x40
     a04:	48 24 1f             	rex.W and al,0x1f
     a07:	1a 08                	sbb    cl,BYTE PTR [rax]
     a09:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     a0c:	29 28                	sub    DWORD PTR [rax],ebp
     a0e:	01 00                	add    DWORD PTR [rax],eax
     a10:	16                   	(bad)
     a11:	13 1a                	adc    ebx,DWORD PTR [rdx]
     a13:	34 24                	xor    al,0x24
     a15:	91                   	xchg   ecx,eax
     a16:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     a1d:	04 20                	add    al,0x20
     a1f:	0c ff                	or     al,0xff
     a21:	ff                   	(bad)
     a22:	ff 0f                	dec    DWORD PTR [rdi]
     a24:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     a2a:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     a31:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     a34:	91                   	xchg   ecx,eax
     a35:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     a3c:	04 40                	add    al,0x40
     a3e:	48 24 1f             	rex.W and al,0x1f
     a41:	1a 08                	sbb    cl,BYTE PTR [rax]
     a43:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     a46:	29 28                	sub    DWORD PTR [rax],ebp
     a48:	01 00                	add    DWORD PTR [rax],eax
     a4a:	16                   	(bad)
     a4b:	13 1a                	adc    ebx,DWORD PTR [rdx]
     a4d:	34 24                	xor    al,0x24
     a4f:	91                   	xchg   ecx,eax
     a50:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     a57:	1f                   	(bad)
     a58:	1a 08                	sbb    cl,BYTE PTR [rax]
     a5a:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     a5d:	2e 28 01             	cs sub BYTE PTR [rcx],al
     a60:	00 16                	add    BYTE PTR [rsi],dl
     a62:	13 1a                	adc    ebx,DWORD PTR [rdx]
     a64:	34 24                	xor    al,0x24
     a66:	91                   	xchg   ecx,eax
     a67:	10 94 04 22 20 0c ff 	adc    BYTE PTR [rsp+rax*1-0xf3dfde],dl
     a6e:	ff                   	(bad)
     a6f:	ff 0f                	dec    DWORD PTR [rdi]
     a71:	21 74 00 91          	and    DWORD PTR [rax+rax*1-0x6f],esi
     a75:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     a7c:	ff 0f                	dec    DWORD PTR [rdi]
     a7e:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     a84:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     a8b:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     a8e:	91                   	xchg   ecx,eax
     a8f:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     a96:	04 40                	add    al,0x40
     a98:	48 24 1f             	rex.W and al,0x1f
     a9b:	1a 08                	sbb    cl,BYTE PTR [rax]
     a9d:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     aa0:	29 28                	sub    DWORD PTR [rax],ebp
     aa2:	01 00                	add    DWORD PTR [rax],eax
     aa4:	16                   	(bad)
     aa5:	13 1a                	adc    ebx,DWORD PTR [rdx]
     aa7:	34 24                	xor    al,0x24
     aa9:	91                   	xchg   ecx,eax
     aaa:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     ab1:	ff                   	(bad)
     ab2:	ff 0f                	dec    DWORD PTR [rdi]
     ab4:	21 91 00 94 04 20    	and    DWORD PTR [rcx+0x20049400],edx
     aba:	0c ff                	or     al,0xff
     abc:	ff                   	(bad)
     abd:	ff 0f                	dec    DWORD PTR [rdi]
     abf:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     ac5:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     acc:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     acf:	91                   	xchg   ecx,eax
     ad0:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     ad7:	04 40                	add    al,0x40
     ad9:	48 24 1f             	rex.W and al,0x1f
     adc:	1a 08                	sbb    cl,BYTE PTR [rax]
     ade:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     ae1:	29 28                	sub    DWORD PTR [rax],ebp
     ae3:	01 00                	add    DWORD PTR [rax],eax
     ae5:	16                   	(bad)
     ae6:	13 1a                	adc    ebx,DWORD PTR [rdx]
     ae8:	34 24                	xor    al,0x24
     aea:	91                   	xchg   ecx,eax
     aeb:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     af2:	04 20                	add    al,0x20
     af4:	0c ff                	or     al,0xff
     af6:	ff                   	(bad)
     af7:	ff 0f                	dec    DWORD PTR [rdi]
     af9:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     aff:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     b06:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     b09:	91                   	xchg   ecx,eax
     b0a:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     b11:	04 40                	add    al,0x40
     b13:	48 24 1f             	rex.W and al,0x1f
     b16:	1a 08                	sbb    cl,BYTE PTR [rax]
     b18:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     b1b:	29 28                	sub    DWORD PTR [rax],ebp
     b1d:	01 00                	add    DWORD PTR [rax],eax
     b1f:	16                   	(bad)
     b20:	13 1a                	adc    ebx,DWORD PTR [rdx]
     b22:	34 24                	xor    al,0x24
     b24:	91                   	xchg   ecx,eax
     b25:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     b2c:	1f                   	(bad)
     b2d:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     b30:	27                   	(bad)
     b31:	91                   	xchg   ecx,eax
     b32:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     b39:	ff 0f                	dec    DWORD PTR [rdi]
     b3b:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     b41:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     b48:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     b4b:	91                   	xchg   ecx,eax
     b4c:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     b53:	04 40                	add    al,0x40
     b55:	48 24 1f             	rex.W and al,0x1f
     b58:	1a 08                	sbb    cl,BYTE PTR [rax]
     b5a:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     b5d:	29 28                	sub    DWORD PTR [rax],ebp
     b5f:	01 00                	add    DWORD PTR [rax],eax
     b61:	16                   	(bad)
     b62:	13 1a                	adc    ebx,DWORD PTR [rdx]
     b64:	34 24                	xor    al,0x24
     b66:	91                   	xchg   ecx,eax
     b67:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     b6e:	04 20                	add    al,0x20
     b70:	0c ff                	or     al,0xff
     b72:	ff                   	(bad)
     b73:	ff 0f                	dec    DWORD PTR [rdi]
     b75:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     b7b:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     b82:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     b85:	91                   	xchg   ecx,eax
     b86:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     b8d:	04 40                	add    al,0x40
     b8f:	48 24 1f             	rex.W and al,0x1f
     b92:	1a 08                	sbb    cl,BYTE PTR [rax]
     b94:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     b97:	29 28                	sub    DWORD PTR [rax],ebp
     b99:	01 00                	add    DWORD PTR [rax],eax
     b9b:	16                   	(bad)
     b9c:	13 1a                	adc    ebx,DWORD PTR [rdx]
     b9e:	34 24                	xor    al,0x24
     ba0:	91                   	xchg   ecx,eax
     ba1:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     ba8:	1f                   	(bad)
     ba9:	1a 08                	sbb    cl,BYTE PTR [rax]
     bab:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     bae:	2e 28 01             	cs sub BYTE PTR [rcx],al
     bb1:	00 16                	add    BYTE PTR [rsi],dl
     bb3:	13 1a                	adc    ebx,DWORD PTR [rdx]
     bb5:	34 24                	xor    al,0x24
     bb7:	91                   	xchg   ecx,eax
     bb8:	10 94 04 22 91 00 94 	adc    BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     bbf:	04 20                	add    al,0x20
     bc1:	0c ff                	or     al,0xff
     bc3:	ff                   	(bad)
     bc4:	ff 0f                	dec    DWORD PTR [rdi]
     bc6:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     bcc:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     bd3:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     bd6:	91                   	xchg   ecx,eax
     bd7:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     bde:	04 40                	add    al,0x40
     be0:	48 24 1f             	rex.W and al,0x1f
     be3:	1a 08                	sbb    cl,BYTE PTR [rax]
     be5:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     be8:	29 28                	sub    DWORD PTR [rax],ebp
     bea:	01 00                	add    DWORD PTR [rax],eax
     bec:	16                   	(bad)
     bed:	13 1a                	adc    ebx,DWORD PTR [rdx]
     bef:	34 24                	xor    al,0x24
     bf1:	91                   	xchg   ecx,eax
     bf2:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     bf9:	ff                   	(bad)
     bfa:	ff 0f                	dec    DWORD PTR [rdi]
     bfc:	21 91 00 94 04 20    	and    DWORD PTR [rcx+0x20049400],edx
     c02:	0c ff                	or     al,0xff
     c04:	ff                   	(bad)
     c05:	ff 0f                	dec    DWORD PTR [rdi]
     c07:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     c0d:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     c14:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     c17:	91                   	xchg   ecx,eax
     c18:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     c1f:	04 40                	add    al,0x40
     c21:	48 24 1f             	rex.W and al,0x1f
     c24:	1a 08                	sbb    cl,BYTE PTR [rax]
     c26:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     c29:	29 28                	sub    DWORD PTR [rax],ebp
     c2b:	01 00                	add    DWORD PTR [rax],eax
     c2d:	16                   	(bad)
     c2e:	13 1a                	adc    ebx,DWORD PTR [rdx]
     c30:	34 24                	xor    al,0x24
     c32:	91                   	xchg   ecx,eax
     c33:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     c3a:	04 20                	add    al,0x20
     c3c:	0c ff                	or     al,0xff
     c3e:	ff                   	(bad)
     c3f:	ff 0f                	dec    DWORD PTR [rdi]
     c41:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     c47:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     c4e:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     c51:	91                   	xchg   ecx,eax
     c52:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     c59:	04 40                	add    al,0x40
     c5b:	48 24 1f             	rex.W and al,0x1f
     c5e:	1a 08                	sbb    cl,BYTE PTR [rax]
     c60:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     c63:	29 28                	sub    DWORD PTR [rax],ebp
     c65:	01 00                	add    DWORD PTR [rax],eax
     c67:	16                   	(bad)
     c68:	13 1a                	adc    ebx,DWORD PTR [rdx]
     c6a:	34 24                	xor    al,0x24
     c6c:	91                   	xchg   ecx,eax
     c6d:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     c74:	1f                   	(bad)
     c75:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     c78:	27                   	(bad)
     c79:	91                   	xchg   ecx,eax
     c7a:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     c81:	ff 0f                	dec    DWORD PTR [rdi]
     c83:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     c89:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     c90:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     c93:	91                   	xchg   ecx,eax
     c94:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     c9b:	04 40                	add    al,0x40
     c9d:	48 24 1f             	rex.W and al,0x1f
     ca0:	1a 08                	sbb    cl,BYTE PTR [rax]
     ca2:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     ca5:	29 28                	sub    DWORD PTR [rax],ebp
     ca7:	01 00                	add    DWORD PTR [rax],eax
     ca9:	16                   	(bad)
     caa:	13 1a                	adc    ebx,DWORD PTR [rdx]
     cac:	34 24                	xor    al,0x24
     cae:	91                   	xchg   ecx,eax
     caf:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     cb6:	04 20                	add    al,0x20
     cb8:	0c ff                	or     al,0xff
     cba:	ff                   	(bad)
     cbb:	ff 0f                	dec    DWORD PTR [rdi]
     cbd:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     cc3:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     cca:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     ccd:	91                   	xchg   ecx,eax
     cce:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     cd5:	04 40                	add    al,0x40
     cd7:	48 24 1f             	rex.W and al,0x1f
     cda:	1a 08                	sbb    cl,BYTE PTR [rax]
     cdc:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     cdf:	29 28                	sub    DWORD PTR [rax],ebp
     ce1:	01 00                	add    DWORD PTR [rax],eax
     ce3:	16                   	(bad)
     ce4:	13 1a                	adc    ebx,DWORD PTR [rdx]
     ce6:	34 24                	xor    al,0x24
     ce8:	91                   	xchg   ecx,eax
     ce9:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     cf0:	1f                   	(bad)
     cf1:	1a 08                	sbb    cl,BYTE PTR [rax]
     cf3:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     cf6:	2e 28 01             	cs sub BYTE PTR [rcx],al
     cf9:	00 16                	add    BYTE PTR [rsi],dl
     cfb:	13 1a                	adc    ebx,DWORD PTR [rdx]
     cfd:	34 24                	xor    al,0x24
     cff:	91                   	xchg   ecx,eax
     d00:	10 94 04 22 40 48 24 	adc    BYTE PTR [rsp+rax*1+0x24484022],dl
     d07:	1f                   	(bad)
     d08:	1a 08                	sbb    cl,BYTE PTR [rax]
     d0a:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     d0d:	2e 28 01             	cs sub BYTE PTR [rcx],al
     d10:	00 16                	add    BYTE PTR [rsi],dl
     d12:	13 1a                	adc    ebx,DWORD PTR [rdx]
     d14:	9f                   	lahf
     d15:	04 bf                	add    al,0xbf
     d17:	06                   	(bad)
     d18:	d7                   	xlat   BYTE PTR ds:[rbx]
     d19:	06                   	(bad)
     d1a:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     d1d:	d7                   	xlat   BYTE PTR ds:[rbx]
     d1e:	06                   	(bad)
     d1f:	e3 06                	jrcxz  d27 <__abi_tag+0x9ab>
     d21:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     d24:	e5 06                	in     eax,0x6
     d26:	8a 07                	mov    al,BYTE PTR [rdi]
     d28:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     d2b:	8e 07                	mov    es,WORD PTR [rdi]
     d2d:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     d2e:	07                   	(bad)
     d2f:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     d32:	b0 07                	mov    al,0x7
     d34:	b5 07                	mov    ch,0x7
     d36:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
     d39:	02 00                	add    al,BYTE PTR [rax]
	...
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	01 00                	add    DWORD PTR [rax],eax
     d57:	00 00                	add    BYTE PTR [rax],al
     d59:	00 00                	add    BYTE PTR [rax],al
     d5b:	00 00                	add    BYTE PTR [rax],al
     d5d:	04 b4                	add    al,0xb4
     d5f:	05 cd 05 02 30       	add    eax,0x300205cd
     d64:	9f                   	lahf
     d65:	04 cd                	add    al,0xcd
     d67:	05 d8 05 01 51       	add    eax,0x510105d8
     d6c:	04 d8                	add    al,0xd8
     d6e:	05 dd 05 04 71       	add    eax,0x710405dd
     d73:	00 20                	add    BYTE PTR [rax],ah
     d75:	9f                   	lahf
     d76:	04 dd                	add    al,0xdd
     d78:	05 f7 05 0a 91       	add    eax,0x910a05f7
     d7d:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     d84:	1a 9f 04 f7 05 82    	sbb    bl,BYTE PTR [rdi-0x7dfa08fc]
     d8a:	06                   	(bad)
     d8b:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     d8e:	82                   	(bad)
     d8f:	06                   	(bad)
     d90:	87 06                	xchg   DWORD PTR [rsi],eax
     d92:	04 71                	add    al,0x71
     d94:	00 20                	add    BYTE PTR [rax],ah
     d96:	9f                   	lahf
     d97:	04 87                	add    al,0x87
     d99:	06                   	(bad)
     d9a:	a1 06 40 91 00 94 04 	movabs eax,ds:0xc20049400914006
     da1:	20 0c 
     da3:	ff                   	(bad)
     da4:	ff                   	(bad)
     da5:	ff 0f                	dec    DWORD PTR [rdi]
     da7:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     dad:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     db4:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     db7:	91                   	xchg   ecx,eax
     db8:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     dbf:	04 40                	add    al,0x40
     dc1:	48 24 1f             	rex.W and al,0x1f
     dc4:	1a 08                	sbb    cl,BYTE PTR [rax]
     dc6:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     dc9:	29 28                	sub    DWORD PTR [rax],ebp
     dcb:	01 00                	add    DWORD PTR [rax],eax
     dcd:	16                   	(bad)
     dce:	13 1a                	adc    ebx,DWORD PTR [rdx]
     dd0:	34 24                	xor    al,0x24
     dd2:	91                   	xchg   ecx,eax
     dd3:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     dda:	1f                   	(bad)
     ddb:	1a 9f 04 a1 06 ac    	sbb    bl,BYTE PTR [rdi-0x53f95efc]
     de1:	06                   	(bad)
     de2:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     de5:	ac                   	lods   al,BYTE PTR ds:[rsi]
     de6:	06                   	(bad)
     de7:	b1 06                	mov    cl,0x6
     de9:	04 71                	add    al,0x71
     deb:	00 20                	add    BYTE PTR [rax],ah
     ded:	9f                   	lahf
     dee:	04 b1                	add    al,0xb1
     df0:	06                   	(bad)
     df1:	c7 06 ce 02 91 00    	mov    DWORD PTR [rsi],0x9102ce
     df7:	94                   	xchg   esp,eax
     df8:	04 20                	add    al,0x20
     dfa:	0c ff                	or     al,0xff
     dfc:	ff                   	(bad)
     dfd:	ff 0f                	dec    DWORD PTR [rdi]
     dff:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     e05:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     e0c:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     e0f:	91                   	xchg   ecx,eax
     e10:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     e17:	04 40                	add    al,0x40
     e19:	48 24 1f             	rex.W and al,0x1f
     e1c:	1a 08                	sbb    cl,BYTE PTR [rax]
     e1e:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     e21:	29 28                	sub    DWORD PTR [rax],ebp
     e23:	01 00                	add    DWORD PTR [rax],eax
     e25:	16                   	(bad)
     e26:	13 1a                	adc    ebx,DWORD PTR [rdx]
     e28:	34 24                	xor    al,0x24
     e2a:	91                   	xchg   ecx,eax
     e2b:	08 94 04 22 20 0c ff 	or     BYTE PTR [rsp+rax*1-0xf3dfde],dl
     e32:	ff                   	(bad)
     e33:	ff 0f                	dec    DWORD PTR [rdi]
     e35:	21 91 00 94 04 20    	and    DWORD PTR [rcx+0x20049400],edx
     e3b:	0c ff                	or     al,0xff
     e3d:	ff                   	(bad)
     e3e:	ff 0f                	dec    DWORD PTR [rdi]
     e40:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     e46:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     e4d:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     e50:	91                   	xchg   ecx,eax
     e51:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     e58:	04 40                	add    al,0x40
     e5a:	48 24 1f             	rex.W and al,0x1f
     e5d:	1a 08                	sbb    cl,BYTE PTR [rax]
     e5f:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     e62:	29 28                	sub    DWORD PTR [rax],ebp
     e64:	01 00                	add    DWORD PTR [rax],eax
     e66:	16                   	(bad)
     e67:	13 1a                	adc    ebx,DWORD PTR [rdx]
     e69:	34 24                	xor    al,0x24
     e6b:	91                   	xchg   ecx,eax
     e6c:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     e73:	04 20                	add    al,0x20
     e75:	0c ff                	or     al,0xff
     e77:	ff                   	(bad)
     e78:	ff 0f                	dec    DWORD PTR [rdi]
     e7a:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     e80:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     e87:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     e8a:	91                   	xchg   ecx,eax
     e8b:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     e92:	04 40                	add    al,0x40
     e94:	48 24 1f             	rex.W and al,0x1f
     e97:	1a 08                	sbb    cl,BYTE PTR [rax]
     e99:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     e9c:	29 28                	sub    DWORD PTR [rax],ebp
     e9e:	01 00                	add    DWORD PTR [rax],eax
     ea0:	16                   	(bad)
     ea1:	13 1a                	adc    ebx,DWORD PTR [rdx]
     ea3:	34 24                	xor    al,0x24
     ea5:	91                   	xchg   ecx,eax
     ea6:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     ead:	1f                   	(bad)
     eae:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     eb1:	27                   	(bad)
     eb2:	91                   	xchg   ecx,eax
     eb3:	00 94 04 20 0c ff ff 	add    BYTE PTR [rsp+rax*1-0xf3e0],dl
     eba:	ff 0f                	dec    DWORD PTR [rdi]
     ebc:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     ec2:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     ec9:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     ecc:	91                   	xchg   ecx,eax
     ecd:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     ed4:	04 40                	add    al,0x40
     ed6:	48 24 1f             	rex.W and al,0x1f
     ed9:	1a 08                	sbb    cl,BYTE PTR [rax]
     edb:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     ede:	29 28                	sub    DWORD PTR [rax],ebp
     ee0:	01 00                	add    DWORD PTR [rax],eax
     ee2:	16                   	(bad)
     ee3:	13 1a                	adc    ebx,DWORD PTR [rdx]
     ee5:	34 24                	xor    al,0x24
     ee7:	91                   	xchg   ecx,eax
     ee8:	08 94 04 22 91 00 94 	or     BYTE PTR [rsp+rax*1-0x6bff6ede],dl
     eef:	04 20                	add    al,0x20
     ef1:	0c ff                	or     al,0xff
     ef3:	ff                   	(bad)
     ef4:	ff 0f                	dec    DWORD PTR [rdi]
     ef6:	21 91 00 94 04 91    	and    DWORD PTR [rcx-0x6efb6c00],edx
     efc:	00 94 04 40 48 24 1f 	add    BYTE PTR [rsp+rax*1+0x1f244840],dl
     f03:	1a 48 25             	sbb    cl,BYTE PTR [rax+0x25]
     f06:	91                   	xchg   ecx,eax
     f07:	00 94 04 27 91 00 94 	add    BYTE PTR [rsp+rax*1-0x6bff6ed9],dl
     f0e:	04 40                	add    al,0x40
     f10:	48 24 1f             	rex.W and al,0x1f
     f13:	1a 08                	sbb    cl,BYTE PTR [rax]
     f15:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     f18:	29 28                	sub    DWORD PTR [rax],ebp
     f1a:	01 00                	add    DWORD PTR [rax],eax
     f1c:	16                   	(bad)
     f1d:	13 1a                	adc    ebx,DWORD PTR [rdx]
     f1f:	34 24                	xor    al,0x24
     f21:	91                   	xchg   ecx,eax
     f22:	08 94 04 22 40 48 24 	or     BYTE PTR [rsp+rax*1+0x24484022],dl
     f29:	1f                   	(bad)
     f2a:	1a 08                	sbb    cl,BYTE PTR [rax]
     f2c:	20 24 30             	and    BYTE PTR [rax+rsi*1],ah
     f2f:	2e 28 01             	cs sub BYTE PTR [rcx],al
     f32:	00 16                	add    BYTE PTR [rsi],dl
     f34:	13 1a                	adc    ebx,DWORD PTR [rdx]
     f36:	34 24                	xor    al,0x24
     f38:	91                   	xchg   ecx,eax
     f39:	10 94 04 22 40 48 24 	adc    BYTE PTR [rsp+rax*1+0x24484022],dl
     f40:	1f                   	(bad)
     f41:	1a 9f 04 c7 06 d2    	sbb    bl,BYTE PTR [rdi-0x2df938fc]
     f47:	06                   	(bad)
     f48:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     f4b:	d2 06                	rol    BYTE PTR [rsi],cl
     f4d:	d7                   	xlat   BYTE PTR ds:[rbx]
     f4e:	06                   	(bad)
     f4f:	04 71                	add    al,0x71
     f51:	00 20                	add    BYTE PTR [rax],ah
     f53:	9f                   	lahf
     f54:	04 ed                	add    al,0xed
     f56:	06                   	(bad)
     f57:	f8                   	clc
     f58:	06                   	(bad)
     f59:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     f5c:	f8                   	clc
     f5d:	06                   	(bad)
     f5e:	82                   	(bad)
     f5f:	07                   	(bad)
     f60:	04 71                	add    al,0x71
     f62:	00 20                	add    BYTE PTR [rax],ah
     f64:	9f                   	lahf
     f65:	04 8e                	add    al,0x8e
     f67:	07                   	(bad)
     f68:	96                   	xchg   esi,eax
     f69:	07                   	(bad)
     f6a:	08 70 00             	or     BYTE PTR [rax+0x0],dh
     f6d:	40                   	rex
     f6e:	48 24 1f             	rex.W and al,0x1f
     f71:	1a 9f 04 96 07 9c    	sbb    bl,BYTE PTR [rdi-0x63f869fc]
     f77:	07                   	(bad)
     f78:	01 54 04 9c          	add    DWORD PTR [rsp+rax*1-0x64],edx
     f7c:	07                   	(bad)
     f7d:	9f                   	lahf
     f7e:	07                   	(bad)
     f7f:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     f82:	9f                   	lahf
     f83:	07                   	(bad)
     f84:	a3 07 04 74 00 20 9f 	movabs ds:0x3009f2000740407,eax
     f8b:	00 03 
     f8d:	01 01                	add    DWORD PTR [rcx],eax
     f8f:	01 01                	add    DWORD PTR [rcx],eax
     f91:	01 01                	add    DWORD PTR [rcx],eax
     f93:	01 01                	add    DWORD PTR [rcx],eax
     f95:	01 01                	add    DWORD PTR [rcx],eax
     f97:	00 00                	add    BYTE PTR [rax],al
     f99:	01 01                	add    DWORD PTR [rcx],eax
     f9b:	00 00                	add    BYTE PTR [rax],al
     f9d:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
     fa0:	05 dd 05 02 30       	add    eax,0x300205dd
     fa5:	9f                   	lahf
     fa6:	04 dd                	add    al,0xdd
     fa8:	05 87 06 02 31       	add    eax,0x31020687
     fad:	9f                   	lahf
     fae:	04 87                	add    al,0x87
     fb0:	06                   	(bad)
     fb1:	b1 06                	mov    cl,0x6
     fb3:	02 32                	add    dh,BYTE PTR [rdx]
     fb5:	9f                   	lahf
     fb6:	04 b1                	add    al,0xb1
     fb8:	06                   	(bad)
     fb9:	d7                   	xlat   BYTE PTR ds:[rbx]
     fba:	06                   	(bad)
     fbb:	02 33                	add    dh,BYTE PTR [rbx]
     fbd:	9f                   	lahf
     fbe:	04 d7                	add    al,0xd7
     fc0:	06                   	(bad)
     fc1:	fd                   	std
     fc2:	06                   	(bad)
     fc3:	02 34 9f             	add    dh,BYTE PTR [rdi+rbx*4]
     fc6:	04 fd                	add    al,0xfd
     fc8:	06                   	(bad)
     fc9:	87 07                	xchg   DWORD PTR [rdi],eax
     fcb:	02 35 9f 04 87 07    	add    dh,BYTE PTR [rip+0x787049f]        # 7871470 <_end+0x786b458>
     fd1:	a3 07 01 51 04 a3 07 	movabs ds:0x7a707a304510107,eax
     fd8:	a7 07 
     fda:	03 71 01             	add    esi,DWORD PTR [rcx+0x1]
     fdd:	9f                   	lahf
     fde:	04 a7                	add    al,0xa7
     fe0:	07                   	(bad)
     fe1:	ab                   	stos   DWORD PTR es:[rdi],eax
     fe2:	07                   	(bad)
     fe3:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
     fe6:	01 00                	add    DWORD PTR [rax],eax
	...
    1000:	00 00                	add    BYTE PTR [rax],al
    1002:	04 a4                	add    al,0xa4
    1004:	01 f2                	add    edx,esi
    1006:	01 02                	add    DWORD PTR [rdx],eax
    1008:	31 9f 04 f2 01 f5    	xor    DWORD PTR [rdi-0xafe0dfc],ebx
    100e:	01 01                	add    DWORD PTR [rcx],eax
    1010:	52                   	push   rdx
    1011:	04 f5                	add    al,0xf5
    1013:	01 bb 02 01 5a 04    	add    DWORD PTR [rbx+0x45a0102],edi
    1019:	bb 02 d1 02 01       	mov    ebx,0x102d102
    101e:	54                   	push   rsp
    101f:	04 d1                	add    al,0xd1
    1021:	02 8b 03 01 5a 04    	add    cl,BYTE PTR [rbx+0x45a0103]
    1027:	8b 03                	mov    eax,DWORD PTR [rbx]
    1029:	a1 03 01 54 04 a1 03 	movabs eax,ds:0x3db03a104540103
    1030:	db 03 
    1032:	01 5a 04             	add    DWORD PTR [rdx+0x4],ebx
    1035:	db 03                	fild   DWORD PTR [rbx]
    1037:	f1                   	int1
    1038:	03 01                	add    eax,DWORD PTR [rcx]
    103a:	54                   	push   rsp
    103b:	04 f1                	add    al,0xf1
    103d:	03 a7 04 01 5a 04    	add    esp,DWORD PTR [rdi+0x45a0104]
    1043:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1044:	04 af                	add    al,0xaf
    1046:	04 01                	add    al,0x1
    1048:	54                   	push   rsp
    1049:	04 af                	add    al,0xaf
    104b:	04 cb                	add    al,0xcb
    104d:	04 01                	add    al,0x1
    104f:	5a                   	pop    rdx
    1050:	04 f8                	add    al,0xf8
    1052:	04 80                	add    al,0x80
    1054:	05 01 51 04 80       	add    eax,0x80045101
    1059:	05 96 05 01 5a       	add    eax,0x5a010596
    105e:	04 9f                	add    al,0x9f
    1060:	05 a6 05 02 31       	add    eax,0x310205a6
    1065:	9f                   	lahf
    1066:	00 02                	add    BYTE PTR [rdx],al
	...
    107c:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
    107f:	01 87 02 02 30 9f    	add    DWORD PTR [rdi-0x60cffdfe],eax
    1085:	04 87                	add    al,0x87
    1087:	02 b8 02 01 52 04    	add    bh,BYTE PTR [rax+0x4520102]
    108d:	d5 02 e8             	(bad)
    1090:	02 01                	add    al,BYTE PTR [rcx]
    1092:	50                   	push   rax
    1093:	04 e8                	add    al,0xe8
    1095:	02 88 03 01 52 04    	add    cl,BYTE PTR [rax+0x4520103]
    109b:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    109c:	03 b8 03 01 50 04    	add    edi,DWORD PTR [rax+0x4500103]
    10a2:	b8 03 d8 03 01       	mov    eax,0x103d803
    10a7:	52                   	push   rdx
    10a8:	04 f5                	add    al,0xf5
    10aa:	03 88 04 01 50 04    	add    ecx,DWORD PTR [rax+0x4500104]
    10b0:	88 04 a9             	mov    BYTE PTR [rcx+rbp*4],al
    10b3:	04 01                	add    al,0x1
    10b5:	52                   	push   rdx
    10b6:	04 c1                	add    al,0xc1
    10b8:	04 fa                	add    al,0xfa
    10ba:	04 01                	add    al,0x1
    10bc:	52                   	push   rdx
    10bd:	04 92                	add    al,0x92
    10bf:	05 9f 05 01 52       	add    eax,0x5201059f
    10c4:	04 9f                	add    al,0x9f
    10c6:	05 a6 05 02 30       	add    eax,0x300205a6
    10cb:	9f                   	lahf
    10cc:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    10cf:	01 01                	add    DWORD PTR [rcx],eax
    10d1:	01 01                	add    DWORD PTR [rcx],eax
    10d3:	01 01                	add    DWORD PTR [rcx],eax
    10d5:	01 01                	add    DWORD PTR [rcx],eax
    10d7:	01 00                	add    DWORD PTR [rax],eax
    10d9:	00 00                	add    BYTE PTR [rax],al
    10db:	00 01                	add    BYTE PTR [rcx],al
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	04 a4                	add    al,0xa4
    10e1:	01 87 02 02 30 9f    	add    DWORD PTR [rdi-0x60cffdfe],eax
    10e7:	04 87                	add    al,0x87
    10e9:	02 d5                	add    dl,ch
    10eb:	02 02                	add    al,BYTE PTR [rdx]
    10ed:	31 9f 04 d5 02 a5    	xor    DWORD PTR [rdi-0x5afd2afc],ebx
    10f3:	03 02                	add    eax,DWORD PTR [rdx]
    10f5:	32 9f 04 a5 03 f5    	xor    bl,BYTE PTR [rdi-0xafc5afc]
    10fb:	03 02                	add    eax,DWORD PTR [rdx]
    10fd:	33 9f 04 f5 03 c1    	xor    ebx,DWORD PTR [rdi-0x3efc0afc]
    1103:	04 02                	add    al,0x2
    1105:	34 9f                	xor    al,0x9f
    1107:	04 c1                	add    al,0xc1
    1109:	04 cb                	add    al,0xcb
    110b:	04 02                	add    al,0x2
    110d:	35 9f 04 cb 04       	xor    eax,0x4cb049f
    1112:	d4                   	(bad)
    1113:	04 01                	add    al,0x1
    1115:	54                   	push   rsp
    1116:	04 d4                	add    al,0xd4
    1118:	04 92                	add    al,0x92
    111a:	05 03 74 7f 9f       	add    eax,0x9f7f7403
    111f:	04 9f                	add    al,0x9f
    1121:	05 a6 05 02 30       	add    eax,0x300205a6
    1126:	9f                   	lahf
    1127:	00 00                	add    BYTE PTR [rax],al
    1129:	00 04 24             	add    BYTE PTR [rsp],al
    112c:	79 06                	jns    1134 <strcmp@plt+0x4>
    112e:	91                   	xchg   ecx,eax
    112f:	00 93 20 93 20 00    	add    BYTE PTR [rbx+0x209320],dl
    1135:	01 02                	add    DWORD PTR [rdx],eax
    1137:	04 24                	add    al,0x24
    1139:	71 02                	jno    113d <strcmp@plt+0xd>
    113b:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1141:	00 04 3c             	add    BYTE PTR [rsp+rdi*1],al
    1144:	50                   	push   rax
    1145:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    1148:	63 65 01             	movsxd esp,DWORD PTR [rbp+0x1]
    114b:	50                   	push   rax
    114c:	00 00                	add    BYTE PTR [rax],al
    114e:	00 08                	add    BYTE PTR [rax],cl
    1150:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
    1153:	5d                   	pop    rbp
    1154:	01 54 04 63          	add    DWORD PTR [rsp+rax*1+0x63],edx
    1158:	79 01                	jns    115b <puts@plt+0xb>
    115a:	55                   	push   rbp
    115b:	00 00                	add    BYTE PTR [rax],al
    115d:	00 00                	add    BYTE PTR [rax],al
    115f:	00 04 55 6b 01 61 04 	add    BYTE PTR [rdx*2+0x461016b],al
    1166:	6b 79 01 54          	imul   edi,DWORD PTR [rcx+0x1],0x54
    116a:	00 00                	add    BYTE PTR [rax],al
    116c:	00 00                	add    BYTE PTR [rax],al
    116e:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    1171:	71 01                	jno    1174 <__memcpy_chk@plt+0x4>
    1173:	51                   	push   rcx
    1174:	04 71                	add    al,0x71
    1176:	79 01                	jns    1179 <__memcpy_chk@plt+0x9>
    1178:	52                   	push   rdx
    1179:	00 03                	add    BYTE PTR [rbx],al
    117b:	00 04 24             	add    BYTE PTR [rsp],al
    117e:	3c 02                	cmp    al,0x2
    1180:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
    1186:	24 3c                	and    al,0x3c
    1188:	02 91 00 00 00 00    	add    dl,BYTE PTR [rcx+0x0]
    118e:	04 2a                	add    al,0x2a
    1190:	48 01 61 00          	add    QWORD PTR [rcx+0x0],rsp
    1194:	05 00 04 24 2a       	add    eax,0x2a240400
    1199:	02 30                	add    dh,BYTE PTR [rax]
    119b:	9f                   	lahf
    119c:	00 05 00 04 24 2a    	add    BYTE PTR [rip+0x2a240400],al        # 2a2415a2 <_end+0x2a23b58a>
    11a2:	02 91 00 00 02 00    	add    dl,BYTE PTR [rcx+0x20000]
    11a8:	04 2a                	add    al,0x2a
    11aa:	3c 02                	cmp    al,0x2
    11ac:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    11b2:	2a 3c 01             	sub    bh,BYTE PTR [rcx+rax*1]
    11b5:	61                   	(bad)
    11b6:	00 02                	add    BYTE PTR [rdx],al
    11b8:	04 04                	add    al,0x4
    11ba:	63 63 0a             	movsxd esp,DWORD PTR [rbx+0xa]
    11bd:	9e                   	sahf
    11be:	08 11                	or     BYTE PTR [rcx],dl
    11c0:	11 11                	adc    DWORD PTR [rcx],edx
    11c2:	21 11                	and    DWORD PTR [rcx],edx
    11c4:	12 12                	adc    dl,BYTE PTR [rdx]
    11c6:	12 00                	adc    al,BYTE PTR [rax]
    11c8:	02 00                	add    al,BYTE PTR [rax]
    11ca:	04 42                	add    al,0x42
    11cc:	55                   	push   rbp
    11cd:	02 32                	add    dh,BYTE PTR [rdx]
    11cf:	9f                   	lahf
    11d0:	00 02                	add    BYTE PTR [rdx],al
    11d2:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
    11d5:	55                   	push   rbp
    11d6:	02 91 00 00 00 00    	add    dl,BYTE PTR [rcx+0x0]
    11dc:	04 48                	add    al,0x48
    11de:	79 01                	jns    11e1 <main+0x11>
    11e0:	61                   	(bad)
    11e1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    11e4:	04 42                	add    al,0x42
    11e6:	48 02 31             	rex.W add sil,BYTE PTR [rcx]
    11e9:	9f                   	lahf
    11ea:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    11ed:	04 42                	add    al,0x42
    11ef:	48 02 91 00 00 02 00 	rex.W add dl,BYTE PTR [rcx+0x20000]
    11f6:	04 48                	add    al,0x48
    11f8:	55                   	push   rbp
    11f9:	02 30                	add    dh,BYTE PTR [rax]
    11fb:	9f                   	lahf
    11fc:	00 02                	add    BYTE PTR [rdx],al
    11fe:	00 04 48             	add    BYTE PTR [rax+rcx*2],al
    1201:	55                   	push   rbp
    1202:	01 61 00             	add    DWORD PTR [rcx+0x0],esp
    1205:	02 00                	add    al,BYTE PTR [rax]
    1207:	04 3c                	add    al,0x3c
    1209:	42 02 31             	rex.X add sil,BYTE PTR [rcx]
    120c:	9f                   	lahf
    120d:	00 02                	add    BYTE PTR [rdx],al
    120f:	00 04 3c             	add    BYTE PTR [rsp+rdi*1],al
    1212:	42 02 91 00 00 04 00 	rex.X add dl,BYTE PTR [rcx+0x40000]
    1219:	04 3c                	add    al,0x3c
    121b:	48 01 61 00          	add    QWORD PTR [rcx+0x0],rsp
    121f:	05 00 04 3c 42       	add    eax,0x423c0400
    1224:	02 31                	add    dh,BYTE PTR [rcx]
    1226:	9f                   	lahf
    1227:	00 05 00 04 3c 42    	add    BYTE PTR [rip+0x423c0400],al        # 423c162d <_end+0x423bb615>
    122d:	01 61 00             	add    DWORD PTR [rcx+0x0],esp
    1230:	06                   	(bad)
    1231:	08 04 63             	or     BYTE PTR [rbx+riz*2],al
    1234:	63 0a                	movsxd ecx,DWORD PTR [rdx]
    1236:	9e                   	sahf
    1237:	08 11                	or     BYTE PTR [rcx],dl
    1239:	11 11                	adc    DWORD PTR [rcx],edx
    123b:	21 11                	and    DWORD PTR [rcx],edx
    123d:	12 12                	adc    dl,BYTE PTR [rdx]
    123f:	12 00                	adc    al,BYTE PTR [rax]
    1241:	02 00                	add    al,BYTE PTR [rax]
    1243:	04 55                	add    al,0x55
    1245:	63 02                	movsxd eax,DWORD PTR [rdx]
    1247:	33 9f 00 02 00 04    	xor    ebx,DWORD PTR [rdi+0x4000200]
    124d:	55                   	push   rbp
    124e:	63 02                	movsxd eax,DWORD PTR [rdx]
    1250:	91                   	xchg   ecx,eax
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	04 00                	add    al,0x0
    1255:	04 55                	add    al,0x55
    1257:	79 01                	jns    125a <deregister_tm_clones+0x1a>
    1259:	61                   	(bad)
    125a:	00 05 00 04 55 63    	add    BYTE PTR [rip+0x63550400],al        # 63551660 <_end+0x6354b648>
    1260:	02 31                	add    dh,BYTE PTR [rcx]
    1262:	9f                   	lahf
    1263:	00 05 00 04 55 63    	add    BYTE PTR [rip+0x63550400],al        # 63551669 <_end+0x6354b651>
    1269:	01 61 00             	add    DWORD PTR [rcx+0x0],esp
    126c:	0a 00                	or     al,BYTE PTR [rax]
    126e:	04 63                	add    al,0x63
    1270:	6b 01 61             	imul   eax,DWORD PTR [rcx],0x61
    1273:	00 0a                	add    BYTE PTR [rdx],cl
    1275:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    1278:	6b 0a 9e             	imul   ecx,DWORD PTR [rdx],0xffffff9e
    127b:	08 11                	or     BYTE PTR [rcx],dl
    127d:	11 11                	adc    DWORD PTR [rcx],edx
    127f:	21 11                	and    DWORD PTR [rcx],edx
    1281:	12 12                	adc    dl,BYTE PTR [rdx]
    1283:	12 00                	adc    al,BYTE PTR [rax]
    1285:	02 00                	add    al,BYTE PTR [rax]
    1287:	04 6b                	add    al,0x6b
    1289:	71 01                	jno    128c <register_tm_clones+0x1c>
    128b:	51                   	push   rcx
    128c:	00 02                	add    BYTE PTR [rdx],al
    128e:	00 04 6b             	add    BYTE PTR [rbx+rbp*2],al
    1291:	71 0a                	jno    129d <register_tm_clones+0x2d>
    1293:	9e                   	sahf
    1294:	08 11                	or     BYTE PTR [rcx],dl
    1296:	11 11                	adc    DWORD PTR [rcx],edx
    1298:	21 11                	and    DWORD PTR [rcx],edx
    129a:	12 12                	adc    dl,BYTE PTR [rdx]
    129c:	12 00                	adc    al,BYTE PTR [rax]
    129e:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    12a1:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 1aa7 <_Z6resizeP7HashMapj+0x247>
	...
    12b3:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    12b6:	06                   	(bad)
    12b7:	f0 06                	lock (bad)
    12b9:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    12bc:	f0 06                	lock (bad)
    12be:	fe 06                	inc    BYTE PTR [rsi]
    12c0:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    12c3:	fe 06                	inc    BYTE PTR [rsi]
    12c5:	ff 06                	inc    DWORD PTR [rsi]
    12c7:	04 a3                	add    al,0xa3
    12c9:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    12cc:	04 ff                	add    al,0xff
    12ce:	06                   	(bad)
    12cf:	99                   	cdq
    12d0:	07                   	(bad)
    12d1:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    12d4:	99                   	cdq
    12d5:	07                   	(bad)
    12d6:	9e                   	sahf
    12d7:	07                   	(bad)
    12d8:	04 a3                	add    al,0xa3
    12da:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 00                	add    BYTE PTR [rax],al
    12e1:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    12e4:	04 ef                	add    al,0xef
    12e6:	05 01 55 04 ef       	add    eax,0xef045501
    12eb:	05 f4 05 04 a3       	add    eax,0xa30405f4
    12f0:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    12f3:	00 00                	add    BYTE PTR [rax],al
    12f5:	00 01                	add    BYTE PTR [rcx],al
    12f7:	00 04 8c             	add    BYTE PTR [rsp+rcx*4],al
    12fa:	05 96 05 02 30       	add    eax,0x30020596
    12ff:	9f                   	lahf
    1300:	04 96                	add    al,0x96
    1302:	05 d5 05 01 50       	add    eax,0x500105d5
    1307:	00 00                	add    BYTE PTR [rax],al
    1309:	00 00                	add    BYTE PTR [rax],al
    130b:	00 04 ad 05 b1 05 01 	add    BYTE PTR [rbp*4+0x105b105],al
    1312:	54                   	push   rsp
    1313:	04 b1                	add    al,0xb1
    1315:	05 d5 05 01 59       	add    eax,0x590105d5
    131a:	00 01                	add    BYTE PTR [rcx],al
    131c:	00 04 ad 05 b5 05 02 	add    BYTE PTR [rbp*4+0x205b505],al
    1323:	71 00                	jno    1325 <_Z16buildStringArrayPcj+0x25>
    1325:	00 00                	add    BYTE PTR [rax],al
    1327:	00 00                	add    BYTE PTR [rax],al
    1329:	01 04 da             	add    DWORD PTR [rdx+rbx*8],eax
    132c:	04 8c                	add    al,0x8c
    132e:	05 05 64 93 20       	add    eax,0x20936405
    1333:	93                   	xchg   ebx,eax
    1334:	20 04 96             	and    BYTE PTR [rsi+rdx*4],al
    1337:	05 96 05 05 64       	add    eax,0x64050596
    133c:	93                   	xchg   ebx,eax
    133d:	20 93 20 00 01 00    	and    BYTE PTR [rbx+0x10020],dl
    1343:	00 01                	add    BYTE PTR [rcx],al
    1345:	04 d1                	add    al,0xd1
    1347:	04 8c                	add    al,0x8c
    1349:	05 01 55 04 96       	add    eax,0x96045501
    134e:	05 96 05 01 55       	add    eax,0x55010596
	...
    135b:	01 04 df             	add    DWORD PTR [rdi+rbx*8],eax
    135e:	04 84                	add    al,0x84
    1360:	05 01 52 04 84       	add    eax,0x84045201
    1365:	05 88 05 01 50       	add    eax,0x50010588
    136a:	04 88                	add    al,0x88
    136c:	05 8c 05 01 52       	add    eax,0x5201058c
    1371:	04 96                	add    al,0x96
    1373:	05 96 05 01 50       	add    eax,0x50010596
    1378:	00 00                	add    BYTE PTR [rax],al
    137a:	01 04 e9             	add    DWORD PTR [rcx+rbp*8],eax
    137d:	04 80                	add    al,0x80
    137f:	05 04 71 c0 00       	add    eax,0xc07104
    1384:	9f                   	lahf
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	01 04 e9             	add    DWORD PTR [rcx+rbp*8],eax
    138a:	04 80                	add    al,0x80
    138c:	05 06 a0 ca 3f       	add    eax,0x3fcaa006
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	00 00                	add    BYTE PTR [rax],al
    1395:	02 00                	add    al,BYTE PTR [rax]
    1397:	00 01                	add    BYTE PTR [rcx],al
    1399:	04 e9                	add    al,0xe9
    139b:	04 80                	add    al,0x80
    139d:	05 02 30 9f 04       	add    eax,0x49f3002
    13a2:	80 05 80 05 01 54 00 	add    BYTE PTR [rip+0x54010580],0x0        # 54011929 <_end+0x5400b911>
	...
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	04 a0                	add    al,0xa0
    13b9:	01 94 02 01 55 04 94 	add    DWORD PTR [rdx+rax*1-0x6bfbaaff],edx
    13c0:	02 9e 02 01 5c 04    	add    bl,BYTE PTR [rsi+0x45c0102]
    13c6:	9e                   	sahf
    13c7:	02 a5 02 04 a3 01    	add    ah,BYTE PTR [rbp+0x1a30402]
    13cd:	55                   	push   rbp
    13ce:	9f                   	lahf
    13cf:	04 a5                	add    al,0xa5
    13d1:	02 9a 03 01 55 04    	add    bl,BYTE PTR [rdx+0x4550103]
    13d7:	9a                   	(bad)
    13d8:	03 9d 04 01 5c 04    	add    ebx,DWORD PTR [rbp+0x45c0104]
    13de:	9d                   	popf
    13df:	04 b7                	add    al,0xb7
    13e1:	04 01                	add    al,0x1
    13e3:	55                   	push   rbp
    13e4:	04 b7                	add    al,0xb7
    13e6:	04 bc                	add    al,0xbc
    13e8:	04 04                	add    al,0x4
    13ea:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    13f1:	00 00 
    13f3:	00 00                	add    BYTE PTR [rax],al
    13f5:	04 a5                	add    al,0xa5
    13f7:	02 bc 02 02 30 9f 04 	add    bh,BYTE PTR [rdx+rax*1+0x49f3002]
    13fe:	bc 02 c0 02 01       	mov    esp,0x102c002
    1403:	53                   	push   rbx
    1404:	04 c0                	add    al,0xc0
    1406:	02 87 03 01 52 00    	add    al,BYTE PTR [rdi+0x520103]
    140c:	00 00                	add    BYTE PTR [rax],al
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	04 e8                	add    al,0xe8
    1412:	02 f5                	add    dh,ch
    1414:	02 01                	add    al,BYTE PTR [rcx]
    1416:	51                   	push   rcx
    1417:	04 f5                	add    al,0xf5
    1419:	02 f8                	add    bh,al
    141b:	02 02                	add    al,BYTE PTR [rdx]
    141d:	70 04                	jo     1423 <_Z16buildStringArrayPcj+0x123>
    141f:	00 01                	add    BYTE PTR [rcx],al
    1421:	00 04 c7             	add    BYTE PTR [rdi+rax*8],al
    1424:	01 fc                	add    esp,edi
    1426:	01 05 64 93 20 93    	add    DWORD PTR [rip+0xffffffff93209364],eax        # ffffffff9320a790 <_end+0xffffffff93204778>
    142c:	20 00                	and    BYTE PTR [rax],al
    142e:	01 00                	add    DWORD PTR [rax],eax
    1430:	04 c7                	add    al,0xc7
    1432:	01 fc                	add    esp,edi
    1434:	01 01                	add    DWORD PTR [rcx],eax
    1436:	55                   	push   rbp
    1437:	00 00                	add    BYTE PTR [rax],al
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	00 04 ca             	add    BYTE PTR [rdx+rcx*8],al
    143e:	01 d0                	add    eax,edx
    1440:	01 01                	add    DWORD PTR [rcx],eax
    1442:	50                   	push   rax
    1443:	04 d2                	add    al,0xd2
    1445:	01 e1                	add    ecx,esp
    1447:	01 01                	add    DWORD PTR [rcx],eax
    1449:	50                   	push   rax
    144a:	00 00                	add    BYTE PTR [rax],al
    144c:	01 04 e1             	add    DWORD PTR [rcx+riz*8],eax
    144f:	01 f8                	add    eax,edi
    1451:	01 04 70             	add    DWORD PTR [rax+rsi*2],eax
    1454:	c0 00 9f             	rol    BYTE PTR [rax],0x9f
    1457:	00 00                	add    BYTE PTR [rax],al
    1459:	01 04 e1             	add    DWORD PTR [rcx+riz*8],eax
    145c:	01 f8                	add    eax,edi
    145e:	01 06                	add    DWORD PTR [rsi],eax
    1460:	a0 53 41 00 00 00 00 	movabs al,ds:0x2000000004153
    1467:	02 00 
    1469:	00 01                	add    BYTE PTR [rcx],al
    146b:	04 e1                	add    al,0xe1
    146d:	01 f8                	add    eax,edi
    146f:	01 02                	add    DWORD PTR [rdx],eax
    1471:	30 9f 04 f8 01 f8    	xor    BYTE PTR [rdi-0x7fe07fc],bl
    1477:	01 01                	add    DWORD PTR [rcx],eax
    1479:	51                   	push   rcx
    147a:	00 02                	add    BYTE PTR [rdx],al
    147c:	00 00                	add    BYTE PTR [rax],al
    147e:	00 04 87             	add    BYTE PTR [rdi+rax*4],al
    1481:	03 9a 03 01 55 04    	add    ebx,DWORD PTR [rdx+0x4550103]
    1487:	9a                   	(bad)
    1488:	03 9d 04 01 5c 00    	add    ebx,DWORD PTR [rbp+0x5c0104]
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	00 00                	add    BYTE PTR [rax],al
    1492:	04 bc                	add    al,0xbc
    1494:	03 c0                	add    eax,eax
    1496:	03 01                	add    eax,DWORD PTR [rcx]
    1498:	50                   	push   rax
    1499:	04 c0                	add    al,0xc0
    149b:	03 9d 04 01 5e 00    	add    ebx,DWORD PTR [rbp+0x5e0104]
    14a1:	01 00                	add    DWORD PTR [rax],eax
    14a3:	04 bc                	add    al,0xbc
    14a5:	03 c1                	add    eax,ecx
    14a7:	03 01                	add    eax,DWORD PTR [rcx]
    14a9:	5f                   	pop    rdi
    14aa:	00 01                	add    BYTE PTR [rcx],al
    14ac:	00 04 bc             	add    BYTE PTR [rsp+rdi*4],al
    14af:	03 c1                	add    eax,ecx
    14b1:	03 02                	add    eax,DWORD PTR [rdx]
    14b3:	30 9f 00 01 00 00    	xor    BYTE PTR [rdi+0x100],bl
    14b9:	00 04 bc             	add    BYTE PTR [rsp+rdi*4],al
    14bc:	03 c0                	add    eax,eax
    14be:	03 01                	add    eax,DWORD PTR [rcx]
    14c0:	50                   	push   rax
    14c1:	04 c0                	add    al,0xc0
    14c3:	03 c1                	add    eax,ecx
    14c5:	03 01                	add    eax,DWORD PTR [rcx]
    14c7:	5e                   	pop    rsi
    14c8:	00 02                	add    BYTE PTR [rdx],al
    14ca:	00 00                	add    BYTE PTR [rax],al
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	00 04 c1             	add    BYTE PTR [rcx+rax*8],al
    14d1:	03 d7                	add    edx,edi
    14d3:	03 11                	add    edx,DWORD PTR [rcx]
    14d5:	7d 00                	jge    14d7 <_Z11hashMapCtorPFj8string_tEj+0x47>
    14d7:	0c ff                	or     al,0xff
    14d9:	ff                   	(bad)
    14da:	ff                   	(bad)
    14db:	7f 1a                	jg     14f7 <_Z11hashMapCtorPFj8string_tEj+0x67>
    14dd:	0c ff                	or     al,0xff
    14df:	ff                   	(bad)
    14e0:	ff                   	(bad)
    14e1:	ff 1a                	call   FWORD PTR [rdx]
    14e3:	37                   	(bad)
    14e4:	24 9f                	and    al,0x9f
    14e6:	04 d7                	add    al,0xd7
    14e8:	03 db                	add    ebx,ebx
    14ea:	03 01                	add    eax,DWORD PTR [rcx]
    14ec:	51                   	push   rcx
    14ed:	04 db                	add    al,0xdb
    14ef:	03 dc                	add    ebx,esp
    14f1:	03 11                	add    edx,DWORD PTR [rcx]
    14f3:	7d 00                	jge    14f5 <_Z11hashMapCtorPFj8string_tEj+0x65>
    14f5:	0c ff                	or     al,0xff
    14f7:	ff                   	(bad)
    14f8:	ff                   	(bad)
    14f9:	7f 1a                	jg     1515 <_Z11hashMapCtorPFj8string_tEj+0x85>
    14fb:	0c ff                	or     al,0xff
    14fd:	ff                   	(bad)
    14fe:	ff                   	(bad)
    14ff:	ff 1a                	call   FWORD PTR [rdx]
    1501:	37                   	(bad)
    1502:	24 9f                	and    al,0x9f
    1504:	00 02                	add    BYTE PTR [rdx],al
    1506:	00 04 c1             	add    BYTE PTR [rcx+rax*8],al
    1509:	03 dc                	add    ebx,esp
    150b:	03 01                	add    eax,DWORD PTR [rcx]
    150d:	5e                   	pop    rsi
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	00 00                	add    BYTE PTR [rax],al
    1512:	00 00                	add    BYTE PTR [rax],al
    1514:	01 01                	add    DWORD PTR [rcx],eax
    1516:	00 04 f5 03 f9 03 01 	add    BYTE PTR [rsi*8+0x103f903],al
    151d:	51                   	push   rcx
    151e:	04 f9                	add    al,0xf9
    1520:	03 85 04 01 50 04    	add    eax,DWORD PTR [rbp+0x4500104]
    1526:	85 04 8f             	test   DWORD PTR [rdi+rcx*4],eax
    1529:	04 01                	add    al,0x1
    152b:	52                   	push   rdx
    152c:	04 8f                	add    al,0x8f
    152e:	04 93                	add    al,0x93
    1530:	04 01                	add    al,0x1
    1532:	50                   	push   rax
    1533:	00 00                	add    BYTE PTR [rax],al
    1535:	00 00                	add    BYTE PTR [rax],al
    1537:	00 00                	add    BYTE PTR [rax],al
    1539:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    153c:	42 02 75 00          	rex.X add sil,BYTE PTR [rbp+0x0]
    1540:	04 42                	add    al,0x42
    1542:	9e                   	sahf
    1543:	01 02                	add    DWORD PTR [rdx],eax
    1545:	73 00                	jae    1547 <_Z17hashMapAddElementP7HashMap8string_t+0x7>
    1547:	04 9e                	add    al,0x9e
    1549:	01 9f 01 02 70 00    	add    DWORD PTR [rdi+0x700201],ebx
    154f:	00 06                	add    BYTE PTR [rsi],al
    1551:	01 01                	add    DWORD PTR [rcx],eax
    1553:	01 01                	add    DWORD PTR [rcx],eax
    1555:	01 01                	add    DWORD PTR [rcx],eax
    1557:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
    155a:	7e 02                	jle    155e <_Z17hashMapAddElementP7HashMap8string_t+0x1e>
    155c:	31 9f 04 7e 8c 01    	xor    DWORD PTR [rdi+0x18c7e04],ebx
    1562:	02 32                	add    dh,BYTE PTR [rdx]
    1564:	9f                   	lahf
    1565:	04 8c                	add    al,0x8c
    1567:	01 9a 01 02 33 9f    	add    DWORD PTR [rdx-0x60ccfdff],ebx
    156d:	04 9a                	add    al,0x9a
    156f:	01 9f 01 02 34 9f    	add    DWORD PTR [rdi-0x60cbfdff],ebx
    1575:	00 01                	add    BYTE PTR [rcx],al
    1577:	00 04 5a             	add    BYTE PTR [rdx+rbx*2],al
    157a:	62 04 0a             	(bad)
    157d:	00 02                	add    BYTE PTR [rdx],al
    157f:	9f                   	lahf
    1580:	00 01                	add    BYTE PTR [rcx],al
    1582:	00 04 5a             	add    BYTE PTR [rdx+rbx*2],al
    1585:	62 02 30 9f 00       	(bad)
    158a:	01 00                	add    DWORD PTR [rax],eax
    158c:	00 00                	add    BYTE PTR [rax],al
    158e:	04 5a                	add    al,0x5a
    1590:	5c                   	pop    rsp
    1591:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    1594:	5c                   	pop    rsp
    1595:	62 01 51 00 00       	(bad)
    159a:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    159d:	25 06 fa d4 0a       	and    eax,0xad4fa06
    15a2:	00 00                	add    BYTE PTR [rax],al
    15a4:	9f                   	lahf
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 00                	add    BYTE PTR [rax],al
    15a9:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    15ac:	06                   	(bad)
    15ad:	da 06                	fiadd  DWORD PTR [rsi]
    15af:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    15b2:	da 06                	fiadd  DWORD PTR [rsi]
    15b4:	db 06                	fild   DWORD PTR [rsi]
    15b6:	04 a3                	add    al,0xa3
    15b8:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    15bb:	00 00                	add    BYTE PTR [rax],al
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 00                	add    BYTE PTR [rax],al
    15c1:	00 04 92             	add    BYTE PTR [rdx+rdx*4],al
    15c4:	06                   	(bad)
    15c5:	cd 06                	int    0x6
    15c7:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    15ca:	d2 06                	rol    BYTE PTR [rsi],cl
    15cc:	d4                   	(bad)
    15cd:	06                   	(bad)
    15ce:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    15d1:	d4                   	(bad)
    15d2:	06                   	(bad)
    15d3:	d6                   	(bad)
    15d4:	06                   	(bad)
    15d5:	02 74 00 00          	add    dh,BYTE PTR [rax+rax*1+0x0]
    15d9:	00 01                	add    BYTE PTR [rcx],al
    15db:	04 af                	add    al,0xaf
    15dd:	06                   	(bad)
    15de:	c6 06 04             	mov    BYTE PTR [rsi],0x4
    15e1:	71 c0                	jno    15a3 <_Z17hashMapAddElementP7HashMap8string_t+0x63>
    15e3:	00 9f 00 00 01 04    	add    BYTE PTR [rdi+0x4010000],bl
    15e9:	af                   	scas   eax,DWORD PTR es:[rdi]
    15ea:	06                   	(bad)
    15eb:	c6 06 03             	mov    BYTE PTR [rsi],0x3
    15ee:	91                   	xchg   ecx,eax
    15ef:	00 9f 00 02 00 00    	add    BYTE PTR [rdi+0x200],bl
    15f5:	01 04 af             	add    DWORD PTR [rdi+rbp*4],eax
    15f8:	06                   	(bad)
    15f9:	c6 06 02             	mov    BYTE PTR [rsi],0x2
    15fc:	30 9f 04 c6 06 c6    	xor    BYTE PTR [rdi-0x39f939fc],bl
    1602:	06                   	(bad)
    1603:	01 52 00             	add    DWORD PTR [rdx+0x0],edx
    1606:	8c 01                	mov    WORD PTR [rcx],es
    1608:	00 00                	add    BYTE PTR [rax],al
    160a:	05 00 08 00 00       	add    eax,0x800
	...
    161b:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    161e:	02 aa 02 01 55 04    	add    ch,BYTE PTR [rdx+0x4550102]
    1624:	aa                   	stos   BYTE PTR es:[rdi],al
    1625:	02 d0                	add    dl,al
    1627:	02 01                	add    al,BYTE PTR [rcx]
    1629:	56                   	push   rsi
    162a:	04 d0                	add    al,0xd0
    162c:	02 d3                	add    dl,bl
    162e:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1631:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1634:	04 d3                	add    al,0xd3
    1636:	02 ed                	add    ch,ch
    1638:	02 01                	add    al,BYTE PTR [rcx]
    163a:	55                   	push   rbp
    163b:	04 ed                	add    al,0xed
    163d:	02 f2                	add    dh,dl
    163f:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1642:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1652:	02 aa 02 01 54 04    	add    ch,BYTE PTR [rdx+0x4540102]
    1658:	aa                   	stos   BYTE PTR es:[rdi],al
    1659:	02 d2                	add    dl,dl
    165b:	02 01                	add    al,BYTE PTR [rcx]
    165d:	5c                   	pop    rsp
    165e:	04 d2                	add    al,0xd2
    1660:	02 d3                	add    dl,bl
    1662:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1665:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1669:	d3 02                	rol    DWORD PTR [rdx],cl
    166b:	e6 02                	out    0x2,al
    166d:	01 54 04 e6          	add    DWORD PTR [rsp+rax*1-0x1a],edx
    1671:	02 f2                	add    dh,dl
    1673:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1676:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
    167a:	00 00                	add    BYTE PTR [rax],al
    167c:	00 00                	add    BYTE PTR [rax],al
    167e:	04 a3                	add    al,0xa3
    1680:	02 bc 02 01 55 04 c1 	add    bh,BYTE PTR [rdx+rax*1-0x3efbaaff]
    1687:	02 d3                	add    dl,bl
    1689:	02 01                	add    al,BYTE PTR [rcx]
    168b:	55                   	push   rbp
    168c:	00 00                	add    BYTE PTR [rax],al
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    1693:	02 aa 02 02 30 9f    	add    ch,BYTE PTR [rdx-0x60cffdfe]
    1699:	04 aa                	add    al,0xaa
    169b:	02 cc                	add    cl,ah
    169d:	02 01                	add    al,BYTE PTR [rcx]
    169f:	53                   	push   rbx
    16a0:	00 01                	add    BYTE PTR [rcx],al
    16a2:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    16a5:	02 bd 02 02 3a 9f    	add    bh,BYTE PTR [rbp-0x60c5fdfe]
    16ab:	00 01                	add    BYTE PTR [rcx],al
    16ad:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    16b0:	02 bc 02 01 55 00 00 	add    bh,BYTE PTR [rdx+rax*1+0x5501]
	...
    16c3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    16c6:	64 01 55 04          	add    DWORD PTR fs:[rbp+0x4],edx
    16ca:	64 97                	fs xchg edi,eax
    16cc:	01 01                	add    DWORD PTR [rcx],eax
    16ce:	53                   	push   rbx
    16cf:	04 97                	add    al,0x97
    16d1:	01 d6                	add    esi,edx
    16d3:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    16d6:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    16d9:	04 d6                	add    al,0xd6
    16db:	01 e2                	add    edx,esp
    16dd:	01 01                	add    DWORD PTR [rcx],eax
    16df:	53                   	push   rbx
    16e0:	04 e2                	add    al,0xe2
    16e2:	01 e4                	add    esp,esp
    16e4:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    16e7:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    16ea:	04 e4                	add    al,0xe4
    16ec:	01 fe                	add    esi,edi
    16ee:	01 01                	add    DWORD PTR [rcx],eax
    16f0:	55                   	push   rbp
    16f1:	04 fe                	add    al,0xfe
    16f3:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    16f9:	55                   	push   rbp
    16fa:	9f                   	lahf
	...
    1703:	00 00                	add    BYTE PTR [rax],al
    1705:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1708:	3a 01                	cmp    al,BYTE PTR [rcx]
    170a:	54                   	push   rsp
    170b:	04 3a                	add    al,0x3a
    170d:	82                   	(bad)
    170e:	01 01                	add    DWORD PTR [rcx],eax
    1710:	5c                   	pop    rsp
    1711:	04 82                	add    al,0x82
    1713:	01 e4                	add    esp,esp
    1715:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1718:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    171c:	e4 01                	in     al,0x1
    171e:	f7 01 01 54 04 f7    	test   DWORD PTR [rcx],0xf7045401
    1724:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    172a:	54                   	push   rsp
    172b:	9f                   	lahf
    172c:	00 00                	add    BYTE PTR [rax],al
    172e:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
    1731:	b2 01                	mov    dl,0x1
    1733:	01 5d 00             	add    DWORD PTR [rbp+0x0],ebx
    1736:	00 00                	add    BYTE PTR [rax],al
    1738:	00 00                	add    BYTE PTR [rax],al
    173a:	04 82                	add    al,0x82
    173c:	01 93 01 01 50 04    	add    DWORD PTR [rbx+0x4500101],edx
    1742:	93                   	xchg   ebx,eax
    1743:	01 b2 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],esi
    1749:	00 00                	add    BYTE PTR [rax],al
    174b:	00 00                	add    BYTE PTR [rax],al
    174d:	04 97                	add    al,0x97
    174f:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    1755:	a9 01 b2 01 01       	test   eax,0x101b201
    175a:	53                   	push   rbx
    175b:	00 01                	add    BYTE PTR [rcx],al
    175d:	00 04 7a             	add    BYTE PTR [rdx+rdi*2],al
    1760:	82                   	(bad)
    1761:	01 02                	add    DWORD PTR [rdx],eax
    1763:	30 9f 00 01 00 04    	xor    BYTE PTR [rdi+0x4000100],bl
    1769:	7a 82                	jp     16ed <_Z17hashMapPopElementP7HashMap8string_t+0xdd>
    176b:	01 01                	add    DWORD PTR [rcx],eax
    176d:	53                   	push   rbx
    176e:	00 01                	add    BYTE PTR [rcx],al
    1770:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    1773:	01 aa 01 01 5d 00    	add    DWORD PTR [rdx+0x5d0101],ebp
    1779:	01 00                	add    DWORD PTR [rax],eax
    177b:	00 00                	add    BYTE PTR [rax],al
    177d:	04 9c                	add    al,0x9c
    177f:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    1785:	a9 01 aa 01 01       	test   eax,0x101aa01
    178a:	53                   	push   rbx
    178b:	00 01                	add    BYTE PTR [rcx],al
    178d:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    1790:	01 aa 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],ebp
    1796:	69 14 00 00 05 00 08 	imul   edx,DWORD PTR [rax+rax*1],0x8000500
	...
    17ad:	00 00                	add    BYTE PTR [rax],al
    17af:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    17b2:	08 c2                	or     dl,al
    17b4:	09 01                	or     DWORD PTR [rcx],eax
    17b6:	55                   	push   rbp
    17b7:	04 c2                	add    al,0xc2
    17b9:	09 f0                	or     eax,esi
    17bb:	10 03                	adc    BYTE PTR [rbx],al
    17bd:	76 98                	jbe    1757 <_Z20hashMapSearchElementP7HashMap8string_t+0x67>
    17bf:	7f 04                	jg     17c5 <_Z13getLoadFactorP7HashMap+0x5>
    17c1:	f0 10 f4             	lock adc ah,dh
    17c4:	10 03                	adc    BYTE PTR [rbx],al
    17c6:	77 90                	ja     1758 <_Z20hashMapSearchElementP7HashMap8string_t+0x68>
    17c8:	7f 04                	jg     17ce <_Z13getLoadFactorP7HashMap+0xe>
    17ca:	f4                   	hlt
    17cb:	10 fb                	adc    bl,bh
    17cd:	10 08                	adc    BYTE PTR [rax],cl
    17cf:	91                   	xchg   ecx,eax
    17d0:	70 09                	jo     17db <_Z13getLoadFactorP7HashMap+0x1b>
    17d2:	e0 1a                	loopne 17ee <_Z13getLoadFactorP7HashMap+0x2e>
    17d4:	08 78 1c             	or     BYTE PTR [rax+0x1c],bh
    17d7:	04 fb                	add    al,0xfb
    17d9:	10 eb                	adc    bl,ch
    17db:	11 03                	adc    DWORD PTR [rbx],eax
    17dd:	76 98                	jbe    1777 <_Z20hashMapSearchElementP7HashMap8string_t+0x87>
    17df:	7f 04                	jg     17e5 <_Z13getLoadFactorP7HashMap+0x25>
    17e1:	eb 11                	jmp    17f4 <_Z11hashMapDtorP7HashMap+0x4>
    17e3:	85 12                	test   DWORD PTR [rdx],edx
    17e5:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    17e8:	85 12                	test   DWORD PTR [rdx],edx
    17ea:	a9 12 03 76 98       	test   eax,0x98760312
    17ef:	7f 00                	jg     17f1 <_Z11hashMapDtorP7HashMap+0x1>
	...
    17f9:	00 00                	add    BYTE PTR [rax],al
    17fb:	04 f0                	add    al,0xf0
    17fd:	08 d7                	or     bh,dl
    17ff:	09 01                	or     DWORD PTR [rcx],eax
    1801:	54                   	push   rsp
    1802:	04 d7                	add    al,0xd7
    1804:	09 e7                	or     edi,esp
    1806:	0a 03                	or     al,BYTE PTR [rbx]
    1808:	76 a8                	jbe    17b2 <_Z20hashMapSearchElementP7HashMap8string_t+0xc2>
    180a:	7f 04                	jg     1810 <_Z11hashMapDtorP7HashMap+0x20>
    180c:	e7 0a                	out    0xa,eax
    180e:	eb 11                	jmp    1821 <_Z11hashMapDtorP7HashMap+0x31>
    1810:	04 a3                	add    al,0xa3
    1812:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1816:	eb 11                	jmp    1829 <_Z11hashMapDtorP7HashMap+0x39>
    1818:	fe                   	(bad)
    1819:	11 01                	adc    DWORD PTR [rcx],eax
    181b:	54                   	push   rsp
    181c:	04 fe                	add    al,0xfe
    181e:	11 a9 12 04 a3 01    	adc    DWORD PTR [rcx+0x1a30412],ebp
    1824:	54                   	push   rsp
    1825:	9f                   	lahf
    1826:	00 00                	add    BYTE PTR [rax],al
    1828:	00 00                	add    BYTE PTR [rax],al
    182a:	00 00                	add    BYTE PTR [rax],al
    182c:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    182f:	08 90 09 06 51 93    	or     BYTE PTR [rax-0x6caef9f7],dl
    1835:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1838:	08 04 c9             	or     BYTE PTR [rcx+rcx*8],al
    183b:	09 ed                	or     ebp,ebp
    183d:	09 06                	or     DWORD PTR [rsi],eax
    183f:	5d                   	pop    rbp
    1840:	93                   	xchg   ebx,eax
    1841:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    1844:	08 04 a9             	or     BYTE PTR [rcx+rbp*4],al
    1847:	0a d0                	or     dl,al
    1849:	0a 06                	or     al,BYTE PTR [rsi]
    184b:	5d                   	pop    rbp
    184c:	93                   	xchg   ebx,eax
    184d:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    1850:	08 00                	or     BYTE PTR [rax],al
	...
    185e:	00 00                	add    BYTE PTR [rax],al
    1860:	04 f0                	add    al,0xf0
    1862:	08 d7                	or     bh,dl
    1864:	09 01                	or     DWORD PTR [rcx],eax
    1866:	58                   	pop    rax
    1867:	04 d7                	add    al,0xd7
    1869:	09 f0                	or     eax,esi
    186b:	10 03                	adc    BYTE PTR [rbx],al
    186d:	76 dc                	jbe    184b <_Z11hashMapDtorP7HashMap+0x5b>
    186f:	7e 04                	jle    1875 <_Z6resizeP7HashMapj+0x15>
    1871:	f0 10 f4             	lock adc ah,dh
    1874:	10 03                	adc    BYTE PTR [rbx],al
    1876:	77 d4                	ja     184c <_Z11hashMapDtorP7HashMap+0x5c>
    1878:	7e 04                	jle    187e <_Z6resizeP7HashMapj+0x1e>
    187a:	f4                   	hlt
    187b:	10 fb                	adc    bl,bh
    187d:	10 08                	adc    BYTE PTR [rax],cl
    187f:	91                   	xchg   ecx,eax
    1880:	70 09                	jo     188b <_Z6resizeP7HashMapj+0x2b>
    1882:	e0 1a                	loopne 189e <_Z6resizeP7HashMapj+0x3e>
    1884:	08 b4 1c 04 fb 10 eb 	or     BYTE PTR [rsp+rbx*1-0x14ef04fc],dh
    188b:	11 03                	adc    DWORD PTR [rbx],eax
    188d:	76 dc                	jbe    186b <_Z6resizeP7HashMapj+0xb>
    188f:	7e 04                	jle    1895 <_Z6resizeP7HashMapj+0x35>
    1891:	eb 11                	jmp    18a4 <_Z6resizeP7HashMapj+0x44>
    1893:	89 12                	mov    DWORD PTR [rdx],edx
    1895:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    1898:	89 12                	mov    DWORD PTR [rdx],edx
    189a:	a9 12 03 76 dc       	test   eax,0xdc760312
    189f:	7e 00                	jle    18a1 <_Z6resizeP7HashMapj+0x41>
	...
    18a9:	00 00                	add    BYTE PTR [rax],al
    18ab:	04 f0                	add    al,0xf0
    18ad:	08 d7                	or     bh,dl
    18af:	09 01                	or     DWORD PTR [rcx],eax
    18b1:	59                   	pop    rcx
    18b2:	04 d7                	add    al,0xd7
    18b4:	09 f0                	or     eax,esi
    18b6:	09 01                	or     DWORD PTR [rcx],eax
    18b8:	5f                   	pop    rdi
    18b9:	04 f0                	add    al,0xf0
    18bb:	09 eb                	or     ebx,ebp
    18bd:	11 04 a3             	adc    DWORD PTR [rbx+riz*4],eax
    18c0:	01 59 9f             	add    DWORD PTR [rcx-0x61],ebx
    18c3:	04 eb                	add    al,0xeb
    18c5:	11 89 12 01 59 04    	adc    DWORD PTR [rcx+0x4590112],ecx
    18cb:	89 12                	mov    DWORD PTR [rdx],edx
    18cd:	a9 12 04 a3 01       	test   eax,0x1a30412
    18d2:	59                   	pop    rcx
    18d3:	9f                   	lahf
	...
    18e0:	00 00                	add    BYTE PTR [rax],al
    18e2:	00 04 c7             	add    BYTE PTR [rdi+rax*8],al
    18e5:	0a cd                	or     cl,ch
    18e7:	0a 01                	or     al,BYTE PTR [rcx]
    18e9:	50                   	push   rax
    18ea:	04 cd                	add    al,0xcd
    18ec:	0a e7                	or     ah,bh
    18ee:	0a 01                	or     al,BYTE PTR [rcx]
    18f0:	5f                   	pop    rdi
    18f1:	04 e7                	add    al,0xe7
    18f3:	0a f0                	or     dh,al
    18f5:	10 03                	adc    BYTE PTR [rbx],al
    18f7:	76 e8                	jbe    18e1 <_Z6resizeP7HashMapj+0x81>
    18f9:	7e 04                	jle    18ff <_Z6resizeP7HashMapj+0x9f>
    18fb:	f0 10 f4             	lock adc ah,dh
    18fe:	10 03                	adc    BYTE PTR [rbx],al
    1900:	77 e0                	ja     18e2 <_Z6resizeP7HashMapj+0x82>
    1902:	7e 04                	jle    1908 <_Z6resizeP7HashMapj+0xa8>
    1904:	f4                   	hlt
    1905:	10 fb                	adc    bl,bh
    1907:	10 08                	adc    BYTE PTR [rax],cl
    1909:	91                   	xchg   ecx,eax
    190a:	70 09                	jo     1915 <_Z6resizeP7HashMapj+0xb5>
    190c:	e0 1a                	loopne 1928 <_Z6resizeP7HashMapj+0xc8>
    190e:	08 a8 1c 04 fb 10    	or     BYTE PTR [rax+0x10fb041c],ch
    1914:	eb 11                	jmp    1927 <_Z6resizeP7HashMapj+0xc7>
    1916:	03 76 e8             	add    esi,DWORD PTR [rsi-0x18]
    1919:	7e 04                	jle    191f <_Z6resizeP7HashMapj+0xbf>
    191b:	8a 12                	mov    dl,BYTE PTR [rdx]
    191d:	a9 12 03 76 e8       	test   eax,0xe8760312
    1922:	7e 00                	jle    1924 <_Z6resizeP7HashMapj+0xc4>
	...
    1930:	04 e7                	add    al,0xe7
    1932:	0a e7                	or     ah,bh
    1934:	0a 01                	or     al,BYTE PTR [rcx]
    1936:	50                   	push   rax
    1937:	04 e7                	add    al,0xe7
    1939:	0a f0                	or     dh,al
    193b:	10 03                	adc    BYTE PTR [rbx],al
    193d:	76 a8                	jbe    18e7 <_Z6resizeP7HashMapj+0x87>
    193f:	7f 04                	jg     1945 <_Z6resizeP7HashMapj+0xe5>
    1941:	f0 10 f4             	lock adc ah,dh
    1944:	10 03                	adc    BYTE PTR [rbx],al
    1946:	77 a0                	ja     18e8 <_Z6resizeP7HashMapj+0x88>
    1948:	7f 04                	jg     194e <_Z6resizeP7HashMapj+0xee>
    194a:	f4                   	hlt
    194b:	10 fb                	adc    bl,bh
    194d:	10 08                	adc    BYTE PTR [rax],cl
    194f:	91                   	xchg   ecx,eax
    1950:	70 09                	jo     195b <_Z6resizeP7HashMapj+0xfb>
    1952:	e0 1a                	loopne 196e <_Z6resizeP7HashMapj+0x10e>
    1954:	08 68 1c             	or     BYTE PTR [rax+0x1c],ch
    1957:	04 fb                	add    al,0xfb
    1959:	10 eb                	adc    bl,ch
    195b:	11 03                	adc    DWORD PTR [rbx],eax
    195d:	76 a8                	jbe    1907 <_Z6resizeP7HashMapj+0xa7>
    195f:	7f 04                	jg     1965 <_Z6resizeP7HashMapj+0x105>
    1961:	8a 12                	mov    dl,BYTE PTR [rdx]
    1963:	a9 12 03 76 a8       	test   eax,0xa8760312
    1968:	7f 00                	jg     196a <_Z6resizeP7HashMapj+0x10a>
    196a:	01 00                	add    DWORD PTR [rax],eax
    196c:	00 00                	add    BYTE PTR [rax],al
    196e:	04 e7                	add    al,0xe7
    1970:	0a eb                	or     ch,bl
    1972:	11 06                	adc    DWORD PTR [rsi],eax
    1974:	0c 73                	or     al,0x73
    1976:	99                   	cdq
    1977:	0f 00 9f 04 8a 12 a9 	ltr    WORD PTR [rdi-0x56ed75fc]
    197e:	12 06                	adc    al,BYTE PTR [rsi]
    1980:	0c 73                	or     al,0x73
    1982:	99                   	cdq
    1983:	0f 00 9f 00 01 00 00 	ltr    WORD PTR [rdi+0x100]
    198a:	00 00                	add    BYTE PTR [rax],al
    198c:	00 00                	add    BYTE PTR [rax],al
    198e:	00 00                	add    BYTE PTR [rax],al
    1990:	00 01                	add    BYTE PTR [rcx],al
	...
    199a:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    199d:	0c f4                	or     al,0xf4
    199f:	0c 0a                	or     al,0xa
    19a1:	9e                   	sahf
    19a2:	08 00                	or     BYTE PTR [rax],al
    19a4:	00 00                	add    BYTE PTR [rax],al
    19a6:	00 00                	add    BYTE PTR [rax],al
    19a8:	00 00                	add    BYTE PTR [rax],al
    19aa:	00 04 8c             	add    BYTE PTR [rsp+rcx*4],al
    19ad:	0d a7 0d 01 63       	or     eax,0x63010da7
    19b2:	04 a7                	add    al,0xa7
    19b4:	0d b9 0d 03 76       	or     eax,0x76030db9
    19b9:	a0 7f 04 b9 0d ca 0f 	movabs al,ds:0x63010fca0db9047f
    19c0:	01 63 
    19c2:	04 fb                	add    al,0xfb
    19c4:	10 83 11 01 63 04    	adc    BYTE PTR [rbx+0x4630111],al
    19ca:	8b 11                	mov    edx,DWORD PTR [rcx]
    19cc:	b2 11                	mov    dl,0x11
    19ce:	0a 9e 08 00 00 00    	or     bl,BYTE PTR [rsi+0x8]
    19d4:	00 00                	add    BYTE PTR [rax],al
    19d6:	00 00                	add    BYTE PTR [rax],al
    19d8:	00 04 b2             	add    BYTE PTR [rdx+rsi*4],al
    19db:	11 ea                	adc    edx,ebp
    19dd:	11 01                	adc    DWORD PTR [rcx],eax
    19df:	63 04 ea             	movsxd eax,DWORD PTR [rdx+rbp*8]
    19e2:	11 eb                	adc    ebx,ebp
    19e4:	11 0e                	adc    DWORD PTR [rsi],ecx
    19e6:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    19e7:	2e 08 00             	cs or  BYTE PTR [rax],al
    19ea:	00 00                	add    BYTE PTR [rax],al
    19ec:	00 00                	add    BYTE PTR [rax],al
    19ee:	00 00                	add    BYTE PTR [rax],al
    19f0:	00 12                	add    BYTE PTR [rdx],dl
    19f2:	1b 9f 04 8f 12 9b    	sbb    ebx,DWORD PTR [rdi-0x64ed70fc]
    19f8:	12 01                	adc    al,BYTE PTR [rcx]
    19fa:	63 04 9b             	movsxd eax,DWORD PTR [rbx+rbx*4]
    19fd:	12 a9 12 03 76 f0    	adc    ch,BYTE PTR [rcx-0xf89fcee]
    1a03:	7e 00                	jle    1a05 <_Z6resizeP7HashMapj+0x1a5>
    1a05:	01 00                	add    DWORD PTR [rax],eax
    1a07:	00 00                	add    BYTE PTR [rax],al
    1a09:	04 da                	add    al,0xda
    1a0b:	0f e7 10             	movntq QWORD PTR [rax],mm2
    1a0e:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    1a11:	8a 12                	mov    dl,BYTE PTR [rdx]
    1a13:	8f                   	(bad)
    1a14:	12 01                	adc    al,BYTE PTR [rcx]
    1a16:	53                   	push   rbx
    1a17:	00 00                	add    BYTE PTR [rax],al
    1a19:	00 04 e7             	add    BYTE PTR [rdi+riz*8],al
    1a1c:	09 f7                	or     edi,esi
    1a1e:	09 02                	or     DWORD PTR [rdx],eax
    1a20:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1a26:	e7 0a                	out    0xa,eax
    1a28:	e7 0a                	out    0xa,eax
    1a2a:	02 30                	add    dh,BYTE PTR [rax]
    1a2c:	9f                   	lahf
    1a2d:	00 00                	add    BYTE PTR [rax],al
    1a2f:	00 00                	add    BYTE PTR [rax],al
    1a31:	00 00                	add    BYTE PTR [rax],al
    1a33:	00 04 87             	add    BYTE PTR [rdi+rax*4],al
    1a36:	0b ac 0b 02 30 9f 04 	or     ebp,DWORD PTR [rbx+rcx*1+0x49f3002]
    1a3d:	83 11 c1             	adc    DWORD PTR [rcx],0xffffffc1
    1a40:	11 02                	adc    DWORD PTR [rdx],eax
    1a42:	30 9f 04 cc 11 eb    	xor    BYTE PTR [rdi-0x14ee33fc],bl
    1a48:	11 02                	adc    DWORD PTR [rdx],eax
    1a4a:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1a50:	8e 0c 94             	mov    cs,WORD PTR [rsp+rdx*4]
    1a53:	0c 02                	or     al,0x2
    1a55:	52                   	push   rdx
    1a56:	f0 00 0c 00          	lock add BYTE PTR [rax+rax*1],cl
    1a5a:	04 ff                	add    al,0xff
    1a5c:	0b 91 0c 0e 70 00    	or     edx,DWORD PTR [rcx+0x700e0c]
    1a62:	76 f0                	jbe    1a54 <_Z6resizeP7HashMapj+0x1f4>
    1a64:	7e 06                	jle    1a6c <_Z6resizeP7HashMapj+0x20c>
    1a66:	1c 0a                	sbb    al,0xa
    1a68:	e8 03 1b 9f 93       	call   ffffffff939f3570 <_end+0xffffffff939ed558>
    1a6d:	08 00                	or     BYTE PTR [rax],al
    1a6f:	01 00                	add    DWORD PTR [rax],eax
    1a71:	04 bf                	add    al,0xbf
    1a73:	0b bf 0b 02 30 9f    	or     edi,DWORD PTR [rdi-0x60cffdf5]
    1a79:	00 01                	add    BYTE PTR [rcx],al
    1a7b:	08 04 ff             	or     BYTE PTR [rdi+rdi*8],al
    1a7e:	0b ff                	or     edi,edi
    1a80:	0b 06                	or     eax,DWORD PTR [rsi]
    1a82:	a0 ae 9c 00 00 00 00 	movabs al,ds:0x801000000009cae
    1a89:	01 08 
    1a8b:	04 ff                	add    al,0xff
    1a8d:	0b ff                	or     edi,edi
    1a8f:	0b 06                	or     eax,DWORD PTR [rsi]
    1a91:	a0 c1 9c 00 00 00 00 	movabs al,ds:0x302000000009cc1
    1a98:	02 03 
    1a9a:	04 ff                	add    al,0xff
    1a9c:	0b ff                	or     edi,edi
    1a9e:	0b 06                	or     eax,DWORD PTR [rsi]
    1aa0:	a0 ae 9c 00 00 00 00 	movabs al,ds:0x503000000009cae
    1aa7:	03 05 
    1aa9:	04 ff                	add    al,0xff
    1aab:	0b ff                	or     edi,edi
    1aad:	0b 06                	or     eax,DWORD PTR [rsi]
    1aaf:	a0 c1 9c 00 00 00 00 	movabs al,ds:0x9cc1
    1ab6:	00 00 
    1ab8:	00 00                	add    BYTE PTR [rax],al
    1aba:	00 01                	add    BYTE PTR [rcx],al
    1abc:	00 00                	add    BYTE PTR [rax],al
    1abe:	00 00                	add    BYTE PTR [rax],al
    1ac0:	04 f0                	add    al,0xf0
    1ac2:	0c f4                	or     al,0xf4
    1ac4:	0c 02                	or     al,0x2
    1ac6:	30 9f 04 8c 0d a7    	xor    BYTE PTR [rdi-0x58f273fc],bl
    1acc:	0d 01 52 04 a7       	or     eax,0xa7045201
    1ad1:	0d b9 0d 03 7c       	or     eax,0x7c030db9
    1ad6:	7f 9f                	jg     1a77 <_Z6resizeP7HashMapj+0x217>
    1ad8:	04 a5                	add    al,0xa5
    1ada:	11 c1                	adc    ecx,eax
    1adc:	11 02                	adc    DWORD PTR [rdx],eax
    1ade:	30 9f 04 cc 11 eb    	xor    BYTE PTR [rdi-0x14ee33fc],bl
    1ae4:	11 02                	adc    DWORD PTR [rdx],eax
    1ae6:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1aec:	92                   	xchg   edx,eax
    1aed:	0d a8 0d 0a 03       	or     eax,0x30a0da8
    1af2:	52                   	push   rdx
    1af3:	41 00 00             	add    BYTE PTR [r8],al
    1af6:	00 00                	add    BYTE PTR [rax],al
    1af8:	00 00                	add    BYTE PTR [rax],al
    1afa:	9f                   	lahf
    1afb:	00 00                	add    BYTE PTR [rax],al
    1afd:	00 00                	add    BYTE PTR [rax],al
    1aff:	00 04 92             	add    BYTE PTR [rdx+rdx*4],al
    1b02:	0d a7 0d 01 55       	or     eax,0x55010da7
    1b07:	04 a7                	add    al,0xa7
    1b09:	0d a8 0d 03 76       	or     eax,0x76030da8
    1b0e:	98                   	cwde
    1b0f:	7f 00                	jg     1b11 <_Z25_mm_crc32UnrollHashString8string_t+0x41>
    1b11:	02 00                	add    al,BYTE PTR [rax]
    1b13:	02 00                	add    al,BYTE PTR [rax]
    1b15:	04 d6                	add    al,0xd6
    1b17:	0c f0                	or     al,0xf0
    1b19:	0c 0a                	or     al,0xa
    1b1b:	03 33                	add    esi,DWORD PTR [rbx]
    1b1d:	41 00 00             	add    BYTE PTR [r8],al
    1b20:	00 00                	add    BYTE PTR [rax],al
    1b22:	00 00                	add    BYTE PTR [rax],al
    1b24:	9f                   	lahf
    1b25:	04 8b                	add    al,0x8b
    1b27:	11 a5 11 0a 03 33    	adc    DWORD PTR [rbp+0x33030a11],esp
    1b2d:	41 00 00             	add    BYTE PTR [r8],al
    1b30:	00 00                	add    BYTE PTR [rax],al
    1b32:	00 00                	add    BYTE PTR [rax],al
    1b34:	9f                   	lahf
    1b35:	00 02                	add    BYTE PTR [rdx],al
    1b37:	00 02                	add    BYTE PTR [rdx],al
    1b39:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    1b3c:	0c f0                	or     al,0xf0
    1b3e:	0c 03                	or     al,0x3
    1b40:	76 98                	jbe    1ada <_Z25_mm_crc32UnrollHashString8string_t+0xa>
    1b42:	7f 04                	jg     1b48 <_Z13sumHashString8string_t+0x8>
    1b44:	8b 11                	mov    edx,DWORD PTR [rcx]
    1b46:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1b47:	11 03                	adc    DWORD PTR [rbx],eax
    1b49:	76 98                	jbe    1ae3 <_Z25_mm_crc32UnrollHashString8string_t+0x13>
    1b4b:	7f 00                	jg     1b4d <_Z13sumHashString8string_t+0xd>
    1b4d:	01 00                	add    DWORD PTR [rax],eax
    1b4f:	00 00                	add    BYTE PTR [rax],al
    1b51:	01 00                	add    DWORD PTR [rax],eax
    1b53:	00 00                	add    BYTE PTR [rax],al
    1b55:	00 00                	add    BYTE PTR [rax],al
    1b57:	00 00                	add    BYTE PTR [rax],al
    1b59:	04 d6                	add    al,0xd6
    1b5b:	0d ca 0f 01 63       	or     eax,0x63010fca
    1b60:	04 fb                	add    al,0xfb
    1b62:	10 83 11 01 63 04    	adc    BYTE PTR [rbx+0x4630111],al
    1b68:	b2 11                	mov    dl,0x11
    1b6a:	ea                   	(bad)
    1b6b:	11 01                	adc    DWORD PTR [rcx],eax
    1b6d:	63 04 ea             	movsxd eax,DWORD PTR [rdx+rbp*8]
    1b70:	11 eb                	adc    ebx,ebp
    1b72:	11 0e                	adc    DWORD PTR [rsi],ecx
    1b74:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1b75:	2e 08 00             	cs or  BYTE PTR [rax],al
    1b78:	00 00                	add    BYTE PTR [rax],al
    1b7a:	00 00                	add    BYTE PTR [rax],al
    1b7c:	00 00                	add    BYTE PTR [rax],al
    1b7e:	00 12                	add    BYTE PTR [rdx],dl
    1b80:	1b 9f 04 8f 12 9b    	sbb    ebx,DWORD PTR [rdi-0x64ed70fc]
    1b86:	12 01                	adc    al,BYTE PTR [rcx]
    1b88:	63 04 9b             	movsxd eax,DWORD PTR [rbx+rbx*4]
    1b8b:	12 a9 12 03 76 f0    	adc    ch,BYTE PTR [rcx-0xf89fcee]
    1b91:	7e 00                	jle    1b93 <_Z17adler32HashString8string_t+0x43>
    1b93:	01 00                	add    DWORD PTR [rax],eax
    1b95:	00 00                	add    BYTE PTR [rax],al
    1b97:	00 00                	add    BYTE PTR [rax],al
    1b99:	01 00                	add    DWORD PTR [rax],eax
    1b9b:	00 00                	add    BYTE PTR [rax],al
    1b9d:	00 00                	add    BYTE PTR [rax],al
    1b9f:	00 00                	add    BYTE PTR [rax],al
    1ba1:	04 d6                	add    al,0xd6
    1ba3:	0d f8 0d 01 54       	or     eax,0x54010df8
    1ba8:	04 f8                	add    al,0xf8
    1baa:	0d c6 0f 03 76       	or     eax,0x76030fc6
    1baf:	dc 7e 04             	fdivr  QWORD PTR [rsi+0x4]
    1bb2:	fb                   	sti
    1bb3:	10 83 11 03 76 dc    	adc    BYTE PTR [rbx-0x2389fcef],al
    1bb9:	7e 04                	jle    1bbf <_Z17adler32HashString8string_t+0x6f>
    1bbb:	b2 11                	mov    dl,0x11
    1bbd:	c1 11 02             	rcl    DWORD PTR [rcx],0x2
    1bc0:	30 9f 04 c1 11 cc    	xor    BYTE PTR [rdi-0x33ee3efc],bl
    1bc6:	11 01                	adc    DWORD PTR [rcx],eax
    1bc8:	54                   	push   rsp
    1bc9:	04 cc                	add    al,0xcc
    1bcb:	11 eb                	adc    ebx,ebp
    1bcd:	11 02                	adc    DWORD PTR [rdx],eax
    1bcf:	30 9f 04 8f 12 a9    	xor    BYTE PTR [rdi-0x56ed70fc],bl
    1bd5:	12 03                	adc    al,BYTE PTR [rbx]
    1bd7:	76 dc                	jbe    1bb5 <_Z17adler32HashString8string_t+0x65>
    1bd9:	7e 00                	jle    1bdb <_Z17adler32HashString8string_t+0x8b>
    1bdb:	01 00                	add    DWORD PTR [rax],eax
    1bdd:	00 00                	add    BYTE PTR [rax],al
    1bdf:	01 00                	add    DWORD PTR [rax],eax
    1be1:	00 00                	add    BYTE PTR [rax],al
    1be3:	04 d6                	add    al,0xd6
    1be5:	0d c6 0f 03 76       	or     eax,0x76030fc6
    1bea:	a8 7f                	test   al,0x7f
    1bec:	04 fb                	add    al,0xfb
    1bee:	10 83 11 01 52 04    	adc    BYTE PTR [rbx+0x4520111],al
    1bf4:	b2 11                	mov    dl,0x11
    1bf6:	eb 11                	jmp    1c09 <_Z17adler32HashString8string_t+0xb9>
    1bf8:	03 76 a8             	add    esi,DWORD PTR [rsi-0x58]
    1bfb:	7f 04                	jg     1c01 <_Z17adler32HashString8string_t+0xb1>
    1bfd:	8f                   	(bad)
    1bfe:	12 a9 12 03 76 a8    	adc    ch,BYTE PTR [rcx-0x5789fcee]
    1c04:	7f 00                	jg     1c06 <_Z17adler32HashString8string_t+0xb6>
    1c06:	00 00                	add    BYTE PTR [rax],al
    1c08:	00 00                	add    BYTE PTR [rax],al
    1c0a:	00 00                	add    BYTE PTR [rax],al
    1c0c:	00 02                	add    BYTE PTR [rdx],al
    1c0e:	00 01                	add    BYTE PTR [rcx],al
    1c10:	00 00                	add    BYTE PTR [rax],al
    1c12:	04 f8                	add    al,0xf8
    1c14:	0d a2 0e 01 61       	or     eax,0x61010ea2
    1c19:	04 bc                	add    al,0xbc
    1c1b:	0e                   	(bad)
    1c1c:	d5 0e 01 61 04       	{rex2 0xe} add QWORD PTR [rcx+0x4],r12
    1c21:	e2 0e                	loop   1c31 <_Z17adler32HashString8string_t+0xe1>
    1c23:	fd                   	std
    1c24:	0e                   	(bad)
    1c25:	01 61 04             	add    DWORD PTR [rcx+0x4],esp
    1c28:	85 0f                	test   DWORD PTR [rdi],ecx
    1c2a:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1c2b:	0f 01 61 04          	smsw   WORD PTR [rcx+0x4]
    1c2f:	da 0f                	fimul  DWORD PTR [rdi]
    1c31:	da 0f                	fimul  DWORD PTR [rdi]
    1c33:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    1c36:	fb                   	sti
    1c37:	10 83 11 01 61 00    	adc    BYTE PTR [rbx+0x610111],al
    1c3d:	00 00                	add    BYTE PTR [rax],al
    1c3f:	00 00                	add    BYTE PTR [rax],al
    1c41:	00 00                	add    BYTE PTR [rax],al
    1c43:	04 b8                	add    al,0xb8
    1c45:	0f ca                	bswap  edx
    1c47:	0f 01 61 04          	smsw   WORD PTR [rcx+0x4]
    1c4b:	bc 11 c1 11 01       	mov    esp,0x111c111
    1c50:	61                   	(bad)
    1c51:	04 8f                	add    al,0x8f
    1c53:	12 9b 12 01 61 00    	adc    bl,BYTE PTR [rbx+0x610112]
    1c59:	02 00                	add    al,BYTE PTR [rax]
    1c5b:	04 cc                	add    al,0xcc
    1c5d:	11 eb                	adc    ebx,ebp
    1c5f:	11 02                	adc    DWORD PTR [rdx],eax
    1c61:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
    1c67:	da 0f                	fimul  DWORD PTR [rdi]
    1c69:	f5                   	cmc
    1c6a:	0f 0a                	(bad)
    1c6c:	03 5b 41             	add    ebx,DWORD PTR [rbx+0x41]
    1c6f:	00 00                	add    BYTE PTR [rax],al
    1c71:	00 00                	add    BYTE PTR [rax],al
    1c73:	00 00                	add    BYTE PTR [rax],al
    1c75:	9f                   	lahf
    1c76:	00 02                	add    BYTE PTR [rdx],al
    1c78:	00 04 f5 0f 90 10 0a 	add    BYTE PTR [rsi*8+0xa10900f],al
    1c7f:	03 79 41             	add    edi,DWORD PTR [rcx+0x41]
    1c82:	00 00                	add    BYTE PTR [rax],al
    1c84:	00 00                	add    BYTE PTR [rax],al
    1c86:	00 00                	add    BYTE PTR [rax],al
    1c88:	9f                   	lahf
    1c89:	00 02                	add    BYTE PTR [rdx],al
    1c8b:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1c8e:	10 bf 10 0a 03 97    	adc    BYTE PTR [rdi-0x68fcf5f0],bh
    1c94:	41 00 00             	add    BYTE PTR [r8],al
    1c97:	00 00                	add    BYTE PTR [rax],al
    1c99:	00 00                	add    BYTE PTR [rax],al
    1c9b:	9f                   	lahf
	...
    1ca8:	00 00                	add    BYTE PTR [rax],al
    1caa:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1cad:	4f 01 55 04          	rex.WRXB add QWORD PTR [r13+0x4],r10
    1cb1:	4f 85 08             	rex.WRXB test QWORD PTR [r8],r9
    1cb4:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
    1cb7:	85 08                	test   DWORD PTR [rax],ecx
    1cb9:	8f 08 04 a3          	(bad)
    1cbd:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1cc0:	04 8f                	add    al,0x8f
    1cc2:	08 bf 08 01 5d 04    	or     BYTE PTR [rdi+0x45d0108],bh
    1cc8:	bf 08 d9 08 01       	mov    edi,0x108d908
    1ccd:	55                   	push   rbp
    1cce:	04 d9                	add    al,0xd9
    1cd0:	08 de                	or     dh,bl
    1cd2:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    1cd5:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1cd8:	04 de                	add    al,0xde
    1cda:	08 e3                	or     bl,ah
    1cdc:	08 01                	or     BYTE PTR [rcx],al
    1cde:	5d                   	pop    rbp
	...
    1ce7:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1cea:	53                   	push   rbx
    1ceb:	01 54 04 53          	add    DWORD PTR [rsp+rax*1+0x53],edx
    1cef:	bf 08 04 a3 01       	mov    edi,0x1a30408
    1cf4:	54                   	push   rsp
    1cf5:	9f                   	lahf
    1cf6:	04 bf                	add    al,0xbf
    1cf8:	08 d2                	or     dl,dl
    1cfa:	08 01                	or     BYTE PTR [rcx],al
    1cfc:	54                   	push   rsp
    1cfd:	04 d2                	add    al,0xd2
    1cff:	08 e3                	or     bl,ah
    1d01:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    1d04:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    1d18:	04 00                	add    al,0x0
    1d1a:	46 06                	rex.RX (bad)
    1d1c:	51                   	push   rcx
    1d1d:	93                   	xchg   ebx,eax
    1d1e:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1d21:	08 04 49             	or     BYTE PTR [rcx+rcx*2],al
    1d24:	5c                   	pop    rsp
    1d25:	06                   	(bad)
    1d26:	53                   	push   rbx
    1d27:	93                   	xchg   ebx,eax
    1d28:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1d2b:	08 04 98             	or     BYTE PTR [rax+rbx*4],al
    1d2e:	01 c6                	add    esi,eax
    1d30:	01 06                	add    DWORD PTR [rsi],eax
    1d32:	53                   	push   rbx
    1d33:	93                   	xchg   ebx,eax
    1d34:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1d37:	08 04 a9             	or     BYTE PTR [rcx+rbp*4],al
    1d3a:	02 d4                	add    dl,ah
    1d3c:	05 06 53 93 08       	add    eax,0x8935306
    1d41:	5e                   	pop    rsi
    1d42:	93                   	xchg   ebx,eax
    1d43:	08 04 cf             	or     BYTE PTR [rdi+rcx*8],al
    1d46:	06                   	(bad)
    1d47:	ff 07                	inc    DWORD PTR [rdi]
    1d49:	06                   	(bad)
    1d4a:	53                   	push   rbx
    1d4b:	93                   	xchg   ebx,eax
    1d4c:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1d4f:	08 04 8f             	or     BYTE PTR [rdi+rcx*4],al
    1d52:	08 bf 08 06 53 93    	or     BYTE PTR [rdi-0x6cacf9f8],bh
    1d58:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1d5b:	08 04 bf             	or     BYTE PTR [rdi+rdi*4],al
    1d5e:	08 cb                	or     bl,cl
    1d60:	08 06                	or     BYTE PTR [rsi],al
    1d62:	51                   	push   rcx
    1d63:	93                   	xchg   ebx,eax
    1d64:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1d67:	08 04 de             	or     BYTE PTR [rsi+rbx*8],al
    1d6a:	08 e3                	or     bl,ah
    1d6c:	08 06                	or     BYTE PTR [rsi],al
    1d6e:	53                   	push   rbx
    1d6f:	93                   	xchg   ebx,eax
    1d70:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    1d73:	08 00                	or     BYTE PTR [rax],al
	...
    1d7d:	04 00                	add    al,0x0
    1d7f:	53                   	push   rbx
    1d80:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    1d83:	53                   	push   rbx
    1d84:	bf 08 04 a3 01       	mov    edi,0x1a30408
    1d89:	58                   	pop    rax
    1d8a:	9f                   	lahf
    1d8b:	04 bf                	add    al,0xbf
    1d8d:	08 dd                	or     ch,bl
    1d8f:	08 01                	or     BYTE PTR [rcx],al
    1d91:	58                   	pop    rax
    1d92:	04 dd                	add    al,0xdd
    1d94:	08 e3                	or     bl,ah
    1d96:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    1d99:	01 58 9f             	add    DWORD PTR [rax-0x61],ebx
    1d9c:	00 02                	add    BYTE PTR [rdx],al
	...
    1daa:	00 00                	add    BYTE PTR [rax],al
    1dac:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1daf:	01 d1                	add    ecx,edx
    1db1:	01 06                	add    DWORD PTR [rsi],eax
    1db3:	9e                   	sahf
    1db4:	04 00                	add    al,0x0
    1db6:	00 00                	add    BYTE PTR [rax],al
    1db8:	00 04 f2             	add    BYTE PTR [rdx+rsi*8],al
    1dbb:	01 81 02 01 63 04    	add    DWORD PTR [rcx+0x4630102],eax
    1dc1:	81 02 a0 02 03 76    	add    DWORD PTR [rdx],0x760302a0
    1dc7:	90                   	nop
    1dc8:	7f 04                	jg     1dce <_Z13elfHashString8string_t+0x6e>
    1dca:	a0 02 a9 02 01 63 04 	movabs al,ds:0x2ad04630102a902
    1dd1:	ad 02 
    1dd3:	cb                   	retf
    1dd4:	02 01                	add    al,BYTE PTR [rcx]
    1dd6:	63 04 cb             	movsxd eax,DWORD PTR [rbx+rcx*8]
    1dd9:	02 aa 03 03 76 90    	add    ch,BYTE PTR [rdx-0x6f89fcfd]
    1ddf:	7f 04                	jg     1de5 <_Z13elfHashString8string_t+0x85>
    1de1:	8f 08 9a 08          	(bad)
    1de5:	03 76 90             	add    esi,DWORD PTR [rsi-0x70]
    1de8:	7f 04                	jg     1dee <_Z13elfHashString8string_t+0x8e>
    1dea:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1deb:	08 b0 08 03 76 90    	or     BYTE PTR [rax-0x6f89fcf8],dh
    1df1:	7f 00                	jg     1df3 <_Z13elfHashString8string_t+0x93>
    1df3:	00 00                	add    BYTE PTR [rax],al
    1df5:	04 54                	add    al,0x54
    1df7:	63 02                	movsxd eax,DWORD PTR [rdx]
    1df9:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
    1dff:	00 04 b1             	add    BYTE PTR [rcx+rsi*4],al
    1e02:	01 d1                	add    ecx,edx
    1e04:	01 02                	add    DWORD PTR [rdx],eax
    1e06:	30 9f 04 f2 01 81    	xor    BYTE PTR [rdi-0x7efe0dfc],bl
    1e0c:	02 01                	add    al,BYTE PTR [rcx]
    1e0e:	52                   	push   rdx
    1e0f:	00 02                	add    BYTE PTR [rdx],al
    1e11:	00 04 f2             	add    BYTE PTR [rdx+rsi*8],al
    1e14:	01 82 02 0a 03 f8    	add    DWORD PTR [rdx-0x7fcf5fe],eax
    1e1a:	40 00 00             	rex add BYTE PTR [rax],al
    1e1d:	00 00                	add    BYTE PTR [rax],al
    1e1f:	00 00                	add    BYTE PTR [rax],al
    1e21:	9f                   	lahf
    1e22:	00 02                	add    BYTE PTR [rdx],al
    1e24:	00 00                	add    BYTE PTR [rax],al
    1e26:	00 04 f2             	add    BYTE PTR [rdx+rsi*8],al
    1e29:	01 81 02 01 55 04    	add    DWORD PTR [rcx+0x4550102],eax
    1e2f:	81 02 82 02 01 5d    	add    DWORD PTR [rdx],0x5d010282
    1e35:	00 03                	add    BYTE PTR [rbx],al
    1e37:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1e3a:	01 b1 01 0a 03 de    	add    DWORD PTR [rcx-0x21fcf5ff],esi
    1e40:	40 00 00             	rex add BYTE PTR [rax],al
    1e43:	00 00                	add    BYTE PTR [rax],al
    1e45:	00 00                	add    BYTE PTR [rax],al
    1e47:	9f                   	lahf
    1e48:	00 03                	add    BYTE PTR [rbx],al
    1e4a:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1e4d:	01 b1 01 01 5d 00    	add    DWORD PTR [rcx+0x5d0101],esi
    1e53:	01 00                	add    DWORD PTR [rax],eax
    1e55:	04 ad                	add    al,0xad
    1e57:	02 cc                	add    cl,ah
    1e59:	02 0a                	add    cl,BYTE PTR [rdx]
    1e5b:	03 ff                	add    edi,edi
    1e5d:	40 00 00             	rex add BYTE PTR [rax],al
    1e60:	00 00                	add    BYTE PTR [rax],al
    1e62:	00 00                	add    BYTE PTR [rax],al
    1e64:	9f                   	lahf
    1e65:	00 02                	add    BYTE PTR [rdx],al
    1e67:	00 00                	add    BYTE PTR [rax],al
    1e69:	00 00                	add    BYTE PTR [rax],al
    1e6b:	00 00                	add    BYTE PTR [rax],al
    1e6d:	00 04 cc             	add    BYTE PTR [rsp+rcx*8],al
    1e70:	02 aa 03 03 76 90    	add    ch,BYTE PTR [rdx-0x6f89fcfd]
    1e76:	7f 04                	jg     1e7c <_Z13searchElementP4List8string_t.part.0+0xc>
    1e78:	aa                   	stos   BYTE PTR es:[rdi],al
    1e79:	03 c5                	add    eax,ebp
    1e7b:	07                   	(bad)
    1e7c:	01 63 04             	add    DWORD PTR [rbx+0x4],esp
    1e7f:	8f 08 9a 08          	(bad)
    1e83:	03 76 90             	add    esi,DWORD PTR [rsi-0x70]
    1e86:	7f 04                	jg     1e8c <_Z13searchElementP4List8string_t.part.0+0x1c>
    1e88:	9a                   	(bad)
    1e89:	08 b8 08 01 63 00    	or     BYTE PTR [rax+0x630108],bh
    1e8f:	02 02                	add    al,BYTE PTR [rdx]
    1e91:	00 00                	add    BYTE PTR [rax],al
    1e93:	04 cc                	add    al,0xcc
    1e95:	02 c9                	add    cl,cl
    1e97:	07                   	(bad)
    1e98:	04 76                	add    al,0x76
    1e9a:	b0 7f                	mov    al,0x7f
    1e9c:	9f                   	lahf
    1e9d:	04 8f                	add    al,0x8f
    1e9f:	08 bf 08 04 76 b0    	or     BYTE PTR [rdi-0x4f89fbf8],bh
    1ea5:	7f 9f                	jg     1e46 <_Z13elfHashString8string_t+0xe6>
    1ea7:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    1eb6:	04 cc                	add    al,0xcc
    1eb8:	02 aa 03 06 9e 04    	add    ch,BYTE PTR [rdx+0x49e0603]
    1ebe:	00 00                	add    BYTE PTR [rax],al
    1ec0:	00 00                	add    BYTE PTR [rax],al
    1ec2:	04 aa                	add    al,0xaa
    1ec4:	03 e0                	add    esp,eax
    1ec6:	04 01                	add    al,0x1
    1ec8:	68 04 99 05 b4       	push   0xffffffffb4059904
    1ecd:	05 01 68 04 c4       	add    eax,0xc4046801
    1ed2:	05 bb 07 01 68       	add    eax,0x680107bb
    1ed7:	04 8f                	add    al,0x8f
    1ed9:	08 9a 08 06 9e 04    	or     BYTE PTR [rdx+0x49e0608],bl
    1edf:	00 00                	add    BYTE PTR [rax],al
    1ee1:	00 00                	add    BYTE PTR [rax],al
    1ee3:	04 9a                	add    al,0x9a
    1ee5:	08 a5 08 01 68 04    	or     BYTE PTR [rbp+0x4680108],ah
    1eeb:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1eec:	08 b0 08 06 9e 04    	or     BYTE PTR [rax+0x49e0608],dh
    1ef2:	00 00                	add    BYTE PTR [rax],al
    1ef4:	00 00                	add    BYTE PTR [rax],al
    1ef6:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1ef9:	02 00                	add    al,BYTE PTR [rax]
    1efb:	00 00                	add    BYTE PTR [rax],al
    1efd:	02 00                	add    al,BYTE PTR [rax]
    1eff:	00 00                	add    BYTE PTR [rax],al
    1f01:	00 00                	add    BYTE PTR [rax],al
    1f03:	04 cc                	add    al,0xcc
    1f05:	02 aa 03 02 30 9f    	add    ch,BYTE PTR [rdx-0x60cffdfd]
    1f0b:	04 f1                	add    al,0xf1
    1f0d:	06                   	(bad)
    1f0e:	f9                   	stc
    1f0f:	06                   	(bad)
    1f10:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    1f13:	f9                   	stc
    1f14:	06                   	(bad)
    1f15:	fc                   	cld
    1f16:	06                   	(bad)
    1f17:	03 70 01             	add    esi,DWORD PTR [rax+0x1]
    1f1a:	9f                   	lahf
    1f1b:	04 91                	add    al,0x91
    1f1d:	07                   	(bad)
    1f1e:	99                   	cdq
    1f1f:	07                   	(bad)
    1f20:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    1f23:	8f 08 9a 08          	(bad)
    1f27:	02 30                	add    dh,BYTE PTR [rax]
    1f29:	9f                   	lahf
    1f2a:	04 a5                	add    al,0xa5
    1f2c:	08 b0 08 02 30 9f    	or     BYTE PTR [rax-0x60cffdf8],dh
    1f32:	00 01                	add    BYTE PTR [rcx],al
    1f34:	00 00                	add    BYTE PTR [rax],al
    1f36:	00 01                	add    BYTE PTR [rcx],al
    1f38:	00 04 f5 06 f9 06 0f 	add    BYTE PTR [rsi*8+0xf06f906],al
    1f3f:	71 00                	jno    1f41 <_Z12pushListElemP4List8string_t+0x31>
    1f41:	0c ff                	or     al,0xff
    1f43:	ff                   	(bad)
    1f44:	ff                   	(bad)
    1f45:	ff 1a                	call   FWORD PTR [rdx]
    1f47:	48 1e                	rex.W (bad)
    1f49:	75 00                	jne    1f4b <_Z12pushListElemP4List8string_t+0x3b>
    1f4b:	22 23                	and    ah,BYTE PTR [rbx]
    1f4d:	10 04 f9             	adc    BYTE PTR [rcx+rdi*8],al
    1f50:	06                   	(bad)
    1f51:	fc                   	cld
    1f52:	06                   	(bad)
    1f53:	0f 70 01 0c          	pshufw mm0,QWORD PTR [rcx],0xc
    1f57:	ff                   	(bad)
    1f58:	ff                   	(bad)
    1f59:	ff                   	(bad)
    1f5a:	ff 1a                	call   FWORD PTR [rdx]
    1f5c:	48 1e                	rex.W (bad)
    1f5e:	75 00                	jne    1f60 <_Z12pushListElemP4List8string_t+0x50>
    1f60:	22 23                	and    ah,BYTE PTR [rbx]
    1f62:	10 04 95 07 99 07 0f 	adc    BYTE PTR [rdx*4+0xf079907],al
    1f69:	70 00                	jo     1f6b <_Z12pushListElemP4List8string_t+0x5b>
    1f6b:	0c ff                	or     al,0xff
    1f6d:	ff                   	(bad)
    1f6e:	ff                   	(bad)
    1f6f:	ff 1a                	call   FWORD PTR [rdx]
    1f71:	48 1e                	rex.W (bad)
    1f73:	75 00                	jne    1f75 <_Z12pushListElemP4List8string_t+0x65>
    1f75:	22 23                	and    ah,BYTE PTR [rbx]
    1f77:	10 00                	adc    BYTE PTR [rax],al
    1f79:	00 00                	add    BYTE PTR [rax],al
    1f7b:	00 00                	add    BYTE PTR [rax],al
    1f7d:	00 00                	add    BYTE PTR [rax],al
    1f7f:	04 bb                	add    al,0xbb
    1f81:	07                   	(bad)
    1f82:	c9                   	leave
    1f83:	07                   	(bad)
    1f84:	01 68 04             	add    DWORD PTR [rax+0x4],ebp
    1f87:	98                   	cwde
    1f88:	08 9a 08 01 68 04    	or     BYTE PTR [rdx+0x4680108],bl
    1f8e:	b0 08                	mov    al,0x8
    1f90:	b8 08 01 68 00       	mov    eax,0x680108
    1f95:	02 00                	add    al,BYTE PTR [rax]
    1f97:	04 c9                	add    al,0xc9
    1f99:	07                   	(bad)
    1f9a:	e3 07                	jrcxz  1fa3 <_Z12pushListElemP4List8string_t+0x93>
    1f9c:	0a 03                	or     al,BYTE PTR [rbx]
    1f9e:	19 41 00             	sbb    DWORD PTR [rcx+0x0],eax
    1fa1:	00 00                	add    BYTE PTR [rax],al
    1fa3:	00 00                	add    BYTE PTR [rax],al
    1fa5:	00 9f 00 00 00 00    	add    BYTE PTR [rdi+0x0],bl
	...
    1fb3:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    1fb6:	13 e2                	adc    esp,edx
    1fb8:	13 01                	adc    eax,DWORD PTR [rcx]
    1fba:	55                   	push   rbp
    1fbb:	04 e2                	add    al,0xe2
    1fbd:	13 b0 22 04 a3 01    	adc    esi,DWORD PTR [rax+0x1a30422]
    1fc3:	55                   	push   rbp
    1fc4:	9f                   	lahf
    1fc5:	04 b0                	add    al,0xb0
    1fc7:	22 ca                	and    cl,dl
    1fc9:	22 01                	and    al,BYTE PTR [rcx]
    1fcb:	55                   	push   rbp
    1fcc:	04 ca                	add    al,0xca
    1fce:	22 cf                	and    cl,bh
    1fd0:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    1fd3:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1fd6:	04 cf                	add    al,0xcf
    1fd8:	22 e9                	and    ch,cl
    1fda:	22 01                	and    al,BYTE PTR [rcx]
    1fdc:	55                   	push   rbp
    1fdd:	04 e9                	add    al,0xe9
    1fdf:	22 ee                	and    ch,dh
    1fe1:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    1fe4:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    1ff7:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    1ffa:	13 ea                	adc    ebp,edx
    1ffc:	13 01                	adc    eax,DWORD PTR [rcx]
    1ffe:	54                   	push   rsp
    1fff:	04 ea                	add    al,0xea
    2001:	13 8b 16 01 5e 04    	adc    ecx,DWORD PTR [rbx+0x45e0116]
    2007:	8b 16                	mov    edx,DWORD PTR [rsi]
    2009:	8e 16                	mov    ss,WORD PTR [rsi]
    200b:	04 a3                	add    al,0xa3
    200d:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2011:	8e 16                	mov    ss,WORD PTR [rsi]
    2013:	b0 22                	mov    al,0x22
    2015:	01 5e 04             	add    DWORD PTR [rsi+0x4],ebx
    2018:	b0 22                	mov    al,0x22
    201a:	c3                   	ret
    201b:	22 01                	and    al,BYTE PTR [rcx]
    201d:	54                   	push   rsp
    201e:	04 c3                	add    al,0xc3
    2020:	22 cf                	and    cl,bh
    2022:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    2025:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2029:	cf                   	iret
    202a:	22 e2                	and    ah,dl
    202c:	22 01                	and    al,BYTE PTR [rcx]
    202e:	54                   	push   rsp
    202f:	04 e2                	add    al,0xe2
    2031:	22 ee                	and    ch,dh
    2033:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    2036:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    204e:	00 00                	add    BYTE PTR [rax],al
    2050:	04 a0                	add    al,0xa0
    2052:	13 f7                	adc    esi,edi
    2054:	13 01                	adc    eax,DWORD PTR [rcx]
    2056:	51                   	push   rcx
    2057:	04 f7                	add    al,0xf7
    2059:	13 d9                	adc    ebx,ecx
    205b:	15 01 53 04 d9       	adc    eax,0xd9045301
    2060:	15 8e 16 04 a3       	adc    eax,0xa304168e
    2065:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
    2068:	04 8e                	add    al,0x8e
    206a:	16                   	(bad)
    206b:	e2 17                	loop   2084 <_Z12pushListElemP4List8string_t+0x174>
    206d:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    2070:	e2 17                	loop   2089 <_Z12pushListElemP4List8string_t+0x179>
    2072:	dd 1c 04             	fstp   QWORD PTR [rsp+rax*1]
    2075:	a3 01 51 9f 04 dd 1c 	movabs ds:0x22ab1cdd049f5101,eax
    207c:	ab 22 
    207e:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    2081:	ab                   	stos   DWORD PTR es:[rdi],eax
    2082:	22 b0 22 04 a3 01    	and    dh,BYTE PTR [rax+0x1a30422]
    2088:	51                   	push   rcx
    2089:	9f                   	lahf
    208a:	04 b0                	add    al,0xb0
    208c:	22 bc 22 01 51 04 bc 	and    bh,BYTE PTR [rdx+riz*1-0x43fbaeff]
    2093:	22 cf                	and    cl,bh
    2095:	22 01                	and    al,BYTE PTR [rcx]
    2097:	53                   	push   rbx
    2098:	04 cf                	add    al,0xcf
    209a:	22 db                	and    bl,bl
    209c:	22 01                	and    al,BYTE PTR [rcx]
    209e:	51                   	push   rcx
    209f:	04 db                	add    al,0xdb
    20a1:	22 ee                	and    ch,dh
    20a3:	22 04 a3             	and    al,BYTE PTR [rbx+riz*4]
    20a6:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
	...
    20b5:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    20b8:	13 f7                	adc    esi,edi
    20ba:	13 01                	adc    eax,DWORD PTR [rcx]
    20bc:	52                   	push   rdx
    20bd:	04 f7                	add    al,0xf7
    20bf:	13 b0 22 03 91 9c    	adc    esi,DWORD PTR [rax-0x636efcde]
    20c5:	7f 04                	jg     20cb <_Z11popListElemP4List8string_t+0x1b>
    20c7:	b0 22                	mov    al,0x22
    20c9:	b7 22                	mov    bh,0x22
    20cb:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    20ce:	b7 22                	mov    bh,0x22
    20d0:	cf                   	iret
    20d1:	22 03                	and    al,BYTE PTR [rbx]
    20d3:	91                   	xchg   ecx,eax
    20d4:	9c                   	pushf
    20d5:	7f 04                	jg     20db <_Z11popListElemP4List8string_t+0x2b>
    20d7:	cf                   	iret
    20d8:	22 d6                	and    dl,dh
    20da:	22 01                	and    al,BYTE PTR [rcx]
    20dc:	52                   	push   rdx
    20dd:	04 d6                	add    al,0xd6
    20df:	22 ee                	and    ch,dh
    20e1:	22 03                	and    al,BYTE PTR [rbx]
    20e3:	91                   	xchg   ecx,eax
    20e4:	9c                   	pushf
    20e5:	7f 00                	jg     20e7 <_Z11popListElemP4List8string_t+0x37>
	...
    20ef:	00 00                	add    BYTE PTR [rax],al
    20f1:	04 88                	add    al,0x88
    20f3:	14 8c                	adc    al,0x8c
    20f5:	14 01                	adc    al,0x1
    20f7:	50                   	push   rax
    20f8:	04 8c                	add    al,0x8c
    20fa:	14 b5                	adc    al,0xb5
    20fc:	14 01                	adc    al,0x1
    20fe:	5f                   	pop    rdi
    20ff:	04 b5                	add    al,0xb5
    2101:	14 8e                	adc    al,0x8e
    2103:	16                   	(bad)
    2104:	03 91 a0 7f 04 8e    	add    edx,DWORD PTR [rcx-0x71fb8060]
    210a:	16                   	(bad)
    210b:	df 16                	fist   WORD PTR [rsi]
    210d:	01 5f 04             	add    DWORD PTR [rdi+0x4],ebx
    2110:	df 16                	fist   WORD PTR [rsi]
    2112:	b0 22                	mov    al,0x22
    2114:	03 91 a0 7f 00 00    	add    edx,DWORD PTR [rcx+0x7fa0]
    211a:	00 00                	add    BYTE PTR [rax],al
    211c:	00 00                	add    BYTE PTR [rax],al
    211e:	00 00                	add    BYTE PTR [rax],al
    2120:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
    2123:	14 d9                	adc    al,0xd9
    2125:	15 01 5c 04 8e       	adc    eax,0x8e045c01
    212a:	16                   	(bad)
    212b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    212c:	18 01                	sbb    BYTE PTR [rcx],al
    212e:	5c                   	pop    rsp
    212f:	04 a6                	add    al,0xa6
    2131:	18 d6                	sbb    dh,dl
    2133:	18 03                	sbb    BYTE PTR [rbx],al
    2135:	91                   	xchg   ecx,eax
    2136:	a8 7f                	test   al,0x7f
    2138:	04 dd                	add    al,0xdd
    213a:	1c ab                	sbb    al,0xab
    213c:	22 01                	and    al,BYTE PTR [rcx]
    213e:	5c                   	pop    rsp
	...
    2147:	00 00                	add    BYTE PTR [rax],al
    2149:	03 03                	add    eax,DWORD PTR [rbx]
    214b:	00 00                	add    BYTE PTR [rax],al
    214d:	00 00                	add    BYTE PTR [rax],al
    214f:	00 00                	add    BYTE PTR [rax],al
    2151:	03 03                	add    eax,DWORD PTR [rbx]
    2153:	00 00                	add    BYTE PTR [rax],al
    2155:	03 03                	add    eax,DWORD PTR [rbx]
    2157:	00 00                	add    BYTE PTR [rax],al
    2159:	00 00                	add    BYTE PTR [rax],al
    215b:	00 00                	add    BYTE PTR [rax],al
    215d:	03 03                	add    eax,DWORD PTR [rbx]
    215f:	00 00                	add    BYTE PTR [rax],al
    2161:	00 04 a8             	add    BYTE PTR [rax+rbp*4],al
    2164:	14 ac                	adc    al,0xac
    2166:	14 08                	adc    al,0x8
    2168:	50                   	push   rax
    2169:	93                   	xchg   ebx,eax
    216a:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    216e:	93                   	xchg   ebx,eax
    216f:	04 04                	add    al,0x4
    2171:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2172:	14 d9                	adc    al,0xd9
    2174:	15 08 56 93 08       	adc    eax,0x8935608
    2179:	5c                   	pop    rsp
    217a:	93                   	xchg   ebx,eax
    217b:	04 93                	add    al,0x93
    217d:	04 04                	add    al,0x4
    217f:	d9 15 eb 15 05 56    	fst    DWORD PTR [rip+0x560515eb]        # 56053770 <_end+0x5604d758>
    2185:	93                   	xchg   ebx,eax
    2186:	08 93 08 04 8e 16    	or     BYTE PTR [rbx+0x168e0408],dl
    218c:	83 17 08             	adc    DWORD PTR [rdi],0x8
    218f:	56                   	push   rsi
    2190:	93                   	xchg   ebx,eax
    2191:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2195:	93                   	xchg   ebx,eax
    2196:	04 04                	add    al,0x4
    2198:	83 17 af             	adc    DWORD PTR [rdi],0xffffffaf
    219b:	17                   	(bad)
    219c:	07                   	(bad)
    219d:	93                   	xchg   ebx,eax
    219e:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    21a2:	93                   	xchg   ebx,eax
    21a3:	04 04                	add    al,0x4
    21a5:	af                   	scas   eax,DWORD PTR es:[rdi]
    21a6:	17                   	(bad)
    21a7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    21a8:	18 08                	sbb    BYTE PTR [rax],cl
    21aa:	56                   	push   rsi
    21ab:	93                   	xchg   ebx,eax
    21ac:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    21b0:	93                   	xchg   ebx,eax
    21b1:	04 04                	add    al,0x4
    21b3:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    21b4:	18 d6                	sbb    dh,dl
    21b6:	18 0a                	sbb    BYTE PTR [rdx],cl
    21b8:	56                   	push   rsi
    21b9:	93                   	xchg   ebx,eax
    21ba:	08 91 a8 7f 93 04    	or     BYTE PTR [rcx+0x4937fa8],dl
    21c0:	93                   	xchg   ebx,eax
    21c1:	04 04                	add    al,0x4
    21c3:	d6                   	(bad)
    21c4:	18 dd                	sbb    ch,bl
    21c6:	1c 05                	sbb    al,0x5
    21c8:	56                   	push   rsi
    21c9:	93                   	xchg   ebx,eax
    21ca:	08 93 08 04 dd 1c    	or     BYTE PTR [rbx+0x1cdd0408],dl
    21d0:	83 1d 07 93 08 5c 93 	sbb    DWORD PTR [rip+0x5c089307],0xffffff93        # 5c08b4de <_end+0x5c0854c6>
    21d7:	04 93                	add    al,0x93
    21d9:	04 04                	add    al,0x4
    21db:	83 1d d3 1d 08 56 93 	sbb    DWORD PTR [rip+0x56081dd3],0xffffff93        # 56083fb5 <_end+0x5607df9d>
    21e2:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    21e6:	93                   	xchg   ebx,eax
    21e7:	04 04                	add    al,0x4
    21e9:	d3 1d ff 1d 07 93    	rcr    DWORD PTR [rip+0xffffffff93071dff],cl        # ffffffff93073fee <_end+0xffffffff9306dfd6>
    21ef:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    21f3:	93                   	xchg   ebx,eax
    21f4:	04 04                	add    al,0x4
    21f6:	ff 1d cb 1e 08 56    	call   FWORD PTR [rip+0x56081ecb]        # 560840c7 <_end+0x5607e0af>
    21fc:	93                   	xchg   ebx,eax
    21fd:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2201:	93                   	xchg   ebx,eax
    2202:	04 04                	add    al,0x4
    2204:	cb                   	retf
    2205:	1e                   	(bad)
    2206:	c3                   	ret
    2207:	1f                   	(bad)
    2208:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
    220b:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    220f:	93                   	xchg   ebx,eax
    2210:	04 04                	add    al,0x4
    2212:	c3                   	ret
    2213:	1f                   	(bad)
    2214:	bb 20 08 56 93       	mov    ebx,0x93560820
    2219:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    221d:	93                   	xchg   ebx,eax
    221e:	04 04                	add    al,0x4
    2220:	bb 20 e7 20 07       	mov    ebx,0x720e720
    2225:	93                   	xchg   ebx,eax
    2226:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    222a:	93                   	xchg   ebx,eax
    222b:	04 04                	add    al,0x4
    222d:	e7 20                	out    0x20,eax
    222f:	b3 21                	mov    bl,0x21
    2231:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
    2234:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2238:	93                   	xchg   ebx,eax
    2239:	04 04                	add    al,0x4
    223b:	b3 21                	mov    bl,0x21
    223d:	ab                   	stos   DWORD PTR es:[rdi],eax
    223e:	22 08                	and    cl,BYTE PTR [rax]
    2240:	56                   	push   rsi
    2241:	93                   	xchg   ebx,eax
    2242:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2246:	93                   	xchg   ebx,eax
    2247:	04 00                	add    al,0x0
    2249:	01 00                	add    DWORD PTR [rax],eax
    224b:	04 8e                	add    al,0x8e
    224d:	16                   	(bad)
    224e:	9f                   	lahf
    224f:	16                   	(bad)
    2250:	06                   	(bad)
    2251:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    2258:	02 00 
    225a:	04 9f                	add    al,0x9f
    225c:	16                   	(bad)
    225d:	ab                   	stos   DWORD PTR es:[rdi],eax
    225e:	16                   	(bad)
    225f:	06                   	(bad)
    2260:	a0 f7 cb 00 00 00 00 	movabs al,ds:0x200000000cbf7
    2267:	02 00 
    2269:	04 ab                	add    al,0xab
    226b:	16                   	(bad)
    226c:	b7 16                	mov    bh,0x16
    226e:	06                   	(bad)
    226f:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    2276:	03 00 
    2278:	04 b7                	add    al,0xb7
    227a:	16                   	(bad)
    227b:	f2 16                	repnz (bad)
    227d:	03 91 9c 7f 00 03    	add    edx,DWORD PTR [rcx+0x3007f9c]
    2283:	00 04 b7             	add    BYTE PTR [rdi+rsi*4],al
    2286:	16                   	(bad)
    2287:	f2 16                	repnz (bad)
    2289:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    228c:	00 00                	add    BYTE PTR [rax],al
    228e:	00 00                	add    BYTE PTR [rax],al
    2290:	04 df                	add    al,0xdf
    2292:	16                   	(bad)
    2293:	e9 16 01 50 04       	jmp    45023ae <_end+0x44fc396>
    2298:	e9 16 83 17 01       	jmp    117a5b3 <_end+0x117459b>
    229d:	5f                   	pop    rdi
    229e:	00 02                	add    BYTE PTR [rdx],al
    22a0:	00 04 f2             	add    BYTE PTR [rdx+rsi*8],al
    22a3:	16                   	(bad)
    22a4:	fe                   	(bad)
    22a5:	16                   	(bad)
    22a6:	06                   	(bad)
    22a7:	a0 26 cc 00 00 00 00 	movabs al,ds:0x200000000cc26
    22ae:	02 00 
    22b0:	04 b3                	add    al,0xb3
    22b2:	21 c7                	and    edi,eax
    22b4:	21 06                	and    DWORD PTR [rsi],eax
    22b6:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    22bd:	02 00 
    22bf:	04 c7                	add    al,0xc7
    22c1:	21 d3                	and    ebx,edx
    22c3:	21 06                	and    DWORD PTR [rsi],eax
    22c5:	a0 4a cc 00 00 00 00 	movabs al,ds:0x200000000cc4a
    22cc:	02 00 
    22ce:	04 d3                	add    al,0xd3
    22d0:	21 df                	and    edi,ebx
    22d2:	21 06                	and    DWORD PTR [rsi],eax
    22d4:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    22db:	03 00 
    22dd:	04 df                	add    al,0xdf
    22df:	21 9a 22 03 91 9c    	and    DWORD PTR [rdx-0x636efcde],ebx
    22e5:	7f 00                	jg     22e7 <_Z8readFilePKcPm+0xd7>
    22e7:	03 00                	add    eax,DWORD PTR [rax]
    22e9:	04 df                	add    al,0xdf
    22eb:	21 9a 22 01 5e 00    	and    DWORD PTR [rdx+0x5e0122],ebx
    22f1:	00 00                	add    BYTE PTR [rax],al
    22f3:	00 00                	add    BYTE PTR [rax],al
    22f5:	04 87                	add    al,0x87
    22f7:	22 91 22 01 50 04    	and    dl,BYTE PTR [rcx+0x4500122]
    22fd:	91                   	xchg   ecx,eax
    22fe:	22 ab 22 01 5f 00    	and    ch,BYTE PTR [rbx+0x5f0122]
    2304:	02 00                	add    al,BYTE PTR [rax]
    2306:	04 9a                	add    al,0x9a
    2308:	22 a6 22 06 a0 26    	and    ah,BYTE PTR [rsi+0x26a00622]
    230e:	cc                   	int3
    230f:	00 00                	add    BYTE PTR [rax],al
    2311:	00 00                	add    BYTE PTR [rax],al
    2313:	02 00                	add    al,BYTE PTR [rax]
    2315:	04 bb                	add    al,0xbb
    2317:	20 cf                	and    bh,cl
    2319:	20 06                	and    BYTE PTR [rsi],al
    231b:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    2322:	02 00 
    2324:	04 cf                	add    al,0xcf
    2326:	20 db                	and    bl,bl
    2328:	20 06                	and    BYTE PTR [rsi],al
    232a:	a0 59 cc 00 00 00 00 	movabs al,ds:0x200000000cc59
    2331:	02 00 
    2333:	04 db                	add    al,0xdb
    2335:	20 e7                	and    bh,ah
    2337:	20 06                	and    BYTE PTR [rsi],al
    2339:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    2340:	03 00 
    2342:	04 e7                	add    al,0xe7
    2344:	20 a2 21 03 91 9c    	and    BYTE PTR [rdx-0x636efcdf],ah
    234a:	7f 00                	jg     234c <_Z10countLinesPcm+0x2c>
    234c:	03 00                	add    eax,DWORD PTR [rax]
    234e:	04 e7                	add    al,0xe7
    2350:	20 a2 21 01 5e 00    	and    BYTE PTR [rdx+0x5e0121],ah
    2356:	00 00                	add    BYTE PTR [rax],al
    2358:	00 00                	add    BYTE PTR [rax],al
    235a:	04 8f                	add    al,0x8f
    235c:	21 99 21 01 50 04    	and    DWORD PTR [rcx+0x4500121],ebx
    2362:	99                   	cdq
    2363:	21 b3 21 01 5f 00    	and    DWORD PTR [rbx+0x5f0121],esi
    2369:	02 00                	add    al,BYTE PTR [rax]
    236b:	04 a2                	add    al,0xa2
    236d:	21 ae 21 06 a0 26    	and    DWORD PTR [rsi+0x26a00621],ebp
    2373:	cc                   	int3
    2374:	00 00                	add    BYTE PTR [rax],al
    2376:	00 00                	add    BYTE PTR [rax],al
    2378:	02 00                	add    al,BYTE PTR [rax]
    237a:	04 c3                	add    al,0xc3
    237c:	1f                   	(bad)
    237d:	d7                   	xlat   BYTE PTR ds:[rbx]
    237e:	1f                   	(bad)
    237f:	06                   	(bad)
    2380:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    2387:	02 00 
    2389:	04 d7                	add    al,0xd7
    238b:	1f                   	(bad)
    238c:	e3 1f                	jrcxz  23ad <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x1d>
    238e:	06                   	(bad)
    238f:	a0 66 cc 00 00 00 00 	movabs al,ds:0x200000000cc66
    2396:	02 00 
    2398:	04 e3                	add    al,0xe3
    239a:	1f                   	(bad)
    239b:	ef                   	out    dx,eax
    239c:	1f                   	(bad)
    239d:	06                   	(bad)
    239e:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    23a5:	03 00 
    23a7:	04 ef                	add    al,0xef
    23a9:	1f                   	(bad)
    23aa:	aa                   	stos   BYTE PTR es:[rdi],al
    23ab:	20 03                	and    BYTE PTR [rbx],al
    23ad:	91                   	xchg   ecx,eax
    23ae:	9c                   	pushf
    23af:	7f 00                	jg     23b1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x21>
    23b1:	03 00                	add    eax,DWORD PTR [rax]
    23b3:	04 ef                	add    al,0xef
    23b5:	1f                   	(bad)
    23b6:	aa                   	stos   BYTE PTR es:[rdi],al
    23b7:	20 01                	and    BYTE PTR [rcx],al
    23b9:	5e                   	pop    rsi
    23ba:	00 00                	add    BYTE PTR [rax],al
    23bc:	00 00                	add    BYTE PTR [rax],al
    23be:	00 04 97             	add    BYTE PTR [rdi+rdx*4],al
    23c1:	20 a1 20 01 50 04    	and    BYTE PTR [rcx+0x4500120],ah
    23c7:	a1 20 bb 20 01 5f 00 	movabs eax,ds:0x2005f0120bb20
    23ce:	02 00 
    23d0:	04 aa                	add    al,0xaa
    23d2:	20 b6 20 06 a0 26    	and    BYTE PTR [rsi+0x26a00620],dh
    23d8:	cc                   	int3
    23d9:	00 00                	add    BYTE PTR [rax],al
    23db:	00 00                	add    BYTE PTR [rax],al
    23dd:	02 00                	add    al,BYTE PTR [rax]
    23df:	04 cb                	add    al,0xcb
    23e1:	1e                   	(bad)
    23e2:	df 1e                	fistp  WORD PTR [rsi]
    23e4:	06                   	(bad)
    23e5:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    23ec:	02 00 
    23ee:	04 df                	add    al,0xdf
    23f0:	1e                   	(bad)
    23f1:	eb 1e                	jmp    2411 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x81>
    23f3:	06                   	(bad)
    23f4:	a0 6f cc 00 00 00 00 	movabs al,ds:0x200000000cc6f
    23fb:	02 00 
    23fd:	04 eb                	add    al,0xeb
    23ff:	1e                   	(bad)
    2400:	f7 1e                	neg    DWORD PTR [rsi]
    2402:	06                   	(bad)
    2403:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    240a:	03 00 
    240c:	04 f7                	add    al,0xf7
    240e:	1e                   	(bad)
    240f:	b2 1f                	mov    dl,0x1f
    2411:	03 91 9c 7f 00 03    	add    edx,DWORD PTR [rcx+0x3007f9c]
    2417:	00 04 f7             	add    BYTE PTR [rdi+rsi*8],al
    241a:	1e                   	(bad)
    241b:	b2 1f                	mov    dl,0x1f
    241d:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    2420:	00 00                	add    BYTE PTR [rax],al
    2422:	00 00                	add    BYTE PTR [rax],al
    2424:	04 9f                	add    al,0x9f
    2426:	1f                   	(bad)
    2427:	a9 1f 01 50 04       	test   eax,0x450011f
    242c:	a9 1f c3 1f 01       	test   eax,0x11fc31f
    2431:	5f                   	pop    rdi
    2432:	00 02                	add    BYTE PTR [rdx],al
    2434:	00 04 b2             	add    BYTE PTR [rdx+rsi*4],al
    2437:	1f                   	(bad)
    2438:	be 1f 06 a0 26       	mov    esi,0x26a0061f
    243d:	cc                   	int3
    243e:	00 00                	add    BYTE PTR [rax],al
    2440:	00 00                	add    BYTE PTR [rax],al
    2442:	02 00                	add    al,BYTE PTR [rax]
    2444:	04 d3                	add    al,0xd3
    2446:	1d e7 1d 06 a0       	sbb    eax,0xa0061de7
    244b:	c9                   	leave
    244c:	cb                   	retf
    244d:	00 00                	add    BYTE PTR [rax],al
    244f:	00 00                	add    BYTE PTR [rax],al
    2451:	02 00                	add    al,BYTE PTR [rax]
    2453:	04 e7                	add    al,0xe7
    2455:	1d f3 1d 06 a0       	sbb    eax,0xa0061df3
    245a:	7c cc                	jl     2428 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x98>
    245c:	00 00                	add    BYTE PTR [rax],al
    245e:	00 00                	add    BYTE PTR [rax],al
    2460:	02 00                	add    al,BYTE PTR [rax]
    2462:	04 f3                	add    al,0xf3
    2464:	1d ff 1d 06 a0       	sbb    eax,0xa0061dff
    2469:	02 cc                	add    cl,ah
    246b:	00 00                	add    BYTE PTR [rax],al
    246d:	00 00                	add    BYTE PTR [rax],al
    246f:	03 00                	add    eax,DWORD PTR [rax]
    2471:	04 ff                	add    al,0xff
    2473:	1d ba 1e 03 91       	sbb    eax,0x91031eba
    2478:	9c                   	pushf
    2479:	7f 00                	jg     247b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0xeb>
    247b:	03 00                	add    eax,DWORD PTR [rax]
    247d:	04 ff                	add    al,0xff
    247f:	1d ba 1e 01 5e       	sbb    eax,0x5e011eba
    2484:	00 00                	add    BYTE PTR [rax],al
    2486:	00 00                	add    BYTE PTR [rax],al
    2488:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    248b:	1e                   	(bad)
    248c:	b1 1e                	mov    cl,0x1e
    248e:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    2491:	b1 1e                	mov    cl,0x1e
    2493:	cb                   	retf
    2494:	1e                   	(bad)
    2495:	01 5f 00             	add    DWORD PTR [rdi+0x0],ebx
    2498:	02 00                	add    al,BYTE PTR [rax]
    249a:	04 ba                	add    al,0xba
    249c:	1e                   	(bad)
    249d:	c6                   	(bad)
    249e:	1e                   	(bad)
    249f:	06                   	(bad)
    24a0:	a0 26 cc 00 00 00 00 	movabs al,ds:0x200000000cc26
    24a7:	02 00 
    24a9:	04 dd                	add    al,0xdd
    24ab:	1c ef                	sbb    al,0xef
    24ad:	1c 06                	sbb    al,0x6
    24af:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    24b6:	02 00 
    24b8:	04 ef                	add    al,0xef
    24ba:	1c f7                	sbb    al,0xf7
    24bc:	1c 06                	sbb    al,0x6
    24be:	a0 85 cc 00 00 00 00 	movabs al,ds:0x200000000cc85
    24c5:	02 00 
    24c7:	04 f7                	add    al,0xf7
    24c9:	1c 83                	sbb    al,0x83
    24cb:	1d 06 a0 02 cc       	sbb    eax,0xcc02a006
    24d0:	00 00                	add    BYTE PTR [rax],al
    24d2:	00 00                	add    BYTE PTR [rax],al
    24d4:	03 00                	add    eax,DWORD PTR [rax]
    24d6:	04 83                	add    al,0x83
    24d8:	1d c2 1d 03 91       	sbb    eax,0x91031dc2
    24dd:	9c                   	pushf
    24de:	7f 00                	jg     24e0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x150>
    24e0:	03 00                	add    eax,DWORD PTR [rax]
    24e2:	04 83                	add    al,0x83
    24e4:	1d c2 1d 01 5e       	sbb    eax,0x5e011dc2
    24e9:	00 00                	add    BYTE PTR [rax],al
    24eb:	00 00                	add    BYTE PTR [rax],al
    24ed:	00 04 ab             	add    BYTE PTR [rbx+rbp*4],al
    24f0:	1d b7 1d 01 50       	sbb    eax,0x50011db7
    24f5:	04 b7                	add    al,0xb7
    24f7:	1d d3 1d 03 91       	sbb    eax,0x91031dd3
    24fc:	a8 7f                	test   al,0x7f
    24fe:	00 02                	add    BYTE PTR [rdx],al
    2500:	00 04 c2             	add    BYTE PTR [rdx+rax*8],al
    2503:	1d ce 1d 06 a0       	sbb    eax,0xa0061dce
    2508:	26 cc                	es int3
    250a:	00 00                	add    BYTE PTR [rax],al
    250c:	00 00                	add    BYTE PTR [rax],al
    250e:	03 00                	add    eax,DWORD PTR [rax]
    2510:	04 83                	add    al,0x83
    2512:	17                   	(bad)
    2513:	97                   	xchg   edi,eax
    2514:	17                   	(bad)
    2515:	06                   	(bad)
    2516:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    251d:	02 00 
    251f:	04 97                	add    al,0x97
    2521:	17                   	(bad)
    2522:	a3 17 06 a0 f7 cb 00 	movabs ds:0xcbf7a00617,eax
    2529:	00 00 
    252b:	00 02                	add    BYTE PTR [rdx],al
    252d:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    2530:	17                   	(bad)
    2531:	af                   	scas   eax,DWORD PTR es:[rdi]
    2532:	17                   	(bad)
    2533:	06                   	(bad)
    2534:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    253b:	03 00 
    253d:	04 af                	add    al,0xaf
    253f:	17                   	(bad)
    2540:	f9                   	stc
    2541:	17                   	(bad)
    2542:	03 91 9c 7f 00 03    	add    edx,DWORD PTR [rcx+0x3007f9c]
    2548:	00 04 af             	add    BYTE PTR [rdi+rbp*4],al
    254b:	17                   	(bad)
    254c:	f9                   	stc
    254d:	17                   	(bad)
    254e:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    2551:	00 00                	add    BYTE PTR [rax],al
    2553:	00 00                	add    BYTE PTR [rax],al
    2555:	00 00                	add    BYTE PTR [rax],al
    2557:	04 e2                	add    al,0xe2
    2559:	17                   	(bad)
    255a:	e9 17 01 50 04       	jmp    4502676 <_end+0x44fc65e>
    255f:	e9 17 f4 17 01       	jmp    118197b <_end+0x117b963>
    2564:	53                   	push   rbx
    2565:	04 f4                	add    al,0xf4
    2567:	17                   	(bad)
    2568:	f8                   	clc
    2569:	17                   	(bad)
    256a:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
    256d:	02 00                	add    al,BYTE PTR [rax]
    256f:	04 f9                	add    al,0xf9
    2571:	17                   	(bad)
    2572:	81 18 06 a0 26 cc    	sbb    DWORD PTR [rax],0xcc26a006
    2578:	00 00                	add    BYTE PTR [rax],al
    257a:	00 00                	add    BYTE PTR [rax],al
    257c:	04 00                	add    al,0x0
    257e:	04 81                	add    al,0x81
    2580:	18 89 18 06 a0 c9    	sbb    BYTE PTR [rcx-0x365ff9e8],cl
    2586:	cb                   	retf
    2587:	00 00                	add    BYTE PTR [rax],al
    2589:	00 00                	add    BYTE PTR [rax],al
    258b:	02 00                	add    al,BYTE PTR [rax]
    258d:	04 89                	add    al,0x89
    258f:	18 95 18 06 a0 4a    	sbb    BYTE PTR [rbp+0x4aa00618],dl
    2595:	cc                   	int3
    2596:	00 00                	add    BYTE PTR [rax],al
    2598:	00 00                	add    BYTE PTR [rax],al
    259a:	02 00                	add    al,BYTE PTR [rax]
    259c:	04 95                	add    al,0x95
    259e:	18 a1 18 06 a0 02    	sbb    BYTE PTR [rcx+0x2a00618],ah
    25a4:	cc                   	int3
    25a5:	00 00                	add    BYTE PTR [rax],al
    25a7:	00 00                	add    BYTE PTR [rax],al
    25a9:	00 00                	add    BYTE PTR [rax],al
    25ab:	04 a6                	add    al,0xa6
    25ad:	18 e5                	sbb    ch,ah
    25af:	18 03                	sbb    BYTE PTR [rbx],al
    25b1:	91                   	xchg   ecx,eax
    25b2:	9c                   	pushf
    25b3:	7f 00                	jg     25b5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x225>
    25b5:	00 00                	add    BYTE PTR [rax],al
    25b7:	04 a6                	add    al,0xa6
    25b9:	18 e5                	sbb    ch,ah
    25bb:	18 01                	sbb    BYTE PTR [rcx],al
    25bd:	5e                   	pop    rsi
    25be:	00 00                	add    BYTE PTR [rax],al
    25c0:	00 00                	add    BYTE PTR [rax],al
    25c2:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    25c5:	18 da                	sbb    dl,bl
    25c7:	18 01                	sbb    BYTE PTR [rcx],al
    25c9:	50                   	push   rax
    25ca:	04 da                	add    al,0xda
    25cc:	18 dd                	sbb    ch,bl
    25ce:	1c 03                	sbb    al,0x3
    25d0:	91                   	xchg   ecx,eax
    25d1:	a8 7f                	test   al,0x7f
    25d3:	00 02                	add    BYTE PTR [rdx],al
    25d5:	00 04 e5 18 ed 18 06 	add    BYTE PTR [riz*8+0x618ed18],al
    25dc:	a0 26 cc 00 00 00 00 	movabs al,ds:0x400000000cc26
    25e3:	04 00 
    25e5:	04 ed                	add    al,0xed
    25e7:	18 f5                	sbb    ch,dh
    25e9:	18 06                	sbb    BYTE PTR [rsi],al
    25eb:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    25f2:	02 00 
    25f4:	04 f5                	add    al,0xf5
    25f6:	18 fd                	sbb    ch,bh
    25f8:	18 06                	sbb    BYTE PTR [rsi],al
    25fa:	a0 85 cc 00 00 00 00 	movabs al,ds:0x200000000cc85
    2601:	02 00 
    2603:	04 fd                	add    al,0xfd
    2605:	18 89 19 06 a0 02    	sbb    BYTE PTR [rcx+0x2a00619],cl
    260b:	cc                   	int3
    260c:	00 00                	add    BYTE PTR [rax],al
    260e:	00 00                	add    BYTE PTR [rax],al
    2610:	03 00                	add    eax,DWORD PTR [rax]
    2612:	04 89                	add    al,0x89
    2614:	19 c4                	sbb    esp,eax
    2616:	19 03                	sbb    DWORD PTR [rbx],eax
    2618:	91                   	xchg   ecx,eax
    2619:	9c                   	pushf
    261a:	7f 00                	jg     261c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x28c>
    261c:	03 00                	add    eax,DWORD PTR [rax]
    261e:	04 89                	add    al,0x89
    2620:	19 c4                	sbb    esp,eax
    2622:	19 01                	sbb    DWORD PTR [rcx],eax
    2624:	5e                   	pop    rsi
    2625:	00 00                	add    BYTE PTR [rax],al
    2627:	00 00                	add    BYTE PTR [rax],al
    2629:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    262c:	19 bb 19 01 50 04    	sbb    DWORD PTR [rbx+0x4500119],edi
    2632:	bb 19 97 1a 01       	mov    ebx,0x11a9719
    2637:	5d                   	pop    rbp
    2638:	00 02                	add    BYTE PTR [rdx],al
    263a:	00 04 c4             	add    BYTE PTR [rsp+rax*8],al
    263d:	19 cc                	sbb    esp,ecx
    263f:	19 06                	sbb    DWORD PTR [rsi],eax
    2641:	a0 26 cc 00 00 00 00 	movabs al,ds:0x400000000cc26
    2648:	04 00 
    264a:	04 cc                	add    al,0xcc
    264c:	19 d4                	sbb    esp,edx
    264e:	19 06                	sbb    DWORD PTR [rsi],eax
    2650:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    2657:	02 00 
    2659:	04 d4                	add    al,0xd4
    265b:	19 e0                	sbb    eax,esp
    265d:	19 06                	sbb    DWORD PTR [rsi],eax
    265f:	a0 59 cc 00 00 00 00 	movabs al,ds:0x200000000cc59
    2666:	02 00 
    2668:	04 e0                	add    al,0xe0
    266a:	19 ec                	sbb    esp,ebp
    266c:	19 06                	sbb    DWORD PTR [rsi],eax
    266e:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    2675:	03 00 
    2677:	04 ec                	add    al,0xec
    2679:	19 a7 1a 03 91 9c    	sbb    DWORD PTR [rdi-0x636efce6],esp
    267f:	7f 00                	jg     2681 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x2f1>
    2681:	03 00                	add    eax,DWORD PTR [rax]
    2683:	04 ec                	add    al,0xec
    2685:	19 a7 1a 01 5e 00    	sbb    DWORD PTR [rdi+0x5e011a],esp
    268b:	00 00                	add    BYTE PTR [rax],al
    268d:	00 00                	add    BYTE PTR [rax],al
    268f:	04 97                	add    al,0x97
    2691:	1a 9e 1a 01 50 04    	sbb    bl,BYTE PTR [rsi+0x450011a]
    2697:	9e                   	sahf
    2698:	1a fa                	sbb    bh,dl
    269a:	1a 01                	sbb    al,BYTE PTR [rcx]
    269c:	5d                   	pop    rbp
    269d:	00 02                	add    BYTE PTR [rdx],al
    269f:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    26a2:	1a af 1a 06 a0 26    	sbb    ch,BYTE PTR [rdi+0x26a0061a]
    26a8:	cc                   	int3
    26a9:	00 00                	add    BYTE PTR [rax],al
    26ab:	00 00                	add    BYTE PTR [rax],al
    26ad:	04 00                	add    al,0x0
    26af:	04 af                	add    al,0xaf
    26b1:	1a b7 1a 06 a0 c9    	sbb    dh,BYTE PTR [rdi-0x365ff9e6]
    26b7:	cb                   	retf
    26b8:	00 00                	add    BYTE PTR [rax],al
    26ba:	00 00                	add    BYTE PTR [rax],al
    26bc:	02 00                	add    al,BYTE PTR [rax]
    26be:	04 b7                	add    al,0xb7
    26c0:	1a c3                	sbb    al,bl
    26c2:	1a 06                	sbb    al,BYTE PTR [rsi]
    26c4:	a0 66 cc 00 00 00 00 	movabs al,ds:0x200000000cc66
    26cb:	02 00 
    26cd:	04 c3                	add    al,0xc3
    26cf:	1a cf                	sbb    cl,bh
    26d1:	1a 06                	sbb    al,BYTE PTR [rsi]
    26d3:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    26da:	03 00 
    26dc:	04 cf                	add    al,0xcf
    26de:	1a 8a 1b 03 91 9c    	sbb    cl,BYTE PTR [rdx-0x636efce5]
    26e4:	7f 00                	jg     26e6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x356>
    26e6:	03 00                	add    eax,DWORD PTR [rax]
    26e8:	04 cf                	add    al,0xcf
    26ea:	1a 8a 1b 01 5e 00    	sbb    cl,BYTE PTR [rdx+0x5e011b]
    26f0:	00 00                	add    BYTE PTR [rax],al
    26f2:	00 00                	add    BYTE PTR [rax],al
    26f4:	04 fa                	add    al,0xfa
    26f6:	1a 81 1b 01 50 04    	sbb    al,BYTE PTR [rcx+0x450011b]
    26fc:	81 1b dd 1b 01 5d    	sbb    DWORD PTR [rbx],0x5d011bdd
    2702:	00 02                	add    BYTE PTR [rdx],al
    2704:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
    2707:	1b 92 1b 06 a0 26    	sbb    edx,DWORD PTR [rdx+0x26a0061b]
    270d:	cc                   	int3
    270e:	00 00                	add    BYTE PTR [rax],al
    2710:	00 00                	add    BYTE PTR [rax],al
    2712:	04 00                	add    al,0x0
    2714:	04 92                	add    al,0x92
    2716:	1b 9a 1b 06 a0 c9    	sbb    ebx,DWORD PTR [rdx-0x365ff9e5]
    271c:	cb                   	retf
    271d:	00 00                	add    BYTE PTR [rax],al
    271f:	00 00                	add    BYTE PTR [rax],al
    2721:	02 00                	add    al,BYTE PTR [rax]
    2723:	04 9a                	add    al,0x9a
    2725:	1b a6 1b 06 a0 6f    	sbb    esp,DWORD PTR [rsi+0x6fa0061b]
    272b:	cc                   	int3
    272c:	00 00                	add    BYTE PTR [rax],al
    272e:	00 00                	add    BYTE PTR [rax],al
    2730:	02 00                	add    al,BYTE PTR [rax]
    2732:	04 a6                	add    al,0xa6
    2734:	1b b2 1b 06 a0 02    	sbb    esi,DWORD PTR [rdx+0x2a0061b]
    273a:	cc                   	int3
    273b:	00 00                	add    BYTE PTR [rax],al
    273d:	00 00                	add    BYTE PTR [rax],al
    273f:	03 00                	add    eax,DWORD PTR [rax]
    2741:	04 b2                	add    al,0xb2
    2743:	1b ed                	sbb    ebp,ebp
    2745:	1b 03                	sbb    eax,DWORD PTR [rbx]
    2747:	91                   	xchg   ecx,eax
    2748:	9c                   	pushf
    2749:	7f 00                	jg     274b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x3bb>
    274b:	03 00                	add    eax,DWORD PTR [rax]
    274d:	04 b2                	add    al,0xb2
    274f:	1b ed                	sbb    ebp,ebp
    2751:	1b 01                	sbb    eax,DWORD PTR [rcx]
    2753:	5e                   	pop    rsi
    2754:	00 00                	add    BYTE PTR [rax],al
    2756:	00 00                	add    BYTE PTR [rax],al
    2758:	00 04 dd 1b e4 1b 01 	add    BYTE PTR [rbx*8+0x11be41b],al
    275f:	50                   	push   rax
    2760:	04 e4                	add    al,0xe4
    2762:	1b bd 1c 01 5d 00    	sbb    edi,DWORD PTR [rbp+0x5d011c]
    2768:	02 00                	add    al,BYTE PTR [rax]
    276a:	04 ed                	add    al,0xed
    276c:	1b f5                	sbb    esi,ebp
    276e:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2770:	a0 26 cc 00 00 00 00 	movabs al,ds:0x400000000cc26
    2777:	04 00 
    2779:	04 f5                	add    al,0xf5
    277b:	1b fd                	sbb    edi,ebp
    277d:	1b 06                	sbb    eax,DWORD PTR [rsi]
    277f:	a0 c9 cb 00 00 00 00 	movabs al,ds:0x200000000cbc9
    2786:	02 00 
    2788:	04 fd                	add    al,0xfd
    278a:	1b 89 1c 06 a0 7c    	sbb    ecx,DWORD PTR [rcx+0x7ca0061c]
    2790:	cc                   	int3
    2791:	00 00                	add    BYTE PTR [rax],al
    2793:	00 00                	add    BYTE PTR [rax],al
    2795:	02 00                	add    al,BYTE PTR [rax]
    2797:	04 89                	add    al,0x89
    2799:	1c 95                	sbb    al,0x95
    279b:	1c 06                	sbb    al,0x6
    279d:	a0 02 cc 00 00 00 00 	movabs al,ds:0x300000000cc02
    27a4:	03 00 
    27a6:	04 95                	add    al,0x95
    27a8:	1c d0                	sbb    al,0xd0
    27aa:	1c 03                	sbb    al,0x3
    27ac:	91                   	xchg   ecx,eax
    27ad:	9c                   	pushf
    27ae:	7f 00                	jg     27b0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestDataj+0x420>
    27b0:	03 00                	add    eax,DWORD PTR [rax]
    27b2:	04 95                	add    al,0x95
    27b4:	1c d0                	sbb    al,0xd0
    27b6:	1c 01                	sbb    al,0x1
    27b8:	5e                   	pop    rsi
    27b9:	00 00                	add    BYTE PTR [rax],al
    27bb:	00 00                	add    BYTE PTR [rax],al
    27bd:	00 04 bd 1c c7 1c 01 	add    BYTE PTR [rdi*4+0x11cc71c],al
    27c4:	50                   	push   rax
    27c5:	04 c7                	add    al,0xc7
    27c7:	1c dd                	sbb    al,0xdd
    27c9:	1c 01                	sbb    al,0x1
    27cb:	5d                   	pop    rbp
    27cc:	00 02                	add    BYTE PTR [rdx],al
    27ce:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
    27d1:	1c d8                	sbb    al,0xd8
    27d3:	1c 06                	sbb    al,0x6
    27d5:	a0 26 cc 00 00 00 00 	movabs al,ds:0xcc26
    27dc:	00 00 
    27de:	00 00                	add    BYTE PTR [rax],al
    27e0:	00 00                	add    BYTE PTR [rax],al
    27e2:	04 b0                	add    al,0xb0
    27e4:	12 d3                	adc    dl,bl
    27e6:	12 01                	adc    al,BYTE PTR [rcx]
    27e8:	55                   	push   rbp
    27e9:	04 d3                	add    al,0xd3
    27eb:	12 85 13 01 56 04    	adc    al,BYTE PTR [rbp+0x4560113]
    27f1:	85 13                	test   DWORD PTR [rbx],edx
    27f3:	92                   	xchg   edx,eax
    27f4:	13 04 a3             	adc    eax,DWORD PTR [rbx+riz*4]
    27f7:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    27fa:	00 00                	add    BYTE PTR [rax],al
    27fc:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
    27ff:	12 bd 12 06 54 93    	adc    bh,BYTE PTR [rbp-0x6cabf9ee]
    2805:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    2808:	08 00                	or     BYTE PTR [rax],al
    280a:	00 00                	add    BYTE PTR [rax],al
    280c:	00 00                	add    BYTE PTR [rax],al
    280e:	00 00                	add    BYTE PTR [rax],al
    2810:	04 b0                	add    al,0xb0
    2812:	12 c7                	adc    al,bh
    2814:	12 06                	adc    al,BYTE PTR [rsi]
    2816:	52                   	push   rdx
    2817:	93                   	xchg   ebx,eax
    2818:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    281b:	08 04 c7             	or     BYTE PTR [rdi+rax*8],al
    281e:	12 cc                	adc    cl,ah
    2820:	12 06                	adc    al,BYTE PTR [rsi]
    2822:	5d                   	pop    rbp
    2823:	93                   	xchg   ebx,eax
    2824:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2827:	08 04 cc             	or     BYTE PTR [rsp+rcx*8],al
    282a:	12 87 13 06 5d 93    	adc    al,BYTE PTR [rdi-0x6ca2f9ed]
    2830:	08 5c 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],bl
    2834:	00 00                	add    BYTE PTR [rax],al
    2836:	00 00                	add    BYTE PTR [rax],al
    2838:	00 00                	add    BYTE PTR [rax],al
    283a:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
    283d:	12 e1                	adc    ah,cl
    283f:	12 01                	adc    al,BYTE PTR [rcx]
    2841:	59                   	pop    rcx
    2842:	04 e1                	add    al,0xe1
    2844:	12 8b 13 01 5e 04    	adc    cl,BYTE PTR [rbx+0x45e0113]
    284a:	8b 13                	mov    edx,DWORD PTR [rbx]
    284c:	92                   	xchg   edx,eax
    284d:	13 04 a3             	adc    eax,DWORD PTR [rbx+riz*4]
    2850:	01 59 9f             	add    DWORD PTR [rcx-0x61],ebx
    2853:	00 00                	add    BYTE PTR [rax],al
    2855:	00 00                	add    BYTE PTR [rax],al
    2857:	00 00                	add    BYTE PTR [rax],al
    2859:	00 04 f7             	add    BYTE PTR [rdi+rsi*8],al
    285c:	12 fb                	adc    bh,bl
    285e:	12 01                	adc    al,BYTE PTR [rcx]
    2860:	50                   	push   rax
    2861:	04 fb                	add    al,0xfb
    2863:	12 84 13 01 53 04 84 	adc    al,BYTE PTR [rbx+rdx*1-0x7bfbacff]
    286a:	13 91 13 01 55 00    	adc    edx,DWORD PTR [rcx+0x550113]
	...
    2880:	00 00                	add    BYTE PTR [rax],al
    2882:	04 f0                	add    al,0xf0
    2884:	22 c9                	and    cl,cl
    2886:	23 01                	and    eax,DWORD PTR [rcx]
    2888:	55                   	push   rbp
    2889:	04 c9                	add    al,0xc9
    288b:	23 ef                	and    ebp,edi
    288d:	24 01                	and    al,0x1
    288f:	51                   	push   rcx
    2890:	04 ef                	add    al,0xef
    2892:	24 81                	and    al,0x81
    2894:	25 04 a3 01 55       	and    eax,0x5501a304
    2899:	9f                   	lahf
    289a:	04 81                	add    al,0x81
    289c:	25 8d 25 01 51       	and    eax,0x5101258d
    28a1:	04 8d                	add    al,0x8d
    28a3:	25 9a 25 01 55       	and    eax,0x5501259a
    28a8:	04 9a                	add    al,0x9a
    28aa:	25 a9 25 01 51       	and    eax,0x510125a9
    28af:	04 a9                	add    al,0xa9
    28b1:	25 ac 25 04 a3       	and    eax,0xa30425ac
    28b6:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    28b9:	04 ac                	add    al,0xac
    28bb:	25 c6 25 01 55       	and    eax,0x550125c6
    28c0:	04 c6                	add    al,0xc6
    28c2:	25 cb 25 04 a3       	and    eax,0xa30425cb
    28c7:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    28da:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    28dd:	22 b3 23 01 54 04    	and    dh,BYTE PTR [rbx+0x4540123]
    28e3:	b3 23                	mov    bl,0x23
    28e5:	f3 24 01             	repz and al,0x1
    28e8:	52                   	push   rdx
    28e9:	04 f3                	add    al,0xf3
    28eb:	24 8d                	and    al,0x8d
    28ed:	25 04 a3 01 54       	and    eax,0x5401a304
    28f2:	9f                   	lahf
    28f3:	04 8d                	add    al,0x8d
    28f5:	25 a5 25 01 54       	and    eax,0x540125a5
    28fa:	04 a5                	add    al,0xa5
    28fc:	25 a9 25 01 52       	and    eax,0x520125a9
    2901:	04 a9                	add    al,0xa9
    2903:	25 ac 25 04 a3       	and    eax,0xa30425ac
    2908:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    290c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    290d:	25 bf 25 01 54       	and    eax,0x540125bf
    2912:	04 bf                	add    al,0xbf
    2914:	25 cb 25 04 a3       	and    eax,0xa30425cb
    2919:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    2931:	00 00                	add    BYTE PTR [rax],al
    2933:	04 f0                	add    al,0xf0
    2935:	22 bc 23 01 61 04 bc 	and    bh,BYTE PTR [rbx+riz*1-0x43fb9eff]
    293c:	23 ef                	and    ebp,edi
    293e:	24 01                	and    al,0x1
    2940:	64 04 ef             	fs add al,0xef
    2943:	24 81                	and    al,0x81
    2945:	25 06 a3 03 a5       	and    eax,0xa503a306
    294a:	11 2e                	adc    DWORD PTR [rsi],ebp
    294c:	9f                   	lahf
    294d:	04 81                	add    al,0x81
    294f:	25 8d 25 01 64       	and    eax,0x6401258d
    2954:	04 8d                	add    al,0x8d
    2956:	25 94 25 01 61       	and    eax,0x61012594
    295b:	04 94                	add    al,0x94
    295d:	25 9a 25 06 a3       	and    eax,0xa306259a
    2962:	03 a5 11 2e 9f 04    	add    esp,DWORD PTR [rbp+0x49f2e11]
    2968:	9a                   	(bad)
    2969:	25 a0 25 01 61       	and    eax,0x610125a0
    296e:	04 a0                	add    al,0xa0
    2970:	25 a9 25 01 64       	and    eax,0x640125a9
    2975:	04 a9                	add    al,0xa9
    2977:	25 ac 25 06 a3       	and    eax,0xa30625ac
    297c:	03 a5 11 2e 9f 04    	add    esp,DWORD PTR [rbp+0x49f2e11]
    2982:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2983:	25 ca 25 01 61       	and    eax,0x610125ca
    2988:	04 ca                	add    al,0xca
    298a:	25 cb 25 06 a3       	and    eax,0xa30625cb
    298f:	03 a5 11 2e 9f 00    	add    esp,DWORD PTR [rbp+0x9f2e11]
	...
    29a5:	04 96                	add    al,0x96
    29a7:	23 c9                	and    ecx,ecx
    29a9:	23 0a                	and    ecx,DWORD PTR [rdx]
    29ab:	9e                   	sahf
    29ac:	08 00                	or     BYTE PTR [rax],al
    29ae:	00 00                	add    BYTE PTR [rax],al
    29b0:	00 00                	add    BYTE PTR [rax],al
    29b2:	00 00                	add    BYTE PTR [rax],al
    29b4:	00 04 c9             	add    BYTE PTR [rcx+rcx*8],al
    29b7:	23 e4                	and    esp,esp
    29b9:	23 01                	and    eax,DWORD PTR [rcx]
    29bb:	61                   	(bad)
    29bc:	04 fe                	add    al,0xfe
    29be:	23 90 24 01 61 04    	and    edx,DWORD PTR [rax+0x4610124]
    29c4:	99                   	cdq
    29c5:	24 b0                	and    al,0xb0
    29c7:	24 01                	and    al,0x1
    29c9:	61                   	(bad)
    29ca:	04 b8                	add    al,0xb8
    29cc:	24 dc                	and    al,0xdc
    29ce:	24 01                	and    al,0x1
    29d0:	61                   	(bad)
    29d1:	04 f3                	add    al,0xf3
    29d3:	24 fb                	and    al,0xfb
    29d5:	24 06                	and    al,0x6
    29d7:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    29d8:	11 35 a8 2e 9f 04    	adc    DWORD PTR [rip+0x49f2ea8],esi        # 49f5886 <_end+0x49ef86e>
    29de:	fb                   	sti
    29df:	24 8d                	and    al,0x8d
    29e1:	25 01 61 04 8d       	and    eax,0x8d046101
    29e6:	25 a5 25 0a 9e       	and    eax,0x9e0a25a5
    29eb:	08 00                	or     BYTE PTR [rax],al
	...
    29f9:	04 96                	add    al,0x96
    29fb:	23 c9                	and    ecx,ecx
    29fd:	23 02                	and    eax,DWORD PTR [rdx]
    29ff:	30 9f 04 8d 25 a5    	xor    BYTE PTR [rdi-0x5ada72fc],bl
    2a05:	25 02 30 9f 00       	and    eax,0x9f3002
    2a0a:	00 00                	add    BYTE PTR [rax],al
    2a0c:	00 00                	add    BYTE PTR [rax],al
    2a0e:	00 00                	add    BYTE PTR [rax],al
    2a10:	04 e5                	add    al,0xe5
    2a12:	24 f3                	and    al,0xf3
    2a14:	24 01                	and    al,0x1
    2a16:	61                   	(bad)
    2a17:	04 98                	add    al,0x98
    2a19:	25 9a 25 01 61       	and    eax,0x6101259a
    2a1e:	04 a5                	add    al,0xa5
    2a20:	25 a9 25 01 61       	and    eax,0x610125a9
    2a25:	00 02                	add    BYTE PTR [rdx],al
    2a27:	00 00                	add    BYTE PTR [rax],al
    2a29:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
    2a2c:	25 bf 25 01 54       	and    eax,0x540125bf
    2a31:	04 bf                	add    al,0xbf
    2a33:	25 cb 25 04 a3       	and    eax,0xa30425cb
    2a38:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
    2a3c:	02 00                	add    al,BYTE PTR [rax]
    2a3e:	00 00                	add    BYTE PTR [rax],al
    2a40:	04 ac                	add    al,0xac
    2a42:	25 ca 25 01 61       	and    eax,0x610125ca
    2a47:	04 ca                	add    al,0xca
    2a49:	25 cb 25 06 a3       	and    eax,0xa30625cb
    2a4e:	03 a5 11 2e 9f 00    	add    esp,DWORD PTR [rbp+0x9f2e11]
	...
    2a60:	04 d0                	add    al,0xd0
    2a62:	25 87 26 01 55       	and    eax,0x55012687
    2a67:	04 87                	add    al,0x87
    2a69:	26 81 2b 04 a3 01 55 	es sub DWORD PTR [rbx],0x5501a304
    2a70:	9f                   	lahf
    2a71:	04 81                	add    al,0x81
    2a73:	2b a3 2b 01 55 04    	sub    esp,DWORD PTR [rbx+0x455012b]
    2a79:	a3 2b cd 2b 04 a3 01 	movabs ds:0x9f5501a3042bcd2b,eax
    2a80:	55 9f 
    2a82:	04 cd                	add    al,0xcd
    2a84:	2b e7                	sub    esp,edi
    2a86:	2b 01                	sub    eax,DWORD PTR [rcx]
    2a88:	55                   	push   rbp
    2a89:	04 e7                	add    al,0xe7
    2a8b:	2b ec                	sub    ebp,esp
    2a8d:	2b 04 a3             	sub    eax,DWORD PTR [rbx+riz*4]
    2a90:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    2aa7:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
    2aaa:	25 d7 26 01 61       	and    eax,0x610126d7
    2aaf:	04 d7                	add    al,0xd7
    2ab1:	26 81 2b 01 65 04 81 	es sub DWORD PTR [rbx],0x81046501
    2ab8:	2b a2 2b 01 61 04    	sub    esp,DWORD PTR [rdx+0x461012b]
    2abe:	a2 2b a3 2b 06 a3 03 	movabs ds:0x11a503a3062ba32b,al
    2ac5:	a5 11 
    2ac7:	35 9f 04 a3 2b       	xor    eax,0x2ba3049f
    2acc:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2acd:	2b 01                	sub    eax,DWORD PTR [rcx]
    2acf:	65 04 ad             	gs add al,0xad
    2ad2:	2b b9 2b 01 61 04    	sub    edi,DWORD PTR [rcx+0x461012b]
    2ad8:	b9 2b cc 2b 01       	mov    ecx,0x12bcc2b
    2add:	65 04 cc             	gs add al,0xcc
    2ae0:	2b cd                	sub    ecx,ebp
    2ae2:	2b 06                	sub    eax,DWORD PTR [rsi]
    2ae4:	a3 03 a5 11 35 9f 04 	movabs ds:0x2bcd049f3511a503,eax
    2aeb:	cd 2b 
    2aed:	eb 2b                	jmp    2b1a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x31a>
    2aef:	01 61 04             	add    DWORD PTR [rcx+0x4],esp
    2af2:	eb 2b                	jmp    2b1f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x31f>
    2af4:	ec                   	in     al,dx
    2af5:	2b 06                	sub    eax,DWORD PTR [rsi]
    2af7:	a3 03 a5 11 35 9f 00 	movabs ds:0x9f3511a503,eax
    2afe:	00 00 
	...
    2b0c:	04 f6                	add    al,0xf6
    2b0e:	25 d7 26 06 9e       	and    eax,0x9e0626d7
    2b13:	04 00                	add    al,0x0
    2b15:	00 00                	add    BYTE PTR [rax],al
    2b17:	00 04 d7             	add    BYTE PTR [rdi+rdx*8],al
    2b1a:	26 90                	es nop
    2b1c:	28 01                	sub    BYTE PTR [rcx],al
    2b1e:	69 04 cb 28 e6 28 01 	imul   eax,DWORD PTR [rbx+rcx*8],0x128e628
    2b25:	69 04 f6 28 e9 2a 01 	imul   eax,DWORD PTR [rsi+rsi*8],0x12ae928
    2b2c:	69 04 81 2b a3 2b 06 	imul   eax,DWORD PTR [rcx+rax*4],0x62ba32b
    2b33:	9e                   	sahf
    2b34:	04 00                	add    al,0x0
    2b36:	00 00                	add    BYTE PTR [rax],al
    2b38:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    2b3b:	2b ad 2b 01 69 04    	sub    ebp,DWORD PTR [rbp+0x469012b]
    2b41:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2b42:	2b b9 2b 06 9e 04    	sub    edi,DWORD PTR [rcx+0x49e062b]
    2b48:	00 00                	add    BYTE PTR [rax],al
    2b4a:	00 00                	add    BYTE PTR [rax],al
    2b4c:	00 00                	add    BYTE PTR [rax],al
    2b4e:	00 02                	add    BYTE PTR [rdx],al
    2b50:	00 00                	add    BYTE PTR [rax],al
    2b52:	00 02                	add    BYTE PTR [rdx],al
    2b54:	00 00                	add    BYTE PTR [rax],al
    2b56:	00 00                	add    BYTE PTR [rax],al
    2b58:	00 04 f6             	add    BYTE PTR [rsi+rsi*8],al
    2b5b:	25 d7 26 02 30       	and    eax,0x300226d7
    2b60:	9f                   	lahf
    2b61:	04 9f                	add    al,0x9f
    2b63:	2a a7 2a 01 51 04    	sub    ah,BYTE PTR [rdi+0x451012a]
    2b69:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2b6a:	2a aa 2a 03 70 01    	sub    ch,BYTE PTR [rdx+0x170032a]
    2b70:	9f                   	lahf
    2b71:	04 bf                	add    al,0xbf
    2b73:	2a c7                	sub    al,bh
    2b75:	2a 01                	sub    al,BYTE PTR [rcx]
    2b77:	50                   	push   rax
    2b78:	04 81                	add    al,0x81
    2b7a:	2b a3 2b 02 30 9f    	sub    esp,DWORD PTR [rbx-0x60cffdd5]
    2b80:	04 ad                	add    al,0xad
    2b82:	2b b9 2b 02 30 9f    	sub    edi,DWORD PTR [rcx-0x60cffdd5]
    2b88:	00 01                	add    BYTE PTR [rcx],al
    2b8a:	00 00                	add    BYTE PTR [rax],al
    2b8c:	00 01                	add    BYTE PTR [rcx],al
    2b8e:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    2b91:	2a a7 2a 0f 71 00    	sub    ah,BYTE PTR [rdi+0x710f2a]
    2b97:	0c ff                	or     al,0xff
    2b99:	ff                   	(bad)
    2b9a:	ff                   	(bad)
    2b9b:	ff 1a                	call   FWORD PTR [rdx]
    2b9d:	48 1e                	rex.W (bad)
    2b9f:	75 00                	jne    2ba1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3a1>
    2ba1:	22 23                	and    ah,BYTE PTR [rbx]
    2ba3:	10 04 a7             	adc    BYTE PTR [rdi+riz*4],al
    2ba6:	2a aa 2a 0f 70 01    	sub    ch,BYTE PTR [rdx+0x1700f2a]
    2bac:	0c ff                	or     al,0xff
    2bae:	ff                   	(bad)
    2baf:	ff                   	(bad)
    2bb0:	ff 1a                	call   FWORD PTR [rdx]
    2bb2:	48 1e                	rex.W (bad)
    2bb4:	75 00                	jne    2bb6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3b6>
    2bb6:	22 23                	and    ah,BYTE PTR [rbx]
    2bb8:	10 04 c3             	adc    BYTE PTR [rbx+rax*8],al
    2bbb:	2a c7                	sub    al,bh
    2bbd:	2a 0f                	sub    cl,BYTE PTR [rdi]
    2bbf:	70 00                	jo     2bc1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3c1>
    2bc1:	0c ff                	or     al,0xff
    2bc3:	ff                   	(bad)
    2bc4:	ff                   	(bad)
    2bc5:	ff 1a                	call   FWORD PTR [rdx]
    2bc7:	48 1e                	rex.W (bad)
    2bc9:	75 00                	jne    2bcb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDatajj+0x3cb>
    2bcb:	22 23                	and    ah,BYTE PTR [rbx]
    2bcd:	10 00                	adc    BYTE PTR [rax],al
    2bcf:	00 00                	add    BYTE PTR [rax],al
    2bd1:	00 00                	add    BYTE PTR [rax],al
    2bd3:	00 00                	add    BYTE PTR [rax],al
    2bd5:	04 e9                	add    al,0xe9
    2bd7:	2a 81 2b 01 69 04    	sub    al,BYTE PTR [rcx+0x469012b]
    2bdd:	96                   	xchg   esi,eax
    2bde:	2b a3 2b 01 69 04    	sub    esp,DWORD PTR [rbx+0x469012b]
    2be4:	b9 2b cc 2b 01       	mov    ecx,0x12bcc2b
    2be9:	69 00 02 00 00 00    	imul   eax,DWORD PTR [rax],0x2
    2bef:	04 cd                	add    al,0xcd
    2bf1:	2b eb                	sub    ebp,ebx
    2bf3:	2b 01                	sub    eax,DWORD PTR [rcx]
    2bf5:	61                   	(bad)
    2bf6:	04 eb                	add    al,0xeb
    2bf8:	2b ec                	sub    ebp,esp
    2bfa:	2b 06                	sub    eax,DWORD PTR [rsi]
    2bfc:	a3                   	.byte 0xa3
    2bfd:	03 a5 11 35 9f 00    	add    esp,DWORD PTR [rbp+0x9f3511]

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
   0:	26 00 00             	es add BYTE PTR [rax],al
   3:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 809 <__abi_tag+0x48d>
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 05 d4 11 00 00    	add    BYTE PTR [rip+0x11d4],al        # 11e5 <main+0x15>
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 00                	add    BYTE PTR [rax],al
  15:	04 00                	add    al,0x0
  17:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
  1a:	05 04 08 14 00       	add    eax,0x140804
  1f:	07                   	(bad)
  20:	d0 11                	rcl    BYTE PTR [rcx],1
  22:	00 00                	add    BYTE PTR [rax],al
  24:	00 00                	add    BYTE PTR [rax],al
  26:	00 00                	add    BYTE PTR [rax],al
  28:	33 00                	xor    eax,DWORD PTR [rax]
  2a:	0b 01                	or     eax,DWORD PTR [rcx]
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	05 00 08 00 00       	add    eax,0x800
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 04 83             	add    BYTE PTR [rbx+rax*4],al
  38:	01 90 01 04 90 01    	add    DWORD PTR [rax+0x1900401],edx
  3e:	95                   	xchg   ebp,eax
  3f:	01 00                	add    DWORD PTR [rax],eax
  41:	04 9f                	add    al,0x9f
  43:	01 a2 01 04 a6 01    	add    DWORD PTR [rdx+0x1a60401],esp
  49:	ab                   	stos   DWORD PTR es:[rdi],eax
  4a:	01 04 ae             	add    DWORD PTR [rsi+rbp*4],eax
  4d:	01 b6 01 04 b9 01    	add    DWORD PTR [rsi+0x1b90401],esi
  53:	c0 01 04             	rol    BYTE PTR [rcx],0x4
  56:	c3                   	ret
  57:	01 d0                	add    eax,edx
  59:	01 00                	add    DWORD PTR [rax],eax
  5b:	04 de                	add    al,0xde
  5d:	01 de                	add    esi,ebx
  5f:	01 04 e3             	add    DWORD PTR [rbx+riz*8],eax
  62:	01 ed                	add    ebp,ebp
  64:	01 04 f0             	add    DWORD PTR [rax+rsi*8],eax
  67:	01 f2                	add    edx,esi
  69:	01 04 f6             	add    DWORD PTR [rsi+rsi*8],eax
  6c:	01 f9                	add    ecx,edi
  6e:	01 04 fc             	add    DWORD PTR [rsp+rdi*8],eax
  71:	01 81 02 00 04 87    	add    DWORD PTR [rcx-0x78fbfffe],eax
  77:	08 8c 08 04 98 08 9a 	or     BYTE PTR [rax+rcx*1-0x65f767fc],cl
  7e:	08 04 ac             	or     BYTE PTR [rsp+rbp*4],al
  81:	08 b2 08 04 c9 08    	or     BYTE PTR [rdx+0x8c90408],dh
  87:	c9                   	leave
  88:	08 00                	or     BYTE PTR [rax],al
  8a:	04 8c                	add    al,0x8c
  8c:	08 94 08 04 94 08 94 	or     BYTE PTR [rax+rcx*1-0x6bf76bfc],dl
  93:	08 00                	or     BYTE PTR [rax],al
  95:	04 8c                	add    al,0x8c
  97:	08 94 08 04 94 08 94 	or     BYTE PTR [rax+rcx*1-0x6bf76bfc],dl
  9e:	08 00                	or     BYTE PTR [rax],al
  a0:	04 94                	add    al,0x94
  a2:	08 94 08 04 9a 08 a0 	or     BYTE PTR [rax+rcx*1-0x5ff765fc],dl
  a9:	08 00                	or     BYTE PTR [rax],al
  ab:	04 a0                	add    al,0xa0
  ad:	08 a6 08 04 c4 08    	or     BYTE PTR [rsi+0x8c40408],ah
  b3:	c9                   	leave
  b4:	08 00                	or     BYTE PTR [rax],al
  b6:	04 a6                	add    al,0xa6
  b8:	08 a6 08 04 c4 08    	or     BYTE PTR [rsi+0x8c40408],ah
  be:	c9                   	leave
  bf:	08 00                	or     BYTE PTR [rax],al
  c1:	04 b2                	add    al,0xb2
  c3:	08 b5 08 04 c9 08    	or     BYTE PTR [rbp+0x8c90408],dh
  c9:	cf                   	iret
  ca:	08 00                	or     BYTE PTR [rax],al
  cc:	04 b5                	add    al,0xb5
  ce:	08 bb 08 04 c9 08    	or     BYTE PTR [rbx+0x8c90408],bh
  d4:	c9                   	leave
  d5:	08 00                	or     BYTE PTR [rax],al
  d7:	04 cf                	add    al,0xcf
  d9:	08 d1                	or     cl,dl
  db:	08 04 d4             	or     BYTE PTR [rsp+rdx*8],al
  de:	08 da                	or     dl,bl
  e0:	08 00                	or     BYTE PTR [rax],al
  e2:	04 aa                	add    al,0xaa
  e4:	0b b0 0b 04 b0 0b    	or     esi,DWORD PTR [rax+0xbb0040b]
  ea:	ae                   	scas   al,BYTE PTR es:[rdi]
  eb:	0c 00                	or     al,0x0
  ed:	04 d2                	add    al,0xd2
  ef:	0b d2                	or     edx,edx
  f1:	0b 04 d5 0b ae 0c 00 	or     eax,DWORD PTR [rdx*8+0xcae0b]
  f8:	04 be                	add    al,0xbe
  fa:	0c c9                	or     al,0xc9
  fc:	0c 04                	or     al,0x4
  fe:	f5                   	cmc
  ff:	0c ac                	or     al,0xac
 101:	0e                   	(bad)
 102:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
 105:	0d fd 0d 04 81       	or     eax,0x81040dfd
 10a:	0e                   	(bad)
 10b:	8c 0e                	mov    WORD PTR [rsi],cs
 10d:	00 04 a2             	add    BYTE PTR [rdx+riz*4],al
 110:	0d a8 0d 04 c7       	or     eax,0xc7040da8
 115:	0d c9 0d 04 de       	or     eax,0xde040dc9
 11a:	0d f9 0d 00 04       	or     eax,0x4000df9
 11f:	d2 0c d6             	ror    BYTE PTR [rsi+rdx*8],cl
 122:	0c 04                	or     al,0x4
 124:	e5 0c                	in     eax,0xc
 126:	e8 0c 04 ac 0e       	call   eac0537 <_end+0xeaba51f>
 12b:	dd 0e                	fisttp QWORD PTR [rsi]
 12d:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
 130:	0e                   	(bad)
 131:	b8 0e 04 bc 0e       	mov    eax,0xebc040e
 136:	d8 0e                	fmul   DWORD PTR [rsi]
 138:	00 6c 00 00          	add    BYTE PTR [rax+rax*1+0x0],ch
 13c:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 942 <__abi_tag+0x5c6>
 142:	00 00                	add    BYTE PTR [rax],al
 144:	00 04 24             	add    BYTE PTR [rsp],al
 147:	2a 04 37             	sub    al,BYTE PTR [rdi+rsi*1]
 14a:	3c 00                	cmp    al,0x0
 14c:	04 2a                	add    al,0x2a
 14e:	2a 04 37             	sub    al,BYTE PTR [rdi+rsi*1]
 151:	3c 00                	cmp    al,0x0
 153:	04 2a                	add    al,0x2a
 155:	2f                   	(bad)
 156:	04 35                	add    al,0x35
 158:	37                   	(bad)
 159:	04 48                	add    al,0x48
 15b:	4e 04 63             	rex.WRX add al,0x63
 15e:	63 00                	movsxd eax,DWORD PTR [rax]
 160:	04 2f                	add    al,0x2f
 162:	35 04 42 48 04       	xor    eax,0x4484204
 167:	50                   	push   rax
 168:	55                   	push   rbp
 169:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
 16c:	35 04 42 48 00       	xor    eax,0x484204
 171:	04 48                	add    al,0x48
 173:	48 04 50             	rex.W add al,0x50
 176:	55                   	push   rbp
 177:	00 04 4e             	add    BYTE PTR [rsi+rcx*2],al
 17a:	50                   	push   rax
 17b:	04 55                	add    al,0x55
 17d:	5b                   	pop    rbx
 17e:	04 63                	add    al,0x63
 180:	63 00                	movsxd eax,DWORD PTR [rax]
 182:	04 55                	add    al,0x55
 184:	55                   	push   rbp
 185:	04 5d                	add    al,0x5d
 187:	63 00                	movsxd eax,DWORD PTR [rax]
 189:	04 5b                	add    al,0x5b
 18b:	5d                   	pop    rbp
 18c:	04 63                	add    al,0x63
 18e:	63 04 65 6b 00 04 a4 	movsxd eax,DWORD PTR [riz*2-0x5bfbff95]
 195:	01 96 05 04 a0 05    	add    DWORD PTR [rsi+0x5a00405],edx
 19b:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 19c:	05 00 04 b4 05       	add    eax,0x5b40400
 1a1:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 1a2:	07                   	(bad)
 1a3:	04 b0                	add    al,0xb0
 1a5:	07                   	(bad)
 1a6:	b2 07                	mov    dl,0x7
 1a8:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
 1ab:	00 00                	add    BYTE PTR [rax],al
 1ad:	05 00 08 00 00       	add    eax,0x800
 1b2:	00 00                	add    BYTE PTR [rax],al
 1b4:	00 04 47             	add    BYTE PTR [rdi+rax*2],al
 1b7:	4c 04 5a             	rex.WR add al,0x5a
 1ba:	62                   	(bad)
 1bb:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
 1be:	62                   	(bad)
 1bf:	04 70                	add    al,0x70
 1c1:	9a                   	(bad)
 1c2:	01 00                	add    DWORD PTR [rax],eax
 1c4:	04 bb                	add    al,0xbb
 1c6:	01 c7                	add    edi,eax
 1c8:	01 04 c7             	add    DWORD PTR [rdi+rax*8],eax
 1cb:	01 fc                	add    esp,edi
 1cd:	01 00                	add    DWORD PTR [rax],eax
 1cf:	04 ae                	add    al,0xae
 1d1:	03 b9 03 04 bc 03    	add    edi,DWORD PTR [rcx+0x3bc0403]
 1d7:	c1 03 00             	rol    DWORD PTR [rbx],0x0
 1da:	04 c1                	add    al,0xc1
 1dc:	03 c1                	add    eax,ecx
 1de:	03 04 c4             	add    eax,DWORD PTR [rsp+rax*8]
 1e1:	03 ca                	add    ecx,edx
 1e3:	03 04 d0             	add    eax,DWORD PTR [rax+rdx*8]
 1e6:	03 d3                	add    edx,ebx
 1e8:	03 04 d7             	add    eax,DWORD PTR [rdi+rdx*8]
 1eb:	03 dc                	add    ebx,esp
 1ed:	03 00                	add    eax,DWORD PTR [rax]
 1ef:	04 e4                	add    al,0xe4
 1f1:	03 ee                	add    ebp,esi
 1f3:	03 04 f2             	add    eax,DWORD PTR [rdx+rsi*8]
 1f6:	03 93 04 00 04 d1    	add    edx,DWORD PTR [rbx-0x2efbfffc]
 1fc:	04 82                	add    al,0x82
 1fe:	05 04 84 05 8c       	add    eax,0x8c058404
 203:	05 04 a0 05 a0       	add    eax,0xa005a004
 208:	05 00 04 d1 04       	add    eax,0x4d10400
 20d:	da 04 04             	fiadd  DWORD PTR [rsp+rax*1]
 210:	da 04 82             	fiadd  DWORD PTR [rdx+rax*4]
 213:	05 04 84 05 8c       	add    eax,0x8c058404
 218:	05 04 a0 05 a0       	add    eax,0xa005a004
 21d:	05 00 04 96 06       	add    eax,0x6960400
 222:	a0 06 04 af 06 c6 06 	movabs al,ds:0x1b0006c606af0406
 229:	00 1b 
 22b:	00 00                	add    BYTE PTR [rax],al
 22d:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # a33 <__abi_tag+0x6b7>
 233:	00 00                	add    BYTE PTR [rax],al
 235:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
 238:	76 04                	jbe    23e <__abi_tag-0x13e>
 23a:	7a 82                	jp     1be <__abi_tag-0x1be>
 23c:	01 00                	add    DWORD PTR [rax],eax
 23e:	04 b0                	add    al,0xb0
 240:	02 b5 02 04 b8 02    	add    dh,BYTE PTR [rbp+0x2b80402]
 246:	bd 02 00 e0 01       	mov    ebp,0x1e00002
 24b:	00 00                	add    BYTE PTR [rax],al
 24d:	05 00 08 00 00       	add    eax,0x800
 252:	00 00                	add    BYTE PTR [rax],al
 254:	00 04 b1             	add    BYTE PTR [rcx+rsi*4],al
 257:	01 b8 01 04 bc 01    	add    DWORD PTR [rax+0x1bc0401],edi
 25d:	c6 01 04             	mov    BYTE PTR [rcx],0x4
 260:	dc 01                	fadd   QWORD PTR [rcx]
 262:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 263:	02 00                	add    al,BYTE PTR [rax]
 265:	04 dc                	add    al,0xdc
 267:	01 f2                	add    edx,esi
 269:	01 04 f2             	add    DWORD PTR [rdx+rsi*8],eax
 26c:	01 f2                	add    edx,esi
 26e:	01 04 f6             	add    DWORD PTR [rsi+rsi*8],eax
 271:	01 82 02 00 04 ad    	add    DWORD PTR [rdx-0x52fbfffe],eax
 277:	02 be 02 04 c7 02    	add    bh,BYTE PTR [rsi+0x2c70402]
 27d:	cc                   	int3
 27e:	02 00                	add    al,BYTE PTR [rax]
 280:	04 cc                	add    al,0xcc
 282:	02 c9                	add    cl,cl
 284:	07                   	(bad)
 285:	04 90                	add    al,0x90
 287:	08 bf 08 00 04 cc    	or     BYTE PTR [rdi-0x33fbfff8],bh
 28d:	02 f5                	add    dh,ch
 28f:	02 04 87             	add    al,BYTE PTR [rdi+rax*4]
 292:	03 ae 07 04 a9 08    	add    ebp,DWORD PTR [rsi+0x8a90407]
 298:	b0 08                	mov    al,0x8
 29a:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
 29d:	02 f5                	add    dh,ch
 29f:	02 04 87             	add    al,BYTE PTR [rdi+rax*4]
 2a2:	03 99 05 04 c4 05    	add    ebx,DWORD PTR [rcx+0x5c40405]
 2a8:	cd 06                	int    0x6
 2aa:	04 cf                	add    al,0xcf
 2ac:	06                   	(bad)
 2ad:	e2 06                	loop   2b5 <__abi_tag-0xc7>
 2af:	04 e5                	add    al,0xe5
 2b1:	06                   	(bad)
 2b2:	f1                   	int1
 2b3:	06                   	(bad)
 2b4:	04 f5                	add    al,0xf5
 2b6:	06                   	(bad)
 2b7:	f9                   	stc
 2b8:	06                   	(bad)
 2b9:	04 fc                	add    al,0xfc
 2bb:	06                   	(bad)
 2bc:	91                   	xchg   ecx,eax
 2bd:	07                   	(bad)
 2be:	04 95                	add    al,0x95
 2c0:	07                   	(bad)
 2c1:	ae                   	scas   al,BYTE PTR es:[rdi]
 2c2:	07                   	(bad)
 2c3:	00 04 bb             	add    BYTE PTR [rbx+rdi*4],al
 2c6:	07                   	(bad)
 2c7:	c9                   	leave
 2c8:	07                   	(bad)
 2c9:	04 98                	add    al,0x98
 2cb:	08 a5 08 04 b0 08    	or     BYTE PTR [rbp+0x8b00408],ah
 2d1:	bf 08 00 04 c9       	mov    edi,0xc9040008
 2d6:	07                   	(bad)
 2d7:	da 07                	fiadd  DWORD PTR [rdi]
 2d9:	04 de                	add    al,0xde
 2db:	07                   	(bad)
 2dc:	e3 07                	jrcxz  2e5 <__abi_tag-0x97>
 2de:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
 2e1:	0b 8a 0c 04 8e 0c    	or     ecx,DWORD PTR [rdx+0xc8e040c]
 2e7:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 2e8:	0c 04                	or     al,0x4
 2ea:	a9 0c bb 0c 00       	test   eax,0xcbb0c
 2ef:	04 ff                	add    al,0xff
 2f1:	0b ff                	or     edi,edi
 2f3:	0b 04 ff             	or     eax,DWORD PTR [rdi+rdi*8]
 2f6:	0b 86 0c 04 8e 0c    	or     eax,DWORD PTR [rsi+0xc8e040c]
 2fc:	94                   	xchg   esp,eax
 2fd:	0c 00                	or     al,0x0
 2ff:	04 ff                	add    al,0xff
 301:	0b ff                	or     edi,edi
 303:	0b 04 ff             	or     eax,DWORD PTR [rdi+rdi*8]
 306:	0b 86 0c 04 8e 0c    	or     eax,DWORD PTR [rsi+0xc8e040c]
 30c:	94                   	xchg   esp,eax
 30d:	0c 00                	or     al,0x0
 30f:	04 ff                	add    al,0xff
 311:	0b ff                	or     edi,edi
 313:	0b 04 94             	or     eax,DWORD PTR [rsp+rdx*4]
 316:	0c a5                	or     al,0xa5
 318:	0c 04                	or     al,0x4
 31a:	a9 0c b0 0c 00       	test   eax,0xcb00c
 31f:	04 ce                	add    al,0xce
 321:	0c d1                	or     al,0xd1
 323:	0c 04                	or     al,0x4
 325:	d6                   	(bad)
 326:	0c f0                	or     al,0xf0
 328:	0c 04                	or     al,0x4
 32a:	8b 11                	mov    edx,DWORD PTR [rcx]
 32c:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 32d:	11 00                	adc    DWORD PTR [rax],eax
 32f:	04 f0                	add    al,0xf0
 331:	0c f0                	or     al,0xf0
 333:	0c 04                	or     al,0x4
 335:	f4                   	hlt
 336:	0c bf                	or     al,0xbf
 338:	0d 04 a5 11 a5       	or     eax,0xa511a504
 33d:	11 00                	adc    DWORD PTR [rax],eax
 33f:	04 f8                	add    al,0xf8
 341:	0c 8c                	or     al,0x8c
 343:	0d 04 92 0d 97       	or     eax,0x970d9204
 348:	0d 04 9b 0d a8       	or     eax,0xa80d9b04
 34d:	0d 00 04 d6 0d       	or     eax,0xdd60400
 352:	ce                   	(bad)
 353:	0f 04                	(bad)
 355:	d5 0f da 0f          	{rex2 0xf} fimul DWORD PTR [r15]
 359:	04 a9                	add    al,0xa9
 35b:	11 ae 11 04 b2 11    	adc    DWORD PTR [rsi+0x11b20411],ebp
 361:	eb 11                	jmp    374 <__abi_tag-0x8>
 363:	04 97                	add    al,0x97
 365:	12 a9 12 00 04 f8    	adc    ch,BYTE PTR [rcx-0x7fbffee]
 36b:	0d a4 0f 04 c5       	or     eax,0xc5040fa4
 370:	11 cc                	adc    esp,ecx
 372:	11 00                	adc    DWORD PTR [rax],eax
 374:	04 b8                	add    al,0xb8
 376:	0f ca                	bswap  edx
 378:	0f 04                	(bad)
 37a:	bc 11 c1 11 04       	mov    esp,0x411c111
 37f:	97                   	xchg   edi,eax
 380:	12 a9 12 00 04 ce    	adc    ch,BYTE PTR [rcx-0x31fbffee]
 386:	0f d5 0f             	pmullw mm1,QWORD PTR [rdi]
 389:	04 da                	add    al,0xda
 38b:	0f f5 0f             	pmaddwd mm1,QWORD PTR [rdi]
 38e:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
 391:	10 90 10 04 9d 10    	adc    BYTE PTR [rax+0x109d0410],dl
 397:	ae                   	scas   al,BYTE PTR es:[rdi]
 398:	10 04 ba             	adc    BYTE PTR [rdx+rdi*4],al
 39b:	10 bf 10 00 04 af    	adc    BYTE PTR [rdi-0x50fbfff0],bh
 3a1:	17                   	(bad)
 3a2:	ed                   	in     eax,dx
 3a3:	17                   	(bad)
 3a4:	04 f4                	add    al,0xf4
 3a6:	17                   	(bad)
 3a7:	f9                   	stc
 3a8:	17                   	(bad)
 3a9:	00 04 ed 17 f4 17 04 	add    BYTE PTR [rbp*8+0x417f417],al
 3b0:	f9                   	stc
 3b1:	17                   	(bad)
 3b2:	81 18 00 04 96 23    	sbb    DWORD PTR [rax],0x23960400
 3b8:	b8 23 04 d0 23       	mov    eax,0x23d00423
 3bd:	d4                   	(bad)
 3be:	24 04                	and    al,0x4
 3c0:	9a                   	(bad)
 3c1:	25 9c 25 00 04       	and    eax,0x400259c
 3c6:	e5 24                	in     eax,0x24
 3c8:	f3 24 04             	repz and al,0x4
 3cb:	98                   	cwde
 3cc:	25 9a 25 04 a5       	and    eax,0xa504259a
 3d1:	25 ac 25 00 04       	and    eax,0x40025ac
 3d6:	f6 25 a1 26 04 b4    	mul    BYTE PTR [rip+0xffffffffb40426a1]        # ffffffffb4042a7d <_end+0xffffffffb403ca65>
 3dc:	26 dc 2a             	es fsubr QWORD PTR [rdx]
 3df:	04 ad                	add    al,0xad
 3e1:	2b af 2b 00 04 84    	sub    ebp,DWORD PTR [rdi-0x7bfbffd5]
 3e7:	26 a1 26 04 b4 26 cb 	es movabs eax,ds:0xf60428cb26b40426
 3ee:	28 04 f6 
 3f1:	28 ff                	sub    bh,bh
 3f3:	29 04 81             	sub    DWORD PTR [rcx+rax*4],eax
 3f6:	2a 90 2a 04 93 2a    	sub    dl,BYTE PTR [rax+0x2a93042a]
 3fc:	9f                   	lahf
 3fd:	2a 04 a3             	sub    al,BYTE PTR [rbx+riz*4]
 400:	2a a7 2a 04 aa 2a    	sub    ah,BYTE PTR [rdi+0x2aaa042a]
 406:	bf 2a 04 c3 2a       	mov    edi,0x2ac3042a
 40b:	dc 2a                	fsubr  QWORD PTR [rdx]
 40d:	00 04 e9             	add    BYTE PTR [rcx+rbp*8],al
 410:	2a f0                	sub    dh,al
 412:	2a 04 f4             	sub    al,BYTE PTR [rsp+rsi*8]
 415:	2a f9                	sub    bh,cl
 417:	2a 04 96             	sub    al,BYTE PTR [rsi+rdx*4]
 41a:	2b 96 2b 04 9d 2b    	sub    edx,DWORD PTR [rsi+0x2b9d042b]
 420:	a2 2b 04 bd 2b c1 2b 	movabs ds:0xc8042bc12bbd042b,al
 427:	04 c8 
 429:	2b cd                	sub    ecx,ebp
 42b:	2b 00                	sub    eax,DWORD PTR [rax]
